<?xml version="1.0" ?>
<freeconf-help>
	<container name="kernel-config">
		<label>Linux Kernel 4.8.1 - Psychotic Stoned Sheep</label>
		<entry name="_64BIT">
			<label>64-bit kernel&quot; if ARCH = &quot;x86</label>
			<help>Say yes to build a 64-bit kernel - formerly known as x86_64
Say no to build a 32-bit kernel - formerly known as i386</help>
		</entry>
		<entry name="X86_32"/>
		<entry name="X86_64"/>
		<entry name="X86"/>
		<entry name="INSTRUCTION_DECODER"/>
		<entry name="OUTPUT_FORMAT"/>
		<entry name="ARCH_DEFCONFIG"/>
		<entry name="LOCKDEP_SUPPORT"/>
		<entry name="STACKTRACE_SUPPORT"/>
		<entry name="MMU"/>
		<entry name="SBUS"/>
		<entry name="NEED_DMA_MAP_STATE"/>
		<entry name="NEED_SG_DMA_LENGTH"/>
		<entry name="GENERIC_ISA_DMA"/>
		<entry name="GENERIC_BUG"/>
		<entry name="GENERIC_BUG_RELATIVE_POINTERS"/>
		<entry name="GENERIC_HWEIGHT"/>
		<entry name="ARCH_MAY_HAVE_PC_FDC"/>
		<entry name="RWSEM_XCHGADD_ALGORITHM"/>
		<entry name="GENERIC_CALIBRATE_DELAY"/>
		<entry name="ARCH_HAS_CPU_RELAX"/>
		<entry name="ARCH_HAS_CACHE_LINE_SIZE"/>
		<entry name="HAVE_SETUP_PER_CPU_AREA"/>
		<entry name="NEED_PER_CPU_EMBED_FIRST_CHUNK"/>
		<entry name="NEED_PER_CPU_PAGE_FIRST_CHUNK"/>
		<entry name="ARCH_HIBERNATION_POSSIBLE"/>
		<entry name="ARCH_SUSPEND_POSSIBLE"/>
		<entry name="ARCH_WANT_HUGE_PMD_SHARE"/>
		<entry name="ARCH_WANT_GENERAL_HUGETLB"/>
		<entry name="ZONE_DMA32"/>
		<entry name="AUDIT_ARCH"/>
		<entry name="ARCH_SUPPORTS_OPTIMIZED_INLINING"/>
		<entry name="ARCH_SUPPORTS_DEBUG_PAGEALLOC"/>
		<entry name="HAVE_INTEL_TXT"/>
		<entry name="X86_32_SMP"/>
		<entry name="X86_64_SMP"/>
		<entry name="X86_32_LAZY_GS"/>
		<entry name="ARCH_SUPPORTS_UPROBES"/>
		<entry name="FIX_EARLYCON_MEM"/>
		<entry name="DEBUG_RODATA"/>
		<entry name="PGTABLE_LEVELS"/>
		<entry name="ARCH"/>
		<entry name="KERNELVERSION"/>
		<entry name="DEFCONFIG_LIST"/>
		<entry name="CONSTRUCTORS"/>
		<entry name="IRQ_WORK"/>
		<entry name="BUILDTIME_EXTABLE_SORT"/>
		<container name="General_setup">
			<label>General setup</label>
			<entry name="BROKEN"/>
			<entry name="BROKEN_ON_SMP"/>
			<entry name="INIT_ENV_ARG_LIMIT">
				<help>Maximum of each of the number of arguments and environment
variables passed to init from the kernel command line.</help>
			</entry>
			<entry name="CROSS_COMPILE">
				<label>Cross-compiler tool prefix</label>
				<help>Same as running 'make CROSS_COMPILE=prefix-' but stored for
default make runs in this kernel build directory.  You don't
need to set this unless you want the configured kernel build
directory to select the cross-compiler automatically.</help>
			</entry>
			<entry name="COMPILE_TEST">
				<label>Compile also drivers which will not load</label>
				<help>Some drivers can be compiled on a different platform than they are
intended to be run on. Despite they cannot be loaded there (or even
when they load they cannot be used due to missing HW support),
developers still, opposing to distributors, might want to build such
drivers to compile-test them.

If you are a developer and want to build everything available, say Y
here. If you are a user/distributor, say N here to exclude useless
drivers to be distributed.</help>
			</entry>
			<entry name="LOCALVERSION">
				<label>Local version - append to kernel release</label>
				<help>Append an extra string to the end of your kernel version.
This will show up when you type uname, for example.
The string you set here will be appended after the contents of
any files with a filename matching localversion* in your
object and source tree, in that order.  Your total string can
be a maximum of 64 characters.</help>
			</entry>
			<entry name="LOCALVERSION_AUTO">
				<label>Automatically append version information to the version string</label>
				<help>This will try to automatically determine if the current tree is a
release tree by looking for git tags that belong to the current
top of tree revision.

A string of the format -gxxxxxxxx will be added to the localversion
if a git-based tree is found.  The string generated by this will be
appended after any matching localversion* files, and after the value
set in CONFIG_LOCALVERSION.

(The actual string used here is the first eight characters produced
by running the command:

$ git rev-parse --verify HEAD

which is done within the script &quot;scripts/setlocalversion&quot;.)</help>
			</entry>
			<entry name="HAVE_KERNEL_GZIP"/>
			<entry name="HAVE_KERNEL_BZIP2"/>
			<entry name="HAVE_KERNEL_LZMA"/>
			<entry name="HAVE_KERNEL_XZ"/>
			<entry name="HAVE_KERNEL_LZO"/>
			<entry name="HAVE_KERNEL_LZ4"/>
			<entry name="KERNEL_GZIP">
				<label>Gzip</label>
				<help>The old and tried gzip compression. It provides a good balance
between compression ratio and decompression speed.</help>
			</entry>
			<entry name="KERNEL_BZIP2">
				<label>Bzip2</label>
				<help>Its compression ratio and speed is intermediate.
Decompression speed is slowest among the choices.  The kernel
size is about 10% smaller with bzip2, in comparison to gzip.
Bzip2 uses a large amount of memory. For modern kernels you
will need at least 8MB RAM or more for booting.</help>
			</entry>
			<entry name="KERNEL_LZMA">
				<label>LZMA</label>
				<help>This compression algorithm's ratio is best.  Decompression speed
is between gzip and bzip2.  Compression is slowest.
The kernel size is about 33% smaller with LZMA in comparison to gzip.</help>
			</entry>
			<entry name="KERNEL_XZ">
				<label>XZ</label>
				<help>XZ uses the LZMA2 algorithm and instruction set specific
BCJ filters which can improve compression ratio of executable
code. The size of the kernel is about 30% smaller with XZ in
comparison to gzip. On architectures for which there is a BCJ
filter (i386, x86_64, ARM, IA-64, PowerPC, and SPARC), XZ
will create a few percent smaller kernel than plain LZMA.

The speed is about the same as with LZMA: The decompression
speed of XZ is better than that of bzip2 but worse than gzip
and LZO. Compression is slow.</help>
			</entry>
			<entry name="KERNEL_LZO">
				<label>LZO</label>
				<help>Its compression ratio is the poorest among the choices. The kernel
size is about 10% bigger than gzip; however its speed
(both compression and decompression) is the fastest.</help>
			</entry>
			<entry name="KERNEL_LZ4">
				<label>LZ4</label>
				<help>LZ4 is an LZ77-type compressor with a fixed, byte-oriented encoding.
A preliminary version of LZ4 de/compression tool is available at
&lt;https://code.google.com/p/lz4/&gt;.

Its compression ratio is worse than LZO. The size of the kernel
is about 8% bigger than LZO. But the decompression speed is
faster than LZO.</help>
			</entry>
			<entry name="DEFAULT_HOSTNAME">
				<label>Default hostname</label>
				<help>This option determines the default system hostname before userspace
calls sethostname(2). The kernel traditionally uses &quot;(none)&quot; here,
but you may wish to use a different default here to make a minimal
system more usable with less configuration.</help>
			</entry>
			<entry name="VERSION_SIGNATURE">
				<label>Arbitrary version signature</label>
				<help>This string will be created in a file, /proc/version_signature. It
is useful in determining arbitrary data about your kernel. For instance,
if you have several kernels of the same version, but need to keep track
of a revision of the same kernel, but not affect it's ability to load
compatible modules, this is the easiest way to do that.</help>
			</entry>
			<entry name="SWAP">
				<label>Support for paging of anonymous memory (swap)</label>
				<help>This option allows you to choose whether you want to have support
for so called swap devices or swap files in your kernel that are
used to provide more virtual memory than the actual RAM present
in your computer.  If unsure say Y.</help>
			</entry>
			<entry name="SYSVIPC">
				<label>System V IPC</label>
				<help>Inter Process Communication is a suite of library functions and
system calls which let processes (running programs) synchronize and
exchange information. It is generally considered to be a good thing,
and some programs won't run unless you say Y here. In particular, if
you want to run the DOS emulator dosemu under Linux (read the
DOSEMU-HOWTO, available from &lt;http://www.tldp.org/docs.html#howto&gt;),
you'll need to say Y here.

You can find documentation about IPC with &quot;info ipc&quot; and also in
section 6.4 of the Linux Programmer's Guide, available from
&lt;http://www.tldp.org/guides.html&gt;.</help>
			</entry>
			<entry name="SYSVIPC_SYSCTL"/>
			<entry name="POSIX_MQUEUE">
				<label>POSIX Message Queues</label>
				<help>POSIX variant of message queues is a part of IPC. In POSIX message
queues every message has a priority which decides about succession
of receiving it by a process. If you want to compile and run
programs written e.g. for Solaris with use of its POSIX message
queues (functions mq_*) say Y here.

POSIX message queues are visible as a filesystem called 'mqueue'
and can be mounted somewhere if you want to do filesystem
operations on message queues.

If unsure, say Y.</help>
			</entry>
			<entry name="POSIX_MQUEUE_SYSCTL"/>
			<entry name="CROSS_MEMORY_ATTACH">
				<label>Enable process_vm_readv/writev syscalls</label>
				<help>Enabling this option adds the system calls process_vm_readv and
process_vm_writev which allow a process with the correct privileges
to directly read from or write to another process' address space.
See the man page for more details.</help>
			</entry>
			<entry name="FHANDLE">
				<label>open by fhandle syscalls&quot; if EXPERT</label>
				<help>If you say Y here, a user level program will be able to map
file names to handle and then later use the handle for
different file system operations. This is useful in implementing
userspace file servers, which now track files using handles instead
of names. The handle would remain the same even if file names
get renamed. Enables open_by_handle_at(2) and name_to_handle_at(2)
syscalls.</help>
			</entry>
			<entry name="USELIB">
				<label>uselib syscall</label>
				<help>This option enables the uselib syscall, a system call used in the
dynamic linker from libc5 and earlier.  glibc does not use this
system call.  If you intend to run programs built on libc5 or
earlier, you may need to enable this syscall.  Current systems
running glibc can safely disable this.</help>
			</entry>
			<entry name="AUDIT">
				<label>Auditing support</label>
				<help>Enable auditing infrastructure that can be used with another
kernel subsystem, such as SELinux (which requires this for
logging of avc messages output).  System call auditing is included
on architectures which support it.</help>
			</entry>
			<entry name="HAVE_ARCH_AUDITSYSCALL"/>
			<entry name="AUDITSYSCALL"/>
			<entry name="AUDIT_WATCH"/>
			<entry name="AUDIT_TREE"/>
			<container name="IRQ_subsystem">
				<label>IRQ subsystem</label>
				<entry name="MAY_HAVE_SPARSE_IRQ"/>
				<entry name="GENERIC_IRQ_LEGACY"/>
				<entry name="GENERIC_IRQ_PROBE"/>
				<entry name="GENERIC_IRQ_SHOW"/>
				<entry name="GENERIC_IRQ_SHOW_LEVEL"/>
				<entry name="GENERIC_IRQ_LEGACY_ALLOC_HWIRQ"/>
				<entry name="GENERIC_PENDING_IRQ"/>
				<entry name="GENERIC_IRQ_MIGRATION"/>
				<entry name="AUTO_IRQ_AFFINITY"/>
				<entry name="HARDIRQS_SW_RESEND"/>
				<entry name="IRQ_PREFLOW_FASTEOI"/>
				<entry name="IRQ_EDGE_EOI_HANDLER"/>
				<entry name="GENERIC_IRQ_CHIP"/>
				<entry name="IRQ_DOMAIN"/>
				<entry name="IRQ_DOMAIN_HIERARCHY"/>
				<entry name="GENERIC_IRQ_IPI"/>
				<entry name="GENERIC_MSI_IRQ"/>
				<entry name="GENERIC_MSI_IRQ_DOMAIN"/>
				<entry name="HANDLE_DOMAIN_IRQ"/>
				<entry name="IRQ_DOMAIN_DEBUG">
					<label>Expose hardware/virtual IRQ mapping via debugfs</label>
					<help>This option will show the mapping relationship between hardware irq
numbers and Linux irq numbers. The mapping is exposed via debugfs
in the file &quot;irq_domain_mapping&quot;.

If you don't know what this means you don't need it.</help>
				</entry>
				<entry name="IRQ_FORCED_THREADING"/>
				<entry name="IRQ_FORCED_THREADING_DEFAULT">
					<label>Use IRQ threading by default</label>
				</entry>
				<entry name="SPARSE_IRQ">
					<label>Support sparse irq numbering&quot; if MAY_HAVE_SPARSE_IRQ</label>
					<help>
Sparse irq numbering is useful for distro kernels that want
to define a high CONFIG_NR_CPUS value but still want to have
low kernel memory footprint on smaller machines.

( Sparse irqs can also be beneficial on NUMA boxes, as they spread
out the interrupt descriptors in a more NUMA-friendly way. )

If you don't know what to do here, say N.

endmenu
</help>
				</entry>
			</container>
			<entry name="CLOCKSOURCE_WATCHDOG"/>
			<entry name="ARCH_CLOCKSOURCE_DATA"/>
			<entry name="CLOCKSOURCE_VALIDATE_LAST_CYCLE"/>
			<entry name="GENERIC_TIME_VSYSCALL"/>
			<entry name="GENERIC_TIME_VSYSCALL_OLD"/>
			<entry name="ARCH_USES_GETTIMEOFFSET"/>
			<entry name="GENERIC_CLOCKEVENTS"/>
			<entry name="ARCH_HAS_TICK_BROADCAST"/>
			<entry name="GENERIC_CLOCKEVENTS_BROADCAST"/>
			<entry name="GENERIC_CLOCKEVENTS_MIN_ADJUST"/>
			<entry name="GENERIC_CMOS_UPDATE"/>
			<container name="Timers_subsystem">
				<label>Timers subsystem</label>
				<entry name="TICK_ONESHOT"/>
				<entry name="NO_HZ_COMMON"/>
				<entry name="HZ_PERIODIC">
					<label>Periodic timer ticks (constant rate, no dynticks)</label>
					<help>This option keeps the tick running periodically at a constant
rate, even when the CPU doesn't need it.</help>
				</entry>
				<entry name="NO_HZ_IDLE">
					<label>Idle dynticks system (tickless idle)</label>
					<help>This option enables a tickless idle system: timer interrupts
will only trigger on an as-needed basis when the system is idle.
This is usually interesting for energy saving.

Most of the time you want to say Y here.</help>
				</entry>
				<entry name="NO_HZ_FULL">
					<label>Full dynticks system (tickless)</label>
					<help>Adaptively try to shutdown the tick whenever possible, even when
the CPU is running tasks. Typically this requires running a single
task on the CPU. Chances for running tickless are maximized when
the task mostly runs in userspace and has few kernel activity.

You need to fill up the nohz_full boot parameter with the
desired range of dynticks CPUs.

This is implemented at the expense of some overhead in user &lt;-&gt; kernel
transitions: syscalls, exceptions and interrupts. Even when it's
dynamically off.

Say N.</help>
				</entry>
				<entry name="NO_HZ_FULL_ALL">
					<label>Full dynticks system on all CPUs by default (except CPU 0)</label>
					<help>If the user doesn't pass the nohz_full boot option to
define the range of full dynticks CPUs, consider that all
CPUs in the system are full dynticks by default.
Note the boot CPU will still be kept outside the range to
handle the timekeeping duty.</help>
				</entry>
				<entry name="NO_HZ_FULL_SYSIDLE">
					<label>Detect full-system idle state for full dynticks system</label>
					<help>At least one CPU must keep the scheduling-clock tick running for
timekeeping purposes whenever there is a non-idle CPU, where
&quot;non-idle&quot; also includes dynticks CPUs as long as they are
running non-idle tasks.  Because the underlying adaptive-tick
support cannot distinguish between all CPUs being idle and
all CPUs each running a single task in dynticks mode, the
underlying support simply ensures that there is always a CPU
handling the scheduling-clock tick, whether or not all CPUs
are idle.  This Kconfig option enables scalable detection of
the all-CPUs-idle state, thus allowing the scheduling-clock
tick to be disabled when all CPUs are idle.  Note that scalable
detection of the all-CPUs-idle state means that larger systems
will be slower to declare the all-CPUs-idle state.

Say Y if you would like to help debug all-CPUs-idle detection.

Say N if you are unsure.</help>
				</entry>
				<entry name="NO_HZ_FULL_SYSIDLE_SMALL">
					<label>Number of CPUs above which large-system approach is used</label>
					<help>The full-system idle detection mechanism takes a lazy approach
on large systems, as is required to attain decent scalability.
However, on smaller systems, scalability is not anywhere near as
large a concern as is energy efficiency.  The sysidle subsystem
therefore uses a fast but non-scalable algorithm for small
systems and a lazier but scalable algorithm for large systems.
This Kconfig parameter defines the number of CPUs in the largest
system that will be considered to be &quot;small&quot;.

The default value will be fine in most cases.	Battery-powered
systems that (1) enable NO_HZ_FULL_SYSIDLE, (2) have larger
numbers of CPUs, and (3) are suffering from battery-lifetime
problems due to long sysidle latencies might wish to experiment
with larger values for this Kconfig parameter.  On the other
hand, they might be even better served by disabling NO_HZ_FULL
entirely, given that NO_HZ_FULL is intended for HPC and
real-time workloads that at present do not tend to be run on
battery-powered systems.

Take the default if you are unsure.</help>
				</entry>
				<entry name="NO_HZ">
					<label>Old Idle dynticks config</label>
					<help>This is the old config entry that enables dynticks idle.
We keep it around for a little while to enforce backward
compatibility with older config files.</help>
				</entry>
				<entry name="HIGH_RES_TIMERS">
					<label>High Resolution Timer Support</label>
					<help>This option enables high resolution timer support. If your
hardware is not capable then this option only increases
the size of the kernel image.</help>
				</entry>
			</container>
			<container name="CPU_Task_time_and_stats_accounting">
				<label>CPU/Task time and stats accounting</label>
				<entry name="VIRT_CPU_ACCOUNTING"/>
				<entry name="TICK_CPU_ACCOUNTING">
					<label>Simple tick based cputime accounting</label>
					<help>This is the basic tick based cputime accounting that maintains
statistics about user, system and idle time spent on per jiffies
granularity.

If unsure, say Y.</help>
				</entry>
				<entry name="VIRT_CPU_ACCOUNTING_NATIVE">
					<label>Deterministic task and CPU time accounting</label>
					<help>Select this option to enable more accurate task and CPU time
accounting.  This is done by reading a CPU counter on each
kernel entry and exit and on transitions within the kernel
between system, softirq and hardirq state, so there is a
small performance impact.  In the case of s390 or IBM POWER &gt; 5,
this also enables accounting of stolen time on logically-partitioned
systems.</help>
				</entry>
				<entry name="VIRT_CPU_ACCOUNTING_GEN">
					<label>Full dynticks CPU time accounting</label>
					<help>Select this option to enable task and CPU time accounting on full
dynticks systems. This accounting is implemented by watching every
kernel-user boundaries using the context tracking subsystem.
The accounting is thus performed at the expense of some significant
overhead.

For now this is only useful if you are working on the full
dynticks subsystem development.

If unsure, say N.</help>
				</entry>
				<entry name="IRQ_TIME_ACCOUNTING">
					<label>Fine granularity task level IRQ time accounting</label>
					<help>Select this option to enable fine granularity task irq time
accounting. This is done by reading a timestamp on each
transitions between softirq and hardirq state, so there can be a
small performance impact.

If in doubt, say N here.</help>
				</entry>
				<entry name="BSD_PROCESS_ACCT">
					<label>BSD Process Accounting</label>
					<help>If you say Y here, a user level program will be able to instruct the
kernel (via a special system call) to write process accounting
information to a file: whenever a process exits, information about
that process will be appended to the file by the kernel.  The
information includes things such as creation time, owning user,
command name, memory usage, controlling terminal etc. (the complete
list is in the struct acct in &lt;file:include/linux/acct.h&gt;).  It is
up to the user level program to do useful things with this
information.  This is generally a good idea, so say Y.</help>
				</entry>
				<entry name="BSD_PROCESS_ACCT_V3">
					<label>BSD Process Accounting version 3 file format</label>
					<help>If you say Y here, the process accounting information is written
in a new file format that also logs the process IDs of each
process and it's parent. Note that this file format is incompatible
with previous v0/v1/v2 file formats, so you will need updated tools
for processing it. A preliminary version of these tools is available
at &lt;http://www.gnu.org/software/acct/&gt;.</help>
				</entry>
				<entry name="TASKSTATS">
					<label>Export task/process statistics through netlink</label>
					<help>Export selected statistics for tasks/processes through the
generic netlink interface. Unlike BSD process accounting, the
statistics are available during the lifetime of tasks/processes as
responses to commands. Like BSD accounting, they are sent to user
space on task exit.

Say N if unsure.</help>
				</entry>
				<entry name="TASK_DELAY_ACCT">
					<label>Enable per-task delay accounting</label>
					<help>Collect information on time spent by a task waiting for system
resources like cpu, synchronous block I/O completion and swapping
in pages. Such statistics can help in setting a task's priorities
relative to other tasks for cpu, io, rss limits etc.

Say N if unsure.</help>
				</entry>
				<entry name="TASK_XACCT">
					<label>Enable extended accounting over taskstats</label>
					<help>Collect extended task accounting data and send the data
to userland for processing over the taskstats interface.

Say N if unsure.</help>
				</entry>
				<entry name="TASK_IO_ACCOUNTING">
					<label>Enable per-task storage I/O accounting</label>
					<help>Collect information on the number of bytes of storage I/O which this
task has caused.

Say N if unsure.</help>
				</entry>
			</container>
			<container name="RCU_Subsystem">
				<label>RCU Subsystem</label>
				<entry name="TREE_RCU">
					<help>This option selects the RCU implementation that is
designed for very large SMP system with hundreds or
thousands of CPUs.  It also scales down nicely to
smaller systems.</help>
				</entry>
				<entry name="PREEMPT_RCU">
					<help>This option selects the RCU implementation that is
designed for very large SMP systems with hundreds or
thousands of CPUs, but for which real-time response
is also required.  It also scales down nicely to
smaller systems.

Select this option if you are unsure.</help>
				</entry>
				<entry name="TINY_RCU">
					<help>This option selects the RCU implementation that is
designed for UP systems from which real-time response
is not required.  This option greatly reduces the
memory footprint of RCU.</help>
				</entry>
				<entry name="RCU_EXPERT">
					<label>Make expert-level adjustments to RCU configuration</label>
					<help>This option needs to be enabled if you wish to make
expert-level adjustments to RCU configuration.  By default,
no such adjustments can be made, which has the often-beneficial
side-effect of preventing &quot;make oldconfig&quot; from asking you all
sorts of detailed questions about how you would like numerous
obscure RCU options to be set up.

Say Y if you need to make expert-level adjustments to RCU.

Say N if you are unsure.</help>
				</entry>
				<entry name="SRCU">
					<help>This option selects the sleepable version of RCU. This version
permits arbitrary sleeping or blocking within RCU read-side critical
sections.</help>
				</entry>
				<entry name="TASKS_RCU">
					<help>This option enables a task-based RCU implementation that uses
only voluntary context switch (not preemption!), idle, and
user-mode execution as quiescent states.</help>
				</entry>
				<entry name="RCU_STALL_COMMON">
					<help>This option enables RCU CPU stall code that is common between
the TINY and TREE variants of RCU.  The purpose is to allow
the tiny variants to disable RCU CPU stall warnings, while
making these warnings mandatory for the tree variants.</help>
				</entry>
				<entry name="CONTEXT_TRACKING"/>
				<entry name="CONTEXT_TRACKING_FORCE">
					<label>Force context tracking</label>
					<help>The major pre-requirement for full dynticks to work is to
support the context tracking subsystem. But there are also
other dependencies to provide in order to make the full
dynticks working.

This option stands for testing when an arch implements the
context tracking backend but doesn't yet fullfill all the
requirements to make the full dynticks feature working.
Without the full dynticks, there is no way to test the support
for context tracking and the subsystems that rely on it: RCU
userspace extended quiescent state and tickless cputime
accounting. This option copes with the absence of the full
dynticks subsystem by forcing the context tracking on all
CPUs in the system.

Say Y only if you're working on the development of an
architecture backend for the context tracking.

Say N otherwise, this option brings an overhead that you
don't want in production.</help>
				</entry>
				<entry name="RCU_FANOUT">
					<label>Tree-based hierarchical RCU fanout value</label>
					<help>This option controls the fanout of hierarchical implementations
of RCU, allowing RCU to work efficiently on machines with
large numbers of CPUs.  This value must be at least the fourth
root of NR_CPUS, which allows NR_CPUS to be insanely large.
The default value of RCU_FANOUT should be used for production
systems, but if you are stress-testing the RCU implementation
itself, small RCU_FANOUT values allow you to test large-system
code paths on small(er) systems.

Select a specific number if testing RCU itself.
Take the default if unsure.</help>
				</entry>
				<entry name="RCU_FANOUT_LEAF">
					<label>Tree-based hierarchical RCU leaf-level fanout value</label>
					<help>This option controls the leaf-level fanout of hierarchical
implementations of RCU, and allows trading off cache misses
against lock contention.  Systems that synchronize their
scheduling-clock interrupts for energy-efficiency reasons will
want the default because the smaller leaf-level fanout keeps
lock contention levels acceptably low.  Very large systems
(hundreds or thousands of CPUs) will instead want to set this
value to the maximum value possible in order to reduce the
number of cache misses incurred during RCU's grace-period
initialization.  These systems tend to run CPU-bound, and thus
are not helped by synchronized interrupts, and thus tend to
skew them, which reduces lock contention enough that large
leaf-level fanouts work well.

Select a specific number if testing RCU itself.

Select the maximum permissible value for large systems.

Take the default if unsure.</help>
				</entry>
				<entry name="RCU_FAST_NO_HZ">
					<label>Accelerate last non-dyntick-idle CPU's grace periods</label>
					<help>This option permits CPUs to enter dynticks-idle state even if
they have RCU callbacks queued, and prevents RCU from waking
these CPUs up more than roughly once every four jiffies (by
default, you can adjust this using the rcutree.rcu_idle_gp_delay
parameter), thus improving energy efficiency.  On the other
hand, this option increases the duration of RCU grace periods,
for example, slowing down synchronize_rcu().

Say Y if energy efficiency is critically important, and you
don't care about increased grace-period durations.

Say N if you are unsure.</help>
				</entry>
				<entry name="TREE_RCU_TRACE">
					<help>This option provides tracing for the TREE_RCU and
PREEMPT_RCU implementations, permitting Makefile to
trivially select kernel/rcutree_trace.c.</help>
				</entry>
				<entry name="RCU_BOOST">
					<label>Enable RCU priority boosting</label>
					<help>This option boosts the priority of preempted RCU readers that
block the current preemptible RCU grace period for too long.
This option also prevents heavy loads from blocking RCU
callback invocation for all flavors of RCU.

Say Y here if you are working with real-time apps or heavy loads
Say N here if you are unsure.</help>
				</entry>
				<entry name="RCU_KTHREAD_PRIO">
					<label>Real-time priority to use for RCU worker threads</label>
					<help>This option specifies the SCHED_FIFO priority value that will be
assigned to the rcuc/n and rcub/n threads and is also the value
used for RCU_BOOST (if enabled). If you are working with a
real-time application that has one or more CPU-bound threads
running at a real-time priority level, you should set
RCU_KTHREAD_PRIO to a priority higher than the highest-priority
real-time CPU-bound application thread.  The default RCU_KTHREAD_PRIO
value of 1 is appropriate in the common case, which is real-time
applications that do not have any CPU-bound threads.

Some real-time applications might not have a single real-time
thread that saturates a given CPU, but instead might have
multiple real-time threads that, taken together, fully utilize
that CPU.  In this case, you should set RCU_KTHREAD_PRIO to
a priority higher than the lowest-priority thread that is
conspiring to prevent the CPU from running any non-real-time
tasks.  For example, if one thread at priority 10 and another
thread at priority 5 are between themselves fully consuming
the CPU time on a given CPU, then RCU_KTHREAD_PRIO should be
set to priority 6 or higher.

Specify the real-time priority, or take the default if unsure.</help>
				</entry>
				<entry name="RCU_BOOST_DELAY">
					<label>Milliseconds to delay boosting after RCU grace-period start</label>
					<help>This option specifies the time to wait after the beginning of
a given grace period before priority-boosting preempted RCU
readers blocking that grace period.  Note that any RCU reader
blocking an expedited RCU grace period is boosted immediately.

Accept the default if unsure.</help>
				</entry>
				<entry name="RCU_NOCB_CPU">
					<label>Offload RCU callback processing from boot-selected CPUs</label>
					<help>Use this option to reduce OS jitter for aggressive HPC or
real-time workloads.	It can also be used to offload RCU
callback invocation to energy-efficient CPUs in battery-powered
asymmetric multiprocessors.

This option offloads callback invocation from the set of
CPUs specified at boot time by the rcu_nocbs parameter.
For each such CPU, a kthread (&quot;rcuox/N&quot;) will be created to
invoke callbacks, where the &quot;N&quot; is the CPU being offloaded,
and where the &quot;x&quot; is &quot;b&quot; for RCU-bh, &quot;p&quot; for RCU-preempt, and
&quot;s&quot; for RCU-sched.  Nothing prevents this kthread from running
on the specified CPUs, but (1) the kthreads may be preempted
between each callback, and (2) affinity or cgroups can be used
to force the kthreads to run on whatever set of CPUs is desired.

Say Y here if you want to help to debug reduced OS jitter.
Say N here if you are unsure.</help>
				</entry>
				<entry name="RCU_NOCB_CPU_NONE">
					<label>No build_forced no-CBs CPUs</label>
					<help>This option does not force any of the CPUs to be no-CBs CPUs.
Only CPUs designated by the rcu_nocbs= boot parameter will be
no-CBs CPUs, whose RCU callbacks will be invoked by per-CPU
kthreads whose names begin with &quot;rcuo&quot;.  All other CPUs will
invoke their own RCU callbacks in softirq context.

Select this option if you want to choose no-CBs CPUs at
boot time, for example, to allow testing of different no-CBs
configurations without having to rebuild the kernel each time.</help>
				</entry>
				<entry name="RCU_NOCB_CPU_ZERO">
					<label>CPU 0 is a build_forced no-CBs CPU</label>
					<help>This option forces CPU 0 to be a no-CBs CPU, so that its RCU
callbacks are invoked by a per-CPU kthread whose name begins
with &quot;rcuo&quot;.	Additional CPUs may be designated as no-CBs
CPUs using the rcu_nocbs= boot parameter will be no-CBs CPUs.
All other CPUs will invoke their own RCU callbacks in softirq
context.

Select this if CPU 0 needs to be a no-CBs CPU for real-time
or energy-efficiency reasons, but the real reason it exists
is to ensure that randconfig testing covers mixed systems.</help>
				</entry>
				<entry name="RCU_NOCB_CPU_ALL">
					<label>All CPUs are build_forced no-CBs CPUs</label>
					<help>This option forces all CPUs to be no-CBs CPUs.  The rcu_nocbs=
boot parameter will be ignored.  All CPUs' RCU callbacks will
be executed in the context of per-CPU rcuo kthreads created for
this purpose.  Assuming that the kthreads whose names start with
&quot;rcuo&quot; are bound to &quot;housekeeping&quot; CPUs, this reduces OS jitter
on the remaining CPUs, but might decrease memory locality during
RCU-callback invocation, thus potentially degrading throughput.

Select this if all CPUs need to be no-CBs CPUs for real-time
or energy-efficiency reasons.</help>
				</entry>
				<entry name="RCU_EXPEDITE_BOOT">
					<help>This option enables expedited grace periods at boot time,
as if rcu_expedite_gp() had been invoked early in boot.
The corresponding rcu_unexpedite_gp() is invoked from
rcu_end_inkernel_boot(), which is intended to be invoked
at the end of the kernel-only boot sequence, just before
init is exec'ed.

Accept the default if unsure.</help>
				</entry>
			</container>
			<entry name="BUILD_BIN2C"/>
			<entry name="IKCONFIG">
				<label>Kernel .config support</label>
				<help>This option enables the complete Linux kernel &quot;.config&quot; file
contents to be saved in the kernel. It provides documentation
of which kernel options are used in a running kernel or in an
on-disk kernel.  This information can be extracted from the kernel
image file with the script scripts/extract-ikconfig and used as
input to rebuild the current kernel or to build another kernel.
It can also be extracted from a running kernel by reading
/proc/config.gz if enabled (below).</help>
			</entry>
			<entry name="IKCONFIG_PROC">
				<label>Enable access to .config through /proc/config.gz</label>
				<help>This option enables access to the kernel configuration file
through /proc/config.gz.</help>
			</entry>
			<entry name="LOG_BUF_SHIFT">
				<label>Kernel log buffer size (16 =&gt; 64KB, 17 =&gt; 128KB)</label>
				<help>Select the minimal kernel log buffer size as a power of 2.
The final size is affected by LOG_CPU_MAX_BUF_SHIFT config
parameter, see below. Any higher size also might be forced
by &quot;log_buf_len&quot; boot parameter.

Examples:
17 =&gt; 128 KB
16 =&gt; 64 KB
15 =&gt; 32 KB
14 =&gt; 16 KB
13 =&gt;  8 KB
12 =&gt;  4 KB</help>
			</entry>
			<entry name="LOG_CPU_MAX_BUF_SHIFT">
				<label>CPU kernel log buffer size contribution (13 =&gt; 8 KB, 17 =&gt; 128KB)</label>
				<help>This option allows to increase the default ring buffer size
according to the number of CPUs. The value defines the contribution
of each CPU as a power of 2. The used space is typically only few
lines however it might be much more when problems are reported,
e.g. backtraces.

The increased size means that a new buffer has to be allocated and
the original static one is unused. It makes sense only on systems
with more CPUs. Therefore this value is used only when the sum of
contributions is greater than the half of the default kernel ring
buffer as defined by LOG_BUF_SHIFT. The default values are set
so that more than 64 CPUs are needed to trigger the allocation.

Also this option is ignored when &quot;log_buf_len&quot; kernel parameter is
used as it forces an exact (power of two) size of the ring buffer.

The number of possible CPUs is used for this computation ignoring
hotplugging making the computation optimal for the worst case
scenario while allowing a simple algorithm to be used from bootup.

Examples shift values and their meaning:
17 =&gt; 128 KB for each CPU
16 =&gt;  64 KB for each CPU
15 =&gt;  32 KB for each CPU
14 =&gt;  16 KB for each CPU
13 =&gt;   8 KB for each CPU
12 =&gt;   4 KB for each CPU</help>
			</entry>
			<entry name="NMI_LOG_BUF_SHIFT">
				<label>Temporary per-CPU NMI log buffer size (12 =&gt; 4KB, 13 =&gt; 8KB)</label>
				<help>Select the size of a per-CPU buffer where NMI messages are temporary
stored. They are copied to the main log buffer in a safe context
to avoid a deadlock. The value defines the size as a power of 2.

NMI messages are rare and limited. The largest one is when
a backtrace is printed. It usually fits into 4KB. Select
8KB if you want to be on the safe side.

Examples:
17 =&gt; 128 KB for each CPU
16 =&gt;  64 KB for each CPU
15 =&gt;  32 KB for each CPU
14 =&gt;  16 KB for each CPU
13 =&gt;   8 KB for each CPU
12 =&gt;   4 KB for each CPU</help>
			</entry>
			<entry name="HAVE_UNSTABLE_SCHED_CLOCK"/>
			<entry name="GENERIC_SCHED_CLOCK"/>
			<entry name="ARCH_SUPPORTS_NUMA_BALANCING"/>
			<entry name="ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH"/>
			<entry name="ARCH_SUPPORTS_INT128"/>
			<entry name="ARCH_WANT_NUMA_VARIABLE_LOCALITY"/>
			<entry name="NUMA_BALANCING">
				<label>Memory placement aware NUMA scheduler</label>
				<help>This option adds support for automatic NUMA aware memory/task placement.
The mechanism is quite primitive and is based on migrating memory when
it has references to the node the task is running on.

This system will be inactive on UMA systems.</help>
			</entry>
			<entry name="NUMA_BALANCING_DEFAULT_ENABLED">
				<label>Automatically enable NUMA aware memory/task placement</label>
				<help>If set, automatic NUMA balancing will be enabled if running on a NUMA
machine.</help>
			</entry>
			<entry name="CGROUPS">
				<label>Control Group support</label>
				<help>This option adds support for grouping sets of processes together, for
use with process control subsystems such as Cpusets, CFS, memory
controls or device isolation.
See
- Documentation/scheduler/sched-design-CFS.txt	(CFS)
- Documentation/cgroup-v1/ (features for grouping, isolation
and resource control)

Say N if unsure.</help>
			</entry>
			<entry name="PAGE_COUNTER"/>
			<entry name="MEMCG">
				<label>Memory controller</label>
				<help>Provides control over the memory footprint of tasks in a cgroup.</help>
			</entry>
			<entry name="MEMCG_SWAP">
				<label>Swap controller</label>
				<help>Provides control over the swap space consumed by tasks in a cgroup.</help>
			</entry>
			<entry name="MEMCG_SWAP_ENABLED">
				<label>Swap controller enabled by default</label>
				<help>Memory Resource Controller Swap Extension comes with its price in
a bigger memory consumption. General purpose distribution kernels
which want to enable the feature but keep it disabled by default
and let the user enable it by swapaccount=1 boot command line
parameter should have this option unselected.
For those who want to have the feature enabled by default should
select this option (if, for some reason, they need to disable it
then swapaccount=0 does the trick).</help>
			</entry>
			<entry name="BLK_CGROUP">
				<label>IO controller</label>
				<help>Generic block IO controller cgroup interface. This is the common
cgroup interface which should be used by various IO controlling
policies.

Currently, CFQ IO scheduler uses it to recognize task groups and
control disk bandwidth allocation (proportional time slice allocation)
to such task groups. It is also used by bio throttling logic in
block layer to implement upper limit in IO rates on a device.

This option only enables generic Block IO controller infrastructure.
One needs to also enable actual IO controlling logic/policy. For
enabling proportional weight division of disk bandwidth in CFQ, set
CONFIG_CFQ_GROUP_IOSCHED=y; for enabling throttling policy, set
CONFIG_BLK_DEV_THROTTLING=y.

See Documentation/cgroup-v1/blkio-controller.txt for more information.</help>
			</entry>
			<entry name="DEBUG_BLK_CGROUP">
				<label>IO controller debugging</label>
				<help>Enable some debugging help. Currently it exports additional stat
files in a cgroup which can be useful for debugging.</help>
			</entry>
			<entry name="CGROUP_WRITEBACK"/>
			<entry name="CGROUP_SCHED">
				<label>CPU controller</label>
				<help>This feature lets CPU scheduler recognize task groups and control CPU
bandwidth allocation to such task groups. It uses cgroups to group
tasks.</help>
			</entry>
			<entry name="FAIR_GROUP_SCHED">
				<label>Group scheduling for SCHED_OTHER</label>
			</entry>
			<entry name="CFS_BANDWIDTH">
				<label>CPU bandwidth provisioning for FAIR_GROUP_SCHED</label>
				<help>This option allows users to define CPU bandwidth rates (limits) for
tasks running within the fair group scheduler.  Groups with no limit
set are considered to be unconstrained and will run with no
restriction.
See tip/Documentation/scheduler/sched-bwc.txt for more information.</help>
			</entry>
			<entry name="RT_GROUP_SCHED">
				<label>Group scheduling for SCHED_RR/FIFO</label>
				<help>This feature lets you explicitly allocate real CPU bandwidth
to task groups. If enabled, it will also make it impossible to
schedule realtime tasks for non-root users until you allocate
realtime bandwidth for them.
See Documentation/scheduler/sched-rt-group.txt for more information.</help>
			</entry>
			<entry name="CGROUP_PIDS">
				<label>PIDs controller</label>
				<help>Provides enforcement of process number limits in the scope of a
cgroup. Any attempt to fork more processes than is allowed in the
cgroup will fail. PIDs are fundamentally a global resource because it
is fairly trivial to reach PID exhaustion before you reach even a
conservative kmemcg limit. As a result, it is possible to grind a
system to halt without being limited by other cgroup policies. The
PIDs controller is designed to stop this from happening.

It should be noted that organisational operations (such as attaching
to a cgroup hierarchy will *not* be blocked by the PIDs controller),
since the PIDs limit only affects a process's ability to fork, not to
attach to a cgroup.</help>
			</entry>
			<entry name="CGROUP_FREEZER">
				<label>Freezer controller</label>
				<help>Provides a way to freeze and unfreeze all tasks in a
cgroup.

This option affects the ORIGINAL cgroup interface. The cgroup2 memory
controller includes important in-kernel memory consumers per default.

If you're using cgroup2, say N.</help>
			</entry>
			<entry name="CGROUP_HUGETLB">
				<label>HugeTLB controller</label>
				<help>Provides a cgroup controller for HugeTLB pages.
When you enable this, you can put a per cgroup limit on HugeTLB usage.
The limit is enforced during page fault. Since HugeTLB doesn't
support page reclaim, enforcing the limit at page fault time implies
that, the application will get SIGBUS signal if it tries to access
HugeTLB pages beyond its limit. This requires the application to know
beforehand how much HugeTLB pages it would require for its use. The
control group is tracked in the third page lru pointer. This means
that we cannot use the controller with huge page less than 3 pages.</help>
			</entry>
			<entry name="CPUSETS">
				<label>Cpuset controller</label>
				<help>This option will let you create and manage CPUSETs which
allow dynamically partitioning a system into sets of CPUs and
Memory Nodes and assigning tasks to run only within those sets.
This is primarily useful on large SMP or NUMA systems.

Say N if unsure.</help>
			</entry>
			<entry name="PROC_PID_CPUSET">
				<label>Include legacy /proc/&lt;pid&gt;/cpuset file</label>
			</entry>
			<entry name="CGROUP_DEVICE">
				<label>Device controller</label>
				<help>Provides a cgroup controller implementing whitelists for
devices which a process in the cgroup can mknod or open.</help>
			</entry>
			<entry name="CGROUP_CPUACCT">
				<label>Simple CPU accounting controller</label>
				<help>Provides a simple controller for monitoring the
total CPU consumed by the tasks in a cgroup.</help>
			</entry>
			<entry name="CGROUP_PERF">
				<label>Perf controller</label>
				<help>This option extends the perf per-cpu mode to restrict monitoring
to threads which belong to the cgroup specified and run on the
designated cpu.

Say N if unsure.</help>
			</entry>
			<entry name="CGROUP_DEBUG">
				<label>Example controller</label>
				<help>This option enables a simple controller that exports
debugging information about the cgroups framework.

Say N.</help>
			</entry>
			<entry name="CHECKPOINT_RESTORE">
				<label>Checkpoint/restore support&quot; if EXPERT</label>
				<help>Enables additional kernel features in a sake of checkpoint/restore.
In particular it adds auxiliary prctl codes to setup process text,
data and heap segment sizes, and a few additional /proc filesystem
entries.

If unsure, say N here.</help>
			</entry>
			<entry name="NAMESPACES">
				<label>Namespaces support&quot; if EXPERT</label>
				<help>Provides the way to make tasks work with different objects using
the same id. For example same IPC id may refer to different objects
or same user id or pid may refer to different tasks when used in
different namespaces.</help>
			</entry>
			<entry name="UTS_NS">
				<label>UTS namespace</label>
				<help>In this namespace tasks see different info provided with the
uname() system call</help>
			</entry>
			<entry name="IPC_NS">
				<label>IPC namespace</label>
				<help>In this namespace tasks work with IPC ids which correspond to
different IPC objects in different namespaces.</help>
			</entry>
			<entry name="USER_NS">
				<label>User namespace</label>
				<help>This allows containers, i.e. vservers, to use user namespaces
to provide different user info for different servers.

When user namespaces are enabled in the kernel it is
recommended that the MEMCG option also be enabled and that
user-space use the memory control groups to limit the amount
of memory a memory unprivileged users can use.

If unsure, say N.</help>
			</entry>
			<entry name="PID_NS">
				<label>PID Namespaces</label>
				<help>Support process id namespaces.  This allows having multiple
processes with the same pid as long as they are in different
pid namespaces.  This is a building block of containers.</help>
			</entry>
			<entry name="NET_NS">
				<label>Network namespace</label>
				<help>Allow user space to create what appear to be multiple instances
of the network stack.</help>
			</entry>
			<entry name="SCHED_AUTOGROUP">
				<label>Automatic process group scheduling</label>
				<help>This option optimizes the scheduler for common desktop workloads by
automatically creating and populating task groups.  This separation
of workloads isolates aggressive CPU burners (like build jobs) from
desktop applications.  Task group autogeneration is currently based
upon task session.</help>
			</entry>
			<entry name="SYSFS_DEPRECATED">
				<label>Enable deprecated sysfs features to support old userspace tools</label>
				<help>This option adds code that switches the layout of the &quot;block&quot; class
devices, to not show up in /sys/class/block/, but only in
/sys/block/.

This switch is only active when the sysfs.deprecated=1 boot option is
passed or the SYSFS_DEPRECATED_V2 option is set.

This option allows new kernels to run on old distributions and tools,
which might get confused by /sys/class/block/. Since 2007/2008 all
major distributions and tools handle this just fine.

Recent distributions and userspace tools after 2009/2010 depend on
the existence of /sys/class/block/, and will not work with this
option enabled.

Only if you are using a new kernel on an old distribution, you might
need to say Y here.</help>
			</entry>
			<entry name="SYSFS_DEPRECATED_V2">
				<label>Enable deprecated sysfs features by default</label>
				<help>Enable deprecated sysfs by default.

See the CONFIG_SYSFS_DEPRECATED option for more details about this
option.

Only if you are using a new kernel on an old distribution, you might
need to say Y here. Even then, odds are you would not need it
enabled, you can always pass the boot option if absolutely necessary.</help>
			</entry>
			<entry name="RELAY">
				<label>Kernel-&gt;user space relay support (formerly relayfs)</label>
				<help>This option enables support for relay interface support in
certain file systems (such as debugfs).
It is designed to provide an efficient mechanism for tools and
facilities to relay large amounts of data from kernel space to
user space.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_INITRD">
				<label>Initial RAM filesystem and RAM disk (initramfs/initrd) support</label>
				<help>The initial RAM filesystem is a ramfs which is loaded by the
boot loader (loadlin or lilo) and that is mounted as root
before the normal boot procedure. It is typically used to
load modules needed to mount the &quot;real&quot; root file system,
etc. See &lt;file:Documentation/initrd.txt&gt; for details.

If RAM disk support (BLK_DEV_RAM) is also included, this
also enables initial RAM disk (initrd) support and adds
15 Kbytes (more on some other architectures) to the kernel size.

If unsure say Y.</help>
			</entry>
			<entry name="INITRAMFS_SOURCE">
				<label>Initramfs source file(s)</label>
				<help>This can be either a single cpio archive with a .cpio suffix or a
space-separated list of directories and files for building the
initramfs image.  A cpio archive should contain a filesystem archive
to be used as an initramfs image.  Directories should contain a
filesystem layout to be included in the initramfs image.  Files
should contain entries according to the format described by the
&quot;usr/gen_init_cpio&quot; program in the kernel tree.

When multiple directories and files are specified then the
initramfs image will be the aggregate of all of them.

See &lt;file:Documentation/early-userspace/README&gt; for more details.

If you are not sure, leave it blank.</help>
			</entry>
			<entry name="INITRAMFS_ROOT_UID">
				<label>User ID to map to 0 (user root)</label>
				<help>This setting is only meaningful if the INITRAMFS_SOURCE is
contains a directory.  Setting this user ID (UID) to something
other than &quot;0&quot; will cause all files owned by that UID to be
owned by user root in the initial ramdisk image.

If you are not sure, leave it set to &quot;0&quot;.</help>
			</entry>
			<entry name="INITRAMFS_ROOT_GID">
				<label>Group ID to map to 0 (group root)</label>
				<help>This setting is only meaningful if the INITRAMFS_SOURCE is
contains a directory.  Setting this group ID (GID) to something
other than &quot;0&quot; will cause all files owned by that GID to be
owned by group root in the initial ramdisk image.

If you are not sure, leave it set to &quot;0&quot;.</help>
			</entry>
			<entry name="RD_GZIP">
				<label>Support initial ramdisks compressed using gzip</label>
				<help>Support loading of a gzip encoded initial ramdisk or cpio buffer.
If unsure, say Y.</help>
			</entry>
			<entry name="RD_BZIP2">
				<label>Support initial ramdisks compressed using bzip2</label>
				<help>Support loading of a bzip2 encoded initial ramdisk or cpio buffer
If unsure, say N.</help>
			</entry>
			<entry name="RD_LZMA">
				<label>Support initial ramdisks compressed using LZMA</label>
				<help>Support loading of a LZMA encoded initial ramdisk or cpio buffer
If unsure, say N.</help>
			</entry>
			<entry name="RD_XZ">
				<label>Support initial ramdisks compressed using XZ</label>
				<help>Support loading of a XZ encoded initial ramdisk or cpio buffer.
If unsure, say N.</help>
			</entry>
			<entry name="RD_LZO">
				<label>Support initial ramdisks compressed using LZO</label>
				<help>Support loading of a LZO encoded initial ramdisk or cpio buffer
If unsure, say N.</help>
			</entry>
			<entry name="RD_LZ4">
				<label>Support initial ramdisks compressed using LZ4</label>
				<help>Support loading of a LZ4 encoded initial ramdisk or cpio buffer
If unsure, say N.
</help>
			</entry>
			<entry name="CC_OPTIMIZE_FOR_PERFORMANCE">
				<label>Optimize for performance</label>
				<help>This is the default optimization level for the kernel, building
with the &quot;-O2&quot; compiler flag for best performance and most
helpful compile-time warnings.</help>
			</entry>
			<entry name="CC_OPTIMIZE_FOR_SIZE">
				<label>Optimize for size</label>
				<help>Enabling this option will pass &quot;-Os&quot; instead of &quot;-O2&quot; to
your compiler resulting in a smaller kernel.

If unsure, say N.</help>
			</entry>
			<entry name="SYSCTL"/>
			<entry name="ANON_INODES"/>
			<entry name="HAVE_UID16"/>
			<entry name="SYSCTL_EXCEPTION_TRACE">
				<help>Enable support for /proc/sys/debug/exception-trace.</help>
			</entry>
			<entry name="SYSCTL_ARCH_UNALIGN_NO_WARN">
				<help>Enable support for /proc/sys/kernel/ignore-unaligned-usertrap
Allows arch to define/use @no_unaligned_warning to possibly warn
about unaligned access emulation going on under the hood.</help>
			</entry>
			<entry name="SYSCTL_ARCH_UNALIGN_ALLOW">
				<help>Enable support for /proc/sys/kernel/unaligned-trap
Allows arches to define/use @unaligned_enabled to runtime toggle
the unaligned access emulation.
see arch/parisc/kernel/unaligned.c for reference</help>
			</entry>
			<entry name="HAVE_PCSPKR_PLATFORM"/>
			<entry name="BPF"/>
			<entry name="EXPERT">
				<label>Configure standard kernel features (expert users)</label>
				<help>This option allows certain base kernel options and settings
to be disabled or tweaked. This is for specialized
environments which can tolerate a &quot;non-standard&quot; kernel.
Only use this if you really know what you are doing.</help>
			</entry>
			<entry name="UID16">
				<label>Enable 16-bit UID system calls&quot; if EXPERT</label>
				<help>This enables the legacy 16-bit UID syscall wrappers.</help>
			</entry>
			<entry name="MULTIUSER">
				<label>Multiple users, groups and capabilities support&quot; if EXPERT</label>
				<help>This option enables support for non-root users, groups and
capabilities.

If you say N here, all processes will run with UID 0, GID 0, and all
possible capabilities.  Saying N here also compiles out support for
system calls related to UIDs, GIDs, and capabilities, such as setuid,
setgid, and capset.

If unsure, say Y here.</help>
			</entry>
			<entry name="SGETMASK_SYSCALL">
				<label>sgetmask/ssetmask syscalls support&quot; if EXPERT</label>
				<help>sys_sgetmask and sys_ssetmask are obsolete system calls
no longer supported in libc but still enabled by default in some
architectures.

If unsure, leave the default option here.</help>
			</entry>
			<entry name="SYSFS_SYSCALL">
				<label>Sysfs syscall support&quot; if EXPERT</label>
				<help>sys_sysfs is an obsolete system call no longer supported in libc.
Note that disabling this option is more secure but might break
compatibility with some systems.

If unsure say Y here.</help>
			</entry>
			<entry name="SYSCTL_SYSCALL">
				<label>Sysctl syscall support&quot; if EXPERT</label>
				<help>sys_sysctl uses binary paths that have been found challenging
to properly maintain and use.  The interface in /proc/sys
using paths with ascii names is now the primary path to this
information.

Almost nothing using the binary sysctl interface so if you are
trying to save some space it is probably safe to disable this,
making your kernel marginally smaller.

If unsure say N here.</help>
			</entry>
			<entry name="KALLSYMS">
				<label>Load all symbols for debugging/ksymoops&quot; if EXPERT</label>
				<help>Say Y here to let the kernel print out symbolic crash information and
symbolic stack backtraces. This increases the size of the kernel
somewhat, as all symbols have to be loaded into the kernel image.</help>
			</entry>
			<entry name="KALLSYMS_ALL">
				<label>Include all symbols in kallsyms</label>
				<help>Normally kallsyms only contains the symbols of functions for nicer
OOPS messages and backtraces (i.e., symbols from the text and inittext
sections). This is sufficient for most cases. And only in very rare
cases (e.g., when a debugger is used) all symbols are required (e.g.,
names of variables from the data sections, etc).

This option makes sure that all symbols are loaded into the kernel
image (i.e., symbols from all sections) in cost of increased kernel
size (depending on the kernel configuration, it may be 300KiB or
something like this).

Say N unless you really need all symbols.</help>
			</entry>
			<entry name="KALLSYMS_ABSOLUTE_PERCPU"/>
			<entry name="KALLSYMS_BASE_RELATIVE">
				<help>Instead of emitting them as absolute values in the native word size,
emit the symbol references in the kallsyms table as 32-bit entries,
each containing a relative value in the range [base, base + U32_MAX]
or, when KALLSYMS_ABSOLUTE_PERCPU is in effect, each containing either
an absolute value in the range [0, S32_MAX] or a relative value in the
range [base, base + S32_MAX], where base is the lowest relative symbol
address encountered in the image.

On 64-bit builds, this reduces the size of the address table by 50%,
but more importantly, it results in entries whose values are build
time constants, and no relocation pass is required at runtime to fix
up the entries based on the runtime load address of the kernel.</help>
			</entry>
			<entry name="PRINTK">
				<label>Enable support for printk&quot; if EXPERT</label>
				<help>This option enables normal printk support. Removing it
eliminates most of the message strings from the kernel image
and makes the kernel more or less silent. As this makes it
very difficult to diagnose system problems, saying N here is
strongly discouraged.</help>
			</entry>
			<entry name="PRINTK_NMI"/>
			<entry name="BUG">
				<label>BUG() support&quot; if EXPERT</label>
				<help>Disabling this option eliminates support for BUG and WARN, reducing
the size of your kernel image and potentially quietly ignoring
numerous fatal conditions. You should only consider disabling this
option for embedded systems with no facilities for reporting errors.
Just say Y.</help>
			</entry>
			<entry name="ELF_CORE">
				<label>Enable ELF core dumps&quot; if EXPERT</label>
				<help>Enable support for generating core dumps. Disabling saves about 4k.</help>
			</entry>
			<entry name="PCSPKR_PLATFORM">
				<label>Enable PC-Speaker support&quot; if EXPERT</label>
				<help>This option allows to disable the internal PC-Speaker
support, saving some memory.</help>
			</entry>
			<entry name="BASE_FULL">
				<label>Enable full-sized data structures for core&quot; if EXPERT</label>
				<help>Disabling this option reduces the size of miscellaneous core
kernel data structures. This saves memory on small machines,
but may reduce performance.</help>
			</entry>
			<entry name="FUTEX">
				<label>Enable futex support&quot; if EXPERT</label>
				<help>Disabling this option will cause the kernel to be built without
support for &quot;fast userspace mutexes&quot;.  The resulting kernel may not
run glibc-based applications correctly.</help>
			</entry>
			<entry name="HAVE_FUTEX_CMPXCHG">
				<help>Architectures should select this if futex_atomic_cmpxchg_inatomic()
is implemented and always working. This removes a couple of runtime
checks.</help>
			</entry>
			<entry name="EPOLL">
				<label>Enable eventpoll support&quot; if EXPERT</label>
				<help>Disabling this option will cause the kernel to be built without
support for epoll family of system calls.</help>
			</entry>
			<entry name="SIGNALFD">
				<label>Enable signalfd() system call&quot; if EXPERT</label>
				<help>Enable the signalfd() system call that allows to receive signals
on a file descriptor.

If unsure, say Y.</help>
			</entry>
			<entry name="TIMERFD">
				<label>Enable timerfd() system call&quot; if EXPERT</label>
				<help>Enable the timerfd() system call that allows to receive timer
events on a file descriptor.

If unsure, say Y.</help>
			</entry>
			<entry name="EVENTFD">
				<label>Enable eventfd() system call&quot; if EXPERT</label>
				<help>Enable the eventfd() system call that allows to receive both
kernel notification (ie. KAIO) or userspace notifications.

If unsure, say Y.</help>
			</entry>
			<entry name="BPF_SYSCALL">
				<label>Enable bpf() system call</label>
				<help>Enable the bpf() system call that allows to manipulate eBPF
programs and maps via file descriptors.</help>
			</entry>
			<entry name="SHMEM">
				<label>Use full shmem filesystem&quot; if EXPERT</label>
				<help>The shmem is an internal filesystem used to manage shared memory.
It is backed by swap and manages resource limits. It is also exported
to userspace as tmpfs if TMPFS is enabled. Disabling this
option replaces shmem and tmpfs with the much simpler ramfs code,
which may be appropriate on small systems without swap.</help>
			</entry>
			<entry name="AIO">
				<label>Enable AIO support&quot; if EXPERT</label>
				<help>This option enables POSIX asynchronous I/O which may by used
by some high performance threaded applications. Disabling
this option saves about 7k.</help>
			</entry>
			<entry name="ADVISE_SYSCALLS">
				<label>Enable madvise/fadvise syscalls&quot; if EXPERT</label>
				<help>This option enables the madvise and fadvise syscalls, used by
applications to advise the kernel about their future memory or file
usage, improving performance. If building an embedded system where no
applications use these syscalls, you can disable this option to save
space.</help>
			</entry>
			<entry name="USERFAULTFD">
				<label>Enable userfaultfd() system call</label>
				<help>Enable the userfaultfd() system call that allows to intercept and
handle page faults in userland.</help>
			</entry>
			<entry name="PCI_QUIRKS">
				<label>Enable PCI quirk workarounds&quot; if EXPERT</label>
				<help>This enables workarounds for various PCI chipset
bugs/quirks. Disable this only if your target machine is
unaffected by PCI quirks.</help>
			</entry>
			<entry name="MEMBARRIER">
				<label>Enable membarrier() system call&quot; if EXPERT</label>
				<help>Enable the membarrier() system call that allows issuing memory
barriers across all running threads, which can be used to distribute
the cost of user-space memory barriers asymmetrically by transforming
pairs of memory barriers into pairs consisting of membarrier() and a
compiler barrier.

If unsure, say Y.</help>
			</entry>
			<entry name="EMBEDDED">
				<label>Embedded system</label>
				<help>This option should be enabled if compiling the kernel for
an embedded system so certain expert options are available
for configuration.</help>
			</entry>
			<entry name="HAVE_PERF_EVENTS">
				<help>See tools/perf/design.txt for details.</help>
			</entry>
			<entry name="PERF_USE_VMALLOC">
				<help>See tools/perf/design.txt for details</help>
			</entry>
			<container name="Kernel_Performance_Events_And_Counters">
				<label>Kernel Performance Events And Counters</label>
				<entry name="PERF_EVENTS">
					<label>Kernel performance events and counters</label>
					<help>Enable kernel support for various performance events provided
by software and hardware.

Software events are supported either built-in or via the
use of generic tracepoints.

Most modern CPUs support performance events via performance
counter registers. These registers count the number of certain
types of hw events: such as instructions executed, cachemisses
suffered, or branches mis-predicted - without slowing down the
kernel or applications. These registers can also trigger interrupts
when a threshold number of events have passed - and can thus be
used to profile the code that runs on that CPU.

The Linux Performance Event subsystem provides an abstraction of
these software and hardware event capabilities, available via a
system call and used by the &quot;perf&quot; utility in tools/perf/. It
provides per task and per CPU counters, and it provides event
capabilities on top of those.

Say Y if unsure.</help>
				</entry>
				<entry name="DEBUG_PERF_USE_VMALLOC">
					<label>Debug: use vmalloc to back perf mmap() buffers</label>
					<help>Use vmalloc memory to back perf mmap() buffers.

Mostly useful for debugging the vmalloc code on platforms
that don't require it.

Say N if unsure.</help>
				</entry>
			</container>
			<entry name="VM_EVENT_COUNTERS">
				<label>Enable VM event counters for /proc/vmstat&quot; if EXPERT</label>
				<help>VM event counters are needed for event counts to be shown.
This option allows the disabling of the VM event counters
on EXPERT systems.  /proc/vmstat will only show page counts
if VM event counters are disabled.</help>
			</entry>
			<entry name="SLUB_DEBUG">
				<label>Enable SLUB debugging support&quot; if EXPERT</label>
				<help>SLUB has extensive debug support features. Disabling these can
result in significant savings in code size. This also disables
SLUB sysfs support. /sys/slab will not exist and there will be
no support for cache validation etc.</help>
			</entry>
			<entry name="COMPAT_BRK">
				<label>Disable heap randomization</label>
				<help>Randomizing heap placement makes heap exploits harder, but it
also breaks ancient binaries (including anything libc5 based).
This option changes the bootup default to heap randomization
disabled, and can be overridden at runtime by setting
/proc/sys/kernel/randomize_va_space to 2.

On non-ancient distros (post-2000 ones) N is usually a safe choice.</help>
			</entry>
			<entry name="SLAB">
				<label>SLAB</label>
				<help>The regular slab allocator that is established and known to work
well in all environments. It organizes cache hot objects in
per cpu and per node queues.</help>
			</entry>
			<entry name="SLUB">
				<label>SLUB (Unqueued Allocator)</label>
				<help>SLUB is a slab allocator that minimizes cache line usage
instead of managing queues of cached objects (SLAB approach).
Per cpu caching is realized using slabs of objects instead
of queues of objects. SLUB can use memory efficiently
and has enhanced diagnostics. SLUB is the default choice for
a slab allocator.</help>
			</entry>
			<entry name="SLOB">
				<label>SLOB (Simple Allocator)</label>
				<help>SLOB replaces the stock allocator with a drastically simpler
allocator. SLOB is generally more space efficient but
does not perform as well on large systems.</help>
			</entry>
			<entry name="SLAB_FREELIST_RANDOM">
				<label>SLAB freelist randomization</label>
				<help>Randomizes the freelist order used on creating new pages. This
security feature reduces the predictability of the kernel slab
allocator against heap overflows.</help>
			</entry>
			<entry name="SLUB_CPU_PARTIAL">
				<label>SLUB per cpu partial cache</label>
				<help>Per cpu partial caches accellerate objects allocation and freeing
that is local to a processor at the price of more indeterminism
in the latency of the free. On overflow these caches will be cleared
which requires the taking of locks that may cause latency spikes.
Typically one would choose no for a realtime system.</help>
			</entry>
			<entry name="MMAP_ALLOW_UNINITIALIZED">
				<label>Allow mmapped anonymous memory to be uninitialized</label>
				<help>Normally, and according to the Linux spec, anonymous memory obtained
from mmap() has it's contents cleared before it is passed to
userspace.  Enabling this config option allows you to request that
mmap() skip that if it is given an MAP_UNINITIALIZED flag, thus
providing a huge performance boost.  If this option is not enabled,
then the flag will be ignored.

This is taken advantage of by uClibc's malloc(), and also by
ELF-FDPIC binfmt's brk and stack allocator.

Because of the obvious security issues, this option should only be
enabled on embedded devices where you control what is run in
userspace.  Since that isn't generally a problem on no-MMU systems,
it is normally safe to say Y here.

See Documentation/nommu-mmap.txt for more information.</help>
			</entry>
			<entry name="SYSTEM_DATA_VERIFICATION">
				<help>Provide PKCS#7 message verification using the contents of the system
trusted keyring to provide public keys.  This then can be used for
module verification, kexec image verification and firmware blob
verification.</help>
			</entry>
			<entry name="SYSTEM_BLACKLIST_KEYRING">
				<label>Provide system-wide ring of blacklisted keys</label>
				<help>Provide a system keyring to which blacklisted keys can be added.
Keys in the keyring are considered entirely untrusted.  Keys in this
keyring are used by the module signature checking to reject loading
of modules signed with a blacklisted key.</help>
			</entry>
			<entry name="PROFILING">
				<label>Profiling support</label>
				<help>Say Y here to enable the extended profiling support mechanisms used
by profilers such as OProfile.</help>
			</entry>
			<entry name="TRACEPOINTS"/>
			<entry name="KEXEC_CORE"/>
			<entry name="OPROFILE">
				<label>OProfile system profiling</label>
				<help>OProfile is a profiling system capable of profiling the
whole system, include the kernel, kernel modules, libraries,
and applications.

If unsure, say N.</help>
			</entry>
			<entry name="OPROFILE_EVENT_MULTIPLEX">
				<label>OProfile multiplexing support (EXPERIMENTAL)</label>
				<help>The number of hardware counters is limited. The multiplexing
feature enables OProfile to gather more events than counters
are provided by the hardware. This is realized by switching
between events at an user specified time interval.

If unsure, say N.</help>
			</entry>
			<entry name="HAVE_OPROFILE"/>
			<entry name="OPROFILE_NMI_TIMER"/>
			<entry name="KPROBES">
				<label>Kprobes</label>
				<help>Kprobes allows you to trap at almost any kernel address and
execute a callback function.  register_kprobe() establishes
a probepoint and specifies the callback.  Kprobes is useful
for kernel debugging, non-intrusive instrumentation and testing.
If in doubt, say &quot;N&quot;.</help>
			</entry>
			<entry name="JUMP_LABEL">
				<label>Optimize very unlikely/likely branches</label>
				<help>This option enables a transparent branch optimization that
makes certain almost-always-true or almost-always-false branch
conditions even cheaper to execute within the kernel.

Certain performance-sensitive kernel code, such as trace points,
scheduler functionality, networking code and KVM have such
branches and include support for this optimization technique.

If it is detected that the compiler has support for &quot;asm goto&quot;,
the kernel will compile such branches with just a nop
instruction. When the condition flag is toggled to true, the
nop will be converted to a jump instruction to execute the
conditional block of instructions.

This technique lowers overhead and stress on the branch prediction
of the processor and generally makes the kernel faster. The update
of the condition is slower, but those are always very rare.

( On 32-bit x86, the necessary options added to the compiler
flags may increase the size of the kernel slightly. )</help>
			</entry>
			<entry name="STATIC_KEYS_SELFTEST">
				<label>Static key selftest</label>
				<help>Boot time self-test of the branch patching code.</help>
			</entry>
			<entry name="OPTPROBES"/>
			<entry name="KPROBES_ON_FTRACE">
				<help>If function tracer is enabled and the arch supports full
passing of pt_regs to function tracing, then kprobes can
optimize on top of function tracing.</help>
			</entry>
			<entry name="UPROBES">
				<help>Uprobes is the user-space counterpart to kprobes: they
enable instrumentation applications (such as 'perf probe')
to establish unintrusive probes in user-space binaries and
libraries, by executing handler functions when the probes
are hit by user-space applications.

( These probes come in the form of single-byte breakpoints,
managed by the kernel and kept transparent to the probed
application. )</help>
			</entry>
			<entry name="HAVE_64BIT_ALIGNED_ACCESS">
				<help>Some architectures require 64 bit accesses to be 64 bit
aligned, which also requires structs containing 64 bit values
to be 64 bit aligned too. This includes some 32 bit
architectures which can do 64 bit accesses, as well as 64 bit
architectures without unaligned access.

This symbol should be selected by an architecture if 64 bit
accesses are required to be 64 bit aligned in this way even
though it is not a 64 bit architecture.

See Documentation/unaligned-memory-access.txt for more
information on the topic of unaligned memory accesses.</help>
			</entry>
			<entry name="HAVE_EFFICIENT_UNALIGNED_ACCESS">
				<help>Some architectures are unable to perform unaligned accesses
without the use of get_unaligned/put_unaligned. Others are
unable to perform such accesses efficiently (e.g. trap on
unaligned access and require fixing it up in the exception
handler.)

This symbol should be selected by an architecture if it can
perform unaligned accesses efficiently to allow different
code paths to be selected for these cases. Some network
drivers, for example, could opt to not fix up alignment
problems with received packets if doing so would not help
much.

See Documentation/unaligned-memory-access.txt for more
information on the topic of unaligned memory accesses.</help>
			</entry>
			<entry name="ARCH_USE_BUILTIN_BSWAP">
				<help>Modern versions of GCC (since 4.4) have builtin functions
for handling byte-swapping. Using these, instead of the old
inline assembler that the architecture code provides in the
__arch_bswapXX() macros, allows the compiler to see what's
happening and offers more opportunity for optimisation. In
particular, the compiler will be able to combine the byteswap
with a nearby load or store and use load-and-swap or
store-and-swap instructions if the architecture has them. It
should almost *never* result in code which is worse than the
hand-coded assembler in &lt;asm/swab.h&gt;.  But just in case it
does, the use of the builtins is optional.

Any architecture with load-and-swap or store-and-swap
instructions should set this. And it shouldn't hurt to set it
on architectures that don't have such instructions.</help>
			</entry>
			<entry name="KRETPROBES"/>
			<entry name="USER_RETURN_NOTIFIER">
				<help>Provide a kernel-internal notification when a cpu is about to
switch to user mode.</help>
			</entry>
			<entry name="HAVE_IOREMAP_PROT"/>
			<entry name="HAVE_KPROBES"/>
			<entry name="HAVE_KRETPROBES"/>
			<entry name="HAVE_OPTPROBES"/>
			<entry name="HAVE_KPROBES_ON_FTRACE"/>
			<entry name="HAVE_NMI"/>
			<entry name="HAVE_NMI_WATCHDOG"/>
			<entry name="HAVE_ARCH_TRACEHOOK"/>
			<entry name="HAVE_DMA_CONTIGUOUS"/>
			<entry name="GENERIC_SMP_IDLE_THREAD"/>
			<entry name="GENERIC_IDLE_POLL_SETUP"/>
			<entry name="ARCH_INIT_TASK"/>
			<entry name="ARCH_TASK_STRUCT_ALLOCATOR"/>
			<entry name="ARCH_THREAD_STACK_ALLOCATOR"/>
			<entry name="ARCH_WANTS_DYNAMIC_TASK_STRUCT"/>
			<entry name="HAVE_REGS_AND_STACK_ACCESS_API">
				<help>This symbol should be selected by an architecure if it supports
the API needed to access registers and stack entries from pt_regs,
declared in asm/ptrace.h
For example the kprobes-based event tracer needs this API.</help>
			</entry>
			<entry name="HAVE_CLK">
				<help>The &lt;linux/clk.h&gt; calls support software clock gating and
thus are a key power management tool on many systems.</help>
			</entry>
			<entry name="HAVE_DMA_API_DEBUG"/>
			<entry name="HAVE_HW_BREAKPOINT"/>
			<entry name="HAVE_MIXED_BREAKPOINTS_REGS">
				<help>Depending on the arch implementation of hardware breakpoints,
some of them have separate registers for data and instruction
breakpoints addresses, others have mixed registers to store
them but define the access type in a control register.
Select this option if your arch implements breakpoints under the
latter fashion.</help>
			</entry>
			<entry name="HAVE_USER_RETURN_NOTIFIER"/>
			<entry name="HAVE_PERF_EVENTS_NMI">
				<help>System hardware can generate an NMI using the perf event
subsystem.  Also has support for calculating CPU cycle events
to determine how many clock cycles in a given period.</help>
			</entry>
			<entry name="HAVE_PERF_REGS">
				<help>Support selective register dumps for perf events. This includes
bit-mapping of each registers and a unique architecture id.</help>
			</entry>
			<entry name="HAVE_PERF_USER_STACK_DUMP">
				<help>Support user stack dumps for perf event samples. This needs
access to the user stack pointer which is not unified across
architectures.</help>
			</entry>
			<entry name="HAVE_ARCH_JUMP_LABEL"/>
			<entry name="HAVE_RCU_TABLE_FREE"/>
			<entry name="ARCH_HAVE_NMI_SAFE_CMPXCHG"/>
			<entry name="HAVE_ALIGNED_STRUCT_PAGE">
				<help>This makes sure that struct pages are double word aligned and that
e.g. the SLUB allocator can perform double word atomic operations
on a struct page for better performance. However selecting this
might increase the size of a struct page by a word.</help>
			</entry>
			<entry name="HAVE_CMPXCHG_LOCAL"/>
			<entry name="HAVE_CMPXCHG_DOUBLE"/>
			<entry name="ARCH_WANT_IPC_PARSE_VERSION"/>
			<entry name="ARCH_WANT_COMPAT_IPC_PARSE_VERSION"/>
			<entry name="ARCH_WANT_OLD_COMPAT_IPC"/>
			<entry name="HAVE_ARCH_SECCOMP_FILTER">
				<help>An arch should select this symbol if it provides all of these things:
- syscall_get_arch()
- syscall_get_arguments()
- syscall_rollback()
- syscall_set_return_value()
- SIGSYS siginfo_t support
- secure_computing is called from a ptrace_event()-safe context
- secure_computing return value is checked and a return value of -1
results in the system call being skipped immediately.
- seccomp syscall wired up</help>
			</entry>
			<entry name="SECCOMP_FILTER">
				<help>Enable tasks to build secure computing environments defined
in terms of Berkeley Packet Filter programs which implement
task-defined system call filtering polices.

See Documentation/prctl/seccomp_filter.txt for details.</help>
			</entry>
			<entry name="HAVE_GCC_PLUGINS">
				<help>An arch should select this symbol if it supports building with
GCC plugins.</help>
			</entry>
			<entry name="GCC_PLUGINS">
				<label>GCC plugins</label>
				<help>GCC plugins are loadable modules that provide extra features to the
compiler. They are useful for runtime instrumentation and static analysis.

See Documentation/gcc-plugins.txt for details.</help>
			</entry>
			<entry name="GCC_PLUGIN_CYC_COMPLEXITY">
				<label>Compute the cyclomatic complexity of a function</label>
				<help>The complexity M of a function's control flow graph is defined as:
M = E - N + 2P
where

E = the number of edges
N = the number of nodes
P = the number of connected components (exit nodes).</help>
			</entry>
			<entry name="GCC_PLUGIN_SANCOV">
				<help>This plugin inserts a __sanitizer_cov_trace_pc() call at the start of
basic blocks. It supports all gcc versions with plugin support (from
gcc-4.5 on). It is based on the commit &quot;Add fuzzing coverage support&quot;
by Dmitry Vyukov &lt;dvyukov@google.com&gt;.</help>
			</entry>
			<entry name="HAVE_CC_STACKPROTECTOR">
				<help>An arch should select this symbol if:
- its compiler supports the -fstack-protector option
- it has implemented a stack canary (e.g. __stack_chk_guard)</help>
			</entry>
			<entry name="CC_STACKPROTECTOR">
				<help>Set when a stack-protector mode is enabled, so that the build
can enable kernel-side support for the GCC feature.</help>
			</entry>
			<entry name="CC_STACKPROTECTOR_NONE">
				<label>None</label>
				<help>Disable &quot;stack-protector&quot; GCC feature.</help>
			</entry>
			<entry name="CC_STACKPROTECTOR_REGULAR">
				<label>Regular</label>
				<help>Functions will have the stack-protector canary logic added if they
have an 8-byte or larger character array on the stack.

This feature requires gcc version 4.2 or above, or a distribution
gcc with the feature backported (&quot;-fstack-protector&quot;).

On an x86 &quot;defconfig&quot; build, this feature adds canary checks to
about 3% of all kernel functions, which increases kernel code size
by about 0.3%.</help>
			</entry>
			<entry name="CC_STACKPROTECTOR_STRONG">
				<label>Strong</label>
				<help>Functions will have the stack-protector canary logic added in any
of the following conditions:

- local variable's address used as part of the right hand side of an
assignment or function argument
- local variable is an array (or union containing an array),
regardless of array type or length
- uses register local variables

This feature requires gcc version 4.9 or above, or a distribution
gcc with the feature backported (&quot;-fstack-protector-strong&quot;).

On an x86 &quot;defconfig&quot; build, this feature adds canary checks to
about 20% of all kernel functions, which increases the kernel code
size by about 2%.</help>
			</entry>
			<entry name="HAVE_ARCH_WITHIN_STACK_FRAMES">
				<help>An architecture should select this if it can walk the kernel stack
frames to determine if an object is part of either the arguments
or local variables (i.e. that it excludes saved return addresses,
and similar) by implementing an inline arch_within_stack_frames(),
which is used by CONFIG_HARDENED_USERCOPY.</help>
			</entry>
			<entry name="HAVE_CONTEXT_TRACKING">
				<help>Provide kernel/user boundaries probes necessary for subsystems
that need it, such as userspace RCU extended quiescent state.
Syscalls need to be wrapped inside user_exit()-user_enter() through
the slow path using TIF_NOHZ flag. Exceptions handlers must be
wrapped as well. Irqs are already protected inside
rcu_irq_enter/rcu_irq_exit() but preemption or signal handling on
irq exit still need to be protected.</help>
			</entry>
			<entry name="HAVE_VIRT_CPU_ACCOUNTING"/>
			<entry name="HAVE_VIRT_CPU_ACCOUNTING_GEN">
				<help>With VIRT_CPU_ACCOUNTING_GEN, cputime_t becomes 64-bit.
Before enabling this option, arch code must be audited
to ensure there are no races in concurrent read/write of
cputime_t. For example, reading/writing 64-bit cputime_t on
some 32-bit arches may require multiple accesses, so proper
locking is needed to protect against concurrent accesses.</help>
			</entry>
			<entry name="HAVE_IRQ_TIME_ACCOUNTING">
				<help>Archs need to ensure they use a high enough resolution clock to
support irq time accounting and then call enable_sched_clock_irqtime().</help>
			</entry>
			<entry name="HAVE_ARCH_TRANSPARENT_HUGEPAGE"/>
			<entry name="HAVE_ARCH_HUGE_VMAP"/>
			<entry name="HAVE_ARCH_SOFT_DIRTY"/>
			<entry name="HAVE_MOD_ARCH_SPECIFIC">
				<help>The arch uses struct mod_arch_specific to store data.  Many arches
just need a simple module loader without arch specific data - those
should not enable this.</help>
			</entry>
			<entry name="MODULES_USE_ELF_RELA">
				<help>Modules only use ELF RELA relocations.  Modules with ELF REL
relocations will give an error.</help>
			</entry>
			<entry name="MODULES_USE_ELF_REL">
				<help>Modules only use ELF REL relocations.  Modules with ELF RELA
relocations will give an error.</help>
			</entry>
			<entry name="HAVE_UNDERSCORE_SYMBOL_PREFIX">
				<help>Some architectures generate an _ in front of C symbols; things like
module loading and assembly files need to know about this.</help>
			</entry>
			<entry name="HAVE_IRQ_EXIT_ON_IRQ_STACK">
				<help>Architecture doesn't only execute the irq handler on the irq stack
but also irq_exit(). This way we can process softirqs on this irq
stack instead of switching to a new one when we call __do_softirq()
in the end of an hardirq.
This spares a stack switch and improves cache usage on softirq
processing.</help>
			</entry>
			<entry name="PGTABLE_LEVELS"/>
			<entry name="ARCH_HAS_ELF_RANDOMIZE">
				<help>An architecture supports choosing randomized locations for
stack, mmap, brk, and ET_DYN. Defined functions:
- arch_mmap_rnd()
- arch_randomize_brk()</help>
			</entry>
			<entry name="HAVE_ARCH_MMAP_RND_BITS">
				<help>An arch should select this symbol if it supports setting a variable
number of bits for use in establishing the base address for mmap
allocations, has MMU enabled and provides values for both:
- ARCH_MMAP_RND_BITS_MIN
- ARCH_MMAP_RND_BITS_MAX</help>
			</entry>
			<entry name="HAVE_EXIT_THREAD">
				<help>An architecture implements exit_thread.</help>
			</entry>
			<entry name="ARCH_MMAP_RND_BITS_MIN"/>
			<entry name="ARCH_MMAP_RND_BITS_MAX"/>
			<entry name="ARCH_MMAP_RND_BITS_DEFAULT"/>
			<entry name="ARCH_MMAP_RND_BITS">
				<label>Number of bits to use for ASLR of mmap base address&quot; if EXPERT</label>
				<help>This value can be used to select the number of bits to use to
determine the random offset to the base address of vma regions
resulting from mmap allocations. This value will be bounded
by the architecture's minimum and maximum supported values.

This value can be changed after boot using the
/proc/sys/vm/mmap_rnd_bits tunable</help>
			</entry>
			<entry name="HAVE_ARCH_MMAP_RND_COMPAT_BITS">
				<help>An arch should select this symbol if it supports running applications
in compatibility mode, supports setting a variable number of bits for
use in establishing the base address for mmap allocations, has MMU
enabled and provides values for both:
- ARCH_MMAP_RND_COMPAT_BITS_MIN
- ARCH_MMAP_RND_COMPAT_BITS_MAX</help>
			</entry>
			<entry name="ARCH_MMAP_RND_COMPAT_BITS_MIN"/>
			<entry name="ARCH_MMAP_RND_COMPAT_BITS_MAX"/>
			<entry name="ARCH_MMAP_RND_COMPAT_BITS_DEFAULT"/>
			<entry name="ARCH_MMAP_RND_COMPAT_BITS">
				<label>Number of bits to use for ASLR of mmap base address for compatible applications&quot; if EXPERT</label>
				<help>This value can be used to select the number of bits to use to
determine the random offset to the base address of vma regions
resulting from mmap allocations for compatible applications This
value will be bounded by the architecture's minimum and maximum
supported values.

This value can be changed after boot using the
/proc/sys/vm/mmap_rnd_compat_bits tunable</help>
			</entry>
			<entry name="HAVE_COPY_THREAD_TLS">
				<help>Architecture provides copy_thread_tls to accept tls argument via
normal C parameter passing, rather than extracting the syscall
argument from pt_regs.</help>
			</entry>
			<entry name="HAVE_STACK_VALIDATION">
				<help>Architecture supports the 'objtool check' host tool command, which
performs compile-time stack metadata validation.</help>
			</entry>
			<entry name="HAVE_ARCH_HASH">
				<help>If this is set, the architecture provides an &lt;asm/hash.h&gt;
file which provides platform-specific implementations of some
functions in &lt;linux/hash.h&gt; or fs/namei.c.</help>
			</entry>
			<entry name="ISA_BUS_API"/>
			<entry name="CLONE_BACKWARDS">
				<help>Architecture has tls passed as the 4th argument of clone(2),
not the 5th one.</help>
			</entry>
			<entry name="CLONE_BACKWARDS2">
				<help>Architecture has the first two arguments of clone(2) swapped.</help>
			</entry>
			<entry name="CLONE_BACKWARDS3">
				<help>Architecture has tls passed as the 3rd argument of clone(2),
not the 5th one.</help>
			</entry>
			<entry name="ODD_RT_SIGACTION">
				<help>Architecture has unusual rt_sigaction(2) arguments</help>
			</entry>
			<entry name="OLD_SIGSUSPEND">
				<help>Architecture has old sigsuspend(2) syscall, of one-argument variety</help>
			</entry>
			<entry name="OLD_SIGSUSPEND3">
				<help>Even weirder antique ABI - three-argument sigsuspend(2)</help>
			</entry>
			<entry name="OLD_SIGACTION">
				<help>Architecture has old sigaction(2) syscall.  Nope, not the same
as OLD_SIGSUSPEND | OLD_SIGSUSPEND3 - alpha has sigsuspend(2),
but fairly different variant of sigaction(2), thanks to OSF/1
compatibility...</help>
			</entry>
			<entry name="COMPAT_OLD_SIGACTION"/>
			<entry name="ARCH_NO_COHERENT_DMA_MMAP"/>
			<entry name="CPU_NO_EFFICIENT_FFS"/>
			<container name="GCOV_based_kernel_profiling">
				<label>GCOV-based kernel profiling</label>
				<entry name="GCOV_KERNEL">
					<label>Enable gcov-based kernel profiling</label>
					<help>This option enables gcov-based code profiling (e.g. for code coverage
measurements).

If unsure, say N.

Additionally specify CONFIG_GCOV_PROFILE_ALL=y to get profiling data
for the entire kernel. To enable profiling for specific files or
directories, add a line similar to the following to the respective
Makefile:

For a single file (e.g. main.o):
GCOV_PROFILE_main.o := y

For all files in one directory:
GCOV_PROFILE := y

To exclude files from being profiled even when CONFIG_GCOV_PROFILE_ALL
is specified, use:

GCOV_PROFILE_main.o := n
and:
GCOV_PROFILE := n

Note that the debugfs filesystem has to be mounted to access
profiling data.</help>
				</entry>
				<entry name="ARCH_HAS_GCOV_PROFILE_ALL"/>
				<entry name="GCOV_PROFILE_ALL">
					<label>Profile entire Kernel</label>
					<help>This options activates profiling for the entire kernel.

If unsure, say N.

Note that a kernel compiled with profiling flags will be significantly
larger and run slower. Also be sure to exclude files from profiling
which are not linked to the kernel image to prevent linker errors.</help>
				</entry>
				<entry name="GCOV_FORMAT_AUTODETECT">
					<label>Autodetect</label>
					<help>Select this option to use the format that corresponds to your GCC
version.</help>
				</entry>
				<entry name="GCOV_FORMAT_3_4">
					<label>GCC 3.4 format</label>
					<help>Select this option to use the format defined by GCC 3.4.</help>
				</entry>
				<entry name="GCOV_FORMAT_4_7">
					<label>GCC 4.7 format</label>
					<help>Select this option to use the format defined by GCC 4.7.</help>
				</entry>
			</container>
		</container>
		<entry name="HAVE_GENERIC_DMA_COHERENT"/>
		<entry name="SLABINFO"/>
		<entry name="RT_MUTEXES"/>
		<entry name="BASE_SMALL"/>
		<entry name="MODULES">
			<label>Enable loadable module support</label>
			<help>Kernel modules are small pieces of compiled code which can
be inserted in the running kernel, rather than being
permanently built into the kernel.  You use the &quot;modprobe&quot;
tool to add (and sometimes remove) them.  If you say Y here,
many parts of the kernel can be built as modules (by
answering M instead of Y where indicated): this is most
useful for infrequently used options which are not required
for booting.  For more information, see the man pages for
modprobe, lsmod, modinfo, insmod and rmmod.

If you say Y here, you will need to run &quot;make
modules_install&quot; to put the modules under /lib/modules/
where modprobe can find them (you may need to be root to do
this).

If unsure, say Y.</help>
		</entry>
		<entry name="MODULE_FORCE_LOAD">
			<label>Forced module loading</label>
			<help>Allow loading of modules without version information (ie. modprobe
--force).  Forced module loading sets the 'F' (forced) taint flag and
is usually a really bad idea.</help>
		</entry>
		<entry name="MODULE_UNLOAD">
			<label>Module unloading</label>
			<help>Without this option you will not be able to unload any
modules (note that some modules may not be unloadable
anyway), which makes your kernel smaller, faster
and simpler.  If unsure, say Y.</help>
		</entry>
		<entry name="MODULE_FORCE_UNLOAD">
			<label>Forced module unloading</label>
			<help>This option allows you to force a module to unload, even if the
kernel believes it is unsafe: the kernel will remove the module
without waiting for anyone to stop using it (using the -f option to
rmmod).  This is mainly for kernel developers and desperate users.
If unsure, say N.</help>
		</entry>
		<entry name="MODVERSIONS">
			<label>Module versioning support</label>
			<help>Usually, you have to use modules compiled with your kernel.
Saying Y here makes it sometimes possible to use modules
compiled for different kernels, by adding enough information
to the modules to (hopefully) spot any changes which would
make them incompatible with the kernel you are running.  If
unsure, say N.</help>
		</entry>
		<entry name="MODULE_SRCVERSION_ALL">
			<label>Source checksum for all modules</label>
			<help>Modules which contain a MODULE_VERSION get an extra &quot;srcversion&quot;
field inserted into their modinfo section, which contains a
sum of the source files which made it.  This helps maintainers
see exactly which source was used to build a module (since
others sometimes change the module source without updating
the version).  With this option, such a &quot;srcversion&quot; field
will be created for all modules.  If unsure, say N.</help>
		</entry>
		<entry name="MODULE_SIG">
			<label>Module signature verification</label>
			<help>Check modules for valid signatures upon load: the signature
is simply appended to the module. For more information see
Documentation/module-signing.txt.

Note that this option adds the OpenSSL development packages as a
kernel build dependency so that the signing tool can use its crypto
library.

!!!WARNING!!!  If you enable this option, you MUST make sure that the
module DOES NOT get stripped after being signed.  This includes the
debuginfo strip done by some packagers (such as rpmbuild) and
inclusion into an initramfs that wants the module size reduced.</help>
		</entry>
		<entry name="MODULE_SIG_FORCE">
			<label>Require modules to be validly signed</label>
			<help>Reject unsigned modules or signed modules for which we don't have a
key.  Without this, such modules will simply taint the kernel.</help>
		</entry>
		<entry name="MODULE_SIG_ALL">
			<label>Automatically sign all modules</label>
			<help>Sign all modules during make modules_install. Without this option,
modules must be signed manually, using the scripts/sign-file tool.</help>
		</entry>
		<entry name="MODULE_SIG_UEFI">
			<label>Allow modules signed with certs stored in UEFI</label>
			<help>This will import certificates stored in UEFI and allow modules
signed with those to be loaded.  It will also disallow loading
of modules stored in the UEFI dbx variable.</help>
		</entry>
		<entry name="MODULE_SIG_SHA1">
			<label>Sign modules with SHA-1</label>
		</entry>
		<entry name="MODULE_SIG_SHA224">
			<label>Sign modules with SHA-224</label>
		</entry>
		<entry name="MODULE_SIG_SHA256">
			<label>Sign modules with SHA-256</label>
		</entry>
		<entry name="MODULE_SIG_SHA384">
			<label>Sign modules with SHA-384</label>
		</entry>
		<entry name="MODULE_SIG_SHA512">
			<label>Sign modules with SHA-512</label>
		</entry>
		<entry name="MODULE_SIG_HASH"/>
		<entry name="MODULE_COMPRESS">
			<label>Compress modules on installation</label>
			<help>
Compresses kernel modules when 'make modules_install' is run; gzip or
xz depending on &quot;Compression algorithm&quot; below.

module-init-tools MAY support gzip, and kmod MAY support gzip and xz.

Out-of-tree kernel modules installed using Kbuild will also be
compressed upon installation.

Note: for modules inside an initrd or initramfs, it's more efficient
to compress the whole initrd or initramfs instead.

Note: This is fully compatible with signed modules.

If in doubt, say N.

choice
prompt &quot;Compression algorithm&quot;
depends on MODULE_COMPRESS
default MODULE_COMPRESS_GZIP
help
This determines which sort of compression will be used during
'make modules_install'.

GZIP (default) and XZ are supported.

config MODULE_COMPRESS_GZIP
bool &quot;GZIP&quot;

config MODULE_COMPRESS_XZ
bool &quot;XZ&quot;

endchoice

config TRIM_UNUSED_KSYMS
bool &quot;Trim unused exported kernel symbols&quot;
depends on MODULES &amp;&amp; !UNUSED_SYMBOLS
help
The kernel and some modules make many symbols available for
other modules to use via EXPORT_SYMBOL() and variants. Depending
on the set of modules being selected in your kernel configuration,
many of those exported symbols might never be used.

This option allows for unused exported symbols to be dropped from
the build. In turn, this provides the compiler more opportunities
(especially when using LTO) for optimizing the code and reducing
binary size.  This might have some security advantages as well.

If unsure, or if you need to build out-of-tree modules, say N.

endif # MODULES

config MODULES_TREE_LOOKUP
def_bool y
depends on PERF_EVENTS || TRACING

config INIT_ALL_POSSIBLE
bool
help
Back when each arch used to define their own cpu_online_mask and
cpu_possible_mask, some of them chose to initialize cpu_possible_mask
with all 1s, and others with all 0s.  When they were centralised,
it was better to provide this option than to break all the archs
and have several arch maintainers pursuing me down dark alleys.

source &quot;block/Kconfig&quot;

config PREEMPT_NOTIFIERS
bool

config PADATA
depends on SMP
bool

# Can be selected by architectures with broken toolchains
# that get confused by correct const&lt;-&gt;read_only section
# mappings
config BROKEN_RODATA
bool

config ASN1
tristate
help
Build a simple ASN.1 grammar compiler that produces a bytecode output
that can be interpreted by the ASN.1 stream decoder and used to
inform it as to what tags are to be expected in a stream and what
functions to call on what tags.

source &quot;kernel/Kconfig.locks&quot;
</help>
		</entry>
		<entry name="FREEZER"/>
		<container name="Processor_type_and_features">
			<label>Processor type and features</label>
			<entry name="ZONE_DMA">
				<label>DMA memory allocation support&quot; if EXPERT</label>
				<help>DMA memory allocation support allows devices with less than 32-bit
addressing to allocate within the first 16MB of address space.
Disable if no such devices will be used.

If unsure, say Y.</help>
			</entry>
			<entry name="SMP">
				<label>Symmetric multi-processing support</label>
				<help>This enables support for systems with more than one CPU. If you have
a system with only one CPU, say N. If you have a system with more
than one CPU, say Y.

If you say N here, the kernel will run on uni- and multiprocessor
machines, but will use only one CPU of a multiprocessor machine. If
you say Y here, the kernel will run on many, but not all,
uniprocessor machines. On a uniprocessor machine, the kernel
will run faster if you say N here.

Note that if you say Y here and choose architecture &quot;586&quot; or
&quot;Pentium&quot; under &quot;Processor family&quot;, the kernel will not work on 486
architectures. Similarly, multiprocessor kernels for the &quot;PPro&quot;
architecture may not work on all Pentium based boards.

People using multiprocessor machines who say Y here should also say
Y to &quot;Enhanced Real Time Clock Support&quot;, below. The &quot;Advanced Power
Management&quot; code will be disabled if you say Y here.

See also &lt;file:Documentation/x86/i386/IO-APIC.txt&gt;,
&lt;file:Documentation/nmi_watchdog.txt&gt; and the SMP-HOWTO available at
&lt;http://www.tldp.org/docs.html#howto&gt;.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="X86_FEATURE_NAMES">
				<label>Processor feature human-readable names&quot; if EMBEDDED</label>
				<help>This option compiles in a table of x86 feature bits and corresponding
names.  This is required to support /proc/cpuinfo and a few kernel
messages.  You can disable this to save space, at the expense of
making those few kernel messages show numeric feature bits instead.

If in doubt, say Y.</help>
			</entry>
			<entry name="X86_FAST_FEATURE_TESTS">
				<label>Fast CPU feature tests&quot; if EMBEDDED</label>
				<help>Some fast-paths in the kernel depend on the capabilities of the CPU.
Say Y here for the kernel to patch in the appropriate code at runtime
based on the capabilities of the CPU. The infrastructure for patching
code at runtime takes up some additional space; space-constrained
embedded systems may wish to say N here to produce smaller, slightly
slower code.</help>
			</entry>
			<entry name="X86_X2APIC">
				<label>Support x2apic</label>
				<help>This enables x2apic support on CPUs that have this feature.

This allows 32-bit apic IDs (so it can support very large systems),
and accesses the local apic via MSRs not via mmio.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="X86_MPPARSE">
				<label>Enable MPS table&quot; if ACPI || SFI</label>
				<help>For old smp systems that do not have proper acpi support. Newer systems
(esp with 64bit cpus) with acpi support, MADT and DSDT will override it</help>
			</entry>
			<entry name="X86_BIGSMP">
				<label>Support for big SMP systems with more than 8 CPUs</label>
				<help>This option is needed for the systems that have more than 8 CPUs</help>
			</entry>
			<entry name="GOLDFISH"/>
			<entry name="X86_EXTENDED_PLATFORM">
				<label>Support for extended (non-PC) x86 platforms</label>
				<help>If you disable this option then the kernel will only support
standard PC platforms. (which covers the vast majority of
systems out there.)

If you enable this option then you'll be able to select support
for the following (non-PC) 32 bit x86 platforms:
Goldfish (Android emulator)
AMD Elan
RDC R-321x SoC
SGI 320/540 (Visual Workstation)
STA2X11-based (e.g. Northville)
Moorestown MID devices

If you have one of these systems, or if you want to build a
generic distribution kernel, say Y here - otherwise say N.</help>
			</entry>
			<entry name="X86_EXTENDED_PLATFORM">
				<label>Support for extended (non-PC) x86 platforms</label>
				<help>If you disable this option then the kernel will only support
standard PC platforms. (which covers the vast majority of
systems out there.)

If you enable this option then you'll be able to select support
for the following (non-PC) 64 bit x86 platforms:
Numascale NumaChip
ScaleMP vSMP
SGI Ultraviolet

If you have one of these systems, or if you want to build a
generic distribution kernel, say Y here - otherwise say N.</help>
			</entry>
			<entry name="X86_NUMACHIP">
				<label>Numascale NumaChip</label>
				<help>Adds support for Numascale NumaChip large-SMP systems. Needed to
enable more than ~168 cores.
If you don't have one of these, you should say N here.</help>
			</entry>
			<entry name="X86_VSMP">
				<label>ScaleMP vSMP</label>
				<help>Support for ScaleMP vSMP systems.  Say 'Y' here if this kernel is
supposed to run on these EM64T-based machines.  Only choose this option
if you have one of these machines.</help>
			</entry>
			<entry name="X86_UV">
				<label>SGI Ultraviolet</label>
				<help>This option is needed in order to support SGI Ultraviolet systems.
If you don't have one of these, you should say N here.</help>
			</entry>
			<entry name="X86_GOLDFISH">
				<label>Goldfish (Virtual Platform)</label>
				<help>Enable support for the Goldfish virtual platform used primarily
for Android development. Unless you are building for the Android
Goldfish emulator say N here.</help>
			</entry>
			<entry name="X86_INTEL_CE">
				<label>CE4100 TV platform</label>
				<help>Select for the Intel CE media processor (CE4100) SOC.
This option compiles in support for the CE4100 SOC for settop
boxes and media devices.</help>
			</entry>
			<entry name="X86_INTEL_MID">
				<label>Intel MID platform support</label>
				<help>Select to build a kernel capable of supporting Intel MID (Mobile
Internet Device) platform systems which do not have the PCI legacy
interfaces. If you are building for a PC class system say N here.

Intel MID platforms are based on an Intel processor and chipset which
consume less power than most of the x86 derivatives.</help>
			</entry>
			<entry name="X86_INTEL_QUARK">
				<label>Intel Quark platform support</label>
				<help>Select to include support for Quark X1000 SoC.
Say Y here if you have a Quark based system such as the Arduino
compatible Intel Galileo.</help>
			</entry>
			<entry name="X86_INTEL_LPSS">
				<label>Intel Low Power Subsystem Support</label>
				<help>Select to build support for Intel Low Power Subsystem such as
found on Intel Lynxpoint PCH. Selecting this option enables
things like clock tree (common clock framework) and pincontrol
which are needed by the LPSS peripheral drivers.</help>
			</entry>
			<entry name="X86_AMD_PLATFORM_DEVICE">
				<label>AMD ACPI2Platform devices support</label>
				<help>Select to interpret AMD specific ACPI device to platform device
such as I2C, UART, GPIO found on AMD Carrizo and later chipsets.
I2C and UART depend on COMMON_CLK to set clock. GPIO driver is
implemented under PINCTRL subsystem.</help>
			</entry>
			<entry name="IOSF_MBI">
				<label>Intel SoC IOSF Sideband support for SoC platforms</label>
				<help>This option enables sideband register access support for Intel SoC
platforms. On these platforms the IOSF sideband is used in lieu of
MSR's for some register accesses, mostly but not limited to thermal
and power. Drivers may query the availability of this device to
determine if they need the sideband in order to work on these
platforms. The sideband is available on the following SoC products.
This list is not meant to be exclusive.
- BayTrail
- Braswell
- Quark

You should say Y if you are running a kernel on one of these SoC's.</help>
			</entry>
			<entry name="IOSF_MBI_DEBUG">
				<label>Enable IOSF sideband access through debugfs</label>
				<help>Select this option to expose the IOSF sideband access registers (MCR,
MDR, MCRX) through debugfs to write and read register information from
different units on the SoC. This is most useful for obtaining device
state information for debug and analysis. As this is a general access
mechanism, users of this option would have specific knowledge of the
device they want to access.

If you don't require the option or are in doubt, say N.</help>
			</entry>
			<entry name="X86_RDC321X">
				<label>RDC R-321x SoC</label>
				<help>This option is needed for RDC R-321x system-on-chip, also known
as R-8610-(G).
If you don't have one of these chips, you should say N here.</help>
			</entry>
			<entry name="X86_32_NON_STANDARD">
				<label>Support non-standard 32-bit SMP architectures</label>
				<help>This option compiles in the bigsmp and STA2X11 default
subarchitectures.  It is intended for a generic binary
kernel. If you select them all, kernel will probe it one by
one and will fallback to default.</help>
			</entry>
			<entry name="X86_SUPPORTS_MEMORY_FAILURE"/>
			<entry name="STA2X11">
				<label>STA2X11 Companion Chip Support</label>
				<help>This adds support for boards based on the STA2X11 IO-Hub,
a.k.a. &quot;ConneXt&quot;. The chip is used in place of the standard
PC chipset, so all &quot;standard&quot; peripherals are missing. If this
option is selected the kernel will still be able to boot on
standard PC machines.</help>
			</entry>
			<entry name="X86_32_IRIS">
				<label>Eurobraille/Iris poweroff module</label>
				<help>The Iris machines from EuroBraille do not have APM or ACPI support
to shut themselves down properly.  A special I/O sequence is
needed to do so, which is what this module does at
kernel shutdown.

This is only for Iris machines from EuroBraille.

If unused, say N.</help>
			</entry>
			<entry name="SCHED_OMIT_FRAME_POINTER">
				<label>Single-depth WCHAN output</label>
				<help>Calculate simpler /proc/&lt;PID&gt;/wchan values. If this option
is disabled then wchan values will recurse back to the
caller function. This provides more accurate wchan values,
at the expense of slightly more scheduling overhead.

If in doubt, say &quot;Y&quot;.</help>
			</entry>
			<entry name="HYPERVISOR_GUEST">
				<label>Linux guest support</label>
				<help>Say Y here to enable options for running Linux under various hyper-
visors. This option enables basic hypervisor detection and platform
setup.

If you say N, all options in this submenu will be skipped and
disabled, and Linux guest support won't be built in.</help>
			</entry>
			<entry name="PARAVIRT">
				<label>Enable paravirtualization code</label>
				<help>This changes the kernel so it can modify itself when it is run
under a hypervisor, potentially improving performance significantly
over full virtualization.  However, when run without a hypervisor
the kernel is theoretically slower and slightly larger.</help>
			</entry>
			<entry name="PARAVIRT_DEBUG">
				<label>paravirt-ops debugging</label>
				<help>Enable to debug paravirt_ops internals.  Specifically, BUG if
a paravirt_op is missing when it is called.</help>
			</entry>
			<entry name="PARAVIRT_SPINLOCKS">
				<label>Paravirtualization layer for spinlocks</label>
				<help>Paravirtualized spinlocks allow a pvops backend to replace the
spinlock implementation with something virtualization-friendly
(for example, block the virtual CPU rather than spinning).

It has a minimal impact on native kernels and gives a nice performance
benefit on paravirtualized KVM / Xen kernels.

If you are unsure how to answer this question, answer Y.</help>
			</entry>
			<entry name="QUEUED_LOCK_STAT">
				<label>Paravirt queued spinlock statistics</label>
				<help>Enable the collection of statistical data on the slowpath
behavior of paravirtualized queued spinlocks and report
them on debugfs.</help>
			</entry>
			<entry name="XEN">
				<label>Xen guest support</label>
				<help>This is the Linux Xen port.  Enabling this will allow the
kernel to boot in a paravirtualized environment under the
Xen hypervisor.</help>
			</entry>
			<entry name="XEN_DOM0"/>
			<entry name="XEN_PVHVM"/>
			<entry name="XEN_512GB">
				<label>Limit Xen pv-domain memory to 512GB</label>
				<help>Limit paravirtualized user domains to 512GB of RAM.

The Xen tools and crash dump analysis tools might not support
pv-domains with more than 512 GB of RAM. This option controls the
default setting of the kernel to use only up to 512 GB or more.
It is always possible to change the default via specifying the
boot parameter &quot;xen_512gb_limit&quot;.</help>
			</entry>
			<entry name="XEN_SAVE_RESTORE"/>
			<entry name="XEN_DEBUG_FS">
				<label>Enable Xen debug and tuning parameters in debugfs</label>
				<help>Enable statistics output and various tuning options in debugfs.
Enabling this option may incur a significant performance overhead.</help>
			</entry>
			<entry name="XEN_PVH">
				<label>Support for running as a PVH guest</label>
			</entry>
			<entry name="KVM_GUEST">
				<label>KVM Guest support (including kvmclock)</label>
				<help>This option enables various optimizations for running under the KVM
hypervisor. It includes a paravirtualized clock, so that instead
of relying on a PIT (or probably other) emulation by the
underlying device model, the host provides the guest with
timing infrastructure such as time of day, and system time</help>
			</entry>
			<entry name="KVM_DEBUG_FS">
				<label>Enable debug information for KVM Guests in debugfs</label>
				<help>This option enables collection of various statistics for KVM guest.
Statistics are displayed in debugfs filesystem. Enabling this option
may incur significant overhead.</help>
			</entry>
			<entry name="LGUEST_GUEST">
				<label>Lguest guest support</label>
				<help>Lguest is a tiny in-kernel hypervisor.  Selecting this will
allow your kernel to boot under lguest.  This option will increase
your kernel size by about 10k.  If in doubt, say N.

If you say Y here, make sure you say Y (or M) to the virtio block
and net drivers which lguest needs.
</help>
			</entry>
			<entry name="PARAVIRT_TIME_ACCOUNTING">
				<label>Paravirtual steal time accounting</label>
				<help>Select this option to enable fine granularity task steal time
accounting. Time spent executing other tasks in parallel with
the current vCPU is discounted from the vCPU power. To account for
that, there can be a small performance impact.

If in doubt, say N here.</help>
			</entry>
			<entry name="PARAVIRT_CLOCK"/>
			<entry name="NO_BOOTMEM"/>
			<entry name="M486">
				<label>486</label>
				<help>Select this for an 486-class CPU such as AMD/Cyrix/IBM/Intel
486DX/DX2/DX4 or SL/SLC/SLC2/SLC3/SX/SX2 and UMC U5D or U5S.</help>
			</entry>
			<entry name="M586">
				<label>586/K5/5x86/6x86/6x86MX</label>
				<help>Select this for an 586 or 686 series processor such as the AMD K5,
the Cyrix 5x86, 6x86 and 6x86MX.  This choice does not
assume the RDTSC (Read Time Stamp Counter) instruction.</help>
			</entry>
			<entry name="M586TSC">
				<label>Pentium-Classic</label>
				<help>Select this for a Pentium Classic processor with the RDTSC (Read
Time Stamp Counter) instruction for benchmarking.</help>
			</entry>
			<entry name="M586MMX">
				<label>Pentium-MMX</label>
				<help>Select this for a Pentium with the MMX graphics/multimedia
extended instructions.</help>
			</entry>
			<entry name="M686">
				<label>Pentium-Pro</label>
				<help>Select this for Intel Pentium Pro chips.  This enables the use of
Pentium Pro extended instructions, and disables the init-time guard
against the f00f bug found in earlier Pentiums.</help>
			</entry>
			<entry name="MPENTIUMII">
				<label>Pentium-II/Celeron(pre-Coppermine)</label>
				<help>Select this for Intel chips based on the Pentium-II and
pre-Coppermine Celeron core.  This option enables an unaligned
copy optimization, compiles the kernel with optimization flags
tailored for the chip, and applies any applicable Pentium Pro
optimizations.</help>
			</entry>
			<entry name="MPENTIUMIII">
				<label>Pentium-III/Celeron(Coppermine)/Pentium-III Xeon</label>
				<help>Select this for Intel chips based on the Pentium-III and
Celeron-Coppermine core.  This option enables use of some
extended prefetch instructions in addition to the Pentium II
extensions.</help>
			</entry>
			<entry name="MPENTIUMM">
				<label>Pentium M</label>
				<help>Select this for Intel Pentium M (not Pentium-4 M)
notebook chips.</help>
			</entry>
			<entry name="MPENTIUM4">
				<label>Pentium-4/Celeron(P4-based)/Pentium-4 M/older Xeon</label>
				<help>Select this for Intel Pentium 4 chips.  This includes the
Pentium 4, Pentium D, P4-based Celeron and Xeon, and
Pentium-4 M (not Pentium M) chips.  This option enables compile
flags optimized for the chip, uses the correct cache line size, and
applies any applicable optimizations.

CPUIDs: F[0-6][1-A] (in /proc/cpuinfo show = cpu family : 15 )

Select this for:
Pentiums (Pentium 4, Pentium D, Celeron, Celeron D) corename:
-Willamette
-Northwood
-Mobile Pentium 4
-Mobile Pentium 4 M
-Extreme Edition (Gallatin)
-Prescott
-Prescott 2M
-Cedar Mill
-Presler
-Smithfiled
Xeons (Intel Xeon, Xeon MP, Xeon LV, Xeon MV) corename:
-Foster
-Prestonia
-Gallatin
-Nocona
-Irwindale
-Cranford
-Potomac
-Paxville
-Dempsey</help>
			</entry>
			<entry name="MK6">
				<label>K6/K6-II/K6-III</label>
				<help>Select this for an AMD K6-family processor.  Enables use of
some extended instructions, and passes appropriate optimization
flags to GCC.</help>
			</entry>
			<entry name="MK7">
				<label>Athlon/Duron/K7</label>
				<help>Select this for an AMD Athlon K7-family processor.  Enables use of
some extended instructions, and passes appropriate optimization
flags to GCC.</help>
			</entry>
			<entry name="MK8">
				<label>Opteron/Athlon64/Hammer/K8</label>
				<help>Select this for an AMD Opteron or Athlon64 Hammer-family processor.
Enables use of some extended instructions, and passes appropriate
optimization flags to GCC.</help>
			</entry>
			<entry name="MCRUSOE">
				<label>Crusoe</label>
				<help>Select this for a Transmeta Crusoe processor.  Treats the processor
like a 586 with TSC, and sets some GCC optimization flags (like a
Pentium Pro with no alignment requirements).</help>
			</entry>
			<entry name="MEFFICEON">
				<label>Efficeon</label>
				<help>Select this for a Transmeta Efficeon processor.</help>
			</entry>
			<entry name="MWINCHIPC6">
				<label>Winchip-C6</label>
				<help>Select this for an IDT Winchip C6 chip.  Linux and GCC
treat this chip as a 586TSC with some extended instructions
and alignment requirements.</help>
			</entry>
			<entry name="MWINCHIP3D">
				<label>Winchip-2/Winchip-2A/Winchip-3</label>
				<help>Select this for an IDT Winchip-2, 2A or 3.  Linux and GCC
treat this chip as a 586TSC with some extended instructions
and alignment requirements.  Also enable out of order memory
stores for this CPU, which can increase performance of some
operations.</help>
			</entry>
			<entry name="MELAN">
				<label>AMD Elan</label>
				<help>Select this for an AMD Elan processor.

Do not use this option for K6/Athlon/Opteron processors!</help>
			</entry>
			<entry name="MGEODEGX1">
				<label>GeodeGX1</label>
				<help>Select this for a Geode GX1 (Cyrix MediaGX) chip.</help>
			</entry>
			<entry name="MGEODE_LX">
				<label>Geode GX/LX</label>
				<help>Select this for AMD Geode GX and LX processors.</help>
			</entry>
			<entry name="MCYRIXIII">
				<label>CyrixIII/VIA-C3</label>
				<help>Select this for a Cyrix III or C3 chip.  Presently Linux and GCC
treat this chip as a generic 586. Whilst the CPU is 686 class,
it lacks the cmov extension which gcc assumes is present when
generating 686 code.
Note that Nehemiah (Model 9) and above will not boot with this
kernel due to them lacking the 3DNow! instructions used in earlier
incarnations of the CPU.</help>
			</entry>
			<entry name="MVIAC3_2">
				<label>VIA C3-2 (Nehemiah)</label>
				<help>Select this for a VIA C3 &quot;Nehemiah&quot;. Selecting this enables usage
of SSE and tells gcc to treat the CPU as a 686.
Note, this kernel will not boot on older (pre model 9) C3s.</help>
			</entry>
			<entry name="MVIAC7">
				<label>VIA C7</label>
				<help>Select this for a VIA C7.  Selecting this uses the correct cache
shift and tells gcc to treat the CPU as a 686.</help>
			</entry>
			<entry name="MPSC">
				<label>Intel P4 / older Netburst based Xeon</label>
				<help>Optimize for Intel Pentium 4, Pentium D and older Nocona/Dempsey
Xeon CPUs with Intel 64bit which is compatible with x86-64.
Note that the latest Xeons (Xeon 51xx and 53xx) are not based on the
Netburst core and shouldn't use this option. You can distinguish them
using the cpu family field
in /proc/cpuinfo. Family 15 is an older Xeon, Family 6 a newer one.</help>
			</entry>
			<entry name="MCORE2">
				<label>Core 2/newer Xeon</label>
				<help>
Select this for Intel Core 2 and newer Core 2 Xeons (Xeon 51xx and
53xx) CPUs. You can distinguish newer from older Xeons by the CPU
family in /proc/cpuinfo. Newer ones have 6 and older ones 15
(not a typo)

config MATOM
bool &quot;Intel Atom&quot;
---help---

Select this for the Intel Atom platform. Intel Atom CPUs have an
in-order pipelining architecture and thus can benefit from
accordingly optimized code. Use a recent GCC with specific Atom
support in order to fully benefit from selecting this option.

config GENERIC_CPU
bool &quot;Generic-x86-64&quot;
depends on X86_64
---help---
Generic x86-64 CPU.
Run equally well on all x86-64 CPUs.

endchoice

config X86_GENERIC
bool &quot;Generic x86 support&quot;
depends on X86_32
---help---
Instead of just including optimizations for the selected
x86 variant (e.g. PII, Crusoe or Athlon), include some more
generic optimizations as well. This will make the kernel
perform better on x86 CPUs other than that selected.

This is really intended for distributors who need more
generic optimizations.

#
# Define implied options from the CPU selection here
config X86_INTERNODE_CACHE_SHIFT
int
default &quot;12&quot; if X86_VSMP
default X86_L1_CACHE_SHIFT

config X86_L1_CACHE_SHIFT
int
default &quot;7&quot; if MPENTIUM4 || MPSC
default &quot;6&quot; if MK7 || MK8 || MPENTIUMM || MCORE2 || MATOM || MVIAC7 || X86_GENERIC || GENERIC_CPU
default &quot;4&quot; if MELAN || M486 || MGEODEGX1
default &quot;5&quot; if MWINCHIP3D || MWINCHIPC6 || MCRUSOE || MEFFICEON || MCYRIXIII || MK6 || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || M586 || MVIAC3_2 || MGEODE_LX

config X86_PPRO_FENCE
bool &quot;PentiumPro memory ordering errata workaround&quot;
depends on M686 || M586MMX || M586TSC || M586 || M486 || MGEODEGX1
---help---
Old PentiumPro multiprocessor systems had errata that could cause
memory operations to violate the x86 ordering standard in rare cases.
Enabling this option will attempt to work around some (but not all)
occurrences of this problem, at the cost of much heavier spinlock and
memory barrier operations.

If unsure, say n here. Even distro kernels should think twice before
enabling this: there are few systems, and an unlikely bug.

config X86_F00F_BUG
def_bool y
depends on M586MMX || M586TSC || M586 || M486

config X86_INVD_BUG
def_bool y
depends on M486

config X86_ALIGNMENT_16
def_bool y
depends on MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MELAN || MK6 || M586MMX || M586TSC || M586 || M486 || MVIAC3_2 || MGEODEGX1

config X86_INTEL_USERCOPY
def_bool y
depends on MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M586MMX || X86_GENERIC || MK8 || MK7 || MEFFICEON || MCORE2

config X86_USE_PPRO_CHECKSUM
def_bool y
depends on MWINCHIP3D || MWINCHIPC6 || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MK8 || MVIAC3_2 || MVIAC7 || MEFFICEON || MGEODE_LX || MCORE2 || MATOM

config X86_USE_3DNOW
def_bool y
depends on (MCYRIXIII || MK7 || MGEODE_LX) &amp;&amp; !UML

#
# P6_NOPs are a relatively minor optimization that require a family &gt;=
# 6 processor, except that it is broken on certain VIA chips.
# Furthermore, AMD chips prefer a totally different sequence of NOPs
# (which work on all CPUs).  In addition, it looks like Virtual PC
# does not understand them.
#
# As a result, disallow these if we're not compiling for X86_64 (these
# NOPs do work on all x86-64 capable chips); the list of processors in
# the right-hand clause are the cores that benefit from this optimization.
#
config X86_P6_NOP
def_bool y
depends on X86_64
depends on (MCORE2 || MPENTIUM4 || MPSC)

config X86_TSC
def_bool y
depends on (MWINCHIP3D || MCRUSOE || MEFFICEON || MCYRIXIII || MK7 || MK6 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || M586MMX || M586TSC || MK8 || MVIAC3_2 || MVIAC7 || MGEODEGX1 || MGEODE_LX || MCORE2 || MATOM) || X86_64

config X86_CMPXCHG64
def_bool y
depends on X86_PAE || X86_64 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MATOM

# this should be set for all -march=.. options where the compiler
# generates cmov.
config X86_CMOV
def_bool y
depends on (MK8 || MK7 || MCORE2 || MPENTIUM4 || MPENTIUMM || MPENTIUMIII || MPENTIUMII || M686 || MVIAC3_2 || MVIAC7 || MCRUSOE || MEFFICEON || X86_64 || MATOM || MGEODE_LX)

config X86_MINIMUM_CPU_FAMILY
int
default &quot;64&quot; if X86_64
default &quot;6&quot; if X86_32 &amp;&amp; X86_P6_NOP
default &quot;5&quot; if X86_32 &amp;&amp; X86_CMPXCHG64
default &quot;4&quot;

config X86_DEBUGCTLMSR
def_bool y
depends on !(MK6 || MWINCHIPC6 || MWINCHIP3D || MCYRIXIII || M586MMX || M586TSC || M586 || M486) &amp;&amp; !UML

menuconfig PROCESSOR_SELECT
bool &quot;Supported processor vendors&quot; if EXPERT
---help---
This lets you choose what x86 vendor support code your kernel
will include.

config CPU_SUP_INTEL
default y
bool &quot;Support Intel processors&quot; if PROCESSOR_SELECT
---help---
This enables detection, tunings and quirks for Intel processors

You need this enabled if you want your kernel to run on an
Intel CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on an Intel
CPU might render the kernel unbootable.

If unsure, say N.

config CPU_SUP_CYRIX_32
default y
bool &quot;Support Cyrix processors&quot; if PROCESSOR_SELECT
depends on M486 || M586 || M586TSC || M586MMX || (EXPERT &amp;&amp; !64BIT)
---help---
This enables detection, tunings and quirks for Cyrix processors

You need this enabled if you want your kernel to run on a
Cyrix CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on a Cyrix
CPU might render the kernel unbootable.

If unsure, say N.

config CPU_SUP_AMD
default y
bool &quot;Support AMD processors&quot; if PROCESSOR_SELECT
---help---
This enables detection, tunings and quirks for AMD processors

You need this enabled if you want your kernel to run on an
AMD CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on an AMD
CPU might render the kernel unbootable.

If unsure, say N.

config CPU_SUP_CENTAUR
default y
bool &quot;Support Centaur processors&quot; if PROCESSOR_SELECT
---help---
This enables detection, tunings and quirks for Centaur processors

You need this enabled if you want your kernel to run on a
Centaur CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on a Centaur
CPU might render the kernel unbootable.

If unsure, say N.

config CPU_SUP_TRANSMETA_32
default y
bool &quot;Support Transmeta processors&quot; if PROCESSOR_SELECT
depends on !64BIT
---help---
This enables detection, tunings and quirks for Transmeta processors

You need this enabled if you want your kernel to run on a
Transmeta CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on a Transmeta
CPU might render the kernel unbootable.

If unsure, say N.

config CPU_SUP_UMC_32
default y
bool &quot;Support UMC processors&quot; if PROCESSOR_SELECT
depends on M486 || (EXPERT &amp;&amp; !64BIT)
---help---
This enables detection, tunings and quirks for UMC processors

You need this enabled if you want your kernel to run on a
UMC CPU. Disabling this option on other types of CPUs
makes the kernel a tiny bit smaller. Disabling it on a UMC
CPU might render the kernel unbootable.

If unsure, say N.
</help>
			</entry>
			<entry name="HPET_TIMER">
				<label>HPET Timer Support&quot; if X86_32</label>
				<help>Use the IA-PC HPET (High Precision Event Timer) to manage
time in preference to the PIT and RTC, if a HPET is
present.
HPET is the next generation timer replacing legacy 8254s.
The HPET provides a stable time base on SMP
systems, unlike the TSC, but it is more expensive to access,
as it is off-chip.  The interface used is documented
in the HPET spec, revision 1.

You can safely choose Y here.  However, HPET will only be
activated if the platform and the BIOS support this feature.
Otherwise the 8254 will be used for timing services.

Choose N to continue using the legacy 8254 timer.</help>
			</entry>
			<entry name="HPET_EMULATE_RTC"/>
			<entry name="APB_TIMER">
				<label>Intel MID APB Timer Support&quot; if X86_INTEL_MID</label>
				<help>APB timer is the replacement for 8254, HPET on X86 MID platforms.
The APBT provides a stable time base on SMP
systems, unlike the TSC, but it is more expensive to access,
as it is off-chip. APB timers are always running regardless of CPU
C states, they are used as per CPU clockevent device when possible.</help>
			</entry>
			<entry name="DMI">
				<label>Enable DMI scanning&quot; if EXPERT</label>
				<help>Enabled scanning of DMI to identify machine quirks. Say Y
here unless you have verified that your setup is not
affected by entries in the DMI blacklist. Required by PNP
BIOS code.</help>
			</entry>
			<entry name="GART_IOMMU">
				<label>Old AMD GART IOMMU support</label>
				<help>Provides a driver for older AMD Athlon64/Opteron/Turion/Sempron
GART based hardware IOMMUs.

The GART supports full DMA access for devices with 32-bit access
limitations, on systems with more than 3 GB. This is usually needed
for USB, sound, many IDE/SATA chipsets and some other devices.

Newer systems typically have a modern AMD IOMMU, supported via
the CONFIG_AMD_IOMMU=y config option.

In normal configurations this driver is only active when needed:
there's more than 3 GB of memory and the system contains a
32-bit limited device.

If unsure, say Y.</help>
			</entry>
			<entry name="CALGARY_IOMMU">
				<label>IBM Calgary IOMMU support</label>
				<help>Support for hardware IOMMUs in IBM's xSeries x366 and x460
systems. Needed to run systems with more than 3GB of memory
properly with 32-bit PCI devices that do not support DAC
(Double Address Cycle). Calgary also supports bus level
isolation, where all DMAs pass through the IOMMU.  This
prevents them from going anywhere except their intended
destination. This catches hard-to-find kernel bugs and
mis-behaving drivers and devices that do not use the DMA-API
properly to set up their DMA buffers.  The IOMMU can be
turned off at boot time with the iommu=off parameter.
Normally the kernel will make the right choice by itself.
If unsure, say Y.</help>
			</entry>
			<entry name="CALGARY_IOMMU_ENABLED_BY_DEFAULT">
				<label>Should Calgary be enabled by default?</label>
				<help>Should Calgary be enabled by default? if you choose 'y', Calgary
will be used (if it exists). If you choose 'n', Calgary will not be
used even if it exists. If you choose 'n' and would like to use
Calgary anyway, pass 'iommu=calgary' on the kernel command line.
If unsure, say Y.</help>
			</entry>
			<entry name="SWIOTLB">
				<help>Support for software bounce buffers used on x86-64 systems
which don't have a hardware IOMMU. Using this PCI devices
which can only access 32-bits of memory can be used on systems
with more than 3 GB of memory.
If unsure, say Y.</help>
			</entry>
			<entry name="IOMMU_HELPER"/>
			<entry name="MAXSMP">
				<label>Enable Maximum number of SMP Processors and NUMA Nodes</label>
				<help>Enable maximum number of CPUS and NUMA Nodes for this architecture.
If unsure, say N.</help>
			</entry>
			<entry name="NR_CPUS">
				<label>Maximum number of CPUs&quot; if SMP &amp;&amp; !MAXSMP</label>
				<help>This allows you to specify the maximum number of CPUs which this
kernel will support.  If CPUMASK_OFFSTACK is enabled, the maximum
supported value is 8192, otherwise the maximum value is 512.  The
minimum value which makes sense is 2.

This is purely to save memory - each supported CPU adds
approximately eight kilobytes to the kernel image.</help>
			</entry>
			<entry name="SCHED_SMT">
				<label>SMT (Hyperthreading) scheduler support</label>
				<help>SMT scheduler support improves the CPU scheduler's decision making
when dealing with Intel Pentium 4 chips with HyperThreading at a
cost of slightly increased overhead in some places. If unsure say
N here.</help>
			</entry>
			<entry name="SCHED_MC">
				<label>Multi-core scheduler support</label>
				<help>Multi-core scheduler support improves the CPU scheduler's decision
making when dealing with multi-core CPU chips at a cost of slightly
increased overhead in some places. If unsure say N here.</help>
			</entry>
			<entry name="PREEMPT_NONE">
				<label>No Forced Preemption (Server)</label>
				<help>This is the traditional Linux preemption model, geared towards
throughput. It will still provide good latencies most of the
time, but there are no guarantees and occasional longer delays
are possible.

Select this option if you are building a kernel for a server or
scientific/computation system, or if you want to maximize the
raw processing power of the kernel, irrespective of scheduling
latencies.</help>
			</entry>
			<entry name="PREEMPT_VOLUNTARY">
				<label>Voluntary Kernel Preemption (Desktop)</label>
				<help>This option reduces the latency of the kernel by adding more
&quot;explicit preemption points&quot; to the kernel code. These new
preemption points have been selected to reduce the maximum
latency of rescheduling, providing faster application reactions,
at the cost of slightly lower throughput.

This allows reaction to interactive events by allowing a
low priority process to voluntarily preempt itself even if it
is in kernel mode executing a system call. This allows
applications to run more 'smoothly' even when the system is
under load.

Select this if you are building a kernel for a desktop system.</help>
			</entry>
			<entry name="PREEMPT">
				<label>Preemptible Kernel (Low-Latency Desktop)</label>
				<help>This option reduces the latency of the kernel by making
all kernel code (that is not executing in a critical section)
preemptible.  This allows reaction to interactive events by
permitting a low priority process to be preempted involuntarily
even if it is in kernel mode executing a system call and would
otherwise not be about to reach a natural preemption point.
This allows applications to run more 'smoothly' even when the
system is under load, at the cost of slightly lower throughput
and a slight runtime overhead to kernel code.

Select this if you are building a kernel for a desktop or
embedded system with latency requirements in the milliseconds
range.</help>
			</entry>
			<entry name="UP_LATE_INIT"/>
			<entry name="X86_UP_APIC">
				<label>Local APIC support on uniprocessors&quot; if !PCI_MSI</label>
				<help>A local APIC (Advanced Programmable Interrupt Controller) is an
integrated interrupt controller in the CPU. If you have a single-CPU
system which has a processor with a local APIC, you can say Y here to
enable and use it. If you say Y here even though your machine doesn't
have a local APIC, then the kernel will still run with no slowdown at
all. The local APIC supports CPU-generated self-interrupts (timer,
performance counters), and the NMI watchdog which detects hard
lockups.</help>
			</entry>
			<entry name="X86_UP_IOAPIC">
				<label>IO-APIC support on uniprocessors</label>
				<help>An IO-APIC (I/O Advanced Programmable Interrupt Controller) is an
SMP-capable replacement for PC-style interrupt controllers. Most
SMP systems and many recent uniprocessor systems have one.

If you have a single-CPU system with an IO-APIC, you can say Y here
to use it. If you say Y here even though your machine doesn't have
an IO-APIC, then the kernel will still run with no slowdown at all.</help>
			</entry>
			<entry name="X86_LOCAL_APIC"/>
			<entry name="X86_IO_APIC"/>
			<entry name="X86_REROUTE_FOR_BROKEN_BOOT_IRQS">
				<label>Reroute for broken boot IRQs</label>
				<help>This option enables a workaround that fixes a source of
spurious interrupts. This is recommended when threaded
interrupt handling is used on systems where the generation of
superfluous &quot;boot interrupts&quot; cannot be disabled.

Some chipsets generate a legacy INTx &quot;boot IRQ&quot; when the IRQ
entry in the chipset's IO-APIC is masked (as, e.g. the RT
kernel does during interrupt handling). On chipsets where this
boot IRQ generation cannot be disabled, this workaround keeps
the original IRQ line masked so that only the equivalent &quot;boot
IRQ&quot; is delivered to the CPUs. The workaround also tells the
kernel to set up the IRQ handler on the boot IRQ line. In this
way only one interrupt is delivered to the kernel. Otherwise
the spurious second interrupt may cause the kernel to bring
down (vital) interrupt lines.

Only affects &quot;broken&quot; chipsets. Interrupt sharing may be
increased on these systems.</help>
			</entry>
			<entry name="X86_MCE">
				<label>Machine Check / overheating reporting</label>
				<help>Machine Check support allows the processor to notify the
kernel if it detects a problem (e.g. overheating, data corruption).
The action the kernel takes depends on the severity of the problem,
ranging from warning messages to halting the machine.</help>
			</entry>
			<entry name="X86_MCE_INTEL">
				<label>Intel MCE features</label>
				<help>Additional support for intel specific MCE features such as
the thermal monitor.</help>
			</entry>
			<entry name="X86_MCE_AMD">
				<label>AMD MCE features</label>
				<help>Additional support for AMD specific MCE features such as
the DRAM Error Threshold.</help>
			</entry>
			<entry name="X86_ANCIENT_MCE">
				<label>Support for old Pentium 5 / WinChip machine checks</label>
				<help>Include support for machine check handling on old Pentium 5 or WinChip
systems. These typically need to be enabled explicitly on the command
line.</help>
			</entry>
			<entry name="X86_MCE_THRESHOLD"/>
			<entry name="X86_MCE_INJECT">
				<label>Machine check injector support</label>
				<help>Provide support for injecting machine checks for testing purposes.
If you don't know what a machine check is and you don't do kernel
QA it is safe to say n.</help>
			</entry>
			<entry name="X86_THERMAL_VECTOR"/>
			<container name="Performance_monitoring">
				<label>Performance monitoring</label>
				<entry name="PERF_EVENTS_INTEL_UNCORE">
					<label>Intel uncore performance events</label>
					<help>Include support for Intel uncore performance events. These are
available on NehalemEX and more modern processors.</help>
				</entry>
				<entry name="PERF_EVENTS_INTEL_RAPL">
					<label>Intel rapl performance events</label>
					<help>Include support for Intel rapl performance events for power
monitoring on modern processors.</help>
				</entry>
				<entry name="PERF_EVENTS_INTEL_CSTATE">
					<label>Intel cstate performance events</label>
					<help>Include support for Intel cstate performance events for power
monitoring on modern processors.</help>
				</entry>
				<entry name="PERF_EVENTS_AMD_POWER">
					<label>AMD Processor Power Reporting Mechanism</label>
					<help>Provide power reporting mechanism support for AMD processors.
Currently, it leverages X86_FEATURE_ACC_POWER
(CPUID Fn8000_0007_EDX[12]) interface to calculate the
average power consumption on Family 15h processors.</help>
				</entry>
			</container>
			<entry name="X86_LEGACY_VM86">
				<label>Legacy VM86 support</label>
				<help>This option allows user programs to put the CPU into V8086
mode, which is an 80286-era approximation of 16-bit real mode.

Some very old versions of X and/or vbetool require this option
for user mode setting.  Similarly, DOSEMU will use it if
available to accelerate real mode DOS programs.  However, any
recent version of DOSEMU, X, or vbetool should be fully
functional even without kernel VM86 support, as they will all
fall back to software emulation. Nevertheless, if you are using
a 16-bit DOS program where 16-bit performance matters, vm86
mode might be faster than emulation and you might want to
enable this option.

Note that any app that works on a 64-bit kernel is unlikely to
need this option, as 64-bit kernels don't, and can't, support
V8086 mode. This option is also unrelated to 16-bit protected
mode and is not needed to run most 16-bit programs under Wine.

Enabling this option increases the complexity of the kernel
and slows down exception handling a tiny bit.

If unsure, say N here.</help>
			</entry>
			<entry name="VM86"/>
			<entry name="X86_16BIT">
				<label>Enable support for 16-bit segments&quot; if EXPERT</label>
				<help>This option is required by programs like Wine to run 16-bit
protected mode legacy code on x86 processors.  Disabling
this option saves about 300 bytes on i386, or around 6K text
plus 16K runtime memory on x86-64,</help>
			</entry>
			<entry name="X86_ESPFIX32"/>
			<entry name="X86_ESPFIX64"/>
			<entry name="X86_VSYSCALL_EMULATION">
				<label>Enable vsyscall emulation&quot; if EXPERT</label>
				<help>This enables emulation of the legacy vsyscall page.  Disabling
it is roughly equivalent to booting with vsyscall=none, except
that it will also disable the helpful warning if a program
tries to use a vsyscall.  With this option set to N, offending
programs will just segfault, citing addresses of the form
0xffffffffff600?00.

This option is required by many programs built before 2013, and
care should be used even with newer programs if set to N.

Disabling this option saves about 7K of kernel size and
possibly 4K of additional runtime pagetable memory.</help>
			</entry>
			<entry name="TOSHIBA">
				<label>Toshiba Laptop support</label>
				<help>This adds a driver to safely access the System Management Mode of
the CPU on Toshiba portables with a genuine Toshiba BIOS. It does
not work on models with a Phoenix BIOS. The System Management Mode
is used to set the BIOS and power saving options on Toshiba portables.

For information on utilities to make use of this driver see the
Toshiba Linux utilities web site at:
&lt;http://www.buzzard.org.uk/toshiba/&gt;.

Say Y if you intend to run this kernel on a Toshiba portable.
Say N otherwise.</help>
			</entry>
			<entry name="I8K">
				<label>Dell i8k legacy laptop support</label>
				<help>This option enables legacy /proc/i8k userspace interface in hwmon
dell-smm-hwmon driver. Character file /proc/i8k reports bios version,
temperature and allows controlling fan speeds of Dell laptops via
System Management Mode. For old Dell laptops (like Dell Inspiron 8000)
it reports also power and hotkey status. For fan speed control is
needed userspace package i8kutils.

Say Y if you intend to run this kernel on old Dell laptops or want to
use userspace package i8kutils.
Say N otherwise.</help>
			</entry>
			<entry name="X86_REBOOTFIXUPS">
				<label>Enable X86 board specific fixups for reboot</label>
				<help>This enables chipset and/or board specific fixups to be done
in order to get reboot to work correctly. This is only needed on
some combinations of hardware and BIOS. The symptom, for which
this config is intended, is when reboot ends with a stalled/hung
system.

Currently, the only fixup is for the Geode machines using
CS5530A and CS5536 chipsets and the RDC R-321x SoC.

Say Y if you want to enable the fixup. Currently, it's safe to
enable this option even if you don't need it.
Say N otherwise.</help>
			</entry>
			<entry name="MICROCODE">
				<label>CPU microcode loading support</label>
				<help>If you say Y here, you will be able to update the microcode on
Intel and AMD processors. The Intel support is for the IA32 family,
e.g. Pentium Pro, Pentium II, Pentium III, Pentium 4, Xeon etc. The
AMD support is for families 0x10 and later. You will obviously need
the actual microcode binary data itself which is not shipped with
the Linux kernel.

The preferred method to load microcode from a detached initrd is described
in Documentation/x86/early-microcode.txt. For that you need to enable
CONFIG_BLK_DEV_INITRD in order for the loader to be able to scan the
initrd for microcode blobs.

In addition, you can build-in the microcode into the kernel. For that you
need to enable FIRMWARE_IN_KERNEL and add the vendor-supplied microcode
to the CONFIG_EXTRA_FIRMWARE config option.</help>
			</entry>
			<entry name="MICROCODE_INTEL">
				<label>Intel microcode loading support</label>
				<help>This options enables microcode patch loading support for Intel
processors.

For the current Intel microcode data package go to
&lt;https://downloadcenter.intel.com&gt; and search for
'Linux Processor Microcode Data File'.</help>
			</entry>
			<entry name="MICROCODE_AMD">
				<label>AMD microcode loading support</label>
				<help>If you select this option, microcode patch loading support for AMD
processors will be enabled.</help>
			</entry>
			<entry name="MICROCODE_OLD_INTERFACE"/>
			<entry name="X86_MSR">
				<label>/dev/cpu/*/msr - Model-specific register support</label>
				<help>This device gives privileged processes access to the x86
Model-Specific Registers (MSRs).  It is a character device with
major 202 and minors 0 to 31 for /dev/cpu/0/msr to /dev/cpu/31/msr.
MSR accesses are directed to a specific CPU on multi-processor
systems.</help>
			</entry>
			<entry name="X86_CPUID">
				<label>/dev/cpu/*/cpuid - CPU information support</label>
				<help>This device gives processes access to the x86 CPUID instruction to
be executed on a specific processor.  It is a character device
with major 203 and minors 0 to 31 for /dev/cpu/0/cpuid to
/dev/cpu/31/cpuid.</help>
			</entry>
			<entry name="NOHIGHMEM">
				<label>off</label>
				<help>Linux can use up to 64 Gigabytes of physical memory on x86 systems.
However, the address space of 32-bit x86 processors is only 4
Gigabytes large. That means that, if you have a large amount of
physical memory, not all of it can be &quot;permanently mapped&quot; by the
kernel. The physical memory that's not permanently mapped is called
&quot;high memory&quot;.

If you are compiling a kernel which will never run on a machine with
more than 1 Gigabyte total physical RAM, answer &quot;off&quot; here (default
choice and suitable for most users). This will result in a &quot;3GB/1GB&quot;
split: 3GB are mapped so that each process sees a 3GB virtual memory
space and the remaining part of the 4GB virtual memory space is used
by the kernel to permanently map as much physical memory as
possible.

If the machine has between 1 and 4 Gigabytes physical RAM, then
answer &quot;4GB&quot; here.

If more than 4 Gigabytes is used then answer &quot;64GB&quot; here. This
selection turns Intel PAE (Physical Address Extension) mode on.
PAE implements 3-level paging on IA32 processors. PAE is fully
supported by Linux, PAE mode is implemented on all recent Intel
processors (Pentium Pro and better). NOTE: If you say &quot;64GB&quot; here,
then the kernel will not boot on CPUs that don't support PAE!

The actual amount of total physical memory will either be
auto detected or can be forced by using a kernel command line option
such as &quot;mem=256M&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)

If unsure, say &quot;off&quot;.</help>
			</entry>
			<entry name="HIGHMEM4G">
				<label>4GB</label>
				<help>Select this if you have a 32-bit processor and between 1 and 4
gigabytes of physical RAM.</help>
			</entry>
			<entry name="HIGHMEM64G">
				<label>64GB</label>
				<help>Select this if you have a 32-bit processor and more than 4
gigabytes of physical RAM.</help>
			</entry>
			<entry name="VMSPLIT_3G">
				<label>3G/1G user/kernel split</label>
			</entry>
			<entry name="VMSPLIT_3G_OPT">
				<label>3G/1G user/kernel split (for full 1G low memory)</label>
			</entry>
			<entry name="VMSPLIT_2G">
				<label>2G/2G user/kernel split</label>
			</entry>
			<entry name="VMSPLIT_2G_OPT">
				<label>2G/2G user/kernel split (for full 2G low memory)</label>
			</entry>
			<entry name="VMSPLIT_1G">
				<label>1G/3G user/kernel split</label>
			</entry>
			<entry name="HIGHMEM"/>
			<entry name="X86_PAE">
				<label>PAE (Physical Address Extension) Support</label>
				<help>PAE is required for NX support, and furthermore enables
larger swapspace support for non-overcommit purposes. It
has the cost of more pagetable lookup overhead, and also
consumes more pagetable space per process.</help>
			</entry>
			<entry name="ARCH_PHYS_ADDR_T_64BIT"/>
			<entry name="ARCH_DMA_ADDR_T_64BIT"/>
			<entry name="X86_DIRECT_GBPAGES">
				<help>Certain kernel features effectively disable kernel
linear 1 GB mappings (even if the CPU otherwise
supports them), so don't confuse the user by printing
that we have them enabled.</help>
			</entry>
			<entry name="NUMA">
				<label>Numa Memory Allocation and Scheduler Support</label>
				<help>Enable NUMA (Non Uniform Memory Access) support.

The kernel will try to allocate memory used by a CPU on the
local memory controller of the CPU and add some more
NUMA awareness to the kernel.

For 64-bit this is recommended if the system is Intel Core i7
(or later), AMD Opteron, or EM64T NUMA.

For 32-bit this is only needed if you boot a 32-bit
kernel on a 64-bit NUMA platform.

Otherwise, you should say N.</help>
			</entry>
			<entry name="AMD_NUMA">
				<label>Old style AMD Opteron NUMA detection</label>
				<help>Enable AMD NUMA node topology detection.  You should say Y here if
you have a multi processor AMD system. This uses an old method to
read the NUMA configuration directly from the builtin Northbridge
of Opteron. It is recommended to use X86_64_ACPI_NUMA instead,
which also takes priority if both are compiled in.</help>
			</entry>
			<entry name="X86_64_ACPI_NUMA">
				<label>ACPI NUMA detection</label>
				<help>Enable ACPI SRAT based node topology detection.</help>
			</entry>
			<entry name="NODES_SPAN_OTHER_NODES"/>
			<entry name="NUMA_EMU">
				<label>NUMA emulation</label>
				<help>Enable NUMA emulation. A flat machine will be split
into virtual nodes when booted with &quot;numa=fake=N&quot;, where N is the
number of nodes. This is only useful for debugging.</help>
			</entry>
			<entry name="NODES_SHIFT">
				<label>Maximum NUMA Nodes (as a power of 2)&quot; if !MAXSMP</label>
				<help>Specify the maximum number of NUMA Nodes available on the target
system.  Increases memory reserved to accommodate various tables.</help>
			</entry>
			<entry name="ARCH_HAVE_MEMORY_PRESENT"/>
			<entry name="NEED_NODE_MEMMAP_SIZE"/>
			<entry name="ARCH_FLATMEM_ENABLE"/>
			<entry name="ARCH_DISCONTIGMEM_ENABLE"/>
			<entry name="ARCH_DISCONTIGMEM_DEFAULT"/>
			<entry name="ARCH_SPARSEMEM_ENABLE"/>
			<entry name="ARCH_SPARSEMEM_DEFAULT"/>
			<entry name="ARCH_SELECT_MEMORY_MODEL"/>
			<entry name="ARCH_MEMORY_PROBE">
				<label>Enable sysfs memory/probe interface</label>
				<help>This option enables a sysfs memory/probe interface for testing.
See Documentation/memory-hotplug.txt for more information.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="ARCH_PROC_KCORE_TEXT"/>
			<entry name="SELECT_MEMORY_MODEL"/>
			<entry name="FLATMEM_MANUAL">
				<label>Flat Memory</label>
				<help>This option allows you to change some of the ways that
Linux manages its memory internally.  Most users will
only have one option here: FLATMEM.  This is normal
and a correct option.

Some users of more advanced features like NUMA and
memory hotplug may have different options here.
DISCONTIGMEM is a more mature, better tested system,
but is incompatible with memory hotplug and may suffer
decreased performance over SPARSEMEM.  If unsure between
&quot;Sparse Memory&quot; and &quot;Discontiguous Memory&quot;, choose
&quot;Discontiguous Memory&quot;.

If unsure, choose this option (Flat Memory) over any other.</help>
			</entry>
			<entry name="DISCONTIGMEM_MANUAL">
				<label>Discontiguous Memory</label>
				<help>This option provides enhanced support for discontiguous
memory systems, over FLATMEM.  These systems have holes
in their physical address spaces, and this option provides
more efficient handling of these holes.  However, the vast
majority of hardware has quite flat address spaces, and
can have degraded performance from the extra overhead that
this option imposes.

Many NUMA configurations will have this as the only option.

If unsure, choose &quot;Flat Memory&quot; over this option.</help>
			</entry>
			<entry name="SPARSEMEM_MANUAL">
				<label>Sparse Memory</label>
				<help>This will be the only option for some systems, including
memory hotplug systems.  This is normal.

For many other systems, this will be an alternative to
&quot;Discontiguous Memory&quot;.  This option provides some potential
performance benefits, along with decreased code complexity,
but it is newer, and more experimental.

If unsure, choose &quot;Discontiguous Memory&quot; or &quot;Flat Memory&quot;
over this option.</help>
			</entry>
			<entry name="DISCONTIGMEM"/>
			<entry name="SPARSEMEM"/>
			<entry name="FLATMEM"/>
			<entry name="FLAT_NODE_MEM_MAP"/>
			<entry name="NEED_MULTIPLE_NODES"/>
			<entry name="HAVE_MEMORY_PRESENT"/>
			<entry name="SPARSEMEM_STATIC"/>
			<entry name="SPARSEMEM_EXTREME"/>
			<entry name="SPARSEMEM_VMEMMAP_ENABLE"/>
			<entry name="SPARSEMEM_ALLOC_MEM_MAP_TOGETHER"/>
			<entry name="SPARSEMEM_VMEMMAP">
				<label>Sparse Memory virtual memmap</label>
				<help>SPARSEMEM_VMEMMAP uses a virtually mapped memmap to optimise
pfn_to_page and page_to_pfn operations.  This is the most
efficient option when sufficient kernel resources are available.</help>
			</entry>
			<entry name="HAVE_MEMBLOCK"/>
			<entry name="HAVE_MEMBLOCK_NODE_MAP"/>
			<entry name="HAVE_MEMBLOCK_PHYS_MAP"/>
			<entry name="HAVE_GENERIC_RCU_GUP"/>
			<entry name="ARCH_DISCARD_MEMBLOCK"/>
			<entry name="NO_BOOTMEM"/>
			<entry name="MEMORY_ISOLATION"/>
			<entry name="MOVABLE_NODE">
				<label>Enable to assign a node which has only movable memory</label>
				<help>Allow a node to have only movable memory.  Pages used by the kernel,
such as direct mapping pages cannot be migrated.  So the corresponding
memory device cannot be hotplugged.  This option allows the following
two things:
- When the system is booting, node full of hotpluggable memory can
be arranged to have only movable memory so that the whole node can
be hot-removed. (need movable_node boot option specified).
- After the system is up, the option allows users to online all the
memory of a node as movable memory so that the whole node can be
hot-removed.

Users who don't use the memory hotplug feature are fine with this
option on since they don't specify movable_node boot option or they
don't online memory as movable.

Say Y here if you want to hotplug a whole node.
Say N here if you want kernel to use memory on all nodes evenly.</help>
			</entry>
			<entry name="HAVE_BOOTMEM_INFO_NODE"/>
			<entry name="MEMORY_HOTPLUG">
				<label>Allow for memory hot-add</label>
			</entry>
			<entry name="MEMORY_HOTPLUG_SPARSE"/>
			<entry name="MEMORY_HOTPLUG_DEFAULT_ONLINE">
				<label>Online the newly added memory blocks by default</label>
				<help>This option sets the default policy setting for memory hotplug
onlining policy (/sys/devices/system/memory/auto_online_blocks) which
determines what happens to newly added memory regions. Policy setting
can always be changed at runtime.
See Documentation/memory-hotplug.txt for more information.

Say Y here if you want all hot-plugged memory blocks to appear in
'online' state by default.
Say N here if you want the default policy to keep all hot-plugged
memory blocks in 'offline' state.</help>
			</entry>
			<entry name="MEMORY_HOTREMOVE">
				<label>Allow for memory hot remove</label>
			</entry>
			<entry name="SPLIT_PTLOCK_CPUS"/>
			<entry name="ARCH_ENABLE_SPLIT_PMD_PTLOCK"/>
			<entry name="MEMORY_BALLOON"/>
			<entry name="BALLOON_COMPACTION">
				<label>Allow for balloon memory compaction/migration</label>
				<help>Memory fragmentation introduced by ballooning might reduce
significantly the number of 2MB contiguous memory blocks that can be
used within a guest, thus imposing performance penalties associated
with the reduced number of transparent huge pages that could be used
by the guest workload. Allowing the compaction &amp; migration for memory
pages enlisted as being part of memory balloon devices avoids the
scenario aforementioned and helps improving memory defragmentation.</help>
			</entry>
			<entry name="COMPACTION">
				<label>Allow for memory compaction</label>
				<help>Compaction is the only memory management component to form
high order (larger physically contiguous) memory blocks
reliably. The page allocator relies on compaction heavily and
the lack of the feature can lead to unexpected OOM killer
invocations for high order memory requests. You shouldn't
disable this option unless there really is a strong reason for
it and then we would be really interested to hear about that at
linux-mm@kvack.org.</help>
			</entry>
			<entry name="MIGRATION">
				<label>Page migration</label>
				<help>Allows the migration of the physical location of pages of processes
while the virtual addresses are not changed. This is useful in
two situations. The first is on NUMA systems to put pages nearer
to the processors accessing. The second is when allocating huge
pages as migration can relocate pages to satisfy a huge page
allocation instead of reclaiming.</help>
			</entry>
			<entry name="ARCH_ENABLE_HUGEPAGE_MIGRATION"/>
			<entry name="PHYS_ADDR_T_64BIT"/>
			<entry name="BOUNCE">
				<label>Enable bounce buffers</label>
				<help>Enable bounce buffers for devices that cannot access
the full range of memory available to the CPU. Enabled
by default when ZONE_DMA or HIGHMEM is selected, but you
may say n to override this.</help>
			</entry>
			<entry name="NEED_BOUNCE_POOL"/>
			<entry name="NR_QUICK"/>
			<entry name="VIRT_TO_BUS">
				<help>An architecture should select this if it implements the
deprecated interface virt_to_bus().  All new architectures
should probably not select this.</help>
			</entry>
			<entry name="MMU_NOTIFIER"/>
			<entry name="KSM">
				<label>Enable KSM for page merging</label>
				<help>Enable Kernel Samepage Merging: KSM periodically scans those areas
of an application's address space that an app has advised may be
mergeable.  When it finds pages of identical content, it replaces
the many instances by a single page with that content, so
saving memory until one or another app needs to modify the content.
Recommended for use with KVM, or with other duplicative applications.
See Documentation/vm/ksm.txt for more information: KSM is inactive
until a program has madvised that an area is MADV_MERGEABLE, and
root has set /sys/kernel/mm/ksm/run to 1 (if CONFIG_SYSFS is set).</help>
			</entry>
			<entry name="DEFAULT_MMAP_MIN_ADDR">
				<label>Low address space to protect from user allocation</label>
				<help>This is the portion of low virtual memory which should be protected
from userspace allocation.  Keeping a user from writing to low pages
can help reduce the impact of kernel NULL pointer bugs.

For most ia64, ppc64 and x86 users with lots of address space
a value of 65536 is reasonable and should cause no problems.
On arm and other archs it should not be higher than 32768.
Programs which use vm86 functionality or have some need to map
this low address space will need CAP_SYS_RAWIO or disable this
protection by setting the value to 0.

This value can be changed after boot using the
/proc/sys/vm/mmap_min_addr tunable.</help>
			</entry>
			<entry name="ARCH_SUPPORTS_MEMORY_FAILURE"/>
			<entry name="MEMORY_FAILURE">
				<label>Enable recovery from hardware memory errors</label>
				<help>Enables code to recover from some memory failures on systems
with MCA recovery. This allows a system to continue running
even when some of its memory has uncorrected errors. This requires
special hardware support and typically ECC memory.</help>
			</entry>
			<entry name="HWPOISON_INJECT">
				<label>HWPoison pages injector</label>
			</entry>
			<entry name="NOMMU_INITIAL_TRIM_EXCESS">
				<label>Turn on mmap() excess space trimming before booting</label>
				<help>The NOMMU mmap() frequently needs to allocate large contiguous chunks
of memory on which to store mappings, but it can only ask the system
allocator for chunks in 2^N*PAGE_SIZE amounts - which is frequently
more than it requires.  To deal with this, mmap() is able to trim off
the excess and return it to the allocator.

If trimming is enabled, the excess is trimmed off and returned to the
system allocator, which can cause extra fragmentation, particularly
if there are a lot of transient processes.

If trimming is disabled, the excess is kept, but not used, which for
long-term mappings means that the space is wasted.

Trimming can be dynamically controlled through a sysctl option
(/proc/sys/vm/nr_trim_pages) which specifies the minimum number of
excess pages there must be before trimming should occur, or zero if
no trimming is to occur.

This option specifies the initial value of this option.  The default
of 1 says that all excess pages should be trimmed.

See Documentation/nommu-mmap.txt for more information.</help>
			</entry>
			<entry name="TRANSPARENT_HUGEPAGE">
				<label>Transparent Hugepage Support</label>
				<help>Transparent Hugepages allows the kernel to use huge pages and
huge tlb transparently to the applications whenever possible.
This feature can improve computing performance to certain
applications by speeding up page faults during memory
allocation, by reducing the number of tlb misses and by speeding
up the pagetable walking.

If memory constrained on embedded, you may want to say N.</help>
			</entry>
			<entry name="TRANSPARENT_HUGEPAGE_ALWAYS">
				<label>always</label>
				<help>Enabling Transparent Hugepage always, can increase the
memory footprint of applications without a guaranteed
benefit but it will work automatically for all applications.</help>
			</entry>
			<entry name="TRANSPARENT_HUGEPAGE_MADVISE">
				<label>madvise</label>
				<help>Enabling Transparent Hugepage madvise, will only provide a
performance improvement benefit to the applications using
madvise(MADV_HUGEPAGE) but it won't risk to increase the
memory footprint of applications without a guaranteed
benefit.</help>
			</entry>
			<entry name="TRANSPARENT_HUGE_PAGECACHE"/>
			<entry name="NEED_PER_CPU_KM"/>
			<entry name="CLEANCACHE">
				<label>Enable cleancache driver to cache clean pages if tmem is present</label>
				<help>Cleancache can be thought of as a page-granularity victim cache
for clean pages that the kernel's pageframe replacement algorithm
(PFRA) would like to keep around, but can't since there isn't enough
memory.  So when the PFRA &quot;evicts&quot; a page, it first attempts to use
cleancache code to put the data contained in that page into
&quot;transcendent memory&quot;, memory that is not directly accessible or
addressable by the kernel and is of unknown and possibly
time-varying size.  And when a cleancache-enabled
filesystem wishes to access a page in a file on disk, it first
checks cleancache to see if it already contains it; if it does,
the page is copied into the kernel and a disk access is avoided.
When a transcendent memory driver is available (such as zcache or
Xen transcendent memory), a significant I/O reduction
may be achieved.  When none is available, all cleancache calls
are reduced to a single pointer-compare-against-NULL resulting
in a negligible performance hit.

If unsure, say Y to enable cleancache</help>
			</entry>
			<entry name="FRONTSWAP">
				<label>Enable frontswap to cache swap pages if tmem is present</label>
				<help>Frontswap is so named because it can be thought of as the opposite
of a &quot;backing&quot; store for a swap device.  The data is stored into
&quot;transcendent memory&quot;, memory that is not directly accessible or
addressable by the kernel and is of unknown and possibly
time-varying size.  When space in transcendent memory is available,
a significant swap I/O reduction may be achieved.  When none is
available, all frontswap calls are reduced to a single pointer-
compare-against-NULL resulting in a negligible performance hit
and swap data is stored as normal on the matching swap device.

If unsure, say Y to enable frontswap.</help>
			</entry>
			<entry name="CMA">
				<label>Contiguous Memory Allocator</label>
				<help>This enables the Contiguous Memory Allocator which allows other
subsystems to allocate big physically-contiguous blocks of memory.
CMA reserves a region of memory and allows only movable pages to
be allocated from it. This way, the kernel can use the memory for
pagecache and when a subsystem requests for contiguous area, the
allocated pages are migrated away to serve the contiguous request.

If unsure, say &quot;n&quot;.</help>
			</entry>
			<entry name="CMA_DEBUG">
				<label>CMA debug messages (DEVELOPMENT)</label>
				<help>Turns on debug messages in CMA.  This produces KERN_DEBUG
messages for every CMA call as well as various messages while
processing calls such as dma_alloc_from_contiguous().
This option does not affect warning and error messages.</help>
			</entry>
			<entry name="CMA_DEBUGFS">
				<label>CMA debugfs interface</label>
				<help>Turns on the DebugFS interface for CMA.</help>
			</entry>
			<entry name="CMA_AREAS">
				<label>Maximum count of the CMA areas</label>
				<help>CMA allows to create CMA areas for particular purpose, mainly,
used as device private area. This parameter sets the maximum
number of CMA area in the system.

If unsure, leave the default value &quot;7&quot;.</help>
			</entry>
			<entry name="MEM_SOFT_DIRTY">
				<label>Track memory changes</label>
				<help>This option enables memory changes tracking by introducing a
soft-dirty bit on pte-s. This bit it set when someone writes
into a page just as regular dirty bit, but unlike the latter
it can be cleared by hands.

See Documentation/vm/soft-dirty.txt for more details.</help>
			</entry>
			<entry name="ZSWAP">
				<label>Compressed cache for swap pages (EXPERIMENTAL)</label>
				<help>A lightweight compressed cache for swap pages.  It takes
pages that are in the process of being swapped out and attempts to
compress them into a dynamically allocated RAM-based memory pool.
This can result in a significant I/O reduction on swap device and,
in the case where decompressing from RAM is faster that swap device
reads, can also improve workload performance.

This is marked experimental because it is a new feature (as of
v3.11) that interacts heavily with memory reclaim.  While these
interactions don't cause any known issues on simple memory setups,
they have not be fully explored on the large set of potential
configurations and workloads that exist.</help>
			</entry>
			<entry name="ZPOOL">
				<label>Common API for compressed memory storage</label>
				<help>Compressed memory storage API.  This allows using either zbud or
zsmalloc.</help>
			</entry>
			<entry name="ZBUD">
				<label>Low (Up to 2x) density storage for compressed pages</label>
				<help>A special purpose allocator for storing compressed pages.
It is designed to store up to two compressed pages per physical
page.  While this design limits storage density, it has simple and
deterministic reclaim properties that make it preferable to a higher
density approach when reclaim will be used.</help>
			</entry>
			<entry name="Z3FOLD">
				<label>Up to 3x density storage for compressed pages</label>
				<help>A special purpose allocator for storing compressed pages.
It is designed to store up to three compressed pages per physical
page. It is a ZBUD derivative so the simplicity and determinism are
still there.</help>
			</entry>
			<entry name="ZSMALLOC">
				<label>Memory allocator for compressed pages</label>
				<help>zsmalloc is a slab-based memory allocator designed to store
compressed RAM pages.  zsmalloc uses virtual memory mapping
in order to reduce fragmentation.  However, this results in a
non-standard allocator interface where a handle, not a pointer, is
returned by an alloc().  This handle must be mapped in order to
access the allocated space.</help>
			</entry>
			<entry name="PGTABLE_MAPPING">
				<label>Use page table mapping to access object in zsmalloc</label>
				<help>By default, zsmalloc uses a copy-based object mapping method to
access allocations that span two pages. However, if a particular
architecture (ex, ARM) performs VM mapping faster than copying,
then you should select this. This causes zsmalloc to use page table
mapping rather than copying for object mapping.

You can check speed with zsmalloc benchmark:
https://github.com/spartacus06/zsmapbench</help>
			</entry>
			<entry name="ZSMALLOC_STAT">
				<label>Export zsmalloc statistics</label>
				<help>This option enables code in the zsmalloc to collect various
statistics about whats happening in zsmalloc and exports that
information to userspace via debugfs.
If unsure, say N.</help>
			</entry>
			<entry name="GENERIC_EARLY_IOREMAP"/>
			<entry name="MAX_STACK_SIZE_MB">
				<label>Maximum user stack size for 32-bit processes (MB)</label>
				<help>This is the maximum stack size in Megabytes in the VM layout of 32-bit
user processes when the stack grows upwards (currently only on parisc
and metag arch). The stack will be located at the highest memory
address minus the given value, unless the RLIMIT_STACK hard limit is
changed to a smaller value in which case that is used.

A sane initial value is 80 MB.</help>
			</entry>
			<entry name="ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT"/>
			<entry name="DEFERRED_STRUCT_PAGE_INIT">
				<label>Defer initialisation of struct pages to kthreads</label>
				<help>Ordinarily all struct pages are initialised during early boot in a
single thread. On very large machines this can take a considerable
amount of time. If this option is set, large machines will bring up
a subset of memmap at boot and then initialise the rest in parallel
by starting one-off &quot;pgdatinitX&quot; kernel thread for each node X. This
has a potential performance impact on processes running early in the
lifetime of the system until these kthreads finish the
initialisation.</help>
			</entry>
			<entry name="IDLE_PAGE_TRACKING">
				<label>Enable idle page tracking</label>
				<help>This feature allows to estimate the amount of user pages that have
not been touched during a given period of time. This information can
be useful to tune memory cgroup limits and/or for job placement
within a compute cluster.

See Documentation/vm/idle_page_tracking.txt for more details.</help>
			</entry>
			<entry name="ZONE_DEVICE">
				<label>Device memory (pmem, etc...) hotplug support</label>
				<help>Device memory hotplug support allows for establishing pmem,
or other device driver discovered memory regions, in the
memmap. This allows pfn_to_page() lookups of otherwise
&quot;device-physical&quot; addresses which is needed for using a DAX
mapping in an O_DIRECT operation, among other things.

If FS_DAX is enabled, then say Y.</help>
			</entry>
			<entry name="FRAME_VECTOR"/>
			<entry name="ARCH_USES_HIGH_VMA_FLAGS"/>
			<entry name="ARCH_HAS_PKEYS"/>
			<entry name="X86_PMEM_LEGACY_DEVICE"/>
			<entry name="X86_PMEM_LEGACY">
				<label>Support non-standard NVDIMMs and ADR protected memory</label>
				<help>Treat memory marked using the non-standard e820 type of 12 as used
by the Intel Sandy Bridge-EP reference BIOS as protected memory.
The kernel will offer these regions to the 'pmem' driver so
they can be used for persistent storage.

Say Y if unsure.</help>
			</entry>
			<entry name="HIGHPTE">
				<label>Allocate 3rd-level pagetables from highmem</label>
				<help>The VM uses one page table entry for each page of physical memory.
For systems with a lot of RAM, this can be wasteful of precious
low memory.  Setting this option will put user-space page table
entries in high memory.</help>
			</entry>
			<entry name="X86_CHECK_BIOS_CORRUPTION">
				<label>Check for low memory corruption</label>
				<help>Periodically check for memory corruption in low memory, which
is suspected to be caused by BIOS.  Even when enabled in the
configuration, it is disabled at runtime.  Enable it by
setting &quot;memory_corruption_check=1&quot; on the kernel command
line.  By default it scans the low 64k of memory every 60
seconds; see the memory_corruption_check_size and
memory_corruption_check_period parameters in
Documentation/kernel-parameters.txt to adjust this.

When enabled with the default parameters, this option has
almost no overhead, as it reserves a relatively small amount
of memory and scans it infrequently.  It both detects corruption
and prevents it from affecting the running system.

It is, however, intended as a diagnostic tool; if repeatable
BIOS-originated corruption always affects the same memory,
you can use memmap= to prevent the kernel from using that
memory.</help>
			</entry>
			<entry name="X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK">
				<label>Set the default setting of memory_corruption_check</label>
				<help>Set whether the default state of memory_corruption_check is
on or off.</help>
			</entry>
			<entry name="X86_RESERVE_LOW">
				<label>Amount of low memory, in kilobytes, to reserve for the BIOS</label>
				<help>Specify the amount of low memory to reserve for the BIOS.

The first page contains BIOS data structures that the kernel
must not use, so that page must always be reserved.

By default we reserve the first 64K of physical RAM, as a
number of BIOSes are known to corrupt that memory range
during events such as suspend/resume or monitor cable
insertion, so it must not be used by the kernel.

You can set this to 4 if you are absolutely sure that you
trust the BIOS to get all its memory reservations and usages
right.  If you know your BIOS have problems beyond the
default 64K area, you can set this to 640 to avoid using the
entire low memory range.

If you have doubts about the BIOS (e.g. suspend/resume does
not work or there's kernel crashes after certain hardware
hotplug events) then you might want to enable
X86_CHECK_BIOS_CORRUPTION=y to allow the kernel to check
typical corruption patterns.

Leave this to the default value of 64 if you are unsure.</help>
			</entry>
			<entry name="MATH_EMULATION">
				<label>Math emulation&quot; if X86_32</label>
				<help>Linux can emulate a math coprocessor (used for floating point
operations) if you don't have one. 486DX and Pentium processors have
a math coprocessor built in, 486SX and 386 do not, unless you added
a 487DX or 387, respectively. (The messages during boot time can
give you some hints here [&quot;man dmesg&quot;].) Everyone needs either a
coprocessor or this emulation.

If you don't have a math coprocessor, you need to say Y here; if you
say Y here even though you have a coprocessor, the coprocessor will
be used nevertheless. (This behavior can be changed with the kernel
command line option &quot;no387&quot;, which comes handy if your coprocessor
is broken. Try &quot;man bootparam&quot; or see the documentation of your boot
loader (lilo or loadlin) about how to pass options to the kernel at
boot time.) This means that it is a good idea to say Y here if you
intend to use this kernel on different machines.

More information about the internals of the Linux math coprocessor
emulation can be found in &lt;file:arch/x86/math-emu/README&gt;.

If you are not sure, say Y; apart from resulting in a 66 KB bigger
kernel, it won't hurt.</help>
			</entry>
			<entry name="MTRR">
				<label>MTRR (Memory Type Range Register) support&quot; if EXPERT</label>
				<help>On Intel P6 family processors (Pentium Pro, Pentium II and later)
the Memory Type Range Registers (MTRRs) may be used to control
processor access to memory ranges. This is most useful if you have
a video (VGA) card on a PCI or AGP bus. Enabling write-combining
allows bus write transfers to be combined into a larger transfer
before bursting over the PCI/AGP bus. This can increase performance
of image write operations 2.5 times or more. Saying Y here creates a
/proc/mtrr file which may be used to manipulate your processor's
MTRRs. Typically the X server should use this.

This code has a reasonably generic interface so that similar
control registers on other processors can be easily supported
as well:

The Cyrix 6x86, 6x86MX and M II processors have Address Range
Registers (ARRs) which provide a similar functionality to MTRRs. For
these, the ARRs are used to emulate the MTRRs.
The AMD K6-2 (stepping 8 and above) and K6-3 processors have two
MTRRs. The Centaur C6 (WinChip) has 8 MCRs, allowing
write-combining. All of these processors are supported by this code
and it makes sense to say Y here if you have one of them.

Saying Y here also fixes a problem with buggy SMP BIOSes which only
set the MTRRs for the boot CPU and not for the secondary CPUs. This
can lead to all sorts of problems, so it's good to say Y here.

You can safely say Y even if your machine doesn't have MTRRs, you'll
just add about 9 KB to your kernel.

See &lt;file:Documentation/x86/mtrr.txt&gt; for more information.</help>
			</entry>
			<entry name="MTRR_SANITIZER">
				<label>MTRR cleanup support</label>
				<help>Convert MTRR layout from continuous to discrete, so X drivers can
add writeback entries.

Can be disabled with disable_mtrr_cleanup on the kernel command line.
The largest mtrr entry size for a continuous block can be set with
mtrr_chunk_size.

If unsure, say Y.</help>
			</entry>
			<entry name="MTRR_SANITIZER_ENABLE_DEFAULT">
				<label>MTRR cleanup enable value (0-1)</label>
				<help>Enable mtrr cleanup default value</help>
			</entry>
			<entry name="MTRR_SANITIZER_SPARE_REG_NR_DEFAULT">
				<label>MTRR cleanup spare reg num (0-7)</label>
				<help>mtrr cleanup spare entries default, it can be changed via
mtrr_spare_reg_nr=N on the kernel command line.</help>
			</entry>
			<entry name="X86_PAT">
				<label>x86 PAT support&quot; if EXPERT</label>
				<help>Use PAT attributes to setup page level cache control.

PATs are the modern equivalents of MTRRs and are much more
flexible than MTRRs.

Say N here if you see bootup problems (boot crash, boot hang,
spontaneous reboots) or a non-working video driver.

If unsure, say Y.</help>
			</entry>
			<entry name="ARCH_USES_PG_UNCACHED"/>
			<entry name="ARCH_RANDOM">
				<label>x86 architectural random number generator&quot; if EXPERT</label>
				<help>Enable the x86 architectural RDRAND instruction
(Intel Bull Mountain technology) to generate random numbers.
If supported, this is a high bandwidth, cryptographically
secure hardware random number generator.</help>
			</entry>
			<entry name="X86_SMAP">
				<label>Supervisor Mode Access Prevention&quot; if EXPERT</label>
				<help>Supervisor Mode Access Prevention (SMAP) is a security
feature in newer Intel processors.  There is a small
performance cost if this enabled and turned on; there is
also a small increase in the kernel size if this is enabled.

If unsure, say Y.</help>
			</entry>
			<entry name="X86_INTEL_MPX">
				<label>Intel MPX (Memory Protection Extensions)</label>
				<help>MPX provides hardware features that can be used in
conjunction with compiler-instrumented code to check
memory references.  It is designed to detect buffer
overflow or underflow bugs.

This option enables running applications which are
instrumented or otherwise use MPX.  It does not use MPX
itself inside the kernel or to protect the kernel
against bad memory references.

Enabling this option will make the kernel larger:
~8k of kernel text and 36 bytes of data on a 64-bit
defconfig.  It adds a long to the 'mm_struct' which
will increase the kernel memory overhead of each
process and adds some branches to paths used during
exec() and munmap().

For details, see Documentation/x86/intel_mpx.txt

If unsure, say N.</help>
			</entry>
			<entry name="X86_INTEL_MEMORY_PROTECTION_KEYS">
				<label>Intel Memory Protection Keys</label>
				<help>Memory Protection Keys provides a mechanism for enforcing
page-based protections, but without requiring modification of the
page tables when an application changes protection domains.

For details, see Documentation/x86/protection-keys.txt

If unsure, say y.</help>
			</entry>
			<entry name="EFI">
				<label>EFI runtime service support</label>
				<help>This enables the kernel to use EFI runtime services that are
available (such as the EFI variable services).

This option is only useful on systems that have EFI firmware.
In addition, you should use the latest ELILO loader available
at &lt;http://elilo.sourceforge.net&gt; in order to take advantage
of EFI runtime services. However, even with this option, the
resultant kernel should continue to boot on existing non-EFI
platforms.</help>
			</entry>
			<entry name="EFI_STUB">
				<label>EFI stub support</label>
				<help>This kernel feature allows a bzImage to be loaded directly
by EFI firmware without the use of a bootloader.

See Documentation/efi-stub.txt for more information.</help>
			</entry>
			<entry name="EFI_MIXED">
				<label>EFI mixed-mode support</label>
				<help>Enabling this feature allows a 64-bit kernel to be booted
on a 32-bit firmware, provided that your CPU supports 64-bit
mode.

Note that it is not possible to boot a mixed-mode enabled
kernel via the EFI boot stub - a bootloader that supports
the EFI handover protocol must be used.

If unsure, say N.</help>
			</entry>
			<entry name="EFI_SECURE_BOOT_SIG_ENFORCE">
				<label>Force module signing when UEFI Secure Boot is enabled</label>
				<help>UEFI Secure Boot provides a mechanism for ensuring that the
firmware will only load signed bootloaders and kernels. Certain
use cases may also require that all kernel modules also be signed.
Say Y here to automatically enable module signature enforcement
when a system boots with UEFI Secure Boot enabled.</help>
			</entry>
			<entry name="SECCOMP">
				<label>Enable seccomp to safely compute untrusted bytecode</label>
				<help>This kernel feature is useful for number crunching applications
that may need to compute untrusted bytecode during their
execution. By using pipes or other transports made available to
the process as file descriptors supporting the read/write
syscalls, it's possible to isolate those applications in
their own address space using seccomp. Once seccomp is
enabled via prctl(PR_SET_SECCOMP), it cannot be disabled
and the task is only allowed to execute a few safe syscalls
defined by each seccomp mode.

If unsure, say Y. Only embedded should say N here.</help>
			</entry>
			<entry name="HZ_100">
				<label>100 HZ</label>
				<help>100 Hz is a typical choice for servers, SMP and NUMA systems
with lots of processors that may show reduced performance if
too many timer interrupts are occurring.</help>
			</entry>
			<entry name="HZ_250">
				<label>250 HZ</label>
				<help>250 Hz is a good compromise choice allowing server performance
while also showing good interactive responsiveness even
on SMP and NUMA systems. If you are going to be using NTSC video
or multimedia, selected 300Hz instead.</help>
			</entry>
			<entry name="HZ_300">
				<label>300 HZ</label>
				<help>300 Hz is a good compromise choice allowing server performance
while also showing good interactive responsiveness even
on SMP and NUMA systems and exactly dividing by both PAL and
NTSC frame rates for video and multimedia work.</help>
			</entry>
			<entry name="HZ_1000">
				<label>1000 HZ</label>
				<help>1000 Hz is the preferred choice for desktop systems and other
systems requiring fast interactive responses to events.</help>
			</entry>
			<entry name="HZ"/>
			<entry name="SCHED_HRTICK"/>
			<entry name="KEXEC">
				<label>kexec system call</label>
				<help>kexec is a system call that implements the ability to shutdown your
current kernel, and to start another kernel.  It is like a reboot
but it is independent of the system firmware.   And like a reboot
you can start any kernel with it, not just Linux.

The name comes from the similarity to the exec system call.

It is an ongoing process to be certain the hardware in a machine
is properly shutdown, so do not be surprised if this code does not
initially work for you.  As of this writing the exact hardware
interface is strongly in flux, so no good recommendation can be
made.</help>
			</entry>
			<entry name="KEXEC_FILE">
				<label>kexec file based system call</label>
				<help>This is new version of kexec system call. This system call is
file based and takes file descriptors as system call argument
for kernel and initramfs as opposed to list of segments as
accepted by previous system call.</help>
			</entry>
			<entry name="KEXEC_VERIFY_SIG">
				<label>Verify kernel signature during kexec_file_load() syscall</label>
				<help>This option makes kernel signature verification mandatory for
the kexec_file_load() syscall.

In addition to that option, you need to enable signature
verification for the corresponding kernel image type being
loaded in order for this to work.</help>
			</entry>
			<entry name="KEXEC_BZIMAGE_VERIFY_SIG">
				<label>Enable bzImage signature verification support</label>
				<help>Enable bzImage signature verification support.</help>
			</entry>
			<entry name="CRASH_DUMP">
				<label>kernel crash dumps</label>
				<help>Generate crash dump after being started by kexec.
This should be normally only set in special crash dump kernels
which are loaded in the main kernel with kexec-tools into
a specially reserved region and then later executed after
a crash by kdump/kexec. The crash dump kernel must be compiled
to a memory address not used by the main kernel or BIOS using
PHYSICAL_START, or it must be built as a relocatable image
(CONFIG_RELOCATABLE=y).
For more details see Documentation/kdump/kdump.txt</help>
			</entry>
			<entry name="KEXEC_JUMP">
				<label>kexec jump</label>
				<help>Jump between original kernel and kexeced kernel and invoke
code in physical address mode via KEXEC</help>
			</entry>
			<entry name="RELOCATABLE">
				<label>Build a relocatable kernel</label>
				<help>This builds a kernel image that retains relocation information
so it can be loaded someplace besides the default 1MB.
The relocations tend to make the kernel binary about 10% larger,
but are discarded at runtime.

One use is for the kexec on panic case where the recovery kernel
must live at a different physical address than the primary
kernel.

Note: If CONFIG_RELOCATABLE=y, then the kernel runs from the address
it has been loaded at and the compile time physical address
(CONFIG_PHYSICAL_START) is used as the minimum location.</help>
			</entry>
			<entry name="RANDOMIZE_BASE">
				<label>Randomize the address of the kernel image (KASLR)</label>
				<help>In support of Kernel Address Space Layout Randomization (KASLR),
this randomizes the physical address at which the kernel image
is decompressed and the virtual address where the kernel
image is mapped, as a security feature that deters exploit
attempts relying on knowledge of the location of kernel
code internals.

On 64-bit, the kernel physical and virtual addresses are
randomized separately. The physical address will be anywhere
between 16MB and the top of physical memory (up to 64TB). The
virtual address will be randomized from 16MB up to 1GB (9 bits
of entropy). Note that this also reduces the memory space
available to kernel modules from 1.5GB to 1GB.

On 32-bit, the kernel physical and virtual addresses are
randomized together. They will be randomized from 16MB up to
512MB (8 bits of entropy).

Entropy is generated using the RDRAND instruction if it is
supported. If RDTSC is supported, its value is mixed into
the entropy pool as well. If neither RDRAND nor RDTSC are
supported, then entropy is read from the i8254 timer. The
usable entropy is limited by the kernel being built using
2GB addressing, and that PHYSICAL_ALIGN must be at a
minimum of 2MB. As a result, only 10 bits of entropy are
theoretically possible, but the implementations are further
limited due to memory layouts.

If CONFIG_HIBERNATE is also enabled, KASLR is disabled at boot
time. To enable it, boot with &quot;kaslr&quot; on the kernel command
line (which will also disable hibernation).

If unsure, say N.</help>
			</entry>
			<entry name="X86_NEED_RELOCS"/>
			<entry name="RANDOMIZE_MEMORY">
				<label>Randomize the kernel memory sections</label>
				<help>Randomizes the base virtual address of kernel memory sections
(physical memory mapping, vmalloc &amp; vmemmap). This security feature
makes exploits relying on predictable memory locations less reliable.

The order of allocations remains unchanged. Entropy is generated in
the same way as RANDOMIZE_BASE. Current implementation in the optimal
configuration have in average 30,000 different possible virtual
addresses for each memory section.

If unsure, say N.</help>
			</entry>
			<entry name="HOTPLUG_CPU">
				<label>Support for hot-pluggable CPUs</label>
				<help>Say Y here to allow turning CPUs off and on. CPUs can be
controlled through /sys/devices/system/cpu.
( Note: power management support will enable this option
automatically on SMP systems. )
Say N if you want to disable CPU hotplug.</help>
			</entry>
			<entry name="BOOTPARAM_HOTPLUG_CPU0">
				<label>Set default setting of cpu0_hotpluggable</label>
				<help>Set whether default state of cpu0_hotpluggable is on or off.

Say Y here to enable CPU0 hotplug by default. If this switch
is turned on, there is no need to give cpu0_hotplug kernel
parameter and the CPU0 hotplug feature is enabled by default.

Please note: there are two known CPU0 dependencies if you want
to enable the CPU0 hotplug feature either by this switch or by
cpu0_hotplug kernel parameter.

First, resume from hibernate or suspend always starts from CPU0.
So hibernate and suspend are prevented if CPU0 is offline.

Second dependency is PIC interrupts always go to CPU0. CPU0 can not
offline if any interrupt can not migrate out of CPU0. There may
be other CPU0 dependencies.

Please make sure the dependencies are under your control before
you enable this feature.

Say N if you don't want to enable CPU0 hotplug feature by default.
You still can enable the CPU0 hotplug feature at boot by kernel
parameter cpu0_hotplug.</help>
			</entry>
			<entry name="DEBUG_HOTPLUG_CPU0">
				<label>Debug CPU0 hotplug</label>
				<help>Enabling this option offlines CPU0 (if CPU0 can be offlined) as
soon as possible and boots up userspace with CPU0 offlined. User
can online CPU0 back after boot time.

To debug CPU0 hotplug, you need to enable CPU0 offline/online
feature by either turning on CONFIG_BOOTPARAM_HOTPLUG_CPU0 during
compilation or giving cpu0_hotplug kernel parameter at boot.

If unsure, say N.</help>
			</entry>
			<entry name="COMPAT_VDSO">
				<label>Disable the 32-bit vDSO (needed for glibc 2.3.3)</label>
				<help>Certain buggy versions of glibc will crash if they are
presented with a 32-bit vDSO that is not mapped at the address
indicated in its segment table.

The bug was introduced by f866314b89d56845f55e6f365e18b31ec978ec3a
and fixed by 3b3ddb4f7db98ec9e912ccdf54d35df4aa30e04a and
49ad572a70b8aeb91e57483a11dd1b77e31c4468.  Glibc 2.3.3 is
the only released version with the bug, but OpenSUSE 9
contains a buggy &quot;glibc 2.3.2&quot;.

The symptom of the bug is that everything crashes on startup, saying:
dl_main: Assertion `(void *) ph-&gt;p_vaddr == _rtld_local._dl_sysinfo_dso' failed!

Saying Y here changes the default value of the vdso32 boot
option from 1 to 0, which turns off the 32-bit vDSO entirely.
This works around the glibc bug but hurts performance.

If unsure, say N: if you are compiling your own kernel, you
are unlikely to be using a buggy version of glibc.</help>
			</entry>
			<entry name="LEGACY_VSYSCALL_NATIVE">
				<label>Native</label>
				<help>Actual executable code is located in the fixed vsyscall
address mapping, implementing time() efficiently. Since
this makes the mapping executable, it can be used during
security vulnerability exploitation (traditionally as
ROP gadgets). This configuration is not recommended.</help>
			</entry>
			<entry name="LEGACY_VSYSCALL_EMULATE">
				<label>Emulate</label>
				<help>The kernel traps and emulates calls into the fixed
vsyscall address mapping. This makes the mapping
non-executable, but it still contains known contents,
which could be used in certain rare security vulnerability
exploits. This configuration is recommended when userspace
still uses the vsyscall area.</help>
			</entry>
			<entry name="LEGACY_VSYSCALL_NONE">
				<label>None</label>
				<help>There will be no vsyscall mapping at all. This will
eliminate any risk of ASLR bypass due to the vsyscall
fixed address mapping. Attempts to use the vsyscalls
will be reported to dmesg, so that either old or
malicious userspace programs can be identified.</help>
			</entry>
			<entry name="CMDLINE_BOOL">
				<label>Built-in kernel command line</label>
				<help>Allow for specifying boot arguments to the kernel at
build time.  On some systems (e.g. embedded ones), it is
necessary or convenient to provide some or all of the
kernel boot arguments with the kernel itself (that is,
to not rely on the boot loader to provide them.)

To compile command line arguments into the kernel,
set this option to 'Y', then fill in the
boot arguments in CONFIG_CMDLINE.

Systems with fully functional boot loaders (i.e. non-embedded)
should leave this option set to 'N'.</help>
			</entry>
			<entry name="CMDLINE">
				<label>Built-in kernel command string</label>
				<help>Enter arguments here that should be compiled into the kernel
image and used at boot time.  If the boot loader provides a
command line at boot time, it is appended to this string to
form the full kernel command line, when the system boots.

However, you can use the CONFIG_CMDLINE_OVERRIDE option to
change this behavior.

In most cases, the command line (whether built-in or provided
by the boot loader) should specify the device for the root
file system.</help>
			</entry>
			<entry name="CMDLINE_OVERRIDE">
				<label>Built-in command line overrides boot loader arguments</label>
				<help>Set this option to 'Y' to have the kernel ignore the boot loader
command line, and use ONLY the built-in command line.

This is used to work around broken boot loaders.  This should
be set to 'N' under normal conditions.</help>
			</entry>
			<entry name="MODIFY_LDT_SYSCALL">
				<label>Enable the LDT (local descriptor table)&quot; if EXPERT</label>
				<help>Linux can allow user programs to install a per-process x86
Local Descriptor Table (LDT) using the modify_ldt(2) system
call.  This is required to run 16-bit or segmented code such as
DOSEMU or some Wine programs.  It is also used by some very old
threading libraries.

Enabling this feature adds a small amount of overhead to
context switches and increases the low-level kernel attack
surface.  Disabling it removes the modify_ldt(2) system call.

Saying 'N' here may make sense for embedded or server kernels.</help>
			</entry>
			<entry name="HAVE_LIVEPATCH">
				<help>Arch supports kernel live patching</help>
			</entry>
			<entry name="LIVEPATCH">
				<label>Kernel Live Patching</label>
				<help>Say Y here if you want to support kernel live patching.
This option has no runtime impact until a kernel &quot;patch&quot;
module uses the interface provided by this option to register
a patch, causing calls to patched functions to be redirected
to new function code contained in the patch module.
</help>
			</entry>
		</container>
		<entry name="ARCH_ENABLE_MEMORY_HOTPLUG"/>
		<entry name="ARCH_ENABLE_MEMORY_HOTREMOVE"/>
		<entry name="USE_PERCPU_NUMA_NODE_ID"/>
		<entry name="ARCH_ENABLE_SPLIT_PMD_PTLOCK"/>
		<entry name="ARCH_ENABLE_HUGEPAGE_MIGRATION"/>
		<container name="Power_management_and_ACPI_options">
			<label>Power management and ACPI options</label>
			<entry name="ARCH_HIBERNATION_HEADER"/>
			<entry name="SUSPEND">
				<label>Suspend to RAM and standby</label>
				<help>Allow the system to enter sleep states in which main memory is
powered and thus its contents are preserved, such as the
suspend-to-RAM state (e.g. the ACPI S3 state).</help>
			</entry>
			<entry name="SUSPEND_FREEZER">
				<label>Enable freezer for suspend to RAM/standby&quot; 		if ARCH_WANTS_FREEZER_CONTROL || BROKEN</label>
				<help>This allows you to turn off the freezer for suspend. If this is
done, no tasks are frozen for suspend to RAM/standby.

Turning OFF this setting is NOT recommended! If in doubt, say Y.</help>
			</entry>
			<entry name="SUSPEND_SKIP_SYNC">
				<label>Skip kernel's sys_sync() on suspend to RAM/standby</label>
				<help>Skip the kernel sys_sync() before freezing user processes.
Some systems prefer not to pay this cost on every invocation
of suspend, or they are content with invoking sync() from
user-space before invoking suspend.  Say Y if that's your case.</help>
			</entry>
			<entry name="HIBERNATE_CALLBACKS"/>
			<entry name="HIBERNATION">
				<label>Hibernation (aka 'suspend to disk')</label>
				<help>Enable the suspend to disk (STD) functionality, which is usually
called &quot;hibernation&quot; in user interfaces.  STD checkpoints the
system and powers it off; and restores that checkpoint on reboot.

You can suspend your machine with 'echo disk &gt; /sys/power/state'
after placing resume=/dev/swappartition on the kernel command line
in your bootloader's configuration file.

Alternatively, you can use the additional userland tools available
from &lt;http://suspend.sf.net&gt;.

In principle it does not require ACPI or APM, although for example
ACPI will be used for the final steps when it is available.  One
of the reasons to use software suspend is that the firmware hooks
for suspend states like suspend-to-RAM (STR) often don't work very
well with Linux.

It creates an image which is saved in your active swap. Upon the next
boot, pass the 'resume=/dev/swappartition' argument to the kernel to
have it detect the saved image, restore memory state from it, and
continue to run as before. If you do not want the previous state to
be reloaded, then use the 'noresume' kernel command line argument.
Note, however, that fsck will be run on your filesystems and you will
need to run mkswap against the swap partition used for the suspend.

It also works with swap files to a limited extent (for details see
&lt;file:Documentation/power/swsusp-and-swap-files.txt&gt;).

Right now you may boot without resuming and resume later but in the
meantime you cannot use the swap partition(s)/file(s) involved in
suspending.  Also in this case you must not use the filesystems
that were mounted before the suspend.  In particular, you MUST NOT
MOUNT any journaled filesystems mounted before the suspend or they
will get corrupted in a nasty way.

For more information take a look at &lt;file:Documentation/power/swsusp.txt&gt;.</help>
			</entry>
			<entry name="ARCH_SAVE_PAGE_KEYS"/>
			<entry name="PM_STD_PARTITION">
				<label>Default resume partition</label>
				<help>The default resume partition is the partition that the suspend-
to-disk implementation will look for a suspended disk image.

The partition specified here will be different for almost every user.
It should be a valid swap partition (at least for now) that is turned
on before suspending.

The partition specified can be overridden by specifying:

resume=/dev/&lt;other device&gt;

which will set the resume partition to the device specified.

Note there is currently not a way to specify which device to save the
suspended image to. It will simply pick the first available swap
device.</help>
			</entry>
			<entry name="PM_SLEEP"/>
			<entry name="PM_SLEEP_SMP"/>
			<entry name="PM_AUTOSLEEP">
				<label>Opportunistic sleep</label>
				<help>Allow the kernel to trigger a system transition into a global sleep
state automatically whenever there are no active wakeup sources.</help>
			</entry>
			<entry name="PM_WAKELOCKS">
				<label>User space wakeup sources interface</label>
				<help>Allow user space to create, activate and deactivate wakeup source
objects with the help of a sysfs-based interface.</help>
			</entry>
			<entry name="PM_WAKELOCKS_LIMIT">
				<label>Maximum number of user space wakeup sources (0 = no limit)</label>
			</entry>
			<entry name="PM_WAKELOCKS_GC">
				<label>Garbage collector for user space wakeup sources</label>
			</entry>
			<entry name="PM">
				<label>Device power management core functionality</label>
				<help>Enable functionality allowing I/O devices to be put into energy-saving
(low power) states, for example after a specified period of inactivity
(autosuspended), and woken up in response to a hardware-generated
wake-up event or a driver's request.

Hardware support is generally required for this functionality to work
and the bus type drivers of the buses the devices are on are
responsible for the actual handling of device suspend requests and
wake-up events.</help>
			</entry>
			<entry name="PM_DEBUG">
				<label>Power Management Debug Support</label>
				<help>This option enables various debugging support in the Power Management
code. This is helpful when debugging and reporting PM bugs, like
suspend support.</help>
			</entry>
			<entry name="PM_ADVANCED_DEBUG">
				<label>Extra PM attributes in sysfs for low-level debugging/testing</label>
				<help>Add extra sysfs attributes allowing one to access some Power Management
fields of device objects from user space.  If you are not a kernel
developer interested in debugging/testing Power Management, say &quot;no&quot;.</help>
			</entry>
			<entry name="PM_TEST_SUSPEND">
				<label>Test suspend/resume and wakealarm during bootup</label>
				<help>This option will let you suspend your machine during bootup, and
make it wake up a few seconds later using an RTC wakeup alarm.
Enable this with a kernel parameter like &quot;test_suspend=mem&quot;.

You probably want to have your system's RTC driver statically
linked, ensuring that it's available when this test runs.</help>
			</entry>
			<entry name="PM_SLEEP_DEBUG"/>
			<entry name="DPM_WATCHDOG">
				<label>Device suspend/resume watchdog</label>
				<help>Sets up a watchdog timer to capture drivers that are
locked up attempting to suspend/resume a device.
A detected lockup causes system panic with message
captured in pstore device for inspection in subsequent
boot session.</help>
			</entry>
			<entry name="DPM_WATCHDOG_TIMEOUT">
				<label>Watchdog timeout in seconds</label>
			</entry>
			<entry name="PM_TRACE">
				<help>This enables code to save the last PM event point across
reboot. The architecture needs to support this, x86 for
example does by saving things in the RTC, see below.

The architecture specific code must provide the extern
functions from &lt;linux/resume-trace.h&gt; as well as the
&lt;asm/resume-trace.h&gt; header with a TRACE_RESUME() macro.

The way the information is presented is architecture-
dependent, x86 will print the information during a
late_initcall.</help>
			</entry>
			<entry name="PM_TRACE_RTC">
				<label>Suspend/resume event tracing</label>
				<help>This enables some cheesy code to save the last PM event point in the
RTC across reboots, so that you can debug a machine that just hangs
during suspend (or more commonly, during resume).

To use this debugging feature you should attempt to suspend the
machine, reboot it and then run

dmesg -s 1000000 | grep 'hash matches'

CAUTION: this option will cause your machine's real-time clock to be
set to an invalid time after a resume.</help>
			</entry>
			<entry name="APM_EMULATION">
				<label>Advanced Power Management Emulation</label>
				<help>APM is a BIOS specification for saving power using several different
techniques. This is mostly useful for battery powered laptops with
APM compliant BIOSes. If you say Y here, the system time will be
reset after a RESUME operation, the /proc/apm device will provide
battery status information, and user-space programs will receive
notification of APM &quot;events&quot; (e.g. battery status change).

In order to use APM, you will need supporting software. For location
and more information, read &lt;file:Documentation/power/apm-acpi.txt&gt;
and the Battery Powered Linux mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

This driver does not spin down disk drives (see the hdparm(8)
manpage (&quot;man 8 hdparm&quot;) for that), and it doesn't turn off
VESA-compliant &quot;green&quot; monitors.

Generally, if you don't have a battery in your machine, there isn't
much point in using this driver and you should say N. If you get
random kernel OOPSes or reboots that don't seem to be related to
anything, try disabling/enabling this option (or disabling/enabling
APM in your BIOS).</help>
			</entry>
			<entry name="PM_OPP">
				<help>SOCs have a standard set of tuples consisting of frequency and
voltage pairs that the device will support per voltage domain. This
is called Operating Performance Point or OPP. The actual definitions
of OPP varies over silicon within the same family of devices.

OPP layer organizes the data internally using device pointers
representing individual voltage domains and provides SOC
implementations a ready to use framework to manage OPPs.
For more information, read &lt;file:Documentation/power/opp.txt&gt;</help>
			</entry>
			<entry name="PM_CLK"/>
			<entry name="PM_GENERIC_DOMAINS"/>
			<entry name="WQ_POWER_EFFICIENT_DEFAULT">
				<label>Enable workqueue power-efficient mode by default</label>
				<help>Per-cpu workqueues are generally preferred because they show
better performance thanks to cache locality; unfortunately,
per-cpu workqueues tend to be more power hungry than unbound
workqueues.

Enabling workqueue.power_efficient kernel parameter makes the
per-cpu workqueues which were observed to contribute
significantly to power consumption unbound, leading to measurably
lower power usage at the cost of small performance overhead.

This config option determines whether workqueue.power_efficient
is enabled by default.

If in doubt, say N.</help>
			</entry>
			<entry name="PM_GENERIC_DOMAINS_SLEEP"/>
			<entry name="PM_GENERIC_DOMAINS_OF"/>
			<entry name="CPU_PM"/>
			<entry name="ACPI">
				<label>ACPI (Advanced Configuration and Power Interface) Support</label>
				<help>Advanced Configuration and Power Interface (ACPI) support for
Linux requires an ACPI-compliant platform (hardware/firmware),
and assumes the presence of OS-directed configuration and power
management (OSPM) software.  This option will enlarge your
kernel by about 70K.

Linux ACPI provides a robust functional replacement for several
legacy configuration and power management interfaces, including
the Plug-and-Play BIOS specification (PnP BIOS), the
MultiProcessor Specification (MPS), and the Advanced Power
Management (APM) specification.  If both ACPI and APM support
are configured, ACPI is used.

The project home page for the Linux ACPI subsystem is here:
&lt;https://01.org/linux-acpi&gt;

Linux support for ACPI is based on Intel Corporation's ACPI
Component Architecture (ACPI CA).  For more information on the
ACPI CA, see:
&lt;http://acpica.org/&gt;

ACPI is an open industry specification originally co-developed by
Hewlett-Packard, Intel, Microsoft, Phoenix, and Toshiba. Currently,
it is developed by the ACPI Specification Working Group (ASWG) under
the UEFI Forum and any UEFI member can join the ASWG and contribute
to the ACPI specification.
The specification is available at:
&lt;http://www.acpi.info&gt;
&lt;http://www.uefi.org/acpi/specs&gt;</help>
			</entry>
			<entry name="ACPI_LEGACY_TABLES_LOOKUP"/>
			<entry name="ARCH_MIGHT_HAVE_ACPI_PDC"/>
			<entry name="ACPI_GENERIC_GSI"/>
			<entry name="ACPI_SYSTEM_POWER_STATES_SUPPORT"/>
			<entry name="ACPI_CCA_REQUIRED"/>
			<entry name="ACPI_DEBUGGER">
				<label>AML debugger interface</label>
				<help>Enable in-kernel debugging of AML facilities: statistics,
internal object dump, single step control method execution.
This is still under development, currently enabling this only
results in the compilation of the ACPICA debugger files.</help>
			</entry>
			<entry name="ACPI_DEBUGGER_USER">
				<label>Userspace debugger accessiblity</label>
				<help>Export /sys/kernel/debug/acpi/acpidbg for userspace utilities
to access the debugger functionalities.</help>
			</entry>
			<entry name="ACPI_SPCR_TABLE"/>
			<entry name="ACPI_SLEEP"/>
			<entry name="ACPI_PROCFS_POWER">
				<label>Deprecated power /proc/acpi directories</label>
				<help>For backwards compatibility, this option allows
deprecated power /proc/acpi/ directories to exist, even when
they have been replaced by functions in /sys.
The deprecated directories (and their replacements) include:
/proc/acpi/battery/* (/sys/class/power_supply/*)
/proc/acpi/ac_adapter/* (sys/class/power_supply/*)
This option has no effect on /proc/acpi/ directories
and functions, which do not yet exist in /sys
This option, together with the proc directories, will be
deleted in the future.

Say N to delete power /proc/acpi/ directories that have moved to /sys/</help>
			</entry>
			<entry name="ACPI_REV_OVERRIDE_POSSIBLE">
				<label>Allow supported ACPI revision to be overriden</label>
				<help>The platform firmware on some systems expects Linux to return &quot;5&quot; as
the supported ACPI revision which makes it expose system configuration
information in a special way.

For example, based on what ACPI exports as the supported revision,
Dell XPS 13 (2015) configures its audio device to either work in HDA
mode or in I2S mode, where the former is supposed to be used on Linux
until the latter is fully supported (in the kernel as well as in user
space).

This option enables a DMI-based quirk for the above Dell machine (so
that HDA audio is exposed by the platform firmware to the kernel) and
makes it possible to force the kernel to return &quot;5&quot; as the supported
ACPI revision via the &quot;acpi_rev_override&quot; command line switch.</help>
			</entry>
			<entry name="ACPI_EC_DEBUGFS">
				<label>EC read/write access through /sys/kernel/debug/ec</label>
				<help>Say N to disable Embedded Controller /sys/kernel/debug interface

Be aware that using this interface can confuse your Embedded
Controller in a way that a normal reboot is not enough. You then
have to power off your system, and remove the laptop battery for
some seconds.
An Embedded Controller typically is available on laptops and reads
sensor values like battery state and temperature.
The kernel accesses the EC through ACPI parsed code provided by BIOS
tables. This option allows to access the EC directly without ACPI
code being involved.
Thus this option is a debug option that helps to write ACPI drivers
and can be used to identify ACPI code or EC firmware bugs.</help>
			</entry>
			<entry name="ACPI_AC">
				<label>AC Adapter</label>
				<help>This driver supports the AC Adapter object, which indicates
whether a system is on AC or not.  If you have a system that can
switch between A/C and battery, say Y.

To compile this driver as a module, choose M here:
the module will be called ac.</help>
			</entry>
			<entry name="ACPI_BATTERY">
				<label>Battery</label>
				<help>This driver adds support for battery information through
/proc/acpi/battery. If you have a mobile system with a battery,
say Y.

To compile this driver as a module, choose M here:
the module will be called battery.</help>
			</entry>
			<entry name="ACPI_BUTTON">
				<label>Button</label>
				<help>This driver handles events on the power, sleep, and lid buttons.
A daemon reads events from input devices or via netlink and
performs user-defined actions such as shutting down the system.
This is necessary for software-controlled poweroff.

To compile this driver as a module, choose M here:
the module will be called button.</help>
			</entry>
			<entry name="ACPI_VIDEO">
				<label>Video</label>
				<help>This driver implements the ACPI Extensions For Display Adapters
for integrated graphics devices on motherboard, as specified in
ACPI 2.0 Specification, Appendix B.  This supports basic operations
such as defining the video POST device, retrieving EDID information,
and setting up a video output.

To compile this driver as a module, choose M here:
the module will be called video.</help>
			</entry>
			<entry name="ACPI_FAN">
				<label>Fan</label>
				<help>This driver supports ACPI fan devices, allowing user-mode
applications to perform basic fan control (on, off, status).

To compile this driver as a module, choose M here:
the module will be called fan.</help>
			</entry>
			<entry name="ACPI_DOCK">
				<label>Dock</label>
				<help>This driver supports ACPI-controlled docking stations and removable
drive bays such as the IBM Ultrabay and the Dell Module Bay.</help>
			</entry>
			<entry name="ACPI_CPU_FREQ_PSS"/>
			<entry name="ACPI_PROCESSOR_CSTATE"/>
			<entry name="ACPI_PROCESSOR_IDLE"/>
			<entry name="ACPI_MCFG"/>
			<entry name="ACPI_CPPC_LIB">
				<help>If this option is enabled, this file implements common functionality
to parse CPPC tables as described in the ACPI 5.1+ spec. The
routines implemented are meant to be used by other
drivers to control CPU performance using CPPC semantics.
If your platform does not support CPPC in firmware,
leave this option disabled.</help>
			</entry>
			<entry name="ACPI_PROCESSOR">
				<label>Processor</label>
				<help>This driver adds support for the ACPI Processor package. It is required
by several flavors of cpufreq performance-state, thermal, throttling and
idle drivers.

To compile this driver as a module, choose M here:
the module will be called processor.</help>
			</entry>
			<entry name="ACPI_IPMI">
				<label>IPMI</label>
				<help>This driver enables the ACPI to access the BMC controller. And it
uses the IPMI request/response message to communicate with BMC
controller, which can be found on on the server.

To compile this driver as a module, choose M here:
the module will be called as acpi_ipmi.</help>
			</entry>
			<entry name="ACPI_HOTPLUG_CPU"/>
			<entry name="ACPI_PROCESSOR_AGGREGATOR">
				<label>Processor Aggregator</label>
				<help>ACPI 4.0 defines processor Aggregator, which enables OS to perform
specific processor configuration and control that applies to all
processors in the platform. Currently only logical processor idling
is defined, which is to reduce power consumption. This driver
supports the new device.</help>
			</entry>
			<entry name="ACPI_THERMAL">
				<label>Thermal Zone</label>
				<help>This driver supports ACPI thermal zones.  Most mobile and
some desktop systems support ACPI thermal zones.  It is HIGHLY
recommended that this option be enabled, as your processor(s)
may be damaged without it.

To compile this driver as a module, choose M here:
the module will be called thermal.</help>
			</entry>
			<entry name="ACPI_NUMA">
				<label>NUMA support</label>
			</entry>
			<entry name="ACPI_CUSTOM_DSDT_FILE">
				<label>Custom DSDT Table file to include</label>
				<help>This option supports a custom DSDT by linking it into the kernel.
See Documentation/acpi/dsdt-override.txt

Enter the full path name to the file which includes the AmlCode
declaration.

If unsure, don't enter a file name.</help>
			</entry>
			<entry name="ACPI_CUSTOM_DSDT"/>
			<entry name="ARCH_HAS_ACPI_TABLE_UPGRADE"/>
			<entry name="ACPI_TABLE_UPGRADE">
				<label>Allow upgrading ACPI tables via initrd</label>
				<help>This option provides functionality to upgrade arbitrary ACPI tables
via initrd. No functional change if no ACPI tables are passed via
initrd, therefore it's safe to say Y.
See Documentation/acpi/initrd_table_override.txt for details</help>
			</entry>
			<entry name="ACPI_DEBUG">
				<label>Debug Statements</label>
				<help>The ACPI subsystem can produce debug output.  Saying Y enables this
output and increases the kernel size by around 50K.

Use the acpi.debug_layer and acpi.debug_level kernel command-line
parameters documented in Documentation/acpi/debug.txt and
Documentation/kernel-parameters.txt to control the type and
amount of debug output.</help>
			</entry>
			<entry name="ACPI_PCI_SLOT">
				<label>PCI slot detection driver</label>
				<help>This driver creates entries in /sys/bus/pci/slots/ for all PCI
slots in the system.  This can help correlate PCI bus addresses,
i.e., segment/bus/device/function tuples, with physical slots in
the system.  If you are unsure, say N.</help>
			</entry>
			<entry name="X86_PM_TIMER">
				<label>Power Management Timer Support&quot; if EXPERT</label>
				<help>The Power Management Timer is available on all ACPI-capable,
in most cases even if ACPI is unusable or blacklisted.

This timing source is not affected by power management features
like aggressive processor idling, throttling, frequency and/or
voltage scaling, unlike the commonly used Time Stamp Counter
(TSC) timing source.

You should nearly always say Y here because many modern
systems require this timer.</help>
			</entry>
			<entry name="ACPI_CONTAINER">
				<label>Container and Module Devices</label>
				<help>This driver supports ACPI Container and Module devices (IDs
ACPI0004, PNP0A05, and PNP0A06).

This helps support hotplug of nodes, CPUs, and memory.

To compile this driver as a module, choose M here:
the module will be called container.</help>
			</entry>
			<entry name="ACPI_HOTPLUG_MEMORY">
				<label>Memory Hotplug</label>
				<help>This driver supports ACPI memory hotplug.  The driver
fields notifications on ACPI memory devices (PNP0C80),
which represent memory ranges that may be onlined or
offlined during runtime.

If your hardware and firmware do not support adding or
removing memory devices at runtime, you need not enable
this driver.

To compile this driver as a module, choose M here:
the module will be called acpi_memhotplug.</help>
			</entry>
			<entry name="ACPI_HOTPLUG_IOAPIC"/>
			<entry name="ACPI_SBS">
				<label>Smart Battery System</label>
				<help>This driver supports the Smart Battery System, another
type of access to battery information, found on some laptops.

To compile this driver as a module, choose M here:
the modules will be called sbs and sbshc.</help>
			</entry>
			<entry name="ACPI_HED">
				<label>Hardware Error Device</label>
				<help>This driver supports the Hardware Error Device (PNP0C33),
which is used to report some hardware errors notified via
SCI, mainly the corrected errors.</help>
			</entry>
			<entry name="ACPI_CUSTOM_METHOD">
				<label>Allow ACPI methods to be inserted/replaced at run time</label>
				<help>This debug facility allows ACPI AML methods to be inserted and/or
replaced without rebooting the system. For details refer to:
Documentation/acpi/method-customizing.txt.

NOTE: This option is security sensitive, because it allows arbitrary
kernel memory to be written to by root (uid=0) users, allowing them
to bypass certain security measures (e.g. if root is not allowed to
load additional kernel modules after boot, this feature may be used
to override that restriction).</help>
			</entry>
			<entry name="ACPI_BGRT">
				<label>Boottime Graphics Resource Table support</label>
				<help>This driver adds support for exposing the ACPI Boottime Graphics
Resource Table, which allows the operating system to obtain
data from the firmware boot splash. It will appear under
/sys/firmware/acpi/bgrt/ .</help>
			</entry>
			<entry name="ACPI_REDUCED_HARDWARE_ONLY">
				<label>Hardware-reduced ACPI support only&quot; if EXPERT</label>
				<help>This config item changes the way the ACPI code is built.  When this
option is selected, the kernel will use a specialized version of
ACPICA that ONLY supports the ACPI &quot;reduced hardware&quot; mode.  The
resulting kernel will be smaller but it will also be restricted to
running in ACPI reduced hardware mode ONLY.

If you are unsure what to do, do not enable this option.</help>
			</entry>
			<entry name="ACPI_NFIT">
				<label>ACPI NVDIMM Firmware Interface Table (NFIT)</label>
				<help>Infrastructure to probe ACPI 6 compliant platforms for
NVDIMMs (NFIT) and register a libnvdimm device tree.  In
addition to storage devices this also enables libnvdimm to pass
ACPI._DSM messages for platform/dimm configuration.

To compile this driver as a module, choose M here:
the module will be called nfit.</help>
			</entry>
			<entry name="ACPI_NFIT_DEBUG">
				<label>NFIT DSM debug</label>
				<help>Enabling this option causes the nfit driver to dump the
input and output buffers of _DSM operations on the ACPI0012
device and its children.  This can be very verbose, so leave
it disabled unless you are debugging a hardware / firmware
issue.
</help>
			</entry>
			<entry name="HAVE_ACPI_APEI"/>
			<entry name="HAVE_ACPI_APEI_NMI"/>
			<entry name="ACPI_APEI">
				<label>ACPI Platform Error Interface (APEI)</label>
				<help>APEI allows to report errors (for example from the chipset)
to the operating system. This improves NMI handling
especially. In addition it supports error serialization and
error injection.</help>
			</entry>
			<entry name="ACPI_APEI_GHES">
				<label>APEI Generic Hardware Error Source</label>
				<help>Generic Hardware Error Source provides a way to report
platform hardware errors (such as that from chipset). It
works in so called &quot;Firmware First&quot; mode, that is, hardware
errors are reported to firmware firstly, then reported to
Linux by firmware. This way, some non-standard hardware
error registers or non-standard hardware link can be checked
by firmware to produce more valuable hardware error
information for Linux.</help>
			</entry>
			<entry name="ACPI_APEI_PCIEAER">
				<label>APEI PCIe AER logging/recovering support</label>
				<help>PCIe AER errors may be reported via APEI firmware first mode.
Turn on this option to enable the corresponding support.</help>
			</entry>
			<entry name="ACPI_APEI_MEMORY_FAILURE">
				<label>APEI memory error recovering support</label>
				<help>Memory errors may be reported via APEI firmware first mode.
Turn on this option to enable the memory recovering support.</help>
			</entry>
			<entry name="ACPI_APEI_EINJ">
				<label>APEI Error INJection (EINJ)</label>
				<help>EINJ provides a hardware error injection mechanism, it is
mainly used for debugging and testing the other parts of
APEI and some other RAS features.</help>
			</entry>
			<entry name="ACPI_APEI_ERST_DEBUG">
				<label>APEI Error Record Serialization Table (ERST) Debug Support</label>
				<help>ERST is a way provided by APEI to save and retrieve hardware
error information to and from a persistent store. Enable this
if you want to debugging and testing the ERST kernel support
and firmware implementation.
</help>
			</entry>
			<entry name="DPTF_POWER">
				<label>DPTF Platform Power Participant</label>
				<help>This driver adds support for Dynamic Platform and Thermal Framework
(DPTF) Platform Power Participant device (INT3407) support.
This participant is responsible for exposing platform telemetry:
max_platform_power
platform_power_source
adapter_rating
battery_steady_power
charger_type

To compile this driver as a module, choose M here:
the module will be called dptf_power.
</help>
			</entry>
			<entry name="ACPI_EXTLOG">
				<label>Extended Error Log support</label>
				<help>Certain usages such as Predictive Failure Analysis (PFA) require
more information about the error than what can be described in
processor machine check banks. Most server processors log
additional information about the error in processor uncore
registers. Since the addresses and layout of these registers vary
widely from one processor to another, system software cannot
readily make use of them. To complicate matters further, some of
the additional error information cannot be constructed without
detailed knowledge about platform topology.

Enhanced MCA Logging allows firmware to provide additional error
information to system software, synchronous with MCE or CMCI. This
driver adds support for that functionality with corresponding
tracepoint which carries that information to userspace.</help>
			</entry>
			<entry name="PMIC_OPREGION">
				<label>PMIC (Power Management Integrated Circuit) operation region support</label>
				<help>Select this option to enable support for ACPI operation
region of the PMIC chip. The operation region can be used
to control power rails and sensor reading/writing on the
PMIC chip.</help>
			</entry>
			<entry name="CRC_PMIC_OPREGION">
				<label>ACPI operation region support for CrystalCove PMIC</label>
				<help>This config adds ACPI operation region support for CrystalCove PMIC.</help>
			</entry>
			<entry name="XPOWER_PMIC_OPREGION">
				<label>ACPI operation region support for XPower AXP288 PMIC</label>
				<help>This config adds ACPI operation region support for XPower AXP288 PMIC.</help>
			</entry>
			<entry name="BXT_WC_PMIC_OPREGION">
				<label>ACPI operation region support for BXT WhiskeyCove PMIC</label>
				<help>This config adds ACPI operation region support for BXT WhiskeyCove PMIC.</help>
			</entry>
			<entry name="ACPI_CONFIGFS">
				<label>ACPI configfs support</label>
				<help>Select this option to enable support for ACPI configuration from
userspace. The configurable ACPI groups will be visible under
/config/acpi, assuming configfs is mounted under /config.</help>
			</entry>
			<entry name="ACPI_IORT"/>
			<entry name="SFI">
				<label>SFI (Simple Firmware Interface) Support</label>
				<help>The Simple Firmware Interface (SFI) provides a lightweight method
for platform firmware to pass information to the operating system
via static tables in memory.  Kernel SFI support is required to
boot on SFI-only platforms.  Currently, all SFI-only platforms are
based on the 2nd generation Intel Atom processor platform,
code-named Moorestown.

For more information, see http://simplefirmware.org

Say 'Y' here to enable the kernel to boot on SFI-only platforms.
</help>
			</entry>
			<entry name="X86_APM_BOOT"/>
			<entry name="APM">
				<label>APM (Advanced Power Management) BIOS support</label>
				<help>APM is a BIOS specification for saving power using several different
techniques. This is mostly useful for battery powered laptops with
APM compliant BIOSes. If you say Y here, the system time will be
reset after a RESUME operation, the /proc/apm device will provide
battery status information, and user-space programs will receive
notification of APM &quot;events&quot; (e.g. battery status change).

If you select &quot;Y&quot; here, you can disable actual use of the APM
BIOS by passing the &quot;apm=off&quot; option to the kernel at boot time.

Note that the APM support is almost completely disabled for
machines with more than one CPU.

In order to use APM, you will need supporting software. For location
and more information, read &lt;file:Documentation/power/apm-acpi.txt&gt;
and the Battery Powered Linux mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

This driver does not spin down disk drives (see the hdparm(8)
manpage (&quot;man 8 hdparm&quot;) for that), and it doesn't turn off
VESA-compliant &quot;green&quot; monitors.

This driver does not support the TI 4000M TravelMate and the ACER
486/DX4/75 because they don't have compliant BIOSes. Many &quot;green&quot;
desktop machines also don't have compliant BIOSes, and this driver
may cause those machines to panic during the boot phase.

Generally, if you don't have a battery in your machine, there isn't
much point in using this driver and you should say N. If you get
random kernel OOPSes or reboots that don't seem to be related to
anything, try disabling/enabling this option (or disabling/enabling
APM in your BIOS).

Some other things you should try when experiencing seemingly random,
&quot;weird&quot; problems:

1) make sure that you have enough swap space and that it is
enabled.
2) pass the &quot;no-hlt&quot; option to the kernel
3) switch on floating point emulation in the kernel and pass
the &quot;no387&quot; option to the kernel
4) pass the &quot;floppy=nodma&quot; option to the kernel
5) pass the &quot;mem=4M&quot; option to the kernel (thereby disabling
all but the first 4 MB of RAM)
6) make sure that the CPU is not over clocked.
7) read the sig11 FAQ at &lt;http://www.bitwizard.nl/sig11/&gt;
8) disable the cache from your BIOS settings
9) install a fan for the video card or exchange video RAM
10) install a better fan for the CPU
11) exchange RAM chips
12) exchange the motherboard.

To compile this driver as a module, choose M here: the
module will be called apm.</help>
			</entry>
			<entry name="APM_IGNORE_USER_SUSPEND">
				<label>Ignore USER SUSPEND</label>
				<help>This option will ignore USER SUSPEND requests. On machines with a
compliant APM BIOS, you want to say N. However, on the NEC Versa M
series notebooks, it is necessary to say Y because of a BIOS bug.</help>
			</entry>
			<entry name="APM_DO_ENABLE">
				<label>Enable PM at boot time</label>
				<help>Enable APM features at boot time. From page 36 of the APM BIOS
specification: &quot;When disabled, the APM BIOS does not automatically
power manage devices, enter the Standby State, enter the Suspend
State, or take power saving steps in response to CPU Idle calls.&quot;
This driver will make CPU Idle calls when Linux is idle (unless this
feature is turned off -- see &quot;Do CPU IDLE calls&quot;, below). This
should always save battery power, but more complicated APM features
will be dependent on your BIOS implementation. You may need to turn
this option off if your computer hangs at boot time when using APM
support, or if it beeps continuously instead of suspending. Turn
this off if you have a NEC UltraLite Versa 33/C or a Toshiba
T400CDT. This is off by default since most machines do fine without
this feature.</help>
			</entry>
			<entry name="APM_CPU_IDLE">
				<label>Make CPU Idle calls when idle</label>
				<help>Enable calls to APM CPU Idle/CPU Busy inside the kernel's idle loop.
On some machines, this can activate improved power savings, such as
a slowed CPU clock rate, when the machine is idle. These idle calls
are made after the idle loop has run for some length of time (e.g.,
333 mS). On some machines, this will cause a hang at boot time or
whenever the CPU becomes idle. (On machines with more than one CPU,
this option does nothing.)</help>
			</entry>
			<entry name="APM_DISPLAY_BLANK">
				<label>Enable console blanking using APM</label>
				<help>Enable console blanking using the APM. Some laptops can use this to
turn off the LCD backlight when the screen blanker of the Linux
virtual console blanks the screen. Note that this is only used by
the virtual console screen blanker, and won't turn off the backlight
when using the X Window system. This also doesn't have anything to
do with your VESA-compliant power-saving monitor. Further, this
option doesn't work for all laptops -- it might not turn off your
backlight at all, or it might print a lot of errors to the console,
especially if you are using gpm.</help>
			</entry>
			<entry name="APM_ALLOW_INTS">
				<label>Allow interrupts during APM BIOS calls</label>
				<help>Normally we disable external interrupts while we are making calls to
the APM BIOS as a measure to lessen the effects of a badly behaving
BIOS implementation.  The BIOS should reenable interrupts if it
needs to.  Unfortunately, some BIOSes do not -- especially those in
many of the newer IBM Thinkpads.  If you experience hangs when you
suspend, try setting this to Y.  Otherwise, say N.</help>
			</entry>
			<container name="CPU_Frequency_scaling">
				<label>CPU Frequency scaling</label>
				<entry name="CPU_FREQ">
					<label>CPU Frequency scaling</label>
					<help>CPU Frequency scaling allows you to change the clock speed of
CPUs on the fly. This is a nice method to save power, because
the lower the CPU clock speed, the less power the CPU consumes.

Note that this driver doesn't automatically change the CPU
clock speed, you need to either enable a dynamic cpufreq governor
(see below) after boot, or use a userspace tool.

For details, take a look at &lt;file:Documentation/cpu-freq&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_ATTR_SET"/>
				<entry name="CPU_FREQ_GOV_COMMON"/>
				<entry name="CPU_FREQ_BOOST_SW"/>
				<entry name="CPU_FREQ_STAT">
					<label>CPU frequency transition statistics</label>
					<help>Export CPU frequency statistics information through sysfs.

If in doubt, say N.</help>
				</entry>
				<entry name="CPU_FREQ_STAT_DETAILS">
					<label>CPU frequency transition statistics details</label>
					<help>Show detailed CPU frequency transition table in sysfs.

If in doubt, say N.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_PERFORMANCE">
					<label>performance</label>
					<help>Use the CPUFreq governor 'performance' as default. This sets
the frequency statically to the highest frequency supported by
the CPU.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_POWERSAVE">
					<label>powersave</label>
					<help>Use the CPUFreq governor 'powersave' as default. This sets
the frequency statically to the lowest frequency supported by
the CPU.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_USERSPACE">
					<label>userspace</label>
					<help>Use the CPUFreq governor 'userspace' as default. This allows
you to set the CPU frequency manually or when a userspace
program shall be able to set the CPU dynamically without having
to enable the userspace governor manually.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_ONDEMAND">
					<label>ondemand</label>
					<help>Use the CPUFreq governor 'ondemand' as default. This allows
you to get a full dynamic frequency capable system by simply
loading your cpufreq low-level hardware driver.
Be aware that not all cpufreq drivers support the ondemand
governor. If unsure have a look at the help section of the
driver. Fallback governor will be the performance governor.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_CONSERVATIVE">
					<label>conservative</label>
					<help>Use the CPUFreq governor 'conservative' as default. This allows
you to get a full dynamic frequency capable system by simply
loading your cpufreq low-level hardware driver.
Be aware that not all cpufreq drivers support the conservative
governor. If unsure have a look at the help section of the
driver. Fallback governor will be the performance governor.</help>
				</entry>
				<entry name="CPU_FREQ_DEFAULT_GOV_SCHEDUTIL">
					<label>schedutil</label>
					<help>Use the 'schedutil' CPUFreq governor by default. If unsure,
have a look at the help section of that governor. The fallback
governor will be 'performance'.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_PERFORMANCE">
					<label>'performance' governor</label>
					<help>This cpufreq governor sets the frequency statically to the
highest available CPU frequency.

To compile this driver as a module, choose M here: the
module will be called cpufreq_performance.

If in doubt, say Y.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_POWERSAVE">
					<label>'powersave' governor</label>
					<help>This cpufreq governor sets the frequency statically to the
lowest available CPU frequency.

To compile this driver as a module, choose M here: the
module will be called cpufreq_powersave.

If in doubt, say Y.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_USERSPACE">
					<label>'userspace' governor for userspace frequency scaling</label>
					<help>Enable this cpufreq governor when you either want to set the
CPU frequency manually or when a userspace program shall
be able to set the CPU dynamically, like on LART
&lt;http://www.lartmaker.nl/&gt;.

To compile this driver as a module, choose M here: the
module will be called cpufreq_userspace.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say Y.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_ONDEMAND">
					<label>'ondemand' cpufreq policy governor</label>
					<help>'ondemand' - This driver adds a dynamic cpufreq policy governor.
The governor does a periodic polling and
changes frequency based on the CPU utilization.
The support for this governor depends on CPU capability to
do fast frequency switching (i.e, very low latency frequency
transitions).

To compile this driver as a module, choose M here: the
module will be called cpufreq_ondemand.

For details, take a look at linux/Documentation/cpu-freq.

If in doubt, say N.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_CONSERVATIVE">
					<label>'conservative' cpufreq governor</label>
					<help>'conservative' - this driver is rather similar to the 'ondemand'
governor both in its source code and its purpose, the difference is
its optimisation for better suitability in a battery powered
environment.  The frequency is gracefully increased and decreased
rather than jumping to 100% when speed is required.

If you have a desktop machine then you should really be considering
the 'ondemand' governor instead, however if you are using a laptop,
PDA or even an AMD64 based computer (due to the unacceptable
step-by-step latency issues between the minimum and maximum frequency
transitions in the CPU) you will probably want to use this governor.

To compile this driver as a module, choose M here: the
module will be called cpufreq_conservative.

For details, take a look at linux/Documentation/cpu-freq.

If in doubt, say N.</help>
				</entry>
				<entry name="CPU_FREQ_GOV_SCHEDUTIL">
					<label>'schedutil' cpufreq policy governor</label>
					<help>This governor makes decisions based on the utilization data provided
by the scheduler.  It sets the CPU frequency to be proportional to
the utilization/capacity ratio coming from the scheduler.  If the
utilization is frequency-invariant, the new frequency is also
proportional to the maximum available frequency.  If that is not the
case, it is proportional to the current frequency of the CPU.  The
frequency tipping point is at utilization/capacity equal to 80% in
both cases.

To compile this driver as a module, choose M here: the module will
be called cpufreq_schedutil.

If in doubt, say N.</help>
				</entry>
				<entry name="CPUFREQ_DT">
					<label>Generic DT based cpufreq driver</label>
					<help>This adds a generic DT based cpufreq driver for frequency management.
It supports both uniprocessor (UP) and symmetric multiprocessor (SMP)
systems which share clock and voltage across all CPUs.

If in doubt, say N.</help>
				</entry>
				<entry name="CPUFREQ_DT_PLATDEV">
					<help>This adds a generic DT based cpufreq platdev driver for frequency
management.  This creates a 'cpufreq-dt' platform device, on the
supported platforms.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_INTEL_PSTATE">
					<label>Intel P state control</label>
					<help>This driver provides a P state for Intel core processors.
The driver implements an internal governor and will become
the scaling driver and governor for Sandy bridge processors.

When this driver is enabled it will become the preferred
scaling driver for Sandy bridge processors.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_PCC_CPUFREQ">
					<label>Processor Clocking Control interface driver</label>
					<help>This driver adds support for the PCC interface.

For details, take a look at:
&lt;file:Documentation/cpu-freq/pcc-cpufreq.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called pcc-cpufreq.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_ACPI_CPUFREQ">
					<label>ACPI Processor P-States driver</label>
					<help>This driver adds a CPUFreq driver which utilizes the ACPI
Processor Performance States.
This driver also supports Intel Enhanced Speedstep and newer
AMD CPUs.

To compile this driver as a module, choose M here: the
module will be called acpi-cpufreq.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_ACPI_CPUFREQ_CPB">
					<label>Legacy cpb sysfs knob support for AMD CPUs</label>
					<help>The powernow-k8 driver used to provide a sysfs knob called &quot;cpb&quot;
to disable the Core Performance Boosting feature of AMD CPUs. This
file has now been superseded by the more generic &quot;boost&quot; entry.

By enabling this option the acpi_cpufreq driver provides the old
entry in addition to the new boost ones, for compatibility reasons.</help>
				</entry>
				<entry name="X86_SFI_CPUFREQ">
					<label>SFI Performance-States driver</label>
					<help>This adds a CPUFreq driver for some Silvermont based Intel Atom
architectures like Z34xx and Z35xx which enumerate processor
performance states through SFI.

If in doubt, say N.</help>
				</entry>
				<entry name="ELAN_CPUFREQ">
					<label>AMD Elan SC400 and SC410</label>
					<help>This adds the CPUFreq driver for AMD Elan SC400 and SC410
processors.

You need to specify the processor maximum speed as boot
parameter: elanfreq=maxspeed (in kHz) or as module
parameter &quot;max_freq&quot;.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="SC520_CPUFREQ">
					<label>AMD Elan SC520</label>
					<help>This adds the CPUFreq driver for AMD Elan SC520 processor.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_POWERNOW_K6">
					<label>AMD Mobile K6-2/K6-3 PowerNow!</label>
					<help>This adds the CPUFreq driver for mobile AMD K6-2+ and mobile
AMD K6-3+ processors.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_POWERNOW_K7">
					<label>AMD Mobile Athlon/Duron PowerNow!</label>
					<help>This adds the CPUFreq driver for mobile AMD K7 mobile processors.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_POWERNOW_K7_ACPI"/>
				<entry name="X86_POWERNOW_K8">
					<label>AMD Opteron/Athlon64 PowerNow!</label>
					<help>This adds the CPUFreq driver for K8/early Opteron/Athlon64 processors.
Support for K10 and newer processors is now in acpi-cpufreq.

To compile this driver as a module, choose M here: the
module will be called powernow-k8.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.</help>
				</entry>
				<entry name="X86_AMD_FREQ_SENSITIVITY">
					<label>AMD frequency sensitivity feedback powersave bias</label>
					<help>This adds AMD-specific powersave bias function to the ondemand
governor, which allows it to make more power-conscious frequency
change decisions based on feedback from hardware (available on AMD
Family 16h and above).

Hardware feedback tells software how &quot;sensitive&quot; to frequency changes
the CPUs' workloads are. CPU-bound workloads will be more sensitive
-- they will perform better as frequency increases. Memory/IO-bound
workloads will be less sensitive -- they will not necessarily perform
better as frequency increases.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_GX_SUSPMOD">
					<label>Cyrix MediaGX/NatSemi Geode Suspend Modulation</label>
					<help>This add the CPUFreq driver for NatSemi Geode processors which
support suspend modulation.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_SPEEDSTEP_CENTRINO">
					<label>Intel Enhanced SpeedStep (deprecated)</label>
					<help>This is deprecated and this functionality is now merged into
acpi_cpufreq (X86_ACPI_CPUFREQ). Use that driver instead of
speedstep_centrino.
This adds the CPUFreq driver for Enhanced SpeedStep enabled
mobile CPUs.  This means Intel Pentium M (Centrino) CPUs
or 64bit enabled Intel Xeons.

To compile this driver as a module, choose M here: the
module will be called speedstep-centrino.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_SPEEDSTEP_CENTRINO_TABLE">
					<label>Built-in tables for Banias CPUs</label>
					<help>Use built-in tables for Banias CPUs if ACPI encoding
is not available.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_SPEEDSTEP_ICH">
					<label>Intel Speedstep on ICH-M chipsets (ioport interface)</label>
					<help>This adds the CPUFreq driver for certain mobile Intel Pentium III
(Coppermine), all mobile Intel Pentium III-M (Tualatin) and all
mobile Intel Pentium 4 P4-M on systems which have an Intel ICH2,
ICH3 or ICH4 southbridge.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_SPEEDSTEP_SMI">
					<label>Intel SpeedStep on 440BX/ZX/MX chipsets (SMI interface)</label>
					<help>This adds the CPUFreq driver for certain mobile Intel Pentium III
(Coppermine), all mobile Intel Pentium III-M (Tualatin)
on systems which have an Intel 440BX/ZX/MX southbridge.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_P4_CLOCKMOD">
					<label>Intel Pentium 4 clock modulation</label>
					<help>This adds the CPUFreq driver for Intel Pentium 4 / XEON
processors.  When enabled it will lower CPU temperature by skipping
clocks.

This driver should be only used in exceptional
circumstances when very low power is needed because it causes severe
slowdowns and noticeable latencies.  Normally Speedstep should be used
instead.

To compile this driver as a module, choose M here: the
module will be called p4-clockmod.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

Unless you are absolutely sure say N.</help>
				</entry>
				<entry name="X86_CPUFREQ_NFORCE2">
					<label>nVidia nForce2 FSB changing</label>
					<help>This adds the CPUFreq driver for FSB changing on nVidia nForce2
platforms.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_LONGRUN">
					<label>Transmeta LongRun</label>
					<help>This adds the CPUFreq driver for Transmeta Crusoe and Efficeon processors
which support LongRun.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_LONGHAUL">
					<label>VIA Cyrix III Longhaul</label>
					<help>This adds the CPUFreq driver for VIA Samuel/CyrixIII,
VIA Cyrix Samuel/C3, VIA Cyrix Ezra and VIA Cyrix Ezra-T
processors.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_E_POWERSAVER">
					<label>VIA C7 Enhanced PowerSaver (DANGEROUS)</label>
					<help>This adds the CPUFreq driver for VIA C7 processors.  However, this driver
does not have any safeguards to prevent operating the CPU out of spec
and is thus considered dangerous.  Please use the regular ACPI cpufreq
driver, enabled by CONFIG_X86_ACPI_CPUFREQ.

If in doubt, say N.</help>
				</entry>
				<entry name="X86_SPEEDSTEP_LIB"/>
				<entry name="X86_SPEEDSTEP_RELAXED_CAP_CHECK">
					<label>Relaxed speedstep capability checks</label>
					<help>Don't perform all checks for a speedstep capable system which would
normally be done. Some ancient or strange systems, though speedstep
capable, don't always indicate that they are speedstep capable. This
option lets the probing code bypass some of those checks if the
parameter &quot;relaxed_check=1&quot; is passed to the module.

</help>
				</entry>
				<entry name="ARM_BIG_LITTLE_CPUFREQ">
					<label>Generic ARM big LITTLE CPUfreq driver</label>
					<help>This enables the Generic CPUfreq driver for ARM big.LITTLE platforms.</help>
				</entry>
				<entry name="ARM_DT_BL_CPUFREQ">
					<label>Generic probing via DT for ARM big LITTLE CPUfreq driver</label>
					<help>This enables probing via DT for Generic CPUfreq driver for ARM
big.LITTLE platform. This gets frequency tables from DT.</help>
				</entry>
				<entry name="ARM_VEXPRESS_SPC_CPUFREQ">
					<label>Versatile Express SPC based CPUfreq driver</label>
					<help>This add the CPUfreq driver support for Versatile Express
big.LITTLE platforms using SPC for power management.</help>
				</entry>
				<entry name="ARM_EXYNOS5440_CPUFREQ">
					<label>SAMSUNG EXYNOS5440</label>
					<help>This adds the CPUFreq driver for Samsung EXYNOS5440
SoC. The nature of exynos5440 clock controller is
different than previous exynos controllers so not using
the common exynos framework.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_HIGHBANK_CPUFREQ">
					<label>Calxeda Highbank-based</label>
					<help>This adds the CPUFreq driver for Calxeda Highbank SoC
based boards.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_IMX6Q_CPUFREQ">
					<label>Freescale i.MX6 cpufreq support</label>
					<help>This adds cpufreq driver support for Freescale i.MX6 series SoCs.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_INTEGRATOR">
					<label>CPUfreq driver for ARM Integrator CPUs</label>
					<help>This enables the CPUfreq driver for ARM Integrator CPUs.
If in doubt, say Y.</help>
				</entry>
				<entry name="ARM_KIRKWOOD_CPUFREQ">
					<help>This adds the CPUFreq driver for Marvell Kirkwood
SoCs.</help>
				</entry>
				<entry name="ARM_MT8173_CPUFREQ">
					<label>Mediatek MT8173 CPUFreq support</label>
					<help>This adds the CPUFreq driver support for Mediatek MT8173 SoC.</help>
				</entry>
				<entry name="ARM_OMAP2PLUS_CPUFREQ">
					<label>TI OMAP2+</label>
				</entry>
				<entry name="ARM_S3C_CPUFREQ">
					<help>Internal configuration node for common cpufreq on Samsung SoC</help>
				</entry>
				<entry name="ARM_S3C24XX_CPUFREQ">
					<label>CPUfreq driver for Samsung S3C24XX series CPUs (EXPERIMENTAL)</label>
					<help>This enables the CPUfreq driver for the Samsung S3C24XX family
of CPUs.

For details, take a look at &lt;file:Documentation/cpu-freq&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_S3C24XX_CPUFREQ_DEBUG">
					<label>Debug CPUfreq Samsung driver core</label>
					<help>Enable s3c_freq_dbg for the Samsung S3C CPUfreq core</help>
				</entry>
				<entry name="ARM_S3C24XX_CPUFREQ_IODEBUG">
					<label>Debug CPUfreq Samsung driver IO timing</label>
					<help>Enable s3c_freq_iodbg for the Samsung S3C CPUfreq core</help>
				</entry>
				<entry name="ARM_S3C24XX_CPUFREQ_DEBUGFS">
					<label>Export debugfs for CPUFreq</label>
					<help>Export status information via debugfs.</help>
				</entry>
				<entry name="ARM_S3C2410_CPUFREQ">
					<help>CPU Frequency scaling support for S3C2410</help>
				</entry>
				<entry name="ARM_S3C2412_CPUFREQ">
					<help>CPU Frequency scaling support for S3C2412 and S3C2413 SoC CPUs.</help>
				</entry>
				<entry name="ARM_S3C2416_CPUFREQ">
					<label>S3C2416 CPU Frequency scaling support</label>
					<help>This adds the CPUFreq driver for the Samsung S3C2416 and
S3C2450 SoC. The S3C2416 supports changing the rate of the
armdiv clock source and also entering a so called dynamic
voltage scaling mode in which it is possible to reduce the
core voltage of the CPU.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_S3C2416_CPUFREQ_VCORESCALE">
					<label>Allow voltage scaling for S3C2416 arm core</label>
					<help>Enable CPU voltage scaling when entering the dvs mode.
It uses information gathered through existing hardware and
tests but not documented in any datasheet.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_S3C2440_CPUFREQ">
					<label>S3C2440/S3C2442 CPU Frequency scaling support</label>
					<help>CPU Frequency scaling support for S3C2440 and S3C2442 SoC CPUs.</help>
				</entry>
				<entry name="ARM_S3C64XX_CPUFREQ">
					<label>Samsung S3C64XX</label>
					<help>This adds the CPUFreq driver for Samsung S3C6410 SoC.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_S5PV210_CPUFREQ">
					<label>Samsung S5PV210 and S5PC110</label>
					<help>This adds the CPUFreq driver for Samsung S5PV210 and
S5PC110 SoCs.

If in doubt, say N.</help>
				</entry>
				<entry name="ARM_SA1100_CPUFREQ"/>
				<entry name="ARM_SA1110_CPUFREQ"/>
				<entry name="ARM_SCPI_CPUFREQ">
					<label>SCPI based CPUfreq driver</label>
					<help>This adds the CPUfreq driver support for ARM big.LITTLE platforms
using SCPI protocol for CPU power management.

This driver uses SCPI Message Protocol driver to interact with the
firmware providing the CPU DVFS functionality.</help>
				</entry>
				<entry name="ARM_SPEAR_CPUFREQ">
					<label>SPEAr CPUFreq support</label>
					<help>This adds the CPUFreq driver support for SPEAr SOCs.</help>
				</entry>
				<entry name="ARM_STI_CPUFREQ">
					<label>STi CPUFreq support</label>
					<help>This driver uses the generic OPP framework to match the running
platform with a predefined set of suitable values.  If not provided
we will fall-back so safe-values contained in Device Tree.  Enable
this config option if you wish to add CPUFreq support for STi based
SoCs.</help>
				</entry>
				<entry name="ARM_TEGRA20_CPUFREQ">
					<label>Tegra20 CPUFreq support</label>
					<help>This adds the CPUFreq driver support for Tegra20 SOCs.</help>
				</entry>
				<entry name="ARM_TEGRA124_CPUFREQ">
					<label>Tegra124 CPUFreq support</label>
					<help>This adds the CPUFreq driver support for Tegra124 SOCs.</help>
				</entry>
				<entry name="ARM_PXA2xx_CPUFREQ">
					<label>Intel PXA2xx CPUfreq driver</label>
					<help>This add the CPUFreq driver support for Intel PXA2xx SOCs.

If in doubt, say N.</help>
				</entry>
				<entry name="ACPI_CPPC_CPUFREQ">
					<label>CPUFreq driver based on the ACPI CPPC spec</label>
					<help>This adds a CPUFreq driver which uses CPPC methods
as described in the ACPIv5.1 spec. CPPC stands for
Collaborative Processor Performance Controls. It
is based on an abstract continuous scale of CPU
performance values which allows the remote power
processor to flexibly optimize for power and
performance. CPPC relies on power management firmware
support for its operation.

If in doubt, say N.
</help>
				</entry>
				<entry name="CPU_FREQ_CBE">
					<label>CBE frequency scaling</label>
					<help>This adds the cpufreq driver for Cell BE processors.
For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.
If you don't have such processor, say N</help>
				</entry>
				<entry name="CPU_FREQ_CBE_PMI">
					<label>CBE frequency scaling using PMI interface</label>
					<help>Select this, if you want to use the PMI interface to switch
frequencies. Using PMI, the processor will not only be able to run at
lower speed, but also at lower core voltage.</help>
				</entry>
				<entry name="CPU_FREQ_MAPLE">
					<label>Support for Maple 970FX Evaluation Board</label>
					<help>This adds support for frequency switching on Maple 970FX
Evaluation Board and compatible boards (IBM JS2x blades).</help>
				</entry>
				<entry name="CPU_FREQ_PMAC">
					<label>Support for Apple PowerBooks</label>
					<help>This adds support for frequency switching on Apple PowerBooks,
this currently includes some models of iBook &amp; Titanium
PowerBook.</help>
				</entry>
				<entry name="CPU_FREQ_PMAC64">
					<label>Support for some Apple G5s</label>
					<help>This adds support for frequency switching on Apple iMac G5,
and some of the more recent desktop G5 machines as well.</help>
				</entry>
				<entry name="PPC_PASEMI_CPUFREQ">
					<label>Support for PA Semi PWRficient</label>
					<help>This adds the support for frequency switching on PA Semi
PWRficient processors.</help>
				</entry>
				<entry name="POWERNV_CPUFREQ">
					<label>CPU frequency scaling for IBM POWERNV platform</label>
					<help>This adds support for CPU frequency switching on IBM POWERNV
platform
</help>
				</entry>
				<entry name="AVR32_AT32AP_CPUFREQ">
					<label>CPU frequency driver for AT32AP</label>
					<help>This enables the CPU frequency driver for AT32AP processors.
If in doubt, say N.</help>
				</entry>
				<entry name="IA64_ACPI_CPUFREQ">
					<label>ACPI Processor P-States driver</label>
					<help>This driver adds a CPUFreq driver which utilizes the ACPI
Processor Performance States.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="LOONGSON2_CPUFREQ">
					<label>Loongson2 CPUFreq Driver</label>
					<help>This option adds a CPUFreq driver for loongson processors which
support software configurable cpu frequency.

Loongson2F and it's successors support this feature.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="LOONGSON1_CPUFREQ">
					<label>Loongson1 CPUFreq Driver</label>
					<help>This option adds a CPUFreq driver for loongson1 processors which
support software configurable cpu frequency.

For details, take a look at &lt;file:Documentation/cpu-freq/&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="SPARC_US3_CPUFREQ">
					<label>UltraSPARC-III CPU Frequency driver</label>
					<help>This adds the CPUFreq driver for UltraSPARC-III processors.

For details, take a look at &lt;file:Documentation/cpu-freq&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="SPARC_US2E_CPUFREQ">
					<label>UltraSPARC-IIe CPU Frequency driver</label>
					<help>This adds the CPUFreq driver for UltraSPARC-IIe processors.

For details, take a look at &lt;file:Documentation/cpu-freq&gt;.

If in doubt, say N.</help>
				</entry>
				<entry name="SH_CPU_FREQ">
					<label>SuperH CPU Frequency driver</label>
					<help>This adds the cpufreq driver for SuperH. Any CPU that supports
clock rate rounding through the clock framework can use this
driver. While it will make the kernel slightly larger, this is
harmless for CPUs that don't support rate rounding. The driver
will also generate a notice in the boot log before disabling
itself if the CPU in question is not capable of rate rounding.

For details, take a look at &lt;file:Documentation/cpu-freq&gt;.

If unsure, say N.</help>
				</entry>
				<entry name="QORIQ_CPUFREQ">
					<label>CPU frequency scaling driver for Freescale QorIQ SoCs</label>
					<help>This adds the CPUFreq driver support for Freescale QorIQ SoCs
which are capable of changing the CPU's frequency dynamically.</help>
				</entry>
			</container>
			<container name="CPU_Idle">
				<label>CPU Idle</label>
				<entry name="CPU_IDLE">
					<label>CPU idle PM support</label>
					<help>CPU idle is a generic framework for supporting software-controlled
idle processor power management.  It includes modular cross-platform
governors that can be swapped during runtime.

If you're using an ACPI-enabled platform, you should say Y here.</help>
				</entry>
				<entry name="CPU_IDLE_MULTIPLE_DRIVERS"/>
				<entry name="CPU_IDLE_GOV_LADDER">
					<label>Ladder governor (for periodic timer tick)</label>
				</entry>
				<entry name="CPU_IDLE_GOV_MENU">
					<label>Menu governor (for tickless system)</label>
				</entry>
				<entry name="DT_IDLE_STATES"/>
				<container name="ARM_CPU_Idle_Drivers">
					<label>ARM CPU Idle Drivers</label>
					<entry name="ARM_CPUIDLE">
						<label>Generic ARM/ARM64 CPU idle Driver</label>
						<help>Select this to enable generic cpuidle driver for ARM.
It provides a generic idle driver whose idle states are configured
at run-time through DT nodes. The CPUidle suspend backend is
initialized by calling the CPU operations init idle hook
provided by architecture code.</help>
					</entry>
					<entry name="ARM_BIG_LITTLE_CPUIDLE">
						<label>Support for ARM big.LITTLE processors</label>
						<help>Select this option to enable CPU idle driver for big.LITTLE based
ARM systems. Driver manages CPUs coordination through MCPM and
define different C-states for little and big cores through the
multiple CPU idle drivers infrastructure.</help>
					</entry>
					<entry name="ARM_CLPS711X_CPUIDLE">
						<label>CPU Idle Driver for CLPS711X processors</label>
						<help>Select this to enable cpuidle on Cirrus Logic CLPS711X SOCs.</help>
					</entry>
					<entry name="ARM_HIGHBANK_CPUIDLE">
						<label>CPU Idle Driver for Calxeda processors</label>
						<help>Select this to enable cpuidle on Calxeda processors.</help>
					</entry>
					<entry name="ARM_KIRKWOOD_CPUIDLE">
						<label>CPU Idle Driver for Marvell Kirkwood SoCs</label>
						<help>This adds the CPU Idle driver for Marvell Kirkwood SoCs.</help>
					</entry>
					<entry name="ARM_ZYNQ_CPUIDLE">
						<label>CPU Idle Driver for Xilinx Zynq processors</label>
						<help>Select this to enable cpuidle on Xilinx Zynq processors.</help>
					</entry>
					<entry name="ARM_U8500_CPUIDLE">
						<label>Cpu Idle Driver for the ST-E u8500 processors</label>
						<help>Select this to enable cpuidle for ST-E u8500 processors</help>
					</entry>
					<entry name="ARM_AT91_CPUIDLE">
						<label>Cpu Idle Driver for the AT91 processors</label>
						<help>Select this to enable cpuidle for AT91 processors</help>
					</entry>
					<entry name="ARM_EXYNOS_CPUIDLE">
						<label>Cpu Idle Driver for the Exynos processors</label>
						<help>Select this to enable cpuidle for Exynos processors</help>
					</entry>
					<entry name="ARM_MVEBU_V7_CPUIDLE">
						<label>CPU Idle Driver for mvebu v7 family processors</label>
						<help>Select this to enable cpuidle on Armada 370, 38x and XP processors.
</help>
					</entry>
				</container>
				<container name="MIPS_CPU_Idle_Drivers">
					<label>MIPS CPU Idle Drivers</label>
					<entry name="MIPS_CPS_CPUIDLE">
						<label>CPU Idle driver for MIPS CPS platforms</label>
						<help>Select this option to enable processor idle state management
through cpuidle for systems built around the MIPS Coherent
Processing System (CPS) architecture. In order to make use of
the deepest idle states you will need to ensure that you are
also using the CONFIG_MIPS_CPS SMP implementation.
</help>
					</entry>
				</container>
				<container name="POWERPC_CPU_Idle_Drivers">
					<label>POWERPC CPU Idle Drivers</label>
					<entry name="PSERIES_CPUIDLE">
						<label>Cpuidle driver for pSeries platforms</label>
						<help>Select this option to enable processor idle state management
through cpuidle subsystem.</help>
					</entry>
					<entry name="POWERNV_CPUIDLE">
						<label>Cpuidle driver for powernv platforms</label>
						<help>Select this option to enable processor idle state management
through cpuidle subsystem.
</help>
					</entry>
				</container>
				<entry name="ARCH_NEEDS_CPU_IDLE_COUPLED"/>
			</container>
			<entry name="INTEL_IDLE">
				<label>Cpuidle Driver for Intel Processors</label>
				<help>Enable intel_idle, a cpuidle driver that includes knowledge of
native Intel hardware idle features.  The acpi_idle driver
can be configured at the same time, in order to handle
processors intel_idle does not support.</help>
			</entry>
			<container name="Memory_power_savings">
				<label>Memory power savings</label>
				<entry name="I7300_IDLE_IOAT_CHANNEL"/>
				<entry name="I7300_IDLE">
					<label>Intel chipset idle memory power saving driver</label>
					<help>Enable memory power savings when idle with certain Intel server
chipsets. The chipset must have I/O AT support, such as the
Intel 7300. The power savings depends on the type and quantity of
DRAM devices.</help>
				</entry>
			</container>
		</container>
		<container name="Bus_options_PCI_etc_">
			<label>Bus options (PCI etc.)</label>
			<entry name="PCI">
				<label>PCI support</label>
				<help>Find out whether you have a PCI motherboard. PCI is the name of a
bus system, i.e. the way the CPU talks to the other stuff inside
your box. Other bus systems are ISA, EISA, MicroChannel (MCA) or
VESA. If you have PCI, say Y, otherwise N.</help>
			</entry>
			<entry name="PCI_GOBIOS">
				<label>BIOS</label>
			</entry>
			<entry name="PCI_GOMMCONFIG">
				<label>MMConfig</label>
			</entry>
			<entry name="PCI_GODIRECT">
				<label>Direct</label>
			</entry>
			<entry name="PCI_GOOLPC">
				<label>OLPC XO-1</label>
			</entry>
			<entry name="PCI_GOANY">
				<label>Any</label>
			</entry>
			<entry name="PCI_BIOS"/>
			<entry name="PCI_DIRECT"/>
			<entry name="PCI_MMCONFIG"/>
			<entry name="PCI_OLPC"/>
			<entry name="PCI_XEN"/>
			<entry name="PCI_DOMAINS"/>
			<entry name="PCI_MMCONFIG">
				<label>Support mmconfig PCI config space access</label>
			</entry>
			<entry name="PCI_CNB20LE_QUIRK">
				<label>Read CNB20LE Host Bridge Windows&quot; if EXPERT</label>
				<help>Read the PCI windows out of the CNB20LE host bridge. This allows
PCI hotplug to work on systems with the CNB20LE chipset which do
not have ACPI.

There's no public spec for this chipset, and this functionality
is known to be incomplete.

You should say N unless you know you need this.</help>
			</entry>
			<entry name="PCIEPORTBUS">
				<label>PCI Express Port Bus support</label>
				<help>This automatically enables PCI Express Port Bus support. Users can
choose Native Hot-Plug support, Advanced Error Reporting support,
Power Management Event support and Virtual Channel support to run
on PCI Express Ports (Root or Switch).</help>
			</entry>
			<entry name="HOTPLUG_PCI_PCIE">
				<label>PCI Express Hotplug driver</label>
				<help>Say Y here if you have a motherboard that supports PCI Express Native
Hotplug

When in doubt, say N.</help>
			</entry>
			<entry name="PCIEAER">
				<label>Root Port Advanced Error Reporting support</label>
				<help>This enables PCI Express Root Port Advanced Error Reporting
(AER) driver support. Error reporting messages sent to Root
Port will be handled by PCI Express AER driver.</help>
			</entry>
			<entry name="PCIE_ECRC">
				<label>PCI Express ECRC settings control</label>
				<help>Used to override firmware/bios settings for PCI Express ECRC
(transaction layer end-to-end CRC checking).

When in doubt, say N.</help>
			</entry>
			<entry name="PCIEAER_INJECT">
				<label>PCIe AER error injector support</label>
				<help>This enables PCI Express Root Port Advanced Error Reporting
(AER) software error injector.

Debugging PCIe AER code is quite difficult because it is hard
to trigger various real hardware errors. Software based
error injection can fake almost all kinds of errors with the
help of a user space helper tool aer-inject, which can be
gotten from:
http://www.kernel.org/pub/linux/utils/pci/aer-inject/
</help>
			</entry>
			<entry name="PCIEASPM">
				<label>PCI Express ASPM control&quot; if EXPERT</label>
				<help>This enables OS control over PCI Express ASPM (Active State
Power Management) and Clock Power Management. ASPM supports
state L0/L0s/L1.

ASPM is initially set up by the firmware. With this option enabled,
Linux can modify this state in order to disable ASPM on known-bad
hardware or configurations and enable it when known-safe.

ASPM can be disabled or enabled at runtime via
/sys/module/pcie_aspm/parameters/policy

When in doubt, say Y.</help>
			</entry>
			<entry name="PCIEASPM_DEBUG">
				<label>Debug PCI Express ASPM</label>
				<help>This enables PCI Express ASPM debug support. It will add per-device
interface to control ASPM.</help>
			</entry>
			<entry name="PCIEASPM_DEFAULT">
				<label>BIOS default</label>
				<help>Use the BIOS defaults for PCI Express ASPM.</help>
			</entry>
			<entry name="PCIEASPM_POWERSAVE">
				<label>Powersave</label>
				<help>Enable PCI Express ASPM L0s and L1 where possible, even if the
BIOS did not.</help>
			</entry>
			<entry name="PCIEASPM_PERFORMANCE">
				<label>Performance</label>
				<help>Disable PCI Express ASPM L0s and L1, even if the BIOS enabled them.</help>
			</entry>
			<entry name="PCIE_PME"/>
			<entry name="PCIE_DPC">
				<label>PCIe Downstream Port Containment support</label>
				<help>This enables PCI Express Downstream Port Containment (DPC)
driver support.  DPC events from Root and Downstream ports
will be handled by the DPC driver.  If your system doesn't
have this capability or you do not want to use this feature,
it is safe to answer N.
</help>
			</entry>
			<entry name="PCI_BUS_ADDR_T_64BIT"/>
			<entry name="PCI_MSI">
				<label>Message Signaled Interrupts (MSI and MSI-X)</label>
				<help>This allows device drivers to enable MSI (Message Signaled
Interrupts).  Message Signaled Interrupts enable a device to
generate an interrupt using an inbound Memory Write on its
PCI bus instead of asserting a device IRQ pin.

Use of PCI MSI interrupts can be disabled at kernel boot time
by using the 'pci=nomsi' option.  This disables MSI for the
entire system.

If you don't know what to do here, say Y.</help>
			</entry>
			<entry name="PCI_MSI_IRQ_DOMAIN"/>
			<entry name="PCI_DEBUG">
				<label>PCI Debugging</label>
				<help>Say Y here if you want the PCI core to produce a bunch of debug
messages to the system log.  Select this if you are having a
problem with PCI support and want to see more of what is going on.

When in doubt, say N.</help>
			</entry>
			<entry name="PCI_REALLOC_ENABLE_AUTO">
				<label>Enable PCI resource re-allocation detection</label>
				<help>Say Y here if you want the PCI core to detect if PCI resource
re-allocation needs to be enabled. You can always use pci=realloc=on
or pci=realloc=off to override it.  Note this feature is a no-op
unless PCI_IOV support is also enabled; in that case it will
automatically re-allocate PCI resources if SR-IOV BARs have not
been allocated by the BIOS.

When in doubt, say N.</help>
			</entry>
			<entry name="PCI_STUB">
				<label>PCI Stub driver</label>
				<help>Say Y or M here if you want be able to reserve a PCI device
when it is going to be assigned to a guest operating system.

When in doubt, say N.</help>
			</entry>
			<entry name="XEN_PCIDEV_FRONTEND">
				<label>Xen PCI Frontend</label>
				<help>The PCI device frontend driver allows the kernel to import arbitrary
PCI devices from a PCI backend to support PCI driver domains.</help>
			</entry>
			<entry name="HT_IRQ">
				<label>Interrupts on hypertransport devices</label>
				<help>This allows native hypertransport devices to use interrupts.

If unsure say Y.</help>
			</entry>
			<entry name="PCI_ATS"/>
			<entry name="PCI_ECAM"/>
			<entry name="PCI_IOV">
				<label>PCI IOV support</label>
				<help>I/O Virtualization is a PCI feature supported by some devices
which allows them to create virtual devices which share their
physical resources.

If unsure, say N.</help>
			</entry>
			<entry name="PCI_PRI">
				<label>PCI PRI support</label>
				<help>PRI is the PCI Page Request Interface. It allows PCI devices that are
behind an IOMMU to recover from page faults.

If unsure, say N.</help>
			</entry>
			<entry name="PCI_PASID">
				<label>PCI PASID support</label>
				<help>Process Address Space Identifiers (PASIDs) can be used by PCI devices
to access more than one IO address space at the same time. To make
use of this feature an IOMMU is required which also supports PASIDs.
Select this option if you have such an IOMMU and want to compile the
driver for it into your kernel.

If unsure, say N.</help>
			</entry>
			<entry name="PCI_LABEL"/>
			<entry name="PCI_HYPERV">
				<label>Hyper-V PCI Frontend</label>
				<help>The PCI device frontend driver allows the kernel to import arbitrary
PCI devices from a PCI backend to support PCI driver domains.</help>
			</entry>
			<entry name="HOTPLUG_PCI">
				<label>Support for PCI Hotplug</label>
				<help>Say Y here if you have a motherboard with a PCI Hotplug controller.
This allows you to add and remove PCI cards while the machine is
powered up and running.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_COMPAQ">
				<label>Compaq PCI Hotplug driver</label>
				<help>Say Y here if you have a motherboard with a Compaq PCI Hotplug
controller.

To compile this driver as a module, choose M here: the
module will be called cpqphp.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_COMPAQ_NVRAM">
				<label>Save configuration into NVRAM on Compaq servers</label>
				<help>Say Y here if you have a Compaq server that has a PCI Hotplug
controller.  This will allow the PCI Hotplug driver to store the PCI
system configuration options in NVRAM.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_IBM">
				<label>IBM PCI Hotplug driver</label>
				<help>Say Y here if you have a motherboard with a IBM PCI Hotplug
controller.

To compile this driver as a module, choose M here: the
module will be called ibmphp.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_ACPI">
				<label>ACPI PCI Hotplug driver</label>
				<help>Say Y here if you have a system that supports PCI Hotplug using
ACPI.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_ACPI_IBM">
				<label>ACPI PCI Hotplug driver IBM extensions</label>
				<help>Say Y here if you have an IBM system that supports PCI Hotplug using
ACPI.

To compile this driver as a module, choose M here: the
module will be called acpiphp_ibm.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_CPCI">
				<label>CompactPCI Hotplug driver</label>
				<help>Say Y here if you have a CompactPCI system card with CompactPCI
hotswap support per the PICMG 2.1 specification.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_CPCI_ZT5550">
				<label>Ziatech ZT5550 CompactPCI Hotplug driver</label>
				<help>Say Y here if you have an Performance Technologies (formerly Intel,
formerly just Ziatech) Ziatech ZT5550 CompactPCI system card.

To compile this driver as a module, choose M here: the
module will be called cpcihp_zt5550.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_CPCI_GENERIC">
				<label>Generic port I/O CompactPCI Hotplug driver</label>
				<help>Say Y here if you have a CompactPCI system card that exposes the #ENUM
hotswap signal as a bit in a system register that can be read through
standard port I/O.

To compile this driver as a module, choose M here: the
module will be called cpcihp_generic.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_SHPC">
				<label>SHPC PCI Hotplug driver</label>
				<help>Say Y here if you have a motherboard with a SHPC PCI Hotplug
controller.

To compile this driver as a module, choose M here: the
module will be called shpchp.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_POWERNV">
				<label>PowerPC PowerNV PCI Hotplug driver</label>
				<help>Say Y here if you run PowerPC PowerNV platform that supports
PCI Hotplug

To compile this driver as a module, choose M here: the
module will be called pnv-php.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_RPA">
				<label>RPA PCI Hotplug driver</label>
				<help>Say Y here if you have a RPA system that supports PCI Hotplug.

To compile this driver as a module, choose M here: the
module will be called rpaphp.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_RPA_DLPAR">
				<label>RPA Dynamic Logical Partitioning for I/O slots</label>
				<help>Say Y here if your system supports Dynamic Logical Partitioning
for I/O slots.

To compile this driver as a module, choose M here: the
module will be called rpadlpar_io.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_SGI">
				<label>SGI PCI Hotplug Support</label>
				<help>Say Y here if you want to use the SGI Altix Hotplug
Driver for PCI devices.

When in doubt, say N.</help>
			</entry>
			<entry name="HOTPLUG_PCI_S390">
				<label>System z PCI Hotplug Support</label>
				<help>Say Y here if you want to use the System z PCI Hotplug
driver for PCI devices. Without this driver it is not
possible to access stand-by PCI functions nor to deconfigure
PCI functions.

When in doubt, say Y.</help>
			</entry>
			<container name="PCI_host_controller_drivers">
				<label>PCI host controller drivers</label>
				<entry name="PCI_DRA7XX">
					<label>TI DRA7xx PCIe controller</label>
					<help>Enables support for the PCIe controller in the DRA7xx SoC.  There
are two instances of PCIe controller in DRA7xx.  This controller can
act both as EP and RC.  This reuses the Designware core.</help>
				</entry>
				<entry name="PCI_MVEBU">
					<label>Marvell EBU PCIe controller</label>
				</entry>
				<entry name="PCI_AARDVARK">
					<label>Aardvark PCIe controller</label>
					<help>Add support for Aardvark 64bit PCIe Host Controller. This
controller is part of the South Bridge of the Marvel Armada
3700 SoC.</help>
				</entry>
				<entry name="PCIE_XILINX_NWL">
					<label>NWL PCIe Core</label>
					<help>Say 'Y' here if you want kernel support for Xilinx
NWL PCIe controller. The controller can act as Root Port
or End Point. The current option selection will only
support root port enabling.</help>
				</entry>
				<entry name="PCIE_DW_PLAT">
					<label>Platform bus based DesignWare PCIe Controller</label>
					<help>This selects the DesignWare PCIe controller support. Select this if
you have a PCIe controller on Platform bus.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
				</entry>
				<entry name="PCIE_DW"/>
				<entry name="PCI_EXYNOS">
					<label>Samsung Exynos PCIe controller</label>
				</entry>
				<entry name="PCI_IMX6">
					<label>Freescale i.MX6 PCIe controller</label>
				</entry>
				<entry name="PCI_TEGRA">
					<label>NVIDIA Tegra PCIe controller</label>
					<help>Say Y here if you want support for the PCIe host controller found
on NVIDIA Tegra SoCs.</help>
				</entry>
				<entry name="PCI_RCAR_GEN2">
					<label>Renesas R-Car Gen2 Internal PCI controller</label>
					<help>Say Y here if you want internal PCI support on R-Car Gen2 SoC.
There are 3 internal PCI controllers available with a single
built-in EHCI/OHCI host controller present on each one.</help>
				</entry>
				<entry name="PCIE_RCAR">
					<label>Renesas R-Car PCIe controller</label>
					<help>Say Y here if you want PCIe controller support on R-Car SoCs.</help>
				</entry>
				<entry name="PCI_HOST_COMMON"/>
				<entry name="PCI_HOST_GENERIC">
					<label>Generic PCI host controller</label>
					<help>Say Y here if you want to support a simple generic PCI host
controller, such as the one emulated by kvmtool.</help>
				</entry>
				<entry name="PCIE_SPEAR13XX">
					<label>STMicroelectronics SPEAr PCIe controller</label>
					<help>Say Y here if you want PCIe support on SPEAr13XX SoCs.</help>
				</entry>
				<entry name="PCI_KEYSTONE">
					<label>TI Keystone PCIe controller</label>
					<help>Say Y here if you want to enable PCI controller support on Keystone
SoCs. The PCI controller on Keystone is based on Designware hardware
and therefore the driver re-uses the Designware core functions to
implement the driver.</help>
				</entry>
				<entry name="PCIE_XILINX">
					<label>Xilinx AXI PCIe host bridge support</label>
					<help>Say 'Y' here if you want kernel to support the Xilinx AXI PCIe
Host Bridge driver.</help>
				</entry>
				<entry name="PCI_XGENE">
					<label>X-Gene PCIe controller</label>
					<help>Say Y here if you want internal PCI support on APM X-Gene SoC.
There are 5 internal PCIe ports available. Each port is GEN3 capable
and have varied lanes from x1 to x8.</help>
				</entry>
				<entry name="PCI_XGENE_MSI">
					<label>X-Gene v1 PCIe MSI feature</label>
					<help>Say Y here if you want PCIe MSI support for the APM X-Gene v1 SoC.
This MSI driver supports 5 PCIe ports on the APM X-Gene v1 SoC.</help>
				</entry>
				<entry name="PCI_LAYERSCAPE">
					<label>Freescale Layerscape PCIe controller</label>
					<help>Say Y here if you want PCIe controller support on Layerscape SoCs.</help>
				</entry>
				<entry name="PCI_VERSATILE">
					<label>ARM Versatile PB PCI controller</label>
				</entry>
				<entry name="PCIE_IPROC">
					<help>This enables the iProc PCIe core controller support for Broadcom's
iProc family of SoCs. An appropriate bus interface driver needs
to be enabled to select this.</help>
				</entry>
				<entry name="PCIE_IPROC_PLATFORM">
					<label>Broadcom iProc PCIe platform bus driver</label>
					<help>Say Y here if you want to use the Broadcom iProc PCIe controller
through the generic platform bus interface</help>
				</entry>
				<entry name="PCIE_IPROC_BCMA">
					<label>Broadcom iProc PCIe BCMA bus driver</label>
					<help>Say Y here if you want to use the Broadcom iProc PCIe controller
through the BCMA bus interface</help>
				</entry>
				<entry name="PCIE_IPROC_MSI">
					<label>Broadcom iProc PCIe MSI support</label>
					<help>Say Y here if you want to enable MSI support for Broadcom's iProc
PCIe controller</help>
				</entry>
				<entry name="PCIE_ALTERA">
					<label>Altera PCIe controller</label>
					<help>Say Y here if you want to enable PCIe controller support on Altera
FPGA.</help>
				</entry>
				<entry name="PCIE_ALTERA_MSI">
					<label>Altera PCIe MSI feature</label>
					<help>Say Y here if you want PCIe MSI support for the Altera FPGA.
This MSI driver supports Altera MSI to GIC controller IP.</help>
				</entry>
				<entry name="PCI_HISI">
					<label>HiSilicon Hip05 and Hip06 SoCs PCIe controllers</label>
					<help>Say Y here if you want PCIe controller support on HiSilicon
Hip05 and Hip06 SoCs</help>
				</entry>
				<entry name="PCIE_QCOM">
					<label>Qualcomm PCIe controller</label>
					<help>Say Y here to enable PCIe controller support on Qualcomm SoCs. The
PCIe controller uses the Designware core plus Qualcomm-specific
hardware wrappers.</help>
				</entry>
				<entry name="PCI_HOST_THUNDER_PEM">
					<label>Cavium Thunder PCIe controller to off-chip devices</label>
					<help>Say Y here if you want PCIe support for CN88XX Cavium Thunder SoCs.</help>
				</entry>
				<entry name="PCI_HOST_THUNDER_ECAM">
					<label>Cavium Thunder ECAM controller to on-chip devices on pass-1.x silicon</label>
					<help>Say Y here if you want ECAM support for CN88XX-Pass-1.x Cavium Thunder SoCs.</help>
				</entry>
				<entry name="PCIE_ARMADA_8K">
					<label>Marvell Armada-8K PCIe controller</label>
					<help>Say Y here if you want to enable PCIe controller support on
Armada-8K SoCs. The PCIe controller on Armada-8K is based on
Designware hardware and therefore the driver re-uses the
Designware core functions to implement the driver.</help>
				</entry>
				<entry name="PCIE_ARTPEC6">
					<label>Axis ARTPEC-6 PCIe controller</label>
					<help>Say Y here to enable PCIe controller support on Axis ARTPEC-6
SoCs.  This PCIe controller uses the DesignWare core.</help>
				</entry>
			</container>
			<entry name="ISA_BUS">
				<label>ISA-style bus support on modern systems&quot; if EXPERT</label>
				<help>Enables ISA-style drivers on modern systems. This is necessary to
support PC/104 devices on X86_64 platforms.

If unsure, say N.</help>
			</entry>
			<entry name="ISA_DMA_API">
				<label>ISA-style DMA support&quot; if (X86_64 &amp;&amp; EXPERT)</label>
				<help>Enables ISA-style DMA support for devices requiring such controllers.
If unsure, say Y.</help>
			</entry>
			<entry name="ISA">
				<label>ISA support</label>
				<help>Find out whether you have ISA slots on your motherboard.  ISA is the
name of a bus system, i.e. the way the CPU talks to the other stuff
inside your box.  Other bus systems are PCI, EISA, MicroChannel
(MCA) or VESA.  ISA is an older system, now being displaced by PCI;
newer boards don't support it.  If you have ISA, say Y, otherwise N.</help>
			</entry>
			<entry name="EISA">
				<label>EISA support</label>
				<help>The Extended Industry Standard Architecture (EISA) bus was
developed as an open alternative to the IBM MicroChannel bus.

The EISA bus provided some of the features of the IBM MicroChannel
bus while maintaining backward compatibility with cards made for
the older ISA bus.  The EISA bus saw limited use between 1988 and
1995 when it was made obsolete by the PCI bus.

Say Y here if you are building a kernel for an EISA-based machine.

Otherwise, say N.</help>
			</entry>
			<entry name="EISA_VLB_PRIMING">
				<label>Vesa Local Bus priming</label>
				<help>Activate this option if your system contains a Vesa Local
Bus (VLB) card that identify itself as an EISA card (such as
the Adaptec AHA-284x).

When in doubt, say N.</help>
			</entry>
			<entry name="EISA_PCI_EISA">
				<label>Generic PCI/EISA bridge</label>
				<help>Activate this option if your system contains a PCI to EISA
bridge. If your system have both PCI and EISA slots, you
certainly need this option.

When in doubt, say Y.</help>
			</entry>
			<entry name="EISA_VIRTUAL_ROOT">
				<label>EISA virtual root device</label>
				<help>Activate this option if your system only have EISA bus
(no PCI slots). The Alpha Jensen is an example of such
a system.

When in doubt, say Y.</help>
			</entry>
			<entry name="EISA_NAMES">
				<label>EISA device name database</label>
				<help>By default, the kernel contains a database of all known EISA
device names to make the information in sysfs comprehensible
to the user. This database increases size of the kernel
image by about 40KB, but it gets freed after the system
boots up, so it doesn't take up kernel memory. Anyway, if
you are building an installation floppy or kernel for an
embedded system where kernel image size really matters, you
can disable this feature and you'll get device ID instead of
names.

When in doubt, say Y.

</help>
			</entry>
			<entry name="SCx200">
				<label>NatSemi SCx200 support</label>
				<help>This provides basic support for National Semiconductor's
(now AMD's) Geode processors.  The driver probes for the
PCI-IDs of several on-chip devices, so its a good dependency
for other scx200_* drivers.

If compiled as a module, the driver is named scx200.</help>
			</entry>
			<entry name="SCx200HR_TIMER">
				<label>NatSemi SCx200 27MHz High-Resolution Timer Support</label>
				<help>This driver provides a clocksource built upon the on-chip
27MHz high-resolution timer.  Its also a workaround for
NSC Geode SC-1100's buggy TSC, which loses time when the
processor goes idle (as is done by the scheduler).  The
other workaround is idle=poll boot option.</help>
			</entry>
			<entry name="OLPC">
				<label>One Laptop Per Child support</label>
				<help>Add support for detecting the unique features of the OLPC
XO hardware.</help>
			</entry>
			<entry name="OLPC_XO1_PM">
				<label>OLPC XO-1 Power Management</label>
				<help>Add support for poweroff and suspend of the OLPC XO-1 laptop.</help>
			</entry>
			<entry name="OLPC_XO1_RTC">
				<label>OLPC XO-1 Real Time Clock</label>
				<help>Add support for the XO-1 real time clock, which can be used as a
programmable wakeup source.</help>
			</entry>
			<entry name="OLPC_XO1_SCI">
				<label>OLPC XO-1 SCI extras</label>
				<help>Add support for SCI-based features of the OLPC XO-1 laptop:
- EC-driven system wakeups
- Power button
- Ebook switch
- Lid switch
- AC adapter status updates
- Battery status updates</help>
			</entry>
			<entry name="OLPC_XO15_SCI">
				<label>OLPC XO-1.5 SCI extras</label>
				<help>Add support for SCI-based features of the OLPC XO-1.5 laptop:
- EC-driven system wakeups
- AC adapter status updates
- Battery status updates</help>
			</entry>
			<entry name="ALIX">
				<label>PCEngines ALIX System Support (LED setup)</label>
				<help>This option enables system support for the PCEngines ALIX.
At present this just sets up LEDs for GPIO control on
ALIX2/3/6 boards.  However, other system specific setup should
get added here.

Note: You must still enable the drivers for GPIO and LED support
(GPIO_CS5535 &amp; LEDS_GPIO) to actually use the LEDs

Note: You have to set alix.force=1 for boards with Award BIOS.</help>
			</entry>
			<entry name="NET5501">
				<label>Soekris Engineering net5501 System Support (LEDS, GPIO, etc)</label>
				<help>This option enables system support for the Soekris Engineering net5501.</help>
			</entry>
			<entry name="GEOS">
				<label>Traverse Technologies GEOS System Support (LEDS, GPIO, etc)</label>
				<help>This option enables system support for the Traverse Technologies GEOS.</help>
			</entry>
			<entry name="TS5500">
				<label>Technologic Systems TS-5500 platform support</label>
				<help>This option enables system support for the Technologic Systems TS-5500.</help>
			</entry>
			<entry name="AMD_NB"/>
			<entry name="PCCARD">
				<label>PCCard (PCMCIA/CardBus) support</label>
				<help>Say Y here if you want to attach PCMCIA- or PC-cards to your Linux
computer.  These are credit-card size devices such as network cards,
modems or hard drives often used with laptops computers.  There are
actually two varieties of these cards: 16 bit PCMCIA and 32 bit
CardBus cards.

To compile this driver as modules, choose M here: the
module will be called pcmcia_core.</help>
			</entry>
			<entry name="PCMCIA">
				<label>16-bit PCMCIA support</label>
				<help>This option enables support for 16-bit PCMCIA cards. Most older
PC-cards are such 16-bit PCMCIA cards, so unless you know you're
only using 32-bit CardBus cards, say Y or M here.

To use 16-bit PCMCIA cards, you will need supporting software in
most cases. (see the file &lt;file:Documentation/Changes&gt; for
location and details).

To compile this driver as modules, choose M here: the
module will be called pcmcia.

If unsure, say Y.</help>
			</entry>
			<entry name="PCMCIA_LOAD_CIS">
				<label>Load CIS updates from userspace</label>
				<help>Some PCMCIA cards require an updated Card Information Structure (CIS)
to be loaded from userspace to work correctly. If you say Y here,
and your userspace is arranged correctly, this will be loaded
automatically using the in-kernel firmware loader and the hotplug
subsystem, instead of relying on cardmgr from pcmcia-cs to do so.

If unsure, say Y.</help>
			</entry>
			<entry name="CARDBUS">
				<label>32-bit CardBus support</label>
				<help>CardBus is a bus mastering architecture for PC-cards, which allows
for 32 bit PC-cards (the original PCMCIA standard specifies only
a 16 bit wide bus). Many newer PC-cards are actually CardBus cards.

To use 32 bit PC-cards, you also need a CardBus compatible host
bridge. Virtually all modern PCMCIA bridges do this, and most of
them are &quot;yenta-compatible&quot;, so say Y or M there, too.

If unsure, say Y.</help>
			</entry>
			<entry name="YENTA">
				<label>CardBus yenta-compatible bridge support</label>
				<help>This option enables support for CardBus host bridges.  Virtually
all modern PCMCIA bridges are CardBus compatible.  A &quot;bridge&quot; is
the hardware inside your computer that PCMCIA cards are plugged
into.

To compile this driver as modules, choose M here: the
module will be called yenta_socket.

If unsure, say Y.</help>
			</entry>
			<entry name="YENTA_O2">
				<label>Special initialization for O2Micro bridges&quot; if EXPERT</label>
			</entry>
			<entry name="YENTA_RICOH">
				<label>Special initialization for Ricoh bridges&quot; if EXPERT</label>
			</entry>
			<entry name="YENTA_TI">
				<label>Special initialization for TI and EnE bridges&quot; if EXPERT</label>
			</entry>
			<entry name="YENTA_ENE_TUNE">
				<label>Auto-tune EnE bridges for CB cards&quot; if EXPERT</label>
			</entry>
			<entry name="YENTA_TOSHIBA">
				<label>Special initialization for Toshiba ToPIC bridges&quot; if EXPERT</label>
			</entry>
			<entry name="PD6729">
				<label>Cirrus PD6729 compatible bridge support</label>
				<help>This provides support for the Cirrus PD6729 PCI-to-PCMCIA bridge
device, found in some older laptops and PCMCIA card readers.</help>
			</entry>
			<entry name="I82092">
				<label>i82092 compatible bridge support</label>
				<help>This provides support for the Intel I82092AA PCI-to-PCMCIA bridge device,
found in some older laptops and more commonly in evaluation boards for the
chip.</help>
			</entry>
			<entry name="I82365">
				<label>i82365 compatible bridge support</label>
				<help>Say Y here to include support for ISA-bus PCMCIA host bridges that
are register compatible with the Intel i82365.  These are found on
older laptops and ISA-bus card readers for desktop systems.  A
&quot;bridge&quot; is the hardware inside your computer that PCMCIA cards are
plugged into. If unsure, say N.</help>
			</entry>
			<entry name="TCIC">
				<label>Databook TCIC host bridge support</label>
				<help>Say Y here to include support for the Databook TCIC family of PCMCIA
host bridges. These are only found on a handful of old systems.
&quot;Bridge&quot; is the name used for the hardware inside your computer that
PCMCIA cards are plugged into. If unsure, say N.</help>
			</entry>
			<entry name="PCMCIA_ALCHEMY_DEVBOARD">
				<label>Alchemy Db/Pb1xxx PCMCIA socket services</label>
				<help>Enable this driver of you want PCMCIA support on your Alchemy
Db1000, Db/Pb1100, Db/Pb1500, Db/Pb1550, Db/Pb1200, DB1300
board.  NOT suitable for the PB1000!

This driver is also available as a module called db1xxx_ss.ko</help>
			</entry>
			<entry name="PCMCIA_XXS1500">
				<label>MyCable XXS1500 PCMCIA socket support</label>
				<help>Support for the PCMCIA/CF socket interface on MyCable XXS1500
systems.

This driver is also available as a module called xxs1500_ss.ko</help>
			</entry>
			<entry name="PCMCIA_BCM63XX">
				<label>bcm63xx pcmcia support</label>
			</entry>
			<entry name="PCMCIA_SOC_COMMON"/>
			<entry name="PCMCIA_SA11XX_BASE"/>
			<entry name="PCMCIA_SA1100">
				<label>SA1100 support</label>
				<help>Say Y here to include support for SA11x0-based PCMCIA or CF
sockets, found on HP iPAQs, Yopy, and other StrongARM(R)/
Xscale(R) embedded machines.

This driver is also available as a module called sa1100_cs.</help>
			</entry>
			<entry name="PCMCIA_SA1111">
				<label>SA1111 support</label>
				<help>Say Y  here to include support for SA1111-based PCMCIA or CF
sockets, found on the Jornada 720, Graphicsmaster and other
StrongARM(R)/Xscale(R) embedded machines.

This driver is also available as a module called sa1111_cs.</help>
			</entry>
			<entry name="PCMCIA_PXA2XX">
				<label>PXA2xx support</label>
				<help>Say Y here to include support for the PXA2xx PCMCIA controller</help>
			</entry>
			<entry name="PCMCIA_DEBUG">
				<label>Enable debugging</label>
				<help>Say Y here to enable debugging for the SoC PCMCIA layer.
You will need to choose the debugging level either via the
kernel command line, or module options depending whether
you build the drivers as modules.

The kernel command line options are:
sa11xx_core.pc_debug=N
pxa2xx_core.pc_debug=N

The module option is called pc_debug=N

In all the above examples, N is the debugging verbosity
level.</help>
			</entry>
			<entry name="PCMCIA_PROBE"/>
			<entry name="M32R_PCC">
				<label>M32R PCMCIA I/F</label>
				<help>Say Y here to use the M32R PCMCIA controller.</help>
			</entry>
			<entry name="M32R_CFC">
				<label>M32R CF I/F Controller</label>
				<help>Say Y here to use the M32R CompactFlash controller.</help>
			</entry>
			<entry name="M32R_CFC_NUM">
				<label>M32R CF I/F number</label>
				<help>Set the number of M32R CF slots.</help>
			</entry>
			<entry name="PCMCIA_VRC4171">
				<label>NEC VRC4171 Card Controllers support</label>
			</entry>
			<entry name="PCMCIA_VRC4173">
				<label>NEC VRC4173 CARDU support</label>
			</entry>
			<entry name="OMAP_CF">
				<label>OMAP CompactFlash Controller</label>
				<help>Say Y here to support the CompactFlash controller on OMAP.
Note that this doesn't support &quot;True IDE&quot; mode.</help>
			</entry>
			<entry name="BFIN_CFPCMCIA">
				<label>Blackfin CompactFlash PCMCIA Driver</label>
				<help>Say Y here to support the CompactFlash PCMCIA driver for Blackfin.</help>
			</entry>
			<entry name="AT91_CF">
				<label>AT91 CompactFlash Controller</label>
				<help>Say Y here to support the CompactFlash controller on AT91 chips.
Or choose M to compile the driver as a module named &quot;at91_cf&quot;.</help>
			</entry>
			<entry name="ELECTRA_CF">
				<label>Electra CompactFlash Controller</label>
				<help>Say Y here to support the CompactFlash controller on the
PA Semi Electra eval board.</help>
			</entry>
			<entry name="PCCARD_NONSTATIC"/>
			<entry name="PCCARD_IODYN"/>
			<entry name="RAPIDIO">
				<label>RapidIO support</label>
				<help>If enabled this option will include drivers and the core
infrastructure code to support RapidIO interconnect devices.</help>
			</entry>
			<entry name="RAPIDIO_TSI721">
				<label>IDT Tsi721 PCI Express SRIO Controller support</label>
				<help>Include support for IDT Tsi721 PCI Express Serial RapidIO controller.
</help>
			</entry>
			<entry name="RAPIDIO_DISC_TIMEOUT">
				<label>Discovery timeout duration (seconds)</label>
				<help>Amount of time a discovery node waits for a host to complete
enumeration before giving up.</help>
			</entry>
			<entry name="RAPIDIO_ENABLE_RX_TX_PORTS">
				<label>Enable RapidIO Input/Output Ports</label>
				<help>The RapidIO specification describes a Output port transmit
enable and a Input port receive enable. The recommended state
for Input ports and Output ports should be disabled. When
this switch is set the RapidIO subsystem will enable all
ports for Input/Output direction to allow other traffic
than Maintenance transfers.</help>
			</entry>
			<entry name="RAPIDIO_DMA_ENGINE">
				<label>DMA Engine support for RapidIO</label>
				<help>Say Y here if you want to use DMA Engine frameork for RapidIO data
transfers to/from target RIO devices. RapidIO uses NREAD and
NWRITE (NWRITE_R, SWRITE) requests to transfer data between local
memory and memory on remote target device. You need a DMA controller
capable to perform data transfers to/from RapidIO.

If you are unsure about this, say Y here.</help>
			</entry>
			<entry name="RAPIDIO_DEBUG">
				<label>RapidIO subsystem debug messages</label>
				<help>Say Y here if you want the RapidIO subsystem to produce a bunch of
debug messages to the system log. Select this if you are having a
problem with the RapidIO subsystem and want to see more of what is
going on.

If you are unsure about this, say N here.</help>
			</entry>
			<entry name="RAPIDIO_ENUM_BASIC">
				<label>Basic</label>
				<help>This option includes basic RapidIO fabric enumeration and discovery
mechanism similar to one described in RapidIO specification Annex 1.</help>
			</entry>
			<entry name="RAPIDIO_CHMAN">
				<label>RapidIO Channelized Messaging driver</label>
				<help>This option includes RapidIO channelized messaging driver which
provides socket-like interface to allow sharing of single RapidIO
messaging mailbox between multiple user-space applications.
See &quot;Documentation/rapidio/rio_cm.txt&quot; for driver description.</help>
			</entry>
			<entry name="RAPIDIO_MPORT_CDEV">
				<label>RapidIO /dev mport device driver</label>
				<help>This option includes generic RapidIO mport device driver which
allows to user space applications to perform RapidIO-specific
operations through selected RapidIO mport.</help>
			</entry>
			<container name="RapidIO_Switch_drivers">
				<label>RapidIO Switch drivers</label>
				<entry name="RAPIDIO_TSI57X">
					<label>IDT Tsi57x SRIO switches support</label>
					<help>Includes support for IDT Tsi57x family of serial RapidIO switches.</help>
				</entry>
				<entry name="RAPIDIO_CPS_XX">
					<label>IDT CPS-xx SRIO switches support</label>
					<help>Includes support for IDT CPS-16/12/10/8 serial RapidIO switches.</help>
				</entry>
				<entry name="RAPIDIO_TSI568">
					<label>Tsi568 SRIO switch support</label>
					<help>Includes support for IDT Tsi568 serial RapidIO switch.</help>
				</entry>
				<entry name="RAPIDIO_CPS_GEN2">
					<label>IDT CPS Gen.2 SRIO switch support</label>
					<help>Includes support for ITD CPS Gen.2 serial RapidIO switches.</help>
				</entry>
				<entry name="RAPIDIO_RXS_GEN3">
					<label>IDT RXS Gen.3 SRIO switch support</label>
					<help>Includes support for ITD RXS Gen.3 serial RapidIO switches.
</help>
				</entry>
			</container>
			<entry name="X86_SYSFB">
				<label>Mark VGA/VBE/EFI FB as generic system framebuffer</label>
				<help>Firmwares often provide initial graphics framebuffers so the BIOS,
bootloader or kernel can show basic video-output during boot for
user-guidance and debugging. Historically, x86 used the VESA BIOS
Extensions and EFI-framebuffers for this, which are mostly limited
to x86.
This option, if enabled, marks VGA/VBE/EFI framebuffers as generic
framebuffers so the new generic system-framebuffer drivers can be
used on x86. If the framebuffer is not compatible with the generic
modes, it is adverticed as fallback platform framebuffer so legacy
drivers like efifb, vesafb and uvesafb can pick it up.
If this option is not selected, all system framebuffers are always
marked as fallback platform framebuffers as usual.

Note: Legacy fbdev drivers, including vesafb, efifb, uvesafb, will
not be able to pick up generic system framebuffers if this option
is selected. You are highly encouraged to enable simplefb as
replacement if you select this option. simplefb can correctly deal
with generic system framebuffers. But you should still keep vesafb
and others enabled as fallback if a system framebuffer is
incompatible with simplefb.

If unsure, say Y.</help>
			</entry>
		</container>
		<container name="Executable_file_formats_Emulations">
			<label>Executable file formats / Emulations</label>
			<entry name="BINFMT_ELF">
				<label>Kernel support for ELF binaries</label>
				<help>ELF (Executable and Linkable Format) is a format for libraries and
executables used across different architectures and operating
systems. Saying Y here will enable your kernel to run ELF binaries
and enlarge it by about 13 KB. ELF support under Linux has now all
but replaced the traditional Linux a.out formats (QMAGIC and ZMAGIC)
because it is portable (this does *not* mean that you will be able
to run executables from different architectures or operating systems
however) and makes building run-time libraries very easy. Many new
executables are distributed solely in ELF format. You definitely
want to say Y here.

Information about ELF is contained in the ELF HOWTO available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

If you find that after upgrading from Linux kernel 1.2 and saying Y
here, you still can't run any ELF binaries (they just crash), then
you'll have to install the newest ELF runtime libraries, including
ld.so (check the file &lt;file:Documentation/Changes&gt; for location and
latest version).</help>
			</entry>
			<entry name="COMPAT_BINFMT_ELF"/>
			<entry name="ARCH_BINFMT_ELF_STATE"/>
			<entry name="BINFMT_ELF_FDPIC">
				<label>Kernel support for FDPIC ELF binaries</label>
				<help>ELF FDPIC binaries are based on ELF, but allow the individual load
segments of a binary to be located in memory independently of each
other. This makes this format ideal for use in environments where no
MMU is available as it still permits text segments to be shared,
even if data segments are not.

It is also possible to run FDPIC ELF binaries on MMU linux also.</help>
			</entry>
			<entry name="ELFCORE">
				<help>This option enables kernel/elfcore.o.</help>
			</entry>
			<entry name="CORE_DUMP_DEFAULT_ELF_HEADERS">
				<label>Write ELF core dumps with partial segments</label>
				<help>ELF core dump files describe each memory mapping of the crashed
process, and can contain or omit the memory contents of each one.
The contents of an unmodified text mapping are omitted by default.

For an unmodified text mapping of an ELF object, including just
the first page of the file in a core dump makes it possible to
identify the build ID bits in the file, without paying the i/o
cost and disk space to dump all the text.  However, versions of
GDB before 6.7 are confused by ELF core dump files in this format.

The core dump behavior can be controlled per process using
the /proc/PID/coredump_filter pseudo-file; this setting is
inherited.  See Documentation/filesystems/proc.txt for details.

This config option changes the default setting of coredump_filter
seen at boot time.  If unsure, say Y.</help>
			</entry>
			<entry name="BINFMT_SCRIPT">
				<label>Kernel support for scripts starting with</label>
				<help>Say Y here if you want to execute interpreted scripts starting with
#! followed by the path to an interpreter.

You can build this support as a module; however, until that module
gets loaded, you cannot run scripts.  Thus, if you want to load this
module from an initramfs, the portion of the initramfs before loading
this module must consist of compiled binaries only.

Most systems will not boot if you say M or N here.  If unsure, say Y.</help>
			</entry>
			<entry name="BINFMT_FLAT">
				<label>Kernel support for flat binaries</label>
				<help>Support uClinux FLAT format binaries.</help>
			</entry>
			<entry name="BINFMT_ZFLAT">
				<label>Enable ZFLAT support</label>
				<help>Support FLAT format compressed binaries</help>
			</entry>
			<entry name="BINFMT_SHARED_FLAT">
				<label>Enable shared FLAT support</label>
				<help>Support FLAT shared libraries</help>
			</entry>
			<entry name="HAVE_AOUT"/>
			<entry name="BINFMT_AOUT">
				<label>Kernel support for a.out and ECOFF binaries</label>
				<help>A.out (Assembler.OUTput) is a set of formats for libraries and
executables used in the earliest versions of UNIX.  Linux used
the a.out formats QMAGIC and ZMAGIC until they were replaced
with the ELF format.

The conversion to ELF started in 1995.  This option is primarily
provided for historical interest and for the benefit of those
who need to run binaries from that era.

Most people should answer N here.  If you think you may have
occasional use for this format, enable module support above
and answer M here to compile this support as a module called
binfmt_aout.

If any crucial components of your system (such as /sbin/init
or /lib/ld.so) are still in a.out format, you will have to
say Y here.</help>
			</entry>
			<entry name="OSF4_COMPAT">
				<label>OSF/1 v4 readv/writev compatibility</label>
				<help>Say Y if you are using OSF/1 binaries (like Netscape and Acrobat)
with v4 shared libraries freely available from Compaq. If you're
going to use shared libraries from Tru64 version 5.0 or later, say N.</help>
			</entry>
			<entry name="BINFMT_EM86">
				<label>Kernel support for Linux/Intel ELF binaries</label>
				<help>Say Y here if you want to be able to execute Linux/Intel ELF
binaries just like native Alpha binaries on your Alpha machine. For
this to work, you need to have the emulator /usr/bin/em86 in place.

You can get the same functionality by saying N here and saying Y to
&quot;Kernel support for MISC binaries&quot;.

You may answer M to compile the emulation support as a module and
later load the module when you want to use a Linux/Intel binary. The
module will be called binfmt_em86. If unsure, say Y.</help>
			</entry>
			<entry name="BINFMT_MISC">
				<label>Kernel support for MISC binaries</label>
				<help>If you say Y here, it will be possible to plug wrapper-driven binary
formats into the kernel. You will like this especially when you use
programs that need an interpreter to run like Java, Python, .NET or
Emacs-Lisp. It's also useful if you often run DOS executables under
the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;). Once you have
registered such a binary class with the kernel, you can start one of
those programs simply by typing in its name at a shell prompt; Linux
will automatically feed it to the correct interpreter.

You can do other nice things, too. Read the file
&lt;file:Documentation/binfmt_misc.txt&gt; to learn how to use this
feature, &lt;file:Documentation/java.txt&gt; for information about how
to include Java support. and &lt;file:Documentation/mono.txt&gt; for
information about how to include Mono-based .NET support.

To use binfmt_misc, you will need to mount it:
mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc

You may say M here for module support and later load the module when
you have use for it; the module is called binfmt_misc. If you
don't know what to answer at this point, say Y.</help>
			</entry>
			<entry name="COREDUMP">
				<label>Enable core dump support&quot; if EXPERT</label>
				<help>This option enables support for performing core dumps. You almost
certainly want to say Y here. Not necessary on systems that never
need debugging or only ever run flawless code.
</help>
			</entry>
			<entry name="IA32_EMULATION">
				<label>IA32 Emulation</label>
				<help>Include code to run legacy 32-bit programs under a
64-bit kernel. You should likely turn this on, unless you're
100% sure that you don't have any 32-bit programs left.</help>
			</entry>
			<entry name="IA32_AOUT">
				<label>IA32 a.out support</label>
				<help>Support old a.out binaries in the 32bit emulation.</help>
			</entry>
			<entry name="X86_X32">
				<label>x32 ABI for 64-bit mode</label>
				<help>Include code to run binaries for the x32 native 32-bit ABI
for 64-bit processors.  An x32 process gets access to the
full 64-bit register file and wide data path while leaving
pointers at 32 bits for smaller memory footprint.

You will need a recent binutils (2.22 or later) with
elf32_x86_64 support enabled to compile a kernel with this
option set.</help>
			</entry>
			<entry name="COMPAT"/>
			<entry name="COMPAT_FOR_U64_ALIGNMENT"/>
			<entry name="SYSVIPC_COMPAT"/>
			<entry name="KEYS_COMPAT"/>
		</container>
		<entry name="HAVE_ATOMIC_IOMAP"/>
		<entry name="X86_DEV_DMA_OPS"/>
		<entry name="X86_DMA_REMAP"/>
		<entry name="PMC_ATOM"/>
		<entry name="VMD">
			<label>Volume Management Device Driver</label>
			<help>Adds support for the Intel Volume Management Device (VMD). VMD is a
secondary PCI host bridge that allows PCI Express root ports,
and devices attached to them, to be removed from the default
PCI domain and placed within the VMD domain. This provides
more bus resources than are otherwise possible with a
single domain. If you know your system provides one of these and
has devices attached to it, say Y; if you are not sure, say N.</help>
		</entry>
		<entry name="NET">
			<label>Networking support</label>
			<help>Unless you really know what you are doing, you should say Y here.
The reason is that some programs need kernel networking support even
when running on a stand-alone machine that isn't connected to any
other computer.

If you are upgrading from an older kernel, you
should consider updating your networking tools too because changes
in the kernel and the tools often go hand in hand. The tools are
contained in the package net-tools, the location and version number
of which are given in &lt;file:Documentation/Changes&gt;.

For a general introduction to Linux networking, it is highly
recommended to read the NET-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.</help>
		</entry>
		<entry name="WANT_COMPAT_NETLINK_MESSAGES">
			<help>This option can be selected by other options that need compat
netlink messages.</help>
		</entry>
		<entry name="COMPAT_NETLINK_MESSAGES">
			<help>This option makes it possible to send different netlink messages
to tasks depending on whether the task is a compat task or not. To
achieve this, you need to set skb_shinfo(skb)-&gt;frag_list to the
compat skb before sending the skb, the netlink code will sort out
which message to actually pass to the task.

Newly written code should NEVER need this option but do
compat-independent messages instead!</help>
		</entry>
		<entry name="NET_INGRESS"/>
		<entry name="NET_EGRESS"/>
		<container name="Networking_options">
			<label>Networking options</label>
			<entry name="PACKET">
				<label>Packet socket</label>
				<help>The Packet protocol is used by applications which communicate
directly with network devices without an intermediate network
protocol implemented in the kernel, e.g. tcpdump.  If you want them
to work, choose Y.

To compile this driver as a module, choose M here: the module will
be called af_packet.

If unsure, say Y.</help>
			</entry>
			<entry name="PACKET_DIAG">
				<label>Packet: sockets monitoring interface</label>
				<help>Support for PF_PACKET sockets monitoring interface used by the ss tool.
If unsure, say Y.
</help>
			</entry>
			<entry name="UNIX">
				<label>Unix domain sockets</label>
				<help>If you say Y here, you will include support for Unix domain sockets;
sockets are the standard Unix mechanism for establishing and
accessing network connections.  Many commonly used programs such as
the X Window system and syslog use these sockets even if your
machine is not connected to any network.  Unless you are working on
an embedded system or something similar, you therefore definitely
want to say Y here.

To compile this driver as a module, choose M here: the module will be
called unix.  Note that several important services won't work
correctly if you say M here and then neglect to load the module.

Say Y unless you know what you are doing.</help>
			</entry>
			<entry name="UNIX_DIAG">
				<label>UNIX: socket monitoring interface</label>
				<help>Support for UNIX socket monitoring interface used by the ss tool.
If unsure, say Y.
</help>
			</entry>
			<entry name="XFRM"/>
			<entry name="XFRM_ALGO"/>
			<entry name="XFRM_USER">
				<label>Transformation user configuration interface</label>
				<help>Support for Transformation(XFRM) user configuration interface
like IPsec used by native Linux tools.

If unsure, say Y.</help>
			</entry>
			<entry name="XFRM_SUB_POLICY">
				<label>Transformation sub policy support</label>
				<help>Support sub policy for developers. By using sub policy with main
one, two policies can be applied to the same packet at once.
Policy which lives shorter time in kernel should be a sub.

If unsure, say N.</help>
			</entry>
			<entry name="XFRM_MIGRATE">
				<label>Transformation migrate database</label>
				<help>A feature to update locator(s) of a given IPsec security
association dynamically.  This feature is required, for
instance, in a Mobile IPv6 environment with IPsec configuration
where mobile nodes change their attachment point to the Internet.

If unsure, say N.</help>
			</entry>
			<entry name="XFRM_STATISTICS">
				<label>Transformation statistics</label>
				<help>This statistics is not a SNMP/MIB specification but shows
statistics about transformation error (or almost error) factor
at packet processing for developer.

If unsure, say N.</help>
			</entry>
			<entry name="XFRM_IPCOMP"/>
			<entry name="NET_KEY">
				<label>PF_KEY sockets</label>
				<help>PF_KEYv2 socket family, compatible to KAME ones.
They are required if you are going to use IPsec tools ported
from KAME.

Say Y unless you know what you are doing.</help>
			</entry>
			<entry name="NET_KEY_MIGRATE">
				<label>PF_KEY MIGRATE</label>
				<help>Add a PF_KEY MIGRATE message to PF_KEYv2 socket family.
The PF_KEY MIGRATE message is used to dynamically update
locator(s) of a given IPsec security association.
This feature is required, for instance, in a Mobile IPv6
environment with IPsec configuration where mobile nodes
change their attachment point to the Internet.  Detail
information can be found in the internet-draft
&lt;draft-sugimoto-mip6-pfkey-migrate&gt;.

If unsure, say N.

</help>
			</entry>
			<entry name="IUCV">
				<label>IUCV support (S390 - z/VM only)</label>
				<help>Select this option if you want to use inter-user communication
under VM or VIF. If you run on z/VM, say &quot;Y&quot; to enable a fast
communication link between VM guests.</help>
			</entry>
			<entry name="AFIUCV">
				<label>AF_IUCV Socket support (S390 - z/VM and HiperSockets transport)</label>
				<help>Select this option if you want to use AF_IUCV socket applications
based on z/VM inter-user communication vehicle or based on
HiperSockets.
</help>
			</entry>
			<entry name="INET">
				<label>TCP/IP networking</label>
				<help>These are the protocols used on the Internet and on most local
Ethernets. It is highly recommended to say Y here (this will enlarge
your kernel by about 400 KB), since some programs (e.g. the X window
system) use TCP/IP even if your machine is not connected to any
other computer. You will get the so-called loopback device which
allows you to ping yourself (great fun, that!).

For an excellent introduction to Linux networking, please read the
Linux Networking HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

If you say Y here and also to &quot;/proc file system support&quot; and
&quot;Sysctl support&quot; below, you can change various aspects of the
behavior of the TCP/IP code by writing to the (virtual) files in
/proc/sys/net/ipv4/*; the options are explained in the file
&lt;file:Documentation/networking/ip-sysctl.txt&gt;.

Short answer: say Y.</help>
			</entry>
			<entry name="IP_MULTICAST">
				<label>IP: multicasting</label>
				<help>This is code for addressing several networked computers at once,
enlarging your kernel by about 2 KB. You need multicasting if you
intend to participate in the MBONE, a high bandwidth network on top
of the Internet which carries audio and video broadcasts. More
information about the MBONE is on the WWW at
&lt;http://www.savetz.com/mbone/&gt;. For most people, it's safe to say N.</help>
			</entry>
			<entry name="IP_ADVANCED_ROUTER">
				<label>IP: advanced router</label>
				<help>If you intend to run your Linux box mostly as a router, i.e. as a
computer that forwards and redistributes network packets, say Y; you
will then be presented with several options that allow more precise
control about the routing process.

The answer to this question won't directly affect the kernel:
answering N will just cause the configurator to skip all the
questions about advanced routing.

Note that your box can only act as a router if you enable IP
forwarding in your kernel; you can do that by saying Y to &quot;/proc
file system support&quot; and &quot;Sysctl support&quot; below and executing the
line

echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward

at boot time after the /proc file system has been mounted.

If you turn on IP forwarding, you should consider the rp_filter, which
automatically rejects incoming packets if the routing table entry
for their source address doesn't match the network interface they're
arriving on. This has security advantages because it prevents the
so-called IP spoofing, however it can pose problems if you use
asymmetric routing (packets from you to a host take a different path
than packets from that host to you) or if you operate a non-routing
host which has several IP addresses on different interfaces. To turn
rp_filter on use:

echo 1 &gt; /proc/sys/net/ipv4/conf/&lt;device&gt;/rp_filter
or
echo 1 &gt; /proc/sys/net/ipv4/conf/all/rp_filter

Note that some distributions enable it in startup scripts.
For details about rp_filter strict and loose mode read
&lt;file:Documentation/networking/ip-sysctl.txt&gt;.

If unsure, say N here.</help>
			</entry>
			<entry name="IP_FIB_TRIE_STATS">
				<label>FIB TRIE statistics</label>
				<help>Keep track of statistics on structure of FIB TRIE table.
Useful for testing and measuring TRIE performance.</help>
			</entry>
			<entry name="IP_MULTIPLE_TABLES">
				<label>IP: policy routing</label>
				<help>Normally, a router decides what to do with a received packet based
solely on the packet's final destination address. If you say Y here,
the Linux router will also be able to take the packet's source
address into account. Furthermore, the TOS (Type-Of-Service) field
of the packet can be used for routing decisions as well.

If you are interested in this, please see the preliminary
documentation at &lt;http://www.compendium.com.ar/policy-routing.txt&gt;
and &lt;ftp://post.tepkom.ru/pub/vol2/Linux/docs/advanced-routing.tex&gt;.
You will need supporting software from
&lt;ftp://ftp.tux.org/pub/net/ip-routing/&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="IP_ROUTE_MULTIPATH">
				<label>IP: equal cost multipath</label>
				<help>Normally, the routing tables specify a single action to be taken in
a deterministic manner for a given packet. If you say Y here
however, it becomes possible to attach several actions to a packet
pattern, in effect specifying several alternative paths to travel
for those packets. The router considers all these paths to be of
equal &quot;cost&quot; and chooses one of them in a non-deterministic fashion
if a matching packet arrives.</help>
			</entry>
			<entry name="IP_ROUTE_VERBOSE">
				<label>IP: verbose route monitoring</label>
				<help>If you say Y here, which is recommended, then the kernel will print
verbose messages regarding the routing, for example warnings about
received packets which look strange and could be evidence of an
attack or a misconfigured system somewhere. The information is
handled by the klogd daemon which is responsible for kernel messages
(&quot;man klogd&quot;).</help>
			</entry>
			<entry name="IP_ROUTE_CLASSID"/>
			<entry name="IP_PNP">
				<label>IP: kernel level autoconfiguration</label>
				<help>This enables automatic configuration of IP addresses of devices and
of the routing table during kernel boot, based on either information
supplied on the kernel command line or by BOOTP or RARP protocols.
You need to say Y only for diskless machines requiring network
access to boot (in which case you want to say Y to &quot;Root file system
on NFS&quot; as well), because all other machines configure the network
in their startup scripts.</help>
			</entry>
			<entry name="IP_PNP_DHCP">
				<label>IP: DHCP support</label>
				<help>If you want your Linux box to mount its whole root file system (the
one containing the directory /) from some other computer over the
net via NFS and you want the IP address of your computer to be
discovered automatically at boot time using the DHCP protocol (a
special protocol designed for doing this job), say Y here. In case
the boot ROM of your network card was designed for booting Linux and
does DHCP itself, providing all necessary information on the kernel
command line, you can say N here.

If unsure, say Y. Note that if you want to use DHCP, a DHCP server
must be operating on your network.  Read
&lt;file:Documentation/filesystems/nfs/nfsroot.txt&gt; for details.</help>
			</entry>
			<entry name="IP_PNP_BOOTP">
				<label>IP: BOOTP support</label>
				<help>If you want your Linux box to mount its whole root file system (the
one containing the directory /) from some other computer over the
net via NFS and you want the IP address of your computer to be
discovered automatically at boot time using the BOOTP protocol (a
special protocol designed for doing this job), say Y here. In case
the boot ROM of your network card was designed for booting Linux and
does BOOTP itself, providing all necessary information on the kernel
command line, you can say N here. If unsure, say Y. Note that if you
want to use BOOTP, a BOOTP server must be operating on your network.
Read &lt;file:Documentation/filesystems/nfs/nfsroot.txt&gt; for details.</help>
			</entry>
			<entry name="IP_PNP_RARP">
				<label>IP: RARP support</label>
				<help>If you want your Linux box to mount its whole root file system (the
one containing the directory /) from some other computer over the
net via NFS and you want the IP address of your computer to be
discovered automatically at boot time using the RARP protocol (an
older protocol which is being obsoleted by BOOTP and DHCP), say Y
here. Note that if you want to use RARP, a RARP server must be
operating on your network. Read
&lt;file:Documentation/filesystems/nfs/nfsroot.txt&gt; for details.</help>
			</entry>
			<entry name="NET_IPIP">
				<label>IP: tunneling</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This particular tunneling driver implements
encapsulation of IP within IP, which sounds kind of pointless, but
can be useful if you want to make your (or some other) machine
appear on a different network than it physically is, or to use
mobile-IP facilities (allowing laptops to seamlessly move between
networks without changing their IP addresses).

Saying Y to this option will produce two modules ( = code which can
be inserted in and removed from the running kernel whenever you
want). Most people won't need this and can say N.</help>
			</entry>
			<entry name="NET_IPGRE_DEMUX">
				<label>IP: GRE demultiplexer</label>
				<help>This is helper module to demultiplex GRE packets on GRE version field criteria.
Required by ip_gre and pptp modules.</help>
			</entry>
			<entry name="NET_IP_TUNNEL"/>
			<entry name="NET_IPGRE">
				<label>IP: GRE tunnels over IP</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This particular tunneling driver implements
GRE (Generic Routing Encapsulation) and at this time allows
encapsulating of IPv4 or IPv6 over existing IPv4 infrastructure.
This driver is useful if the other endpoint is a Cisco router: Cisco
likes GRE much better than the other Linux tunneling driver (&quot;IP
tunneling&quot; above). In addition, GRE allows multicast redistribution
through the tunnel.</help>
			</entry>
			<entry name="NET_IPGRE_BROADCAST">
				<label>IP: broadcast GRE over IP</label>
				<help>One application of GRE/IP is to construct a broadcast WAN (Wide Area
Network), which looks like a normal Ethernet LAN (Local Area
Network), but can be distributed all over the Internet. If you want
to do that, say Y here and to &quot;IP multicast routing&quot; below.</help>
			</entry>
			<entry name="IP_MROUTE">
				<label>IP: multicast routing</label>
				<help>This is used if you want your machine to act as a router for IP
packets that have several destination addresses. It is needed on the
MBONE, a high bandwidth network on top of the Internet which carries
audio and video broadcasts. In order to do that, you would most
likely run the program mrouted. If you haven't heard about it, you
don't need it.</help>
			</entry>
			<entry name="IP_MROUTE_MULTIPLE_TABLES">
				<label>IP: multicast policy routing</label>
				<help>Normally, a multicast router runs a userspace daemon and decides
what to do with a multicast packet based on the source and
destination addresses. If you say Y here, the multicast router
will also be able to take interfaces and packet marks into
account and run multiple instances of userspace daemons
simultaneously, each one handling a single table.

If unsure, say N.</help>
			</entry>
			<entry name="IP_PIMSM_V1">
				<label>IP: PIM-SM version 1 support</label>
				<help>Kernel side support for Sparse Mode PIM (Protocol Independent
Multicast) version 1. This multicast routing protocol is used widely
because Cisco supports it. You need special software to use it
(pimd-v1). Please see &lt;http://netweb.usc.edu/pim/&gt; for more
information about PIM.

Say Y if you want to use PIM-SM v1. Note that you can say N here if
you just want to use Dense Mode PIM.</help>
			</entry>
			<entry name="IP_PIMSM_V2">
				<label>IP: PIM-SM version 2 support</label>
				<help>Kernel side support for Sparse Mode PIM version 2. In order to use
this, you need an experimental routing daemon supporting it (pimd or
gated-5). This routing protocol is not used widely, so say N unless
you want to play with it.</help>
			</entry>
			<entry name="SYN_COOKIES">
				<label>IP: TCP syncookie support</label>
				<help>Normal TCP/IP networking is open to an attack known as &quot;SYN
flooding&quot;. This denial-of-service attack prevents legitimate remote
users from being able to connect to your computer during an ongoing
attack and requires very little work from the attacker, who can
operate from anywhere on the Internet.

SYN cookies provide protection against this type of attack. If you
say Y here, the TCP/IP stack will use a cryptographic challenge
protocol known as &quot;SYN cookies&quot; to enable legitimate users to
continue to connect, even when your machine is under attack. There
is no need for the legitimate users to change their TCP/IP software;
SYN cookies work transparently to them. For technical information
about SYN cookies, check out &lt;http://cr.yp.to/syncookies.html&gt;.

If you are SYN flooded, the source address reported by the kernel is
likely to have been forged by the attacker; it is only reported as
an aid in tracing the packets to their actual source and should not
be taken as absolute truth.

SYN cookies may prevent correct error reporting on clients when the
server is really overloaded. If this happens frequently better turn
them off.

If you say Y here, you can disable SYN cookies at run time by
saying Y to &quot;/proc file system support&quot; and
&quot;Sysctl support&quot; below and executing the command

echo 0 &gt; /proc/sys/net/ipv4/tcp_syncookies

after the /proc file system has been mounted.

If unsure, say N.</help>
			</entry>
			<entry name="NET_IPVTI">
				<label>Virtual (secure) IP: tunneling</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This can be used with xfrm mode tunnel to give
the notion of a secure tunnel for IPSEC and then use routing protocol
on top.</help>
			</entry>
			<entry name="NET_UDP_TUNNEL"/>
			<entry name="NET_FOU">
				<label>IP: Foo (IP protocols) over UDP</label>
				<help>Foo over UDP allows any IP protocol to be directly encapsulated
over UDP include tunnels (IPIP, GRE, SIT). By encapsulating in UDP
network mechanisms and optimizations for UDP (such as ECMP
and RSS) can be leveraged to provide better service.</help>
			</entry>
			<entry name="NET_FOU_IP_TUNNELS">
				<label>IP: FOU encapsulation of IP tunnels</label>
				<help>Allow configuration of FOU or GUE encapsulation for IP tunnels.
When this option is enabled IP tunnels can be configured to use
FOU or GUE encapsulation.</help>
			</entry>
			<entry name="INET_AH">
				<label>IP: AH transformation</label>
				<help>Support for IPsec AH.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_ESP">
				<label>IP: ESP transformation</label>
				<help>Support for IPsec ESP.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_IPCOMP">
				<label>IP: IPComp transformation</label>
				<help>Support for IP Payload Compression Protocol (IPComp) (RFC3173),
typically needed for IPsec.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_XFRM_TUNNEL"/>
			<entry name="INET_TUNNEL"/>
			<entry name="INET_XFRM_MODE_TRANSPORT">
				<label>IP: IPsec transport mode</label>
				<help>Support for IPsec transport mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_XFRM_MODE_TUNNEL">
				<label>IP: IPsec tunnel mode</label>
				<help>Support for IPsec tunnel mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_XFRM_MODE_BEET">
				<label>IP: IPsec BEET mode</label>
				<help>Support for IPsec BEET mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET_DIAG">
				<label>INET: socket monitoring interface</label>
				<help>Support for INET (TCP, DCCP, etc) socket monitoring interface used by
native Linux tools such as ss. ss is included in iproute2, currently
downloadable at:

http://www.linuxfoundation.org/collaborate/workgroups/networking/iproute2

If unsure, say Y.</help>
			</entry>
			<entry name="INET_TCP_DIAG"/>
			<entry name="INET_UDP_DIAG">
				<label>UDP: socket monitoring interface</label>
				<help>Support for UDP socket monitoring interface used by the ss tool.
If unsure, say Y.</help>
			</entry>
			<entry name="INET_DIAG_DESTROY">
				<label>INET: allow privileged process to administratively close sockets</label>
				<help>Provides a SOCK_DESTROY operation that allows privileged processes
(e.g., a connection manager or a network administration tool such as
ss) to close sockets opened by other processes. Closing a socket in
this way interrupts any blocking read/write/connect operations on
the socket and causes future socket calls to behave as if the socket
had been disconnected.
If unsure, say N.</help>
			</entry>
			<entry name="TCP_CONG_ADVANCED">
				<label>TCP: advanced congestion control</label>
				<help>Support for selection of various TCP congestion control
modules.

Nearly all users can safely say no here, and a safe default
selection will be made (CUBIC with new Reno as a fallback).

If unsure, say N.</help>
			</entry>
			<entry name="TCP_CONG_BIC">
				<label>Binary Increase Congestion (BIC) control</label>
				<help>BIC-TCP is a sender-side only change that ensures a linear RTT
fairness under large windows while offering both scalability and
bounded TCP-friendliness. The protocol combines two schemes
called additive increase and binary search increase. When the
congestion window is large, additive increase with a large
increment ensures linear RTT fairness as well as good
scalability. Under small congestion windows, binary search
increase provides TCP friendliness.
See http://www.csc.ncsu.edu/faculty/rhee/export/bitcp/</help>
			</entry>
			<entry name="TCP_CONG_CUBIC">
				<label>CUBIC TCP</label>
				<help>This is version 2.0 of BIC-TCP which uses a cubic growth function
among other techniques.
See http://www.csc.ncsu.edu/faculty/rhee/export/bitcp/cubic-paper.pdf</help>
			</entry>
			<entry name="TCP_CONG_WESTWOOD">
				<label>TCP Westwood+</label>
				<help>TCP Westwood+ is a sender-side only modification of the TCP Reno
protocol stack that optimizes the performance of TCP congestion
control. It is based on end-to-end bandwidth estimation to set
congestion window and slow start threshold after a congestion
episode. Using this estimation, TCP Westwood+ adaptively sets a
slow start threshold and a congestion window which takes into
account the bandwidth used  at the time congestion is experienced.
TCP Westwood+ significantly increases fairness wrt TCP Reno in
wired networks and throughput over wireless links.</help>
			</entry>
			<entry name="TCP_CONG_HTCP">
				<label>H-TCP</label>
				<help>H-TCP is a send-side only modifications of the TCP Reno
protocol stack that optimizes the performance of TCP
congestion control for high speed network links. It uses a
modeswitch to change the alpha and beta parameters of TCP Reno
based on network conditions and in a way so as to be fair with
other Reno and H-TCP flows.</help>
			</entry>
			<entry name="TCP_CONG_HSTCP">
				<label>High Speed TCP</label>
				<help>Sally Floyd's High Speed TCP (RFC 3649) congestion control.
A modification to TCP's congestion control mechanism for use
with large congestion windows. A table indicates how much to
increase the congestion window by when an ACK is received.
For more detail	see http://www.icir.org/floyd/hstcp.html</help>
			</entry>
			<entry name="TCP_CONG_HYBLA">
				<label>TCP-Hybla congestion control algorithm</label>
				<help>TCP-Hybla is a sender-side only change that eliminates penalization of
long-RTT, large-bandwidth connections, like when satellite legs are
involved, especially when sharing a common bottleneck with normal
terrestrial connections.</help>
			</entry>
			<entry name="TCP_CONG_VEGAS">
				<label>TCP Vegas</label>
				<help>TCP Vegas is a sender-side only change to TCP that anticipates
the onset of congestion by estimating the bandwidth. TCP Vegas
adjusts the sending rate by modifying the congestion
window. TCP Vegas should provide less packet loss, but it is
not as aggressive as TCP Reno.</help>
			</entry>
			<entry name="TCP_CONG_NV">
				<label>TCP NV</label>
				<help>TCP NV is a follow up to TCP Vegas. It has been modified to deal with
10G networks, measurement noise introduced by LRO, GRO and interrupt
coalescence. In addition, it will decrease its cwnd multiplicatively
instead of linearly.

Note that in general congestion avoidance (cwnd decreased when # packets
queued grows) cannot coexist with congestion control (cwnd decreased only
when there is packet loss) due to fairness issues. One scenario when they
can coexist safely is when the CA flows have RTTs &lt;&lt; CC flows RTTs.

For further details see http://www.brakmo.org/networking/tcp-nv/</help>
			</entry>
			<entry name="TCP_CONG_SCALABLE">
				<label>Scalable TCP</label>
				<help>Scalable TCP is a sender-side only change to TCP which uses a
MIMD congestion control algorithm which has some nice scaling
properties, though is known to have fairness issues.
See http://www.deneholme.net/tom/scalable/</help>
			</entry>
			<entry name="TCP_CONG_LP">
				<label>TCP Low Priority</label>
				<help>TCP Low Priority (TCP-LP), a distributed algorithm whose goal is
to utilize only the excess network bandwidth as compared to the
``fair share`` of bandwidth as targeted by TCP.
See http://www-ece.rice.edu/networks/TCP-LP/</help>
			</entry>
			<entry name="TCP_CONG_VENO">
				<label>TCP Veno</label>
				<help>TCP Veno is a sender-side only enhancement of TCP to obtain better
throughput over wireless networks. TCP Veno makes use of state
distinguishing to circumvent the difficult judgment of the packet loss
type. TCP Veno cuts down less congestion window in response to random
loss packets.
See &lt;http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=1177186&gt;</help>
			</entry>
			<entry name="TCP_CONG_YEAH">
				<label>YeAH TCP</label>
				<help>YeAH-TCP is a sender-side high-speed enabled TCP congestion control
algorithm, which uses a mixed loss/delay approach to compute the
congestion window. It's design goals target high efficiency,
internal, RTT and Reno fairness, resilience to link loss while
keeping network elements load as low as possible.

For further details look here:
http://wil.cs.caltech.edu/pfldnet2007/paper/YeAH_TCP.pdf</help>
			</entry>
			<entry name="TCP_CONG_ILLINOIS">
				<label>TCP Illinois</label>
				<help>TCP-Illinois is a sender-side modification of TCP Reno for
high speed long delay links. It uses round-trip-time to
adjust the alpha and beta parameters to achieve a higher average
throughput and maintain fairness.

For further details see:
http://www.ews.uiuc.edu/~shaoliu/tcpillinois/index.html</help>
			</entry>
			<entry name="TCP_CONG_DCTCP">
				<label>DataCenter TCP (DCTCP)</label>
				<help>DCTCP leverages Explicit Congestion Notification (ECN) in the network to
provide multi-bit feedback to the end hosts. It is designed to provide:

- High burst tolerance (incast due to partition/aggregate),
- Low latency (short flows, queries),
- High throughput (continuous data updates, large file transfers) with
commodity, shallow-buffered switches.

All switches in the data center network running DCTCP must support
ECN marking and be configured for marking when reaching defined switch
buffer thresholds. The default ECN marking threshold heuristic for
DCTCP on switches is 20 packets (30KB) at 1Gbps, and 65 packets
(~100KB) at 10Gbps, but might need further careful tweaking.

For further details see:
http://simula.stanford.edu/~alizade/Site/DCTCP_files/dctcp-final.pdf</help>
			</entry>
			<entry name="TCP_CONG_CDG">
				<label>CAIA Delay-Gradient (CDG)</label>
				<help>CAIA Delay-Gradient (CDG) is a TCP congestion control that modifies
the TCP sender in order to:

o Use the delay gradient as a congestion signal.
o Back off with an average probability that is independent of the RTT.
o Coexist with flows that use loss-based congestion control.
o Tolerate packet loss unrelated to congestion.

For further details see:
D.A. Hayes and G. Armitage. &quot;Revisiting TCP congestion control using
delay gradients.&quot; In Networking 2011. Preprint: http://goo.gl/No3vdg</help>
			</entry>
			<entry name="DEFAULT_BIC">
				<label>Bic&quot; if TCP_CONG_BIC=y</label>
			</entry>
			<entry name="DEFAULT_CUBIC">
				<label>Cubic&quot; if TCP_CONG_CUBIC=y</label>
			</entry>
			<entry name="DEFAULT_HTCP">
				<label>Htcp&quot; if TCP_CONG_HTCP=y</label>
			</entry>
			<entry name="DEFAULT_HYBLA">
				<label>Hybla&quot; if TCP_CONG_HYBLA=y</label>
			</entry>
			<entry name="DEFAULT_VEGAS">
				<label>Vegas&quot; if TCP_CONG_VEGAS=y</label>
			</entry>
			<entry name="DEFAULT_VENO">
				<label>Veno&quot; if TCP_CONG_VENO=y</label>
			</entry>
			<entry name="DEFAULT_WESTWOOD">
				<label>Westwood&quot; if TCP_CONG_WESTWOOD=y</label>
			</entry>
			<entry name="DEFAULT_DCTCP">
				<label>DCTCP&quot; if TCP_CONG_DCTCP=y</label>
			</entry>
			<entry name="DEFAULT_CDG">
				<label>CDG&quot; if TCP_CONG_CDG=y</label>
			</entry>
			<entry name="DEFAULT_RENO">
				<label>Reno</label>
			</entry>
			<entry name="TCP_CONG_CUBIC"/>
			<entry name="DEFAULT_TCP_CONG"/>
			<entry name="TCP_MD5SIG">
				<label>TCP: MD5 Signature Option support (RFC2385)</label>
				<help>RFC2385 specifies a method of giving MD5 protection to TCP sessions.
Its main (only?) use is to protect BGP sessions between core routers
on the Internet.

If unsure, say N.
</help>
			</entry>
			<entry name="IPV6">
				<label>The IPv6 protocol</label>
				<help>Support for IP version 6 (IPv6).

For general information about IPv6, see
&lt;https://en.wikipedia.org/wiki/IPv6&gt;.
For specific information about IPv6 under Linux, see
Documentation/networking/ipv6.txt and read the HOWTO at
&lt;http://www.tldp.org/HOWTO/Linux+IPv6-HOWTO/&gt;

To compile this protocol support as a module, choose M here: the
module will be called ipv6.</help>
			</entry>
			<entry name="IPV6_ROUTER_PREF">
				<label>IPv6: Router Preference (RFC 4191) support</label>
				<help>Router Preference is an optional extension to the Router
Advertisement message which improves the ability of hosts
to pick an appropriate router, especially when the hosts
are placed in a multi-homed network.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_ROUTE_INFO">
				<label>IPv6: Route Information (RFC 4191) support</label>
				<help>This is experimental support of Route Information.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_OPTIMISTIC_DAD">
				<label>IPv6: Enable RFC 4429 Optimistic DAD</label>
				<help>This is experimental support for optimistic Duplicate
Address Detection.  It allows for autoconfigured addresses
to be used more quickly.

If unsure, say N.</help>
			</entry>
			<entry name="INET6_AH">
				<label>IPv6: AH transformation</label>
				<help>Support for IPsec AH.

If unsure, say Y.</help>
			</entry>
			<entry name="INET6_ESP">
				<label>IPv6: ESP transformation</label>
				<help>Support for IPsec ESP.

If unsure, say Y.</help>
			</entry>
			<entry name="INET6_IPCOMP">
				<label>IPv6: IPComp transformation</label>
				<help>Support for IP Payload Compression Protocol (IPComp) (RFC3173),
typically needed for IPsec.

If unsure, say Y.</help>
			</entry>
			<entry name="IPV6_MIP6">
				<label>IPv6: Mobility</label>
				<help>Support for IPv6 Mobility described in RFC 3775.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_ILA">
				<label>IPv6: Identifier Locator Addressing (ILA)</label>
				<help>Support for IPv6 Identifier Locator Addressing (ILA).

ILA is a mechanism to do network virtualization without
encapsulation. The basic concept of ILA is that we split an
IPv6 address into a 64 bit locator and 64 bit identifier. The
identifier is the identity of an entity in communication
(&quot;who&quot;) and the locator expresses the location of the
entity (&quot;where&quot;).

ILA can be configured using the &quot;encap ila&quot; option with
&quot;ip -6 route&quot; command. ILA is described in
https://tools.ietf.org/html/draft-herbert-nvo3-ila-00.

If unsure, say N.</help>
			</entry>
			<entry name="INET6_XFRM_TUNNEL"/>
			<entry name="INET6_TUNNEL"/>
			<entry name="INET6_XFRM_MODE_TRANSPORT">
				<label>IPv6: IPsec transport mode</label>
				<help>Support for IPsec transport mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET6_XFRM_MODE_TUNNEL">
				<label>IPv6: IPsec tunnel mode</label>
				<help>Support for IPsec tunnel mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET6_XFRM_MODE_BEET">
				<label>IPv6: IPsec BEET mode</label>
				<help>Support for IPsec BEET mode.

If unsure, say Y.</help>
			</entry>
			<entry name="INET6_XFRM_MODE_ROUTEOPTIMIZATION">
				<label>IPv6: MIPv6 route optimization mode</label>
				<help>Support for MIPv6 route optimization mode.</help>
			</entry>
			<entry name="IPV6_VTI">
				<label>Virtual (secure) IPv6: tunneling</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This can be used with xfrm mode tunnel to give
the notion of a secure tunnel for IPSEC and then use routing protocol
on top.</help>
			</entry>
			<entry name="IPV6_SIT">
				<label>IPv6: IPv6-in-IPv4 tunnel (SIT driver)</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This driver implements encapsulation of IPv6
into IPv4 packets. This is useful if you want to connect two IPv6
networks over an IPv4-only path.

Saying M here will produce a module called sit. If unsure, say Y.</help>
			</entry>
			<entry name="IPV6_SIT_6RD">
				<label>IPv6: IPv6 Rapid Deployment (6RD)</label>
				<help>IPv6 Rapid Deployment (6rd; draft-ietf-softwire-ipv6-6rd) builds upon
mechanisms of 6to4 (RFC3056) to enable a service provider to rapidly
deploy IPv6 unicast service to IPv4 sites to which it provides
customer premise equipment.  Like 6to4, it utilizes stateless IPv6 in
IPv4 encapsulation in order to transit IPv4-only network
infrastructure.  Unlike 6to4, a 6rd service provider uses an IPv6
prefix of its own in place of the fixed 6to4 prefix.

With this option enabled, the SIT driver offers 6rd functionality by
providing additional ioctl API to configure the IPv6 Prefix for in
stead of static 2002::/16 for 6to4.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_NDISC_NODETYPE"/>
			<entry name="IPV6_TUNNEL">
				<label>IPv6: IP-in-IPv6 tunnel (RFC2473)</label>
				<help>Support for IPv6-in-IPv6 and IPv4-in-IPv6 tunnels described in
RFC 2473.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_GRE">
				<label>IPv6: GRE tunnel</label>
				<help>Tunneling means encapsulating data of one protocol type within
another protocol and sending it over a channel that understands the
encapsulating protocol. This particular tunneling driver implements
GRE (Generic Routing Encapsulation) and at this time allows
encapsulating of IPv4 or IPv6 over existing IPv6 infrastructure.
This driver is useful if the other endpoint is a Cisco router: Cisco
likes GRE much better than the other Linux tunneling driver (&quot;IP
tunneling&quot; above). In addition, GRE allows multicast redistribution
through the tunnel.

Saying M here will produce a module called ip6_gre. If unsure, say N.</help>
			</entry>
			<entry name="IPV6_FOU"/>
			<entry name="IPV6_FOU_TUNNEL"/>
			<entry name="IPV6_MULTIPLE_TABLES">
				<label>IPv6: Multiple Routing Tables</label>
				<help>Support multiple routing tables.</help>
			</entry>
			<entry name="IPV6_SUBTREES">
				<label>IPv6: source address based routing</label>
				<help>Enable routing by source address or prefix.

The destination address is still the primary routing key, so mixing
normal and source prefix specific routes in the same routing table
may sometimes lead to unintended routing behavior.  This can be
avoided by defining different routing tables for the normal and
source prefix specific routes.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_MROUTE">
				<label>IPv6: multicast routing</label>
				<help>Experimental support for IPv6 multicast forwarding.
If unsure, say N.</help>
			</entry>
			<entry name="IPV6_MROUTE_MULTIPLE_TABLES">
				<label>IPv6: multicast policy routing</label>
				<help>Normally, a multicast router runs a userspace daemon and decides
what to do with a multicast packet based on the source and
destination addresses. If you say Y here, the multicast router
will also be able to take interfaces and packet marks into
account and run multiple instances of userspace daemons
simultaneously, each one handling a single table.

If unsure, say N.</help>
			</entry>
			<entry name="IPV6_PIMSM_V2">
				<label>IPv6: PIM-SM version 2 support</label>
				<help>Support for IPv6 PIM multicast routing protocol PIM-SMv2.
If unsure, say N.</help>
			</entry>
			<entry name="NETLABEL">
				<label>NetLabel subsystem support</label>
				<help>NetLabel provides support for explicit network packet labeling
protocols such as CIPSO and RIPSO.  For more information see
Documentation/netlabel as well as the NetLabel SourceForge project
for configuration tools and additional documentation.

* http://netlabel.sf.net

If you are unsure, say N.
</help>
			</entry>
			<entry name="NETWORK_SECMARK">
				<label>Security Marking</label>
				<help>This enables security marking of network packets, similar
to nfmark, but designated for security purposes.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="NET_PTP_CLASSIFY"/>
			<entry name="NETWORK_PHY_TIMESTAMPING">
				<label>Timestamping in PHY devices</label>
				<help>This allows timestamping of network packets by PHYs with
hardware timestamping capabilities. This option adds some
overhead in the transmit and receive paths.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="NETFILTER">
				<label>Network packet filtering framework (Netfilter)</label>
				<help>Netfilter is a framework for filtering and mangling network packets
that pass through your Linux box.

The most common use of packet filtering is to run your Linux box as
a firewall protecting a local network from the Internet. The type of
firewall provided by this kernel support is called a &quot;packet
filter&quot;, which means that it can reject individual network packets
based on type, source, destination etc. The other kind of firewall,
a &quot;proxy-based&quot; one, is more secure but more intrusive and more
bothersome to set up; it inspects the network traffic much more
closely, modifies it and has knowledge about the higher level
protocols, which a packet filter lacks. Moreover, proxy-based
firewalls often require changes to the programs running on the local
clients. Proxy-based firewalls don't need support by the kernel, but
they are often combined with a packet filter, which only works if
you say Y here.

You should also say Y here if you intend to use your Linux box as
the gateway to the Internet for a local network of machines without
globally valid IP addresses. This is called &quot;masquerading&quot;: if one
of the computers on your local network wants to send something to
the outside, your box can &quot;masquerade&quot; as that computer, i.e. it
forwards the traffic to the intended outside destination, but
modifies the packets to make it look like they came from the
firewall box itself. It works both ways: if the outside host
replies, the Linux box will silently forward the traffic to the
correct local computer. This way, the computers on your local net
are completely invisible to the outside world, even though they can
reach the outside and can receive replies. It is even possible to
run globally visible servers from within a masqueraded local network
using a mechanism called portforwarding. Masquerading is also often
called NAT (Network Address Translation).

Another use of Netfilter is in transparent proxying: if a machine on
the local network tries to connect to an outside host, your Linux
box can transparently forward the traffic to a local server,
typically a caching proxy server.

Yet another use of Netfilter is building a bridging firewall. Using
a bridge with Network packet filtering enabled makes iptables &quot;see&quot;
the bridged traffic. For filtering on the lower network and Ethernet
protocols over the bridge, use ebtables (under bridge netfilter
configuration).

Various modules exist for netfilter which replace the previous
masquerading (ipmasqadm), packet filtering (ipchains), transparent
proxying, and portforwarding mechanisms. Please see
&lt;file:Documentation/Changes&gt; under &quot;iptables&quot; for the location of
these packages.</help>
			</entry>
			<entry name="NETFILTER_DEBUG">
				<label>Network packet filtering debugging</label>
				<help>You can say Y here if you want to get additional messages useful in
debugging the netfilter code.</help>
			</entry>
			<entry name="NETFILTER_ADVANCED">
				<label>Advanced netfilter configuration</label>
				<help>If you say Y here you can select between all the netfilter modules.
If you say N the more unusual ones will not be shown and the
basic ones needed by most people will default to 'M'.

If unsure, say Y.</help>
			</entry>
			<entry name="BRIDGE_NETFILTER">
				<label>Bridged IP/ARP packets filtering</label>
				<help>Enabling this option will let arptables resp. iptables see bridged
ARP resp. IP traffic. If you want a bridging firewall, you probably
want this option enabled.
Enabling or disabling this option doesn't enable or disable
ebtables.

If unsure, say N.</help>
			</entry>
			<container name="Core_Netfilter_Configuration">
				<label>Core Netfilter Configuration</label>
				<entry name="NETFILTER_INGRESS">
					<label>Netfilter ingress support</label>
					<help>This allows you to classify packets from ingress using the Netfilter
infrastructure.</help>
				</entry>
				<entry name="NETFILTER_NETLINK"/>
				<entry name="NETFILTER_NETLINK_ACCT">
					<label>Netfilter NFACCT over NFNETLINK interface</label>
					<help>If this option is enabled, the kernel will include support
for extended accounting via NFNETLINK.</help>
				</entry>
				<entry name="NETFILTER_NETLINK_QUEUE">
					<label>Netfilter NFQUEUE over NFNETLINK interface</label>
					<help>If this option is enabled, the kernel will include support
for queueing packets via NFNETLINK.</help>
				</entry>
				<entry name="NETFILTER_NETLINK_LOG">
					<label>Netfilter LOG over NFNETLINK interface</label>
					<help>If this option is enabled, the kernel will include support
for logging packets via NFNETLINK.

This obsoletes the existing ipt_ULOG and ebg_ulog mechanisms,
and is also scheduled to replace the old syslog-based ipt_LOG
and ip6t_LOG modules.</help>
				</entry>
				<entry name="NF_CONNTRACK">
					<label>Netfilter connection tracking support</label>
					<help>Connection tracking keeps a record of what packets have passed
through your machine, in order to figure out how they are related
into connections.

This is required to do Masquerading or other kinds of Network
Address Translation.  It can also be used to enhance packet
filtering (see `Connection state match support' below).

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_LOG_COMMON"/>
				<entry name="NF_CONNTRACK_MARK">
					<label>'Connection mark tracking support'</label>
					<help>This option enables support for connection marks, used by the
`CONNMARK' target and `connmark' match. Similar to the mark value
of packets, but this mark value is kept in the conntrack session
instead of the individual packets.</help>
				</entry>
				<entry name="NF_CONNTRACK_SECMARK">
					<label>'Connection tracking security mark support'</label>
					<help>This option enables security markings to be applied to
connections.  Typically they are copied to connections from
packets using the CONNSECMARK target and copied back from
connections to packets with the same target, with the packets
being originally labeled via SECMARK.

If unsure, say 'N'.</help>
				</entry>
				<entry name="NF_CONNTRACK_ZONES">
					<label>'Connection tracking zones'</label>
					<help>This option enables support for connection tracking zones.
Normally, each connection needs to have a unique system wide
identity. Connection tracking zones allow to have multiple
connections using the same identity, as long as they are
contained in different zones.

If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CONNTRACK_PROCFS">
					<label>Supply CT list in procfs (OBSOLETE)</label>
					<help>This option enables for the list of known conntrack entries
to be shown in procfs under net/netfilter/nf_conntrack. This
is considered obsolete in favor of using the conntrack(8)
tool which uses Netlink.</help>
				</entry>
				<entry name="NF_CONNTRACK_EVENTS">
					<label>Connection tracking events</label>
					<help>If this option is enabled, the connection tracking code will
provide a notifier chain that can be used by other kernel code
to get notified about changes in the connection tracking state.

If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CONNTRACK_TIMEOUT">
					<label>'Connection tracking timeout'</label>
					<help>This option enables support for connection tracking timeout
extension. This allows you to attach timeout policies to flow
via the CT target.

If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CONNTRACK_TIMESTAMP">
					<label>'Connection tracking timestamping'</label>
					<help>This option enables support for connection tracking timestamping.
This allows you to store the flow start-time and to obtain
the flow-stop time (once it has been destroyed) via Connection
tracking events.

If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CONNTRACK_LABELS">
					<help>This option enables support for assigning user-defined flag bits
to connection tracking entries.  It selected by the connlabel match.</help>
				</entry>
				<entry name="NF_CT_PROTO_DCCP">
					<label>'DCCP protocol connection tracking support'</label>
					<help>With this option enabled, the layer 3 independent connection
tracking code will be able to do state tracking on DCCP connections.

If unsure, say 'N'.</help>
				</entry>
				<entry name="NF_CT_PROTO_GRE"/>
				<entry name="NF_CT_PROTO_SCTP">
					<label>'SCTP protocol connection tracking support'</label>
					<help>With this option enabled, the layer 3 independent connection
tracking code will be able to do state tracking on SCTP connections.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CT_PROTO_UDPLITE">
					<label>'UDP-Lite protocol connection tracking support'</label>
					<help>With this option enabled, the layer 3 independent connection
tracking code will be able to do state tracking on UDP-Lite
connections.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_AMANDA">
					<label>Amanda backup protocol support</label>
					<help>If you are running the Amanda backup package &lt;http://www.amanda.org/&gt;
on this machine or machines that will be MASQUERADED through this
machine, then you may want to enable this feature.  This allows the
connection tracking and natting code to allow the sub-channels that
Amanda requires for communication of the backup data, messages and
index.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_FTP">
					<label>FTP protocol support</label>
					<help>Tracking FTP connections is problematic: special helpers are
required for tracking them, and doing masquerading and other forms
of Network Address Translation on them.

This is FTP support on Layer 3 independent connection tracking.
Layer 3 independent connection tracking is experimental scheme
which generalize ip_conntrack to support other layer 3 protocols.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_H323">
					<label>H.323 protocol support</label>
					<help>H.323 is a VoIP signalling protocol from ITU-T. As one of the most
important VoIP protocols, it is widely used by voice hardware and
software including voice gateways, IP phones, Netmeeting, OpenPhone,
Gnomemeeting, etc.

With this module you can support H.323 on a connection tracking/NAT
firewall.

This module supports RAS, Fast Start, H.245 Tunnelling, Call
Forwarding, RTP/RTCP and T.120 based audio, video, fax, chat,
whiteboard, file transfer, etc. For more information, please
visit http://nath323.sourceforge.net/.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_IRC">
					<label>IRC protocol support</label>
					<help>There is a commonly-used extension to IRC called
Direct Client-to-Client Protocol (DCC).  This enables users to send
files to each other, and also chat to each other without the need
of a server.  DCC Sending is used anywhere you send files over IRC,
and DCC Chat is most commonly used by Eggdrop bots.  If you are
using NAT, this extension will enable you to send files and initiate
chats.  Note that you do NOT need this extension to get files or
have others initiate chats, or everything else in IRC.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_BROADCAST"/>
				<entry name="NF_CONNTRACK_NETBIOS_NS">
					<label>NetBIOS name service protocol support</label>
					<help>NetBIOS name service requests are sent as broadcast messages from an
unprivileged port and responded to with unicast messages to the
same port. This make them hard to firewall properly because connection
tracking doesn't deal with broadcasts. This helper tracks locally
originating NetBIOS name service requests and the corresponding
responses. It relies on correct IP address configuration, specifically
netmask and broadcast address. When properly configured, the output
of &quot;ip address show&quot; should look similar to this:

$ ip -4 address show eth0
4: eth0: &lt;BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc pfifo_fast qlen 1000
inet 172.16.2.252/24 brd 172.16.2.255 scope global eth0

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_SNMP">
					<label>SNMP service protocol support</label>
					<help>SNMP service requests are sent as broadcast messages from an
unprivileged port and responded to with unicast messages to the
same port. This make them hard to firewall properly because connection
tracking doesn't deal with broadcasts. This helper tracks locally
originating SNMP service requests and the corresponding
responses. It relies on correct IP address configuration, specifically
netmask and broadcast address.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_PPTP">
					<label>PPtP protocol support</label>
					<help>This module adds support for PPTP (Point to Point Tunnelling
Protocol, RFC2637) connection tracking and NAT.

If you are running PPTP sessions over a stateful firewall or NAT
box, you may want to enable this feature.

Please note that not all PPTP modes of operation are supported yet.
Specifically these limitations exist:
- Blindly assumes that control connections are always established
in PNS-&gt;PAC direction. This is a violation of RFC2637.
- Only supports a single call within each session

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_SANE">
					<label>SANE protocol support</label>
					<help>SANE is a protocol for remote access to scanners as implemented
by the 'saned' daemon. Like FTP, it uses separate control and
data connections.

With this module you can support SANE on a connection tracking
firewall.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_SIP">
					<label>SIP protocol support</label>
					<help>SIP is an application-layer control protocol that can establish,
modify, and terminate multimedia sessions (conferences) such as
Internet telephony calls. With the ip_conntrack_sip and
the nf_nat_sip modules you can support the protocol on a connection
tracking/NATing firewall.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_TFTP">
					<label>TFTP protocol support</label>
					<help>TFTP connection tracking helper, this is required depending
on how restrictive your ruleset is.
If you are using a tftp client behind -j SNAT or -j MASQUERADING
you will need this.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CT_NETLINK">
					<label>'Connection tracking netlink interface'</label>
					<help>This option enables support for a netlink-based userspace interface</help>
				</entry>
				<entry name="NF_CT_NETLINK_TIMEOUT">
					<label>'Connection tracking timeout tuning via Netlink'</label>
					<help>This option enables support for connection tracking timeout
fine-grain tuning. This allows you to attach specific timeout
policies to flows, instead of using the global timeout policy.

If unsure, say `N'.</help>
				</entry>
				<entry name="NF_CT_NETLINK_HELPER">
					<label>'Connection tracking helpers in user-space via Netlink'</label>
					<help>This option enables the user-space connection tracking helpers
infrastructure.

If unsure, say `N'.</help>
				</entry>
				<entry name="NETFILTER_NETLINK_GLUE_CT">
					<label>NFQUEUE and NFLOG integration with Connection Tracking</label>
					<help>If this option is enabled, NFQUEUE and NFLOG can include
Connection Tracking information together with the packet is
the enqueued via NFNETLINK.</help>
				</entry>
				<entry name="NF_NAT"/>
				<entry name="NF_NAT_NEEDED"/>
				<entry name="NF_NAT_PROTO_DCCP"/>
				<entry name="NF_NAT_PROTO_UDPLITE"/>
				<entry name="NF_NAT_PROTO_SCTP"/>
				<entry name="NF_NAT_AMANDA"/>
				<entry name="NF_NAT_FTP"/>
				<entry name="NF_NAT_IRC"/>
				<entry name="NF_NAT_SIP"/>
				<entry name="NF_NAT_TFTP"/>
				<entry name="NF_NAT_REDIRECT">
					<label>IPv4/IPv6 redirect support</label>
					<help>This is the kernel functionality to redirect packets to local
machine through NAT.</help>
				</entry>
				<entry name="NETFILTER_SYNPROXY"/>
				<entry name="NF_TABLES">
					<label>Netfilter nf_tables support</label>
					<help>nftables is the new packet classification framework that intends to
replace the existing {ip,ip6,arp,eb}_tables infrastructure. It
provides a pseudo-state machine with an extensible instruction-set
(also known as expressions) that the userspace 'nft' utility
(http://www.netfilter.org/projects/nftables) uses to build the
rule-set. It also comes with the generic set infrastructure that
allows you to construct mappings between matchings and actions
for performance lookups.

To compile it as a module, choose M here.</help>
				</entry>
				<entry name="NF_TABLES_INET">
					<label>Netfilter nf_tables mixed IPv4/IPv6 tables support</label>
					<help>This option enables support for a mixed IPv4/IPv6 &quot;inet&quot; table.</help>
				</entry>
				<entry name="NF_TABLES_NETDEV">
					<label>Netfilter nf_tables netdev tables support</label>
					<help>This option enables support for the &quot;netdev&quot; table.</help>
				</entry>
				<entry name="NFT_EXTHDR">
					<label>Netfilter nf_tables IPv6 exthdr module</label>
					<help>This option adds the &quot;exthdr&quot; expression that you can use to match
IPv6 extension headers.</help>
				</entry>
				<entry name="NFT_META">
					<label>Netfilter nf_tables meta module</label>
					<help>This option adds the &quot;meta&quot; expression that you can use to match and
to set packet metainformation such as the packet mark.</help>
				</entry>
				<entry name="NFT_CT">
					<label>Netfilter nf_tables conntrack module</label>
					<help>This option adds the &quot;meta&quot; expression that you can use to match
connection tracking information such as the flow state.</help>
				</entry>
				<entry name="NFT_RBTREE">
					<label>Netfilter nf_tables rbtree set module</label>
					<help>This option adds the &quot;rbtree&quot; set type (Red Black tree) that is used
to build interval-based sets.</help>
				</entry>
				<entry name="NFT_HASH">
					<label>Netfilter nf_tables hash set module</label>
					<help>This option adds the &quot;hash&quot; set type that is used to build one-way
mappings between matchings and actions.</help>
				</entry>
				<entry name="NFT_COUNTER">
					<label>Netfilter nf_tables counter module</label>
					<help>This option adds the &quot;counter&quot; expression that you can use to
include packet and byte counters in a rule.</help>
				</entry>
				<entry name="NFT_LOG">
					<label>Netfilter nf_tables log module</label>
					<help>This option adds the &quot;log&quot; expression that you can use to log
packets matching some criteria.</help>
				</entry>
				<entry name="NFT_LIMIT">
					<label>Netfilter nf_tables limit module</label>
					<help>This option adds the &quot;limit&quot; expression that you can use to
ratelimit rule matchings.</help>
				</entry>
				<entry name="NFT_MASQ">
					<label>Netfilter nf_tables masquerade support</label>
					<help>This option adds the &quot;masquerade&quot; expression that you can use
to perform NAT in the masquerade flavour.</help>
				</entry>
				<entry name="NFT_REDIR">
					<label>Netfilter nf_tables redirect support</label>
					<help>This options adds the &quot;redirect&quot; expression that you can use
to perform NAT in the redirect flavour.</help>
				</entry>
				<entry name="NFT_NAT">
					<label>Netfilter nf_tables nat module</label>
					<help>This option adds the &quot;nat&quot; expression that you can use to perform
typical Network Address Translation (NAT) packet transformations.</help>
				</entry>
				<entry name="NFT_QUEUE">
					<label>Netfilter nf_tables queue module</label>
					<help>This is required if you intend to use the userspace queueing
infrastructure (also known as NFQUEUE) from nftables.</help>
				</entry>
				<entry name="NFT_REJECT">
					<label>Netfilter nf_tables reject support</label>
					<help>This option adds the &quot;reject&quot; expression that you can use to
explicitly deny and notify via TCP reset/ICMP informational errors
unallowed traffic.</help>
				</entry>
				<entry name="NFT_REJECT_INET"/>
				<entry name="NFT_COMPAT">
					<label>Netfilter x_tables over nf_tables module</label>
					<help>This is required if you intend to use any of existing
x_tables match/target extensions over the nf_tables
framework.</help>
				</entry>
				<entry name="NF_DUP_NETDEV">
					<label>Netfilter packet duplication support</label>
					<help>This option enables the generic packet duplication infrastructure
for Netfilter.</help>
				</entry>
				<entry name="NFT_DUP_NETDEV">
					<label>Netfilter nf_tables netdev packet duplication support</label>
					<help>This option enables packet duplication for the &quot;netdev&quot; family.</help>
				</entry>
				<entry name="NFT_FWD_NETDEV">
					<label>Netfilter nf_tables netdev packet forwarding support</label>
					<help>This option enables packet forwarding for the &quot;netdev&quot; family.</help>
				</entry>
				<entry name="NETFILTER_XTABLES">
					<label>Netfilter Xtables support (required for ip_tables)</label>
					<help>This is required if you intend to use any of ip_tables,
ip6_tables or arp_tables.</help>
				</entry>
				<entry name="NETFILTER_XT_MARK">
					<label>'nfmark target and match support'</label>
					<help>This option adds the &quot;MARK&quot; target and &quot;mark&quot; match.

Netfilter mark matching allows you to match packets based on the
&quot;nfmark&quot; value in the packet.
The target allows you to create rules in the &quot;mangle&quot; table which alter
the netfilter mark (nfmark) field associated with the packet.

Prior to routing, the nfmark can influence the routing method and can
also be used by other subsystems to change their behavior.</help>
				</entry>
				<entry name="NETFILTER_XT_CONNMARK">
					<label>'ctmark target and match support'</label>
					<help>This option adds the &quot;CONNMARK&quot; target and &quot;connmark&quot; match.

Netfilter allows you to store a mark value per connection (a.k.a.
ctmark), similarly to the packet mark (nfmark). Using this
target and match, you can set and match on this mark.</help>
				</entry>
				<entry name="NETFILTER_XT_SET">
					<label>'set target and match support'</label>
					<help>This option adds the &quot;SET&quot; target and &quot;set&quot; match.

Using this target and match, you can add/delete and match
elements in the sets created by ipset(8).

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_AUDIT">
					<label>AUDIT target support</label>
					<help>This option adds a 'AUDIT' target, which can be used to create
audit records for packets dropped/accepted.

To compileit as a module, choose M here. If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_CHECKSUM">
					<label>CHECKSUM target support</label>
					<help>This option adds a `CHECKSUM' target, which can be used in the iptables mangle
table.

You can use this target to compute and fill in the checksum in
a packet that lacks a checksum.  This is particularly useful,
if you need to work around old applications such as dhcp clients,
that do not work well with checksum offloads, but don't want to disable
checksum offload in your device.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_CLASSIFY">
					<label>'&quot;CLASSIFY&quot; target support'</label>
					<help>This option adds a `CLASSIFY' target, which enables the user to set
the priority of a packet. Some qdiscs can use this value for
classification, among these are:

atm, cbq, dsmark, pfifo_fast, htb, prio

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_CONNMARK">
					<label>'&quot;CONNMARK&quot; target support'</label>
					<help>This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_CONNSECMARK">
					<label>'&quot;CONNSECMARK&quot; target support'</label>
					<help>The CONNSECMARK target copies security markings from packets
to connections, and restores security markings from connections
to packets (if the packets are not already marked).  This would
normally be used in conjunction with the SECMARK target.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_CT">
					<label>'&quot;CT&quot; target support'</label>
					<help>This options adds a `CT' target, which allows to specify initial
connection tracking parameters like events to be delivered and
the helper to be used.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_DSCP">
					<label>'&quot;DSCP&quot; and &quot;TOS&quot; target support'</label>
					<help>This option adds a `DSCP' target, which allows you to manipulate
the IPv4/IPv6 header DSCP field (differentiated services codepoint).

The DSCP field can have any value between 0x0 and 0x3f inclusive.

It also adds the &quot;TOS&quot; target, which allows you to create rules in
the &quot;mangle&quot; table which alter the Type Of Service field of an IPv4
or the Priority field of an IPv6 packet, prior to routing.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_HL">
					<label>'&quot;HL&quot; hoplimit target support'</label>
					<help>This option adds the &quot;HL&quot; (for IPv6) and &quot;TTL&quot; (for IPv4)
targets, which enable the user to change the
hoplimit/time-to-live value of the IP header.

While it is safe to decrement the hoplimit/TTL value, the
modules also allow to increment and set the hoplimit value of
the header to arbitrary values. This is EXTREMELY DANGEROUS
since you can easily create immortal packets that loop
forever on the network.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_HMARK">
					<label>'&quot;HMARK&quot; target support'</label>
					<help>This option adds the &quot;HMARK&quot; target.

The target allows you to create rules in the &quot;raw&quot; and &quot;mangle&quot; tables
which set the skbuff mark by means of hash calculation within a given
range. The nfmark can influence the routing method and can also be used
by other subsystems to change their behaviour.

To compile it as a module, choose M here. If unsure, say N.</help>
				</entry>
				<entry name="NETFILTER_XT_TARGET_IDLETIMER">
					<label>IDLETIMER target support</label>
					<help>
This option adds the `IDLETIMER' target.  Each matching packet
resets the timer associated with label specified when the rule is
added.  When the timer expires, it triggers a sysfs notification.
The remaining time for expiration can be read via sysfs.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_LED
tristate '&quot;LED&quot; target support'
depends on LEDS_CLASS &amp;&amp; LEDS_TRIGGERS
depends on NETFILTER_ADVANCED
help
This option adds a `LED' target, which allows you to blink LEDs in
response to particular packets passing through your machine.

This can be used to turn a spare LED into a network activity LED,
which only flashes in response to FTP transfers, for example.  Or
you could have an LED which lights up for a minute or two every time
somebody connects to your machine via SSH.

You will need support for the &quot;led&quot; class to make this work.

To create an LED trigger for incoming SSH traffic:
iptables -A INPUT -p tcp --dport 22 -j LED --led-trigger-id ssh --led-delay 1000

Then attach the new trigger to an LED on your system:
echo netfilter-ssh &gt; /sys/class/leds/&lt;ledname&gt;/trigger

For more information on the LEDs available on your system, see
Documentation/leds/leds-class.txt

config NETFILTER_XT_TARGET_LOG
tristate &quot;LOG target support&quot;
select NF_LOG_COMMON
select NF_LOG_IPV4
select NF_LOG_IPV6 if IPV6
default m if NETFILTER_ADVANCED=n
help
This option adds a `LOG' target, which allows you to create rules in
any iptables table which records the packet header to the syslog.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_MARK
tristate '&quot;MARK&quot; target support'
depends on NETFILTER_ADVANCED
select NETFILTER_XT_MARK
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_MARK (combined mark/MARK module).

config NETFILTER_XT_NAT
tristate '&quot;SNAT and DNAT&quot; targets support'
depends on NF_NAT
---help---
This option enables the SNAT and DNAT targets.

To compile it as a module, choose M here. If unsure, say N.

config NETFILTER_XT_TARGET_NETMAP
tristate '&quot;NETMAP&quot; target support'
depends on NF_NAT
---help---
NETMAP is an implementation of static 1:1 NAT mapping of network
addresses. It maps the network address part, while keeping the host
address part intact.

To compile it as a module, choose M here. If unsure, say N.

config NETFILTER_XT_TARGET_NFLOG
tristate '&quot;NFLOG&quot; target support'
default m if NETFILTER_ADVANCED=n
select NETFILTER_NETLINK_LOG
help
This option enables the NFLOG target, which allows to LOG
messages through nfnetlink_log.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_NFQUEUE
tristate '&quot;NFQUEUE&quot; target Support'
depends on NETFILTER_ADVANCED
select NETFILTER_NETLINK_QUEUE
help
This target replaced the old obsolete QUEUE target.

As opposed to QUEUE, it supports 65535 different queues,
not just one.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_NOTRACK
tristate  '&quot;NOTRACK&quot; target support (DEPRECATED)'
depends on NF_CONNTRACK
depends on IP_NF_RAW || IP6_NF_RAW
depends on NETFILTER_ADVANCED
select NETFILTER_XT_TARGET_CT

config NETFILTER_XT_TARGET_RATEEST
tristate '&quot;RATEEST&quot; target support'
depends on NETFILTER_ADVANCED
help
This option adds a `RATEEST' target, which allows to measure
rates similar to TC estimators. The `rateest' match can be
used to match on the measured rates.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_REDIRECT
tristate &quot;REDIRECT target support&quot;
depends on NF_NAT
select NF_NAT_REDIRECT
---help---
REDIRECT is a special case of NAT: all incoming connections are
mapped onto the incoming interface's address, causing the packets to
come to the local machine instead of passing through. This is
useful for transparent proxies.

To compile it as a module, choose M here. If unsure, say N.

config NETFILTER_XT_TARGET_TEE
tristate '&quot;TEE&quot; - packet cloning to alternate destination'
depends on NETFILTER_ADVANCED
depends on IPV6 || IPV6=n
depends on !NF_CONNTRACK || NF_CONNTRACK
select NF_DUP_IPV4
select NF_DUP_IPV6 if IPV6
---help---
This option adds a &quot;TEE&quot; target with which a packet can be cloned and
this clone be rerouted to another nexthop.

config NETFILTER_XT_TARGET_TPROXY
tristate '&quot;TPROXY&quot; target transparent proxying support'
depends on NETFILTER_XTABLES
depends on NETFILTER_ADVANCED
depends on IPV6 || IPV6=n
depends on IP6_NF_IPTABLES || IP6_NF_IPTABLES=n
depends on IP_NF_MANGLE
select NF_DEFRAG_IPV4
select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES != n
help
This option adds a `TPROXY' target, which is somewhat similar to
REDIRECT.  It can only be used in the mangle table and is useful
to redirect traffic to a transparent proxy.  It does _not_ depend
on Netfilter connection tracking and NAT, unlike REDIRECT.
For it to work you will have to configure certain iptables rules
and use policy routing. For more information on how to set it up
see Documentation/networking/tproxy.txt.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_TRACE
tristate  '&quot;TRACE&quot; target support'
depends on IP_NF_RAW || IP6_NF_RAW
depends on NETFILTER_ADVANCED
help
The TRACE target allows you to mark packets so that the kernel
will log every rule which match the packets as those traverse
the tables, chains, rules.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_TARGET_SECMARK
tristate '&quot;SECMARK&quot; target support'
depends on NETWORK_SECMARK
default m if NETFILTER_ADVANCED=n
help
The SECMARK target allows security marking of network
packets, for use with security subsystems.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_TCPMSS
tristate '&quot;TCPMSS&quot; target support'
depends on IPV6 || IPV6=n
default m if NETFILTER_ADVANCED=n
---help---
This option adds a `TCPMSS' target, which allows you to alter the
MSS value of TCP SYN packets, to control the maximum size for that
connection (usually limiting it to your outgoing interface's MTU
minus 40).

This is used to overcome criminally braindead ISPs or servers which
block ICMP Fragmentation Needed packets.  The symptoms of this
problem are that everything works fine from your Linux
firewall/router, but machines behind it can never exchange large
packets:
1) Web browsers connect, then hang with no data received.
2) Small mail works fine, but large emails hang.
3) ssh works fine, but scp hangs after initial handshaking.

Workaround: activate this option and add a rule to your firewall
configuration like:

iptables -A FORWARD -p tcp --tcp-flags SYN,RST SYN \
-j TCPMSS --clamp-mss-to-pmtu

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_TARGET_TCPOPTSTRIP
tristate '&quot;TCPOPTSTRIP&quot; target support'
depends on IP_NF_MANGLE || IP6_NF_MANGLE
depends on NETFILTER_ADVANCED
help
This option adds a &quot;TCPOPTSTRIP&quot; target, which allows you to strip
TCP options from TCP packets.

# alphabetically ordered list of matches

comment &quot;Xtables matches&quot;

config NETFILTER_XT_MATCH_ADDRTYPE
tristate '&quot;addrtype&quot; address type match support'
default m if NETFILTER_ADVANCED=n
---help---
This option allows you to match what routing thinks of an address,
eg. UNICAST, LOCAL, BROADCAST, ...

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_BPF
tristate '&quot;bpf&quot; match support'
depends on NETFILTER_ADVANCED
help
BPF matching applies a linux socket filter to each packet and
accepts those for which the filter returns non-zero.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_CGROUP
tristate '&quot;control group&quot; match support'
depends on NETFILTER_ADVANCED
depends on CGROUPS
select CGROUP_NET_CLASSID
---help---
Socket/process control group matching allows you to match locally
generated packets based on which net_cls control group processes
belong to.

config NETFILTER_XT_MATCH_CLUSTER
tristate '&quot;cluster&quot; match support'
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
---help---
This option allows you to build work-load-sharing clusters of
network servers/stateful firewalls without having a dedicated
load-balancing router/server/switch. Basically, this match returns
true when the packet must be handled by this cluster node. Thus,
all nodes see all packets and this match decides which node handles
what packets. The work-load sharing algorithm is based on source
address hashing.

If you say Y or M here, try `iptables -m cluster --help` for
more information.

config NETFILTER_XT_MATCH_COMMENT
tristate  '&quot;comment&quot; match support'
depends on NETFILTER_ADVANCED
help
This option adds a `comment' dummy-match, which allows you to put
comments in your iptables ruleset.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_CONNBYTES
tristate  '&quot;connbytes&quot; per-connection counter match support'
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
help
This option adds a `connbytes' match, which allows you to match the
number of bytes and/or packets for each direction within a connection.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_CONNLABEL
tristate '&quot;connlabel&quot; match support'
select NF_CONNTRACK_LABELS
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
---help---
This match allows you to test and assign userspace-defined labels names
to a connection.  The kernel only stores bit values - mapping
names to bits is done by userspace.

Unlike connmark, more than 32 flag bits may be assigned to a
connection simultaneously.

config NETFILTER_XT_MATCH_CONNLIMIT
tristate '&quot;connlimit&quot; match support'
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
---help---
This match allows you to match against the number of parallel
connections to a server per client IP address (or address block).

config NETFILTER_XT_MATCH_CONNMARK
tristate  '&quot;connmark&quot; connection mark match support'
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
select NETFILTER_XT_CONNMARK
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_CONNMARK (combined connmark/CONNMARK module).

config NETFILTER_XT_MATCH_CONNTRACK
tristate '&quot;conntrack&quot; connection tracking match support'
depends on NF_CONNTRACK
default m if NETFILTER_ADVANCED=n
help
This is a general conntrack match module, a superset of the state match.

It allows matching on additional conntrack information, which is
useful in complex configurations, such as NAT gateways with multiple
internet links or tunnels.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_CPU
tristate '&quot;cpu&quot; match support'
depends on NETFILTER_ADVANCED
help
CPU matching allows you to match packets based on the CPU
currently handling the packet.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_DCCP
tristate '&quot;dccp&quot; protocol match support'
depends on NETFILTER_ADVANCED
default IP_DCCP
help
With this option enabled, you will be able to use the iptables
`dccp' match in order to match on DCCP source/destination ports
and DCCP flags.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_DEVGROUP
tristate '&quot;devgroup&quot; match support'
depends on NETFILTER_ADVANCED
help
This options adds a `devgroup' match, which allows to match on the
device group a network device is assigned to.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_DSCP
tristate '&quot;dscp&quot; and &quot;tos&quot; match support'
depends on NETFILTER_ADVANCED
help
This option adds a `DSCP' match, which allows you to match against
the IPv4/IPv6 header DSCP field (differentiated services codepoint).

The DSCP field can have any value between 0x0 and 0x3f inclusive.

It will also add a &quot;tos&quot; match, which allows you to match packets
based on the Type Of Service fields of the IPv4 packet (which share
the same bits as DSCP).

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_ECN
tristate '&quot;ecn&quot; match support'
depends on NETFILTER_ADVANCED
---help---
This option adds an &quot;ECN&quot; match, which allows you to match against
the IPv4 and TCP header ECN fields.

To compile it as a module, choose M here. If unsure, say N.

config NETFILTER_XT_MATCH_ESP
tristate '&quot;esp&quot; match support'
depends on NETFILTER_ADVANCED
help
This match extension allows you to match a range of SPIs
inside ESP header of IPSec packets.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_HASHLIMIT
tristate '&quot;hashlimit&quot; match support'
depends on IP6_NF_IPTABLES || IP6_NF_IPTABLES=n
depends on NETFILTER_ADVANCED
help
This option adds a `hashlimit' match.

As opposed to `limit', this match dynamically creates a hash table
of limit buckets, based on your selection of source/destination
addresses and/or ports.

It enables you to express policies like `10kpps for any given
destination address' or `500pps from any given source address'
with a single rule.

config NETFILTER_XT_MATCH_HELPER
tristate '&quot;helper&quot; match support'
depends on NF_CONNTRACK
depends on NETFILTER_ADVANCED
help
Helper matching allows you to match packets in dynamic connections
tracked by a conntrack-helper, ie. ip_conntrack_ftp

To compile it as a module, choose M here.  If unsure, say Y.

config NETFILTER_XT_MATCH_HL
tristate '&quot;hl&quot; hoplimit/TTL match support'
depends on NETFILTER_ADVANCED
---help---
HL matching allows you to match packets based on the hoplimit
in the IPv6 header, or the time-to-live field in the IPv4
header of the packet.

config NETFILTER_XT_MATCH_IPCOMP
tristate '&quot;ipcomp&quot; match support'
depends on NETFILTER_ADVANCED
help
This match extension allows you to match a range of CPIs(16 bits)
inside IPComp header of IPSec packets.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_IPRANGE
tristate '&quot;iprange&quot; address range match support'
depends on NETFILTER_ADVANCED
---help---
This option adds a &quot;iprange&quot; match, which allows you to match based on
an IP address range. (Normal iptables only matches on single addresses
with an optional mask.)

If unsure, say M.

config NETFILTER_XT_MATCH_IPVS
tristate '&quot;ipvs&quot; match support'
depends on IP_VS
depends on NETFILTER_ADVANCED
depends on NF_CONNTRACK
help
This option allows you to match against IPVS properties of a packet.

If unsure, say N.

config NETFILTER_XT_MATCH_L2TP
tristate '&quot;l2tp&quot; match support'
depends on NETFILTER_ADVANCED
default L2TP
---help---
This option adds an &quot;L2TP&quot; match, which allows you to match against
L2TP protocol header fields.

To compile it as a module, choose M here. If unsure, say N.

config NETFILTER_XT_MATCH_LENGTH
tristate '&quot;length&quot; match support'
depends on NETFILTER_ADVANCED
help
This option allows you to match the length of a packet against a
specific value or range of values.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_LIMIT
tristate '&quot;limit&quot; match support'
depends on NETFILTER_ADVANCED
help
limit matching allows you to control the rate at which a rule can be
matched: mainly useful in combination with the LOG target (&quot;LOG
target support&quot;, below) and to avoid some Denial of Service attacks.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_MAC
tristate '&quot;mac&quot; address match support'
depends on NETFILTER_ADVANCED
help
MAC matching allows you to match packets based on the source
Ethernet address of the packet.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_MARK
tristate '&quot;mark&quot; match support'
depends on NETFILTER_ADVANCED
select NETFILTER_XT_MARK
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_MARK (combined mark/MARK module).

config NETFILTER_XT_MATCH_MULTIPORT
tristate '&quot;multiport&quot; Multiple port match support'
depends on NETFILTER_ADVANCED
help
Multiport matching allows you to match TCP or UDP packets based on
a series of source or destination ports: normally a rule can only
match a single range of ports.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_NFACCT
tristate '&quot;nfacct&quot; match support'
depends on NETFILTER_ADVANCED
select NETFILTER_NETLINK_ACCT
help
This option allows you to use the extended accounting through
nfnetlink_acct.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_OSF
tristate '&quot;osf&quot; Passive OS fingerprint match'
depends on NETFILTER_ADVANCED &amp;&amp; NETFILTER_NETLINK
help
This option selects the Passive OS Fingerprinting match module
that allows to passively match the remote operating system by
analyzing incoming TCP SYN packets.

Rules and loading software can be downloaded from
http://www.ioremap.net/projects/osf

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_OWNER
tristate '&quot;owner&quot; match support'
depends on NETFILTER_ADVANCED
---help---
Socket owner matching allows you to match locally-generated packets
based on who created the socket: the user or group. It is also
possible to check whether a socket actually exists.

config NETFILTER_XT_MATCH_POLICY
tristate 'IPsec &quot;policy&quot; match support'
depends on XFRM
default m if NETFILTER_ADVANCED=n
help
Policy matching allows you to match packets based on the
IPsec policy that was used during decapsulation/will
be used during encapsulation.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_PHYSDEV
tristate '&quot;physdev&quot; match support'
depends on BRIDGE &amp;&amp; BRIDGE_NETFILTER
depends on NETFILTER_ADVANCED
help
Physdev packet matching matches against the physical bridge ports
the IP packet arrived on or will leave by.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_PKTTYPE
tristate '&quot;pkttype&quot; packet type match support'
depends on NETFILTER_ADVANCED
help
Packet type matching allows you to match a packet by
its &quot;class&quot;, eg. BROADCAST, MULTICAST, ...

Typical usage:
iptables -A INPUT -m pkttype --pkt-type broadcast -j LOG

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_QUOTA
tristate '&quot;quota&quot; match support'
depends on NETFILTER_ADVANCED
help
This option adds a `quota' match, which allows to match on a
byte counter.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_RATEEST
tristate '&quot;rateest&quot; match support'
depends on NETFILTER_ADVANCED
select NETFILTER_XT_TARGET_RATEEST
help
This option adds a `rateest' match, which allows to match on the
rate estimated by the RATEEST target.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_REALM
tristate  '&quot;realm&quot; match support'
depends on NETFILTER_ADVANCED
select IP_ROUTE_CLASSID
help
This option adds a `realm' match, which allows you to use the realm
key from the routing subsystem inside iptables.

This match pretty much resembles the CONFIG_NET_CLS_ROUTE4 option
in tc world.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_RECENT
tristate '&quot;recent&quot; match support'
depends on NETFILTER_ADVANCED
---help---
This match is used for creating one or many lists of recently
used addresses and then matching against that/those list(s).

Short options are available by using 'iptables -m recent -h'
Official Website: &lt;http://snowman.net/projects/ipt_recent/&gt;

config NETFILTER_XT_MATCH_SCTP
tristate  '&quot;sctp&quot; protocol match support'
depends on NETFILTER_ADVANCED
default IP_SCTP
help
With this option enabled, you will be able to use the
`sctp' match in order to match on SCTP source/destination ports
and SCTP chunk types.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

config NETFILTER_XT_MATCH_SOCKET
tristate '&quot;socket&quot; match support'
depends on NETFILTER_XTABLES
depends on NETFILTER_ADVANCED
depends on !NF_CONNTRACK || NF_CONNTRACK
depends on IPV6 || IPV6=n
depends on IP6_NF_IPTABLES || IP6_NF_IPTABLES=n
select NF_DEFRAG_IPV4
select NF_DEFRAG_IPV6 if IP6_NF_IPTABLES != n
help
This option adds a `socket' match, which can be used to match
packets for which a TCP or UDP socket lookup finds a valid socket.
It can be used in combination with the MARK target and policy
routing to implement full featured non-locally bound sockets.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_STATE
tristate '&quot;state&quot; match support'
depends on NF_CONNTRACK
default m if NETFILTER_ADVANCED=n
help
Connection state matching allows you to match packets based on their
relationship to a tracked connection (ie. previous packets).  This
is a powerful tool for packet classification.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_STATISTIC
tristate '&quot;statistic&quot; match support'
depends on NETFILTER_ADVANCED
help
This option adds a `statistic' match, which allows you to match
on packets periodically or randomly with a given percentage.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_STRING
tristate  '&quot;string&quot; match support'
depends on NETFILTER_ADVANCED
select TEXTSEARCH
select TEXTSEARCH_KMP
select TEXTSEARCH_BM
select TEXTSEARCH_FSM
help
This option adds a `string' match, which allows you to look for
pattern matchings in packets.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_TCPMSS
tristate '&quot;tcpmss&quot; match support'
depends on NETFILTER_ADVANCED
help
This option adds a `tcpmss' match, which allows you to examine the
MSS value of TCP SYN packets, which control the maximum packet size
for that connection.

To compile it as a module, choose M here.  If unsure, say N.

config NETFILTER_XT_MATCH_TIME
tristate '&quot;time&quot; match support'
depends on NETFILTER_ADVANCED
---help---
This option adds a &quot;time&quot; match, which allows you to match based on
the packet arrival time (at the machine which netfilter is running)
on) or departure time/date (for locally generated packets).

If you say Y here, try `iptables -m time --help` for
more information.

If you want to compile it as a module, say M here.
If unsure, say N.

config NETFILTER_XT_MATCH_U32
tristate '&quot;u32&quot; match support'
depends on NETFILTER_ADVANCED
---help---
u32 allows you to extract quantities of up to 4 bytes from a packet,
AND them with specified masks, shift them by specified amounts and
test whether the results are in any of a set of specified ranges.
The specification of what to extract is general enough to skip over
headers with lengths stored in the packet, as in IP or TCP header
lengths.

Details and examples are in the kernel module source.

endif # NETFILTER_XTABLES

endmenu

source &quot;net/netfilter/ipset/Kconfig&quot;

source &quot;net/netfilter/ipvs/Kconfig&quot;
</help>
				</entry>
			</container>
			<container name="IP_Netfilter_Configuration">
				<label>IP: Netfilter Configuration</label>
				<entry name="NF_DEFRAG_IPV4"/>
				<entry name="NF_CONNTRACK_IPV4">
					<label>IPv4 connection tracking support (required for NAT)</label>
					<help>Connection tracking keeps a record of what packets have passed
through your machine, in order to figure out how they are related
into connections.

This is IPv4 support on Layer 3 independent connection tracking.
Layer 3 independent connection tracking is experimental scheme
which generalize ip_conntrack to support other layer 3 protocols.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_CONNTRACK_PROC_COMPAT">
					<label>proc/sysctl compatibility with old connection tracking</label>
					<help>This option enables /proc and sysctl compatibility with the old
layer 3 dependent connection tracking. This is needed to keep
old programs that have not been adapted to the new names working.

If unsure, say Y.</help>
				</entry>
				<entry name="NF_TABLES_IPV4">
					<label>IPv4 nf_tables support</label>
					<help>This option enables the IPv4 support for nf_tables.</help>
				</entry>
				<entry name="NFT_CHAIN_ROUTE_IPV4">
					<label>IPv4 nf_tables route chain support</label>
					<help>This option enables the &quot;route&quot; chain for IPv4 in nf_tables. This
chain type is used to force packet re-routing after mangling header
fields such as the source, destination, type of service and
the packet mark.</help>
				</entry>
				<entry name="NFT_REJECT_IPV4"/>
				<entry name="NFT_DUP_IPV4">
					<label>IPv4 nf_tables packet duplication support</label>
					<help>This module enables IPv4 packet duplication support for nf_tables.</help>
				</entry>
				<entry name="NF_TABLES_ARP">
					<label>ARP nf_tables support</label>
					<help>This option enables the ARP support for nf_tables.</help>
				</entry>
				<entry name="NF_DUP_IPV4">
					<label>Netfilter IPv4 packet duplication to alternate destination</label>
					<help>This option enables the nf_dup_ipv4 core, which duplicates an IPv4
packet to be rerouted to another destination.</help>
				</entry>
				<entry name="NF_LOG_ARP">
					<label>ARP packet logging</label>
				</entry>
				<entry name="NF_LOG_IPV4">
					<label>IPv4 packet logging</label>
				</entry>
				<entry name="NF_REJECT_IPV4">
					<label>IPv4 packet rejection</label>
				</entry>
				<entry name="NF_NAT_IPV4">
					<label>IPv4 NAT</label>
					<help>The IPv4 NAT option allows masquerading, port forwarding and other
forms of full Network Address Port Translation. This can be
controlled by iptables or nft.</help>
				</entry>
				<entry name="NFT_CHAIN_NAT_IPV4">
					<label>IPv4 nf_tables nat chain support</label>
					<help>This option enables the &quot;nat&quot; chain for IPv4 in nf_tables. This
chain type is used to perform Network Address Translation (NAT)
packet transformations such as the source, destination address and
source and destination ports.</help>
				</entry>
				<entry name="NF_NAT_MASQUERADE_IPV4">
					<label>IPv4 masquerade support</label>
					<help>This is the kernel functionality to provide NAT in the masquerade
flavour (automatic source address selection).</help>
				</entry>
				<entry name="NFT_MASQ_IPV4">
					<label>IPv4 masquerading support for nf_tables</label>
					<help>This is the expression that provides IPv4 masquerading support for
nf_tables.</help>
				</entry>
				<entry name="NFT_REDIR_IPV4">
					<label>IPv4 redirect support for nf_tables</label>
					<help>This is the expression that provides IPv4 redirect support for
nf_tables.</help>
				</entry>
				<entry name="NF_NAT_SNMP_BASIC">
					<label>Basic SNMP-ALG support</label>
					<help>
This module implements an Application Layer Gateway (ALG) for
SNMP payloads.  In conjunction with NAT, it allows a network
management system to access multiple private networks with
conflicting addresses.  It works by modifying IP addresses
inside SNMP payloads to match IP-layer NAT mapping.

This is the &quot;basic&quot; form of SNMP-ALG, as described in RFC 2962

To compile it as a module, choose M here.  If unsure, say N.

config NF_NAT_PROTO_GRE
tristate
depends on NF_CT_PROTO_GRE

config NF_NAT_PPTP
tristate
depends on NF_CONNTRACK
default NF_CONNTRACK_PPTP
select NF_NAT_PROTO_GRE

config NF_NAT_H323
tristate
depends on NF_CONNTRACK
default NF_CONNTRACK_H323

endif # NF_NAT_IPV4

config IP_NF_IPTABLES
tristate &quot;IP tables support (required for filtering/masq/NAT)&quot;
default m if NETFILTER_ADVANCED=n
select NETFILTER_XTABLES
help
iptables is a general, extensible packet identification framework.
The packet filtering and full NAT (masquerading, port forwarding,
etc) subsystems now use this: say `Y' or `M' here if you want to use
either of those.

To compile it as a module, choose M here.  If unsure, say N.

if IP_NF_IPTABLES

# The matches.
config IP_NF_MATCH_AH
tristate '&quot;ah&quot; match support'
depends on NETFILTER_ADVANCED
help
This match extension allows you to match a range of SPIs
inside AH header of IPSec packets.

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_MATCH_ECN
tristate '&quot;ecn&quot; match support'
depends on NETFILTER_ADVANCED
select NETFILTER_XT_MATCH_ECN
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_MATCH_ECN.

config IP_NF_MATCH_RPFILTER
tristate '&quot;rpfilter&quot; reverse path filter match support'
depends on NETFILTER_ADVANCED
depends on IP_NF_MANGLE || IP_NF_RAW
---help---
This option allows you to match packets whose replies would
go out via the interface the packet came in.

To compile it as a module, choose M here.  If unsure, say N.
The module will be called ipt_rpfilter.

config IP_NF_MATCH_TTL
tristate '&quot;ttl&quot; match support'
depends on NETFILTER_ADVANCED
select NETFILTER_XT_MATCH_HL
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_MATCH_HL.

# `filter', generic and specific targets
config IP_NF_FILTER
tristate &quot;Packet filtering&quot;
default m if NETFILTER_ADVANCED=n
help
Packet filtering defines a table `filter', which has a series of
rules for simple packet filtering at local input, forwarding and
local output.  See the man page for iptables(8).

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_REJECT
tristate &quot;REJECT target support&quot;
depends on IP_NF_FILTER
select NF_REJECT_IPV4
default m if NETFILTER_ADVANCED=n
help
The REJECT target allows a filtering rule to specify that an ICMP
error should be issued in response to an incoming packet, rather
than silently being dropped.

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_SYNPROXY
tristate &quot;SYNPROXY target support&quot;
depends on NF_CONNTRACK &amp;&amp; NETFILTER_ADVANCED
select NETFILTER_SYNPROXY
select SYN_COOKIES
help
The SYNPROXY target allows you to intercept TCP connections and
establish them using syncookies before they are passed on to the
server. This allows to avoid conntrack and server resource usage
during SYN-flood attacks.

To compile it as a module, choose M here. If unsure, say N.

# NAT + specific targets: nf_conntrack
config IP_NF_NAT
tristate &quot;iptables NAT support&quot;
depends on NF_CONNTRACK_IPV4
default m if NETFILTER_ADVANCED=n
select NF_NAT
select NF_NAT_IPV4
select NETFILTER_XT_NAT
help
This enables the `nat' table in iptables. This allows masquerading,
port forwarding and other forms of full Network Address Port
Translation.

To compile it as a module, choose M here.  If unsure, say N.

if IP_NF_NAT

config IP_NF_TARGET_MASQUERADE
tristate &quot;MASQUERADE target support&quot;
select NF_NAT_MASQUERADE_IPV4
default m if NETFILTER_ADVANCED=n
help
Masquerading is a special case of NAT: all outgoing connections are
changed to seem to come from a particular interface's address, and
if the interface goes down, those connections are lost.  This is
only useful for dialup accounts with dynamic IP address (ie. your IP
address will be different on next dialup).

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_NETMAP
tristate &quot;NETMAP target support&quot;
depends on NETFILTER_ADVANCED
select NETFILTER_XT_TARGET_NETMAP
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_TARGET_NETMAP.

config IP_NF_TARGET_REDIRECT
tristate &quot;REDIRECT target support&quot;
depends on NETFILTER_ADVANCED
select NETFILTER_XT_TARGET_REDIRECT
---help---
This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_TARGET_REDIRECT.

endif # IP_NF_NAT

# mangle + specific targets
config IP_NF_MANGLE
tristate &quot;Packet mangling&quot;
default m if NETFILTER_ADVANCED=n
help
This option adds a `mangle' table to iptables: see the man page for
iptables(8).  This table is used for various packet alterations
which can effect how the packet is routed.

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_CLUSTERIP
tristate &quot;CLUSTERIP target support&quot;
depends on IP_NF_MANGLE
depends on NF_CONNTRACK_IPV4
depends on NETFILTER_ADVANCED
select NF_CONNTRACK_MARK
help
The CLUSTERIP target allows you to build load-balancing clusters of
network servers without having a dedicated load-balancing
router/server/switch.

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_ECN
tristate &quot;ECN target support&quot;
depends on IP_NF_MANGLE
depends on NETFILTER_ADVANCED
---help---
This option adds a `ECN' target, which can be used in the iptables mangle
table.

You can use this target to remove the ECN bits from the IPv4 header of
an IP packet.  This is particularly useful, if you need to work around
existing ECN blackholes on the internet, but don't want to disable
ECN support in general.

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_TARGET_TTL
tristate '&quot;TTL&quot; target support'
depends on NETFILTER_ADVANCED &amp;&amp; IP_NF_MANGLE
select NETFILTER_XT_TARGET_HL
---help---
This is a backwards-compatible option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_TARGET_HL.

# raw + specific targets
config IP_NF_RAW
tristate  'raw table support (required for NOTRACK/TRACE)'
help
This option adds a `raw' table to iptables. This table is the very
first in the netfilter framework and hooks in at the PREROUTING
and OUTPUT chains.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.

# security table for MAC policy
config IP_NF_SECURITY
tristate &quot;Security table&quot;
depends on SECURITY
depends on NETFILTER_ADVANCED
help
This option adds a `security' table to iptables, for use
with Mandatory Access Control (MAC) policy.

If unsure, say N.

endif # IP_NF_IPTABLES

# ARP tables
config IP_NF_ARPTABLES
tristate &quot;ARP tables support&quot;
select NETFILTER_XTABLES
depends on NETFILTER_ADVANCED
help
arptables is a general, extensible packet identification framework.
The ARP packet filtering and mangling (manipulation)subsystems
use this: say Y or M here if you want to use either of those.

To compile it as a module, choose M here.  If unsure, say N.

if IP_NF_ARPTABLES

config IP_NF_ARPFILTER
tristate &quot;ARP packet filtering&quot;
help
ARP packet filtering defines a table `filter', which has a series of
rules for simple ARP packet filtering at local input and
local output.  On a bridge, you can also specify filtering rules
for forwarded ARP packets. See the man page for arptables(8).

To compile it as a module, choose M here.  If unsure, say N.

config IP_NF_ARP_MANGLE
tristate &quot;ARP payload mangling&quot;
help
Allows altering the ARP packet payload: source and destination
hardware and network addresses.

endif # IP_NF_ARPTABLES

endmenu

</help>
				</entry>
			</container>
			<container name="IPv6_Netfilter_Configuration">
				<label>IPv6: Netfilter Configuration</label>
				<entry name="NF_DEFRAG_IPV6"/>
				<entry name="NF_CONNTRACK_IPV6">
					<label>IPv6 connection tracking support</label>
					<help>Connection tracking keeps a record of what packets have passed
through your machine, in order to figure out how they are related
into connections.

This is IPv6 support on Layer 3 independent connection tracking.
Layer 3 independent connection tracking is experimental scheme
which generalize ip_conntrack to support other layer 3 protocols.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="NF_TABLES_IPV6">
					<label>IPv6 nf_tables support</label>
					<help>This option enables the IPv6 support for nf_tables.</help>
				</entry>
				<entry name="NFT_CHAIN_ROUTE_IPV6">
					<label>IPv6 nf_tables route chain support</label>
					<help>This option enables the &quot;route&quot; chain for IPv6 in nf_tables. This
chain type is used to force packet re-routing after mangling header
fields such as the source, destination, flowlabel, hop-limit and
the packet mark.</help>
				</entry>
				<entry name="NFT_REJECT_IPV6"/>
				<entry name="NFT_DUP_IPV6">
					<label>IPv6 nf_tables packet duplication support</label>
					<help>This module enables IPv6 packet duplication support for nf_tables.</help>
				</entry>
				<entry name="NF_DUP_IPV6">
					<label>Netfilter IPv6 packet duplication to alternate destination</label>
					<help>This option enables the nf_dup_ipv6 core, which duplicates an IPv6
packet to be rerouted to another destination.</help>
				</entry>
				<entry name="NF_REJECT_IPV6">
					<label>IPv6 packet rejection</label>
				</entry>
				<entry name="NF_LOG_IPV6">
					<label>IPv6 packet logging</label>
				</entry>
				<entry name="NF_NAT_IPV6">
					<label>IPv6 NAT</label>
					<help>The IPv6 NAT option allows masquerading, port forwarding and other
forms of full Network Address Port Translation. This can be
controlled by iptables or nft.</help>
				</entry>
				<entry name="NFT_CHAIN_NAT_IPV6">
					<label>IPv6 nf_tables nat chain support</label>
					<help>This option enables the &quot;nat&quot; chain for IPv6 in nf_tables. This
chain type is used to perform Network Address Translation (NAT)
packet transformations such as the source, destination address and
source and destination ports.</help>
				</entry>
				<entry name="NF_NAT_MASQUERADE_IPV6">
					<label>IPv6 masquerade support</label>
					<help>This is the kernel functionality to provide NAT in the masquerade
flavour (automatic source address selection) for IPv6.</help>
				</entry>
				<entry name="NFT_MASQ_IPV6">
					<label>IPv6 masquerade support for nf_tables</label>
					<help>This is the expression that provides IPv4 masquerading support for
nf_tables.</help>
				</entry>
				<entry name="NFT_REDIR_IPV6">
					<label>IPv6 redirect support for nf_tables</label>
					<help>This is the expression that provides IPv4 redirect support for
nf_tables.</help>
				</entry>
				<entry name="IP6_NF_IPTABLES">
					<label>IP6 tables support (required for filtering)</label>
					<help>ip6tables is a general, extensible packet identification framework.
Currently only the packet filtering and packet mangling subsystem
for IPv6 use this, but connection tracking is going to follow.
Say 'Y' or 'M' here if you want to use either of those.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_AH">
					<label>'&quot;ah&quot; match support'</label>
					<help>This module allows one to match AH packets.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_EUI64">
					<label>'&quot;eui64&quot; address check'</label>
					<help>This module performs checking on the IPv6 source address
Compares the last 64 bits with the EUI64 (delivered
from the MAC address) address

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_FRAG">
					<label>'&quot;frag&quot; Fragmentation header match support'</label>
					<help>frag matching allows you to match packets based on the fragmentation
header of the packet.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_OPTS">
					<label>'&quot;hbh&quot; hop-by-hop and &quot;dst&quot; opts header match support'</label>
					<help>This allows one to match packets based on the hop-by-hop
and destination options headers of a packet.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_HL">
					<label>'&quot;hl&quot; hoplimit match support'</label>
					<help>This is a backwards-compat option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_MATCH_HL.</help>
				</entry>
				<entry name="IP6_NF_MATCH_IPV6HEADER">
					<label>'&quot;ipv6header&quot; IPv6 Extension Headers Match'</label>
					<help>This module allows one to match packets based upon
the ipv6 extension headers.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_MH">
					<label>'&quot;mh&quot; match support'</label>
					<help>This module allows one to match MH packets.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MATCH_RPFILTER">
					<label>'&quot;rpfilter&quot; reverse path filter match support'</label>
					<help>This option allows you to match packets whose replies would
go out via the interface the packet came in.

To compile it as a module, choose M here.  If unsure, say N.
The module will be called ip6t_rpfilter.</help>
				</entry>
				<entry name="IP6_NF_MATCH_RT">
					<label>'&quot;rt&quot; Routing header match support'</label>
					<help>rt matching allows you to match packets based on the routing
header of the packet.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_TARGET_HL">
					<label>'&quot;HL&quot; hoplimit target support'</label>
					<help>This is a backwards-compatible option for the user's convenience
(e.g. when running oldconfig). It selects
CONFIG_NETFILTER_XT_TARGET_HL.</help>
				</entry>
				<entry name="IP6_NF_FILTER">
					<label>Packet filtering</label>
					<help>Packet filtering defines a table `filter', which has a series of
rules for simple packet filtering at local input, forwarding and
local output.  See the man page for iptables(8).

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_TARGET_REJECT">
					<label>REJECT target support</label>
					<help>The REJECT target allows a filtering rule to specify that an ICMPv6
error should be issued in response to an incoming packet, rather
than silently being dropped.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_TARGET_SYNPROXY">
					<label>SYNPROXY target support</label>
					<help>The SYNPROXY target allows you to intercept TCP connections and
establish them using syncookies before they are passed on to the
server. This allows to avoid conntrack and server resource usage
during SYN-flood attacks.

To compile it as a module, choose M here. If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_MANGLE">
					<label>Packet mangling</label>
					<help>This option adds a `mangle' table to iptables: see the man page for
iptables(8).  This table is used for various packet alterations
which can effect how the packet is routed.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_RAW">
					<label>'raw table support (required for TRACE)'</label>
					<help>This option adds a `raw' table to ip6tables. This table is the very
first in the netfilter framework and hooks in at the PREROUTING
and OUTPUT chains.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.</help>
				</entry>
				<entry name="IP6_NF_SECURITY">
					<label>Security table</label>
					<help>This option adds a `security' table to iptables, for use
with Mandatory Access Control (MAC) policy.

If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_NAT">
					<label>ip6tables NAT support</label>
					<help>This enables the `nat' table in ip6tables. This allows masquerading,
port forwarding and other forms of full Network Address Port
Translation.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_TARGET_MASQUERADE">
					<label>MASQUERADE target support</label>
					<help>Masquerading is a special case of NAT: all outgoing connections are
changed to seem to come from a particular interface's address, and
if the interface goes down, those connections are lost.  This is
only useful for dialup accounts with dynamic IP address (ie. your IP
address will be different on next dialup).

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
				<entry name="IP6_NF_TARGET_NPT">
					<label>NPT (Network Prefix translation) target support</label>
					<help>This option adds the `SNPT' and `DNPT' target, which perform
stateless IPv6-to-IPv6 Network Prefix Translation per RFC 6296.

To compile it as a module, choose M here.  If unsure, say N.</help>
				</entry>
			</container>
			<container name="DECnet_Netfilter_Configuration">
				<label>DECnet: Netfilter Configuration</label>
				<entry name="DECNET_NF_GRABULATOR">
					<label>Routing message grabulator (for userland routing daemon)</label>
					<help>Enable this module if you want to use the userland DECnet routing
daemon. You will also need to enable routing support for DECnet
unless you just want to monitor routing messages from other nodes.</help>
				</entry>
			</container>
			<entry name="NF_TABLES_BRIDGE">
				<label>Ethernet Bridge nf_tables support</label>
			</entry>
			<entry name="NFT_BRIDGE_META">
				<label>Netfilter nf_table bridge meta support</label>
				<help>Add support for bridge dedicated meta key.</help>
			</entry>
			<entry name="NFT_BRIDGE_REJECT">
				<label>Netfilter nf_tables bridge reject support</label>
				<help>Add support to reject packets.</help>
			</entry>
			<entry name="NF_LOG_BRIDGE">
				<label>Bridge packet logging</label>
			</entry>
			<entry name="BRIDGE_NF_EBTABLES">
				<label>Ethernet Bridge tables (ebtables) support</label>
				<help>ebtables is a general, extensible frame/packet identification
framework. Say 'Y' or 'M' here if you want to do Ethernet
filtering/NAT/brouting on the Ethernet bridge.</help>
			</entry>
			<entry name="BRIDGE_EBT_BROUTE">
				<label>ebt: broute table support</label>
				<help>The ebtables broute table is used to define rules that decide between
bridging and routing frames, giving Linux the functionality of a
brouter. See the man page for ebtables(8) and examples on the ebtables
website.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_T_FILTER">
				<label>ebt: filter table support</label>
				<help>The ebtables filter table is used to define frame filtering rules at
local input, forwarding and local output. See the man page for
ebtables(8).

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_T_NAT">
				<label>ebt: nat table support</label>
				<help>The ebtables nat table is used to define rules that alter the MAC
source address (MAC SNAT) or the MAC destination address (MAC DNAT).
See the man page for ebtables(8).

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_802_3">
				<label>ebt: 802.3 filter support</label>
				<help>This option adds matching support for 802.3 Ethernet frames.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_AMONG">
				<label>ebt: among filter support</label>
				<help>This option adds the among match, which allows matching the MAC source
and/or destination address on a list of addresses. Optionally,
MAC/IP address pairs can be matched, f.e. for anti-spoofing rules.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_ARP">
				<label>ebt: ARP filter support</label>
				<help>This option adds the ARP match, which allows ARP and RARP header field
filtering.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_IP">
				<label>ebt: IP filter support</label>
				<help>This option adds the IP match, which allows basic IP header field
filtering.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_IP6">
				<label>ebt: IP6 filter support</label>
				<help>This option adds the IP6 match, which allows basic IPV6 header field
filtering.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_LIMIT">
				<label>ebt: limit match support</label>
				<help>This option adds the limit match, which allows you to control
the rate at which a rule can be matched. This match is the
equivalent of the iptables limit match.

If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.  If unsure, say `N'.</help>
			</entry>
			<entry name="BRIDGE_EBT_MARK">
				<label>ebt: mark filter support</label>
				<help>This option adds the mark match, which allows matching frames based on
the 'nfmark' value in the frame. This can be set by the mark target.
This value is the same as the one used in the iptables mark match and
target.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_PKTTYPE">
				<label>ebt: packet type filter support</label>
				<help>This option adds the packet type match, which allows matching on the
type of packet based on its Ethernet &quot;class&quot; (as determined by
the generic networking code): broadcast, multicast,
for this host alone or for another host.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_STP">
				<label>ebt: STP filter support</label>
				<help>This option adds the Spanning Tree Protocol match, which
allows STP header field filtering.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_VLAN">
				<label>ebt: 802.1Q VLAN filter support</label>
				<help>This option adds the 802.1Q vlan match, which allows the filtering of
802.1Q vlan fields.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_ARPREPLY">
				<label>ebt: arp reply target support</label>
				<help>This option adds the arp reply target, which allows
automatically sending arp replies to arp requests.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_DNAT">
				<label>ebt: dnat target support</label>
				<help>This option adds the MAC DNAT target, which allows altering the MAC
destination address of frames.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_MARK_T">
				<label>ebt: mark target support</label>
				<help>This option adds the mark target, which allows marking frames by
setting the 'nfmark' value in the frame.
This value is the same as the one used in the iptables mark match and
target.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_REDIRECT">
				<label>ebt: redirect target support</label>
				<help>This option adds the MAC redirect target, which allows altering the MAC
destination address of a frame to that of the device it arrived on.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_SNAT">
				<label>ebt: snat target support</label>
				<help>This option adds the MAC SNAT target, which allows altering the MAC
source address of frames.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_LOG">
				<label>ebt: log support</label>
				<help>This option adds the log watcher, that you can use in any rule
in any ebtables table. It records info about the frame header
to the syslog.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_EBT_NFLOG">
				<label>ebt: nflog support</label>
				<help>This option enables the nflog watcher, which allows to LOG
messages through the netfilter logging API, which can use
either the old LOG target, the old ULOG target or nfnetlink_log
as backend.

This option adds the nflog watcher, that you can use in any rule
in any ebtables table.

To compile it as a module, choose M here.  If unsure, say N.</help>
			</entry>
			<entry name="IP_DCCP">
				<label>The DCCP Protocol</label>
				<help>Datagram Congestion Control Protocol (RFC 4340)

From http://www.ietf.org/rfc/rfc4340.txt:

The Datagram Congestion Control Protocol (DCCP) is a transport
protocol that implements bidirectional, unicast connections of
congestion-controlled, unreliable datagrams. It should be suitable
for use by applications such as streaming media, Internet telephony,
and on-line games.

To compile this protocol support as a module, choose M here: the
module will be called dccp.

If in doubt, say N.</help>
			</entry>
			<entry name="INET_DCCP_DIAG"/>
			<container name="DCCP_CCIDs_Configuration">
				<label>DCCP CCIDs Configuration</label>
				<entry name="IP_DCCP_CCID2_DEBUG">
					<label>CCID-2 debugging messages</label>
					<help>Enable CCID-2 specific debugging messages.

The debugging output can additionally be toggled by setting the
ccid2_debug parameter to 0 or 1.

If in doubt, say N.</help>
				</entry>
				<entry name="IP_DCCP_CCID3">
					<label>CCID-3 (TCP-Friendly)</label>
					<help>CCID-3 denotes TCP-Friendly Rate Control (TFRC), an equation-based
rate-controlled congestion control mechanism.  TFRC is designed to
be reasonably fair when competing for bandwidth with TCP-like flows,
where a flow is &quot;reasonably fair&quot; if its sending rate is generally
within a factor of two of the sending rate of a TCP flow under the
same conditions.  However, TFRC has a much lower variation of
throughput over time compared with TCP, which makes CCID-3 more
suitable than CCID-2 for applications such streaming media where a
relatively smooth sending rate is of importance.

CCID-3 is further described in RFC 4342,
http://www.ietf.org/rfc/rfc4342.txt

The TFRC congestion control algorithms were initially described in
RFC 5348.

This text was extracted from RFC 4340 (sec. 10.2),
http://www.ietf.org/rfc/rfc4340.txt

If in doubt, say N.</help>
				</entry>
				<entry name="IP_DCCP_CCID3_DEBUG">
					<label>CCID-3 debugging messages</label>
					<help>Enable CCID-3 specific debugging messages.

The debugging output can additionally be toggled by setting the
ccid3_debug parameter to 0 or 1.

If in doubt, say N.</help>
				</entry>
				<entry name="IP_DCCP_TFRC_LIB"/>
				<entry name="IP_DCCP_TFRC_DEBUG"/>
			</container>
			<container name="DCCP_Kernel_Hacking">
				<label>DCCP Kernel Hacking</label>
				<entry name="IP_DCCP_DEBUG">
					<label>DCCP debug messages</label>
					<help>Only use this if you're hacking DCCP.

When compiling DCCP as a module, this debugging output can be toggled
by setting the parameter dccp_debug of the `dccp' module to 0 or 1.

Just say N.</help>
				</entry>
				<entry name="NET_DCCPPROBE">
					<label>DCCP connection probing</label>
					<help>This module allows for capturing the changes to DCCP connection
state in response to incoming packets. It is used for debugging
DCCP congestion avoidance modules. If you don't understand
what was just said, you don't need it: say N.

Documentation on how to use DCCP connection probing can be found
at:

http://www.linuxfoundation.org/collaborate/workgroups/networking/dccpprobe

To compile this code as a module, choose M here: the
module will be called dccp_probe.</help>
				</entry>
			</container>
			<entry name="IP_SCTP">
				<label>The SCTP Protocol</label>
				<help>Stream Control Transmission Protocol

From RFC 2960 &lt;http://www.ietf.org/rfc/rfc2960.txt&gt;.

&quot;SCTP is a reliable transport protocol operating on top of a
connectionless packet network such as IP.  It offers the following
services to its users:

-- acknowledged error-free non-duplicated transfer of user data,
-- data fragmentation to conform to discovered path MTU size,
-- sequenced delivery of user messages within multiple streams,
with an option for order-of-arrival delivery of individual user
messages,
-- optional bundling of multiple user messages into a single SCTP
packet, and
-- network-level fault tolerance through supporting of multi-
homing at either or both ends of an association.&quot;

To compile this protocol support as a module, choose M here: the
module will be called sctp. Debug messages are handeled by the
kernel's dynamic debugging framework.

If in doubt, say N.</help>
			</entry>
			<entry name="NET_SCTPPROBE">
				<label>SCTP: Association probing</label>
				<help>This module allows for capturing the changes to SCTP association
state in response to incoming packets. It is used for debugging
SCTP congestion control algorithms. If you don't understand
what was just said, you don't need it: say N.

To compile this code as a module, choose M here: the
module will be called sctp_probe.</help>
			</entry>
			<entry name="SCTP_DBG_OBJCNT">
				<label>SCTP: Debug object counts</label>
				<help>If you say Y, this will enable debugging support for counting the
type of objects that are currently allocated.  This is useful for
identifying memory leaks. This debug information can be viewed by
'cat /proc/net/sctp/sctp_dbg_objcnt'

If unsure, say N</help>
			</entry>
			<entry name="SCTP_DEFAULT_COOKIE_HMAC_MD5">
				<label>Enable optional MD5 hmac cookie generation</label>
				<help>Enable optional MD5 hmac based SCTP cookie generation</help>
			</entry>
			<entry name="SCTP_DEFAULT_COOKIE_HMAC_SHA1">
				<label>Enable optional SHA1 hmac cookie generation</label>
				<help>Enable optional SHA1 hmac based SCTP cookie generation</help>
			</entry>
			<entry name="SCTP_DEFAULT_COOKIE_HMAC_NONE">
				<label>Use no hmac alg in SCTP cookie generation</label>
				<help>Use no hmac algorithm in SCTP cookie generation</help>
			</entry>
			<entry name="SCTP_COOKIE_HMAC_MD5">
				<label>Enable optional MD5 hmac cookie generation</label>
				<help>Enable optional MD5 hmac based SCTP cookie generation</help>
			</entry>
			<entry name="SCTP_COOKIE_HMAC_SHA1">
				<label>Enable optional SHA1 hmac cookie generation</label>
				<help>Enable optional SHA1 hmac based SCTP cookie generation</help>
			</entry>
			<entry name="INET_SCTP_DIAG"/>
			<entry name="RDS">
				<label>The RDS Protocol</label>
				<help>The RDS (Reliable Datagram Sockets) protocol provides reliable,
sequenced delivery of datagrams over Infiniband or TCP.</help>
			</entry>
			<entry name="RDS_RDMA">
				<label>RDS over Infiniband</label>
				<help>Allow RDS to use Infiniband as a transport.
This transport supports RDMA operations.</help>
			</entry>
			<entry name="RDS_TCP">
				<label>RDS over TCP</label>
				<help>Allow RDS to use TCP as a transport.
This transport does not support RDMA operations.</help>
			</entry>
			<entry name="RDS_DEBUG">
				<label>RDS debugging messages</label>
			</entry>
			<entry name="TIPC">
				<label>The TIPC Protocol</label>
				<help>The Transparent Inter Process Communication (TIPC) protocol is
specially designed for intra cluster communication. This protocol
originates from Ericsson where it has been used in carrier grade
cluster applications for many years.

For more information about TIPC, see http://tipc.sourceforge.net.

This protocol support is also available as a module ( = code which
can be inserted in and removed from the running kernel whenever you
want). The module will be called tipc. If you want to compile it
as a module, say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If in doubt, say N.</help>
			</entry>
			<entry name="TIPC_MEDIA_IB">
				<label>InfiniBand media type support</label>
				<help>Saying Y here will enable support for running TIPC on
IP-over-InfiniBand devices.</help>
			</entry>
			<entry name="TIPC_MEDIA_UDP">
				<label>IP/UDP media type support</label>
				<help>Saying Y here will enable support for running TIPC over IP/UDP</help>
			</entry>
			<entry name="ATM">
				<label>Asynchronous Transfer Mode (ATM)</label>
				<help>ATM is a high-speed networking technology for Local Area Networks
and Wide Area Networks.  It uses a fixed packet size and is
connection oriented, allowing for the negotiation of minimum
bandwidth requirements.

In order to participate in an ATM network, your Linux box needs an
ATM networking card. If you have that, say Y here and to the driver
of your ATM card below.

Note that you need a set of user-space programs to actually make use
of ATM.  See the file &lt;file:Documentation/networking/atm.txt&gt; for
further details.</help>
			</entry>
			<entry name="ATM_CLIP">
				<label>Classical IP over ATM</label>
				<help>Classical IP over ATM for PVCs and SVCs, supporting InARP and
ATMARP. If you want to communication with other IP hosts on your ATM
network, you will typically either say Y here or to &quot;LAN Emulation
(LANE)&quot; below.</help>
			</entry>
			<entry name="ATM_CLIP_NO_ICMP">
				<label>Do NOT send ICMP if no neighbour</label>
				<help>Normally, an &quot;ICMP host unreachable&quot; message is sent if a neighbour
cannot be reached because there is no VC to it in the kernel's
ATMARP table. This may cause problems when ATMARP table entries are
briefly removed during revalidation. If you say Y here, packets to
such neighbours are silently discarded instead.</help>
			</entry>
			<entry name="ATM_LANE">
				<label>LAN Emulation (LANE) support</label>
				<help>LAN Emulation emulates services of existing LANs across an ATM
network. Besides operating as a normal ATM end station client, Linux
LANE client can also act as an proxy client bridging packets between
ELAN and Ethernet segments. You need LANE if you want to try MPOA.</help>
			</entry>
			<entry name="ATM_MPOA">
				<label>Multi-Protocol Over ATM (MPOA) support</label>
				<help>Multi-Protocol Over ATM allows ATM edge devices such as routers,
bridges and ATM attached hosts establish direct ATM VCs across
subnetwork boundaries. These shortcut connections bypass routers
enhancing overall network performance.</help>
			</entry>
			<entry name="ATM_BR2684">
				<label>RFC1483/2684 Bridged protocols</label>
				<help>ATM PVCs can carry ethernet PDUs according to RFC2684 (formerly 1483)
This device will act like an ethernet from the kernels point of view,
with the traffic being carried by ATM PVCs (currently 1 PVC/device).
This is sometimes used over DSL lines.  If in doubt, say N.</help>
			</entry>
			<entry name="ATM_BR2684_IPFILTER">
				<label>Per-VC IP filter kludge</label>
				<help>This is an experimental mechanism for users who need to terminate a
large number of IP-only vcc's.  Do not enable this unless you are sure
you know what you are doing.
</help>
			</entry>
			<entry name="L2TP">
				<label>Layer Two Tunneling Protocol (L2TP)</label>
				<help>Layer Two Tunneling Protocol

From RFC 2661 &lt;http://www.ietf.org/rfc/rfc2661.txt&gt;.

L2TP facilitates the tunneling of packets across an
intervening network in a way that is as transparent as
possible to both end-users and applications.

L2TP is often used to tunnel PPP traffic over IP
tunnels. One IP tunnel may carry thousands of individual PPP
connections. L2TP is also used as a VPN protocol, popular
with home workers to connect to their offices.

L2TPv3 allows other protocols as well as PPP to be carried
over L2TP tunnels. L2TPv3 is defined in RFC 3931
&lt;http://www.ietf.org/rfc/rfc3931.txt&gt;.

The kernel component handles only L2TP data packets: a
userland daemon handles L2TP the control protocol (tunnel
and session setup). One such daemon is OpenL2TP
(http://openl2tp.org/).

If you don't need L2TP, say N. To compile all L2TP code as
modules, choose M here.</help>
			</entry>
			<entry name="L2TP_DEBUGFS">
				<label>L2TP debugfs support</label>
				<help>Support for l2tp directory in debugfs filesystem. This may be
used to dump internal state of the l2tp drivers for problem
analysis.

If unsure, say 'Y'.

To compile this driver as a module, choose M here. The module
will be called l2tp_debugfs.</help>
			</entry>
			<entry name="L2TP_V3">
				<label>L2TPv3 support</label>
				<help>Layer Two Tunneling Protocol Version 3

From RFC 3931 &lt;http://www.ietf.org/rfc/rfc3931.txt&gt;.

The Layer Two Tunneling Protocol (L2TP) provides a dynamic
mechanism for tunneling Layer 2 (L2) &quot;circuits&quot; across a
packet-oriented data network (e.g., over IP).  L2TP, as
originally defined in RFC 2661, is a standard method for
tunneling Point-to-Point Protocol (PPP) [RFC1661] sessions.
L2TP has since been adopted for tunneling a number of other
L2 protocols, including ATM, Frame Relay, HDLC and even raw
ethernet frames.

If you are connecting to L2TPv3 equipment, or you want to
tunnel raw ethernet frames using L2TP, say Y here. If
unsure, say N.</help>
			</entry>
			<entry name="L2TP_IP">
				<label>L2TP IP encapsulation for L2TPv3</label>
				<help>Support for L2TP-over-IP socket family.

The L2TPv3 protocol defines two possible encapsulations for
L2TP frames, namely UDP and plain IP (without UDP). This
driver provides a new L2TPIP socket family with which
userspace L2TPv3 daemons may create L2TP/IP tunnel sockets
when UDP encapsulation is not required. When L2TP is carried
in IP packets, it used IP protocol number 115, so this port
must be enabled in firewalls.

To compile this driver as a module, choose M here. The module
will be called l2tp_ip.</help>
			</entry>
			<entry name="L2TP_ETH">
				<label>L2TP ethernet pseudowire support for L2TPv3</label>
				<help>Support for carrying raw ethernet frames over L2TPv3.

From RFC 4719 &lt;http://www.ietf.org/rfc/rfc4719.txt&gt;.

The Layer 2 Tunneling Protocol, Version 3 (L2TPv3) can be
used as a control protocol and for data encapsulation to set
up Pseudowires for transporting layer 2 Packet Data Units
across an IP network [RFC3931].

This driver provides an ethernet virtual interface for each
L2TP ethernet pseudowire instance. Standard Linux tools may
be used to assign an IP address to the local virtual
interface, or add the interface to a bridge.

If you are using L2TPv3, you will almost certainly want to
enable this option.

To compile this driver as a module, choose M here. The module
will be called l2tp_eth.
</help>
			</entry>
			<entry name="STP"/>
			<entry name="GARP"/>
			<entry name="MRP"/>
			<entry name="BRIDGE">
				<label>802.1d Ethernet Bridging</label>
				<help>If you say Y here, then your Linux box will be able to act as an
Ethernet bridge, which means that the different Ethernet segments it
is connected to will appear as one Ethernet to the participants.
Several such bridges can work together to create even larger
networks of Ethernets using the IEEE 802.1 spanning tree algorithm.
As this is a standard, Linux bridges will cooperate properly with
other third party bridge products.

In order to use the Ethernet bridge, you'll need the bridge
configuration tools; see &lt;file:Documentation/networking/bridge.txt&gt;
for location. Please read the Bridge mini-HOWTO for more
information.

If you enable iptables support along with the bridge support then you
turn your bridge into a bridging IP firewall.
iptables will then see the IP packets being bridged, so you need to
take this into account when setting up your firewall rules.
Enabling arptables support when bridging will let arptables see
bridged ARP traffic in the arptables FORWARD chain.

To compile this code as a module, choose M here: the module
will be called bridge.

If unsure, say N.</help>
			</entry>
			<entry name="BRIDGE_IGMP_SNOOPING">
				<label>IGMP/MLD snooping</label>
				<help>If you say Y here, then the Ethernet bridge will be able selectively
forward multicast traffic based on IGMP/MLD traffic received from
each port.

Say N to exclude this support and reduce the binary size.

If unsure, say Y.</help>
			</entry>
			<entry name="BRIDGE_VLAN_FILTERING">
				<label>VLAN filtering</label>
				<help>If you say Y here, then the Ethernet bridge will be able selectively
receive and forward traffic based on VLAN information in the packet
any VLAN information configured on the bridge port or bridge device.

Say N to exclude this support and reduce the binary size.

If unsure, say Y.
</help>
			</entry>
			<entry name="HAVE_NET_DSA"/>
			<entry name="NET_DSA">
				<label>Distributed Switch Architecture</label>
				<help>Say Y if you want to enable support for the hardware switches supported
by the Distributed Switch Architecture.</help>
			</entry>
			<entry name="NET_DSA_HWMON">
				<label>Distributed Switch Architecture HWMON support</label>
				<help>Say Y if you want to expose thermal sensor data on switches supported
by the Distributed Switch Architecture.

Some of those switches contain thermal sensors. This data is available
via the hwmon sysfs interface and exposes the onboard sensors.</help>
			</entry>
			<entry name="NET_DSA_TAG_BRCM"/>
			<entry name="NET_DSA_TAG_DSA"/>
			<entry name="NET_DSA_TAG_EDSA"/>
			<entry name="NET_DSA_TAG_TRAILER"/>
			<entry name="VLAN_8021Q">
				<label>802.1Q/802.1ad VLAN Support</label>
				<help>Select this and you will be able to create 802.1Q VLAN interfaces
on your Ethernet interfaces. 802.1Q VLAN supports almost
everything a regular Ethernet interface does, including
firewalling, bridging, and of course IP traffic. You will need
the 'ip' utility in order to effectively use VLANs.
See the VLAN web page for more information:
&lt;http://www.candelatech.com/~greear/vlan.html&gt;

To compile this code as a module, choose M here: the module
will be called 8021q.

If unsure, say N.</help>
			</entry>
			<entry name="VLAN_8021Q_GVRP">
				<label>GVRP (GARP VLAN Registration Protocol) support</label>
				<help>Select this to enable GVRP end-system support. GVRP is used for
automatic propagation of registered VLANs to switches.

If unsure, say N.</help>
			</entry>
			<entry name="VLAN_8021Q_MVRP">
				<label>MVRP (Multiple VLAN Registration Protocol) support</label>
				<help>Select this to enable MVRP end-system support. MVRP is used for
automatic propagation of registered VLANs to switches; it
supersedes GVRP and is not backwards-compatible.

If unsure, say N.
</help>
			</entry>
			<entry name="DECNET">
				<label>DECnet Support</label>
				<help>The DECnet networking protocol was used in many products made by
Digital (now Compaq).  It provides reliable stream and sequenced
packet communications over which run a variety of services similar
to those which run over TCP/IP.

To find some tools to use with the kernel layer support, please
look at Patrick Caulfield's web site:
&lt;http://linux-decnet.sourceforge.net/&gt;.

More detailed documentation is available in
&lt;file:Documentation/networking/decnet.txt&gt;.

Be sure to say Y to &quot;/proc file system support&quot; and &quot;Sysctl support&quot;
below when using DECnet, since you will need sysctl support to aid
in configuration at run time.

The DECnet code is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module is called decnet.</help>
			</entry>
			<entry name="DECNET_ROUTER">
				<label>DECnet: router support</label>
				<help>Add support for turning your DECnet Endnode into a level 1 or 2
router.  This is an experimental, but functional option.  If you
do say Y here, then make sure that you also say Y to &quot;Kernel/User
network link driver&quot;, &quot;Routing messages&quot; and &quot;Network packet
filtering&quot;.  The first two are required to allow configuration via
rtnetlink (you will need Alexey Kuznetsov's iproute2 package
from &lt;ftp://ftp.tux.org/pub/net/ip-routing/&gt;). The &quot;Network packet
filtering&quot; option will be required for the forthcoming routing daemon
to work.

See &lt;file:Documentation/networking/decnet.txt&gt; for more information.

</help>
			</entry>
			<entry name="LLC"/>
			<entry name="LLC2">
				<label>ANSI/IEEE 802.2 LLC type 2 Support</label>
				<help>This is a Logical Link Layer type 2, connection oriented support.
Select this if you want to have support for PF_LLC sockets.
</help>
			</entry>
			<entry name="IPX">
				<label>The IPX protocol</label>
				<help>This is support for the Novell networking protocol, IPX, commonly
used for local networks of Windows machines.  You need it if you
want to access Novell NetWare file or print servers using the Linux
Novell client ncpfs (available from
&lt;ftp://platan.vc.cvut.cz/pub/linux/ncpfs/&gt;) or from
within the Linux DOS emulator DOSEMU (read the DOSEMU-HOWTO,
available from &lt;http://www.tldp.org/docs.html#howto&gt;).  In order
to do the former, you'll also have to say Y to &quot;NCP file system
support&quot;, below.

IPX is similar in scope to IP, while SPX, which runs on top of IPX,
is similar to TCP.

To turn your Linux box into a fully featured NetWare file server and
IPX router, say Y here and fetch either lwared from
&lt;ftp://ibiblio.org/pub/Linux/system/network/daemons/&gt; or
mars_nwe from &lt;ftp://www.compu-art.de/mars_nwe/&gt;. For more
information, read the IPX-HOWTO available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

The IPX driver would enlarge your kernel by about 16 KB. To compile
this driver as a module, choose M here: the module will be called ipx.
Unless you want to integrate your Linux box with a local Novell
network, say N.</help>
			</entry>
			<entry name="IPX_INTERN">
				<label>IPX: Full internal IPX network</label>
				<help>Every IPX network has an address that identifies it. Sometimes it is
useful to give an IPX &quot;network&quot; address to your Linux box as well
(for example if your box is acting as a file server for different
IPX networks: it will then be accessible from everywhere using the
same address). The way this is done is to create a virtual internal
&quot;network&quot; inside your box and to assign an IPX address to this
network. Say Y here if you want to do this; read the IPX-HOWTO at
&lt;http://www.tldp.org/docs.html#howto&gt; for details.

The full internal IPX network enables you to allocate sockets on
different virtual nodes of the internal network. This is done by
evaluating the field sipx_node of the socket address given to the
bind call. So applications should always initialize the node field
to 0 when binding a socket on the primary network. In this case the
socket is assigned the default node that has been given to the
kernel when the internal network was created. By enabling the full
internal IPX network the cross-forwarding of packets targeted at
'special' sockets to sockets listening on the primary network is
disabled. This might break existing applications, especially RIP/SAP
daemons. A RIP/SAP daemon that works well with the full internal net
can be found on &lt;ftp://ftp.gwdg.de/pub/linux/misc/ncpfs/&gt;.

If you don't know what you are doing, say N.

</help>
			</entry>
			<entry name="ATALK">
				<label>Appletalk protocol support</label>
				<help>AppleTalk is the protocol that Apple computers can use to communicate
on a network.  If your Linux box is connected to such a network and you
wish to connect to it, say Y.  You will need to use the netatalk package
so that your Linux box can act as a print and file server for Macs as
well as access AppleTalk printers.  Check out
&lt;http://www.zettabyte.net/netatalk/&gt; on the WWW for details.
EtherTalk is the name used for AppleTalk over Ethernet and the
cheaper and slower LocalTalk is AppleTalk over a proprietary Apple
network using serial links.  EtherTalk and LocalTalk are fully
supported by Linux.

General information about how to connect Linux, Windows machines and
Macs is on the WWW at &lt;http://www.eats.com/linux_mac_win.html&gt;.  The
NET3-4-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, contains valuable
information as well.

To compile this driver as a module, choose M here: the module will be
called appletalk. You almost certainly want to compile it as a
module so you can restart your AppleTalk stack without rebooting
your machine. I hear that the GNU boycott of Apple is over, so
even politically correct people are allowed to say Y here.</help>
			</entry>
			<entry name="DEV_APPLETALK">
				<label>Appletalk interfaces support</label>
				<help>AppleTalk is the protocol that Apple computers can use to communicate
on a network.  If your Linux box is connected to such a network, and wish
to do IP over it, or you have a LocalTalk card and wish to use it to
connect to the AppleTalk network, say Y.</help>
			</entry>
			<entry name="LTPC">
				<label>Apple/Farallon LocalTalk PC support</label>
				<help>This allows you to use the AppleTalk PC card to connect to LocalTalk
networks. The card is also known as the Farallon PhoneNet PC card.
If you are in doubt, this card is the one with the 65C02 chip on it.
You also need version 1.3.3 or later of the netatalk package.
This driver is experimental, which means that it may not work.
See the file &lt;file:Documentation/networking/ltpc.txt&gt;.</help>
			</entry>
			<entry name="COPS">
				<label>COPS LocalTalk PC support</label>
				<help>This allows you to use COPS AppleTalk cards to connect to LocalTalk
networks. You also need version 1.3.3 or later of the netatalk
package. This driver is experimental, which means that it may not
work. This driver will only work if you choose &quot;AppleTalk DDP&quot;
networking support, above.
Please read the file &lt;file:Documentation/networking/cops.txt&gt;.</help>
			</entry>
			<entry name="COPS_DAYNA">
				<label>Dayna firmware support</label>
				<help>Support COPS compatible cards with Dayna style firmware (Dayna
DL2000/ Daynatalk/PC (half length), COPS LT-95, Farallon PhoneNET PC
III, Farallon PhoneNET PC II).</help>
			</entry>
			<entry name="COPS_TANGENT">
				<label>Tangent firmware support</label>
				<help>Support COPS compatible cards with Tangent style firmware (Tangent
ATB_II, Novell NL-1000, Daystar Digital LT-200.</help>
			</entry>
			<entry name="IPDDP">
				<label>Appletalk-IP driver support</label>
				<help>This allows IP networking for users who only have AppleTalk
networking available. This feature is experimental. With this
driver, you can encapsulate IP inside AppleTalk (e.g. if your Linux
box is stuck on an AppleTalk only network) or decapsulate (e.g. if
you want your Linux box to act as an Internet gateway for a zoo of
AppleTalk connected Macs). Please see the file
&lt;file:Documentation/networking/ipddp.txt&gt; for more information.

If you say Y here, the AppleTalk-IP support will be compiled into
the kernel. In this case, you can either use encapsulation or
decapsulation, but not both. With the following two questions, you
decide which one you want.

To compile the AppleTalk-IP support as a module, choose M here: the
module will be called ipddp.
In this case, you will be able to use both encapsulation and
decapsulation simultaneously, by loading two copies of the module
and specifying different values for the module option ipddp_mode.</help>
			</entry>
			<entry name="IPDDP_ENCAP">
				<label>IP to Appletalk-IP Encapsulation support</label>
				<help>If you say Y here, the AppleTalk-IP code will be able to encapsulate
IP packets inside AppleTalk frames; this is useful if your Linux box
is stuck on an AppleTalk network (which hopefully contains a
decapsulator somewhere). Please see
&lt;file:Documentation/networking/ipddp.txt&gt; for more information.
</help>
			</entry>
			<entry name="X25">
				<label>CCITT X.25 Packet Layer</label>
				<help>X.25 is a set of standardized network protocols, similar in scope to
frame relay; the one physical line from your box to the X.25 network
entry point can carry several logical point-to-point connections
(called &quot;virtual circuits&quot;) to other computers connected to the X.25
network. Governments, banks, and other organizations tend to use it
to connect to each other or to form Wide Area Networks (WANs). Many
countries have public X.25 networks. X.25 consists of two
protocols: the higher level Packet Layer Protocol (PLP) (say Y here
if you want that) and the lower level data link layer protocol LAPB
(say Y to &quot;LAPB Data Link Driver&quot; below if you want that).

You can read more about X.25 at &lt;http://www.sangoma.com/tutorials/x25/&gt; and
&lt;http://docwiki.cisco.com/wiki/X.25&gt;.
Information about X.25 for Linux is contained in the files
&lt;file:Documentation/networking/x25.txt&gt; and
&lt;file:Documentation/networking/x25-iface.txt&gt;.

One connects to an X.25 network either with a dedicated network card
using the X.21 protocol (not yet supported by Linux) or one can do
X.25 over a standard telephone line using an ordinary modem (say Y
to &quot;X.25 async driver&quot; below) or over Ethernet using an ordinary
Ethernet card and the LAPB over Ethernet (say Y to &quot;LAPB Data Link
Driver&quot; and &quot;LAPB over Ethernet driver&quot; below).

To compile this driver as a module, choose M here: the module
will be called x25. If unsure, say N.


</help>
			</entry>
			<entry name="LAPB">
				<label>LAPB Data Link Driver</label>
				<help>Link Access Procedure, Balanced (LAPB) is the data link layer (i.e.
the lower) part of the X.25 protocol. It offers a reliable
connection service to exchange data frames with one other host, and
it is used to transport higher level protocols (mostly X.25 Packet
Layer, the higher part of X.25, but others are possible as well).
Usually, LAPB is used with specialized X.21 network cards, but Linux
currently supports LAPB only over Ethernet connections. If you want
to use LAPB connections over Ethernet, say Y here and to &quot;LAPB over
Ethernet driver&quot; below. Read
&lt;file:Documentation/networking/lapb-module.txt&gt; for technical
details.

To compile this driver as a module, choose M here: the
module will be called lapb.  If unsure, say N.
</help>
			</entry>
			<entry name="PHONET">
				<label>Phonet protocols family</label>
				<help>The Phone Network protocol (PhoNet) is a packet-oriented
communication protocol developed by Nokia for use with its modems.

This is required for Maemo to use cellular data connectivity (if
supported). It can also be used to control Nokia phones
from a Linux computer, although AT commands may be easier to use.

To compile this driver as a module, choose M here: the module
will be called phonet. If unsure, say N.
</help>
			</entry>
			<entry name="_6LOWPAN">
				<label>6LoWPAN Support</label>
				<help>This enables IPv6 over Low power Wireless Personal Area Network -
&quot;6LoWPAN&quot; which is supported by IEEE 802.15.4 or Bluetooth stacks.</help>
			</entry>
			<entry name="_6LOWPAN_DEBUGFS">
				<label>6LoWPAN debugfs support</label>
				<help>This enables 6LoWPAN debugfs support. For example to manipulate
IPHC context information at runtime.</help>
			</entry>
			<entry name="_6LOWPAN_NHC">
				<label>Next Header and Generic Header Compression Support</label>
				<help>Support for next header and generic header compression defined in
RFC6282 and RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_DEST">
				<label>Destination Options Header Support</label>
				<help>6LoWPAN IPv6 Destination Options Header compression according to
RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_FRAGMENT">
				<label>Fragment Header Support</label>
				<help>6LoWPAN IPv6 Fragment Header compression according to RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_HOP">
				<label>Hop-by-Hop Options Header Support</label>
				<help>6LoWPAN IPv6 Hop-by-Hop Options Header compression according to
RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_IPV6">
				<label>IPv6 Header Support</label>
				<help>6LoWPAN IPv6 Header compression according to RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_MOBILITY">
				<label>Mobility Header Support</label>
				<help>6LoWPAN IPv6 Mobility Header compression according to RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_ROUTING">
				<label>Routing Header Support</label>
				<help>6LoWPAN IPv6 Routing Header compression according to RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_NHC_UDP">
				<label>UDP Header Support</label>
				<help>6LoWPAN IPv6 UDP Header compression according to RFC6282.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_EXT_HDR_HOP">
				<label>GHC Hop-by-Hop Options Header Support</label>
				<help>6LoWPAN IPv6 Hop-by-Hop option generic header compression according
to RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_UDP">
				<label>GHC UDP Support</label>
				<help>6LoWPAN IPv6 UDP generic header compression according to RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_ICMPV6">
				<label>GHC ICMPv6 Support</label>
				<help>6LoWPAN IPv6 ICMPv6 generic header compression according to RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_EXT_HDR_DEST">
				<label>GHC Destination Options Header Support</label>
				<help>6LoWPAN IPv6 destination option generic header compression according
to RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_EXT_HDR_FRAG">
				<label>GHC Fragmentation Options Header Support</label>
				<help>6LoWPAN IPv6 fragmentation option generic header compression
according to RFC7400.</help>
			</entry>
			<entry name="_6LOWPAN_GHC_EXT_HDR_ROUTE">
				<label>GHC Routing Options Header Support</label>
				<help>6LoWPAN IPv6 routing option generic header compression according
to RFC7400.</help>
			</entry>
			<entry name="IEEE802154">
				<label>IEEE Std 802.15.4 Low-Rate Wireless Personal Area Networks support</label>
				<help>IEEE Std 802.15.4 defines a low data rate, low power and low
complexity short range wireless personal area networks. It was
designed to organise networks of sensors, switches, etc automation
devices. Maximum allowed data rate is 250 kb/s and typical personal
operating space around 10m.

Say Y here to compile LR-WPAN support into the kernel or say M to
compile it as modules.</help>
			</entry>
			<entry name="IEEE802154_NL802154_EXPERIMENTAL">
				<label>IEEE 802.15.4 experimental netlink support</label>
				<help>Adds experimental netlink support for nl802154.</help>
			</entry>
			<entry name="IEEE802154_SOCKET">
				<label>IEEE 802.15.4 socket interface</label>
				<help>Socket interface for IEEE 802.15.4. Contains DGRAM sockets interface
for 802.15.4 dataframes. Also RAW socket interface to build MAC
header from userspace.</help>
			</entry>
			<entry name="IEEE802154_6LOWPAN">
				<label>6lowpan support over IEEE 802.15.4</label>
				<help>IPv6 compression over IEEE 802.15.4.
</help>
			</entry>
			<entry name="MAC802154">
				<label>Generic IEEE 802.15.4 Soft Networking Stack (mac802154)</label>
				<help>This option enables the hardware independent IEEE 802.15.4
networking stack for SoftMAC devices (the ones implementing
only PHY level of IEEE 802.15.4 standard).

Note: this implementation is neither certified, nor feature
complete! Compatibility with other implementations hasn't
been tested yet!

If you plan to use HardMAC IEEE 802.15.4 devices, you can
say N here. Alternatively you can say M to compile it as
module.
</help>
			</entry>
			<entry name="NET_SCHED">
				<label>QoS and/or fair queueing</label>
				<help>When the kernel has several packets to send out over a network
device, it has to decide which ones to send first, which ones to
delay, and which ones to drop. This is the job of the queueing
disciplines, several different algorithms for how to do this
&quot;fairly&quot; have been proposed.

If you say N here, you will get the standard packet scheduler, which
is a FIFO (first come, first served). If you say Y here, you will be
able to choose from among several alternative algorithms which can
then be attached to different network devices. This is useful for
example if some of your network devices are real time devices that
need a certain minimum data flow rate, or if you need to limit the
maximum data flow rate for traffic which matches specified criteria.
This code is considered to be experimental.

To administer these schedulers, you'll need the user-level utilities
from the package iproute2+tc at
&lt;https://www.kernel.org/pub/linux/utils/net/iproute2/&gt;.  That package
also contains some documentation; for more, check out
&lt;http://www.linuxfoundation.org/collaborate/workgroups/networking/iproute2&gt;.

This Quality of Service (QoS) support will enable you to use
Differentiated Services (diffserv) and Resource Reservation Protocol
(RSVP) on your Linux router if you also say Y to the corresponding
classifiers below.  Documentation and software is at
&lt;http://diffserv.sourceforge.net/&gt;.

If you say Y here and to &quot;/proc file system&quot; below, you will be able
to read status information about packet schedulers from the file
/proc/net/psched.

The available schedulers are listed in the following questions; you
can say Y to as many as you like. If unsure, say N now.</help>
			</entry>
			<entry name="NET_SCH_CBQ">
				<label>Class Based Queueing (CBQ)</label>
				<help>Say Y here if you want to use the Class-Based Queueing (CBQ) packet
scheduling algorithm. This algorithm classifies the waiting packets
into a tree-like hierarchy of classes; the leaves of this tree are
in turn scheduled by separate algorithms.

See the top of &lt;file:net/sched/sch_cbq.c&gt; for more details.

CBQ is a commonly used scheduler, so if you're unsure, you should
say Y here. Then say Y to all the queueing algorithms below that you
want to use as leaf disciplines.

To compile this code as a module, choose M here: the
module will be called sch_cbq.</help>
			</entry>
			<entry name="NET_SCH_HTB">
				<label>Hierarchical Token Bucket (HTB)</label>
				<help>Say Y here if you want to use the Hierarchical Token Buckets (HTB)
packet scheduling algorithm. See
&lt;http://luxik.cdi.cz/~devik/qos/htb/&gt; for complete manual and
in-depth articles.

HTB is very similar to CBQ regarding its goals however is has
different properties and different algorithm.

To compile this code as a module, choose M here: the
module will be called sch_htb.</help>
			</entry>
			<entry name="NET_SCH_HFSC">
				<label>Hierarchical Fair Service Curve (HFSC)</label>
				<help>Say Y here if you want to use the Hierarchical Fair Service Curve
(HFSC) packet scheduling algorithm.

To compile this code as a module, choose M here: the
module will be called sch_hfsc.</help>
			</entry>
			<entry name="NET_SCH_ATM">
				<label>ATM Virtual Circuits (ATM)</label>
				<help>Say Y here if you want to use the ATM pseudo-scheduler.  This
provides a framework for invoking classifiers, which in turn
select classes of this queuing discipline.  Each class maps
the flow(s) it is handling to a given virtual circuit.

See the top of &lt;file:net/sched/sch_atm.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_atm.</help>
			</entry>
			<entry name="NET_SCH_PRIO">
				<label>Multi Band Priority Queueing (PRIO)</label>
				<help>Say Y here if you want to use an n-band priority queue packet
scheduler.

To compile this code as a module, choose M here: the
module will be called sch_prio.</help>
			</entry>
			<entry name="NET_SCH_MULTIQ">
				<label>Hardware Multiqueue-aware Multi Band Queuing (MULTIQ)</label>
				<help>Say Y here if you want to use an n-band queue packet scheduler
to support devices that have multiple hardware transmit queues.

To compile this code as a module, choose M here: the
module will be called sch_multiq.</help>
			</entry>
			<entry name="NET_SCH_RED">
				<label>Random Early Detection (RED)</label>
				<help>Say Y here if you want to use the Random Early Detection (RED)
packet scheduling algorithm.

See the top of &lt;file:net/sched/sch_red.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_red.</help>
			</entry>
			<entry name="NET_SCH_SFB">
				<label>Stochastic Fair Blue (SFB)</label>
				<help>Say Y here if you want to use the Stochastic Fair Blue (SFB)
packet scheduling algorithm.

See the top of &lt;file:net/sched/sch_sfb.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_sfb.</help>
			</entry>
			<entry name="NET_SCH_SFQ">
				<label>Stochastic Fairness Queueing (SFQ)</label>
				<help>Say Y here if you want to use the Stochastic Fairness Queueing (SFQ)
packet scheduling algorithm.

See the top of &lt;file:net/sched/sch_sfq.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_sfq.</help>
			</entry>
			<entry name="NET_SCH_TEQL">
				<label>True Link Equalizer (TEQL)</label>
				<help>Say Y here if you want to use the True Link Equalizer (TLE) packet
scheduling algorithm. This queueing discipline allows the combination
of several physical devices into one virtual device.

See the top of &lt;file:net/sched/sch_teql.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_teql.</help>
			</entry>
			<entry name="NET_SCH_TBF">
				<label>Token Bucket Filter (TBF)</label>
				<help>Say Y here if you want to use the Token Bucket Filter (TBF) packet
scheduling algorithm.

See the top of &lt;file:net/sched/sch_tbf.c&gt; for more details.

To compile this code as a module, choose M here: the
module will be called sch_tbf.</help>
			</entry>
			<entry name="NET_SCH_GRED">
				<label>Generic Random Early Detection (GRED)</label>
				<help>Say Y here if you want to use the Generic Random Early Detection
(GRED) packet scheduling algorithm for some of your network devices
(see the top of &lt;file:net/sched/sch_red.c&gt; for details and
references about the algorithm).

To compile this code as a module, choose M here: the
module will be called sch_gred.</help>
			</entry>
			<entry name="NET_SCH_DSMARK">
				<label>Differentiated Services marker (DSMARK)</label>
				<help>Say Y if you want to schedule packets according to the
Differentiated Services architecture proposed in RFC 2475.
Technical information on this method, with pointers to associated
RFCs, is available at &lt;http://www.gta.ufrj.br/diffserv/&gt;.

To compile this code as a module, choose M here: the
module will be called sch_dsmark.</help>
			</entry>
			<entry name="NET_SCH_NETEM">
				<label>Network emulator (NETEM)</label>
				<help>Say Y if you want to emulate network delay, loss, and packet
re-ordering. This is often useful to simulate networks when
testing applications or protocols.

To compile this driver as a module, choose M here: the module
will be called sch_netem.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_DRR">
				<label>Deficit Round Robin scheduler (DRR)</label>
				<help>Say Y here if you want to use the Deficit Round Robin (DRR) packet
scheduling algorithm.

To compile this driver as a module, choose M here: the module
will be called sch_drr.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_MQPRIO">
				<label>Multi-queue priority scheduler (MQPRIO)</label>
				<help>Say Y here if you want to use the Multi-queue Priority scheduler.
This scheduler allows QOS to be offloaded on NICs that have support
for offloading QOS schedulers.

To compile this driver as a module, choose M here: the module will
be called sch_mqprio.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_CHOKE">
				<label>CHOose and Keep responsive flow scheduler (CHOKE)</label>
				<help>Say Y here if you want to use the CHOKe packet scheduler (CHOose
and Keep for responsive flows, CHOose and Kill for unresponsive
flows). This is a variation of RED which trys to penalize flows
that monopolize the queue.

To compile this code as a module, choose M here: the
module will be called sch_choke.</help>
			</entry>
			<entry name="NET_SCH_QFQ">
				<label>Quick Fair Queueing scheduler (QFQ)</label>
				<help>Say Y here if you want to use the Quick Fair Queueing Scheduler (QFQ)
packet scheduling algorithm.

To compile this driver as a module, choose M here: the module
will be called sch_qfq.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_CODEL">
				<label>Controlled Delay AQM (CODEL)</label>
				<help>Say Y here if you want to use the Controlled Delay (CODEL)
packet scheduling algorithm.

To compile this driver as a module, choose M here: the module
will be called sch_codel.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_FQ_CODEL">
				<label>Fair Queue Controlled Delay AQM (FQ_CODEL)</label>
				<help>Say Y here if you want to use the FQ Controlled Delay (FQ_CODEL)
packet scheduling algorithm.

To compile this driver as a module, choose M here: the module
will be called sch_fq_codel.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_FQ">
				<label>Fair Queue</label>
				<help>Say Y here if you want to use the FQ packet scheduling algorithm.

FQ does flow separation, and is able to respect pacing requirements
set by TCP stack into sk-&gt;sk_pacing_rate (for localy generated
traffic)

To compile this driver as a module, choose M here: the module
will be called sch_fq.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_HHF">
				<label>Heavy-Hitter Filter (HHF)</label>
				<help>Say Y here if you want to use the Heavy-Hitter Filter (HHF)
packet scheduling algorithm.

To compile this driver as a module, choose M here: the module
will be called sch_hhf.</help>
			</entry>
			<entry name="NET_SCH_PIE">
				<label>Proportional Integral controller Enhanced (PIE) scheduler</label>
				<help>Say Y here if you want to use the Proportional Integral controller
Enhanced scheduler packet scheduling algorithm.
For more information, please see
http://tools.ietf.org/html/draft-pan-tsvwg-pie-00

To compile this driver as a module, choose M here: the module
will be called sch_pie.

If unsure, say N.</help>
			</entry>
			<entry name="NET_SCH_INGRESS">
				<label>Ingress/classifier-action Qdisc</label>
				<help>Say Y here if you want to use classifiers for incoming and/or outgoing
packets. This qdisc doesn't do anything else besides running classifiers,
which can also have actions attached to them. In case of outgoing packets,
classifiers that this qdisc holds are executed in the transmit path
before real enqueuing to an egress qdisc happens.

If unsure, say Y.

To compile this code as a module, choose M here: the module will be
called sch_ingress with alias of sch_clsact.</help>
			</entry>
			<entry name="NET_SCH_PLUG">
				<label>Plug network traffic until release (PLUG)</label>
				<help>
This queuing discipline allows userspace to plug/unplug a network
output queue, using the netlink interface.  When it receives an
enqueue command it inserts a plug into the outbound queue that
causes following packets to enqueue until a dequeue command arrives
over netlink, causing the plug to be removed and resuming the normal
packet flow.

This module also provides a generic &quot;network output buffering&quot;
functionality (aka output commit), wherein upon arrival of a dequeue
command, only packets up to the first plug are released for delivery.
The Remus HA project uses this module to enable speculative execution
of virtual machines by allowing the generated network output to be rolled
back if needed.

For more information, please refer to &lt;http://wiki.xenproject.org/wiki/Remus&gt;

Say Y here if you are using this kernel for Xen dom0 and
want to protect Xen guests with Remus.

To compile this code as a module, choose M here: the
module will be called sch_plug.

comment &quot;Classification&quot;

config NET_CLS
bool

config NET_CLS_BASIC
tristate &quot;Elementary classification (BASIC)&quot;
select NET_CLS
---help---
Say Y here if you want to be able to classify packets using
only extended matches and actions.

To compile this code as a module, choose M here: the
module will be called cls_basic.

config NET_CLS_TCINDEX
tristate &quot;Traffic-Control Index (TCINDEX)&quot;
select NET_CLS
---help---
Say Y here if you want to be able to classify packets based on
traffic control indices. You will want this feature if you want
to implement Differentiated Services together with DSMARK.

To compile this code as a module, choose M here: the
module will be called cls_tcindex.

config NET_CLS_ROUTE4
tristate &quot;Routing decision (ROUTE)&quot;
depends on INET
select IP_ROUTE_CLASSID
select NET_CLS
---help---
If you say Y here, you will be able to classify packets
according to the route table entry they matched.

To compile this code as a module, choose M here: the
module will be called cls_route.

config NET_CLS_FW
tristate &quot;Netfilter mark (FW)&quot;
select NET_CLS
---help---
If you say Y here, you will be able to classify packets
according to netfilter/firewall marks.

To compile this code as a module, choose M here: the
module will be called cls_fw.

config NET_CLS_U32
tristate &quot;Universal 32bit comparisons w/ hashing (U32)&quot;
select NET_CLS
---help---
Say Y here to be able to classify packets using a universal
32bit pieces based comparison scheme.

To compile this code as a module, choose M here: the
module will be called cls_u32.

config CLS_U32_PERF
bool &quot;Performance counters support&quot;
depends on NET_CLS_U32
---help---
Say Y here to make u32 gather additional statistics useful for
fine tuning u32 classifiers.

config CLS_U32_MARK
bool &quot;Netfilter marks support&quot;
depends on NET_CLS_U32
---help---
Say Y here to be able to use netfilter marks as u32 key.

config NET_CLS_RSVP
tristate &quot;IPv4 Resource Reservation Protocol (RSVP)&quot;
select NET_CLS
---help---
The Resource Reservation Protocol (RSVP) permits end systems to
request a minimum and maximum data flow rate for a connection; this
is important for real time data such as streaming sound or video.

Say Y here if you want to be able to classify outgoing packets based
on their RSVP requests.

To compile this code as a module, choose M here: the
module will be called cls_rsvp.

config NET_CLS_RSVP6
tristate &quot;IPv6 Resource Reservation Protocol (RSVP6)&quot;
select NET_CLS
---help---
The Resource Reservation Protocol (RSVP) permits end systems to
request a minimum and maximum data flow rate for a connection; this
is important for real time data such as streaming sound or video.

Say Y here if you want to be able to classify outgoing packets based
on their RSVP requests and you are using the IPv6 protocol.

To compile this code as a module, choose M here: the
module will be called cls_rsvp6.

config NET_CLS_FLOW
tristate &quot;Flow classifier&quot;
select NET_CLS
---help---
If you say Y here, you will be able to classify packets based on
a configurable combination of packet keys. This is mostly useful
in combination with SFQ.

To compile this code as a module, choose M here: the
module will be called cls_flow.

config NET_CLS_CGROUP
tristate &quot;Control Group Classifier&quot;
select NET_CLS
select CGROUP_NET_CLASSID
depends on CGROUPS
---help---
Say Y here if you want to classify packets based on the control
cgroup of their process.

To compile this code as a module, choose M here: the
module will be called cls_cgroup.

config NET_CLS_BPF
tristate &quot;BPF-based classifier&quot;
select NET_CLS
---help---
If you say Y here, you will be able to classify packets based on
programmable BPF (JIT'ed) filters as an alternative to ematches.

To compile this code as a module, choose M here: the module will
be called cls_bpf.

config NET_CLS_FLOWER
tristate &quot;Flower classifier&quot;
select NET_CLS
---help---
If you say Y here, you will be able to classify packets based on
a configurable combination of packet keys and masks.

To compile this code as a module, choose M here: the module will
be called cls_flower.

config NET_CLS_MATCHALL
tristate &quot;Match-all classifier&quot;
select NET_CLS
---help---
If you say Y here, you will be able to classify packets based on
nothing. Every packet will match.

To compile this code as a module, choose M here: the module will
be called cls_matchall.

config NET_EMATCH
bool &quot;Extended Matches&quot;
select NET_CLS
---help---
Say Y here if you want to use extended matches on top of classifiers
and select the extended matches below.

Extended matches are small classification helpers not worth writing
a separate classifier for.

A recent version of the iproute2 package is required to use
extended matches.

config NET_EMATCH_STACK
int &quot;Stack size&quot;
depends on NET_EMATCH
default &quot;32&quot;
---help---
Size of the local stack variable used while evaluating the tree of
ematches. Limits the depth of the tree, i.e. the number of
encapsulated precedences. Every level requires 4 bytes of additional
stack space.

config NET_EMATCH_CMP
tristate &quot;Simple packet data comparison&quot;
depends on NET_EMATCH
---help---
Say Y here if you want to be able to classify packets based on
simple packet data comparisons for 8, 16, and 32bit values.

To compile this code as a module, choose M here: the
module will be called em_cmp.

config NET_EMATCH_NBYTE
tristate &quot;Multi byte comparison&quot;
depends on NET_EMATCH
---help---
Say Y here if you want to be able to classify packets based on
multiple byte comparisons mainly useful for IPv6 address comparisons.

To compile this code as a module, choose M here: the
module will be called em_nbyte.

config NET_EMATCH_U32
tristate &quot;U32 key&quot;
depends on NET_EMATCH
---help---
Say Y here if you want to be able to classify packets using
the famous u32 key in combination with logic relations.

To compile this code as a module, choose M here: the
module will be called em_u32.

config NET_EMATCH_META
tristate &quot;Metadata&quot;
depends on NET_EMATCH
---help---
Say Y here if you want to be able to classify packets based on
metadata such as load average, netfilter attributes, socket
attributes and routing decisions.

To compile this code as a module, choose M here: the
module will be called em_meta.

config NET_EMATCH_TEXT
tristate &quot;Textsearch&quot;
depends on NET_EMATCH
select TEXTSEARCH
select TEXTSEARCH_KMP
select TEXTSEARCH_BM
select TEXTSEARCH_FSM
---help---
Say Y here if you want to be able to classify packets based on
textsearch comparisons.

To compile this code as a module, choose M here: the
module will be called em_text.

config NET_EMATCH_CANID
tristate &quot;CAN Identifier&quot;
depends on NET_EMATCH &amp;&amp; (CAN=y || CAN=m)
---help---
Say Y here if you want to be able to classify CAN frames based
on CAN Identifier.

To compile this code as a module, choose M here: the
module will be called em_canid.

config NET_EMATCH_IPSET
tristate &quot;IPset&quot;
depends on NET_EMATCH &amp;&amp; IP_SET
---help---
Say Y here if you want to be able to classify packets based on
ipset membership.

To compile this code as a module, choose M here: the
module will be called em_ipset.

config NET_CLS_ACT
bool &quot;Actions&quot;
---help---
Say Y here if you want to use traffic control actions. Actions
get attached to classifiers and are invoked after a successful
classification. They are used to overwrite the classification
result, instantly drop or redirect packets, etc.

A recent version of the iproute2 package is required to use
extended matches.

config NET_ACT_POLICE
tristate &quot;Traffic Policing&quot;
depends on NET_CLS_ACT
---help---
Say Y here if you want to do traffic policing, i.e. strict
bandwidth limiting. This action replaces the existing policing
module.

To compile this code as a module, choose M here: the
module will be called act_police.

config NET_ACT_GACT
tristate &quot;Generic actions&quot;
depends on NET_CLS_ACT
---help---
Say Y here to take generic actions such as dropping and
accepting packets.

To compile this code as a module, choose M here: the
module will be called act_gact.

config GACT_PROB
bool &quot;Probability support&quot;
depends on NET_ACT_GACT
---help---
Say Y here to use the generic action randomly or deterministically.

config NET_ACT_MIRRED
tristate &quot;Redirecting and Mirroring&quot;
depends on NET_CLS_ACT
---help---
Say Y here to allow packets to be mirrored or redirected to
other devices.

To compile this code as a module, choose M here: the
module will be called act_mirred.

config NET_ACT_IPT
tristate &quot;IPtables targets&quot;
depends on NET_CLS_ACT &amp;&amp; NETFILTER &amp;&amp; IP_NF_IPTABLES
---help---
Say Y here to be able to invoke iptables targets after successful
classification.

To compile this code as a module, choose M here: the
module will be called act_ipt.

config NET_ACT_NAT
tristate &quot;Stateless NAT&quot;
depends on NET_CLS_ACT
---help---
Say Y here to do stateless NAT on IPv4 packets.  You should use
netfilter for NAT unless you know what you are doing.

To compile this code as a module, choose M here: the
module will be called act_nat.

config NET_ACT_PEDIT
tristate &quot;Packet Editing&quot;
depends on NET_CLS_ACT
---help---
Say Y here if you want to mangle the content of packets.

To compile this code as a module, choose M here: the
module will be called act_pedit.

config NET_ACT_SIMP
tristate &quot;Simple Example (Debug)&quot;
depends on NET_CLS_ACT
---help---
Say Y here to add a simple action for demonstration purposes.
It is meant as an example and for debugging purposes. It will
print a configured policy string followed by the packet count
to the console for every packet that passes by.

If unsure, say N.

To compile this code as a module, choose M here: the
module will be called act_simple.

config NET_ACT_SKBEDIT
tristate &quot;SKB Editing&quot;
depends on NET_CLS_ACT
---help---
Say Y here to change skb priority or queue_mapping settings.

If unsure, say N.

To compile this code as a module, choose M here: the
module will be called act_skbedit.

config NET_ACT_CSUM
tristate &quot;Checksum Updating&quot;
depends on NET_CLS_ACT &amp;&amp; INET
---help---
Say Y here to update some common checksum after some direct
packet alterations.

To compile this code as a module, choose M here: the
module will be called act_csum.

config NET_ACT_VLAN
tristate &quot;Vlan manipulation&quot;
depends on NET_CLS_ACT
---help---
Say Y here to push or pop vlan headers.

If unsure, say N.

To compile this code as a module, choose M here: the
module will be called act_vlan.

config NET_ACT_BPF
tristate &quot;BPF based action&quot;
depends on NET_CLS_ACT
---help---
Say Y here to execute BPF code on packets. The BPF code will decide
if the packet should be dropped or not.

If unsure, say N.

To compile this code as a module, choose M here: the
module will be called act_bpf.

config NET_ACT_CONNMARK
tristate &quot;Netfilter Connection Mark Retriever&quot;
depends on NET_CLS_ACT &amp;&amp; NETFILTER &amp;&amp; IP_NF_IPTABLES
depends on NF_CONNTRACK &amp;&amp; NF_CONNTRACK_MARK
---help---
Say Y here to allow retrieving of conn mark

If unsure, say N.

To compile this code as a module, choose M here: the
module will be called act_connmark.

config NET_ACT_IFE
tristate &quot;Inter-FE action based on IETF ForCES InterFE LFB&quot;
depends on NET_CLS_ACT
---help---
Say Y here to allow for sourcing and terminating metadata
For details refer to netdev01 paper:
&quot;Distributing Linux Traffic Control Classifier-Action Subsystem&quot;
Authors: Jamal Hadi Salim and Damascene M. Joachimpillai

To compile this code as a module, choose M here: the
module will be called act_ife.

config NET_IFE_SKBMARK
tristate &quot;Support to encoding decoding skb mark on IFE action&quot;
depends on NET_ACT_IFE
---help---

config NET_IFE_SKBPRIO
tristate &quot;Support to encoding decoding skb prio on IFE action&quot;
depends on NET_ACT_IFE
---help---

config NET_CLS_IND
bool &quot;Incoming device classification&quot;
depends on NET_CLS_U32 || NET_CLS_FW
---help---
Say Y here to extend the u32 and fw classifier to support
classification based on the incoming device. This option is
likely to disappear in favour of the metadata ematch.

endif # NET_SCHED

config NET_SCH_FIFO
bool
</help>
			</entry>
			<entry name="DCB">
				<label>Data Center Bridging support</label>
				<help>This enables support for configuring Data Center Bridging (DCB)
features on DCB capable Ethernet adapters via rtnetlink.  Say 'Y'
if you have a DCB capable Ethernet adapter which supports this
interface and you are connected to a DCB capable switch.

DCB is a collection of Ethernet enhancements which allow DCB capable
NICs and switches to support network traffic with differing
requirements (highly reliable, no drops vs. best effort vs. low
latency) to co-exist on Ethernet.

DCB features include:
Enhanced Transmission Selection (aka Priority Grouping) - provides a
framework for assigning bandwidth guarantees to traffic classes.
Priority-based Flow Control (PFC) - a MAC control pause frame which
works at the granularity of the 802.1p priority instead of the
link (802.3x).

If unsure, say N.
</help>
			</entry>
			<entry name="DNS_RESOLVER">
				<label>DNS Resolver support</label>
				<help>Saying Y here will include support for the DNS Resolver key type
which can be used to make upcalls to perform DNS lookups in
userspace.

DNS Resolver is used to query DNS server for information.  Examples
being resolving a UNC hostname element to an IP address for CIFS or
performing a DNS query for AFSDB records so that AFS can locate a
cell's volume location database servers.

DNS Resolver is used by the CIFS and AFS modules, and would support
SMB2 later.  DNS Resolver is supported by the userspace upcall
helper &quot;/sbin/dns.resolver&quot; via /etc/request-key.conf.

See &lt;file:Documentation/networking/dns_resolver.txt&gt; for further
information.

To compile this as a module, choose M here: the module will be called
dnsresolver.

If unsure, say N.
</help>
			</entry>
			<entry name="BATMAN_ADV">
				<label>B.A.T.M.A.N. Advanced Meshing Protocol</label>
				<help>B.A.T.M.A.N. (better approach to mobile ad-hoc networking) is
a routing protocol for multi-hop ad-hoc mesh networks. The
networks may be wired or wireless. See
https://www.open-mesh.org/ for more information and user space
tools.</help>
			</entry>
			<entry name="BATMAN_ADV_BATMAN_V">
				<label>B.A.T.M.A.N. V protocol (experimental)</label>
				<help>This option enables the B.A.T.M.A.N. V protocol, the successor
of the currently used B.A.T.M.A.N. IV protocol. The main
changes include splitting of the OGM protocol into a neighbor
discovery protocol (Echo Location Protocol, ELP) and a new OGM
Protocol OGMv2 for flooding protocol information through the
network, as well as a throughput based metric.
B.A.T.M.A.N. V is currently considered experimental and not
compatible to B.A.T.M.A.N. IV networks.</help>
			</entry>
			<entry name="BATMAN_ADV_BLA">
				<label>Bridge Loop Avoidance</label>
				<help>This option enables BLA (Bridge Loop Avoidance), a mechanism
to avoid Ethernet frames looping when mesh nodes are connected
to both the same LAN and the same mesh. If you will never use
more than one mesh node in the same LAN, you can safely remove
this feature and save some space.</help>
			</entry>
			<entry name="BATMAN_ADV_DAT">
				<label>Distributed ARP Table</label>
				<help>This option enables DAT (Distributed ARP Table), a DHT based
mechanism that increases ARP reliability on sparse wireless
mesh networks. If you think that your network does not need
this option you can safely remove it and save some space.</help>
			</entry>
			<entry name="BATMAN_ADV_NC">
				<label>Network Coding</label>
				<help>This option enables network coding, a mechanism that aims to
increase the overall network throughput by fusing multiple
packets in one transmission.
Note that interfaces controlled by batman-adv must be manually
configured to have promiscuous mode enabled in order to make
network coding work.
If you think that your network does not need this feature you
can safely disable it and save some space.</help>
			</entry>
			<entry name="BATMAN_ADV_MCAST">
				<label>Multicast optimisation</label>
				<help>This option enables the multicast optimisation which aims to
reduce the air overhead while improving the reliability of
multicast messages.</help>
			</entry>
			<entry name="BATMAN_ADV_DEBUG">
				<label>B.A.T.M.A.N. debugging</label>
				<help>This is an option for use by developers; most people should
say N here. This enables compilation of support for
outputting debugging information to the kernel log. The
output is controlled via the module parameter debug.
</help>
			</entry>
			<entry name="OPENVSWITCH">
				<label>Open vSwitch</label>
				<help>Open vSwitch is a multilayer Ethernet switch targeted at virtualized
environments.  In addition to supporting a variety of features
expected in a traditional hardware switch, it enables fine-grained
programmatic extension and flow-based control of the network.  This
control is useful in a wide variety of applications but is
particularly important in multi-server virtualization deployments,
which are often characterized by highly dynamic endpoints and the
need to maintain logical abstractions for multiple tenants.

The Open vSwitch datapath provides an in-kernel fast path for packet
forwarding.  It is complemented by a userspace daemon, ovs-vswitchd,
which is able to accept configuration from a variety of sources and
translate it into packet processing rules.

See http://openvswitch.org for more information and userspace
utilities.

To compile this code as a module, choose M here: the module will be
called openvswitch.

If unsure, say N.</help>
			</entry>
			<entry name="OPENVSWITCH_GRE">
				<label>Open vSwitch GRE tunneling support</label>
				<help>If you say Y here, then the Open vSwitch will be able create GRE
vport.

Say N to exclude this support and reduce the binary size.

If unsure, say Y.</help>
			</entry>
			<entry name="OPENVSWITCH_VXLAN">
				<label>Open vSwitch VXLAN tunneling support</label>
				<help>If you say Y here, then the Open vSwitch will be able create vxlan vport.

Say N to exclude this support and reduce the binary size.

If unsure, say Y.</help>
			</entry>
			<entry name="OPENVSWITCH_GENEVE">
				<label>Open vSwitch Geneve tunneling support</label>
				<help>If you say Y here, then the Open vSwitch will be able create geneve vport.

Say N to exclude this support and reduce the binary size.
</help>
			</entry>
			<entry name="VSOCKETS">
				<label>Virtual Socket protocol</label>
				<help>Virtual Socket Protocol is a socket protocol similar to TCP/IP
allowing communication between Virtual Machines and hypervisor
or host.

You should also select one or more hypervisor-specific transports
below.

To compile this driver as a module, choose M here: the module
will be called vsock. If unsure, say N.</help>
			</entry>
			<entry name="VMWARE_VMCI_VSOCKETS">
				<label>VMware VMCI transport for Virtual Sockets</label>
				<help>This module implements a VMCI transport for Virtual Sockets.

Enable this transport if your Virtual Machine runs on a VMware
hypervisor.

To compile this driver as a module, choose M here: the module
will be called vmw_vsock_vmci_transport. If unsure, say N.</help>
			</entry>
			<entry name="VIRTIO_VSOCKETS">
				<label>virtio transport for Virtual Sockets</label>
				<help>This module implements a virtio transport for Virtual Sockets.

Enable this transport if your Virtual Machine host supports Virtual
Sockets over virtio.

To compile this driver as a module, choose M here: the module will be
called vmw_vsock_virtio_transport. If unsure, say N.</help>
			</entry>
			<entry name="VIRTIO_VSOCKETS_COMMON">
				<help>This option is selected by any driver which needs to access
the virtio_vsock.  The module will be called
vmw_vsock_virtio_transport_common.
</help>
			</entry>
			<entry name="NETLINK_DIAG">
				<label>NETLINK: socket monitoring interface</label>
				<help>Support for NETLINK socket monitoring interface used by the ss tool.
If unsure, say Y.
</help>
			</entry>
			<entry name="MPLS">
				<label>MultiProtocol Label Switching</label>
				<help>MultiProtocol Label Switching routes packets through logical
circuits.  Originally conceived as a way of routing packets at
hardware speeds (before hardware was capable of routing ipv4 packets),
MPLS remains a simple way of making tunnels.

If you have not heard of MPLS you probably want to say N here.</help>
			</entry>
			<entry name="NET_MPLS_GSO">
				<label>MPLS: GSO support</label>
				<help>This is helper module to allow segmentation of non-MPLS GSO packets
that have had MPLS stack entries pushed onto them and thus
become MPLS GSO packets.</help>
			</entry>
			<entry name="MPLS_ROUTING">
				<label>MPLS: routing support</label>
				<help>Add support for forwarding of mpls packets.</help>
			</entry>
			<entry name="MPLS_IPTUNNEL">
				<label>MPLS: IP over MPLS tunnel support</label>
				<help>mpls ip tunnel support.</help>
			</entry>
			<entry name="HSR">
				<label>High-availability Seamless Redundancy (HSR)</label>
				<help>If you say Y here, then your Linux box will be able to act as a
DANH (&quot;Doubly attached node implementing HSR&quot;). For this to work,
your Linux box needs (at least) two physical Ethernet interfaces,
and it must be connected as a node in a ring network together with
other HSR capable nodes.

All Ethernet frames sent over the hsr device will be sent in both
directions on the ring (over both slave ports), giving a redundant,
instant fail-over network. Each HSR node in the ring acts like a
bridge for HSR frames, but filters frames that have been forwarded
earlier.

This code is a &quot;best effort&quot; to comply with the HSR standard as
described in IEC 62439-3:2010 (HSRv0) and IEC 62439-3:2012 (HSRv1),
but no compliancy tests have been made. Use iproute2 to select
the version you desire.

You need to perform any and all necessary tests yourself before
relying on this code in a safety critical system!

If unsure, say N.
</help>
			</entry>
			<entry name="NET_SWITCHDEV">
				<label>Switch (and switch-ish) device support</label>
				<help>This module provides glue between core networking code and device
drivers in order to support hardware switch chips in very generic
meaning of the word &quot;switch&quot;. This include devices supporting L2/L3 but
also various flow offloading chips, including switches embedded into
SR-IOV NICs.
</help>
			</entry>
			<entry name="NET_L3_MASTER_DEV">
				<label>L3 Master device support</label>
				<help>This module provides glue between core networking code and device
drivers to support L3 master devices like VRF.
</help>
			</entry>
			<entry name="QRTR">
				<label>Qualcomm IPC Router support</label>
				<help>Say Y if you intend to use Qualcomm IPC router protocol.  The
protocol is used to communicate with services provided by other
hardware blocks in the system.

In order to do service lookups, a userspace daemon is required to
maintain a service listing.</help>
			</entry>
			<entry name="QRTR_SMD">
				<label>SMD IPC Router channels</label>
				<help>Say Y here to support SMD based ipcrouter channels.  SMD is the
most common transport for IPC Router.</help>
			</entry>
			<entry name="NET_NCSI">
				<label>NCSI interface support</label>
				<help>This module provides NCSI (Network Controller Sideband Interface)
support. Enable this only if your system connects to a network
device via NCSI and the ethernet driver you're using supports
the protocol explicitly.
</help>
			</entry>
			<entry name="RPS"/>
			<entry name="RFS_ACCEL"/>
			<entry name="XPS"/>
			<entry name="HWBM"/>
			<entry name="SOCK_CGROUP_DATA"/>
			<entry name="CGROUP_NET_PRIO">
				<label>Network priority cgroup</label>
				<help>Cgroup subsystem for use in assigning processes to network priorities on
a per-interface basis.</help>
			</entry>
			<entry name="CGROUP_NET_CLASSID">
				<label>Network classid cgroup</label>
				<help>Cgroup subsystem for use as general purpose socket classid marker that is
being used in cls_cgroup and for netfilter matching.</help>
			</entry>
			<entry name="NET_RX_BUSY_POLL"/>
			<entry name="BQL"/>
			<entry name="BPF_JIT">
				<label>enable BPF Just In Time compiler</label>
				<help>Berkeley Packet Filter filtering capabilities are normally handled
by an interpreter. This option allows kernel to generate a native
code when filter is loaded in memory. This should speedup
packet sniffing (libpcap/tcpdump).

Note, admin should enable this feature changing:
/proc/sys/net/core/bpf_jit_enable
/proc/sys/net/core/bpf_jit_harden (optional)</help>
			</entry>
			<entry name="NET_FLOW_LIMIT">
				<help>The network stack has to drop packets when a receive processing CPU's
backlog reaches netdev_max_backlog. If a few out of many active flows
generate the vast majority of load, drop their traffic earlier to
maintain capacity for the other flows. This feature provides servers
with many clients some protection against DoS by a single (spoofed)
flow that greatly exceeds average workload.</help>
			</entry>
			<container name="Network_testing">
				<label>Network testing</label>
				<entry name="NET_PKTGEN">
					<label>Packet Generator (USE WITH CAUTION)</label>
					<help>This module will inject preconfigured packets, at a configurable
rate, out of a given interface.  It is used for network interface
stress testing and performance analysis.  If you don't understand
what was just said, you don't need it: say N.

Documentation on how to use the packet generator can be found
at &lt;file:Documentation/networking/pktgen.txt&gt;.

To compile this code as a module, choose M here: the
module will be called pktgen.</help>
				</entry>
				<entry name="NET_TCPPROBE">
					<label>TCP connection probing</label>
					<help>This module allows for capturing the changes to TCP connection
state in response to incoming packets. It is used for debugging
TCP congestion avoidance modules. If you don't understand
what was just said, you don't need it: say N.

Documentation on how to use TCP connection probing can be found
at:

http://www.linuxfoundation.org/collaborate/workgroups/networking/tcpprobe

To compile this code as a module, choose M here: the
module will be called tcp_probe.</help>
				</entry>
				<entry name="NET_DROP_MONITOR">
					<label>Network packet drop alerting service</label>
					<help>This feature provides an alerting service to userspace in the
event that packets are discarded in the network stack.  Alerts
are broadcast via netlink socket to any listening user space
process.  If you don't need network drop alerts, or if you are ok
just checking the various proc files and other utilities for
drop statistics, say N here.</help>
				</entry>
			</container>
		</container>
		<entry name="HAMRADIO">
			<label>Amateur Radio support</label>
			<help>If you want to connect your Linux box to an amateur radio, answer Y
here. You want to read &lt;http://www.tapr.org/&gt;
and more specifically about AX.25 on Linux
&lt;http://www.linux-ax25.org/&gt;.

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about amateur radio.</help>
		</entry>
		<entry name="AX25">
			<label>Amateur Radio AX.25 Level 2 protocol</label>
			<help>This is the protocol used for computer communication over amateur
radio. It is either used by itself for point-to-point links, or to
carry other protocols such as tcp/ip. To use it, you need a device
that connects your Linux box to your amateur radio. You can either
use a low speed TNC (a Terminal Node Controller acts as a kind of
modem connecting your computer's serial port to your radio's
microphone input and speaker output) supporting the KISS protocol or
one of the various SCC cards that are supported by the generic Z8530
or the DMA SCC driver. Another option are the Baycom modem serial
and parallel port hacks or the sound card modem (supported by their
own drivers). If you say Y here, you also have to say Y to one of
those drivers.

Information about where to get supporting software for Linux amateur
radio as well as information about how to configure an AX.25 port is
contained in the AX25-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. You might also want to
check out the file &lt;file:Documentation/networking/ax25.txt&gt; in the
kernel source. More information about digital amateur radio in
general is on the WWW at
&lt;http://www.tapr.org/&gt;.

To compile this driver as a module, choose M here: the
module will be called ax25.</help>
		</entry>
		<entry name="AX25_DAMA_SLAVE">
			<label>AX.25 DAMA Slave support</label>
			<help>DAMA is a mechanism to prevent collisions when doing AX.25
networking. A DAMA server (called &quot;master&quot;) accepts incoming traffic
from clients (called &quot;slaves&quot;) and redistributes it to other slaves.
If you say Y here, your Linux box will act as a DAMA slave; this is
transparent in that you don't have to do any special DAMA
configuration. Linux cannot yet act as a DAMA server.  This option
only compiles DAMA slave support into the kernel.  It still needs to
be enabled at runtime.  For more about DAMA see
&lt;http://www.linux-ax25.org&gt;.  If unsure, say Y.</help>
		</entry>
		<entry name="AX25_DAMA_MASTER">
			<label>'AX.25 DAMA Master support'</label>
			<help>DAMA is a mechanism to prevent collisions when doing AX.25
networking. A DAMA server (called &quot;master&quot;) accepts incoming traffic
from clients (called &quot;slaves&quot;) and redistributes it to other slaves.
If you say Y here, your Linux box will act as a DAMA master; this is
transparent in that you don't have to do any special DAMA
configuration. Linux cannot yet act as a DAMA server.  This option
only compiles DAMA slave support into the kernel.  It still needs to
be explicitly enabled, so if unsure, say Y.</help>
		</entry>
		<entry name="NETROM">
			<label>Amateur Radio NET/ROM protocol</label>
			<help>NET/ROM is a network layer protocol on top of AX.25 useful for
routing.

A comprehensive listing of all the software for Linux amateur radio
users as well as information about how to configure an AX.25 port is
contained in the Linux Ham Wiki, available from
&lt;http://www.linux-ax25.org&gt;. You also might want to check out the
file &lt;file:Documentation/networking/ax25.txt&gt;. More information about
digital amateur radio in general is on the WWW at
&lt;http://www.tapr.org/&gt;.

To compile this driver as a module, choose M here: the
module will be called netrom.</help>
		</entry>
		<entry name="ROSE">
			<label>Amateur Radio X.25 PLP (Rose)</label>
			<help>The Packet Layer Protocol (PLP) is a way to route packets over X.25
connections in general and amateur radio AX.25 connections in
particular, essentially an alternative to NET/ROM.

A comprehensive listing of all the software for Linux amateur radio
users as well as information about how to configure an AX.25 port is
contained in the Linux Ham Wiki, available from
&lt;http://www.linux-ax25.org&gt;.  You also might want to check out the
file &lt;file:Documentation/networking/ax25.txt&gt;. More information about
digital amateur radio in general is on the WWW at
&lt;http://www.tapr.org/&gt;.

To compile this driver as a module, choose M here: the
module will be called rose.</help>
		</entry>
		<container name="AX_25_network_device_drivers">
			<label>AX.25 network device drivers</label>
			<entry name="MKISS">
				<label>Serial port KISS driver</label>
				<help>KISS is a protocol used for the exchange of data between a computer
and a Terminal Node Controller (a small embedded system commonly
used for networking over AX.25 amateur radio connections; it
connects the computer's serial port with the radio's microphone
input and speaker output).

Although KISS is less advanced than the 6pack protocol, it has
the advantage that it is already supported by most modern TNCs
without the need for a firmware upgrade.

To compile this driver as a module, choose M here: the module
will be called mkiss.</help>
			</entry>
			<entry name="_6PACK">
				<label>Serial port 6PACK driver</label>
				<help>6pack is a transmission protocol for the data exchange between your
PC and your TNC (the Terminal Node Controller acts as a kind of
modem connecting your computer's serial port to your radio's
microphone input and speaker output). This protocol can be used as
an alternative to KISS for networking over AX.25 amateur radio
connections, but it has some extended functionality.

Note that this driver is still experimental and might cause
problems. For details about the features and the usage of the
driver, read &lt;file:Documentation/networking/6pack.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called 6pack.</help>
			</entry>
			<entry name="BPQETHER">
				<label>BPQ Ethernet driver</label>
				<help>AX.25 is the protocol used for computer communication over amateur
radio. If you say Y here, you will be able to send and receive AX.25
traffic over Ethernet (also called &quot;BPQ AX.25&quot;), which could be
useful if some other computer on your local network has a direct
amateur radio connection.</help>
			</entry>
			<entry name="DMASCC">
				<label>High-speed (DMA) SCC driver for AX.25</label>
				<help>This is a driver for high-speed SCC boards, i.e. those supporting
DMA on one port. You usually use those boards to connect your
computer to an amateur radio modem (such as the WA4DSY 56kbps
modem), in order to send and receive AX.25 packet radio network
traffic.

Currently, this driver supports Ottawa PI/PI2, Paccomm/Gracilis
PackeTwin, and S5SCC/DMA boards. They are detected automatically.
If you have one of these cards, say Y here and read the AX25-HOWTO,
available from &lt;http://www.tldp.org/docs.html#howto&gt;.

This driver can operate multiple boards simultaneously. If you
compile it as a module (by saying M instead of Y), it will be called
dmascc. If you don't pass any parameter to the driver, all
possible I/O addresses are probed. This could irritate other devices
that are currently not in use. You may specify the list of addresses
to be probed by &quot;dmascc.io=addr1,addr2,...&quot; (when compiled into the
kernel image) or &quot;io=addr1,addr2,...&quot; (when loaded as a module). The
network interfaces will be called dmascc0 and dmascc1 for the board
detected first, dmascc2 and dmascc3 for the second one, and so on.

Before you configure each interface with ifconfig, you MUST set
certain parameters, such as channel access timing, clock mode, and
DMA channel. This is accomplished with a small utility program,
dmascc_cfg, available at
&lt;http://www.linux-ax25.org/wiki/Ax25-tools&gt;. Please be sure to
get at least version 1.27 of dmascc_cfg, as older versions will not
work with the current driver.</help>
			</entry>
			<entry name="SCC">
				<label>Z8530 SCC driver</label>
				<help>These cards are used to connect your Linux box to an amateur radio
in order to communicate with other computers. If you want to use
this, read &lt;file:Documentation/networking/z8530drv.txt&gt; and the
AX25-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. Also make sure to say Y
to &quot;Amateur Radio AX.25 Level 2&quot; support.

To compile this driver as a module, choose M here: the module
will be called scc.</help>
			</entry>
			<entry name="SCC_DELAY">
				<label>additional delay for PA0HZP OptoSCC compatible boards</label>
				<help>Say Y here if you experience problems with the SCC driver not
working properly; please read
&lt;file:Documentation/networking/z8530drv.txt&gt; for details.

If unsure, say N.</help>
			</entry>
			<entry name="SCC_TRXECHO">
				<label>support for TRX that feedback the tx signal to rx</label>
				<help>Some transmitters feed the transmitted signal back to the receive
line.  Say Y here to foil this by explicitly disabling the receiver
during data transmission.

If in doubt, say Y.</help>
			</entry>
			<entry name="BAYCOM_SER_FDX">
				<label>BAYCOM ser12 fullduplex driver for AX.25</label>
				<help>This is one of two drivers for Baycom style simple amateur radio
modems that connect to a serial interface. The driver supports the
ser12 design in full-duplex mode. In addition, it allows the
baudrate to be set between 300 and 4800 baud (however not all modems
support all baudrates). This is the preferred driver. The next
driver, &quot;BAYCOM ser12 half-duplex driver for AX.25&quot; is the old
driver and still provided in case this driver does not work with
your serial interface chip. To configure the driver, use the sethdlc
utility available in the standard ax25 utilities package. For
information on the modems, see &lt;http://www.baycom.de/&gt; and
&lt;file:Documentation/networking/baycom.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called baycom_ser_fdx.  This is recommended.</help>
			</entry>
			<entry name="BAYCOM_SER_HDX">
				<label>BAYCOM ser12 halfduplex driver for AX.25</label>
				<help>This is one of two drivers for Baycom style simple amateur radio
modems that connect to a serial interface. The driver supports the
ser12 design in half-duplex mode. This is the old driver.  It is
still provided in case your serial interface chip does not work with
the full-duplex driver. This driver is deprecated.  To configure
the driver, use the sethdlc utility available in the standard ax25
utilities package. For information on the modems, see
&lt;http://www.baycom.de/&gt; and
&lt;file:Documentation/networking/baycom.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called baycom_ser_hdx.  This is recommended.</help>
			</entry>
			<entry name="BAYCOM_PAR">
				<label>BAYCOM picpar and par96 driver for AX.25</label>
				<help>This is a driver for Baycom style simple amateur radio modems that
connect to a parallel interface. The driver supports the picpar and
par96 designs. To configure the driver, use the sethdlc utility
available in the standard ax25 utilities package. For information on
the modems, see &lt;http://www.baycom.de/&gt; and the file
&lt;file:Documentation/networking/baycom.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called baycom_par.  This is recommended.</help>
			</entry>
			<entry name="BAYCOM_EPP">
				<label>BAYCOM epp driver for AX.25</label>
				<help>This is a driver for Baycom style simple amateur radio modems that
connect to a parallel interface. The driver supports the EPP
designs. To configure the driver, use the sethdlc utility available
in the standard ax25 utilities package. For information on the
modems, see &lt;http://www.baycom.de/&gt; and the file
&lt;file:Documentation/networking/baycom.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called baycom_epp.  This is recommended.</help>
			</entry>
			<entry name="YAM">
				<label>YAM driver for AX.25</label>
				<help>The YAM is a modem for packet radio which connects to the serial
port and includes some of the functions of a Terminal Node
Controller. If you have one of those, say Y here.

To compile this driver as a module, choose M here: the module
will be called yam.


</help>
			</entry>
		</container>
		<entry name="CAN">
			<label>CAN bus subsystem support</label>
			<help>Controller Area Network (CAN) is a slow (up to 1Mbit/s) serial
communications protocol which was developed by Bosch in
1991, mainly for automotive, but now widely used in marine
(NMEA2000), industrial, and medical applications.
More information on the CAN network protocol family PF_CAN
is contained in &lt;Documentation/networking/can.txt&gt;.

If you want CAN support you should say Y here and also to the
specific driver for your controller(s) below.</help>
		</entry>
		<entry name="CAN_RAW">
			<label>Raw CAN Protocol (raw access with CAN-ID filtering)</label>
			<help>The raw CAN protocol option offers access to the CAN bus via
the BSD socket API. You probably want to use the raw socket in
most cases where no higher level protocol is being used. The raw
socket has several filter options e.g. ID masking / error frames.
To receive/send raw CAN messages, use AF_CAN with protocol CAN_RAW.</help>
		</entry>
		<entry name="CAN_BCM">
			<label>Broadcast Manager CAN Protocol (with content filtering)</label>
			<help>The Broadcast Manager offers content filtering, timeout monitoring,
sending of RTR frames, and cyclic CAN messages without permanent user
interaction. The BCM can be 'programmed' via the BSD socket API and
informs you on demand e.g. only on content updates / timeouts.
You probably want to use the bcm socket in most cases where cyclic
CAN messages are used on the bus (e.g. in automotive environments).
To use the Broadcast Manager, use AF_CAN with protocol CAN_BCM.</help>
		</entry>
		<entry name="CAN_GW">
			<label>CAN Gateway/Router (with netlink configuration)</label>
			<help>The CAN Gateway/Router is used to route (and modify) CAN frames.
It is based on the PF_CAN core infrastructure for msg filtering and
msg sending and can optionally modify routed CAN frames on the fly.
CAN frames can be routed between CAN network interfaces (one hop).
They can be modified with AND/OR/XOR/SET operations as configured
by the netlink configuration interface known e.g. from iptables.</help>
		</entry>
		<container name="CAN_Device_Drivers">
			<label>CAN Device Drivers</label>
			<entry name="CAN_VCAN">
				<label>Virtual Local CAN Interface (vcan)</label>
				<help>Similar to the network loopback devices, vcan offers a
virtual local CAN interface.

This driver can also be built as a module.  If so, the module
will be called vcan.</help>
			</entry>
			<entry name="CAN_SLCAN">
				<label>Serial / USB serial CAN Adaptors (slcan)</label>
				<help>CAN driver for several 'low cost' CAN interfaces that are attached
via serial lines or via USB-to-serial adapters using the LAWICEL
ASCII protocol. The driver implements the tty linediscipline N_SLCAN.

As only the sending and receiving of CAN frames is implemented, this
driver should work with the (serial/USB) CAN hardware from:
www.canusb.com / www.can232.com / www.mictronics.de / www.canhack.de

Userspace tools to attach the SLCAN line discipline (slcan_attach,
slcand) can be found in the can-utils at the SocketCAN SVN, see
http://developer.berlios.de/projects/socketcan for details.

The slcan driver supports up to 10 CAN netdevices by default which
can be changed by the 'maxdev=xx' module option. This driver can
also be built as a module. If so, the module will be called slcan.</help>
			</entry>
			<entry name="CAN_DEV">
				<label>Platform CAN drivers with Netlink support</label>
				<help>Enables the common framework for platform CAN drivers with Netlink
support. This is the standard library for CAN drivers.
If unsure, say Y.</help>
			</entry>
			<entry name="CAN_CALC_BITTIMING">
				<label>CAN bit-timing calculation</label>
				<help>If enabled, CAN bit-timing parameters will be calculated for the
bit-rate specified via Netlink argument &quot;bitrate&quot; when the device
get started. This works fine for the most common CAN controllers
with standard bit-rates but may fail for exotic bit-rates or CAN
source clock frequencies. Disabling saves some space, but then the
bit-timing parameters must be specified directly using the Netlink
arguments &quot;tq&quot;, &quot;prop_seg&quot;, &quot;phase_seg1&quot;, &quot;phase_seg2&quot; and &quot;sjw&quot;.
If unsure, say Y.</help>
			</entry>
			<entry name="CAN_LEDS">
				<label>Enable LED triggers for Netlink based drivers</label>
				<help>This option adds two LED triggers for packet receive and transmit
events on each supported CAN device.

Say Y here if you are working on a system with led-class supported
LEDs and you want to use them as canbus activity indicators.</help>
			</entry>
			<entry name="CAN_AT91">
				<label>Atmel AT91 onchip CAN controller</label>
				<help>This is a driver for the SoC CAN controller in Atmel's AT91SAM9263
and AT91SAM9X5 processors.</help>
			</entry>
			<entry name="CAN_BFIN">
				<label>Analog Devices Blackfin on-chip CAN</label>
				<help>Driver for the Analog Devices Blackfin on-chip CAN controllers

To compile this driver as a module, choose M here: the
module will be called bfin_can.</help>
			</entry>
			<entry name="CAN_FLEXCAN">
				<label>Support for Freescale FLEXCAN based chips</label>
				<help>Say Y here if you want to support for Freescale FlexCAN.</help>
			</entry>
			<entry name="CAN_GRCAN">
				<label>Aeroflex Gaisler GRCAN and GRHCAN CAN devices</label>
				<help>Say Y here if you want to use Aeroflex Gaisler GRCAN or GRHCAN.
Note that the driver supports little endian, even though little
endian syntheses of the cores would need some modifications on
the hardware level to work.</help>
			</entry>
			<entry name="CAN_JANZ_ICAN3">
				<label>Janz VMOD-ICAN3 Intelligent CAN controller</label>
				<help>Driver for Janz VMOD-ICAN3 Intelligent CAN controller module, which
connects to a MODULbus carrier board.

This driver can also be built as a module. If so, the module will be
called janz-ican3.ko.</help>
			</entry>
			<entry name="CAN_SUN4I">
				<label>Allwinner A10 CAN controller</label>
				<help>Say Y here if you want to use CAN controller found on Allwinner
A10/A20 SoCs.

To compile this driver as a module, choose M here: the module will
be called sun4i_can.</help>
			</entry>
			<entry name="CAN_TI_HECC">
				<label>TI High End CAN Controller</label>
				<help>Driver for TI HECC (High End CAN Controller) module found on many
TI devices. The device specifications are available from www.ti.com</help>
			</entry>
			<entry name="CAN_XILINXCAN">
				<label>Xilinx CAN</label>
				<help>Xilinx CAN driver. This driver supports both soft AXI CAN IP and
Zynq CANPS IP.</help>
			</entry>
			<entry name="PCH_CAN">
				<label>Intel EG20T PCH CAN controller</label>
				<help>This driver is for PCH CAN of Topcliff (Intel EG20T PCH) which
is an IOH for x86 embedded processor (Intel Atom E6xx series).
This driver can access CAN bus.</help>
			</entry>
			<entry name="CAN_C_CAN">
				<label>Bosch C_CAN/D_CAN devices</label>
			</entry>
			<entry name="CAN_C_CAN_PLATFORM">
				<label>Generic Platform Bus based C_CAN/D_CAN driver</label>
				<help>This driver adds support for the C_CAN/D_CAN chips connected
to the &quot;platform bus&quot; (Linux abstraction for directly to the
processor attached devices) which can be found on various
boards from ST Microelectronics (http://www.st.com) like the
SPEAr1310 and SPEAr320 evaluation boards &amp; TI (www.ti.com)
boards like am335x, dm814x, dm813x and dm811x.</help>
			</entry>
			<entry name="CAN_C_CAN_PCI">
				<label>Generic PCI Bus based C_CAN/D_CAN driver</label>
				<help>This driver adds support for the C_CAN/D_CAN chips connected
to the PCI bus.</help>
			</entry>
			<entry name="CAN_CC770">
				<label>Bosch CC770 and Intel AN82527 devices</label>
			</entry>
			<entry name="CAN_CC770_ISA">
				<label>ISA Bus based legacy CC770 driver</label>
				<help>This driver adds legacy support for CC770 and AN82527 chips
connected to the ISA bus using I/O port, memory mapped or
indirect access.</help>
			</entry>
			<entry name="CAN_CC770_PLATFORM">
				<label>Generic Platform Bus based CC770 driver</label>
				<help>This driver adds support for the CC770 and AN82527 chips
connected to the &quot;platform bus&quot; (Linux abstraction for directly
to the processor attached devices).</help>
			</entry>
			<entry name="CAN_IFI_CANFD">
				<label>IFI CAN_FD IP</label>
				<help>This driver adds support for the I/F/I CAN_FD soft IP block
connected to the &quot;platform bus&quot; (Linux abstraction for directly
to the processor attached devices). The CAN_FD is most often
synthesised into an FPGA or CPLD.
</help>
			</entry>
			<entry name="CAN_M_CAN">
				<label>Bosch M_CAN devices</label>
				<help>Say Y here if you want to support for Bosch M_CAN controller.
</help>
			</entry>
			<entry name="CAN_MSCAN">
				<label>Support for Freescale MSCAN based chips</label>
				<help>The Motorola Scalable Controller Area Network (MSCAN) definition
is based on the MSCAN12 definition which is the specific
implementation of the Motorola Scalable CAN concept targeted for
the Motorola MC68HC12 Microcontroller Family.</help>
			</entry>
			<entry name="CAN_MPC5XXX">
				<label>Freescale MPC5xxx onboard CAN controller</label>
				<help>If you say yes here you get support for Freescale's MPC5xxx
onboard CAN controller. Currently, the MPC5200, MPC5200B and
MPC5121 (Rev. 2 and later) are supported.

This driver can also be built as a module. If so, the module
will be called mscan-mpc5xxx.ko.</help>
			</entry>
			<entry name="CAN_RCAR">
				<label>Renesas R-Car CAN controller</label>
				<help>Say Y here if you want to use CAN controller found on Renesas R-Car
SoCs.

To compile this driver as a module, choose M here: the module will
be called rcar_can.</help>
			</entry>
			<entry name="CAN_RCAR_CANFD">
				<label>Renesas R-Car CAN FD controller</label>
				<help>Say Y here if you want to use CAN FD controller found on
Renesas R-Car SoCs. The driver puts the controller in CAN FD only
mode, which can interoperate with CAN2.0 nodes but does not support
dedicated CAN 2.0 mode.

To compile this driver as a module, choose M here: the module will
be called rcar_canfd.
</help>
			</entry>
			<entry name="CAN_SJA1000">
				<label>Philips/NXP SJA1000 devices</label>
			</entry>
			<entry name="CAN_SJA1000_ISA">
				<label>ISA Bus based legacy SJA1000 driver</label>
				<help>This driver adds legacy support for SJA1000 chips connected to
the ISA bus using I/O port, memory mapped or indirect access.</help>
			</entry>
			<entry name="CAN_SJA1000_PLATFORM">
				<label>Generic Platform Bus based SJA1000 driver</label>
				<help>This driver adds support for the SJA1000 chips connected to
the &quot;platform bus&quot; (Linux abstraction for directly to the
processor attached devices).  Which can be found on various
boards from Phytec (http://www.phytec.de) like the PCM027,
PCM038. It also provides the OpenFirmware &quot;platform bus&quot; found
on embedded systems with OpenFirmware bindings, e.g. if you
have a PowerPC based system you may want to enable this option.</help>
			</entry>
			<entry name="CAN_EMS_PCMCIA">
				<label>EMS CPC-CARD Card</label>
				<help>This driver is for the one or two channel CPC-CARD cards from
EMS Dr. Thomas Wuensche (http://www.ems-wuensche.de).</help>
			</entry>
			<entry name="CAN_EMS_PCI">
				<label>EMS CPC-PCI, CPC-PCIe and CPC-104P Card</label>
				<help>This driver is for the one, two or four channel CPC-PCI,
CPC-PCIe and CPC-104P cards from EMS Dr. Thomas Wuensche
(http://www.ems-wuensche.de).</help>
			</entry>
			<entry name="CAN_PEAK_PCMCIA">
				<label>PEAK PCAN-PC Card</label>
				<help>This driver is for the PCAN-PC Card PCMCIA adapter (1 or 2 channels)
from PEAK-System (http://www.peak-system.com). To compile this
driver as a module, choose M here: the module will be called
peak_pcmcia.</help>
			</entry>
			<entry name="CAN_PEAK_PCI">
				<label>PEAK PCAN-PCI/PCIe/miniPCI Cards</label>
				<help>This driver is for the PCAN-PCI/PCIe/miniPCI cards
(1, 2, 3 or 4 channels) from PEAK-System Technik
(http://www.peak-system.com).</help>
			</entry>
			<entry name="CAN_PEAK_PCIEC">
				<label>PEAK PCAN-ExpressCard Cards</label>
				<help>Say Y here if you want to use a PCAN-ExpressCard from PEAK-System
Technik. This will also automatically select I2C and I2C_ALGO
configuration options.</help>
			</entry>
			<entry name="CAN_KVASER_PCI">
				<label>Kvaser PCIcanx and Kvaser PCIcan PCI Cards</label>
				<help>This driver is for the PCIcanx and PCIcan cards (1, 2 or
4 channel) from Kvaser (http://www.kvaser.com).</help>
			</entry>
			<entry name="CAN_PLX_PCI">
				<label>PLX90xx PCI-bridge based Cards</label>
				<help>This driver is for CAN interface cards based on
the PLX90xx PCI bridge.
Driver supports now:
- Adlink PCI-7841/cPCI-7841 card (http://www.adlinktech.com/)
- Adlink PCI-7841/cPCI-7841 SE card
- esd CAN-PCI/CPCI/PCI104/200 (http://www.esd.eu/)
- esd CAN-PCI/PMC/266
- esd CAN-PCIe/2000
- Marathon CAN-bus-PCI card (http://www.marathon.ru/)
- TEWS TECHNOLOGIES TPMC810 card (http://www.tews.com/)
- IXXAT Automation PC-I 04/PCI card (http://www.ixxat.com/)
- Connect Tech Inc. CANpro/104-Plus Opto (CRG001) card (http://www.connecttech.com)</help>
			</entry>
			<entry name="CAN_TSCAN1">
				<label>TS-CAN1 PC104 boards</label>
				<help>This driver is for Technologic Systems' TSCAN-1 PC104 boards.
http://www.embeddedarm.com/products/board-detail.php?product=TS-CAN1
The driver supports multiple boards and automatically configures them:
PLD IO base addresses are read from jumpers JP1 and JP2,
IRQ numbers are read from jumpers JP4 and JP5,
SJA1000 IO base addresses are chosen heuristically (first that works).</help>
			</entry>
			<entry name="CAN_SOFTING">
				<label>Softing Gmbh CAN generic support</label>
				<help>Support for CAN cards from Softing Gmbh &amp; some cards
from Vector Gmbh.
Softing Gmbh CAN cards come with 1 or 2 physical busses.
Those cards typically use Dual Port RAM to communicate
with the host CPU. The interface is then identical for PCI
and PCMCIA cards. This driver operates on a platform device,
which has been created by softing_cs or softing_pci driver.
Warning:
The API of the card does not allow fine control per bus, but
controls the 2 busses on the card together.
As such, some actions (start/stop/busoff recovery) on 1 bus
must bring down the other bus too temporarily.</help>
			</entry>
			<entry name="CAN_SOFTING_CS">
				<label>Softing Gmbh CAN pcmcia cards</label>
				<help>Support for PCMCIA cards from Softing Gmbh &amp; some cards
from Vector Gmbh.
You need firmware for these, which you can get at
http://developer.berlios.de/projects/socketcan/
This version of the driver is written against
firmware version 4.6 (softing-fw-4.6-binaries.tar.gz)
In order to use the card as CAN device, you need the Softing generic
support too.
</help>
			</entry>
			<container name="CAN_SPI_interfaces">
				<label>CAN SPI interfaces</label>
				<entry name="CAN_MCP251X">
					<label>Microchip MCP251x SPI CAN controllers</label>
					<help>Driver for the Microchip MCP251x SPI CAN controllers.</help>
				</entry>
			</container>
			<container name="CAN_USB_interfaces">
				<label>CAN USB interfaces</label>
				<entry name="CAN_EMS_USB">
					<label>EMS CPC-USB/ARM7 CAN/USB interface</label>
					<help>This driver is for the one channel CPC-USB/ARM7 CAN/USB interface
from EMS Dr. Thomas Wuensche (http://www.ems-wuensche.de).</help>
				</entry>
				<entry name="CAN_ESD_USB2">
					<label>ESD USB/2 CAN/USB interface</label>
					<help>This driver supports the CAN-USB/2 interface
from esd electronic system design gmbh (http://www.esd.eu).</help>
				</entry>
				<entry name="CAN_GS_USB">
					<label>Geschwister Schneider UG interfaces</label>
					<help>This driver supports the Geschwister Schneider and bytewerk.org
candleLight USB CAN interfaces USB/CAN devices
If unsure choose N,
choose Y for built in support,
M to compile as module (module will be named: gs_usb).</help>
				</entry>
				<entry name="CAN_KVASER_USB">
					<label>Kvaser CAN/USB interface</label>
					<help>This driver adds support for Kvaser CAN/USB devices like Kvaser
Leaf Light and Kvaser USBcan II.

The driver provides support for the following devices:
- Kvaser Leaf Light
- Kvaser Leaf Professional HS
- Kvaser Leaf SemiPro HS
- Kvaser Leaf Professional LS
- Kvaser Leaf Professional SWC
- Kvaser Leaf Professional LIN
- Kvaser Leaf SemiPro LS
- Kvaser Leaf SemiPro SWC
- Kvaser Memorator II HS/HS
- Kvaser USBcan Professional HS/HS
- Kvaser Leaf Light GI
- Kvaser Leaf Professional HS (OBD-II connector)
- Kvaser Memorator Professional HS/LS
- Kvaser Leaf Light &quot;China&quot;
- Kvaser BlackBird SemiPro
- Kvaser USBcan R
- Kvaser Leaf Light v2
- Kvaser Mini PCI Express HS
- Kvaser Mini PCI Express 2xHS
- Kvaser USBcan Light 2xHS
- Kvaser USBcan II HS/HS
- Kvaser USBcan II HS/LS
- Kvaser USBcan Rugged (&quot;USBcan Rev B&quot;)
- Kvaser Memorator HS/HS
- Kvaser Memorator HS/LS
- Scania VCI2 (if you have the Kvaser logo on top)

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called kvaser_usb.</help>
				</entry>
				<entry name="CAN_PEAK_USB">
					<label>PEAK PCAN-USB/USB Pro interfaces for CAN 2.0b/CAN-FD</label>
					<help>This driver supports the PEAK-System Technik USB adapters that enable
access to the CAN bus, with repect to the CAN 2.0b and/or CAN-FD
standards, that is:

PCAN-USB             single CAN 2.0b channel USB adapter
PCAN-USB Pro         dual CAN 2.0b channels USB adapter
PCAN-USB FD          single CAN-FD channel USB adapter
PCAN-USB Pro FD      dual CAN-FD channels USB adapter

(see also http://www.peak-system.com).</help>
				</entry>
				<entry name="CAN_8DEV_USB">
					<label>8 devices USB2CAN interface</label>
					<help>This driver supports the USB2CAN interface
from 8 devices (http://www.8devices.com).</help>
				</entry>
			</container>
			<entry name="CAN_DEBUG_DEVICES">
				<label>CAN devices debugging messages</label>
				<help>Say Y here if you want the CAN device drivers to produce a bunch of
debug messages to the system log.  Select this if you are having
a problem with CAN support and want to see more of what is going
on.</help>
			</entry>
		</container>
		<entry name="IRDA">
			<label>IrDA (infrared) subsystem support</label>
			<help>Say Y here if you want to build support for the IrDA (TM) protocols.
The Infrared Data Associations (tm) specifies standards for wireless
infrared communication and is supported by most laptops and PDA's.

To use Linux support for the IrDA (tm) protocols, you will also need
some user-space utilities like irattach.  For more information, see
the file &lt;file:Documentation/networking/irda.txt&gt;.  You also want to
read the IR-HOWTO, available at
&lt;http://www.tldp.org/docs.html#howto&gt;.

If you want to exchange bits of data (vCal, vCard) with a PDA, you
will need to install some OBEX application, such as OpenObex :
&lt;http://sourceforge.net/projects/openobex/&gt;

To compile this support as a module, choose M here: the module will
be called irda.</help>
		</entry>
		<entry name="IRLAN">
			<label>IrLAN protocol</label>
			<help>Say Y here if you want to build support for the IrLAN protocol.
To compile it as a module, choose M here: the module will be called
irlan.  IrLAN emulates an Ethernet and makes it possible to put up
a wireless LAN using infrared beams.

The IrLAN protocol can be used to talk with infrared access points
like the HP NetbeamIR, or the ESI JetEye NET.  You can also connect
to another Linux machine running the IrLAN protocol for ad-hoc
networking!

</help>
		</entry>
		<entry name="IRNET">
			<label>IrNET protocol</label>
			<help>Say Y here if you want to build support for the IrNET protocol.
To compile it as a module, choose M here: the module will be
called irnet.  IrNET is a PPP driver, so you will also need a
working PPP subsystem (driver, daemon and config)...

IrNET is an alternate way to transfer TCP/IP traffic over IrDA.  It
uses synchronous PPP over a set of point to point IrDA sockets.  You
can use it between Linux machine or with W2k.

</help>
		</entry>
		<entry name="IRCOMM">
			<label>IrCOMM protocol</label>
			<help>Say Y here if you want to build support for the IrCOMM protocol.
To compile it as modules, choose M here: the modules will be
called ircomm and ircomm_tty.
IrCOMM implements serial port emulation, and makes it possible to
use all existing applications that understands TTY's with an
infrared link.  Thus you should be able to use application like PPP,
minicom and others.

</help>
		</entry>
		<entry name="IRDA_ULTRA">
			<label>Ultra (connectionless) protocol</label>
			<help>Say Y here to support the connectionless Ultra IRDA protocol.
Ultra allows to exchange data over IrDA with really simple devices
(watch, beacon) without the overhead of the IrDA protocol (no handshaking,
no management frames, simple fixed header).
Ultra is available as a special socket : socket(AF_IRDA, SOCK_DGRAM, 1);</help>
		</entry>
		<entry name="IRDA_CACHE_LAST_LSAP">
			<label>Cache last LSAP</label>
			<help>Say Y here if you want IrLMP to cache the last LSAP used.  This
makes sense since most frames will be sent/received on the same
connection.  Enabling this option will save a hash-lookup per frame.

If unsure, say Y.</help>
		</entry>
		<entry name="IRDA_FAST_RR">
			<label>Fast RRs (low latency)</label>
			<help>Say Y here is you want IrLAP to send fast RR (Receive Ready) frames
when acting as a primary station.
Disabling this option will make latency over IrDA very bad. Enabling
this option will make the IrDA stack send more packet than strictly
necessary, thus reduce your battery life (but not that much).

Fast RR will make IrLAP send out a RR frame immediately when
receiving a frame if its own transmit queue is currently empty. This
will give a lot of speed improvement when receiving much data since
the secondary station will not have to wait the max. turn around
time (usually 500ms) before it is allowed to transmit the next time.
If the transmit queue of the secondary is also empty, the primary will
start backing-off before sending another RR frame, waiting longer
each time until the back-off reaches the max. turn around time.
This back-off increase in controlled via
/proc/sys/net/irda/fast_poll_increase

If unsure, say Y.</help>
		</entry>
		<entry name="IRDA_DEBUG">
			<label>Debug information</label>
			<help>Say Y here if you want the IrDA subsystem to write debug information
to your syslog. You can change the debug level in
/proc/sys/net/irda/debug .
When this option is enabled, the IrDA also perform many extra internal
verifications which will usually prevent the kernel to crash in case of
bugs.

If unsure, say Y (since it makes it easier to find the bugs).</help>
		</entry>
		<container name="Infrared_port_device_drivers">
			<label>Infrared-port device drivers</label>
			<entry name="IRTTY_SIR">
				<label>IrTTY (uses Linux serial driver)</label>
				<help>Say Y here if you want to build support for the IrTTY line
discipline.  To compile it as a module, choose M here: the module
will be called irtty-sir. IrTTY makes it possible to use Linux's
own serial driver for all IrDA ports that are 16550 compatible.
Most IrDA chips are 16550 compatible so you should probably say Y
to this option.  Using IrTTY will however limit the speed of the
connection to 115200 bps (IrDA SIR mode).

If unsure, say Y.</help>
			</entry>
			<entry name="BFIN_SIR">
				<label>Blackfin SIR on UART</label>
				<help>Say Y here if your want to enable SIR function on Blackfin UART
devices.

To activate this driver you can start irattach like:
&quot;irattach irda0 -s&quot;

Saying M, it will be built as a module named bfin_sir.

Note that you need to turn off one of the serial drivers for SIR
to use that UART.</help>
			</entry>
			<entry name="BFIN_SIR0">
				<label>Blackfin SIR on UART0</label>
			</entry>
			<entry name="BFIN_SIR1">
				<label>Blackfin SIR on UART1</label>
			</entry>
			<entry name="BFIN_SIR2">
				<label>Blackfin SIR on UART2</label>
			</entry>
			<entry name="BFIN_SIR3">
				<label>Blackfin SIR on UART3</label>
			</entry>
			<entry name="SIR_BFIN_DMA">
				<label>DMA mode</label>
			</entry>
			<entry name="SIR_BFIN_PIO">
				<label>PIO mode</label>
			</entry>
			<entry name="SH_SIR">
				<label>SuperH SIR on UART</label>
				<help>Say Y here if your want to enable SIR function on SuperH UART
devices.</help>
			</entry>
			<entry name="DONGLE">
				<label>Serial dongle support</label>
				<help>Say Y here if you have an infrared device that connects to your
computer's serial port. These devices are called dongles. Then say Y
or M to the driver for your particular dongle below.

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about serial dongles.</help>
			</entry>
			<entry name="ESI_DONGLE">
				<label>ESI JetEye PC dongle</label>
				<help>Say Y here if you want to build support for the Extended Systems
JetEye PC dongle.  To compile it as a module, choose M here. The ESI
dongle attaches to the normal 9-pin serial port connector, and can
currently only be used by IrTTY.  To activate support for ESI
dongles you will have to start irattach like this:
&quot;irattach -d esi&quot;.</help>
			</entry>
			<entry name="ACTISYS_DONGLE">
				<label>ACTiSYS IR-220L and IR220L+ dongle</label>
				<help>Say Y here if you want to build support for the ACTiSYS IR-220L and
IR220L+ dongles.  To compile it as a module, choose M here. The
ACTiSYS dongles attaches to the normal 9-pin serial port connector,
and can currently only be used by IrTTY.  To activate support for
ACTiSYS dongles you will have to start irattach like this:
&quot;irattach -d actisys&quot; or &quot;irattach -d actisys+&quot;.</help>
			</entry>
			<entry name="TEKRAM_DONGLE">
				<label>Tekram IrMate 210B dongle</label>
				<help>Say Y here if you want to build support for the Tekram IrMate 210B
dongle.  To compile it as a module, choose M here. The Tekram dongle
attaches to the normal 9-pin serial port connector, and can
currently only be used by IrTTY.  To activate support for Tekram
dongles you will have to start irattach like this:
&quot;irattach -d tekram&quot;.</help>
			</entry>
			<entry name="TOIM3232_DONGLE">
				<label>TOIM3232 IrDa dongle</label>
				<help>Say Y here if you want to build support for the Vishay/Temic
TOIM3232 and TOIM4232 based dongles.
To compile it as a module, choose M here.</help>
			</entry>
			<entry name="LITELINK_DONGLE">
				<label>Parallax LiteLink dongle</label>
				<help>Say Y here if you want to build support for the Parallax Litelink
dongle.  To compile it as a module, choose M here.  The Parallax
dongle attaches to the normal 9-pin serial port connector, and can
currently only be used by IrTTY.  To activate support for Parallax
dongles you will have to start irattach like this:
&quot;irattach -d litelink&quot;.</help>
			</entry>
			<entry name="MA600_DONGLE">
				<label>Mobile Action MA600 dongle</label>
				<help>Say Y here if you want to build support for the Mobile Action MA600
dongle.  To compile it as a module, choose M here. The MA600 dongle
attaches to the normal 9-pin serial port connector, and can
currently only be used by IrTTY.  The driver should also support
the MA620 USB version of the dongle, if the integrated USB-to-RS232
converter is supported by usbserial. To activate support for
MA600 dongle you will have to start irattach like this:
&quot;irattach -d ma600&quot;.</help>
			</entry>
			<entry name="GIRBIL_DONGLE">
				<label>Greenwich GIrBIL dongle</label>
				<help>Say Y here if you want to build support for the Greenwich GIrBIL
dongle.  If you want to compile it as a module, choose M here.
The Greenwich dongle attaches to the normal 9-pin serial port
connector, and can currently only be used by IrTTY.  To activate
support for Greenwich dongles you will have to start irattach
like this: &quot;irattach -d girbil&quot;.</help>
			</entry>
			<entry name="MCP2120_DONGLE">
				<label>Microchip MCP2120</label>
				<help>Say Y here if you want to build support for the Microchip MCP2120
dongle.  If you want to compile it as a module, choose M here.
The MCP2120 dongle attaches to the normal 9-pin serial port
connector, and can currently only be used by IrTTY.  To activate
support for MCP2120 dongles you will have to start irattach
like this: &quot;irattach -d mcp2120&quot;.

You must build this dongle yourself.  For more information see:
&lt;http://www.eyetap.org/~tangf/irda_sir_linux.html&gt;</help>
			</entry>
			<entry name="OLD_BELKIN_DONGLE">
				<label>Old Belkin dongle</label>
				<help>Say Y here if you want to build support for the Adaptec Airport 1000
and 2000 dongles.  If you want to compile it as a module, choose
M here. Some information is contained in the comments
at the top of &lt;file:drivers/net/irda/old_belkin-sir.c&gt;.</help>
			</entry>
			<entry name="ACT200L_DONGLE">
				<label>ACTiSYS IR-200L dongle</label>
				<help>Say Y here if you want to build support for the ACTiSYS IR-200L
dongle. If you want to compile it as a module, choose M here.
The ACTiSYS IR-200L dongle attaches to the normal 9-pin serial
port connector, and can currently only be used by IrTTY.
To activate support for ACTiSYS IR-200L dongle you will have to
start irattach like this: &quot;irattach -d act200l&quot;.</help>
			</entry>
			<entry name="KINGSUN_DONGLE">
				<label>KingSun/DonShine DS-620 IrDA-USB dongle</label>
				<help>Say Y or M here if you want to build support for the KingSun/DonShine
DS-620 IrDA-USB bridge device driver.

This USB bridge does not conform to the IrDA-USB device class
specification, and therefore needs its own specific driver. This
dongle supports SIR speed only (9600 bps).

To compile it as a module, choose M here: the module will be called
kingsun-sir.</help>
			</entry>
			<entry name="KSDAZZLE_DONGLE">
				<label>KingSun Dazzle IrDA-USB dongle</label>
				<help>Say Y or M here if you want to build support for the KingSun Dazzle
IrDA-USB bridge device driver.

This USB bridge does not conform to the IrDA-USB device class
specification, and therefore needs its own specific driver. This
dongle supports SIR speeds only (9600 through 115200 bps).

To compile it as a module, choose M here: the module will be called
ksdazzle-sir.</help>
			</entry>
			<entry name="KS959_DONGLE">
				<label>KingSun KS-959 IrDA-USB dongle</label>
				<help>Say Y or M here if you want to build support for the KingSun KS-959
IrDA-USB bridge device driver.

This USB bridge does not conform to the IrDA-USB device class
specification, and therefore needs its own specific driver. This
dongle supports SIR speeds only (9600 through 57600 bps).

To compile it as a module, choose M here: the module will be called
ks959-sir.</help>
			</entry>
			<entry name="USB_IRDA">
				<label>IrDA USB dongles</label>
				<help>Say Y here if you want to build support for the USB IrDA FIR Dongle
device driver.  To compile it as a module, choose M here: the module
will be called irda-usb.  IrDA-USB support the various IrDA USB
dongles available and most of their peculiarities.  Those dongles
plug in the USB port of your computer, are plug and play, and
support SIR and FIR (4Mbps) speeds.  On the other hand, those
dongles tend to be less efficient than a FIR chipset.

Please note that the driver is still experimental.  And of course,
you will need both USB and IrDA support in your kernel...</help>
			</entry>
			<entry name="SIGMATEL_FIR">
				<label>SigmaTel STIr4200 bridge</label>
				<help>Say Y here if you want to build support for the SigmaTel STIr4200
USB IrDA FIR bridge device driver.

USB bridge based on the SigmaTel STIr4200 don't conform to the
IrDA-USB device class specification, and therefore need their
own specific driver. Those dongles support SIR and FIR (4Mbps)
speeds.

To compile it as a module, choose M here: the module will be called
stir4200.</help>
			</entry>
			<entry name="NSC_FIR">
				<label>NSC PC87108/PC87338</label>
				<help>Say Y here if you want to build support for the NSC PC87108 and
PC87338 IrDA chipsets.  This driver supports SIR,
MIR and FIR (4Mbps) speeds.

To compile it as a module, choose M here: the module will be called
nsc-ircc.</help>
			</entry>
			<entry name="WINBOND_FIR">
				<label>Winbond W83977AF (IR)</label>
				<help>Say Y here if you want to build IrDA support for the Winbond
W83977AF super-io chipset.  This driver should be used for the IrDA
chipset in the Corel NetWinder.  The driver supports SIR, MIR and
FIR (4Mbps) speeds.

To compile it as a module, choose M here: the module will be called
w83977af_ir.</help>
			</entry>
			<entry name="TOSHIBA_FIR">
				<label>Toshiba Type-O IR Port</label>
				<help>Say Y here if you want to build support for the Toshiba Type-O IR
and Donau oboe chipsets. These chipsets are used by the Toshiba
Libretto 100/110CT, Tecra 8100, Portege 7020 and many more laptops.
To compile it as a module, choose M here: the module will be called
donauboe.</help>
			</entry>
			<entry name="AU1000_FIR">
				<label>Alchemy IrDA SIR/FIR</label>
				<help>Say Y/M here to build support the IrDA peripheral on the
Alchemy Au1000 and Au1100 SoCs.
Say M to build a module; it will be called au1k_ir.ko</help>
			</entry>
			<entry name="SMC_IRCC_FIR">
				<label>SMSC IrCC</label>
				<help>Say Y here if you want to build support for the SMC Infrared
Communications Controller.  It is used in a wide variety of
laptops (Fujitsu, Sony, Compaq and some Toshiba).
To compile it as a module, choose M here: the module will be called
smsc-ircc2.o.</help>
			</entry>
			<entry name="ALI_FIR">
				<label>ALi M5123 FIR</label>
				<help>Say Y here if you want to build support for the ALi M5123 FIR
Controller.  The ALi M5123 FIR Controller is embedded in ALi M1543C,
M1535, M1535D, M1535+, M1535D South Bridge.  This driver supports
SIR, MIR and FIR (4Mbps) speeds.

To compile it as a module, choose M here: the module will be called
ali-ircc.</help>
			</entry>
			<entry name="VLSI_FIR">
				<label>VLSI 82C147 SIR/MIR/FIR</label>
				<help>Say Y here if you want to build support for the VLSI 82C147
PCI-IrDA Controller. This controller is used by the HP OmniBook 800
and 5500 notebooks. The driver provides support for SIR, MIR and
FIR (4Mbps) speeds.

To compile it as a module, choose M here: the module will be called
vlsi_ir.</help>
			</entry>
			<entry name="SA1100_FIR">
				<label>SA1100 Internal IR</label>
			</entry>
			<entry name="VIA_FIR">
				<label>VIA VT8231/VT1211 SIR/MIR/FIR</label>
				<help>Say Y here if you want to build support for the VIA VT8231
and VIA VT1211 IrDA controllers, found on the motherboards using
those VIA chipsets. To use this controller, you will need
to plug a specific 5 pins FIR IrDA dongle in the specific
motherboard connector. The driver provides support for SIR, MIR
and FIR (4Mbps) speeds.

You will need to specify the 'dongle_id' module parameter to
indicate the FIR dongle attached to the controller.

To compile it as a module, choose M here: the module will be called
via-ircc.</help>
			</entry>
			<entry name="PXA_FICP">
				<label>Intel PXA2xx Internal FICP</label>
				<help>Say Y or M here if you want to build support for the PXA2xx
built-in IRDA interface which can support both SIR and FIR.
This driver relies on platform specific helper routines so
available capabilities may vary from one PXA2xx target to
another.</help>
			</entry>
			<entry name="MCS_FIR">
				<label>MosChip MCS7780 IrDA-USB dongle</label>
				<help>Say Y or M here if you want to build support for the MosChip
MCS7780 IrDA-USB bridge device driver.

USB bridge based on the MosChip MCS7780 don't conform to the
IrDA-USB device class specification, and therefore need their
own specific driver. Those dongles support SIR and FIR (4Mbps)
speeds.

To compile it as a module, choose M here: the module will be called
mcs7780.</help>
			</entry>
		</container>
		<entry name="BT">
			<label>Bluetooth subsystem support</label>
			<help>Bluetooth is low-cost, low-power, short-range wireless technology.
It was designed as a replacement for cables and other short-range
technologies like IrDA.  Bluetooth operates in personal area range
that typically extends up to 10 meters.  More information about
Bluetooth can be found at &lt;http://www.bluetooth.com/&gt;.

Linux Bluetooth subsystem consist of several layers:
Bluetooth Core
HCI device and connection manager, scheduler
SCO audio links
L2CAP (Logical Link Control and Adaptation Protocol)
SMP (Security Manager Protocol) on LE (Low Energy) links
HCI Device drivers (Interface to the hardware)
RFCOMM Module (RFCOMM Protocol)
BNEP Module (Bluetooth Network Encapsulation Protocol)
CMTP Module (CAPI Message Transport Protocol)
HIDP Module (Human Interface Device Protocol)

Say Y here to compile Bluetooth support into the kernel or say M to
compile it as module (bluetooth).

To use Linux Bluetooth subsystem, you will need several user-space
utilities like hciconfig and bluetoothd.  These utilities and updates
to Bluetooth kernel modules are provided in the BlueZ packages.  For
more information, see &lt;http://www.bluez.org/&gt;.</help>
		</entry>
		<entry name="BT_BREDR">
			<label>Bluetooth Classic (BR/EDR) features</label>
		</entry>
		<entry name="BT_RFCOMM">
			<label>RFCOMM protocol support</label>
			<help>RFCOMM provides connection oriented stream transport.  RFCOMM
support is required for Dialup Networking, OBEX and other Bluetooth
applications.

Say Y here to compile RFCOMM support into the kernel or say M to
compile it as module (rfcomm).</help>
		</entry>
		<entry name="BT_RFCOMM_TTY">
			<label>RFCOMM TTY support</label>
			<help>This option enables TTY emulation support for RFCOMM channels.

</help>
		</entry>
		<entry name="BT_BNEP">
			<label>BNEP protocol support</label>
			<help>BNEP (Bluetooth Network Encapsulation Protocol) is Ethernet
emulation layer on top of Bluetooth.  BNEP is required for
Bluetooth PAN (Personal Area Network).

Say Y here to compile BNEP support into the kernel or say M to
compile it as module (bnep).</help>
		</entry>
		<entry name="BT_BNEP_MC_FILTER">
			<label>Multicast filter support</label>
			<help>This option enables the multicast filter support for BNEP.</help>
		</entry>
		<entry name="BT_BNEP_PROTO_FILTER">
			<label>Protocol filter support</label>
			<help>This option enables the protocol filter support for BNEP.

</help>
		</entry>
		<entry name="BT_CMTP">
			<label>CMTP protocol support</label>
			<help>CMTP (CAPI Message Transport Protocol) is a transport layer
for CAPI messages.  CMTP is required for the Bluetooth Common
ISDN Access Profile.

Say Y here to compile CMTP support into the kernel or say M to
compile it as module (cmtp).

</help>
		</entry>
		<entry name="BT_HIDP">
			<label>HIDP protocol support</label>
			<help>HIDP (Human Interface Device Protocol) is a transport layer
for HID reports.  HIDP is required for the Bluetooth Human
Interface Device Profile.

Say Y here to compile HIDP support into the kernel or say M to
compile it as module (hidp).

</help>
		</entry>
		<entry name="BT_HS">
			<label>Bluetooth High Speed (HS) features</label>
		</entry>
		<entry name="BT_LE">
			<label>Bluetooth Low Energy (LE) features</label>
		</entry>
		<entry name="BT_6LOWPAN">
			<label>Bluetooth 6LoWPAN support</label>
			<help>IPv6 compression over Bluetooth Low Energy.</help>
		</entry>
		<entry name="BT_LEDS">
			<label>Enable LED triggers</label>
			<help>This option selects a few LED triggers for different
Bluetooth events.</help>
		</entry>
		<entry name="BT_SELFTEST">
			<label>Bluetooth self testing support</label>
			<help>Run self tests when initializing the Bluetooth subsystem.  This
is a developer option and can cause significant delay when booting
the system.

When the Bluetooth subsystem is built as module, then the test
cases are run first thing at module load time.  When the Bluetooth
subsystem is compiled into the kernel image, then the test cases
are run late in the initcall hierarchy.</help>
		</entry>
		<entry name="BT_SELFTEST_ECDH">
			<label>ECDH test cases</label>
			<help>Run test cases for ECDH cryptographic functionality used by the
Bluetooth Low Energy Secure Connections feature.</help>
		</entry>
		<entry name="BT_SELFTEST_SMP">
			<label>SMP test cases</label>
			<help>Run test cases for SMP cryptographic functionality, including both
legacy SMP as well as the Secure Connections features.</help>
		</entry>
		<entry name="BT_DEBUGFS">
			<label>Export Bluetooth internals in debugfs</label>
			<help>Provide extensive information about internal Bluetooth states
in debugfs.</help>
		</entry>
		<container name="Bluetooth_device_drivers">
			<label>Bluetooth device drivers</label>
			<entry name="BT_INTEL"/>
			<entry name="BT_BCM"/>
			<entry name="BT_RTL"/>
			<entry name="BT_QCA"/>
			<entry name="BT_HCIBTUSB">
				<label>HCI USB driver</label>
				<help>Bluetooth HCI USB driver.
This driver is required if you want to use Bluetooth devices with
USB interface.

Say Y here to compile support for Bluetooth USB devices into the
kernel or say M to compile it as module (btusb).</help>
			</entry>
			<entry name="BT_HCIBTUSB_BCM">
				<label>Broadcom protocol support</label>
				<help>The Broadcom protocol support enables firmware and patchram
download support for Broadcom Bluetooth controllers.

Say Y here to compile support for Broadcom protocol.</help>
			</entry>
			<entry name="BT_HCIBTUSB_RTL">
				<label>Realtek protocol support</label>
				<help>The Realtek protocol support enables firmware and configuration
download support for Realtek Bluetooth controllers.

Say Y here to compile support for Realtek protocol.</help>
			</entry>
			<entry name="BT_HCIBTSDIO">
				<label>HCI SDIO driver</label>
				<help>Bluetooth HCI SDIO driver.
This driver is required if you want to use Bluetooth device with
SDIO interface.

Say Y here to compile support for Bluetooth SDIO devices into the
kernel or say M to compile it as module (btsdio).</help>
			</entry>
			<entry name="BT_HCIUART">
				<label>HCI UART driver</label>
				<help>Bluetooth HCI UART driver.
This driver is required if you want to use Bluetooth devices with
serial port interface. You will also need this driver if you have
UART based Bluetooth PCMCIA and CF devices like Xircom Credit Card
adapter and BrainBoxes Bluetooth PC Card.

Say Y here to compile support for Bluetooth UART devices into the
kernel or say M to compile it as module (hci_uart).</help>
			</entry>
			<entry name="BT_HCIUART_H4">
				<label>UART (H4) protocol support</label>
				<help>UART (H4) is serial protocol for communication between Bluetooth
device and host. This protocol is required for most Bluetooth devices
with UART interface, including PCMCIA and CF cards.

Say Y here to compile support for HCI UART (H4) protocol.</help>
			</entry>
			<entry name="BT_HCIUART_BCSP">
				<label>BCSP protocol support</label>
				<help>BCSP (BlueCore Serial Protocol) is serial protocol for communication
between Bluetooth device and host. This protocol is required for non
USB Bluetooth devices based on CSR BlueCore chip, including PCMCIA and
CF cards.

Say Y here to compile support for HCI BCSP protocol.</help>
			</entry>
			<entry name="BT_HCIUART_ATH3K">
				<label>Atheros AR300x serial support</label>
				<help>HCIATH3K (HCI Atheros AR300x) is a serial protocol for
communication between host and Atheros AR300x Bluetooth devices.
This protocol enables AR300x chips to be enabled with
power management support.
Enable this if you have Atheros AR300x serial Bluetooth device.

Say Y here to compile support for HCI UART ATH3K protocol.</help>
			</entry>
			<entry name="BT_HCIUART_LL">
				<label>HCILL protocol support</label>
				<help>HCILL (HCI Low Level) is a serial protocol for communication
between Bluetooth device and host. This protocol is required for
serial Bluetooth devices that are based on Texas Instruments'
BRF chips.

Say Y here to compile support for HCILL protocol.</help>
			</entry>
			<entry name="BT_HCIUART_3WIRE">
				<label>Three-wire UART (H5) protocol support</label>
				<help>The HCI Three-wire UART Transport Layer makes it possible to
user the Bluetooth HCI over a serial port interface. The HCI
Three-wire UART Transport Layer assumes that the UART
communication may have bit errors, overrun errors or burst
errors and thereby making CTS/RTS lines unnecessary.

Say Y here to compile support for Three-wire UART protocol.</help>
			</entry>
			<entry name="BT_HCIUART_INTEL">
				<label>Intel protocol support</label>
				<help>The Intel protocol support enables Bluetooth HCI over serial
port interface for Intel Bluetooth controllers.

Say Y here to compile support for Intel protocol.</help>
			</entry>
			<entry name="BT_HCIUART_BCM">
				<label>Broadcom protocol support</label>
				<help>The Broadcom protocol support enables Bluetooth HCI over serial
port interface for Broadcom Bluetooth controllers.

Say Y here to compile support for Broadcom protocol.</help>
			</entry>
			<entry name="BT_HCIUART_QCA">
				<label>Qualcomm Atheros protocol support</label>
				<help>The Qualcomm Atheros protocol supports HCI In-Band Sleep feature
over serial port interface(H4) between controller and host.
This protocol is required for UART clock control for QCA Bluetooth
devices.

Say Y here to compile support for QCA protocol.</help>
			</entry>
			<entry name="BT_HCIUART_AG6XX">
				<label>Intel AG6XX protocol support</label>
				<help>The Intel/AG6XX protocol support enables Bluetooth HCI over serial
port interface for Intel ibt 2.1 Bluetooth controllers.

Say Y here to compile support for Intel AG6XX protocol.</help>
			</entry>
			<entry name="BT_HCIBCM203X">
				<label>HCI BCM203x USB driver</label>
				<help>Bluetooth HCI BCM203x USB driver.
This driver provides the firmware loading mechanism for the Broadcom
Blutonium based devices.

Say Y here to compile support for HCI BCM203x devices into the
kernel or say M to compile it as module (bcm203x).</help>
			</entry>
			<entry name="BT_HCIBPA10X">
				<label>HCI BPA10x USB driver</label>
				<help>Bluetooth HCI BPA10x USB driver.
This driver provides support for the Digianswer BPA 100/105 Bluetooth
sniffer devices.

Say Y here to compile support for HCI BPA10x devices into the
kernel or say M to compile it as module (bpa10x).</help>
			</entry>
			<entry name="BT_HCIBFUSB">
				<label>HCI BlueFRITZ! USB driver</label>
				<help>Bluetooth HCI BlueFRITZ! USB driver.
This driver provides support for Bluetooth USB devices with AVM
interface:
AVM BlueFRITZ! USB

Say Y here to compile support for HCI BFUSB devices into the
kernel or say M to compile it as module (bfusb).</help>
			</entry>
			<entry name="BT_HCIDTL1">
				<label>HCI DTL1 (PC Card) driver</label>
				<help>Bluetooth HCI DTL1 (PC Card) driver.
This driver provides support for Bluetooth PCMCIA devices with
Nokia DTL1 interface:
Nokia Bluetooth Card
Socket Bluetooth CF Card

Say Y here to compile support for HCI DTL1 devices into the
kernel or say M to compile it as module (dtl1_cs).</help>
			</entry>
			<entry name="BT_HCIBT3C">
				<label>HCI BT3C (PC Card) driver</label>
				<help>Bluetooth HCI BT3C (PC Card) driver.
This driver provides support for Bluetooth PCMCIA devices with
3Com BT3C interface:
3Com Bluetooth Card (3CRWB6096)
HP Bluetooth Card

Say Y here to compile support for HCI BT3C devices into the
kernel or say M to compile it as module (bt3c_cs).</help>
			</entry>
			<entry name="BT_HCIBLUECARD">
				<label>HCI BlueCard (PC Card) driver</label>
				<help>Bluetooth HCI BlueCard (PC Card) driver.
This driver provides support for Bluetooth PCMCIA devices with
Anycom BlueCard interface:
Anycom Bluetooth PC Card
Anycom Bluetooth CF Card

Say Y here to compile support for HCI BlueCard devices into the
kernel or say M to compile it as module (bluecard_cs).</help>
			</entry>
			<entry name="BT_HCIBTUART">
				<label>HCI UART (PC Card) device driver</label>
				<help>Bluetooth HCI UART (PC Card) driver.
This driver provides support for Bluetooth PCMCIA devices with
an UART interface:
Xircom CreditCard Bluetooth Adapter
Xircom RealPort2 Bluetooth Adapter
Sphinx PICO Card
H-Soft blue+Card
Cyber-blue Compact Flash Card

Say Y here to compile support for HCI UART devices into the
kernel or say M to compile it as module (btuart_cs).</help>
			</entry>
			<entry name="BT_HCIVHCI">
				<label>HCI VHCI (Virtual HCI device) driver</label>
				<help>Bluetooth Virtual HCI device driver.
This driver is required if you want to use HCI Emulation software.

Say Y here to compile support for virtual HCI devices into the
kernel or say M to compile it as module (hci_vhci).</help>
			</entry>
			<entry name="BT_MRVL">
				<label>Marvell Bluetooth driver support</label>
				<help>The core driver to support Marvell Bluetooth devices.

This driver is required if you want to support
Marvell Bluetooth devices, such as 8688/8787/8797/8887/8897/8997.

Say Y here to compile Marvell Bluetooth driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="BT_MRVL_SDIO">
				<label>Marvell BT-over-SDIO driver</label>
				<help>The driver for Marvell Bluetooth chipsets with SDIO interface.

This driver is required if you want to use Marvell Bluetooth
devices with SDIO interface. Currently SD8688/SD8787/SD8797/SD8887/SD8897/SD8997
chipsets are supported.

Say Y here to compile support for Marvell BT-over-SDIO driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="BT_ATH3K">
				<label>Atheros firmware download driver</label>
				<help>Bluetooth firmware download driver.
This driver loads the firmware into the Atheros Bluetooth
chipset.

Say Y here to compile support for &quot;Atheros firmware download driver&quot;
into the kernel or say M to compile it as module (ath3k).</help>
			</entry>
			<entry name="BT_WILINK">
				<label>Texas Instruments WiLink7 driver</label>
				<help>This enables the Bluetooth driver for Texas Instrument's BT/FM/GPS
combo devices. This makes use of shared transport line discipline
core driver to communicate with the BT core of the combo chip.

Say Y here to compile support for Texas Instrument's WiLink7 driver
into the kernel or say M to compile it as module (btwilink).</help>
			</entry>
		</container>
		<entry name="AF_RXRPC">
			<label>RxRPC session sockets</label>
			<help>Say Y or M here to include support for RxRPC session sockets (just
the transport part, not the presentation part: (un)marshalling is
left to the application).

These are used for AFS kernel filesystem and userspace utilities.

This module at the moment only supports client operations and is
currently incomplete.

See Documentation/networking/rxrpc.txt.</help>
		</entry>
		<entry name="AF_RXRPC_DEBUG">
			<label>RxRPC dynamic debugging</label>
			<help>Say Y here to make runtime controllable debugging messages appear.

See Documentation/networking/rxrpc.txt.</help>
		</entry>
		<entry name="RXKAD">
			<label>RxRPC Kerberos security</label>
			<help>Provide kerberos 4 and AFS kaserver security handling for AF_RXRPC
through the use of the key retention service.

See Documentation/networking/rxrpc.txt.
</help>
		</entry>
		<entry name="AF_KCM">
			<label>KCM sockets</label>
			<help>KCM (Kernel Connection Multiplexor) sockets provide a method
for multiplexing messages of a message based application
protocol over kernel connectons (e.g. TCP connections).

</help>
		</entry>
		<entry name="FIB_RULES"/>
		<entry name="WIRELESS">
			<label>Wireless</label>
		</entry>
		<entry name="WIRELESS_EXT"/>
		<entry name="WEXT_CORE"/>
		<entry name="WEXT_PROC"/>
		<entry name="WEXT_SPY"/>
		<entry name="WEXT_PRIV"/>
		<entry name="CFG80211">
			<label>cfg80211 - wireless configuration API</label>
			<help>cfg80211 is the Linux wireless LAN (802.11) configuration API.
Enable this if you have a wireless device.

For more information refer to documentation on the wireless wiki:

http://wireless.kernel.org/en/developers/Documentation/cfg80211

When built as a module it will be called cfg80211.</help>
		</entry>
		<entry name="NL80211_TESTMODE">
			<label>nl80211 testmode command</label>
			<help>The nl80211 testmode command helps implementing things like
factory calibration or validation tools for wireless chips.

Select this option ONLY for kernels that are specifically
built for such purposes.

Debugging tools that are supposed to end up in the hands of
users should better be implemented with debugfs.

Say N.</help>
		</entry>
		<entry name="CFG80211_DEVELOPER_WARNINGS">
			<label>enable developer warnings</label>
			<help>This option enables some additional warnings that help
cfg80211 developers and driver developers, but beware that
they can also trigger due to races with userspace.

For example, when a driver reports that it was disconnected
from the AP, but the user disconnects manually at the same
time, the warning might trigger spuriously due to races.

Say Y only if you are developing cfg80211 or a driver based
on it (or mac80211).</help>
		</entry>
		<entry name="CFG80211_CERTIFICATION_ONUS">
			<label>cfg80211 certification onus</label>
			<help>You should disable this option unless you are both capable
and willing to ensure your system will remain regulatory
compliant with the features available under this option.
Some options may still be under heavy development and
for whatever reason regulatory compliance has not or
cannot yet be verified. Regulatory verification may at
times only be possible until you have the final system
in place.

This option should only be enabled by system integrators
or distributions that have done work necessary to ensure
regulatory certification on the system with the enabled
features. Alternatively you can enable this option if
you are a wireless researcher and are working in a controlled
and approved environment by your local regulatory agency.</help>
		</entry>
		<entry name="CFG80211_REG_CELLULAR_HINTS">
			<label>cfg80211 regulatory support for cellular base station hints</label>
			<help>This option enables support for parsing regulatory hints
from cellular base stations. If enabled and at least one driver
claims support for parsing cellular base station hints the
regulatory core will allow and parse these regulatory hints.
The regulatory core will only apply these regulatory hints on
drivers that support this feature. You should only enable this
feature if you have tested and validated this feature on your
systems.</help>
		</entry>
		<entry name="CFG80211_REG_RELAX_NO_IR">
			<label>cfg80211 support for NO_IR relaxation</label>
			<help>This option enables support for relaxation of the NO_IR flag for
situations that certain regulatory bodies have provided clarifications
on how relaxation can occur. This feature has an inherent dependency on
userspace features which must have been properly tested and as such is
not enabled by default.

A relaxation feature example is allowing the operation of a P2P group
owner (GO) on channels marked with NO_IR if there is an additional BSS
interface which associated to an AP which userspace assumes or confirms
to be an authorized master, i.e., with radar detection support and DFS
capabilities. However, note that in order to not create daisy chain
scenarios, this relaxation is not allowed in cases where the BSS client
is associated to P2P GO and in addition the P2P GO instantiated on
a channel due to this relaxation should not allow connection from
non P2P clients.

The regulatory core will apply these relaxations only for drivers that
support this feature by declaring the appropriate channel flags and
capabilities in their registration flow.</help>
		</entry>
		<entry name="CFG80211_DEFAULT_PS">
			<label>enable powersave by default</label>
			<help>This option enables powersave mode by default.

If this causes your applications to misbehave you should fix your
applications instead -- they need to register their network
latency requirement, see Documentation/power/pm_qos_interface.txt.</help>
		</entry>
		<entry name="CFG80211_DEBUGFS">
			<label>cfg80211 DebugFS entries</label>
			<help>You can enable this if you want debugfs entries for cfg80211.

If unsure, say N.</help>
		</entry>
		<entry name="CFG80211_INTERNAL_REGDB">
			<label>use statically compiled regulatory rules database&quot; if EXPERT</label>
			<help>This option generates an internal data structure representing
the wireless regulatory rules described in net/wireless/db.txt
and includes code to query that database. This is an alternative
to using CRDA for defining regulatory rules for the kernel.

Using this option requires some parsing of the db.txt at build time,
the parser will be upkept with the latest wireless-regdb updates but
older wireless-regdb formats will be ignored. The parser may later
be replaced to avoid issues with conflicts on versions of
wireless-regdb.

For details see:

http://wireless.kernel.org/en/developers/Regulatory

Most distributions have a CRDA package. So if unsure, say N.</help>
		</entry>
		<entry name="CFG80211_CRDA_SUPPORT">
			<label>support CRDA&quot; if CFG80211_INTERNAL_REGDB</label>
			<help>You should enable this option unless you know for sure you have no
need for it, for example when using internal regdb (above.)

If unsure, say Y.</help>
		</entry>
		<entry name="CFG80211_WEXT">
			<label>cfg80211 wireless extensions compatibility&quot; if !CFG80211_WEXT_EXPORT</label>
			<help>Enable this option if you need old userspace for wireless
extensions with cfg80211-based drivers.</help>
		</entry>
		<entry name="CFG80211_WEXT_EXPORT">
			<help>Drivers should select this option if they require cfg80211's
wext compatibility symbols to be exported.</help>
		</entry>
		<entry name="LIB80211">
			<help>This options enables a library of common routines used
by IEEE802.11 wireless LAN drivers.

Drivers should select this themselves if needed.</help>
		</entry>
		<entry name="LIB80211_CRYPT_WEP"/>
		<entry name="LIB80211_CRYPT_CCMP"/>
		<entry name="LIB80211_CRYPT_TKIP"/>
		<entry name="LIB80211_DEBUG">
			<label>lib80211 debugging messages</label>
			<help>You can enable this if you want verbose debugging messages
from lib80211.

If unsure, say N.
</help>
		</entry>
		<entry name="MAC80211">
			<label>Generic IEEE 802.11 Networking Stack (mac80211)</label>
			<help>This option enables the hardware independent IEEE 802.11
networking stack.</help>
		</entry>
		<entry name="MAC80211_HAS_RC"/>
		<entry name="MAC80211_RC_MINSTREL">
			<label>Minstrel&quot; if EXPERT</label>
			<help>This option enables the 'minstrel' TX rate control algorithm</help>
		</entry>
		<entry name="MAC80211_RC_MINSTREL_HT">
			<label>Minstrel 802.11n support&quot; if EXPERT</label>
			<help>This option enables the 'minstrel_ht' TX rate control algorithm</help>
		</entry>
		<entry name="MAC80211_RC_MINSTREL_VHT">
			<label>Minstrel 802.11ac support&quot; if EXPERT</label>
			<help>This option enables VHT in the 'minstrel_ht' TX rate control algorithm</help>
		</entry>
		<entry name="MAC80211_RC_DEFAULT_MINSTREL">
			<label>Minstrel</label>
			<help>Select Minstrel as the default rate control algorithm.</help>
		</entry>
		<entry name="MAC80211_RC_DEFAULT"/>
		<entry name="MAC80211_MESH">
			<label>Enable mac80211 mesh networking (pre-802.11s) support</label>
			<help>This options enables support of Draft 802.11s mesh networking.
The implementation is based on Draft 2.08 of the Mesh Networking
amendment.  However, no compliance with that draft is claimed or even
possible, as drafts leave a number of identifiers to be defined after
ratification.  For more information visit http://o11s.org/.</help>
		</entry>
		<entry name="MAC80211_LEDS">
			<label>Enable LED triggers</label>
			<help>This option enables a few LED triggers for different
packet receive/transmit events.</help>
		</entry>
		<entry name="MAC80211_DEBUGFS">
			<label>Export mac80211 internals in DebugFS</label>
			<help>Select this to see extensive information about
the internal state of mac80211 in debugfs.

Say N unless you know you need this.</help>
		</entry>
		<entry name="MAC80211_MESSAGE_TRACING">
			<label>Trace all mac80211 debug messages</label>
			<help>Select this option to have mac80211 register the
mac80211_msg trace subsystem with tracepoints to
collect all debugging messages, independent of
printing them into the kernel log.

The overhead in this option is that all the messages
need to be present in the binary and formatted at
runtime for tracing.</help>
		</entry>
		<entry name="MAC80211_DEBUG_MENU">
			<label>Select mac80211 debugging features</label>
			<help>This option collects various mac80211 debug settings.</help>
		</entry>
		<entry name="MAC80211_NOINLINE">
			<label>Do not inline TX/RX handlers</label>
			<help>This option affects code generation in mac80211, when
selected some functions are marked &quot;noinline&quot; to allow
easier debugging of problems in the transmit and receive
paths.

This option increases code size a bit and inserts a lot
of function calls in the code, but is otherwise safe to
enable.

If unsure, say N unless you expect to be finding problems
in mac80211.</help>
		</entry>
		<entry name="MAC80211_VERBOSE_DEBUG">
			<label>Verbose debugging output</label>
			<help>Selecting this option causes mac80211 to print out
many debugging messages. It should not be selected
on production systems as some of the messages are
remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MLME_DEBUG">
			<label>Verbose managed MLME output</label>
			<help>Selecting this option causes mac80211 to print out
debugging messages for the managed-mode MLME. It
should not be selected on production systems as some
of the messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_STA_DEBUG">
			<label>Verbose station debugging</label>
			<help>Selecting this option causes mac80211 to print out
debugging messages for station addition/removal.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_HT_DEBUG">
			<label>Verbose HT debugging</label>
			<help>This option enables 802.11n High Throughput features
debug tracing output.

It should not be selected on production systems as some
of the messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_OCB_DEBUG">
			<label>Verbose OCB debugging</label>
			<help>Selecting this option causes mac80211 to print out
very verbose OCB debugging messages. It should not
be selected on production systems as those messages
are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_IBSS_DEBUG">
			<label>Verbose IBSS debugging</label>
			<help>Selecting this option causes mac80211 to print out
very verbose IBSS debugging messages. It should not
be selected on production systems as those messages
are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_PS_DEBUG">
			<label>Verbose powersave mode debugging</label>
			<help>Selecting this option causes mac80211 to print out very
verbose power save mode debugging messages (when mac80211
is an AP and has power saving stations.)
It should not be selected on production systems as those
messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MPL_DEBUG">
			<label>Verbose mesh peer link debugging</label>
			<help>Selecting this option causes mac80211 to print out very
verbose mesh peer link debugging messages (when mac80211
is taking part in a mesh network).
It should not be selected on production systems as those
messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MPATH_DEBUG">
			<label>Verbose mesh path debugging</label>
			<help>Selecting this option causes mac80211 to print out very
verbose mesh path selection debugging messages (when mac80211
is taking part in a mesh network).
It should not be selected on production systems as those
messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MHWMP_DEBUG">
			<label>Verbose mesh HWMP routing debugging</label>
			<help>Selecting this option causes mac80211 to print out very
verbose mesh routing (HWMP) debugging messages (when mac80211
is taking part in a mesh network).
It should not be selected on production systems as those
messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MESH_SYNC_DEBUG">
			<label>Verbose mesh synchronization debugging</label>
			<help>Selecting this option causes mac80211 to print out very verbose mesh
synchronization debugging messages (when mac80211 is taking part in a
mesh network).

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MESH_CSA_DEBUG">
			<label>Verbose mesh channel switch debugging</label>
			<help>Selecting this option causes mac80211 to print out very verbose mesh
channel switch debugging messages (when mac80211 is taking part in a
mesh network).

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_MESH_PS_DEBUG">
			<label>Verbose mesh powersave debugging</label>
			<help>Selecting this option causes mac80211 to print out very verbose mesh
powersave debugging messages (when mac80211 is taking part in a
mesh network).

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_TDLS_DEBUG">
			<label>Verbose TDLS debugging</label>
			<help>Selecting this option causes mac80211 to print out very
verbose TDLS selection debugging messages (when mac80211
is a TDLS STA).
It should not be selected on production systems as those
messages are remotely triggerable.

Do not select this option.</help>
		</entry>
		<entry name="MAC80211_DEBUG_COUNTERS">
			<label>Extra statistics for TX/RX debugging</label>
			<help>Selecting this option causes mac80211 to keep additional
and very verbose statistics about TX and RX handler use
as well as a few selected dot11 counters. These will be
exposed in debugfs.

Note that some of the counters are not concurrency safe
and may thus not always be accurate.

If unsure, say N.</help>
		</entry>
		<entry name="MAC80211_STA_HASH_MAX_SIZE">
			<label>Station hash table maximum size&quot; if MAC80211_DEBUG_MENU</label>
			<help>Setting this option to a low value (e.g. 4) allows testing the
hash table with collisions relatively deterministically (just
connect more stations than the number selected here.)

If unsure, leave the default of 0.
</help>
		</entry>
		<entry name="WIMAX">
			<label>WiMAX Wireless Broadband support</label>
			<help>
Select to configure support for devices that provide
wireless broadband connectivity using the WiMAX protocol
(IEEE 802.16).

Please note that most of these devices require signing up
for a service plan with a provider.

The different WiMAX drivers can be enabled in the menu entry

Device Drivers &gt; Network device support &gt; WiMAX Wireless
Broadband devices

If unsure, it is safe to select M (module).

config WIMAX_DEBUG_LEVEL
int &quot;WiMAX debug level&quot;
depends on WIMAX
default 8
help

Select the maximum debug verbosity level to be compiled into
the WiMAX stack code.

By default, debug messages are disabled at runtime and can
be selectively enabled for different parts of the code using
the sysfs debug-levels file.

If set at zero, this will compile out all the debug code.

It is recommended that it is left at 8.
</help>
		</entry>
		<entry name="RFKILL">
			<label>RF switch subsystem support</label>
			<help>Say Y here if you want to have control over RF switches
found on many WiFi and Bluetooth cards.

To compile this driver as a module, choose M here: the
module will be called rfkill.</help>
		</entry>
		<entry name="RFKILL_LEDS"/>
		<entry name="RFKILL_INPUT">
			<label>RF switch input support&quot; if EXPERT</label>
		</entry>
		<entry name="RFKILL_REGULATOR">
			<label>Generic rfkill regulator driver</label>
			<help>This options enable controlling radio transmitters connected to
voltage regulator using the regulator framework.

To compile this driver as a module, choose M here: the module will
be called rfkill-regulator.</help>
		</entry>
		<entry name="RFKILL_GPIO">
			<label>GPIO RFKILL driver</label>
			<help>If you say yes here you get support of a generic gpio RFKILL
driver.
</help>
		</entry>
		<entry name="NET_9P">
			<label>Plan 9 Resource Sharing Support (9P2000)</label>
			<help>If you say Y here, you will get experimental support for
Plan 9 resource sharing via the 9P2000 protocol.

See &lt;http://v9fs.sf.net&gt; for more information.

If unsure, say N.</help>
		</entry>
		<entry name="NET_9P_VIRTIO">
			<label>9P Virtio Transport</label>
			<help>This builds support for a transports between
guest partitions and a host partition.</help>
		</entry>
		<entry name="NET_9P_RDMA">
			<label>9P RDMA Transport (Experimental)</label>
			<help>This builds support for an RDMA transport.</help>
		</entry>
		<entry name="NET_9P_DEBUG">
			<label>Debug information</label>
			<help>Say Y if you want the 9P subsystem to log debug information.</help>
		</entry>
		<entry name="CAIF">
			<label>CAIF support</label>
			<help>The &quot;Communication CPU to Application CPU Interface&quot; (CAIF) is a packet
based connection-oriented MUX protocol developed by ST-Ericsson for use
with its modems. It is accessed from user space as sockets (PF_CAIF).

Say Y (or M) here if you build for a phone product (e.g. Android or
MeeGo ) that uses CAIF as transport, if unsure say N.

If you select to build it as module then CAIF_NETDEV also needs to be
built as modules. You will also need to say yes to any CAIF physical
devices that your platform requires.

See Documentation/networking/caif for a further explanation on how to
use and configure CAIF.</help>
		</entry>
		<entry name="CAIF_DEBUG">
			<label>Enable Debug</label>
			<help>Enable the inclusion of debug code in the CAIF stack.
Be aware that doing this will impact performance.
If unsure say N.</help>
		</entry>
		<entry name="CAIF_NETDEV">
			<label>CAIF GPRS Network device</label>
			<help>Say Y if you will be using a CAIF based GPRS network device.
This can be either built-in or a loadable module,
If you select to build it as a built-in then the main CAIF device must
also be a built-in.
If unsure say Y.</help>
		</entry>
		<entry name="CAIF_USB">
			<label>CAIF USB support</label>
			<help>Say Y if you are using CAIF over USB CDC NCM.
This can be either built-in or a loadable module,
If you select to build it as a built-in then the main CAIF device must
also be a built-in.
If unsure say N.
</help>
		</entry>
		<entry name="CEPH_LIB">
			<label>Ceph core library</label>
			<help>Choose Y or M here to include cephlib, which provides the
common functionality to both the Ceph filesystem and
to the rados block device (rbd).

More information at http://ceph.newdream.net/.

If unsure, say N.</help>
		</entry>
		<entry name="CEPH_LIB_PRETTYDEBUG">
			<label>Include file:line in ceph debug output</label>
			<help>If you say Y here, debug output will include a filename and
line to aid debugging.  This increases kernel size and slows
execution slightly when debug call sites are enabled (e.g.,
via CONFIG_DYNAMIC_DEBUG).

If unsure, say N.</help>
		</entry>
		<entry name="CEPH_LIB_USE_DNS_RESOLVER">
			<label>Use in-kernel support for DNS lookup</label>
			<help>If you say Y here, hostnames (e.g. monitor addresses) will
be resolved using the CONFIG_DNS_RESOLVER facility.

For information on how to use CONFIG_DNS_RESOLVER consult
Documentation/networking/dns_resolver.txt

If unsure, say N.

</help>
		</entry>
		<entry name="NFC">
			<label>NFC subsystem support</label>
			<help>Say Y here if you want to build support for NFC (Near field
communication) devices.

To compile this support as a module, choose M here: the module will
be called nfc.</help>
		</entry>
		<entry name="NFC_DIGITAL">
			<label>NFC Digital Protocol stack support</label>
			<help>Say Y if you want to build NFC digital protocol stack support.
This is needed by NFC chipsets whose firmware only implement
the NFC analog layer.

To compile this support as a module, choose M here: the module will
be called nfc_digital.</help>
		</entry>
		<entry name="NFC_NCI">
			<label>NCI protocol support</label>
			<help>NCI (NFC Controller Interface) is a communication protocol between
an NFC Controller (NFCC) and a Device Host (DH).

Say Y here to compile NCI support into the kernel or say M to
compile it as module (nci).</help>
		</entry>
		<entry name="NFC_NCI_SPI">
			<label>NCI over SPI protocol support</label>
			<help>NCI (NFC Controller Interface) is a communication protocol between
an NFC Controller (NFCC) and a Device Host (DH).

Say yes if you use an NCI driver that requires SPI link layer.</help>
		</entry>
		<entry name="NFC_NCI_UART">
			<label>NCI over UART protocol support</label>
			<help>Say yes if you use an NCI driver that requires UART link layer.
</help>
		</entry>
		<entry name="NFC_HCI">
			<label>NFC HCI implementation</label>
			<help>Say Y here if you want to build support for a kernel NFC HCI
implementation. This is mostly needed for devices that only process
HCI frames, like for example the NXP pn544.</help>
		</entry>
		<entry name="NFC_SHDLC">
			<label>SHDLC link layer for HCI based NFC drivers</label>
			<help>Say yes if you use an NFC HCI driver that requires SHDLC link layer.
If unsure, say N here.
</help>
		</entry>
		<container name="Near_Field_Communication_NFC_devices">
			<label>Near Field Communication (NFC) devices</label>
			<entry name="NFC_WILINK">
				<label>Texas Instruments NFC WiLink driver</label>
				<help>This enables the NFC driver for Texas Instrument's BT/FM/GPS/NFC
combo devices. This makes use of shared transport line discipline
core driver to communicate with the NFC core of the combo chip.

Say Y here to compile support for Texas Instrument's NFC WiLink driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="NFC_TRF7970A">
				<label>Texas Instruments TRF7970a NFC driver</label>
				<help>This option enables the NFC driver for Texas Instruments' TRF7970a
device. Such device supports 5 different protocols: ISO14443A,
ISO14443B, FeLiCa, ISO15693 and ISO18000-3.

Say Y here to compile support for TRF7970a into the kernel or
say M  to compile it as a module. The module will be called
trf7970a.ko.</help>
			</entry>
			<entry name="NFC_MEI_PHY">
				<label>MEI bus NFC device support</label>
				<help>This adds support to use an mei bus nfc device. Select this if you
will use an HCI NFC driver for an NFC chip connected behind an
Intel's Management Engine chip.

If unsure, say N.</help>
			</entry>
			<entry name="NFC_SIM">
				<label>NFC hardware simulator driver</label>
				<help>This driver declares two virtual NFC devices supporting NFC-DEP
protocol. An LLCP connection can be established between them and
all packets sent from one device is sent back to the other, acting as
loopback devices.

If unsure, say N.</help>
			</entry>
			<entry name="NFC_PORT100">
				<label>Sony NFC Port-100 Series USB device support</label>
				<help>This adds support for Sony Port-100 chip based USB devices such as the
RC-S380 dongle.

If unsure, say N.</help>
			</entry>
			<entry name="NFC_FDP">
				<label>Intel FDP NFC driver</label>
				<help>Intel Fields Peak NFC controller core driver.
This is a driver based on the NCI NFC kernel layers.

To compile this driver as a module, choose m here. The module will
be called fdp.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_FDP_I2C">
				<label>NFC FDP i2c support</label>
				<help>This module adds support for the Intel Fields Peak NFC controller
i2c interface.
Select this if your platform is using the i2c bus.

If you choose to build a module, it'll be called fdp_i2c.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_PN544">
				<help>NXP PN544 core driver.
This is a driver based on the HCI NFC kernel layers and
will thus not work with NXP libnfc library.</help>
			</entry>
			<entry name="NFC_PN544_I2C">
				<label>NXP PN544 device support (I2C)</label>
				<help>This module adds support for the NXP pn544 i2c interface.
Select this if your platform is using the i2c bus.

If you choose to build a module, it'll be called pn544_i2c.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_PN544_MEI">
				<label>NXP PN544 device support (MEI)</label>
				<help>This module adds support for the mei interface of adapters using
NXP pn544 chipsets.  Select this if your pn544 chipset
is handled by Intel's Management Engine Interface on your platform.

If you choose to build a module, it'll be called pn544_mei.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_PN533">
				<help>NXP PN533 core driver.
This driver provides core functionality for NXP PN533 NFC devices.</help>
			</entry>
			<entry name="NFC_PN533_USB">
				<label>NFC PN533 device support (USB)</label>
				<help>This module adds support for the NXP pn533 USB interface.
Select this if your platform is using the USB bus.

If you choose to build a module, it'll be called pn533_usb.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_PN533_I2C">
				<label>NFC PN533 device support (I2C)</label>
				<help>This module adds support for the NXP pn533 I2C interface.
Select this if your platform is using the I2C bus.

If you choose to build a module, it'll be called pn533_i2c.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_MICROREAD">
				<help>This module contains the main code for Inside Secure microread
NFC chipsets. It implements the chipset HCI logic and hooks into
the NFC kernel APIs. Physical layers will register against it.</help>
			</entry>
			<entry name="NFC_MICROREAD_I2C">
				<label>Inside Secure Microread device support (I2C)</label>
				<help>This module adds support for the i2c interface of adapters using
Inside microread chipsets.  Select this if your platform is using
the i2c bus.

If you choose to build a module, it'll be called microread_i2c.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_MICROREAD_MEI">
				<label>Inside Secure Microread device support (MEI)</label>
				<help>This module adds support for the mei interface of adapters using
Inside microread chipsets.  Select this if your microread chipset
is handled by Intel's Management Engine Interface on your platform.

If you choose to build a module, it'll be called microread_mei.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_MRVL">
				<help>The core driver to support Marvell NFC devices.

This driver is required if you want to support
Marvell NFC device 8897.</help>
			</entry>
			<entry name="NFC_MRVL_USB">
				<label>Marvell NFC-over-USB driver</label>
				<help>Marvell NFC-over-USB driver.

This driver provides support for Marvell NFC-over-USB devices:
8897.

Say Y here to compile support for Marvell NFC-over-USB driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="NFC_MRVL_UART">
				<label>Marvell NFC-over-UART driver</label>
				<help>Marvell NFC-over-UART driver.

This driver provides support for Marvell NFC-over-UART devices

Say Y here to compile support for Marvell NFC-over-UART driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="NFC_MRVL_I2C">
				<label>Marvell NFC-over-I2C driver</label>
				<help>Marvell NFC-over-I2C driver.

This driver provides support for Marvell NFC-over-I2C devices.

Say Y here to compile support for Marvell NFC-over-I2C driver
into the kernel or say M to compile it as module.</help>
			</entry>
			<entry name="NFC_MRVL_SPI">
				<label>Marvell NFC-over-SPI driver</label>
				<help>Marvell NFC-over-SPI driver.

This driver provides support for Marvell NFC-over-SPI devices.

Say Y here to compile support for Marvell NFC-over-SPI driver
into the kernel or say M to compile it as module.
</help>
			</entry>
			<entry name="NFC_ST21NFCA">
				<help>STMicroelectronics ST21NFCA core driver. It implements the chipset
HCI logic and hooks into the NFC kernel APIs. Physical layers will
register against it.</help>
			</entry>
			<entry name="NFC_ST21NFCA_I2C">
				<label>STMicroelectronics ST21NFCA NFC driver (I2C)</label>
				<help>This module adds support for the STMicroelectronics st21nfca i2c interface.
Select this if your platform is using the i2c bus.

If you choose to build a module, it'll be called st21nfca_i2c.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_ST_NCI">
				<help>STMicroelectronics NFC NCI chips core driver. It implements the chipset
NCI logic and hooks into the NFC kernel APIs. Physical layers will
register against it.</help>
			</entry>
			<entry name="NFC_ST_NCI_I2C">
				<label>STMicroelectronics ST NCI NFC driver (I2C)</label>
				<help>This module adds support for an I2C interface to the
STMicroelectronics NFC NCI chips familly.
Select this if your platform is using the i2c bus.

If you choose to build a module, it'll be called st-nci_i2c.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_ST_NCI_SPI">
				<label>STMicroelectronics ST NCI NFC driver (SPI)</label>
				<help>This module adds support for an SPI interface to the
STMicroelectronics NFC NCI chips familly.
Select this if your platform is using the spi bus.

If you choose to build a module, it'll be called st-nci_spi.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_NXP_NCI">
				<label>NXP-NCI NFC driver</label>
				<help>Generic core driver for NXP NCI chips such as the NPC100
or PN7150 families.
This is a driver based on the NCI NFC kernel layers and
will thus not work with NXP libnfc library.

To compile this driver as a module, choose m here. The module will
be called nxp_nci.
Say N if unsure.</help>
			</entry>
			<entry name="NFC_NXP_NCI_I2C">
				<label>NXP-NCI I2C support</label>
				<help>This module adds support for an I2C interface to the NXP NCI
chips.
Select this if your platform is using the I2C bus.

To compile this driver as a module, choose m here. The module will
be called nxp_nci_i2c.
Say Y if unsure.
</help>
			</entry>
			<entry name="NFC_S3FWRN5">
				<help>Core driver for Samsung S3FWRN5 NFC chip. Contains core utilities
of chip. It's intended to be used by PHYs to avoid duplicating lots
of common code.</help>
			</entry>
			<entry name="NFC_S3FWRN5_I2C">
				<label>Samsung S3FWRN5 I2C support</label>
				<help>This module adds support for an I2C interface to the S3FWRN5 chip.
Select this if your platform is using the I2C bus.

To compile this driver as a module, choose m here. The module will
be called s3fwrn5_i2c.ko.
Say N if unsure.
</help>
			</entry>
			<entry name="NFC_ST95HF">
				<label>ST95HF NFC Transceiver driver</label>
				<help>This enables the ST NFC driver for ST95HF NFC transceiver.
This makes use of SPI framework to communicate with transceiver
and registered with NFC digital core to support Linux NFC framework.

Say Y here to compile support for ST NFC transceiver ST95HF
linux driver into the kernel or say M to compile it as module.
</help>
			</entry>
		</container>
		<entry name="LWTUNNEL">
			<label>Network light weight tunnels</label>
			<help>This feature provides an infrastructure to support light weight
tunnels like mpls. There is no netdevice associated with a light
weight tunnel endpoint. Tunnel encapsulation parameters are stored
with light weight tunnel state associated with fib routes.</help>
		</entry>
		<entry name="DST_CACHE"/>
		<entry name="NET_DEVLINK">
			<label>Network physical/parent device Netlink interface</label>
			<help>Network physical/parent device Netlink interface provides
infrastructure to support access to physical chip-wide config and
monitoring.</help>
		</entry>
		<entry name="MAY_USE_DEVLINK">
			<help>Drivers using the devlink infrastructure should have a dependency
on MAY_USE_DEVLINK to ensure they do not cause link errors when
devlink is a loadable module and the driver using it is built-in.</help>
		</entry>
		<entry name="HAVE_CBPF_JIT"/>
		<entry name="HAVE_EBPF_JIT"/>
		<container name="Device_Drivers">
			<label>Device Drivers</label>
			<entry name="ARM_AMBA"/>
			<entry name="TEGRA_AHB">
				<help>Adds AHB configuration functionality for NVIDIA Tegra SoCs,
which controls AHB bus master arbitration and some performance
parameters (priority, prefetch size).</help>
			</entry>
			<container name="Generic_Driver_Options">
				<label>Generic Driver Options</label>
				<entry name="UEVENT_HELPER">
					<label>Support for uevent helper</label>
					<help>The uevent helper program is forked by the kernel for
every uevent.
Before the switch to the netlink-based uevent source, this was
used to hook hotplug scripts into kernel device events. It
usually pointed to a shell script at /sbin/hotplug.
This should not be used today, because usual systems create
many events at bootup or device discovery in a very short time
frame. One forked process per event can create so many processes
that it creates a high system load, or on smaller systems
it is known to create out-of-memory situations during bootup.</help>
				</entry>
				<entry name="UEVENT_HELPER_PATH">
					<label>path to uevent helper</label>
					<help>To disable user space helper program execution at by default
specify an empty string here. This setting can still be altered
via /proc/sys/kernel/hotplug or via /sys/kernel/uevent_helper
later at runtime.</help>
				</entry>
				<entry name="DEVTMPFS">
					<label>Maintain a devtmpfs filesystem to mount at /dev</label>
					<help>This creates a tmpfs/ramfs filesystem instance early at bootup.
In this filesystem, the kernel driver core maintains device
nodes with their default names and permissions for all
registered devices with an assigned major/minor number.
Userspace can modify the filesystem content as needed, add
symlinks, and apply needed permissions.
It provides a fully functional /dev directory, where usually
udev runs on top, managing permissions and adding meaningful
symlinks.
In very limited environments, it may provide a sufficient
functional /dev without any further help. It also allows simple
rescue systems, and reliably handles dynamic major/minor numbers.

Notice: if CONFIG_TMPFS isn't enabled, the simpler ramfs
file system will be used instead.</help>
				</entry>
				<entry name="DEVTMPFS_MOUNT">
					<label>Automount devtmpfs at /dev, after the kernel mounted the rootfs</label>
					<help>This will instruct the kernel to automatically mount the
devtmpfs filesystem at /dev, directly after the kernel has
mounted the root filesystem. The behavior can be overridden
with the commandline parameter: devtmpfs.mount=0|1.
This option does not affect initramfs based booting, here
the devtmpfs filesystem always needs to be mounted manually
after the rootfs is mounted.
With this option enabled, it allows to bring up a system in
rescue mode with init=/bin/sh, even when the /dev directory
on the rootfs is completely empty.</help>
				</entry>
				<entry name="STANDALONE">
					<label>Select only drivers that don't need compile-time external firmware</label>
					<help>Select this option if you don't have magic firmware for drivers that
need it.

If unsure, say Y.</help>
				</entry>
				<entry name="PREVENT_FIRMWARE_BUILD">
					<label>Prevent firmware from being built</label>
					<help>Say yes to avoid building firmware. Firmware is usually shipped
with the driver and only when updating the firmware should a
rebuild be made.
If unsure, say Y here.</help>
				</entry>
				<entry name="FW_LOADER">
					<label>Userspace firmware loading support&quot; if EXPERT</label>
					<help>This option is provided for the case where none of the in-tree modules
require userspace firmware loading support, but a module built
out-of-tree does.</help>
				</entry>
				<entry name="FIRMWARE_IN_KERNEL">
					<label>Include in-kernel firmware blobs in kernel binary</label>
					<help>The kernel source tree includes a number of firmware 'blobs'
that are used by various drivers. The recommended way to
use these is to run &quot;make firmware_install&quot;, which, after
converting ihex files to binary, copies all of the needed
binary files in firmware/ to /lib/firmware/ on your system so
that they can be loaded by userspace helpers on request.

Enabling this option will build each required firmware blob
into the kernel directly, where request_firmware() will find
them without having to call out to userspace. This may be
useful if your root file system requires a device that uses
such firmware and do not wish to use an initrd.

This single option controls the inclusion of firmware for
every driver that uses request_firmware() and ships its
firmware in the kernel source tree, which avoids a
proliferation of 'Include firmware for xxx device' options.

Say 'N' and let firmware be loaded from userspace.</help>
				</entry>
				<entry name="EXTRA_FIRMWARE">
					<label>External firmware blobs to build into the kernel binary</label>
					<help>This option allows firmware to be built into the kernel for the case
where the user either cannot or doesn't want to provide it from
userspace at runtime (for example, when the firmware in question is
required for accessing the boot device, and the user doesn't want to
use an initrd).

This option is a string and takes the (space-separated) names of the
firmware files -- the same names that appear in MODULE_FIRMWARE()
and request_firmware() in the source. These files should exist under
the directory specified by the EXTRA_FIRMWARE_DIR option, which is
by default the firmware subdirectory of the kernel source tree.

For example, you might set CONFIG_EXTRA_FIRMWARE=&quot;usb8388.bin&quot;, copy
the usb8388.bin file into the firmware directory, and build the kernel.
Then any request_firmware(&quot;usb8388.bin&quot;) will be satisfied internally
without needing to call out to userspace.

WARNING: If you include additional firmware files into your binary
kernel image that are not available under the terms of the GPL,
then it may be a violation of the GPL to distribute the resulting
image since it combines both GPL and non-GPL work. You should
consult a lawyer of your own before distributing such an image.</help>
				</entry>
				<entry name="EXTRA_FIRMWARE_DIR">
					<label>Firmware blobs root directory</label>
					<help>This option controls the directory in which the kernel build system
looks for the firmware files listed in the EXTRA_FIRMWARE option.
The default is firmware/ in the kernel source tree, but by changing
this option you can point it elsewhere, such as /lib/firmware/ or
some other directory containing the firmware files.</help>
				</entry>
				<entry name="FW_LOADER_USER_HELPER"/>
				<entry name="FW_LOADER_USER_HELPER_FALLBACK">
					<label>Fallback user-helper invocation for firmware loading</label>
					<help>This option enables / disables the invocation of user-helper
(e.g. udev) for loading firmware files as a fallback after the
direct file loading in kernel fails.  The user-mode helper is
no longer required unless you have a special firmware file that
resides in a non-standard path. Moreover, the udev support has
been deprecated upstream.

If you are unsure about this, say N here.</help>
				</entry>
				<entry name="WANT_DEV_COREDUMP">
					<help>Drivers should &quot;select&quot; this option if they desire to use the
device coredump mechanism.</help>
				</entry>
				<entry name="ALLOW_DEV_COREDUMP">
					<label>Allow device coredump&quot; if EXPERT</label>
					<help>This option controls if the device coredump mechanism is available or
not; if disabled, the mechanism will be omitted even if drivers that
can use it are enabled.
Say 'N' for more sensitive systems or systems that don't want
to ever access the information to not have the code, nor keep any
data.

If unsure, say Y.</help>
				</entry>
				<entry name="DEV_COREDUMP"/>
				<entry name="DEBUG_DRIVER">
					<label>Driver Core verbose debug messages</label>
					<help>Say Y here if you want the Driver core to produce a bunch of
debug messages to the system log. Select this if you are having a
problem with the driver core and want to see more of what is
going on.

If you are unsure about this, say N here.</help>
				</entry>
				<entry name="DEBUG_DEVRES">
					<label>Managed device resources verbose debug messages</label>
					<help>This option enables kernel parameter devres.log. If set to
non-zero, devres debug messages are printed. Select this if
you are having a problem with devres or want to debug
resource management for a managed device. devres.log can be
switched on and off from sysfs node.

If you are unsure about this, Say N here.</help>
				</entry>
				<entry name="SYS_HYPERVISOR"/>
				<entry name="GENERIC_CPU_DEVICES"/>
				<entry name="GENERIC_CPU_AUTOPROBE"/>
				<entry name="SOC_BUS"/>
				<entry name="REGMAP"/>
				<entry name="REGMAP_AC97"/>
				<entry name="REGMAP_I2C"/>
				<entry name="REGMAP_SPI"/>
				<entry name="REGMAP_SPMI"/>
				<entry name="REGMAP_MMIO"/>
				<entry name="REGMAP_IRQ"/>
				<entry name="DMA_SHARED_BUFFER">
					<help>This option enables the framework for buffer-sharing between
multiple drivers. A buffer is associated with a file using driver
APIs extension; the file's descriptor can then be passed on to other
driver.</help>
				</entry>
				<entry name="FENCE_TRACE">
					<label>Enable verbose FENCE_TRACE messages</label>
					<help>Enable the FENCE_TRACE printks. This will add extra
spam to the console log, but will make it easier to diagnose
lockup related problems for dma-buffers shared across multiple
devices.</help>
				</entry>
				<entry name="DMA_CMA">
					<label>DMA Contiguous Memory Allocator</label>
					<help>This enables the Contiguous Memory Allocator which allows drivers
to allocate big physically-contiguous blocks of memory for use with
hardware components that do not support I/O map nor scatter-gather.

You can disable CMA by specifying &quot;cma=0&quot; on the kernel's command
line.

For more information see &lt;include/linux/dma-contiguous.h&gt;.
If unsure, say &quot;n&quot;.</help>
				</entry>
				<entry name="CMA_SIZE_MBYTES">
					<label>Size in Mega Bytes</label>
					<help>Defines the size (in MiB) of the default memory area for Contiguous
Memory Allocator.  If the size of 0 is selected, CMA is disabled by
default, but it can be enabled by passing cma=size[MG] to the kernel.</help>
				</entry>
				<entry name="CMA_SIZE_PERCENTAGE">
					<label>Percentage of total memory</label>
					<help>Defines the size of the default memory area for Contiguous Memory
Allocator as a percentage of the total memory in the system.
If 0 percent is selected, CMA is disabled by default, but it can be
enabled by passing cma=size[MG] to the kernel.</help>
				</entry>
				<entry name="CMA_SIZE_SEL_MBYTES">
					<label>Use mega bytes value only</label>
				</entry>
				<entry name="CMA_SIZE_SEL_PERCENTAGE">
					<label>Use percentage value only</label>
				</entry>
				<entry name="CMA_SIZE_SEL_MIN">
					<label>Use lower value (minimum)</label>
				</entry>
				<entry name="CMA_SIZE_SEL_MAX">
					<label>Use higher value (maximum)</label>
				</entry>
				<entry name="CMA_ALIGNMENT">
					<label>Maximum PAGE_SIZE order of alignment for contiguous buffers</label>
					<help>DMA mapping framework by default aligns all buffers to the smallest
PAGE_SIZE order which is greater than or equal to the requested buffer
size. This works well for buffers up to a few hundreds kilobytes, but
for larger buffers it just a memory waste. With this parameter you can
specify the maximum PAGE_SIZE order for contiguous buffers. Larger
buffers will be aligned only to this specified order. The order is
expressed as a power of two multiplied by the PAGE_SIZE.

For example, if your system defaults to 4KiB pages, the order value
of 8 means that the buffers will be aligned up to 1MiB only.

If unsure, leave the default value &quot;8&quot;.</help>
				</entry>
			</container>
			<container name="Bus_devices">
				<label>Bus devices</label>
				<entry name="ARM_CCI"/>
				<entry name="ARM_CCI_PMU"/>
				<entry name="ARM_CCI400_COMMON"/>
				<entry name="ARM_CCI400_PMU">
					<label>ARM CCI400 PMU support</label>
					<help>Support for PMU events monitoring on the ARM CCI-400 (cache coherent
interconnect). CCI-400 supports counting events related to the
connected slave/master interfaces.</help>
				</entry>
				<entry name="ARM_CCI400_PORT_CTRL">
					<help>Low level power management driver for CCI400 cache coherent
interconnect for ARM platforms.</help>
				</entry>
				<entry name="ARM_CCI5xx_PMU">
					<label>ARM CCI-500/CCI-550 PMU support</label>
					<help>Support for PMU events monitoring on the ARM CCI-500/CCI-550 cache
coherent interconnects. Both of them provide 8 independent event counters,
which can count events pertaining to the slave/master interfaces as well
as the internal events to the CCI.

If unsure, say Y</help>
				</entry>
				<entry name="ARM_CCN">
					<label>ARM CCN driver support</label>
					<help>PMU (perf) driver supporting the ARM CCN (Cache Coherent Network)
interconnect.</help>
				</entry>
				<entry name="BRCMSTB_GISB_ARB">
					<label>Broadcom STB GISB bus arbiter</label>
					<help>Driver for the Broadcom Set Top Box System-on-a-chip internal bus
arbiter. This driver provides timeout and target abort error handling
and internal bus master decoding.</help>
				</entry>
				<entry name="IMX_WEIM">
					<label>Freescale EIM DRIVER</label>
					<help>Driver for i.MX WEIM controller.
The WEIM(Wireless External Interface Module) works like a bus.
You can attach many different devices on it, such as NOR, onenand.</help>
				</entry>
				<entry name="MIPS_CDMM">
					<label>MIPS Common Device Memory Map (CDMM) Driver</label>
					<help>Driver needed for the MIPS Common Device Memory Map bus in MIPS
cores. This bus is for per-CPU tightly coupled devices such as the
Fast Debug Channel (FDC).

For this to work, either your bootloader needs to enable the CDMM
region at an unused physical address on the boot CPU, or else your
platform code needs to implement mips_cdmm_phys_base() (see
asm/cdmm.h).</help>
				</entry>
				<entry name="MVEBU_MBUS">
					<help>Driver needed for the MBus configuration on Marvell EBU SoCs
(Kirkwood, Dove, Orion5x, MV78XX0 and Armada 370/XP).</help>
				</entry>
				<entry name="OMAP_INTERCONNECT">
					<label>OMAP INTERCONNECT DRIVER</label>
					<help>Driver to enable OMAP interconnect error handling driver.</help>
				</entry>
				<entry name="OMAP_OCP2SCP">
					<label>OMAP OCP2SCP DRIVER</label>
					<help>Driver to enable ocp2scp module which transforms ocp interface
protocol to scp protocol. In OMAP4, USB PHY is connected via
OCP2SCP and in OMAP5, both USB PHY and SATA PHY is connected via
OCP2SCP.</help>
				</entry>
				<entry name="SIMPLE_PM_BUS">
					<label>Simple Power-Managed Bus Driver</label>
					<help>Driver for transparent busses that don't need a real driver, but
where the bus controller is part of a PM domain, or under the control
of a functional clock, and thus relies on runtime PM for managing
this PM domain and/or clock.
An example of such a bus controller is the Renesas Bus State
Controller (BSC, sometimes called &quot;LBSC within Bus Bridge&quot;, or
&quot;External Bus Interface&quot;) as found on several Renesas ARM SoCs.</help>
				</entry>
				<entry name="SUNXI_RSB">
					<label>Allwinner sunXi Reduced Serial Bus Driver</label>
					<help>Say y here to enable support for Allwinner's Reduced Serial Bus
(RSB) support. This controller is responsible for communicating
with various RSB based devices, such as AXP223, AXP8XX PMICs,
and AC100/AC200 ICs.</help>
				</entry>
				<entry name="TEGRA_ACONNECT">
					<label>Tegra ACONNECT Bus Driver</label>
					<help>Driver for the Tegra ACONNECT bus which is used to interface with
the devices inside the Audio Processing Engine (APE) for Tegra210.</help>
				</entry>
				<entry name="UNIPHIER_SYSTEM_BUS">
					<label>UniPhier System Bus driver</label>
					<help>Support for UniPhier System Bus, a simple external bus.  This is
needed to use on-board devices connected to UniPhier SoCs.</help>
				</entry>
				<entry name="VEXPRESS_CONFIG">
					<label>Versatile Express configuration bus</label>
					<help>Platform configuration infrastructure for the ARM Ltd.
Versatile Express.</help>
				</entry>
			</container>
			<entry name="CONNECTOR">
				<label>Connector - unified userspace &lt;-&gt; kernelspace linker</label>
				<help>This is unified userspace &lt;-&gt; kernelspace connector working on top
of the netlink socket protocol.

Connector support can also be built as a module.  If so, the module
will be called cn.</help>
			</entry>
			<entry name="PROC_EVENTS">
				<label>Report process events to userspace</label>
				<help>Provide a connector that reports process events to userspace. Send
events such as fork, exec, id change (uid, gid, suid, etc), and exit.</help>
			</entry>
			<entry name="MTD">
				<label>Memory Technology Device (MTD) support</label>
				<help>Memory Technology Devices are flash, RAM and similar chips, often
used for solid state file systems on embedded devices. This option
will provide the generic support for MTD drivers to register
themselves with the kernel and for potential users of MTD devices
to enumerate the devices which are present and obtain a handle on
them. It will also allow you to select individual drivers for
particular hardware and users of MTD devices. If unsure, say N.</help>
			</entry>
			<entry name="MTD_TESTS">
				<label>MTD tests support (DANGEROUS)</label>
				<help>This option includes various MTD tests into compilation. The tests
should normally be compiled as kernel modules. The modules perform
various checks and verifications when loaded.

WARNING: some of the tests will ERASE entire MTD device which they
test. Do not use these tests unless you really know what you do.</help>
			</entry>
			<entry name="MTD_REDBOOT_PARTS">
				<label>RedBoot partition table parsing</label>
				<help>RedBoot is a ROM monitor and bootloader which deals with multiple
'images' in flash devices by putting a table one of the erase
blocks on the device, similar to a partition table, which gives
the offsets, lengths and names of all the images stored in the
flash.

If you need code which can detect and parse this table, and register
MTD 'partitions' corresponding to each image in the table, enable
this option.

You will still need the parsing functions to be called by the driver
for your particular device. It won't happen automatically. The
SA1100 map driver (CONFIG_MTD_SA1100) has an option for this, for
example.</help>
			</entry>
			<entry name="MTD_REDBOOT_DIRECTORY_BLOCK">
				<label>Location of RedBoot partition table</label>
				<help>This option is the Linux counterpart to the
CYGNUM_REDBOOT_FIS_DIRECTORY_BLOCK RedBoot compile time
option.

The option specifies which Flash sectors holds the RedBoot
partition table.  A zero or positive value gives an absolute
erase block number. A negative value specifies a number of
sectors before the end of the device.

For example &quot;2&quot; means block number 2, &quot;-1&quot; means the last
block and &quot;-2&quot; means the penultimate block.</help>
			</entry>
			<entry name="MTD_REDBOOT_PARTS_UNALLOCATED">
				<label>Include unallocated flash regions</label>
				<help>If you need to register each unallocated flash region as a MTD
'partition', enable this option.</help>
			</entry>
			<entry name="MTD_REDBOOT_PARTS_READONLY">
				<label>Force read-only for RedBoot system images</label>
				<help>If you need to force read-only for 'RedBoot', 'RedBoot Config' and
'FIS directory' images, enable this option.</help>
			</entry>
			<entry name="MTD_CMDLINE_PARTS">
				<label>Command line partition table parsing</label>
				<help>Allow generic configuration of the MTD partition tables via the kernel
command line. Multiple flash resources are supported for hardware where
different kinds of flash memory are available.

You will still need the parsing functions to be called by the driver
for your particular device. It won't happen automatically. The
SA1100 map driver (CONFIG_MTD_SA1100) has an option for this, for
example.

The format for the command line is as follows:

mtdparts=&lt;mtddef&gt;[;&lt;mtddef]
&lt;mtddef&gt;  := &lt;mtd-id&gt;:&lt;partdef&gt;[,&lt;partdef&gt;]
&lt;partdef&gt; := &lt;size&gt;[@offset][&lt;name&gt;][ro]
&lt;mtd-id&gt;  := unique id used in mapping driver/device
&lt;size&gt;    := standard linux memsize OR &quot;-&quot; to denote all
remaining space
&lt;name&gt;    := (NAME)

Due to the way Linux handles the command line, no spaces are
allowed in the partition definition, including mtd id's and partition
names.

Examples:

1 flash resource (mtd-id &quot;sa1100&quot;), with 1 single writable partition:
mtdparts=sa1100:-

Same flash, but 2 named partitions, the first one being read-only:
mtdparts=sa1100:256k(ARMboot)ro,-(root)

If unsure, say 'N'.</help>
			</entry>
			<entry name="MTD_AFS_PARTS">
				<label>ARM Firmware Suite partition parsing</label>
				<help>The ARM Firmware Suite allows the user to divide flash devices into
multiple 'images'. Each such image has a header containing its name
and offset/size etc.

If you need code which can detect and parse these tables, and
register MTD 'partitions' corresponding to each image detected,
enable this option.

You will still need the parsing functions to be called by the driver
for your particular device. It won't happen automatically. The
'physmap' map driver (CONFIG_MTD_PHYSMAP) does this, for example.</help>
			</entry>
			<entry name="MTD_OF_PARTS">
				<label>OpenFirmware partitioning information support</label>
				<help>This provides a partition parsing function which derives
the partition map from the children of the flash node,
as described in Documentation/devicetree/bindings/mtd/partition.txt.</help>
			</entry>
			<entry name="MTD_AR7_PARTS">
				<label>TI AR7 partitioning support</label>
				<help>TI AR7 partitioning support</help>
			</entry>
			<entry name="MTD_BCM63XX_PARTS">
				<label>BCM63XX CFE partitioning support</label>
				<help>This provides partions parsing for BCM63xx devices with CFE
bootloaders.</help>
			</entry>
			<entry name="MTD_BCM47XX_PARTS">
				<label>BCM47XX partitioning support</label>
				<help>This provides partitions parser for devices based on BCM47xx
boards.</help>
			</entry>
			<entry name="MTD_BLKDEVS"/>
			<entry name="MTD_BLOCK">
				<label>Caching block device access to MTD devices</label>
				<help>Although most flash chips have an erase size too large to be useful
as block devices, it is possible to use MTD devices which are based
on RAM chips in this manner. This block device is a user of MTD
devices performing that function.

At the moment, it is also required for the Journalling Flash File
System(s) to obtain a handle on the MTD device when it's mounted
(although JFFS and JFFS2 don't actually use any of the functionality
of the mtdblock device).

Later, it may be extended to perform read/erase/modify/write cycles
on flash chips to emulate a smaller block size. Needless to say,
this is very unsafe, but could be useful for file systems which are
almost never written to.

You do not need this option for use with the DiskOnChip devices. For
those, enable NFTL support (CONFIG_NFTL) instead.</help>
			</entry>
			<entry name="MTD_BLOCK_RO">
				<label>Readonly block device access to MTD devices</label>
				<help>This allows you to mount read-only file systems (such as cramfs)
from an MTD device, without the overhead (and danger) of the caching
driver.

You do not need this option for use with the DiskOnChip devices. For
those, enable NFTL support (CONFIG_NFTL) instead.</help>
			</entry>
			<entry name="FTL">
				<label>FTL (Flash Translation Layer) support</label>
				<help>This provides support for the original Flash Translation Layer which
is part of the PCMCIA specification. It uses a kind of pseudo-
file system on a flash device to emulate a block device with
512-byte sectors, on top of which you put a 'normal' file system.

You may find that the algorithms used in this code are patented
unless you live in the Free World where software patents aren't
legal - in the USA you are only permitted to use this on PCMCIA
hardware, although under the terms of the GPL you're obviously
permitted to copy, modify and distribute the code as you wish. Just
not use it.</help>
			</entry>
			<entry name="NFTL">
				<label>NFTL (NAND Flash Translation Layer) support</label>
				<help>This provides support for the NAND Flash Translation Layer which is
used on M-Systems' DiskOnChip devices. It uses a kind of pseudo-
file system on a flash device to emulate a block device with
512-byte sectors, on top of which you put a 'normal' file system.

You may find that the algorithms used in this code are patented
unless you live in the Free World where software patents aren't
legal - in the USA you are only permitted to use this on DiskOnChip
hardware, although under the terms of the GPL you're obviously
permitted to copy, modify and distribute the code as you wish. Just
not use it.</help>
			</entry>
			<entry name="NFTL_RW">
				<label>Write support for NFTL</label>
				<help>Support for writing to the NAND Flash Translation Layer, as used
on the DiskOnChip.</help>
			</entry>
			<entry name="INFTL">
				<label>INFTL (Inverse NAND Flash Translation Layer) support</label>
				<help>This provides support for the Inverse NAND Flash Translation
Layer which is used on M-Systems' newer DiskOnChip devices. It
uses a kind of pseudo-file system on a flash device to emulate
a block device with 512-byte sectors, on top of which you put
a 'normal' file system.

You may find that the algorithms used in this code are patented
unless you live in the Free World where software patents aren't
legal - in the USA you are only permitted to use this on DiskOnChip
hardware, although under the terms of the GPL you're obviously
permitted to copy, modify and distribute the code as you wish. Just
not use it.</help>
			</entry>
			<entry name="RFD_FTL">
				<label>Resident Flash Disk (Flash Translation Layer) support</label>
				<help>This provides support for the flash translation layer known
as the Resident Flash Disk (RFD), as used by the Embedded BIOS
of General Software. There is a blurb at:

http://www.gensw.com/pages/prod/bios/rfd.htm</help>
			</entry>
			<entry name="SSFDC">
				<label>NAND SSFDC (SmartMedia) read only translation layer</label>
				<help>This enables read only access to SmartMedia formatted NAND
flash. You can mount it with FAT file system.</help>
			</entry>
			<entry name="SM_FTL">
				<label>SmartMedia/xD new translation layer</label>
				<help>This enables EXPERIMENTAL R/W support for SmartMedia/xD
FTL (Flash translation layer).
Write support is only lightly tested, therefore this driver
isn't recommended to use with valuable data (anyway if you have
valuable data, do backups regardless of software/hardware you
use, because you never know what will eat your data...)
If you only need R/O access, you can use older R/O driver
(CONFIG_SSFDC)</help>
			</entry>
			<entry name="MTD_OOPS">
				<label>Log panic/oops to an MTD buffer</label>
				<help>This enables panic and oops messages to be logged to a circular
buffer in a flash partition where it can be read back at some
later point.</help>
			</entry>
			<entry name="MTD_SWAP">
				<label>Swap on MTD device support</label>
				<help>Provides volatile block device driver on top of mtd partition
suitable for swapping.  The mapping of written blocks is not saved.
The driver provides wear leveling by storing erase counter into the
OOB.</help>
			</entry>
			<entry name="MTD_PARTITIONED_MASTER">
				<label>Retain master device when partitioned</label>
				<help>For historical reasons, by default, either a master is present or
several partitions are present, but not both. The concern was that
data listed in multiple partitions was dangerous; however, SCSI does
this and it is frequently useful for applications. This config option
leaves the master in even if the device is partitioned. It also makes
the parent of the partition device be the master device, rather than
what lies behind the master.</help>
			</entry>
			<container name="RAM_ROM_Flash_chip_drivers">
				<label>RAM/ROM/Flash chip drivers</label>
				<entry name="MTD_CFI">
					<label>Detect flash chips by Common Flash Interface (CFI) probe</label>
					<help>The Common Flash Interface specification was developed by Intel,
AMD and other flash manufactures that provides a universal method
for probing the capabilities of flash devices. If you wish to
support any device that is CFI-compliant, you need to enable this
option. Visit &lt;http://www.amd.com/products/nvd/overview/cfi.html&gt;
for more information on CFI.</help>
				</entry>
				<entry name="MTD_JEDECPROBE">
					<label>Detect non-CFI AMD/JEDEC-compatible flash chips</label>
					<help>This option enables JEDEC-style probing of flash chips which are not
compatible with the Common Flash Interface, but will use the common
CFI-targeted flash drivers for any chips which are identified which
are in fact compatible in all but the probe method. This actually
covers most AMD/Fujitsu-compatible chips and also non-CFI
Intel chips.</help>
				</entry>
				<entry name="MTD_GEN_PROBE"/>
				<entry name="MTD_CFI_ADV_OPTIONS">
					<label>Flash chip driver advanced configuration options</label>
					<help>If you need to specify a specific endianness for access to flash
chips, or if you wish to reduce the size of the kernel by including
support for only specific arrangements of flash chips, say 'Y'. This
option does not directly affect the code, but will enable other
configuration options which allow you to do so.

If unsure, say 'N'.</help>
				</entry>
				<entry name="MTD_CFI_NOSWAP">
					<label>NO</label>
				</entry>
				<entry name="MTD_CFI_BE_BYTE_SWAP">
					<label>BIG_ENDIAN_BYTE</label>
				</entry>
				<entry name="MTD_CFI_LE_BYTE_SWAP">
					<label>LITTLE_ENDIAN_BYTE</label>
				</entry>
				<entry name="MTD_CFI_GEOMETRY">
					<label>Specific CFI Flash geometry selection</label>
					<help>This option does not affect the code directly, but will enable
some other configuration options which would allow you to reduce
the size of the kernel by including support for only certain
arrangements of CFI chips. If unsure, say 'N' and all options
which are supported by the current code will be enabled.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_1">
					<label>Support  8-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
8 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_2">
					<label>Support 16-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
16 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_4">
					<label>Support 32-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
32 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_8">
					<label>Support 64-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
64 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_16">
					<label>Support 128-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
128 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_MAP_BANK_WIDTH_32">
					<label>Support 256-bit buswidth&quot; if MTD_CFI_GEOMETRY</label>
					<help>If you wish to support CFI devices on a physical bus which is
256 bits wide, say 'Y'.</help>
				</entry>
				<entry name="MTD_CFI_I1">
					<label>Support 1-chip flash interleave&quot; if MTD_CFI_GEOMETRY</label>
					<help>If your flash chips are not interleaved - i.e. you only have one
flash chip addressed by each bus cycle, then say 'Y'.</help>
				</entry>
				<entry name="MTD_CFI_I2">
					<label>Support 2-chip flash interleave&quot; if MTD_CFI_GEOMETRY</label>
					<help>If your flash chips are interleaved in pairs - i.e. you have two
flash chips addressed by each bus cycle, then say 'Y'.</help>
				</entry>
				<entry name="MTD_CFI_I4">
					<label>Support 4-chip flash interleave&quot; if MTD_CFI_GEOMETRY</label>
					<help>If your flash chips are interleaved in fours - i.e. you have four
flash chips addressed by each bus cycle, then say 'Y'.</help>
				</entry>
				<entry name="MTD_CFI_I8">
					<label>Support 8-chip flash interleave&quot; if MTD_CFI_GEOMETRY</label>
					<help>If your flash chips are interleaved in eights - i.e. you have eight
flash chips addressed by each bus cycle, then say 'Y'.</help>
				</entry>
				<entry name="MTD_OTP">
					<label>Protection Registers aka one-time programmable (OTP) bits</label>
					<help>This enables support for reading, writing and locking so called
&quot;Protection Registers&quot; present on some flash chips.
A subset of them are pre-programmed at the factory with a
unique set of values. The rest is user-programmable.

The user-programmable Protection Registers contain one-time
programmable (OTP) bits; when programmed, register bits cannot be
erased. Each Protection Register can be accessed multiple times to
program individual bits, as long as the register remains unlocked.

Each Protection Register has an associated Lock Register bit. When a
Lock Register bit is programmed, the associated Protection Register
can only be read; it can no longer be programmed. Additionally,
because the Lock Register bits themselves are OTP, when programmed,
Lock Register bits cannot be erased. Therefore, when a Protection
Register is locked, it cannot be unlocked.

This feature should therefore be used with extreme care. Any mistake
in the programming of OTP bits will waste them.</help>
				</entry>
				<entry name="MTD_CFI_INTELEXT">
					<label>Support for CFI command set 0001 (Intel/Sharp chips)</label>
					<help>The Common Flash Interface defines a number of different command
sets which a CFI-compliant chip may claim to implement. This code
provides support for command set 0001, used on Intel StrataFlash
and other parts.</help>
				</entry>
				<entry name="MTD_CFI_AMDSTD">
					<label>Support for CFI command set 0002 (AMD/Fujitsu/Spansion chips)</label>
					<help>The Common Flash Interface defines a number of different command
sets which a CFI-compliant chip may claim to implement. This code
provides support for command set 0002, used on chips including
the AMD Am29LV320.</help>
				</entry>
				<entry name="MTD_CFI_STAA">
					<label>Support for CFI command set 0020 (ST (Advanced Architecture) chips)</label>
					<help>The Common Flash Interface defines a number of different command
sets which a CFI-compliant chip may claim to implement. This code
provides support for command set 0020.</help>
				</entry>
				<entry name="MTD_CFI_UTIL"/>
				<entry name="MTD_RAM">
					<label>Support for RAM chips in bus mapping</label>
					<help>This option enables basic support for RAM chips accessed through
a bus mapping driver.</help>
				</entry>
				<entry name="MTD_ROM">
					<label>Support for ROM chips in bus mapping</label>
					<help>This option enables basic support for ROM chips accessed through
a bus mapping driver.</help>
				</entry>
				<entry name="MTD_ABSENT">
					<label>Support for absent chips in bus mapping</label>
					<help>This option enables support for a dummy probing driver used to
allocated placeholder MTD devices on systems that have socketed
or removable media.  Use of this driver as a fallback chip probe
preserves the expected registration order of MTD device nodes on
the system regardless of media presence.  Device nodes created
with this driver will return -ENODEV upon access.</help>
				</entry>
				<entry name="MTD_XIP">
					<label>XIP aware MTD support</label>
					<help>This allows MTD support to work with flash memory which is also
used for XIP purposes.  If you're not sure what this is all about
then say N.</help>
				</entry>
			</container>
			<container name="Mapping_drivers_for_chip_access">
				<label>Mapping drivers for chip access</label>
				<entry name="MTD_COMPLEX_MAPPINGS">
					<label>Support non-linear mappings of flash chips</label>
					<help>This causes the chip drivers to allow for complicated
paged mappings of flash chips.</help>
				</entry>
				<entry name="MTD_PHYSMAP">
					<label>Flash device in physical memory map</label>
					<help>This provides a 'mapping' driver which allows the NOR Flash and
ROM driver code to communicate with chips which are mapped
physically into the CPU's memory. You will need to configure
the physical address and size of the flash chips on your
particular board as well as the bus width, either statically
with config options or at run-time.

To compile this driver as a module, choose M here: the
module will be called physmap.</help>
				</entry>
				<entry name="MTD_PHYSMAP_COMPAT">
					<label>Physmap compat support</label>
					<help>Setup a simple mapping via the Kconfig options.  Normally the
physmap configuration options are done via your board's
resource file.

If unsure, say N here.</help>
				</entry>
				<entry name="MTD_PHYSMAP_BANKWIDTH">
					<label>Bank width in octets</label>
					<help>This is the total width of the data bus of the flash devices
in octets. For example, if you have a data bus width of 32
bits, you would set the bus width octet value to 4. This is
used internally by the CFI drivers.</help>
				</entry>
				<entry name="MTD_PHYSMAP_OF">
					<label>Memory device in physical memory map based on OF description</label>
					<help>This provides a 'mapping' driver which allows the NOR Flash, ROM
and RAM driver code to communicate with chips which are mapped
physically into the CPU's memory. The mapping description here is
taken from OF device tree.</help>
				</entry>
				<entry name="MTD_PHYSMAP_OF_VERSATILE">
					<label>Support ARM Versatile physmap OF</label>
					<help>This provides some extra DT physmap parsing for the ARM Versatile
platforms, basically to add a VPP (write protection) callback so
the flash can be taken out of write protection.</help>
				</entry>
				<entry name="MTD_PMC_MSP_EVM">
					<label>CFI Flash device mapped on PMC-Sierra MSP</label>
					<help>This provides a 'mapping' driver which supports the way
in which user-programmable flash chips are connected on the
PMC-Sierra MSP eval/demo boards.</help>
				</entry>
				<entry name="MSP_FLASH_MAP_LIMIT_32M">
					<label>32M</label>
				</entry>
				<entry name="MTD_SUN_UFLASH">
					<label>Sun Microsystems userflash support</label>
					<help>This provides a 'mapping' driver which supports the way in
which user-programmable flash chips are connected on various
Sun Microsystems boardsets.  This driver will require CFI support
in the kernel, so if you did not enable CFI previously, do that now.</help>
				</entry>
				<entry name="MTD_SC520CDP">
					<label>CFI Flash device mapped on AMD SC520 CDP</label>
					<help>The SC520 CDP board has two banks of CFI-compliant chips and one
Dual-in-line JEDEC chip. This 'mapping' driver supports that
arrangement, implementing three MTD devices.</help>
				</entry>
				<entry name="MTD_NETSC520">
					<label>CFI Flash device mapped on AMD NetSc520</label>
					<help>This enables access routines for the flash chips on the AMD NetSc520
demonstration board. If you have one of these boards and would like
to use the flash chips on it, say 'Y'.</help>
				</entry>
				<entry name="MTD_TS5500">
					<label>JEDEC Flash device mapped on Technologic Systems TS-5500</label>
					<help>This provides a driver for the on-board flash of the Technologic
System's TS-5500 board. The 2MB flash is split into 3 partitions
which are accessed as separate MTD devices.

mtd0 and mtd2 are the two BIOS drives, which use the resident
flash disk (RFD) flash translation layer.

mtd1 allows you to reprogram your BIOS. BE VERY CAREFUL.

Note that jumper 3 (&quot;Write Enable Drive A&quot;) must be set
otherwise detection won't succeed.</help>
				</entry>
				<entry name="MTD_SBC_GXX">
					<label>CFI Flash device mapped on Arcom SBC-GXx boards</label>
					<help>This provides a driver for the on-board flash of Arcom Control
Systems' SBC-GXn family of boards, formerly known as SBC-MediaGX.
By default the flash is split into 3 partitions which are accessed
as separate MTD devices. This board utilizes Intel StrataFlash.
More info at
&lt;http://www.arcomcontrols.com/products/icp/pc104/processors/SBC_GX1.htm&gt;.</help>
				</entry>
				<entry name="MTD_PXA2XX">
					<label>CFI Flash device mapped on Intel XScale PXA2xx based boards</label>
					<help>This provides a driver for the NOR flash attached to a PXA2xx chip.</help>
				</entry>
				<entry name="MTD_SCx200_DOCFLASH">
					<label>Flash device mapped with DOCCS on NatSemi SCx200</label>
					<help>Enable support for a flash chip mapped using the DOCCS signal on a
National Semiconductor SCx200 processor.

If you don't know what to do here, say N.

If compiled as a module, it will be called scx200_docflash.</help>
				</entry>
				<entry name="MTD_AMD76XROM">
					<label>BIOS flash chip on AMD76x southbridge</label>
					<help>Support for treating the BIOS flash chip on AMD76x motherboards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_ICHXROM">
					<label>BIOS flash chip on Intel Controller Hub 2/3/4/5</label>
					<help>Support for treating the BIOS flash chip on ICHX motherboards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_ESB2ROM">
					<label>BIOS flash chip on Intel ESB Controller Hub 2</label>
					<help>Support for treating the BIOS flash chip on ESB2 motherboards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_CK804XROM">
					<label>BIOS flash chip on Nvidia CK804</label>
					<help>Support for treating the BIOS flash chip on nvidia motherboards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_SCB2_FLASH">
					<label>BIOS flash chip on Intel SCB2 boards</label>
					<help>Support for treating the BIOS flash chip on Intel SCB2 boards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_TSUNAMI">
					<label>Flash chips on Tsunami TIG bus</label>
					<help>Support for the flash chip on Tsunami TIG bus.</help>
				</entry>
				<entry name="MTD_NETtel">
					<label>CFI flash device on SnapGear/SecureEdge</label>
					<help>Support for flash chips on NETtel/SecureEdge/SnapGear boards.</help>
				</entry>
				<entry name="MTD_LANTIQ">
					<label>Lantiq SoC NOR support</label>
					<help>Support for NOR flash attached to the Lantiq SoC's External Bus Unit.</help>
				</entry>
				<entry name="MTD_L440GX">
					<label>BIOS flash chip on Intel L440GX boards</label>
					<help>Support for treating the BIOS flash chip on Intel L440GX motherboards
as an MTD device - with this you can reprogram your BIOS.

BE VERY CAREFUL.</help>
				</entry>
				<entry name="MTD_CFI_FLAGADM">
					<label>CFI Flash device mapping on FlagaDM</label>
					<help>Mapping for the Flaga digital module. If you don't have one, ignore
this setting.</help>
				</entry>
				<entry name="MTD_SOLUTIONENGINE">
					<label>CFI Flash device mapped on Hitachi SolutionEngine</label>
					<help>This enables access to the flash chips on the Hitachi SolutionEngine and
similar boards. Say 'Y' if you are building a kernel for such a board.</help>
				</entry>
				<entry name="MTD_SA1100">
					<label>CFI Flash device mapped on StrongARM SA11x0</label>
					<help>This enables access to the flash chips on most platforms based on
the SA1100 and SA1110, including the Assabet and the Compaq iPAQ.
If you have such a board, say 'Y'.</help>
				</entry>
				<entry name="MTD_DC21285">
					<label>CFI Flash device mapped on DC21285 Footbridge</label>
					<help>This provides a driver for the flash accessed using Intel's
21285 bridge used with Intel's StrongARM processors. More info at
&lt;http://www.intel.com/design/bridge/docs/21285_documentation.htm&gt;.</help>
				</entry>
				<entry name="MTD_IXP4XX">
					<label>CFI Flash device mapped on Intel IXP4xx based systems</label>
					<help>This enables MTD access to flash devices on platforms based
on Intel's IXP4xx family of network processors such as the
IXDP425 and Coyote. If you have an IXP4xx based board and
would like to use the flash chips on it, say 'Y'.</help>
				</entry>
				<entry name="MTD_IMPA7">
					<label>JEDEC Flash device mapped on impA7</label>
					<help>This enables access to the NOR Flash on the impA7 board of
implementa GmbH. If you have such a board, say 'Y' here.</help>
				</entry>
				<entry name="MTD_PCI">
					<label>PCI MTD driver</label>
					<help>Mapping for accessing flash devices on add-in cards like the Intel XScale
IQ80310 card, and the Intel EBSA285 card in blank ROM programming mode
(please see the manual for the link settings).

If you are not sure, say N.</help>
				</entry>
				<entry name="MTD_PCMCIA">
					<label>PCMCIA MTD driver</label>
					<help>Map driver for accessing PCMCIA linear flash memory cards. These
cards are usually around 4-16MiB in size. This does not include
Compact Flash cards which are treated as IDE devices.</help>
				</entry>
				<entry name="MTD_PCMCIA_ANONYMOUS">
					<label>Use PCMCIA MTD drivers for anonymous PCMCIA cards</label>
					<help>If this option is enabled, PCMCIA cards which do not report
anything about themselves are assumed to be MTD cards.

If unsure, say N.</help>
				</entry>
				<entry name="MTD_BFIN_ASYNC">
					<label>Blackfin BF533-STAMP Flash Chip Support</label>
					<help>Map driver which allows for simultaneous utilization of
ethernet and CFI parallel flash.

If compiled as a module, it will be called bfin-async-flash.</help>
				</entry>
				<entry name="MTD_GPIO_ADDR">
					<label>GPIO-assisted Flash Chip Support</label>
					<help>Map driver which allows flashes to be partially physically addressed
and assisted by GPIOs.

If compiled as a module, it will be called gpio-addr-flash.</help>
				</entry>
				<entry name="MTD_UCLINUX">
					<label>Generic uClinux RAM/ROM filesystem support</label>
					<help>Map driver to support image based filesystems for uClinux.</help>
				</entry>
				<entry name="MTD_INTEL_VR_NOR">
					<label>NOR flash on Intel Vermilion Range Expansion Bus CS0</label>
					<help>Map driver for a NOR flash bank located on the Expansion Bus of the
Intel Vermilion Range chipset.</help>
				</entry>
				<entry name="MTD_RBTX4939">
					<label>Map driver for RBTX4939 board</label>
					<help>Map driver for NOR flash chips on RBTX4939 board.</help>
				</entry>
				<entry name="MTD_PLATRAM">
					<label>Map driver for platform device RAM (mtd-ram)</label>
					<help>Map driver for RAM areas described via the platform device
system.

This selection automatically selects the map_ram driver.</help>
				</entry>
				<entry name="MTD_VMU">
					<label>Map driver for Dreamcast VMU</label>
					<help>This driver enables access to the Dreamcast Visual Memory Unit (VMU).

Most Dreamcast users will want to say Y here.

To build this as a module select M here, the module will be called
vmu-flash.</help>
				</entry>
				<entry name="MTD_PISMO">
					<label>MTD discovery driver for PISMO modules</label>
					<help>This driver allows for discovery of PISMO modules - see
&lt;http://www.pismoworld.org/&gt;.  These are small modules containing
up to five memory devices (eg, SRAM, flash, DOC) described by an
I2C EEPROM.

This driver does not create any MTD maps itself; instead it
creates MTD physmap and MTD SRAM platform devices.  If you
enable this option, you should consider enabling MTD_PHYSMAP
and/or MTD_PLATRAM according to the devices on your module.

When built as a module, it will be called pismo.ko</help>
				</entry>
				<entry name="MTD_LATCH_ADDR">
					<label>Latch-assisted Flash Chip Support</label>
					<help>Map driver which allows flashes to be partially physically addressed
and have the upper address lines set by a board specific code.

If compiled as a module, it will be called latch-addr-flash.</help>
				</entry>
			</container>
			<container name="Self_contained_MTD_device_drivers">
				<label>Self-contained MTD device drivers</label>
				<entry name="MTD_PMC551">
					<label>Ramix PMC551 PCI Mezzanine RAM card support</label>
					<help>This provides a MTD device driver for the Ramix PMC551 RAM PCI card
from Ramix Inc. &lt;http://www.ramix.com/products/memory/pmc551.html&gt;.
These devices come in memory configurations from 32M - 1G.  If you
have one, you probably want to enable this.

If this driver is compiled as a module you get the ability to select
the size of the aperture window pointing into the devices memory.
What this means is that if you have a 1G card, normally the kernel
will use a 1G memory map as its view of the device.  As a module,
you can select a 1M window into the memory and the driver will
&quot;slide&quot; the window around the PMC551's memory.  This was
particularly useful on the 2.2 kernels on PPC architectures as there
was limited kernel space to deal with.</help>
				</entry>
				<entry name="MTD_PMC551_BUGFIX">
					<label>PMC551 256M DRAM Bugfix</label>
					<help>Some of Ramix's PMC551 boards with 256M configurations have invalid
column and row mux values.  This option will fix them, but will
break other memory configurations.  If unsure say N.</help>
				</entry>
				<entry name="MTD_PMC551_DEBUG">
					<label>PMC551 Debugging</label>
					<help>This option makes the PMC551 more verbose during its operation and
is only really useful if you are developing on this driver or
suspect a possible hardware or driver bug.  If unsure say N.</help>
				</entry>
				<entry name="MTD_MS02NV">
					<label>DEC MS02-NV NVRAM module support</label>
					<help>This is an MTD driver for the DEC's MS02-NV (54-20948-01) battery
backed-up NVRAM module.  The module was originally meant as an NFS
accelerator.  Say Y here if you have a DECstation 5000/2x0 or a
DECsystem 5900 equipped with such a module.

If you want to compile this driver as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.
The module will be called ms02-nv.</help>
				</entry>
				<entry name="MTD_DATAFLASH">
					<label>Support for AT45xxx DataFlash</label>
					<help>This enables access to AT45xxx DataFlash chips, using SPI.
Sometimes DataFlash chips are packaged inside MMC-format
cards; at this writing, the MMC stack won't handle those.</help>
				</entry>
				<entry name="MTD_DATAFLASH_WRITE_VERIFY">
					<label>Verify DataFlash page writes</label>
					<help>This adds an extra check when data is written to the flash.
It may help if you are verifying chip setup (timings etc) on
your board.  There is a rare possibility that even though the
device thinks the write was successful, a bit could have been
flipped accidentally due to device wear or something else.</help>
				</entry>
				<entry name="MTD_DATAFLASH_OTP">
					<label>DataFlash OTP support (Security Register)</label>
					<help>Newer DataFlash chips (revisions C and D) support 128 bytes of
one-time-programmable (OTP) data.  The first half may be written
(once) with up to 64 bytes of data, such as a serial number or
other key product data.  The second half is programmed with a
unique-to-each-chip bit pattern at the factory.</help>
				</entry>
				<entry name="MTD_M25P80">
					<label>Support most SPI Flash chips (AT26DF, M25P, W25X, ...)</label>
					<help>This enables access to most modern SPI flash chips, used for
program and data storage.   Series supported include Atmel AT26DF,
Spansion S25SL, SST 25VF, ST M25P, and Winbond W25X.  Other chips
are supported as well.  See the driver source for the current list,
or to add other chips.

Note that the original DataFlash chips (AT45 series, not AT26DF),
need an entirely different driver.

Set up your spi devices with the right board-specific platform data,
if you want to specify device partitioning or to use a device which
doesn't support the JEDEC ID instruction.</help>
				</entry>
				<entry name="MTD_SPEAR_SMI">
					<label>SPEAR MTD NOR Support through SMI controller</label>
					<help>This enable SNOR support on SPEAR platforms using SMI controller</help>
				</entry>
				<entry name="MTD_SST25L">
					<label>Support SST25L (non JEDEC) SPI Flash chips</label>
					<help>This enables access to the non JEDEC SST25L SPI flash chips, used
for program and data storage.

Set up your spi devices with the right board-specific platform data,
if you want to specify device partitioning.</help>
				</entry>
				<entry name="MTD_BCM47XXSFLASH">
					<label>Support for serial flash on BCMA bus</label>
					<help>BCMA bus can have various flash memories attached, they are
registered by bcma as platform devices. This enables driver for
serial flash memories.</help>
				</entry>
				<entry name="MTD_SLRAM">
					<label>Uncached system RAM</label>
					<help>If your CPU cannot cache all of the physical memory in your machine,
you can still use it for storage or swap by using this driver to
present it to the system as a Memory Technology Device.</help>
				</entry>
				<entry name="MTD_PHRAM">
					<label>Physical system RAM</label>
					<help>This is a re-implementation of the slram driver above.

Use this driver to access physical memory that the kernel proper
doesn't have access to, memory beyond the mem=xxx limit, nvram,
memory on the video card, etc...</help>
				</entry>
				<entry name="MTD_LART">
					<label>28F160xx flash driver for LART</label>
					<help>This enables the flash driver for LART. Please note that you do
not need any mapping/chip driver for LART. This one does it all
for you, so go disable all of those if you enabled some of them (:</help>
				</entry>
				<entry name="MTD_MTDRAM">
					<label>Test driver using RAM</label>
					<help>This enables a test MTD device driver which uses vmalloc() to
provide storage.  You probably want to say 'N' unless you're
testing stuff.</help>
				</entry>
				<entry name="MTDRAM_TOTAL_SIZE">
					<label>MTDRAM device size in KiB</label>
					<help>This allows you to configure the total size of the MTD device
emulated by the MTDRAM driver.  If the MTDRAM driver is built
as a module, it is also possible to specify this as a parameter when
loading the module.</help>
				</entry>
				<entry name="MTDRAM_ERASE_SIZE">
					<label>MTDRAM erase block size in KiB</label>
					<help>This allows you to configure the size of the erase blocks in the
device emulated by the MTDRAM driver.  If the MTDRAM driver is built
as a module, it is also possible to specify this as a parameter when
loading the module.</help>
				</entry>
				<entry name="MTD_BLOCK2MTD">
					<label>MTD using block device</label>
					<help>This driver allows a block device to appear as an MTD. It would
generally be used in the following cases:

Using Compact Flash as an MTD, these usually present themselves to
the system as an ATA drive.
Testing MTD users (eg JFFS2) on large media and media that might
be removed during a write (using the floppy drive).</help>
				</entry>
				<entry name="MTD_POWERNV_FLASH">
					<label>powernv flash MTD driver</label>
					<help>This provides an MTD device to access flash on powernv OPAL
platforms from Linux. This device abstracts away the
firmware interface for flash access.</help>
				</entry>
				<entry name="MTD_DOCG3">
					<label>M-Systems Disk-On-Chip G3</label>
					<help>This provides an MTD device driver for the M-Systems DiskOnChip
G3 devices.

The driver provides access to G3 DiskOnChip, distributed by
M-Systems and now Sandisk. The support is very experimental,
and doesn't give access to any write operations.</help>
				</entry>
				<entry name="MTD_ST_SPI_FSM">
					<label>ST Microelectronics SPI FSM Serial Flash Controller</label>
					<help>This provides an MTD device driver for the ST Microelectronics
SPI Fast Sequence Mode (FSM) Serial Flash Controller and support
for a subset of connected Serial Flash devices.</help>
				</entry>
			</container>
			<entry name="MTD_NAND_ECC"/>
			<entry name="MTD_NAND_ECC_SMC">
				<label>NAND ECC Smart Media byte order</label>
				<help>Software ECC according to the Smart Media Specification.
The original Linux implementation had byte 0 and 1 swapped.</help>
			</entry>
			<entry name="MTD_NAND">
				<label>NAND Device Support</label>
				<help>This enables support for accessing all type of NAND flash
devices. For further information see
&lt;http://www.linux-mtd.infradead.org/doc/nand.html&gt;.</help>
			</entry>
			<entry name="MTD_NAND_BCH"/>
			<entry name="MTD_NAND_ECC_BCH">
				<label>Support software BCH ECC</label>
				<help>This enables support for software BCH error correction. Binary BCH
codes are more powerful and cpu intensive than traditional Hamming
ECC codes. They are used with NAND devices requiring more than 1 bit
of error correction.</help>
			</entry>
			<entry name="MTD_SM_COMMON"/>
			<entry name="MTD_NAND_DENALI"/>
			<entry name="MTD_NAND_DENALI_PCI">
				<label>Support Denali NAND controller on Intel Moorestown</label>
				<help>Enable the driver for NAND flash on Intel Moorestown, using the
Denali NAND controller core.</help>
			</entry>
			<entry name="MTD_NAND_DENALI_DT">
				<label>Support Denali NAND controller as a DT device</label>
				<help>Enable the driver for NAND flash on platforms using a Denali NAND
controller as a DT device.</help>
			</entry>
			<entry name="MTD_NAND_GPIO">
				<label>GPIO assisted NAND Flash driver</label>
				<help>This enables a NAND flash driver where control signals are
connected to GPIO pins, and commands and data are communicated
via a memory mapped interface.</help>
			</entry>
			<entry name="MTD_NAND_AMS_DELTA">
				<label>NAND Flash device on Amstrad E3</label>
				<help>Support for NAND flash on Amstrad E3 (Delta).</help>
			</entry>
			<entry name="MTD_NAND_OMAP2">
				<label>NAND Flash device on OMAP2, OMAP3 and OMAP4</label>
				<help>Support for NAND flash on Texas Instruments OMAP2, OMAP3 and OMAP4
platforms.</help>
			</entry>
			<entry name="MTD_NAND_OMAP_BCH">
				<label>Support hardware based BCH error correction</label>
				<help>This config enables the ELM hardware engine, which can be used to
locate and correct errors when using BCH ECC scheme. This offloads
the cpu from doing ECC error searching and correction. However some
legacy OMAP families like OMAP2xxx, OMAP3xxx do not have ELM engine
so this is optional for them.</help>
			</entry>
			<entry name="MTD_NAND_OMAP_BCH_BUILD"/>
			<entry name="MTD_NAND_IDS"/>
			<entry name="MTD_NAND_RICOH">
				<label>Ricoh xD card reader</label>
				<help>Enable support for Ricoh R5C852 xD card reader
You also need to enable ether
NAND SSFDC (SmartMedia) read only translation layer' or new
expermental, readwrite
'SmartMedia/xD new translation layer'</help>
			</entry>
			<entry name="MTD_NAND_AU1550">
				<label>Au1550/1200 NAND support</label>
				<help>This enables the driver for the NAND flash controller on the
AMD/Alchemy 1550 SOC.</help>
			</entry>
			<entry name="MTD_NAND_BF5XX">
				<label>Blackfin on-chip NAND Flash Controller driver</label>
				<help>This enables the Blackfin on-chip NAND flash controller

No board specific support is done by this driver, each board
must advertise a platform_device for the driver to attach.

This driver can also be built as a module. If so, the module
will be called bf5xx-nand.</help>
			</entry>
			<entry name="MTD_NAND_BF5XX_HWECC">
				<label>BF5XX NAND Hardware ECC</label>
				<help>Enable the use of the BF5XX's internal ECC generator when
using NAND.</help>
			</entry>
			<entry name="MTD_NAND_BF5XX_BOOTROM_ECC">
				<label>Use Blackfin BootROM ECC Layout</label>
				<help>If you wish to modify NAND pages and allow the Blackfin on-chip
BootROM to boot from them, say Y here.  This is only necessary
if you are booting U-Boot out of NAND and you wish to update
U-Boot from Linux' userspace.  Otherwise, you should say N here.

If unsure, say N.</help>
			</entry>
			<entry name="MTD_NAND_S3C2410">
				<label>NAND Flash support for Samsung S3C SoCs</label>
				<help>This enables the NAND flash controller on the S3C24xx and S3C64xx
SoCs

No board specific support is done by this driver, each board
must advertise a platform_device for the driver to attach.</help>
			</entry>
			<entry name="MTD_NAND_S3C2410_DEBUG">
				<label>Samsung S3C NAND driver debug</label>
				<help>Enable debugging of the S3C NAND driver</help>
			</entry>
			<entry name="MTD_NAND_S3C2410_HWECC">
				<label>Samsung S3C NAND Hardware ECC</label>
				<help>Enable the use of the controller's internal ECC generator when
using NAND. Early versions of the chips have had problems with
incorrect ECC generation, and if using these, the default of
software ECC is preferable.</help>
			</entry>
			<entry name="MTD_NAND_NDFC">
				<label>NDFC NanD Flash Controller</label>
				<help>NDFC Nand Flash Controllers are integrated in IBM/AMCC's 4xx SoCs</help>
			</entry>
			<entry name="MTD_NAND_S3C2410_CLKSTOP">
				<label>Samsung S3C NAND IDLE clock stop</label>
				<help>Stop the clock to the NAND controller when there is no chip
selected to save power. This will mean there is a small delay
when the is NAND chip selected or released, but will save
approximately 5mA of power when there is nothing happening.</help>
			</entry>
			<entry name="MTD_NAND_DISKONCHIP">
				<label>DiskOnChip 2000, Millennium and Millennium Plus (NAND reimplementation)</label>
				<help>This is a reimplementation of M-Systems DiskOnChip 2000,
Millennium and Millennium Plus as a standard NAND device driver,
as opposed to the earlier self-contained MTD device drivers.
This should enable, among other things, proper JFFS2 operation on
these devices.</help>
			</entry>
			<entry name="MTD_NAND_DISKONCHIP_PROBE_ADVANCED">
				<label>Advanced detection options for DiskOnChip</label>
				<help>This option allows you to specify nonstandard address at which to
probe for a DiskOnChip, or to change the detection options.  You
are unlikely to need any of this unless you are using LinuxBIOS.
Say 'N'.</help>
			</entry>
			<entry name="MTD_NAND_DISKONCHIP_PROBE_HIGH">
				<label>Probe high addresses</label>
				<help>By default, the probe for DiskOnChip devices will look for a
DiskOnChip at every multiple of 0x2000 between 0xC8000 and 0xEE000.
This option changes to make it probe between 0xFFFC8000 and
0xFFFEE000.  Unless you are using LinuxBIOS, this is unlikely to be
useful to you.  Say 'N'.</help>
			</entry>
			<entry name="MTD_NAND_DISKONCHIP_BBTWRITE">
				<label>Allow BBT writes on DiskOnChip Millennium and 2000TSOP</label>
				<help>On DiskOnChip devices shipped with the INFTL filesystem (Millennium
and 2000 TSOP/Alon), Linux reserves some space at the end of the
device for the Bad Block Table (BBT).  If you have existing INFTL
data on your device (created by non-Linux tools such as M-Systems'
DOS drivers), your data might overlap the area Linux wants to use for
the BBT.  If this is a concern for you, leave this option disabled and
Linux will not write BBT data into this area.
The downside of leaving this option disabled is that if bad blocks
are detected by Linux, they will not be recorded in the BBT, which
could cause future problems.
Once you enable this option, new filesystems (INFTL or others, created
in Linux or other operating systems) will not use the reserved area.
The only reason not to enable this option is to prevent damage to
preexisting filesystems.
Even if you leave this disabled, you can enable BBT writes at module
load time (assuming you build diskonchip as a module) with the module
parameter &quot;inftl_bbt_write=1&quot;.</help>
			</entry>
			<entry name="MTD_NAND_DOCG4">
				<label>Support for DiskOnChip G4</label>
				<help>Support for diskonchip G4 nand flash, found in various smartphones and
PDAs, among them the Palm Treo680, HTC Prophet and Wizard, Toshiba
Portege G900, Asus P526, and O2 XDA Zinc.

With this driver you will be able to use UBI and create a ubifs on the
device, so you may wish to consider enabling UBI and UBIFS as well.

These devices ship with the Mys/Sandisk SAFTL formatting, for which
there is currently no mtd parser, so you may want to use command line
partitioning to segregate write-protected blocks. On the Treo680, the
first five erase blocks (256KiB each) are write-protected, followed
by the block containing the saftl partition table.  This is probably
typical.</help>
			</entry>
			<entry name="MTD_NAND_SHARPSL">
				<label>Support for NAND Flash on Sharp SL Series (C7xx + others)</label>
			</entry>
			<entry name="MTD_NAND_CAFE">
				<label>NAND support for OLPC CAFÉ chip</label>
				<help>Use NAND flash attached to the CAFÉ chip designed for the OLPC
laptop.</help>
			</entry>
			<entry name="MTD_NAND_CS553X">
				<label>NAND support for CS5535/CS5536 (AMD Geode companion chip)</label>
				<help>The CS553x companion chips for the AMD Geode processor
include NAND flash controllers with built-in hardware ECC
capabilities; enabling this option will allow you to use
these. The driver will check the MSRs to verify that the
controller is enabled for NAND, and currently requires that
the controller be in MMIO mode.

If you say &quot;m&quot;, the module will be called cs553x_nand.</help>
			</entry>
			<entry name="MTD_NAND_ATMEL">
				<label>Support for NAND Flash / SmartMedia on AT91 and AVR32</label>
				<help>Enables support for NAND Flash / Smart Media Card interface
on Atmel AT91 and AVR32 processors.</help>
			</entry>
			<entry name="MTD_NAND_PXA3xx">
				<label>NAND support on PXA3xx and Armada 370/XP</label>
				<help>This enables the driver for the NAND flash device found on
PXA3xx processors (NFCv1) and also on Armada 370/XP (NFCv2).</help>
			</entry>
			<entry name="MTD_NAND_SLC_LPC32XX">
				<label>NXP LPC32xx SLC Controller</label>
				<help>Enables support for NXP's LPC32XX SLC (i.e. for Single Level Cell
chips) NAND controller. This is the default for the PHYTEC 3250
reference board which contains a NAND256R3A2CZA6 chip.

Please check the actual NAND chip connected and its support
by the SLC NAND controller.</help>
			</entry>
			<entry name="MTD_NAND_MLC_LPC32XX">
				<label>NXP LPC32xx MLC Controller</label>
				<help>Uses the LPC32XX MLC (i.e. for Multi Level Cell chips) NAND
controller. This is the default for the WORK92105 controller
board.

Please check the actual NAND chip connected and its support
by the MLC NAND controller.</help>
			</entry>
			<entry name="MTD_NAND_CM_X270">
				<label>Support for NAND Flash on CM-X270 modules</label>
			</entry>
			<entry name="MTD_NAND_PASEMI">
				<label>NAND support for PA Semi PWRficient</label>
				<help>Enables support for NAND Flash interface on PA Semi PWRficient
based boards</help>
			</entry>
			<entry name="MTD_NAND_TMIO">
				<label>NAND Flash device on Toshiba Mobile IO Controller</label>
				<help>Support for NAND flash connected to a Toshiba Mobile IO
Controller in some PDAs, including the Sharp SL6000x.</help>
			</entry>
			<entry name="MTD_NAND_NANDSIM">
				<label>Support for NAND Flash Simulator</label>
				<help>The simulator may simulate various NAND flash chips for the
MTD nand layer.</help>
			</entry>
			<entry name="MTD_NAND_GPMI_NAND">
				<label>GPMI NAND Flash Controller driver</label>
				<help>Enables NAND Flash support for IMX23, IMX28 or IMX6.
The GPMI controller is very powerful, with the help of BCH
module, it can do the hardware ECC. The GPMI supports several
NAND flashs at the same time. The GPMI may conflicts with other
block, such as SD card. So pay attention to it when you enable
the GPMI.</help>
			</entry>
			<entry name="MTD_NAND_BRCMNAND">
				<label>Broadcom STB NAND controller</label>
				<help>Enables the Broadcom NAND controller driver. The controller was
originally designed for Set-Top Box but is used on various BCM7xxx,
BCM3xxx, BCM63xxx, iProc/Cygnus and more.</help>
			</entry>
			<entry name="MTD_NAND_BCM47XXNFLASH">
				<label>Support for NAND flash on BCM4706 BCMA bus</label>
				<help>BCMA bus can have various flash memories attached, they are
registered by bcma as platform devices. This enables driver for
NAND flash memories. For now only BCM4706 is supported.</help>
			</entry>
			<entry name="MTD_NAND_PLATFORM">
				<label>Support for generic platform NAND driver</label>
				<help>This implements a generic NAND driver for on-SOC platform
devices. You will need to provide platform-specific functions
via platform_data.</help>
			</entry>
			<entry name="MTD_NAND_ORION">
				<label>NAND Flash support for Marvell Orion SoC</label>
				<help>This enables the NAND flash controller on Orion machines.

No board specific support is done by this driver, each board
must advertise a platform_device for the driver to attach.</help>
			</entry>
			<entry name="MTD_NAND_FSL_ELBC">
				<label>NAND support for Freescale eLBC controllers</label>
				<help>Various Freescale chips, including the 8313, include a NAND Flash
Controller Module with built-in hardware ECC capabilities.
Enabling this option will enable you to use this to control
external NAND devices.</help>
			</entry>
			<entry name="MTD_NAND_FSL_IFC">
				<label>NAND support for Freescale IFC controller</label>
				<help>Various Freescale chips e.g P1010, include a NAND Flash machine
with built-in hardware ECC capabilities.
Enabling this option will enable you to use this to control
external NAND devices.</help>
			</entry>
			<entry name="MTD_NAND_FSL_UPM">
				<label>Support for NAND on Freescale UPM</label>
				<help>Enables support for NAND Flash chips wired onto Freescale PowerPC
processor localbus with User-Programmable Machine support.</help>
			</entry>
			<entry name="MTD_NAND_MPC5121_NFC">
				<label>MPC5121 built-in NAND Flash Controller support</label>
				<help>This enables the driver for the NAND flash controller on the
MPC5121 SoC.</help>
			</entry>
			<entry name="MTD_NAND_VF610_NFC">
				<label>Support for Freescale NFC for VF610/MPC5125</label>
				<help>Enables support for NAND Flash Controller on some Freescale
processors like the VF610, MPC5125, MCF54418 or Kinetis K70.
The driver supports a maximum 2k page size. With 2k pages and
64 bytes or more of OOB, hardware ECC with up to 32-bit error
correction is supported. Hardware ECC is only enabled through
device tree.</help>
			</entry>
			<entry name="MTD_NAND_MXC">
				<label>MXC NAND support</label>
				<help>This enables the driver for the NAND flash controller on the
MXC processors.</help>
			</entry>
			<entry name="MTD_NAND_SH_FLCTL">
				<label>Support for NAND on Renesas SuperH FLCTL</label>
				<help>Several Renesas SuperH CPU has FLCTL. This option enables support
for NAND Flash using FLCTL.</help>
			</entry>
			<entry name="MTD_NAND_DAVINCI">
				<label>Support NAND on DaVinci/Keystone SoC</label>
				<help>Enable the driver for NAND flash chips on Texas Instruments
DaVinci/Keystone processors.</help>
			</entry>
			<entry name="MTD_NAND_TXX9NDFMC">
				<label>NAND Flash support for TXx9 SoC</label>
				<help>This enables the NAND flash controller on the TXx9 SoCs.</help>
			</entry>
			<entry name="MTD_NAND_SOCRATES">
				<label>Support for NAND on Socrates board</label>
				<help>Enables support for NAND Flash chips wired onto Socrates board.</help>
			</entry>
			<entry name="MTD_NAND_NUC900">
				<label>Support for NAND on Nuvoton NUC9xx/w90p910 evaluation boards.</label>
				<help>This enables the driver for the NAND Flash on evaluation board based
on w90p910 / NUC9xx.</help>
			</entry>
			<entry name="MTD_NAND_JZ4740">
				<label>Support for JZ4740 SoC NAND controller</label>
				<help>Enables support for NAND Flash on JZ4740 SoC based boards.</help>
			</entry>
			<entry name="MTD_NAND_JZ4780">
				<label>Support for NAND on JZ4780 SoC</label>
				<help>Enables support for NAND Flash connected to the NEMC on JZ4780 SoC
based boards, using the BCH controller for hardware error correction.</help>
			</entry>
			<entry name="MTD_NAND_FSMC">
				<label>Support for NAND on ST Micros FSMC</label>
				<help>Enables support for NAND Flash chips on the ST Microelectronics
Flexible Static Memory Controller (FSMC)</help>
			</entry>
			<entry name="MTD_NAND_XWAY">
				<label>Support for NAND on Lantiq XWAY SoC</label>
				<help>Enables support for NAND Flash chips on Lantiq XWAY SoCs. NAND is attached
to the External Bus Unit (EBU).</help>
			</entry>
			<entry name="MTD_NAND_SUNXI">
				<label>Support for NAND on Allwinner SoCs</label>
				<help>Enables support for NAND Flash chips on Allwinner SoCs.</help>
			</entry>
			<entry name="MTD_NAND_HISI504">
				<label>Support for NAND controller on Hisilicon SoC Hip04</label>
				<help>Enables support for NAND controller on Hisilicon SoC Hip04.</help>
			</entry>
			<entry name="MTD_NAND_QCOM">
				<label>Support for NAND on QCOM SoCs</label>
				<help>Enables support for NAND flash chips on SoCs containing the EBI2 NAND
controller. This controller is found on IPQ806x SoC.</help>
			</entry>
			<entry name="MTD_NAND_MTK">
				<label>Support for NAND controller on MTK SoCs</label>
				<help>Enables support for NAND controller on MTK SoCs.
This controller is found on mt27xx, mt81xx, mt65xx SoCs.</help>
			</entry>
			<entry name="MTD_ONENAND">
				<label>OneNAND Device Support</label>
				<help>This enables support for accessing all type of OneNAND flash
devices. For further information see
&lt;http://www.samsung.com/Products/Semiconductor/OneNAND/index.htm&gt;</help>
			</entry>
			<entry name="MTD_ONENAND_VERIFY_WRITE">
				<label>Verify OneNAND page writes</label>
				<help>This adds an extra check when data is written to the flash. The
OneNAND flash device internally checks only bits transitioning
from 1 to 0. There is a rare possibility that even though the
device thinks the write was successful, a bit could have been
flipped accidentally due to device wear or something else.</help>
			</entry>
			<entry name="MTD_ONENAND_GENERIC">
				<label>OneNAND Flash device via platform device driver</label>
				<help>Support for OneNAND flash via platform device driver.</help>
			</entry>
			<entry name="MTD_ONENAND_OMAP2">
				<label>OneNAND on OMAP2/OMAP3 support</label>
				<help>Support for a OneNAND flash device connected to an OMAP2/OMAP3 CPU
via the GPMC memory controller.</help>
			</entry>
			<entry name="MTD_ONENAND_SAMSUNG">
				<label>OneNAND on Samsung SOC controller support</label>
				<help>Support for a OneNAND flash device connected to an Samsung SOC.
S3C64XX uses command mapping method.
S5PC110/S5PC210 use generic OneNAND method.</help>
			</entry>
			<entry name="MTD_ONENAND_OTP">
				<label>OneNAND OTP Support</label>
				<help>One Block of the NAND Flash Array memory is reserved as
a One-Time Programmable Block memory area.
Also, 1st Block of NAND Flash Array can be used as OTP.

The OTP block can be read, programmed and locked using the same
operations as any other NAND Flash Array memory block.
OTP block cannot be erased.

OTP block is fully-guaranteed to be a valid block.</help>
			</entry>
			<entry name="MTD_ONENAND_2X_PROGRAM">
				<label>OneNAND 2X program support</label>
				<help>The 2X Program is an extension of Program Operation.
Since the device is equipped with two DataRAMs, and two-plane NAND
Flash memory array, these two component enables simultaneous program
of 4KiB. Plane1 has only even blocks such as block0, block2, block4
while Plane2 has only odd blocks such as block1, block3, block5.
So MTD regards it as 4KiB page size and 256KiB block size

Now the following chips support it. (KFXXX16Q2M)
Demux: KFG2G16Q2M, KFH4G16Q2M, KFW8G16Q2M,
Mux:   KFM2G16Q2M, KFN4G16Q2M,

And more recent chips</help>
			</entry>
			<container name="LPDDR_LPDDR2_PCM_memory_drivers">
				<label>LPDDR &amp; LPDDR2 PCM memory drivers</label>
				<entry name="MTD_LPDDR">
					<label>Support for LPDDR flash chips</label>
					<help>This option enables support of LPDDR (Low power double data rate)
flash chips. Synonymous with Mobile-DDR. It is a new standard for
DDR memories, intended for battery-operated systems.</help>
				</entry>
				<entry name="MTD_QINFO_PROBE">
					<label>Detect flash chips by QINFO probe</label>
					<help>Device Information for LPDDR chips is offered through the Overlay
Window QINFO interface, permits software to be used for entire
families of devices. This serves similar purpose of CFI on legacy
Flash products</help>
				</entry>
				<entry name="MTD_LPDDR2_NVM">
					<label>Support for LPDDR2-NVM flash chips</label>
					<help>This option enables support of PCM memories with a LPDDR2-NVM
(Low power double data rate 2) interface.</help>
				</entry>
			</container>
			<entry name="MTD_SPI_NOR">
				<label>SPI-NOR device support</label>
				<help>This is the framework for the SPI NOR which can be used by the SPI
device drivers and the SPI-NOR device driver.</help>
			</entry>
			<entry name="MTD_MT81xx_NOR">
				<label>Mediatek MT81xx SPI NOR flash controller</label>
				<help>This enables access to SPI NOR flash, using MT81xx SPI NOR flash
controller. This controller does not support generic SPI BUS, it only
supports SPI NOR Flash.</help>
			</entry>
			<entry name="MTD_SPI_NOR_USE_4K_SECTORS">
				<label>Use small 4096 B erase sectors</label>
				<help>Many flash memories support erasing small (4096 B) sectors. Depending
on the usage this feature may provide performance gain in comparison
to erasing whole blocks (32/64 KiB).
Changing a small part of the flash's contents is usually faster with
small sectors. On the other hand erasing should be faster when using
64 KiB block instead of 16 × 4 KiB sectors.

Please note that some tools/drivers/filesystems may not work with
4096 B erase size (e.g. UBIFS requires 15 KiB as a minimum).</help>
			</entry>
			<entry name="SPI_ATMEL_QUADSPI">
				<label>Atmel Quad SPI Controller</label>
				<help>This enables support for the Quad SPI controller in master mode.
This driver does not support generic SPI. The implementation only
supports SPI NOR.</help>
			</entry>
			<entry name="SPI_CADENCE_QUADSPI">
				<label>Cadence Quad SPI controller</label>
				<help>Enable support for the Cadence Quad SPI Flash controller.

Cadence QSPI is a specialized controller for connecting an SPI
Flash over 1/2/4-bit wide bus. Enable this option if you have a
device with a Cadence QSPI controller and want to access the
Flash as an MTD device.</help>
			</entry>
			<entry name="SPI_FSL_QUADSPI">
				<label>Freescale Quad SPI controller</label>
				<help>This enables support for the Quad SPI controller in master mode.
This controller does not support generic SPI. It only supports
SPI NOR.</help>
			</entry>
			<entry name="SPI_HISI_SFC">
				<label>Hisilicon SPI-NOR Flash Controller(SFC)</label>
				<help>This enables support for hisilicon SPI-NOR flash controller.</help>
			</entry>
			<entry name="SPI_NXP_SPIFI">
				<label>NXP SPI Flash Interface (SPIFI)</label>
				<help>Enable support for the NXP LPC SPI Flash Interface controller.

SPIFI is a specialized controller for connecting serial SPI
Flash. Enable this option if you have a device with a SPIFI
controller and want to access the Flash as a mtd device.</help>
			</entry>
			<entry name="MTD_UBI">
				<label>Enable UBI - Unsorted block images</label>
				<help>UBI is a software layer above MTD layer which admits of LVM-like
logical volumes on top of MTD devices, hides some complexities of
flash chips like wear and bad blocks and provides some other useful
capabilities. Please, consult the MTD web site for more details
(www.linux-mtd.infradead.org).</help>
			</entry>
			<entry name="MTD_UBI_WL_THRESHOLD">
				<label>UBI wear-leveling threshold</label>
				<help>This parameter defines the maximum difference between the highest
erase counter value and the lowest erase counter value of eraseblocks
of UBI devices. When this threshold is exceeded, UBI starts performing
wear leveling by means of moving data from eraseblock with low erase
counter to eraseblocks with high erase counter.

The default value should be OK for SLC NAND flashes, NOR flashes and
other flashes which have eraseblock life-cycle 100000 or more.
However, in case of MLC NAND flashes which typically have eraseblock
life-cycle less than 10000, the threshold should be lessened (e.g.,
to 128 or 256, although it does not have to be power of 2).</help>
			</entry>
			<entry name="MTD_UBI_BEB_LIMIT">
				<label>Maximum expected bad eraseblock count per 1024 eraseblocks</label>
				<help>This option specifies the maximum bad physical eraseblocks UBI
expects on the MTD device (per 1024 eraseblocks). If the underlying
flash does not admit of bad eraseblocks (e.g. NOR flash), this value
is ignored.

NAND datasheets often specify the minimum and maximum NVM (Number of
Valid Blocks) for the flashes' endurance lifetime. The maximum
expected bad eraseblocks per 1024 eraseblocks then can be calculated
as &quot;1024 * (1 - MinNVB / MaxNVB)&quot;, which gives 20 for most NANDs
(MaxNVB is basically the total count of eraseblocks on the chip).

To put it differently, if this value is 20, UBI will try to reserve
about 1.9% of physical eraseblocks for bad blocks handling. And that
will be 1.9% of eraseblocks on the entire NAND chip, not just the MTD
partition UBI attaches. This means that if you have, say, a NAND
flash chip admits maximum 40 bad eraseblocks, and it is split on two
MTD partitions of the same size, UBI will reserve 40 eraseblocks when
attaching a partition.

This option can be overridden by the &quot;mtd=&quot; UBI module parameter or
by the &quot;attach&quot; ioctl.

Leave the default value if unsure.</help>
			</entry>
			<entry name="MTD_UBI_FASTMAP">
				<label>UBI Fastmap (Experimental feature)</label>
				<help>Important: this feature is experimental so far and the on-flash
format for fastmap may change in the next kernel versions

Fastmap is a mechanism which allows attaching an UBI device
in nearly constant time. Instead of scanning the whole MTD device it
only has to locate a checkpoint (called fastmap) on the device.
The on-flash fastmap contains all information needed to attach
the device. Using fastmap makes only sense on large devices where
attaching by scanning takes long. UBI will not automatically install
a fastmap on old images, but you can set the UBI module parameter
fm_autoconvert to 1 if you want so. Please note that fastmap-enabled
images are still usable with UBI implementations without
fastmap support. On typical flash devices the whole fastmap fits
into one PEB. UBI will reserve PEBs to hold two fastmaps.

If in doubt, say &quot;N&quot;.</help>
			</entry>
			<entry name="MTD_UBI_GLUEBI">
				<label>MTD devices emulation driver (gluebi)</label>
				<help>This option enables gluebi - an additional driver which emulates MTD
devices on top of UBI volumes: for each UBI volumes an MTD device is
created, and all I/O to this MTD device is redirected to the UBI
volume. This is handy to make MTD-oriented software (like JFFS2)
work on top of UBI. Do not enable this unless you use legacy
software.</help>
			</entry>
			<entry name="MTD_UBI_BLOCK">
				<label>Read-only block devices on top of UBI volumes</label>
				<help>This option enables read-only UBI block devices support. UBI block
devices will be layered on top of UBI volumes, which means that the
UBI driver will transparently handle things like bad eraseblocks and
bit-flips. You can put any block-oriented file system on top of UBI
volumes in read-only mode (e.g., ext4), but it is probably most
practical for read-only file systems, like squashfs.

When selected, this feature will be built in the UBI driver.

If in doubt, say &quot;N&quot;.</help>
			</entry>
			<entry name="DTC"/>
			<entry name="OF">
				<label>Device Tree and Open Firmware support</label>
				<help>This option enables the device tree infrastructure.
It is automatically selected by platforms that need it or can
be enabled manually for unittests, overlays or
compile-coverage.</help>
			</entry>
			<entry name="OF_UNITTEST">
				<label>Device Tree runtime unit tests</label>
				<help>This option builds in test cases for the device tree infrastructure
that are executed once at boot time, and the results dumped to the
console.

If unsure, say N here, but this option is safe to enable.</help>
			</entry>
			<entry name="OF_ALL_DTBS">
				<label>Build all Device Tree Blobs</label>
				<help>This option builds all possible Device Tree Blobs (DTBs) for the
current architecture.

If unsure, say N here, but this option is safe to enable.</help>
			</entry>
			<entry name="OF_FLATTREE"/>
			<entry name="OF_EARLY_FLATTREE"/>
			<entry name="OF_PROMTREE"/>
			<entry name="OF_DYNAMIC">
				<label>Support for dynamic device trees&quot; if OF_UNITTEST</label>
				<help>On some platforms, the device tree can be manipulated at runtime.
While this option is selected automatically on such platforms, you
can enable it manually to improve device tree unit test coverage.</help>
			</entry>
			<entry name="OF_ADDRESS"/>
			<entry name="OF_ADDRESS_PCI"/>
			<entry name="OF_IRQ"/>
			<entry name="OF_NET"/>
			<entry name="OF_MDIO">
				<help>OpenFirmware MDIO bus (Ethernet PHY) accessors</help>
			</entry>
			<entry name="OF_PCI">
				<help>OpenFirmware PCI bus accessors</help>
			</entry>
			<entry name="OF_PCI_IRQ">
				<help>OpenFirmware PCI IRQ routing helpers</help>
			</entry>
			<entry name="OF_MTD"/>
			<entry name="OF_RESERVED_MEM">
				<help>Helpers to allow for reservation of memory regions</help>
			</entry>
			<entry name="OF_RESOLVE"/>
			<entry name="OF_OVERLAY">
				<label>Device Tree overlays</label>
				<help>Overlays are a method to dynamically modify part of the kernel's
device tree with dynamically loaded data.
While this option is selected automatically when needed, you can
enable it manually to improve device tree unit test coverage.</help>
			</entry>
			<entry name="OF_NUMA"/>
			<entry name="ARCH_MIGHT_HAVE_PC_PARPORT">
				<help>Select this config option from the architecture Kconfig if
the architecture might have PC parallel port hardware.</help>
			</entry>
			<entry name="PARPORT">
				<label>Parallel port support</label>
				<help>If you want to use devices connected to your machine's parallel port
(the connector at the computer with 25 holes), e.g. printer, ZIP
drive, PLIP link (Parallel Line Internet Protocol is mainly used to
create a mini network by connecting the parallel ports of two local
machines) etc., then you need to say Y here; please read
&lt;file:Documentation/parport.txt&gt; and
&lt;file:drivers/parport/BUGS-parport&gt;.

For extensive information about drivers for many devices attaching
to the parallel port see &lt;http://www.torque.net/linux-pp.html&gt; on
the WWW.

It is possible to share a single parallel port among several devices
and it is safe to compile all the corresponding drivers into the
kernel. To compile parallel port support as a module, choose M here:
the module will be called parport.
If you have more than one parallel port and want to specify which
port and IRQ to be used by this driver at module load time, take a
look at &lt;file:Documentation/parport.txt&gt;.

If unsure, say Y.</help>
			</entry>
			<entry name="PARPORT_PC">
				<label>PC-style hardware</label>
				<help>You should say Y here if you have a PC-style parallel port. All
IBM PC compatible computers and some Alphas have PC-style
parallel ports.  PA-RISC owners should only say Y here if they
have a SuperIO parallel port.

To compile this driver as a module, choose M here: the
module will be called parport_pc.

If unsure, say Y.</help>
			</entry>
			<entry name="PARPORT_SERIAL">
				<label>Multi-IO cards (parallel and serial)</label>
				<help>This adds support for multi-IO PCI cards that have parallel and
serial ports.  You should say Y or M here.  If you say M, the module
will be called parport_serial.</help>
			</entry>
			<entry name="PARPORT_PC_FIFO">
				<label>Use FIFO/DMA if available</label>
				<help>Many parallel port chipsets provide hardware that can speed up
printing. Say Y here if you want to take advantage of that.

As well as actually having a FIFO, or DMA capability, the kernel
will need to know which IRQ the parallel port has.  By default,
parallel port interrupts will not be used, and so neither will the
FIFO.  See &lt;file:Documentation/parport.txt&gt; to find out how to
specify which IRQ/DMA to use.</help>
			</entry>
			<entry name="PARPORT_PC_SUPERIO">
				<label>SuperIO chipset support</label>
				<help>Saying Y here enables some probes for Super-IO chipsets in order to
find out things like base addresses, IRQ lines and DMA channels.  It
is safe to say N.</help>
			</entry>
			<entry name="PARPORT_PC_PCMCIA">
				<label>Support for PCMCIA management for PC-style ports</label>
				<help>Say Y here if you need PCMCIA support for your PC-style parallel
ports. If unsure, say N.</help>
			</entry>
			<entry name="PARPORT_IP32">
				<label>SGI IP32 builtin port</label>
				<help>Say Y here if you need support for the parallel port on
SGI O2 machines. This code is also available as a module (say M),
called parport_ip32.  If in doubt, saying N is the safe plan.</help>
			</entry>
			<entry name="PARPORT_AMIGA">
				<label>Amiga builtin port</label>
				<help>Say Y here if you need support for the parallel port hardware on
Amiga machines. This code is also available as a module (say M),
called parport_amiga. If in doubt, saying N is the safe plan.</help>
			</entry>
			<entry name="PARPORT_MFC3">
				<label>Multiface III parallel port</label>
				<help>Say Y here if you need parallel port support for the MFC3 card.
This code is also available as a module (say M), called
parport_mfc3. If in doubt, saying N is the safe plan.</help>
			</entry>
			<entry name="PARPORT_ATARI">
				<label>Atari hardware</label>
				<help>Say Y here if you need support for the parallel port hardware on
Atari machines. This code is also available as a module (say M),
called parport_atari. If in doubt, saying N is the safe plan.</help>
			</entry>
			<entry name="PARPORT_GSC"/>
			<entry name="PARPORT_SUNBPP">
				<label>Sparc hardware</label>
				<help>This driver provides support for the bidirectional parallel port
found on many Sun machines. Note that many of the newer Ultras
actually have pc style hardware instead.</help>
			</entry>
			<entry name="PARPORT_AX88796">
				<label>AX88796 Parallel Port</label>
				<help>Say Y here if you need support for the parallel port hardware on
the AX88796 network controller chip. This code is also available
as a module (say M), called parport_ax88796.

The driver is not dependent on the AX88796 network driver, and
should not interfere with the networking functions of the chip.</help>
			</entry>
			<entry name="PARPORT_1284">
				<label>IEEE 1284 transfer modes</label>
				<help>If you have a printer that supports status readback or device ID, or
want to use a device that uses enhanced parallel port transfer modes
such as EPP and ECP, say Y here to enable advanced IEEE 1284
transfer modes. Also say Y if you want device ID information to
appear in /proc/sys/dev/parport/*/autoprobe*. It is safe to say N.</help>
			</entry>
			<entry name="PARPORT_NOT_PC"/>
			<entry name="PNP">
				<label>Plug and Play support</label>
				<help>Plug and Play (PnP) is a standard for peripherals which allows those
peripherals to be configured by software, e.g. assign IRQ's or other
parameters. No jumpers on the cards are needed, instead the values
are provided to the cards from the BIOS, from the operating system,
or using a user-space utility.

Say Y here if you would like Linux to configure your Plug and Play
devices. You should then also say Y to all of the protocols below.
Alternatively, you can say N here and configure your PnP devices
using user space utilities such as the isapnptools package.

If unsure, say Y.</help>
			</entry>
			<entry name="PNP_DEBUG_MESSAGES">
				<label>PNP debugging messages</label>
				<help>Say Y here if you want the PNP layer to be able to produce debugging
messages if needed.  The messages can be enabled at boot-time with
the pnp.debug kernel parameter.

This option allows you to save a bit of space if you do not want
the messages to even be built into the kernel.

If you have any doubts about this, say Y here.</help>
			</entry>
			<entry name="ISAPNP">
				<label>ISA Plug and Play support</label>
				<help>Say Y here if you would like support for ISA Plug and Play devices.
Some information is in &lt;file:Documentation/isapnp.txt&gt;.

If unsure, say Y.
</help>
			</entry>
			<entry name="PNPBIOS">
				<label>Plug and Play BIOS support</label>
				<help>Linux uses the PNPBIOS as defined in &quot;Plug and Play BIOS
Specification Version 1.0A May 5, 1994&quot; to autodetect built-in
mainboard resources (e.g. parallel port resources).

Some features (e.g. event notification, docking station information,
ISAPNP services) are not currently implemented.

If you would like the kernel to detect and allocate resources to
your mainboard devices (on some systems they are disabled by the
BIOS) say Y here.  Also the PNPBIOS can help prevent resource
conflicts between mainboard devices and other bus devices.

Note: ACPI is expected to supersede PNPBIOS some day, currently it
co-exists nicely.  If you have a non-ISA system that supports ACPI,
you probably don't need PNPBIOS support.</help>
			</entry>
			<entry name="PNPBIOS_PROC_FS">
				<label>Plug and Play BIOS /proc interface</label>
				<help>If you say Y here and to &quot;/proc file system support&quot;, you will be
able to directly access the PNPBIOS.  This includes resource
allocation, ESCD, and other PNPBIOS services.  Using this
interface is potentially dangerous because the PNPBIOS driver will
not be notified of any resource changes made by writing directly.
Also some buggy systems will fault when accessing certain features
in the PNPBIOS /proc interface (e.g. &quot;boot&quot; configs).

See the latest pcmcia-cs (stand-alone package) for a nice set of
PNPBIOS /proc interface tools (lspnp and setpnp).

Unless you are debugging or have other specific reasons, it is
recommended that you say N here.

</help>
			</entry>
			<entry name="PNPACPI"/>
			<entry name="BLK_DEV">
				<label>Block devices</label>
				<help>Say Y here to get to see options for various different block device
drivers. This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled;
only do this if you know what you are doing.</help>
			</entry>
			<entry name="BLK_DEV_NULL_BLK">
				<label>Null test block driver</label>
			</entry>
			<entry name="BLK_DEV_FD">
				<label>Normal floppy disk support</label>
				<help>If you want to use the floppy disk drive(s) of your PC under Linux,
say Y. Information about this driver, especially important for IBM
Thinkpad users, is contained in
&lt;file:Documentation/blockdev/floppy.txt&gt;.
That file also contains the location of the Floppy driver FAQ as
well as location of the fdutils package used to configure additional
parameters of the driver at run time.

To compile this driver as a module, choose M here: the
module will be called floppy.</help>
			</entry>
			<entry name="AMIGA_FLOPPY">
				<label>Amiga floppy support</label>
			</entry>
			<entry name="ATARI_FLOPPY">
				<label>Atari floppy support</label>
			</entry>
			<entry name="MAC_FLOPPY">
				<label>Support for PowerMac floppy</label>
				<help>If you have a SWIM-3 (Super Woz Integrated Machine 3; from Apple)
floppy controller, say Y here. Most commonly found in PowerMacs.</help>
			</entry>
			<entry name="BLK_DEV_SWIM">
				<label>Support for SWIM Macintosh floppy</label>
				<help>You should select this option if you want floppy support
and you don't have a II, IIfx, Q900, Q950 or AV series.</help>
			</entry>
			<entry name="AMIGA_Z2RAM">
				<label>Amiga Zorro II ramdisk support</label>
				<help>This enables support for using Chip RAM and Zorro II RAM as a
ramdisk or as a swap partition. Say Y if you want to include this
driver in the kernel.

To compile this driver as a module, choose M here: the
module will be called z2ram.</help>
			</entry>
			<entry name="GDROM">
				<label>SEGA Dreamcast GD-ROM drive</label>
				<help>A standard SEGA Dreamcast comes with a modified CD ROM drive called a
&quot;GD-ROM&quot; by SEGA to signify it is capable of reading special disks
with up to 1 GB of data. This drive will also read standard CD ROM
disks. Select this option to access any disks in your GD ROM drive.
Most users will want to say &quot;Y&quot; here.
You can also build this as a module which will be called gdrom.</help>
			</entry>
			<entry name="PARIDE">
				<label>Parallel port IDE device support</label>
				<help>There are many external CD-ROM and disk devices that connect through
your computer's parallel port. Most of them are actually IDE devices
using a parallel port IDE adapter. This option enables the PARIDE
subsystem which contains drivers for many of these external drives.
Read &lt;file:Documentation/blockdev/paride.txt&gt; for more information.

If you have said Y to the &quot;Parallel-port support&quot; configuration
option, you may share a single port between your printer and other
parallel port devices. Answer Y to build PARIDE support into your
kernel, or M if you would like to build it as a loadable module. If
your parallel port support is in a loadable module, you must build
PARIDE as a module. If you built PARIDE support into your kernel,
you may still build the individual protocol modules and high-level
drivers as loadable modules. If you build this support as a module,
it will be called paride.

To use the PARIDE support, you must say Y or M here and also to at
least one high-level driver (e.g. &quot;Parallel port IDE disks&quot;,
&quot;Parallel port ATAPI CD-ROMs&quot;, &quot;Parallel port ATAPI disks&quot; etc.) and
to at least one protocol driver (e.g. &quot;ATEN EH-100 protocol&quot;,
&quot;MicroSolutions backpack protocol&quot;, &quot;DataStor Commuter protocol&quot;
etc.).</help>
			</entry>
			<entry name="PARIDE_PD">
				<label>Parallel port IDE disks</label>
				<help>This option enables the high-level driver for IDE-type disk devices
connected through a parallel port. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
parallel port IDE driver, otherwise you should answer M to build
it as a loadable module. The module will be called pd. You
must also have at least one parallel port protocol driver in your
system. Among the devices supported by this driver are the SyQuest
EZ-135, EZ-230 and SparQ drives, the Avatar Shark and the backpack
hard drives from MicroSolutions.</help>
			</entry>
			<entry name="PARIDE_PCD">
				<label>Parallel port ATAPI CD-ROMs</label>
				<help>This option enables the high-level driver for ATAPI CD-ROM devices
connected through a parallel port. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
parallel port ATAPI CD-ROM driver, otherwise you should answer M to
build it as a loadable module. The module will be called pcd. You
must also have at least one parallel port protocol driver in your
system. Among the devices supported by this driver are the
MicroSolutions backpack CD-ROM drives and the Freecom Power CD. If
you have such a CD-ROM drive, you should also say Y or M to &quot;ISO
9660 CD-ROM file system support&quot; below, because that's the file
system used on CD-ROMs.</help>
			</entry>
			<entry name="PARIDE_PF">
				<label>Parallel port ATAPI disks</label>
				<help>This option enables the high-level driver for ATAPI disk devices
connected through a parallel port. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
parallel port ATAPI disk driver, otherwise you should answer M
to build it as a loadable module. The module will be called pf.
You must also have at least one parallel port protocol driver in
your system. Among the devices supported by this driver are the
MicroSolutions backpack PD/CD drive and the Imation Superdisk
LS-120 drive.</help>
			</entry>
			<entry name="PARIDE_PT">
				<label>Parallel port ATAPI tapes</label>
				<help>This option enables the high-level driver for ATAPI tape devices
connected through a parallel port. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
parallel port ATAPI disk driver, otherwise you should answer M
to build it as a loadable module. The module will be called pt.
You must also have at least one parallel port protocol driver in
your system. Among the devices supported by this driver is the
parallel port version of the HP 5GB drive.</help>
			</entry>
			<entry name="PARIDE_PG">
				<label>Parallel port generic ATAPI devices</label>
				<help>This option enables a special high-level driver for generic ATAPI
devices connected through a parallel port. The driver allows user
programs, such as cdrtools, to send ATAPI commands directly to a
device.

If you chose to build PARIDE support into your kernel, you may
answer Y here to build in the parallel port generic ATAPI driver,
otherwise you should answer M to build it as a loadable module. The
module will be called pg.

You must also have at least one parallel port protocol driver in
your system.

This driver implements an API loosely related to the generic SCSI
driver. See &lt;file:include/linux/pg.h&gt;. for details.

You can obtain the most recent version of cdrtools from
&lt;ftp://ftp.berlios.de/pub/cdrecord/&gt;. Versions 1.6.1a3 and
later fully support this driver.</help>
			</entry>
			<entry name="PARIDE_ATEN">
				<label>ATEN EH-100 protocol</label>
				<help>This option enables support for the ATEN EH-100 parallel port IDE
protocol. This protocol is used in some inexpensive low performance
parallel port kits made in Hong Kong. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
protocol driver, otherwise you should answer M to build it as a
loadable module. The module will be called aten. You must also
have a high-level driver for the type of device that you want to
support.</help>
			</entry>
			<entry name="PARIDE_BPCK">
				<label>MicroSolutions backpack (Series 5) protocol</label>
				<help>This option enables support for the Micro Solutions BACKPACK
parallel port Series 5 IDE protocol.  (Most BACKPACK drives made
before 1999 were Series 5) Series 5 drives will NOT always have the
Series noted on the bottom of the drive. Series 6 drivers will.

In other words, if your BACKPACK drive doesn't say &quot;Series 6&quot; on the
bottom, enable this option.

If you chose to build PARIDE support into your kernel, you may
answer Y here to build in the protocol driver, otherwise you should
answer M to build it as a loadable module.  The module will be
called bpck.  You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_BPCK6">
				<label>MicroSolutions backpack (Series 6) protocol</label>
				<help>This option enables support for the Micro Solutions BACKPACK
parallel port Series 6 IDE protocol.  (Most BACKPACK drives made
after 1999 were Series 6) Series 6 drives will have the Series noted
on the bottom of the drive.  Series 5 drivers don't always have it
noted.

In other words, if your BACKPACK drive says &quot;Series 6&quot; on the
bottom, enable this option.

If you chose to build PARIDE support into your kernel, you may
answer Y here to build in the protocol driver, otherwise you should
answer M to build it as a loadable module.  The module will be
called bpck6.  You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_COMM">
				<label>DataStor Commuter protocol</label>
				<help>This option enables support for the Commuter parallel port IDE
protocol from DataStor. If you chose to build PARIDE support
into your kernel, you may answer Y here to build in the protocol
driver, otherwise you should answer M to build it as a loadable
module. The module will be called comm. You must also have
a high-level driver for the type of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_DSTR">
				<label>DataStor EP-2000 protocol</label>
				<help>This option enables support for the EP-2000 parallel port IDE
protocol from DataStor. If you chose to build PARIDE support
into your kernel, you may answer Y here to build in the protocol
driver, otherwise you should answer M to build it as a loadable
module. The module will be called dstr. You must also have
a high-level driver for the type of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_FIT2">
				<label>FIT TD-2000 protocol</label>
				<help>This option enables support for the TD-2000 parallel port IDE
protocol from Fidelity International Technology. This is a simple
(low speed) adapter that is used in some portable hard drives. If
you chose to build PARIDE support into your kernel, you may answer Y
here to build in the protocol driver, otherwise you should answer M
to build it as a loadable module. The module will be called ktti.
You must also have a high-level driver for the type of device that
you want to support.</help>
			</entry>
			<entry name="PARIDE_FIT3">
				<label>FIT TD-3000 protocol</label>
				<help>This option enables support for the TD-3000 parallel port IDE
protocol from Fidelity International Technology. This protocol is
used in newer models of their portable disk, CD-ROM and PD/CD
devices. If you chose to build PARIDE support into your kernel, you
may answer Y here to build in the protocol driver, otherwise you
should answer M to build it as a loadable module. The module will be
called fit3. You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_EPAT">
				<label>Shuttle EPAT/EPEZ protocol</label>
				<help>This option enables support for the EPAT parallel port IDE protocol.
EPAT is a parallel port IDE adapter manufactured by Shuttle
Technology and widely used in devices from major vendors such as
Hewlett-Packard, SyQuest, Imation and Avatar. If you chose to build
PARIDE support into your kernel, you may answer Y here to build in
the protocol driver, otherwise you should answer M to build it as a
loadable module. The module will be called epat. You must also
have a high-level driver for the type of device that you want to
support.</help>
			</entry>
			<entry name="PARIDE_EPATC8">
				<label>Support c7/c8 chips</label>
				<help>This option enables support for the newer Shuttle EP1284 (aka c7 and
c8) chip. You need this if you are using any recent Imation SuperDisk
(LS-120) drive.</help>
			</entry>
			<entry name="PARIDE_EPIA">
				<label>Shuttle EPIA protocol</label>
				<help>This option enables support for the (obsolete) EPIA parallel port
IDE protocol from Shuttle Technology. This adapter can still be
found in some no-name kits. If you chose to build PARIDE support
into your kernel, you may answer Y here to build in the protocol
driver, otherwise you should answer M to build it as a loadable
module. The module will be called epia. You must also have a
high-level driver for the type of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_FRIQ">
				<label>Freecom IQ ASIC-2 protocol</label>
				<help>This option enables support for version 2 of the Freecom IQ parallel
port IDE adapter.  This adapter is used by the Maxell Superdisk
drive.  If you chose to build PARIDE support into your kernel, you
may answer Y here to build in the protocol driver, otherwise you
should answer M to build it as a loadable module. The module will be
called friq. You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_FRPW">
				<label>FreeCom power protocol</label>
				<help>This option enables support for the Freecom power parallel port IDE
protocol. If you chose to build PARIDE support into your kernel, you
may answer Y here to build in the protocol driver, otherwise you
should answer M to build it as a loadable module. The module will be
called frpw. You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_KBIC">
				<label>KingByte KBIC-951A/971A protocols</label>
				<help>This option enables support for the KBIC-951A and KBIC-971A parallel
port IDE protocols from KingByte Information Corp. KingByte's
adapters appear in many no-name portable disk and CD-ROM products,
especially in Europe. If you chose to build PARIDE support into your
kernel, you may answer Y here to build in the protocol driver,
otherwise you should answer M to build it as a loadable module. The
module will be called kbic. You must also have a high-level driver
for the type of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_KTTI">
				<label>KT PHd protocol</label>
				<help>This option enables support for the &quot;PHd&quot; parallel port IDE protocol
from KT Technology. This is a simple (low speed) adapter that is
used in some 2.5&quot; portable hard drives. If you chose to build PARIDE
support into your kernel, you may answer Y here to build in the
protocol driver, otherwise you should answer M to build it as a
loadable module. The module will be called ktti. You must also
have a high-level driver for the type of device that you want to
support.</help>
			</entry>
			<entry name="PARIDE_ON20">
				<label>OnSpec 90c20 protocol</label>
				<help>This option enables support for the (obsolete) 90c20 parallel port
IDE protocol from OnSpec (often marketed under the ValuStore brand
name). If you chose to build PARIDE support into your kernel, you
may answer Y here to build in the protocol driver, otherwise you
should answer M to build it as a loadable module. The module will
be called on20. You must also have a high-level driver for the
type of device that you want to support.</help>
			</entry>
			<entry name="PARIDE_ON26">
				<label>OnSpec 90c26 protocol</label>
				<help>This option enables support for the 90c26 parallel port IDE protocol
from OnSpec Electronics (often marketed under the ValuStore brand
name). If you chose to build PARIDE support into your kernel, you
may answer Y here to build in the protocol driver, otherwise you
should answer M to build it as a loadable module. The module will be
called on26. You must also have a high-level driver for the type
of device that you want to support.</help>
			</entry>
			<entry name="BLK_DEV_PCIESSD_MTIP32XX">
				<label>Block Device Driver for Micron PCIe SSDs</label>
				<help>This enables the block driver for Micron PCIe SSDs.
</help>
			</entry>
			<entry name="ZRAM">
				<label>Compressed RAM block device support</label>
				<help>Creates virtual block devices called /dev/zramX (X = 0, 1, ...).
Pages written to these disks are compressed and stored in memory
itself. These disks allow very fast I/O and compression provides
good amounts of memory savings.

It has several use cases, for example: /tmp storage, use as swap
disks and maybe many more.

See zram.txt for more information.
</help>
			</entry>
			<entry name="BLK_CPQ_CISS_DA">
				<label>Compaq Smart Array 5xxx support</label>
				<help>This is the driver for Compaq Smart Array 5xxx controllers.
Everyone using these boards should say Y here.
See &lt;file:Documentation/blockdev/cciss.txt&gt; for the current list of
boards supported by this driver, and for further information
on the use of this driver.</help>
			</entry>
			<entry name="CISS_SCSI_TAPE">
				<label>SCSI tape drive support for Smart Array 5xxx</label>
				<help>When enabled (Y), this option allows SCSI tape drives and SCSI medium
changers (tape robots) to be accessed via a Compaq 5xxx array
controller.  (See &lt;file:Documentation/blockdev/cciss.txt&gt; for more details.)

&quot;SCSI support&quot; and &quot;SCSI tape support&quot; must also be enabled for this
option to work.

When this option is disabled (N), the SCSI portion of the driver
is not compiled.</help>
			</entry>
			<entry name="BLK_DEV_DAC960">
				<label>Mylex DAC960/DAC1100 PCI RAID Controller support</label>
				<help>This driver adds support for the Mylex DAC960, AcceleRAID, and
eXtremeRAID PCI RAID controllers.  See the file
&lt;file:Documentation/blockdev/README.DAC960&gt; for further information
about this driver.

To compile this driver as a module, choose M here: the
module will be called DAC960.</help>
			</entry>
			<entry name="BLK_DEV_UMEM">
				<label>Micro Memory MM5415 Battery Backed RAM support</label>
				<help>Saying Y here will include support for the MM5415 family of
battery backed (Non-volatile) RAM cards.
&lt;http://www.umem.com/&gt;

The cards appear as block devices that can be partitioned into
as many as 15 partitions.

To compile this driver as a module, choose M here: the
module will be called umem.

The umem driver has not yet been allocated a MAJOR number, so
one is chosen dynamically.</help>
			</entry>
			<entry name="BLK_DEV_UBD">
				<label>Virtual block device</label>
				<help>The User-Mode Linux port includes a driver called UBD which will let
you access arbitrary files on the host computer as block devices.
Unless you know that you do not need such virtual block devices say
Y here.</help>
			</entry>
			<entry name="BLK_DEV_UBD_SYNC">
				<label>Always do synchronous disk IO for UBD</label>
				<help>Writes to the virtual block device are not immediately written to the
host's disk; this may cause problems if, for example, the User-Mode
Linux 'Virtual Machine' uses a journalling filesystem and the host
computer crashes.

Synchronous operation (i.e. always writing data to the host's disk
immediately) is configurable on a per-UBD basis by using a special
kernel command line option.  Alternatively, you can say Y here to
turn on synchronous operation by default for all block devices.

If you're running a journalling file system (like reiserfs, for
example) in your virtual machine, you will want to say Y here.  If
you care for the safety of the data in your virtual machine, Y is a
wise choice too.  In all other cases (for example, if you're just
playing around with User-Mode Linux) you can choose N.</help>
			</entry>
			<entry name="BLK_DEV_COW_COMMON"/>
			<entry name="BLK_DEV_LOOP">
				<label>Loopback device support</label>
				<help>Saying Y here will allow you to use a regular file as a block
device; you can then create a file system on that block device and
mount it just as you would mount other block devices such as hard
drive partitions, CD-ROM drives or floppy drives. The loop devices
are block special device files with major number 7 and typically
called /dev/loop0, /dev/loop1 etc.

This is useful if you want to check an ISO 9660 file system before
burning the CD, or if you want to use floppy images without first
writing them to floppy. Furthermore, some Linux distributions avoid
the need for a dedicated Linux partition by keeping their complete
root file system inside a DOS FAT file using this loop device
driver.

To use the loop device, you need the losetup utility, found in the
util-linux package, see
&lt;ftp://ftp.kernel.org/pub/linux/utils/util-linux/&gt;.

The loop device driver can also be used to &quot;hide&quot; a file system in
a disk partition, floppy, or regular file, either using encryption
(scrambling the data) or steganography (hiding the data in the low
bits of, say, a sound file). This is also safe if the file resides
on a remote file server.

There are several ways of encrypting disks. Some of these require
kernel patches. The vanilla kernel offers the cryptoloop option
and a Device Mapper target (which is superior, as it supports all
file systems). If you want to use the cryptoloop, say Y to both
LOOP and CRYPTOLOOP, and make sure you have a recent (version 2.12
or later) version of util-linux. Additionally, be aware that
the cryptoloop is not safe for storing journaled filesystems.

Note that this loop device has nothing to do with the loopback
device used for network connections from the machine to itself.

To compile this driver as a module, choose M here: the
module will be called loop.

Most users will answer N here.</help>
			</entry>
			<entry name="BLK_DEV_LOOP_MIN_COUNT">
				<label>Number of loop devices to pre-create at init time</label>
				<help>Static number of loop devices to be unconditionally pre-created
at init time.

This default value can be overwritten on the kernel command
line or with module-parameter loop.max_loop.

The historic default is 8. If a late 2011 version of losetup(8)
is used, it can be set to 0, since needed loop devices can be
dynamically allocated with the /dev/loop-control interface.</help>
			</entry>
			<entry name="BLK_DEV_CRYPTOLOOP">
				<label>Cryptoloop Support</label>
				<help>Say Y here if you want to be able to use the ciphers that are
provided by the CryptoAPI as loop transformation. This might be
used as hard disk encryption.

WARNING: This device is not safe for journaled file systems like
ext3 or Reiserfs. Please use the Device Mapper crypto module
instead, which can be configured to be on-disk compatible with the
cryptoloop device.</help>
			</entry>
			<entry name="BLK_DEV_DRBD">
				<label>DRBD Distributed Replicated Block Device support</label>
				<help>
NOTE: In order to authenticate connections you have to select
CRYPTO_HMAC and a hash function as well.

DRBD is a shared-nothing, synchronously replicated block device. It
is designed to serve as a building block for high availability
clusters and in this context, is a &quot;drop-in&quot; replacement for shared
storage. Simplistically, you could see it as a network RAID 1.

Each minor device has a role, which can be 'primary' or 'secondary'.
On the node with the primary device the application is supposed to
run and to access the device (/dev/drbdX). Every write is sent to
the local 'lower level block device' and, across the network, to the
node with the device in 'secondary' state.  The secondary device
simply writes the data to its lower level block device.

DRBD can also be used in dual-Primary mode (device writable on both
nodes), which means it can exhibit shared disk semantics in a
shared-nothing cluster.  Needless to say, on top of dual-Primary
DRBD utilizing a cluster file system is necessary to maintain for
cache coherency.

For automatic failover you need a cluster manager (e.g. heartbeat).
See also: http://www.drbd.org/, http://www.linux-ha.org

If unsure, say N.

config DRBD_FAULT_INJECTION
bool &quot;DRBD fault injection&quot;
depends on BLK_DEV_DRBD
help

Say Y here if you want to simulate IO errors, in order to test DRBD's
behavior.

The actual simulation of IO errors is done by writing 3 values to
/sys/module/drbd/parameters/

enable_faults: bitmask of...
1	meta data write
2               read
4	resync data write
8	            read
16	data write
32	data read
64	read ahead
128	kmalloc of bitmap
256	allocation of peer_requests
512	insert data corruption on receiving side

fault_devs: bitmask of minor numbers
fault_rate: frequency in percent

Example: Simulate data write errors on /dev/drbd0 with a probability of 5%.
echo 16 &gt; /sys/module/drbd/parameters/enable_faults
echo 1 &gt; /sys/module/drbd/parameters/fault_devs
echo 5 &gt; /sys/module/drbd/parameters/fault_rate

If unsure, say N.
</help>
			</entry>
			<entry name="BLK_DEV_NBD">
				<label>Network block device support</label>
				<help>Saying Y here will allow your computer to be a client for network
block devices, i.e. it will be able to use block devices exported by
servers (mount file systems on them etc.). Communication between
client and server works over TCP/IP networking, but to the client
program this is hidden: it looks like a regular local file access to
a block device special file such as /dev/nd0.

Network block devices also allows you to run a block-device in
userland (making server and client physically the same computer,
communicating using the loopback network device).

Read &lt;file:Documentation/blockdev/nbd.txt&gt; for more information,
especially about where to find the server code, which runs in user
space and does not need special kernel support.

Note that this has nothing to do with the network file systems NFS
or Coda; you can say N here even if you intend to use NFS or Coda.

To compile this driver as a module, choose M here: the
module will be called nbd.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_SKD">
				<label>STEC S1120 Block Driver</label>
				<help>Saying Y or M here will enable support for the
STEC, Inc. S1120 PCIe SSD.

Use device /dev/skd$N amd /dev/skd$Np$M.</help>
			</entry>
			<entry name="BLK_DEV_OSD">
				<label>OSD object-as-blkdev support</label>
				<help>Saying Y or M here will allow the exporting of a single SCSI
OSD (object-based storage) object as a Linux block device.

For example, if you create a 2G object on an OSD device,
you can then use this module to present that 2G object as
a Linux block device.

To compile this driver as a module, choose M here: the
module will be called osdblk.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_SX8">
				<label>Promise SATA SX8 support</label>
				<help>Saying Y or M here will enable support for the
Promise SATA SX8 controllers.

Use devices /dev/sx8/$N and /dev/sx8/$Np$M.</help>
			</entry>
			<entry name="BLK_DEV_RAM">
				<label>RAM block device support</label>
				<help>Saying Y here will allow you to use a portion of your RAM memory as
a block device, so that you can make file systems on it, read and
write to it and do all the other things that you can do with normal
block devices (such as hard drives). It is usually used to load and
store a copy of a minimal root file system off of a floppy into RAM
during the initial install of Linux.

Note that the kernel command line option &quot;ramdisk=XX&quot; is now obsolete.
For details, read &lt;file:Documentation/blockdev/ramdisk.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called brd. An alias &quot;rd&quot; has been defined
for historical reasons.

Most normal users won't need the RAM disk functionality, and can
thus say N here.</help>
			</entry>
			<entry name="BLK_DEV_RAM_COUNT">
				<label>Default number of RAM disks</label>
				<help>The default value is 16 RAM disks. Change this if you know what you
are doing. If you boot from a filesystem that needs to be extracted
in memory, you will need at least one RAM disk (e.g. root on cramfs).</help>
			</entry>
			<entry name="BLK_DEV_RAM_SIZE">
				<label>Default RAM disk size (kbytes)</label>
				<help>The default value is 4096 kilobytes. Only change this if you know
what you are doing.</help>
			</entry>
			<entry name="BLK_DEV_RAM_DAX">
				<label>Support Direct Access (DAX) to RAM block devices</label>
				<help>Support filesystems using DAX to access RAM block devices.  This
avoids double-buffering data in the page cache before copying it
to the block device.  Answering Y will slightly enlarge the kernel,
and will prevent RAM block device backing store memory from being
allocated from highmem (only a problem for highmem systems).</help>
			</entry>
			<entry name="CDROM_PKTCDVD">
				<label>Packet writing on CD/DVD media</label>
				<help>If you have a CDROM/DVD drive that supports packet writing, say
Y to include support. It should work with any MMC/Mt Fuji
compliant ATAPI or SCSI drive, which is just about any newer
DVD/CD writer.

Currently only writing to CD-RW, DVD-RW, DVD+RW and DVDRAM discs
is possible.
DVD-RW disks must be in restricted overwrite mode.

See the file &lt;file:Documentation/cdrom/packet-writing.txt&gt;
for further information on the use of this driver.

To compile this driver as a module, choose M here: the
module will be called pktcdvd.</help>
			</entry>
			<entry name="CDROM_PKTCDVD_BUFFERS">
				<label>Free buffers for data gathering</label>
				<help>This controls the maximum number of active concurrent packets. More
concurrent packets can increase write performance, but also require
more memory. Each concurrent packet will require approximately 64Kb
of non-swappable kernel memory, memory which will be allocated when
a disc is opened for writing.</help>
			</entry>
			<entry name="CDROM_PKTCDVD_WCACHE">
				<label>Enable write caching</label>
				<help>If enabled, write caching will be set for the CD-R/W device. For now
this option is dangerous unless the CD-RW media is known good, as we
don't do deferred write error handling yet.</help>
			</entry>
			<entry name="ATA_OVER_ETH">
				<label>ATA over Ethernet support</label>
				<help>This driver provides Support for ATA over Ethernet block
devices like the Coraid EtherDrive (R) Storage Blade.</help>
			</entry>
			<entry name="MG_DISK">
				<label>mGine mflash, gflash support</label>
				<help>mGine mFlash(gFlash) block device driver</help>
			</entry>
			<entry name="MG_DISK_RES">
				<label>Size of reserved area before MBR</label>
				<help>Define size of reserved area that usually used for boot. Unit is KB.
All of the block device operation will be taken this value as start
offset
Examples:
1024 =&gt; 1 MB</help>
			</entry>
			<entry name="SUNVDC">
				<label>Sun Virtual Disk Client support</label>
				<help>Support for virtual disk devices as a client under Sun
Logical Domains.</help>
			</entry>
			<entry name="BLK_DEV_XPRAM">
				<label>XPRAM disk support</label>
				<help>Select this option if you want to use your expanded storage on S/390
or zSeries as a disk.  This is useful as a _fast_ swap device if you
want to access more than 2G of memory when running in 31 bit mode.
This option is also available as a module which will be called
xpram.  If unsure, say &quot;N&quot;.</help>
			</entry>
			<entry name="DCSSBLK">
				<label>DCSSBLK support</label>
				<help>Support for dcss block device</help>
			</entry>
			<entry name="DASD">
				<label>Support for DASD devices</label>
				<help>Enable this option if you want to access DASDs directly utilizing
S/390s channel subsystem commands. This is necessary for running
natively on a single image or an LPAR.</help>
			</entry>
			<entry name="DASD_PROFILE">
				<label>Profiling support for dasd devices</label>
				<help>Enable this option if you want to see profiling information
in /proc/dasd/statistics.</help>
			</entry>
			<entry name="DASD_ECKD">
				<label>Support for ECKD Disks</label>
				<help>ECKD devices are the most commonly used devices. You should enable
this option unless you are very sure to have no ECKD device.</help>
			</entry>
			<entry name="DASD_FBA">
				<label>Support for FBA  Disks</label>
				<help>Select this option to be able to access FBA devices. It is safe to
say &quot;Y&quot;.</help>
			</entry>
			<entry name="DASD_DIAG">
				<label>Support for DIAG access to Disks</label>
				<help>Select this option if you want to use Diagnose250 command to access
Disks under VM.  If you are not running under VM or unsure what it is,
say &quot;N&quot;.</help>
			</entry>
			<entry name="DASD_EER">
				<label>Extended error reporting (EER)</label>
				<help>This driver provides a character device interface to the
DASD extended error reporting. This is only needed if you want to
use applications written for the EER facility.</help>
			</entry>
			<entry name="SCM_BLOCK">
				<label>Support for Storage Class Memory</label>
				<help>Block device driver for Storage Class Memory (SCM). This driver
provides a block device interface for each available SCM increment.

To compile this driver as a module, choose M here: the
module will be called scm_block.</help>
			</entry>
			<entry name="SCM_BLOCK_CLUSTER_WRITE">
				<label>SCM force cluster writes</label>
				<help>Force writes to Storage Class Memory (SCM) to be in done in clusters.
</help>
			</entry>
			<entry name="XILINX_SYSACE">
				<label>Xilinx SystemACE support</label>
				<help>Include support for the Xilinx SystemACE CompactFlash interface</help>
			</entry>
			<entry name="XEN_BLKDEV_FRONTEND">
				<label>Xen virtual block device support</label>
				<help>This driver implements the front-end of the Xen virtual
block device driver.  It communicates with a back-end driver
in another domain which drives the actual block device.</help>
			</entry>
			<entry name="XEN_BLKDEV_BACKEND">
				<label>Xen block-device backend driver</label>
				<help>The block-device backend driver allows the kernel to export its
block devices to other guests via a high-performance shared-memory
interface.

The corresponding Linux frontend driver is enabled by the
CONFIG_XEN_BLKDEV_FRONTEND configuration option.

The backend driver attaches itself to a any block device specified
in the XenBus configuration. There are no limits to what the block
device as long as it has a major and minor.

If you are compiling a kernel to run in a Xen block backend driver
domain (often this is domain 0) you should say Y here. To
compile this driver as a module, chose M here: the module
will be called xen-blkback.</help>
			</entry>
			<entry name="VIRTIO_BLK">
				<label>Virtio block driver</label>
				<help>This is the virtual block driver for virtio.  It can be used with
lguest or QEMU based VMMs (like KVM or Xen).  Say Y or M.</help>
			</entry>
			<entry name="BLK_DEV_HD">
				<label>Very old hard disk (MFM/RLL/IDE) driver</label>
				<help>This is a very old hard disk driver that lacks the enhanced
functionality of the newer ones.

It is required for systems with ancient MFM/RLL/ESDI drives.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_RBD">
				<label>Rados block device (RBD)</label>
				<help>Say Y here if you want include the Rados block device, which stripes
a block device over objects stored in the Ceph distributed object
store.

More information at http://ceph.newdream.net/.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_RSXX">
				<label>IBM Flash Adapter 900GB Full Height PCIe Device Driver</label>
				<help>Device driver for IBM's high speed PCIe SSD
storage device: Flash Adapter 900GB Full Height.

To compile this driver as a module, choose M here: the
module will be called rsxx.</help>
			</entry>
			<entry name="NVME_CORE"/>
			<entry name="BLK_DEV_NVME">
				<label>NVM Express block device</label>
				<help>The NVM Express driver is for solid state drives directly
connected to the PCI or PCI Express bus.  If you know you
don't have one of these, it is safe to answer N.

To compile this driver as a module, choose M here: the
module will be called nvme.</help>
			</entry>
			<entry name="BLK_DEV_NVME_SCSI">
				<label>SCSI emulation for NVMe device nodes</label>
				<help>This adds support for the SG_IO ioctl on the NVMe character
and block devices nodes, as well as a translation for a small
number of selected SCSI commands to NVMe commands to the NVMe
driver.  If you don't know what this means you probably want
to say N here, unless you run a distro that abuses the SCSI
emulation to provide stable device names for mount by id, like
some OpenSuSE and SLES versions.</help>
			</entry>
			<entry name="NVME_FABRICS"/>
			<entry name="NVME_RDMA">
				<label>NVM Express over Fabrics RDMA host driver</label>
				<help>This provides support for the NVMe over Fabrics protocol using
the RDMA (Infiniband, RoCE, iWarp) transport.  This allows you
to use remote block devices exported using the NVMe protocol set.

To configure a NVMe over Fabrics controller use the nvme-cli tool
from https://github.com/linux-nvme/nvme-cli.

If unsure, say N.
</help>
			</entry>
			<entry name="NVME_TARGET">
				<label>NVMe Target support</label>
				<help>This enabled target side support for the NVMe protocol, that is
it allows the Linux kernel to implement NVMe subsystems and
controllers and export Linux block devices as NVMe namespaces.
You need to select at least one of the transports below to make this
functionality useful.

To configure the NVMe target you probably want to use the nvmetcli
tool from http://git.infradead.org/users/hch/nvmetcli.git.</help>
			</entry>
			<entry name="NVME_TARGET_LOOP">
				<label>NVMe loopback device support</label>
				<help>This enables the NVMe loopback device support, which can be useful
to test NVMe host and target side features.

If unsure, say N.</help>
			</entry>
			<entry name="NVME_TARGET_RDMA">
				<label>NVMe over Fabrics RDMA target support</label>
				<help>This enables the NVMe RDMA target support, which allows exporting NVMe
devices over RDMA.

If unsure, say N.
</help>
			</entry>
			<container name="Misc_devices">
				<label>Misc devices</label>
				<entry name="SENSORS_LIS3LV02D"/>
				<entry name="AD525X_DPOT">
					<label>Analog Devices Digital Potentiometers</label>
					<help>If you say yes here, you get support for the Analog Devices
AD5258, AD5259, AD5251, AD5252, AD5253, AD5254, AD5255
AD5160, AD5161, AD5162, AD5165, AD5200, AD5201, AD5203,
AD5204, AD5206, AD5207, AD5231, AD5232, AD5233, AD5235,
AD5260, AD5262, AD5263, AD5290, AD5291, AD5292, AD5293,
AD7376, AD8400, AD8402, AD8403, ADN2850, AD5241, AD5242,
AD5243, AD5245, AD5246, AD5247, AD5248, AD5280, AD5282,
ADN2860, AD5273, AD5171, AD5170, AD5172, AD5173, AD5270,
AD5271, AD5272, AD5274
digital potentiometer chips.

See Documentation/misc-devices/ad525x_dpot.txt for the
userspace interface.

This driver can also be built as a module.  If so, the module
will be called ad525x_dpot.</help>
				</entry>
				<entry name="AD525X_DPOT_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if you have a digital potentiometers hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called ad525x_dpot-i2c.</help>
				</entry>
				<entry name="AD525X_DPOT_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if you have a digital potentiometers hooked to an SPI bus.

If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ad525x_dpot-spi.</help>
				</entry>
				<entry name="ATMEL_TCLIB">
					<label>Atmel AT32/AT91 Timer/Counter Library</label>
					<help>Select this if you want a library to allocate the Timer/Counter
blocks found on many Atmel processors.  This facilitates using
these blocks by different drivers despite processor differences.</help>
				</entry>
				<entry name="ATMEL_TCB_CLKSRC">
					<label>TC Block Clocksource</label>
					<help>Select this to get a high precision clocksource based on a
TC block with a 5+ MHz base clock rate.  Two timer channels
are combined to make a single 32-bit timer.

When GENERIC_CLOCKEVENTS is defined, the third timer channel
may be used as a clock event device supporting oneshot mode
(delays of up to two seconds) based on the 32 KiHz clock.</help>
				</entry>
				<entry name="ATMEL_TCB_CLKSRC_BLOCK">
					<label>TC Block&quot; if CPU_AT32AP700X</label>
					<help>Some chips provide more than one TC block, so you have the
choice of which one to use for the clock framework.  The other
TC can be used for other purposes, such as PWM generation and
interval timing.</help>
				</entry>
				<entry name="DUMMY_IRQ">
					<label>Dummy IRQ handler</label>
					<help>This module accepts a single 'irq' parameter, which it should register for.
The sole purpose of this module is to help with debugging of systems on
which spurious IRQs would happen on disabled IRQ vector.</help>
				</entry>
				<entry name="IBM_ASM">
					<label>Device driver for IBM RSA service processor</label>
					<help>This option enables device driver support for in-band access to the
IBM RSA (Condor) service processor in eServer xSeries systems.
The ibmasm device driver allows user space application to access
ASM (Advanced Systems Management) functions on the service
processor. The driver is meant to be used in conjunction with
a user space API.
The ibmasm driver also enables the OS to use the UART on the
service processor board as a regular serial port. To make use of
this feature serial driver support (CONFIG_SERIAL_8250) must be
enabled.

WARNING: This software may not be supported or function
correctly on your IBM server. Please consult the IBM ServerProven
website &lt;http://www-03.ibm.com/systems/info/x86servers/serverproven/compat/us/&gt;
for information on the specific driver level and support statement
for your IBM server.</help>
				</entry>
				<entry name="PHANTOM">
					<label>Sensable PHANToM (PCI)</label>
					<help>Say Y here if you want to build a driver for Sensable PHANToM device.

This driver is only for PCI PHANToMs.

If you choose to build module, its name will be phantom. If unsure,
say N here.</help>
				</entry>
				<entry name="INTEL_MID_PTI">
					<label>Parallel Trace Interface for MIPI P1149.7 cJTAG standard</label>
					<help>The PTI (Parallel Trace Interface) driver directs
trace data routed from various parts in the system out
through an Intel Penwell PTI port and out of the mobile
device for analysis with a debugging tool (Lauterbach or Fido).

You should select this driver if the target kernel is meant for
an Intel Atom (non-netbook) mobile device containing a MIPI
P1149.7 standard implementation.</help>
				</entry>
				<entry name="SGI_IOC4">
					<label>SGI IOC4 Base IO support</label>
					<help>This option enables basic support for the IOC4 chip on certain
SGI IO controller cards (IO9, IO10, and PCI-RT).  This option
does not enable any specific functions on such a card, but provides
necessary infrastructure for other drivers to utilize.

If you have an SGI Altix with an IOC4-based card say Y.
Otherwise say N.</help>
				</entry>
				<entry name="TIFM_CORE">
					<label>TI Flash Media interface support</label>
					<help>If you want support for Texas Instruments(R) Flash Media adapters
you should select this option and then also choose an appropriate
host adapter, such as 'TI Flash Media PCI74xx/PCI76xx host adapter
support', if you have a TI PCI74xx compatible card reader, for
example.
You will also have to select some flash card format drivers. MMC/SD
cards are supported via 'MMC/SD Card support: TI Flash Media MMC/SD
Interface support (MMC_TIFM_SD)'.

To compile this driver as a module, choose M here: the module will
be called tifm_core.</help>
				</entry>
				<entry name="TIFM_7XX1">
					<label>TI Flash Media PCI74xx/PCI76xx host adapter support</label>
					<help>This option enables support for Texas Instruments(R) PCI74xx and
PCI76xx families of Flash Media adapters, found in many laptops.
To make actual use of the device, you will have to select some
flash card format drivers, as outlined in the TIFM_CORE Help.

To compile this driver as a module, choose M here: the module will
be called tifm_7xx1.</help>
				</entry>
				<entry name="ICS932S401">
					<label>Integrated Circuits ICS932S401</label>
					<help>If you say yes here you get support for the Integrated Circuits
ICS932S401 clock control chips.

This driver can also be built as a module. If so, the module
will be called ics932s401.</help>
				</entry>
				<entry name="ATMEL_SSC">
					<label>Device driver for Atmel SSC peripheral</label>
					<help>This option enables device driver support for Atmel Synchronized
Serial Communication peripheral (SSC).

The SSC peripheral supports a wide variety of serial frame based
communications, i.e. I2S, SPI, etc.

If unsure, say N.</help>
				</entry>
				<entry name="ENCLOSURE_SERVICES">
					<label>Enclosure Services</label>
					<help>Provides support for intelligent enclosures (bays which
contain storage devices).  You also need either a host
driver (SCSI/ATA) which supports enclosures
or a SCSI enclosure device (SES) to use these services.</help>
				</entry>
				<entry name="SGI_XP">
					<label>Support communication between SGI SSIs</label>
					<help>An SGI machine can be divided into multiple Single System
Images which act independently of each other and have
hardware based memory protection from the others.  Enabling
this feature will allow for direct communication between SSIs
based on a network adapter and DMA messaging.</help>
				</entry>
				<entry name="CS5535_MFGPT">
					<label>CS5535/CS5536 Geode Multi-Function General Purpose Timer (MFGPT) support</label>
					<help>This driver provides access to MFGPT functionality for other
drivers that need timers.  MFGPTs are available in the CS5535 and
CS5536 companion chips that are found in AMD Geode and several
other platforms.  They have a better resolution and max interval
than the generic PIT, and are suitable for use as high-res timers.
You probably don't want to enable this manually; other drivers that
make use of it should enable it.</help>
				</entry>
				<entry name="CS5535_MFGPT_DEFAULT_IRQ">
					<help>MFGPTs on the CS5535 require an interrupt.  The selected IRQ
can be overridden as a module option as well as by driver that
use the cs5535_mfgpt_ API; however, different architectures might
want to use a different IRQ by default.  This is here for
architectures to set as necessary.</help>
				</entry>
				<entry name="CS5535_CLOCK_EVENT_SRC">
					<label>CS5535/CS5536 high-res timer (MFGPT) events</label>
					<help>This driver provides a clock event source based on the MFGPT
timer(s) in the CS5535 and CS5536 companion chips.
MFGPTs have a better resolution and max interval than the
generic PIT, and are suitable for use as high-res timers.</help>
				</entry>
				<entry name="HP_ILO">
					<label>Channel interface driver for the HP iLO processor</label>
					<help>The channel interface driver allows applications to communicate
with iLO management processors present on HP ProLiant servers.
Upon loading, the driver creates /dev/hpilo/dXccbN files, which
can be used to gather data from the management processor, via
read and write system calls.

To compile this driver as a module, choose M here: the
module will be called hpilo.</help>
				</entry>
				<entry name="QCOM_COINCELL">
					<label>Qualcomm coincell charger support</label>
					<help>This driver supports the coincell block found inside of
Qualcomm PMICs.  The coincell charger provides a means to
charge a coincell battery or backup capacitor which is used
to maintain PMIC register and RTC state in the absence of
external power.</help>
				</entry>
				<entry name="SGI_GRU">
					<label>SGI GRU driver</label>
					<help>The GRU is a hardware resource located in the system chipset. The GRU
contains memory that can be mmapped into the user address space. This memory is
used to communicate with the GRU to perform functions such as load/store,
scatter/gather, bcopy, AMOs, etc.  The GRU is directly accessed by user
instructions using user virtual addresses. GRU instructions (ex., bcopy) use
user virtual addresses for operands.

If you are not running on a SGI UV system, say N.</help>
				</entry>
				<entry name="SGI_GRU_DEBUG">
					<label>SGI GRU driver debug</label>
					<help>This option enables additional debugging code for the SGI GRU driver.
If you are unsure, say N.</help>
				</entry>
				<entry name="APDS9802ALS">
					<label>Medfield Avago APDS9802 ALS Sensor module</label>
					<help>If you say yes here you get support for the ALS APDS9802 ambient
light sensor.

This driver can also be built as a module.  If so, the module
will be called apds9802als.</help>
				</entry>
				<entry name="ISL29003">
					<label>Intersil ISL29003 ambient light sensor</label>
					<help>If you say yes here you get support for the Intersil ISL29003
ambient light sensor.

This driver can also be built as a module.  If so, the module
will be called isl29003.</help>
				</entry>
				<entry name="ISL29020">
					<label>Intersil ISL29020 ambient light sensor</label>
					<help>If you say yes here you get support for the Intersil ISL29020
ambient light sensor.

This driver can also be built as a module.  If so, the module
will be called isl29020.</help>
				</entry>
				<entry name="SENSORS_TSL2550">
					<label>Taos TSL2550 ambient light sensor</label>
					<help>If you say yes here you get support for the Taos TSL2550
ambient light sensor.

This driver can also be built as a module.  If so, the module
will be called tsl2550.</help>
				</entry>
				<entry name="SENSORS_BH1770">
					<label>BH1770GLC / SFH7770 combined ALS - Proximity sensor</label>
					<help>Say Y here if you want to build a driver for BH1770GLC (ROHM) or
SFH7770 (Osram) combined ambient light and proximity sensor chip.

To compile this driver as a module, choose M here: the
module will be called bh1770glc. If unsure, say N here.</help>
				</entry>
				<entry name="SENSORS_APDS990X">
					<label>APDS990X combined als and proximity sensors</label>
					<help>Say Y here if you want to build a driver for Avago APDS990x
combined ambient light and proximity sensor chip.

To compile this driver as a module, choose M here: the
module will be called apds990x. If unsure, say N here.</help>
				</entry>
				<entry name="HMC6352">
					<label>Honeywell HMC6352 compass</label>
					<help>This driver provides support for the Honeywell HMC6352 compass,
providing configuration and heading data via sysfs.</help>
				</entry>
				<entry name="DS1682">
					<label>Dallas DS1682 Total Elapsed Time Recorder with Alarm</label>
					<help>If you say yes here you get support for Dallas Semiconductor
DS1682 Total Elapsed Time Recorder.

This driver can also be built as a module.  If so, the module
will be called ds1682.</help>
				</entry>
				<entry name="SPEAR13XX_PCIE_GADGET">
					<label>PCIe gadget support for SPEAr13XX platform</label>
					<help>This option enables gadget support for PCIe controller. If
board file defines any controller as PCIe endpoint then a sysfs
entry will be created for that controller. User can use these
sysfs node to configure PCIe EP as per his requirements.</help>
				</entry>
				<entry name="TI_DAC7512">
					<label>Texas Instruments DAC7512</label>
					<help>If you say yes here you get support for the Texas Instruments
DAC7512 16-bit digital-to-analog converter.

This driver can also be built as a module. If so, the module
will be called ti_dac7512.</help>
				</entry>
				<entry name="VMWARE_BALLOON">
					<label>VMware Balloon Driver</label>
					<help>This is VMware physical memory management driver which acts
like a &quot;balloon&quot; that can be inflated to reclaim physical pages
by reserving them in the guest and invalidating them in the
monitor, freeing up the underlying machine pages so they can
be allocated to other guests. The balloon can also be deflated
to allow the guest to use more physical memory.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called vmw_balloon.</help>
				</entry>
				<entry name="ARM_CHARLCD">
					<label>ARM Ltd. Character LCD Driver</label>
					<help>This is a driver for the character LCD found on the ARM Ltd.
Versatile and RealView Platform Baseboards. It doesn't do
very much more than display the text &quot;ARM Linux&quot; on the first
line and the Linux version on the second line, but that's
still useful.</help>
				</entry>
				<entry name="BMP085"/>
				<entry name="BMP085_I2C">
					<label>BMP085 digital pressure sensor on I2C</label>
					<help>Say Y here if you want to support Bosch Sensortec's digital pressure
sensor hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called bmp085-i2c.</help>
				</entry>
				<entry name="BMP085_SPI">
					<label>BMP085 digital pressure sensor on SPI</label>
					<help>Say Y here if you want to support Bosch Sensortec's digital pressure
sensor hooked to an SPI bus.

To compile this driver as a module, choose M here: the
module will be called bmp085-spi.</help>
				</entry>
				<entry name="PCH_PHUB">
					<label>Intel EG20T PCH/LAPIS Semicon IOH(ML7213/ML7223/ML7831) PHUB</label>
					<help>This driver is for PCH(Platform controller Hub) PHUB(Packet Hub) of
Intel Topcliff which is an IOH(Input/Output Hub) for x86 embedded
processor. The Topcliff has MAC address and Option ROM data in SROM.
This driver can access MAC address and Option ROM data in SROM.

This driver also can be used for LAPIS Semiconductor's IOH,
ML7213/ML7223/ML7831.
ML7213 which is for IVI(In-Vehicle Infotainment) use.
ML7223 IOH is for MP(Media Phone) use.
ML7831 IOH is for general purpose use.
ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.

To compile this driver as a module, choose M here: the module will
be called pch_phub.</help>
				</entry>
				<entry name="USB_SWITCH_FSA9480">
					<label>FSA9480 USB Switch</label>
					<help>The FSA9480 is a USB port accessory detector and switch.
The FSA9480 is fully controlled using I2C and enables USB data,
stereo and mono audio, video, microphone and UART data to use
a common connector port.</help>
				</entry>
				<entry name="LATTICE_ECP3_CONFIG">
					<label>Lattice ECP3 FPGA bitstream configuration via SPI</label>
					<help>This option enables support for bitstream configuration (programming
or loading) of the Lattice ECP3 FPGA family via SPI.

If unsure, say N.</help>
				</entry>
				<entry name="SRAM">
					<label>Generic on-chip SRAM driver</label>
					<help>This driver allows you to declare a memory region to be managed by
the genalloc API. It is supposed to be used for small on-chip SRAM
areas found on many SoCs.</help>
				</entry>
				<entry name="VEXPRESS_SYSCFG">
					<label>Versatile Express System Configuration driver</label>
					<help>ARM Ltd. Versatile Express uses specialised platform configuration
bus. System Configuration interface is one of the possible means
of generating transactions on this bus.</help>
				</entry>
				<entry name="PANEL">
					<label>Parallel port LCD/Keypad Panel support</label>
					<help>Say Y here if you have an HD44780 or KS-0074 LCD connected to your
parallel port. This driver also features 4 and 6-key keypads. The LCD
is accessible through the /dev/lcd char device (10, 156), and the
keypad through /dev/keypad (10, 185). Both require misc device to be
enabled. This code can either be compiled as a module, or linked into
the kernel and started at boot. If you don't understand what all this
is about, say N.</help>
				</entry>
				<entry name="PANEL_PARPORT">
					<label>Default parallel port number (0=LPT1)</label>
					<help>This is the index of the parallel port the panel is connected to. One
driver instance only supports one parallel port, so if your keypad
and LCD are connected to two separate ports, you have to start two
modules with different arguments. Numbering starts with '0' for LPT1,
and so on.</help>
				</entry>
				<entry name="PANEL_PROFILE">
					<label>Default panel profile (0-5, 0=custom)</label>
					<help>To ease configuration, the driver supports different configuration
profiles for past and recent wirings. These profiles can also be
used to define an approximative configuration, completed by a few
other options. Here are the profiles :

0 = custom (see further)
1 = 2x16 parallel LCD, old keypad
2 = 2x16 serial LCD (KS-0074), new keypad
3 = 2x16 parallel LCD (Hantronix), no keypad
4 = 2x16 parallel LCD (Nexcom NSA1045) with Nexcom's keypad
5 = 2x40 parallel LCD (old one), with old keypad

Custom configurations allow you to define how your display is
wired to the parallel port, and how it works. This is only intended
for experts.</help>
				</entry>
				<entry name="PANEL_KEYPAD">
					<label>Keypad type (0=none, 1=old 6 keys, 2=new 6 keys, 3=Nexcom 4 keys)</label>
					<help>This enables and configures a keypad connected to the parallel port.
The keys will be read from character device 10,185. Valid values are :

0 : do not enable this driver
1 : old 6 keys keypad
2 : new 6 keys keypad, as used on the server at www.ant-computing.com
3 : Nexcom NSA1045's 4 keys keypad

New profiles can be described in the driver source. The driver also
supports simultaneous keys pressed when the keypad supports them.</help>
				</entry>
				<entry name="PANEL_LCD">
					<label>LCD type (0=none, 1=custom, 2=old //, 3=ks0074, 4=hantronix, 5=Nexcom)</label>
					<help>This enables and configures an LCD connected to the parallel port.
The driver includes an interpreter for escape codes starting with
'\e[L' which are specific to the LCD, and a few ANSI codes. The
driver will be registered as character device 10,156, usually
under the name '/dev/lcd'. There are a total of 6 supported types :

0 : do not enable the driver
1 : custom configuration and wiring (see further)
2 : 2x16 &amp; 2x40 parallel LCD (old wiring)
3 : 2x16 serial LCD (KS-0074 based)
4 : 2x16 parallel LCD (Hantronix wiring)
5 : 2x16 parallel LCD (Nexcom wiring)

When type '1' is specified, other options will appear to configure
more precise aspects (wiring, dimensions, protocol, ...). Please note
that those values changed from the 2.4 driver for better consistency.</help>
				</entry>
				<entry name="PANEL_LCD_HEIGHT">
					<label>Number of lines on the LCD (1-2)</label>
					<help>This is the number of visible character lines on the LCD in custom profile.
It can either be 1 or 2.</help>
				</entry>
				<entry name="PANEL_LCD_WIDTH">
					<label>Number of characters per line on the LCD (1-40)</label>
					<help>This is the number of characters per line on the LCD in custom profile.
Common values are 16,20,24,40.</help>
				</entry>
				<entry name="PANEL_LCD_BWIDTH">
					<label>Internal LCD line width (1-40, 40 by default)</label>
					<help>Most LCDs use a standard controller which supports hardware lines of 40
characters, although sometimes only 16, 20 or 24 of them are really wired
to the terminal. This results in some non-visible but addressable characters,
and is the case for most parallel LCDs. Other LCDs, and some serial ones,
however, use the same line width internally as what is visible. The KS0074
for example, uses 16 characters per line for 16 visible characters per line.

This option lets you configure the value used by your LCD in 'custom' profile.
If you don't know, put '40' here.</help>
				</entry>
				<entry name="PANEL_LCD_HWIDTH">
					<label>Hardware LCD line width (1-64, 64 by default)</label>
					<help>Most LCDs use a single address bit to differentiate line 0 and line 1. Since
some of them need to be able to address 40 chars with the lower bits, they
often use the immediately superior power of 2, which is 64, to address the
next line.

If you don't know what your LCD uses, in doubt let 16 here for a 2x16, and
64 here for a 2x40.</help>
				</entry>
				<entry name="PANEL_LCD_CHARSET">
					<label>LCD character set (0=normal, 1=KS0074)</label>
					<help>Some controllers such as the KS0074 use a somewhat strange character set
where many symbols are at unusual places. The driver knows how to map
'standard' ASCII characters to the character sets used by these controllers.
Valid values are :

0 : normal (untranslated) character set
1 : KS0074 character set

If you don't know, use the normal one (0).</help>
				</entry>
				<entry name="PANEL_LCD_PROTO">
					<label>LCD communication mode (0=parallel 8 bits, 1=serial)</label>
					<help>This driver now supports any serial or parallel LCD wired to a parallel
port. But before assigning signals, the driver needs to know if it will
be driving a serial LCD or a parallel one. Serial LCDs only use 2 wires
(SDA/SCL), while parallel ones use 2 or 3 wires for the control signals
(E, RS, sometimes RW), and 4 or 8 for the data. Use 0 here for a 8 bits
parallel LCD, and 1 for a serial LCD.</help>
				</entry>
				<entry name="PANEL_LCD_PIN_E">
					<label>Parallel port pin number &amp; polarity connected to the LCD E signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the LCD 'E'
signal has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'E' pin in custom profile is '14' (AUTOFEED).</help>
				</entry>
				<entry name="PANEL_LCD_PIN_RS">
					<label>Parallel port pin number &amp; polarity connected to the LCD RS signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the LCD 'RS'
signal has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'RS' pin in custom profile is '17' (SELECT IN).</help>
				</entry>
				<entry name="PANEL_LCD_PIN_RW">
					<label>Parallel port pin number &amp; polarity connected to the LCD RW signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the LCD 'RW'
signal has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'RW' pin in custom profile is '16' (INIT).</help>
				</entry>
				<entry name="PANEL_LCD_PIN_SCL">
					<label>Parallel port pin number &amp; polarity connected to the LCD SCL signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the serial
LCD 'SCL' signal has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'SCL' pin in custom profile is '1' (STROBE).</help>
				</entry>
				<entry name="PANEL_LCD_PIN_SDA">
					<label>Parallel port pin number &amp; polarity connected to the LCD SDA signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the serial
LCD 'SDA' signal has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'SDA' pin in custom profile is '2' (D0).</help>
				</entry>
				<entry name="PANEL_LCD_PIN_BL">
					<label>Parallel port pin number &amp; polarity connected to the LCD backlight signal (-17...17) </label>
					<help>This describes the number of the parallel port pin to which the LCD 'BL' signal
has been connected. It can be :

0 : no connection (eg: connected to ground)
1..17 : directly connected to any of these pins on the DB25 plug
-1..-17 : connected to the same pin through an inverter (eg: transistor).

Default for the 'BL' pin in custom profile is '0' (uncontrolled).</help>
				</entry>
				<entry name="PANEL_CHANGE_MESSAGE">
					<label>Change LCD initialization message ?</label>
					<help>This allows you to replace the boot message indicating the kernel version
and the driver version with a custom message. This is useful on appliances
where a simple 'Starting system' message can be enough to stop a customer
from worrying.

If you say 'Y' here, you'll be able to choose a message yourself. Otherwise,
say 'N' and keep the default message with the version.</help>
				</entry>
				<entry name="PANEL_BOOT_MESSAGE">
					<label>New initialization message</label>
					<help>This allows you to replace the boot message indicating the kernel version
and the driver version with a custom message. This is useful on appliances
where a simple 'Starting system' message can be enough to stop a customer
from worrying.

An empty message will only clear the display at driver init time. Any other
printf()-formatted message is valid with newline and escape codes.</help>
				</entry>
				<entry name="C2PORT">
					<label>Silicon Labs C2 port support</label>
					<help>This option enables support for Silicon Labs C2 port used to
program Silicon micro controller chips (and other 8051 compatible).

If your board have no such micro controllers you don't need this
interface at all.

To compile this driver as a module, choose M here: the module will
be called c2port_core. Note that you also need a client module
usually called c2port-*.

If you are not sure, say N here.</help>
				</entry>
				<entry name="C2PORT_DURAMAR_2150">
					<label>C2 port support for Eurotech's Duramar 2150</label>
					<help>This option enables C2 support for the Eurotech's Duramar 2150
on board micro controller.

To compile this driver as a module, choose M here: the module will
be called c2port-duramar2150.</help>
				</entry>
				<container name="EEPROM_support">
					<label>EEPROM support</label>
					<entry name="EEPROM_AT24">
						<label>I2C EEPROMs / RAMs / ROMs from most vendors</label>
						<help>Enable this driver to get read/write support to most I2C EEPROMs
and compatible devices like FRAMs, SRAMs, ROMs etc. After you
configure the driver to know about each chip on your target
board.  Use these generic chip names, instead of vendor-specific
ones like at24c64, 24lc02 or fm24c04:

24c00, 24c01, 24c02, spd (readonly 24c02), 24c04, 24c08,
24c16, 24c32, 24c64, 24c128, 24c256, 24c512, 24c1024

Unless you like data loss puzzles, always be sure that any chip
you configure as a 24c32 (32 kbit) or larger is NOT really a
24c16 (16 kbit) or smaller, and vice versa. Marking the chip
as read-only won't help recover from this. Also, if your chip
has any software write-protect mechanism you may want to review the
code to make sure this driver won't turn it on by accident.

If you use this with an SMBus adapter instead of an I2C adapter,
full functionality is not available.  Only smaller devices are
supported (24c16 and below, max 4 kByte).

This driver can also be built as a module.  If so, the module
will be called at24.</help>
					</entry>
					<entry name="EEPROM_AT25">
						<label>SPI EEPROMs from most vendors</label>
						<help>Enable this driver to get read/write support to most SPI EEPROMs,
after you configure the board init code to know about each eeprom
on your target board.

This driver can also be built as a module.  If so, the module
will be called at25.</help>
					</entry>
					<entry name="EEPROM_LEGACY">
						<label>Old I2C EEPROM reader</label>
						<help>If you say yes here you get read-only access to the EEPROM data
available on modern memory DIMMs and Sony Vaio laptops via I2C. Such
EEPROMs could theoretically be available on other devices as well.

This driver can also be built as a module.  If so, the module
will be called eeprom.</help>
					</entry>
					<entry name="EEPROM_MAX6875">
						<label>Maxim MAX6874/5 power supply supervisor</label>
						<help>If you say yes here you get read-only support for the user EEPROM of
the Maxim MAX6874/5 EEPROM-programmable, quad power-supply
sequencer/supervisor.

All other features of this chip should be accessed via i2c-dev.

This driver can also be built as a module.  If so, the module
will be called max6875.</help>
					</entry>
					<entry name="EEPROM_93CX6">
						<label>EEPROM 93CX6 support</label>
						<help>This is a driver for the EEPROM chipsets 93c46 and 93c66.
The driver supports both read as well as write commands.

If unsure, say N.</help>
					</entry>
					<entry name="EEPROM_93XX46">
						<label>Microwire EEPROM 93XX46 support</label>
						<help>Driver for the microwire EEPROM chipsets 93xx46x. The driver
supports both read and write commands and also the command to
erase the whole EEPROM.

This driver can also be built as a module.  If so, the module
will be called eeprom_93xx46.

If unsure, say N.</help>
					</entry>
					<entry name="EEPROM_DIGSY_MTC_CFG">
						<label>DigsyMTC display configuration EEPROMs device</label>
						<help>This option enables access to display configuration EEPROMs
on digsy_mtc board. You have to additionally select Microwire
EEPROM 93XX46 driver. sysfs entries will be created for that
EEPROM allowing to read/write the configuration data or to
erase the whole EEPROM.

If unsure, say N.</help>
					</entry>
				</container>
				<entry name="CB710_CORE">
					<label>ENE CB710/720 Flash memory card reader support</label>
					<help>This option enables support for PCI ENE CB710/720 Flash memory card
reader found in some laptops (ie. some versions of HP Compaq nx9500).

You will also have to select some flash card format drivers (MMC/SD,
MemoryStick).

This driver can also be built as a module. If so, the module
will be called cb710.</help>
				</entry>
				<entry name="CB710_DEBUG">
					<label>Enable driver debugging</label>
					<help>This is an option for use by developers; most people should
say N here.  This adds a lot of debugging output to dmesg.</help>
				</entry>
				<entry name="CB710_DEBUG_ASSUMPTIONS"/>
				<container name="Texas_Instruments_shared_transport_line_discipline">
					<label>Texas Instruments shared transport line discipline</label>
					<entry name="TI_ST">
						<label>Shared transport core driver</label>
						<help>This enables the shared transport core driver for TI
BT / FM and GPS combo chips. This enables protocol drivers
to register themselves with core and send data, the responses
are returned to relevant protocol drivers based on their
packet types.</help>
					</entry>
				</container>
				<entry name="SENSORS_LIS3_SPI">
					<label>STMicroeletronics LIS3LV02Dx three-axis digital accelerometer (SPI)</label>
					<help>This driver provides support for the LIS3LV02Dx accelerometer connected
via SPI. The accelerometer data is readable via
/sys/devices/platform/lis3lv02d.

This driver also provides an absolute input class device, allowing
the laptop to act as a pinball machine-esque joystick.

This driver can also be built as modules.  If so, the core module
will be called lis3lv02d and a specific module for the SPI transport
is called lis3lv02d_spi.</help>
				</entry>
				<entry name="SENSORS_LIS3_I2C">
					<label>STMicroeletronics LIS3LV02Dx three-axis digital accelerometer (I2C)</label>
					<help>This driver provides support for the LIS3LV02Dx accelerometer connected
via I2C. The accelerometer data is readable via
/sys/devices/platform/lis3lv02d.

This driver also provides an absolute input class device, allowing
the device to act as a pinball machine-esque joystick.

This driver can also be built as modules.  If so, the core module
will be called lis3lv02d and a specific module for the I2C transport
is called lis3lv02d_i2c.
</help>
				</entry>
				<entry name="ALTERA_STAPL">
					<label>Altera FPGA firmware download module</label>
					<help>An Altera FPGA module. Say Y when you want to support this tool.
</help>
				</entry>
				<entry name="INTEL_MEI">
					<label>Intel Management Engine Interface</label>
					<help>The Intel Management Engine (Intel ME) provides Manageability,
Security and Media services for system containing Intel chipsets.
if selected /dev/mei misc device will be created.

For more information see
&lt;http://software.intel.com/en-us/manageability/&gt;</help>
				</entry>
				<entry name="INTEL_MEI_ME">
					<label>ME Enabled Intel Chipsets</label>
					<help>MEI support for ME Enabled Intel chipsets.

Supported Chipsets are:
7 Series Chipset Family
6 Series Chipset Family
5 Series Chipset Family
4 Series Chipset Family
Mobile 4 Series Chipset Family
ICH9
82946GZ/GL
82G35 Express
82Q963/Q965
82P965/G965
Mobile PM965/GM965
Mobile GME965/GLE960
82Q35 Express
82G33/G31/P35/P31 Express
82Q33 Express
82X38/X48 Express</help>
				</entry>
				<entry name="INTEL_MEI_TXE">
					<label>Intel Trusted Execution Environment with ME Interface</label>
					<help>MEI Support for Trusted Execution Environment device on Intel SoCs

Supported SoCs:
Intel Bay Trail
</help>
				</entry>
				<entry name="VMWARE_VMCI">
					<label>VMware VMCI Driver</label>
					<help>This is VMware's Virtual Machine Communication Interface.  It enables
high-speed communication between host and guest in a virtual
environment via the VMCI virtual device.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called vmw_vmci.
</help>
				</entry>
				<entry name="INTEL_MIC_BUS">
					<label>Intel MIC Bus Driver</label>
					<help>This option is selected by any driver which registers a
device or driver on the MIC Bus, such as CONFIG_INTEL_MIC_HOST,
CONFIG_INTEL_MIC_CARD, CONFIG_INTEL_MIC_X100_DMA etc.

If you are building a host/card kernel with an Intel MIC device
then say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="SCIF_BUS">
					<label>SCIF Bus Driver</label>
					<help>This option is selected by any driver which registers a
device or driver on the SCIF Bus, such as CONFIG_INTEL_MIC_HOST
and CONFIG_INTEL_MIC_CARD.

If you are building a host/card kernel with an Intel MIC device
then say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="VOP_BUS">
					<label>VOP Bus Driver</label>
					<help>This option is selected by any driver which registers a
device or driver on the VOP Bus, such as CONFIG_INTEL_MIC_HOST
and CONFIG_INTEL_MIC_CARD.

If you are building a host/card kernel with an Intel MIC device
then say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="INTEL_MIC_HOST">
					<label>Intel MIC Host Driver</label>
					<help>This enables Host Driver support for the Intel Many Integrated
Core (MIC) family of PCIe form factor coprocessor devices that
run a 64 bit Linux OS. The driver manages card OS state and
enables communication between host and card. Intel MIC X100
devices are currently supported.

If you are building a host kernel with an Intel MIC device then
say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="INTEL_MIC_CARD">
					<label>Intel MIC Card Driver</label>
					<help>This enables card driver support for the Intel Many Integrated
Core (MIC) device family. The card driver communicates shutdown/
crash events to the host and allows registration/configuration of
virtio devices. Intel MIC X100 devices are currently supported.

If you are building a card kernel for an Intel MIC device then
say M (recommended) or Y, else say N. If unsure say N.

For more information see
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="SCIF">
					<label>SCIF Driver</label>
					<help>This enables SCIF Driver support for the Intel Many Integrated
Core (MIC) family of PCIe form factor coprocessor devices that
run a 64 bit Linux OS. The Symmetric Communication Interface
(SCIF (pronounced as skiff)) is a low level communications API
across PCIe currently implemented for MIC.

If you are building a host kernel with an Intel MIC device then
say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="MIC_COSM">
					<label>Intel MIC Coprocessor State Management (COSM) Drivers</label>
					<help>This enables COSM driver support for the Intel Many
Integrated Core (MIC) family of PCIe form factor coprocessor
devices. COSM drivers implement functions such as boot,
shutdown, reset and reboot of MIC devices.

If you are building a host kernel with an Intel MIC device then
say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="VOP">
					<label>VOP Driver</label>
					<help>This enables VOP (Virtio over PCIe) Driver support for the Intel
Many Integrated Core (MIC) family of PCIe form factor coprocessor
devices. The VOP driver allows virtio drivers, e.g. net, console
and block drivers, on the card connect to user space virtio
devices on the host.

If you are building a host kernel with an Intel MIC device then
say M (recommended) or Y, else say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
				</entry>
				<entry name="VHOST_RING">
					<help>This option is selected by any driver which needs to access
the host side of a virtio ring.
</help>
				</entry>
				<entry name="GENWQE">
					<label>GenWQE PCIe Accelerator</label>
					<help>Enables PCIe card driver for IBM GenWQE accelerators.
The user-space interface is described in
include/linux/genwqe/genwqe_card.h.</help>
				</entry>
				<entry name="GENWQE_PLATFORM_ERROR_RECOVERY">
					<label>Use platform recovery procedures (0=off, 1=on)</label>
				</entry>
				<entry name="ECHO">
					<label>Line Echo Canceller support</label>
					<help>This driver provides line echo cancelling support for mISDN and
Zaptel drivers.

To compile this driver as a module, choose M here. The module
will be called echo.
</help>
				</entry>
				<entry name="CXL_BASE"/>
				<entry name="CXL_AFU_DRIVER_OPS"/>
				<entry name="CXL">
					<label>Support for IBM Coherent Accelerators (CXL)</label>
					<help>Select this option to enable driver support for IBM Coherent
Accelerators (CXL).  CXL is otherwise known as Coherent Accelerator
Processor Interface (CAPI).  CAPI allows accelerators in FPGAs to be
coherently attached to a CPU via an MMU.  This driver enables
userspace programs to access these accelerators via /dev/cxl/afuM.N
devices.

CAPI adapters are found in POWER8 based systems.

If unsure, say N.</help>
				</entry>
				<entry name="CXL_BIMODAL">
					<label>Support for bi-modal CAPI cards</label>
					<help>Select this option to enable support for bi-modal CAPI cards, such as
the Mellanox CX-4.
</help>
				</entry>
			</container>
			<entry name="HAVE_IDE"/>
			<entry name="IDE">
				<label>ATA/ATAPI/MFM/RLL support (DEPRECATED)</label>
				<help>If you say Y here, your kernel will be able to manage ATA/(E)IDE and
ATAPI units. The most common cases are IDE hard drives and ATAPI
CD-ROM drives.

This subsystem is currently in maintenance mode with only bug fix
changes applied. Users of ATA hardware are encouraged to migrate to
the newer ATA subsystem (&quot;Serial ATA (prod) and Parallel ATA
(experimental) drivers&quot;) which is more actively maintained.

To compile this driver as a module, choose M here: the
module will be called ide-core.

For further information, please read &lt;file:Documentation/ide/ide.txt&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="IDE_XFER_MODE"/>
			<entry name="IDE_TIMINGS"/>
			<entry name="IDE_ATAPI"/>
			<entry name="IDE_LEGACY"/>
			<entry name="BLK_DEV_IDE_SATA">
				<label>Support for SATA (deprecated; conflicts with libata SATA driver)</label>
				<help>There are two drivers for Serial ATA controllers.

The main driver, &quot;libata&quot;, uses the SCSI subsystem
and supports most modern SATA controllers. In order to use it
you may take a look at &quot;Serial ATA (prod) and Parallel ATA
(experimental) drivers&quot;.

The IDE driver (which you are currently configuring) supports
a few first-generation SATA controllers.

In order to eliminate conflicts between the two subsystems,
this config option enables the IDE driver's SATA support.
Normally this is disabled, as it is preferred that libata
supports SATA controllers, and this (IDE) driver supports
PATA controllers.

If unsure, say N.</help>
			</entry>
			<entry name="IDE_GD">
				<label>generic ATA/ATAPI disk support</label>
				<help>Support for ATA/ATAPI disks (including ATAPI floppy drives).

To compile this driver as a module, choose M here.
The module will be called ide-gd_mod.

If unsure, say Y.</help>
			</entry>
			<entry name="IDE_GD_ATA">
				<label>ATA disk support</label>
				<help>This will include support for ATA hard disks.

If unsure, say Y.</help>
			</entry>
			<entry name="IDE_GD_ATAPI">
				<label>ATAPI floppy support</label>
				<help>This will include support for ATAPI floppy drives
(i.e. Iomega ZIP or MKE LS-120).

For information about jumper settings and the question
of when a ZIP drive uses a partition table, see
&lt;http://www.win.tue.nl/~aeb/linux/zip/zip-1.html&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_IDECS">
				<label>PCMCIA IDE support</label>
				<help>Support for Compact Flash cards, outboard IDE disks, tape drives,
and CD-ROM drives connected through a PCMCIA card.</help>
			</entry>
			<entry name="BLK_DEV_DELKIN">
				<label>Cardbus IDE support (Delkin/ASKA/Workbit)</label>
				<help>Support for Delkin, ASKA, and Workbit Cardbus CompactFlash
Adapters.  This may also work for similar SD and XD adapters.</help>
			</entry>
			<entry name="BLK_DEV_IDECD">
				<label>Include IDE/ATAPI CDROM support</label>
				<help>If you have a CD-ROM drive using the ATAPI protocol, say Y. ATAPI is
a newer protocol used by IDE CD-ROM and TAPE drives, similar to the
SCSI protocol. Most new CD-ROM drives use ATAPI, including the
NEC-260, Mitsumi FX400, Sony 55E, and just about all non-SCSI
double(2X) or better speed drives.

If you say Y here, the CD-ROM drive will be identified at boot time
along with other IDE devices, as &quot;hdb&quot; or &quot;hdc&quot;, or something
similar (check the boot messages with dmesg). If this is your only
CD-ROM drive, you can say N to all other CD-ROM options, but be sure
to say Y or M to &quot;ISO 9660 CD-ROM file system support&quot;.

To compile this driver as a module, choose M here: the
module will be called ide-cd.</help>
			</entry>
			<entry name="BLK_DEV_IDECD_VERBOSE_ERRORS">
				<label>Verbose error logging for IDE/ATAPI CDROM driver&quot; if EXPERT</label>
				<help>Turn this on to have the driver print out the meanings of the
ATAPI error codes.  This will use up additional 8kB of kernel-space
memory, though.</help>
			</entry>
			<entry name="BLK_DEV_IDETAPE">
				<label>Include IDE/ATAPI TAPE support</label>
				<help>If you have an IDE tape drive using the ATAPI protocol, say Y.
ATAPI is a newer protocol used by IDE tape and CD-ROM drives,
similar to the SCSI protocol.  If you have an SCSI tape drive
however, you can say N here.

You should also say Y if you have an OnStream DI-30 tape drive; this
will not work with the SCSI protocol, until there is support for the
SC-30 and SC-50 versions.

If you say Y here, the tape drive will be identified at boot time
along with other IDE devices, as &quot;hdb&quot; or &quot;hdc&quot;, or something
similar, and will be mapped to a character device such as &quot;ht0&quot;
(check the boot messages with dmesg).  Be sure to consult the
&lt;file:drivers/ide/ide-tape.c&gt; and &lt;file:Documentation/ide/ide.txt&gt;
files for usage information.

To compile this driver as a module, choose M here: the
module will be called ide-tape.</help>
			</entry>
			<entry name="BLK_DEV_IDEACPI">
				<label>IDE ACPI support</label>
				<help>Implement ACPI support for generic IDE devices. On modern
machines ACPI support is required to properly handle ACPI S3 states.</help>
			</entry>
			<entry name="IDE_TASK_IOCTL">
				<label>IDE Taskfile Access</label>
				<help>This is a direct raw access to the media.  It is a complex but
elegant solution to test and validate the domain of the hardware and
perform below the driver data recovery if needed.  This is the most
basic form of media-forensics.

If you are unsure, say N here.</help>
			</entry>
			<entry name="IDE_PROC_FS">
				<label>legacy /proc/ide/ support</label>
				<help>This option enables support for the various files in
/proc/ide.  In Linux 2.6 this has been superseded by
files in sysfs but many legacy applications rely on this.

If unsure say Y.</help>
			</entry>
			<entry name="IDE_GENERIC">
				<label>generic/default IDE chipset support</label>
				<help>This is the generic IDE driver.  This driver attaches to the
fixed legacy ports (e.g. on PCs 0x1f0/0x170, 0x1e8/0x168 and
so on).  Please note that if this driver is built into the
kernel or loaded before other ATA (IDE or libata) drivers
and the controller is located at legacy ports, this driver
may grab those ports and thus can prevent the controller
specific driver from attaching.

Also, currently, IDE generic doesn't allow IRQ sharing
meaning that the IRQs it grabs won't be available to other
controllers sharing those IRQs which usually makes drivers
for those controllers fail.  Generally, it's not a good idea
to load IDE generic driver on modern systems.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_PLATFORM">
				<label>Platform driver for IDE interfaces</label>
				<help>This is the platform IDE driver, used mostly for Memory Mapped
IDE devices, like Compact Flashes running in True IDE mode.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_CMD640">
				<label>CMD640 chipset bugfix/support</label>
				<help>The CMD-Technologies CMD640 IDE chip is used on many common 486 and
Pentium motherboards, usually in combination with a &quot;Neptune&quot; or
&quot;SiS&quot; chipset. Unfortunately, it has a number of rather nasty
design flaws that can cause severe data corruption under many common
conditions. Say Y here to include code which tries to automatically
detect and correct the problems under Linux. This option also
enables access to the secondary IDE ports in some CMD640 based
systems.

This driver will work automatically in PCI based systems (most new
systems have PCI slots). But if your system uses VESA local bus
(VLB) instead of PCI, you must also supply a kernel boot parameter
to enable the CMD640 bugfix/support: &quot;cmd640.probe_vlb&quot;. (Try &quot;man
bootparam&quot; or see the documentation of your boot loader about how to
pass options to the kernel.)

The CMD640 chip is also used on add-in cards by Acculogic, and on
the &quot;CSA-6400E PCI to IDE controller&quot; that some people have. For
details, read &lt;file:Documentation/ide/ide.txt&gt;.</help>
			</entry>
			<entry name="BLK_DEV_CMD640_ENHANCED">
				<label>CMD640 enhanced support</label>
				<help>This option includes support for setting/autotuning PIO modes and
prefetch on CMD640 IDE interfaces.  For details, read
&lt;file:Documentation/ide/ide.txt&gt;. If you have a CMD640 IDE interface
and your BIOS does not already do this for you, then say Y here.
Otherwise say N.</help>
			</entry>
			<entry name="BLK_DEV_IDEPNP">
				<label>PNP EIDE support</label>
				<help>If you have a PnP (Plug and Play) compatible EIDE card and
would like the kernel to automatically detect and activate
it, say Y here.</help>
			</entry>
			<entry name="BLK_DEV_IDEDMA_SFF"/>
			<entry name="BLK_DEV_IDEPCI"/>
			<entry name="IDEPCI_PCIBUS_ORDER">
				<label>Probe IDE PCI devices in the PCI bus order (DEPRECATED)</label>
				<help>Probe IDE PCI devices in the order in which they appear on the
PCI bus (i.e. 00:1f.1 PCI device before 02:01.0 PCI device)
instead of the order in which IDE PCI host drivers are loaded.

Please note that this method of assuring stable naming of
IDE devices is unreliable and use other means for achieving
it (i.e. udev).

If in doubt, say N.</help>
			</entry>
			<entry name="BLK_DEV_OFFBOARD">
				<label>Boot off-board chipsets first support (DEPRECATED)</label>
				<help>Normally, IDE controllers built into the motherboard (on-board
controllers) are assigned to ide0 and ide1 while those on add-in PCI
cards (off-board controllers) are relegated to ide2 and ide3.
Answering Y here will allow you to reverse the situation, with
off-board controllers on ide0/1 and on-board controllers on ide2/3.
This can improve the usability of some boot managers such as lilo
when booting from a drive on an off-board controller.

Note that, if you do this, the order of the hd* devices will be
rearranged which may require modification of fstab and other files.

Please also note that this method of assuring stable naming of
IDE devices is unreliable and use other means for achieving it
(i.e. udev).

If in doubt, say N.</help>
			</entry>
			<entry name="BLK_DEV_GENERIC">
				<label>Generic PCI IDE Chipset Support</label>
				<help>This option provides generic support for various PCI IDE Chipsets
which otherwise might not be supported.</help>
			</entry>
			<entry name="BLK_DEV_OPTI621">
				<label>OPTi 82C621 chipset enhanced support</label>
				<help>This is a driver for the OPTi 82C621 EIDE controller.
Please read the comments at the top of &lt;file:drivers/ide/opti621.c&gt;.</help>
			</entry>
			<entry name="BLK_DEV_RZ1000">
				<label>RZ1000 chipset bugfix/support</label>
				<help>The PC-Technologies RZ1000 IDE chip is used on many common 486 and
Pentium motherboards, usually along with the &quot;Neptune&quot; chipset.
Unfortunately, it has a rather nasty design flaw that can cause
severe data corruption under many conditions. Say Y here to include
code which automatically detects and corrects the problem under
Linux. This may slow disk throughput by a few percent, but at least
things will operate 100% reliably.</help>
			</entry>
			<entry name="BLK_DEV_IDEDMA_PCI"/>
			<entry name="BLK_DEV_AEC62XX">
				<label>AEC62XX chipset support</label>
				<help>This driver adds explicit support for Acard AEC62xx (Artop ATP8xx)
IDE controllers. This allows the kernel to change PIO, DMA and UDMA
speeds and to configure the chip to optimum performance.</help>
			</entry>
			<entry name="BLK_DEV_ALI15X3">
				<label>ALI M15x3 chipset support</label>
				<help>This driver ensures (U)DMA support for ALI 1533, 1543 and 1543C
onboard chipsets.  It also tests for Simplex mode and enables
normal dual channel support.

Please read the comments at the top of
&lt;file:drivers/ide/alim15x3.c&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_AMD74XX">
				<label>AMD and nVidia IDE support</label>
				<help>This driver adds explicit support for AMD-7xx and AMD-8111 chips
and also for the nVidia nForce chip.  This allows the kernel to
change PIO, DMA and UDMA speeds and to configure the chip to
optimum performance.</help>
			</entry>
			<entry name="BLK_DEV_ATIIXP">
				<label>ATI IXP chipset IDE support</label>
				<help>This driver adds explicit support for ATI IXP chipset.
This allows the kernel to change PIO, DMA and UDMA speeds
and to configure the chip to optimum performance.

Say Y here if you have an ATI IXP chipset IDE controller.</help>
			</entry>
			<entry name="BLK_DEV_CMD64X">
				<label>CMD64{3|6|8|9} chipset support</label>
				<help>Say Y here if you have an IDE controller which uses any of these
chipsets: CMD643, CMD646, or CMD648.</help>
			</entry>
			<entry name="BLK_DEV_TRIFLEX">
				<label>Compaq Triflex IDE support</label>
				<help>Say Y here if you have a Compaq Triflex IDE controller, such
as those commonly found on Compaq Pentium-Pro systems</help>
			</entry>
			<entry name="BLK_DEV_CY82C693">
				<label>CY82C693 chipset support</label>
				<help>This driver adds detection and support for the CY82C693 chipset
used on Digital's PC-Alpha 164SX boards.</help>
			</entry>
			<entry name="BLK_DEV_CS5520">
				<label>Cyrix CS5510/20 MediaGX chipset support (VERY EXPERIMENTAL)</label>
				<help>Include support for PIO tuning and virtual DMA on the Cyrix MediaGX
5510/5520 chipset. This will automatically be detected and
configured if found.

It is safe to say Y to this question.</help>
			</entry>
			<entry name="BLK_DEV_CS5530">
				<label>Cyrix/National Semiconductor CS5530 MediaGX chipset support</label>
				<help>Include support for UDMA on the Cyrix MediaGX 5530 chipset. This
will automatically be detected and configured if found.

It is safe to say Y to this question.</help>
			</entry>
			<entry name="BLK_DEV_CS5535">
				<label>AMD CS5535 chipset support</label>
				<help>Include support for UDMA on the NSC/AMD CS5535 companion chipset.
This will automatically be detected and configured if found.

It is safe to say Y to this question.</help>
			</entry>
			<entry name="BLK_DEV_CS5536">
				<label>CS5536 chipset support</label>
				<help>This option enables support for the AMD CS5536
companion chip used with the Geode LX processor family.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_HPT366">
				<label>HPT36X/37X chipset support</label>
				<help>HPT366 is an Ultra DMA chipset for ATA-66.
HPT368 is an Ultra DMA chipset for ATA-66 RAID Based.
HPT370 is an Ultra DMA chipset for ATA-100.
HPT372 is an Ultra DMA chipset for ATA-100.
HPT374 is an Ultra DMA chipset for ATA-100.

This driver adds up to 4 more EIDE devices sharing a single
interrupt.

The HPT366 chipset in its current form is bootable. One solution
for this problem are special LILO commands for redirecting the
reference to device 0x80. The other solution is to say Y to &quot;Boot
off-board chipsets first support&quot; (CONFIG_BLK_DEV_OFFBOARD) unless
your mother board has the chipset natively mounted. Regardless one
should use the fore mentioned option and call at LILO.

This driver requires dynamic tuning of the chipset during the
ide-probe at boot. It is reported to support DVD II drives, by the
manufacturer.</help>
			</entry>
			<entry name="BLK_DEV_JMICRON">
				<label>JMicron JMB36x support</label>
				<help>Basic support for the JMicron ATA controllers. For full support
use the libata drivers.</help>
			</entry>
			<entry name="BLK_DEV_SC1200">
				<label>National SCx200 chipset support</label>
				<help>This driver adds support for the on-board IDE controller on the
National SCx200 series of embedded x86 &quot;Geode&quot; systems.</help>
			</entry>
			<entry name="BLK_DEV_PIIX">
				<label>Intel PIIX/ICH chipsets support</label>
				<help>This driver adds explicit support for Intel PIIX and ICH chips.
This allows the kernel to change PIO, DMA and UDMA speeds and to
configure the chip to optimum performance.</help>
			</entry>
			<entry name="BLK_DEV_IT8172">
				<label>IT8172 IDE support</label>
				<help>This driver adds support for the IDE controller on the
IT8172 System Controller.</help>
			</entry>
			<entry name="BLK_DEV_IT8213">
				<label>IT8213 IDE support</label>
				<help>This driver adds support for the ITE 8213 IDE controller.</help>
			</entry>
			<entry name="BLK_DEV_IT821X">
				<label>IT821X IDE support</label>
				<help>This driver adds support for the ITE 8211 IDE controller and the
IT 8212 IDE RAID controller in both RAID and pass-through mode.</help>
			</entry>
			<entry name="BLK_DEV_NS87415">
				<label>NS87415 chipset support</label>
				<help>This driver adds detection and support for the NS87415 chip
(used mainly on SPARC64 and PA-RISC machines).

Please read the comments at the top of &lt;file:drivers/ide/ns87415.c&gt;.</help>
			</entry>
			<entry name="BLK_DEV_PDC202XX_OLD">
				<label>PROMISE PDC202{46|62|65|67} support</label>
				<help>Promise Ultra33 or PDC20246
Promise Ultra66 or PDC20262
Promise Ultra100 or PDC20265/PDC20267/PDC20268

This driver adds up to 4 more EIDE devices sharing a single
interrupt. This add-on card is a bootable PCI UDMA controller. Since
multiple cards can be installed and there are BIOS ROM problems that
happen if the BIOS revisions of all installed cards (three-max) do
not match, the driver attempts to do dynamic tuning of the chipset
at boot-time for max-speed.  Ultra33 BIOS 1.25 or newer is required
for more than one card.

Please read the comments at the top of
&lt;file:drivers/ide/pdc202xx_old.c&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="BLK_DEV_PDC202XX_NEW">
				<label>PROMISE PDC202{68|69|70|71|75|76|77} support</label>
			</entry>
			<entry name="BLK_DEV_SVWKS">
				<label>ServerWorks OSB4/CSB5/CSB6 chipsets support</label>
				<help>This driver adds PIO/(U)DMA support for the ServerWorks OSB4/CSB5
chipsets.</help>
			</entry>
			<entry name="BLK_DEV_SGIIOC4">
				<label>Silicon Graphics IOC4 chipset ATA/ATAPI support</label>
				<help>This driver adds PIO &amp; MultiMode DMA-2 support for the SGI IOC4
chipset, which has one channel and can support two devices.
Please say Y here if you have an Altix System from SGI.</help>
			</entry>
			<entry name="BLK_DEV_SIIMAGE">
				<label>Silicon Image chipset support</label>
				<help>This driver adds PIO/(U)DMA support for the SI CMD680 and SII
3112 (Serial ATA) chips.</help>
			</entry>
			<entry name="BLK_DEV_SIS5513">
				<label>SiS5513 chipset support</label>
				<help>This driver ensures (U)DMA support for SIS5513 chipset family based
mainboards.

The following chipsets are supported:
ATA16:  SiS5511, SiS5513
ATA33:  SiS5591, SiS5597, SiS5598, SiS5600
ATA66:  SiS530, SiS540, SiS620, SiS630, SiS640
ATA100: SiS635, SiS645, SiS650, SiS730, SiS735, SiS740,
SiS745, SiS750

Please read the comments at the top of &lt;file:drivers/ide/sis5513.c&gt;.</help>
			</entry>
			<entry name="BLK_DEV_SL82C105">
				<label>Winbond SL82c105 support</label>
				<help>If you have a Winbond SL82c105 IDE controller, say Y here to enable
special configuration for this chip. This is common on various CHRP
motherboards, but could be used elsewhere. If in doubt, say Y.</help>
			</entry>
			<entry name="BLK_DEV_SLC90E66">
				<label>SLC90E66 chipset support</label>
				<help>This driver ensures (U)DMA support for Victory66 SouthBridges for
SMsC with Intel NorthBridges.  This is an Ultra66 based chipset.
The nice thing about it is that you can mix Ultra/DMA/PIO devices
and it will handle timing cycles.  Since this is an improved
look-a-like to the PIIX4 it should be a nice addition.

Please read the comments at the top of
&lt;file:drivers/ide/slc90e66.c&gt;.</help>
			</entry>
			<entry name="BLK_DEV_TRM290">
				<label>Tekram TRM290 chipset support</label>
				<help>This driver adds support for bus master DMA transfers
using the Tekram TRM290 PCI IDE chip. Volunteers are
needed for further tweaking and development.
Please read the comments at the top of &lt;file:drivers/ide/trm290.c&gt;.</help>
			</entry>
			<entry name="BLK_DEV_VIA82CXXX">
				<label>VIA82CXXX chipset support</label>
				<help>This driver adds explicit support for VIA BusMastering IDE chips.
This allows the kernel to change PIO, DMA and UDMA speeds and to
configure the chip to optimum performance.</help>
			</entry>
			<entry name="BLK_DEV_TC86C001">
				<label>Toshiba TC86C001 support</label>
				<help>This driver adds support for Toshiba TC86C001 GOKU-S chip.</help>
			</entry>
			<entry name="BLK_DEV_IDE_PMAC">
				<label>PowerMac on-board IDE support</label>
				<help>This driver provides support for the on-board IDE controller on
most of the recent Apple Power Macintoshes and PowerBooks.
If unsure, say Y.</help>
			</entry>
			<entry name="BLK_DEV_IDE_PMAC_ATA100FIRST">
				<label>Probe on-board ATA/100 (Kauai) first</label>
				<help>This option will cause the ATA/100 controller found in UniNorth2
based machines (Windtunnel PowerMac, Aluminium PowerBooks, ...)
to be probed before the ATA/66 and ATA/33 controllers. Without
these, those machine used to have the hard disk on hdc and the
CD-ROM on hda. This option changes this to more natural hda for
hard disk and hdc for CD-ROM.</help>
			</entry>
			<entry name="BLK_DEV_IDE_AU1XXX">
				<label>IDE for AMD Alchemy Au1200</label>
			</entry>
			<entry name="BLK_DEV_IDE_AU1XXX_PIO_DBDMA">
				<label>PIO+DbDMA IDE for AMD Alchemy Au1200</label>
			</entry>
			<entry name="BLK_DEV_IDE_AU1XXX_MDMA2_DBDMA">
				<label>MDMA2+DbDMA IDE for AMD Alchemy Au1200</label>
			</entry>
			<entry name="BLK_DEV_IDE_TX4938">
				<label>TX4938 internal IDE support</label>
			</entry>
			<entry name="BLK_DEV_IDE_TX4939">
				<label>TX4939 internal IDE support</label>
			</entry>
			<entry name="BLK_DEV_IDE_ICSIDE">
				<label>ICS IDE interface support</label>
				<help>On Acorn systems, say Y here if you wish to use the ICS IDE
interface card.  This is not required for ICS partition support.
If you are unsure, say N to this.</help>
			</entry>
			<entry name="BLK_DEV_IDEDMA_ICS">
				<label>ICS DMA support</label>
				<help>Say Y here if you want to add DMA (Direct Memory Access) support to
the ICS IDE driver.</help>
			</entry>
			<entry name="BLK_DEV_IDE_RAPIDE">
				<label>RapIDE interface support</label>
				<help>Say Y here if you want to support the Yellowstone RapIDE controller
manufactured for use with Acorn computers.</help>
			</entry>
			<entry name="BLK_DEV_GAYLE">
				<label>Amiga Gayle IDE interface support</label>
				<help>This is the IDE driver for the Amiga Gayle IDE interface. It supports
both the `A1200 style' and `A4000 style' of the Gayle IDE interface,
This includes on-board IDE interfaces on some Amiga models (A600,
A1200, A4000, and A4000T), and IDE interfaces on the Zorro expansion
bus (M-Tech E-Matrix 530 expansion card).

It also provides support for the so-called `IDE doublers' (made
by various manufacturers, e.g. Eyetech) that can be connected to
the on-board IDE interface of some Amiga models. Using such an IDE
doubler, you can connect up to four instead of two IDE devices to
the Amiga's on-board IDE interface. The feature is enabled at kernel
runtime using the &quot;gayle.doubler&quot; kernel boot parameter.

Say Y if you have an Amiga with a Gayle IDE interface and want to use
IDE devices (hard disks, CD-ROM drives, etc.) that are connected to
it.

Note that you also have to enable Zorro bus support if you want to
use Gayle IDE interfaces on the Zorro expansion bus.</help>
			</entry>
			<entry name="BLK_DEV_BUDDHA">
				<label>Buddha/Catweasel/X-Surf IDE interface support</label>
				<help>This is the IDE driver for the IDE interfaces on the Buddha, Catweasel
and X-Surf expansion boards.  It supports up to two interfaces on the
Buddha, three on the Catweasel and two on the X-Surf.

Say Y if you have a Buddha or Catweasel expansion board and want to
use IDE devices (hard disks, CD-ROM drives, etc.) that are connected
to one of its IDE interfaces.</help>
			</entry>
			<entry name="BLK_DEV_FALCON_IDE">
				<label>Falcon IDE interface support</label>
				<help>This is the IDE driver for the on-board IDE interface on the Atari
Falcon. Say Y if you have a Falcon and want to use IDE devices (hard
disks, CD-ROM drives, etc.) that are connected to the on-board IDE
interface.</help>
			</entry>
			<entry name="BLK_DEV_MAC_IDE">
				<label>Macintosh Quadra/Powerbook IDE interface support</label>
				<help>This is the IDE driver for the on-board IDE interface on some m68k
Macintosh models. It supports both the `Quadra style' (used in
Quadra/ Centris 630 and Performa 588 models) and `Powerbook style'
(used in the Powerbook 150 and 190 models) IDE interface.

Say Y if you have such an Macintosh model and want to use IDE
devices (hard disks, CD-ROM drives, etc.) that are connected to the
on-board IDE interface.</help>
			</entry>
			<entry name="BLK_DEV_Q40IDE">
				<label>Q40/Q60 IDE interface support</label>
				<help>Enable the on-board IDE controller in the Q40/Q60.  This should
normally be on; disable it only if you are running a custom hard
drive subsystem through an expansion card.</help>
			</entry>
			<entry name="BLK_DEV_PALMCHIP_BK3710">
				<label>Palmchip bk3710 IDE controller support</label>
				<help>Say Y here if you want to support the onchip IDE controller on the
TI DaVinci SoC</help>
			</entry>
			<entry name="BLK_DEV_4DRIVES">
				<label>Generic 4 drives/port support</label>
				<help>Certain older chipsets, including the Tekram 690CD, use a single set
of I/O ports at 0x1f0 to control up to four drives, instead of the
customary two drives per port. Support for this can be enabled at
runtime using the &quot;ide-4drives.probe&quot; kernel boot parameter if you
say Y here.</help>
			</entry>
			<entry name="BLK_DEV_ALI14XX">
				<label>ALI M14xx support</label>
				<help>This driver is enabled at runtime using the &quot;ali14xx.probe&quot; kernel
boot parameter.  It enables support for the secondary IDE interface
of the ALI M1439/1443/1445/1487/1489 chipsets, and permits faster
I/O speeds to be set as well.
See the files &lt;file:Documentation/ide/ide.txt&gt; and
&lt;file:drivers/ide/ali14xx.c&gt; for more info.</help>
			</entry>
			<entry name="BLK_DEV_DTC2278">
				<label>DTC-2278 support</label>
				<help>This driver is enabled at runtime using the &quot;dtc2278.probe&quot; kernel
boot parameter. It enables support for the secondary IDE interface
of the DTC-2278 card, and permits faster I/O speeds to be set as
well. See the &lt;file:Documentation/ide/ide.txt&gt; and
&lt;file:drivers/ide/dtc2278.c&gt; files for more info.</help>
			</entry>
			<entry name="BLK_DEV_HT6560B">
				<label>Holtek HT6560B support</label>
				<help>This driver is enabled at runtime using the &quot;ht6560b.probe&quot; kernel
boot parameter. It enables support for the secondary IDE interface
of the Holtek card, and permits faster I/O speeds to be set as well.
See the &lt;file:Documentation/ide/ide.txt&gt; and
&lt;file:drivers/ide/ht6560b.c&gt; files for more info.</help>
			</entry>
			<entry name="BLK_DEV_QD65XX">
				<label>QDI QD65xx support</label>
				<help>This driver is enabled at runtime using the &quot;qd65xx.probe&quot; kernel
boot parameter.  It permits faster I/O speeds to be set.  See the
&lt;file:Documentation/ide/ide.txt&gt; and &lt;file:drivers/ide/qd65xx.c&gt;
for more info.</help>
			</entry>
			<entry name="BLK_DEV_UMC8672">
				<label>UMC-8672 support</label>
				<help>This driver is enabled at runtime using the &quot;umc8672.probe&quot; kernel
boot parameter. It enables support for the secondary IDE interface
of the UMC-8672, and permits faster I/O speeds to be set as well.
See the files &lt;file:Documentation/ide/ide.txt&gt; and
&lt;file:drivers/ide/umc8672.c&gt; for more info.</help>
			</entry>
			<entry name="BLK_DEV_IDEDMA"/>
			<container name="SCSI_device_support">
				<label>SCSI device support</label>
				<entry name="SCSI_MOD"/>
				<entry name="RAID_ATTRS">
					<label>RAID Transport Class</label>
					<help>Provides RAID</help>
				</entry>
				<entry name="SCSI">
					<label>SCSI device support</label>
					<help>If you want to use a SCSI hard disk, SCSI tape drive, SCSI CD-ROM or
any other SCSI device under Linux, say Y and make sure that you know
the name of your SCSI host adapter (the card inside your computer
that &quot;speaks&quot; the SCSI protocol, also called SCSI controller),
because you will be asked for it.

You also need to say Y here if you have a device which speaks
the SCSI protocol.  Examples of this include the parallel port
version of the IOMEGA ZIP drive, USB storage devices, Fibre
Channel, and FireWire storage.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;.
The module will be called scsi_mod.

However, do not compile this as a module if your root file system
(the one containing the directory /) is located on a SCSI device.</help>
				</entry>
				<entry name="SCSI_DMA"/>
				<entry name="SCSI_NETLINK"/>
				<entry name="SCSI_MQ_DEFAULT">
					<label>SCSI: use blk-mq I/O path by default</label>
					<help>This option enables the new blk-mq based I/O path for SCSI
devices by default.  With the option the scsi_mod.use_blk_mq
module/boot option defaults to Y, without it to N, but it can
still be overridden either way.

If unsure say N.</help>
				</entry>
				<entry name="SCSI_PROC_FS">
					<label>legacy /proc/scsi/ support</label>
					<help>This option enables support for the various files in
/proc/scsi.  In Linux 2.6 this has been superseded by
files in sysfs but many legacy applications rely on this.

If unsure say Y.</help>
				</entry>
				<entry name="BLK_DEV_SD">
					<label>SCSI disk support</label>
					<help>If you want to use SCSI hard disks, Fibre Channel disks,
Serial ATA (SATA) or Parallel ATA (PATA) hard disks,
USB storage or the SCSI or parallel port version of
the IOMEGA ZIP drive, say Y and read the SCSI-HOWTO,
the Disk-HOWTO and the Multi-Disk-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. This is NOT for SCSI
CD-ROMs.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;.
The module will be called sd_mod.

Do not compile this driver as a module if your root file system
(the one containing the directory /) is located on a SCSI disk.
In this case, do not compile the driver for your SCSI host adapter
(below) as a module either.</help>
				</entry>
				<entry name="CHR_DEV_ST">
					<label>SCSI tape support</label>
					<help>If you want to use a SCSI tape drive under Linux, say Y and read the
SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, and
&lt;file:Documentation/scsi/st.txt&gt; in the kernel source.  This is NOT
for SCSI CD-ROMs.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;. The module will be called st.</help>
				</entry>
				<entry name="CHR_DEV_OSST">
					<label>SCSI OnStream SC-x0 tape support</label>
					<help>The OnStream SC-x0 SCSI tape drives cannot be driven by the
standard st driver, but instead need this special osst driver and
use the  /dev/osstX char device nodes (major 206).  Via usb-storage,
you may be able to drive the USB-x0 and DI-x0 drives as well.
Note that there is also a second generation of OnStream
tape drives (ADR-x0) that supports the standard SCSI-2 commands for
tapes (QIC-157) and can be driven by the standard driver st.
For more information, you may have a look at the SCSI-HOWTO
&lt;http://www.tldp.org/docs.html#howto&gt;  and
&lt;file:Documentation/scsi/osst.txt&gt;  in the kernel source.
More info on the OnStream driver may be found on
&lt;http://sourceforge.net/projects/osst/&gt;
Please also have a look at the standard st docu, as most of it
applies to osst as well.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;. The module will be called osst.</help>
				</entry>
				<entry name="BLK_DEV_SR">
					<label>SCSI CDROM support</label>
					<help>If you want to use a CD or DVD drive attached to your computer
by SCSI, FireWire, USB or ATAPI, say Y and read the SCSI-HOWTO
and the CDROM-HOWTO at &lt;http://www.tldp.org/docs.html#howto&gt;.

Make sure to say Y or M to &quot;ISO 9660 CD-ROM file system support&quot;.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;.
The module will be called sr_mod.</help>
				</entry>
				<entry name="BLK_DEV_SR_VENDOR">
					<label>Enable vendor-specific extensions (for SCSI CDROM)</label>
					<help>This enables the usage of vendor specific SCSI commands. This is
required to support multisession CDs with old NEC/TOSHIBA cdrom
drives (and HP Writers). If you have such a drive and get the first
session only, try saying Y here; everybody else says N.</help>
				</entry>
				<entry name="CHR_DEV_SG">
					<label>SCSI generic support</label>
					<help>If you want to use SCSI scanners, synthesizers or CD-writers or just
about anything having &quot;SCSI&quot; in its name other than hard disks,
CD-ROMs or tapes, say Y here. These won't be supported by the kernel
directly, so you need some additional software which knows how to
talk to these devices using the SCSI protocol:

For scanners, look at SANE (&lt;http://www.sane-project.org/&gt;). For CD
writer software look at Cdrtools
(&lt;http://cdrecord.berlios.de/private/cdrecord.html&gt;)
and for burning a &quot;disk at once&quot;: CDRDAO
(&lt;http://cdrdao.sourceforge.net/&gt;). Cdparanoia is a high
quality digital reader of audio CDs (&lt;http://www.xiph.org/paranoia/&gt;).
For other devices, it's possible that you'll have to write the
driver software yourself. Please read the file
&lt;file:Documentation/scsi/scsi-generic.txt&gt; for more information.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;. The module will be called sg.

If unsure, say N.</help>
				</entry>
				<entry name="CHR_DEV_SCH">
					<label>SCSI media changer support</label>
					<help>This is a driver for SCSI media changers.  Most common devices are
tape libraries and MOD/CDROM jukeboxes.  *Real* jukeboxes, you
don't need this for those tiny 6-slot cdrom changers.  Media
changers are listed as &quot;Type: Medium Changer&quot; in /proc/scsi/scsi.
If you have such hardware and want to use it with linux, say Y
here.  Check &lt;file:Documentation/scsi/scsi-changer.txt&gt; for details.

If you want to compile this as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt; and
&lt;file:Documentation/scsi/scsi.txt&gt;. The module will be called ch.o.
If unsure, say N.</help>
				</entry>
				<entry name="SCSI_ENCLOSURE">
					<label>SCSI Enclosure Support</label>
					<help>Enclosures are devices sitting on or in SCSI backplanes that
manage devices.  If you have a disk cage, the chances are that
it has an enclosure device.  Selecting this option will just allow
certain enclosure conditions to be reported and is not required.</help>
				</entry>
				<entry name="SCSI_CONSTANTS">
					<label>Verbose SCSI error reporting (kernel size += 36K)</label>
					<help>The error messages regarding your SCSI hardware will be easier to
understand if you say Y here; it will enlarge your kernel by about
36 KB. If in doubt, say Y.</help>
				</entry>
				<entry name="SCSI_LOGGING">
					<label>SCSI logging facility</label>
					<help>This turns on a logging facility that can be used to debug a number
of SCSI related problems.

If you say Y here, no logging output will appear by default, but you
can enable logging by saying Y to &quot;/proc file system support&quot; and
&quot;Sysctl support&quot; below and executing the command

echo &lt;bitmask&gt; &gt; /proc/sys/dev/scsi/logging_level

where &lt;bitmask&gt; is a four byte value representing the logging type
and logging level for each type of logging selected.

There are a number of logging types and you can find them in the
source at &lt;file:drivers/scsi/scsi_logging.h&gt;. The logging levels
are also described in that file and they determine the verbosity of
the logging for each logging type.

If you say N here, it may be harder to track down some types of SCSI
problems. If you say Y here your kernel will be somewhat larger, but
there should be no noticeable performance impact as long as you have
logging turned off.</help>
				</entry>
				<entry name="SCSI_SCAN_ASYNC">
					<label>Asynchronous SCSI scanning</label>
					<help>The SCSI subsystem can probe for devices while the rest of the
system continues booting, and even probe devices on different
busses in parallel, leading to a significant speed-up.

You can override this choice by specifying &quot;scsi_mod.scan=sync&quot;
or async on the kernel's command line.

Note that this setting also affects whether resuming from
system suspend will be performed asynchronously.</help>
				</entry>
				<container name="SCSI_Transports">
					<label>SCSI Transports</label>
					<entry name="SCSI_SPI_ATTRS">
						<label>Parallel SCSI (SPI) Transport Attributes</label>
						<help>If you wish to export transport-specific information about
each attached SCSI device to sysfs, say Y.  Otherwise, say N.</help>
					</entry>
					<entry name="SCSI_FC_ATTRS">
						<label>FiberChannel Transport Attributes</label>
						<help>If you wish to export transport-specific information about
each attached FiberChannel device to sysfs, say Y.
Otherwise, say N.</help>
					</entry>
					<entry name="SCSI_ISCSI_ATTRS">
						<label>iSCSI Transport Attributes</label>
						<help>If you wish to export transport-specific information about
each attached iSCSI device to sysfs, say Y.
Otherwise, say N.</help>
					</entry>
					<entry name="SCSI_SAS_ATTRS">
						<label>SAS Transport Attributes</label>
						<help>If you wish to export transport-specific information about
each attached SAS device to sysfs, say Y.</help>
					</entry>
					<entry name="SCSI_SAS_LIBSAS">
						<label>SAS Domain Transport Attributes</label>
						<help>This provides transport specific helpers for SAS drivers which
use the domain device construct (like the aic94xxx).</help>
					</entry>
					<entry name="SCSI_SAS_ATA">
						<label>ATA support for libsas (requires libata)</label>
						<help>Builds in ATA support into libsas.  Will necessitate
the loading of libata along with libsas.</help>
					</entry>
					<entry name="SCSI_SAS_HOST_SMP">
						<label>Support for SMP interpretation for SAS hosts</label>
						<help>Allows sas hosts to receive SMP frames.  Selecting this
option builds an SMP interpreter into libsas.  Say
N here if you want to save the few kb this consumes.
</help>
					</entry>
					<entry name="SCSI_SRP_ATTRS">
						<label>SRP Transport Attributes</label>
						<help>If you wish to export transport-specific information about
each attached SRP device to sysfs, say Y.</help>
					</entry>
				</container>
				<entry name="SCSI_LOWLEVEL">
					<label>SCSI low-level drivers</label>
				</entry>
				<entry name="ISCSI_TCP">
					<label>iSCSI Initiator over TCP/IP</label>
					<help>The iSCSI Driver provides a host with the ability to access storage
through an IP network. The driver uses the iSCSI protocol to transport
SCSI requests and responses over a TCP/IP network between the host
(the &quot;initiator&quot;) and &quot;targets&quot;.  Architecturally, the iSCSI driver
combines with the host's TCP/IP stack, network drivers, and Network
Interface Card (NIC) to provide the same functions as a SCSI or a
Fibre Channel (FC) adapter driver with a Host Bus Adapter (HBA).

To compile this driver as a module, choose M here: the
module will be called iscsi_tcp.

The userspace component needed to initialize the driver, documentation,
and sample configuration files can be found here:

http://open-iscsi.org</help>
				</entry>
				<entry name="ISCSI_BOOT_SYSFS">
					<label>iSCSI Boot Sysfs Interface</label>
					<help>This option enables support for exposing iSCSI boot information
via sysfs to userspace. If you wish to export this information,
say Y. Otherwise, say N.</help>
				</entry>
				<entry name="SCSI_CXGB3_ISCSI">
					<label>Chelsio T3 iSCSI support</label>
					<help>This driver supports iSCSI offload for the Chelsio T3 devices.
</help>
				</entry>
				<entry name="SCSI_CXGB4_ISCSI">
					<label>Chelsio T4 iSCSI support</label>
					<help>This driver supports iSCSI offload for the Chelsio T4 devices.
</help>
				</entry>
				<entry name="SCSI_BNX2_ISCSI">
					<label>QLogic NetXtreme II iSCSI support</label>
					<help>This driver supports iSCSI offload for the QLogic NetXtreme II
devices.
</help>
				</entry>
				<entry name="SCSI_BNX2X_FCOE">
					<label>QLogic FCoE offload support</label>
					<help>This driver supports FCoE offload for the QLogic devices.
</help>
				</entry>
				<entry name="BE2ISCSI">
					<label>Emulex 10Gbps iSCSI - BladeEngine 2</label>
					<help>This driver implements the iSCSI functionality for Emulex
10Gbps Storage adapter - BladeEngine 2.
</help>
				</entry>
				<entry name="CXLFLASH">
					<label>Support for IBM CAPI Flash</label>
					<help>Allows CAPI Accelerated IO to Flash
If unsure, say N.
</help>
				</entry>
				<entry name="SGIWD93_SCSI">
					<label>SGI WD93C93 SCSI Driver</label>
					<help>If you have a Western Digital WD93 SCSI controller on
an SGI MIPS system, say Y.  Otherwise, say N.</help>
				</entry>
				<entry name="BLK_DEV_3W_XXXX_RAID">
					<label>3ware 5/6/7/8xxx ATA-RAID support</label>
					<help>3ware is the only hardware ATA-Raid product in Linux to date.
This card is 2,4, or 8 channel master mode support only.
SCSI support required!!!

&lt;http://www.3ware.com/&gt;

Please read the comments at the top of
&lt;file:drivers/scsi/3w-xxxx.c&gt;.</help>
				</entry>
				<entry name="SCSI_HPSA">
					<label>HP Smart Array SCSI driver</label>
					<help>This driver supports HP Smart Array Controllers (circa 2009).
It is a SCSI alternative to the cciss driver, which is a block
driver.  Anyone wishing to use HP Smart Array controllers who
would prefer the devices be presented to linux as SCSI devices,
rather than as generic block devices should say Y here.</help>
				</entry>
				<entry name="SCSI_3W_9XXX">
					<label>3ware 9xxx SATA-RAID support</label>
					<help>This driver supports the 9000 series 3ware SATA-RAID cards.

&lt;http://www.amcc.com&gt;

Please read the comments at the top of
&lt;file:drivers/scsi/3w-9xxx.c&gt;.</help>
				</entry>
				<entry name="SCSI_3W_SAS">
					<label>3ware 97xx SAS/SATA-RAID support</label>
					<help>This driver supports the LSI 3ware 9750 6Gb/s SAS/SATA-RAID cards.

&lt;http://www.lsi.com&gt;

Please read the comments at the top of
&lt;file:drivers/scsi/3w-sas.c&gt;.</help>
				</entry>
				<entry name="SCSI_7000FASST">
					<label>7000FASST SCSI support</label>
					<help>This driver supports the Western Digital 7000 SCSI host adapter
family.  Some information is in the source:
&lt;file:drivers/scsi/wd7000.c&gt;.

To compile this driver as a module, choose M here: the
module will be called wd7000.</help>
				</entry>
				<entry name="SCSI_ACARD">
					<label>ACARD SCSI support</label>
					<help>This driver supports the ACARD SCSI host adapter.
Support Chip &lt;ATP870 ATP876 ATP880 ATP885&gt;
To compile this driver as a module, choose M here: the
module will be called atp870u.</help>
				</entry>
				<entry name="SCSI_AHA152X">
					<label>Adaptec AHA152X/2825 support</label>
					<help>This is a driver for the AHA-1510, AHA-1520, AHA-1522, and AHA-2825
SCSI host adapters. It also works for the AVA-1505, but the IRQ etc.
must be manually specified in this case.

It is explained in section 3.3 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. You might also want to
read the file &lt;file:Documentation/scsi/aha152x.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called aha152x.</help>
				</entry>
				<entry name="SCSI_AHA1542">
					<label>Adaptec AHA1542 support</label>
					<help>This is support for a SCSI host adapter.  It is explained in section
3.4 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  Note that Trantor was
purchased by Adaptec, and some former Trantor products are being
sold under the Adaptec name.  If it doesn't work out of the box, you
may have to change some settings in &lt;file:drivers/scsi/aha1542.h&gt;.

To compile this driver as a module, choose M here: the
module will be called aha1542.</help>
				</entry>
				<entry name="SCSI_AHA1740">
					<label>Adaptec AHA1740 support</label>
					<help>This is support for a SCSI host adapter.  It is explained in section
3.5 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/aha1740.h&gt;.

To compile this driver as a module, choose M here: the
module will be called aha1740.</help>
				</entry>
				<entry name="SCSI_AACRAID">
					<label>Adaptec AACRAID support</label>
					<help>This driver supports a variety of Dell, HP, Adaptec, IBM and
ICP storage products. For a list of supported products, refer
to &lt;file:Documentation/scsi/aacraid.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called aacraid.</help>
				</entry>
				<entry name="SCSI_AIC7XXX">
					<label>Adaptec AIC7xxx Fast -&gt; U160 support (New Driver)</label>
					<help>This driver supports all of Adaptec's Fast through Ultra 160 PCI
based SCSI controllers as well as the aic7770 based EISA and VLB
SCSI controllers (the 274x and 284x series).  For AAA and ARO based
configurations, only SCSI functionality is provided.

To compile this driver as a module, choose M here: the
module will be called aic7xxx.</help>
				</entry>
				<entry name="AIC7XXX_CMDS_PER_DEVICE">
					<label>Maximum number of TCQ commands per device</label>
					<help>Specify the number of commands you would like to allocate per SCSI
device when Tagged Command Queueing (TCQ) is enabled on that device.

This is an upper bound value for the number of tagged transactions
to be used for any device.  The aic7xxx driver will automatically
vary this number based on device behavior.  For devices with a
fixed maximum, the driver will eventually lock to this maximum
and display a console message indicating this value.

Due to resource allocation issues in the Linux SCSI mid-layer, using
a high number of commands per device may result in memory allocation
failures when many devices are attached to the system.  For this reason,
the default is set to 32.  Higher values may result in higher performance
on some devices.  The upper bound is 253.  0 disables tagged queueing.

Per device tag depth can be controlled via the kernel command line
&quot;tag_info&quot; option.  See Documentation/scsi/aic7xxx.txt for details.</help>
				</entry>
				<entry name="AIC7XXX_RESET_DELAY_MS">
					<label>Initial bus reset delay in milli-seconds</label>
					<help>The number of milliseconds to delay after an initial bus reset.
The bus settle delay following all error recovery actions is
dictated by the SCSI layer and is not affected by this value.

Default: 5000 (5 seconds)</help>
				</entry>
				<entry name="AIC7XXX_BUILD_FIRMWARE">
					<label>Build Adapter Firmware with Kernel Build</label>
					<help>This option should only be enabled if you are modifying the firmware
source to the aic7xxx driver and wish to have the generated firmware
include files updated during a normal kernel build.  The assembler
for the firmware requires lex and yacc or their equivalents, as well
as the db v1 library.  You may have to install additional packages
or modify the assembler Makefile or the files it includes if your
build environment is different than that of the author.</help>
				</entry>
				<entry name="AIC7XXX_DEBUG_ENABLE">
					<label>Compile in Debugging Code</label>
					<help>Compile in aic7xxx debugging code that can be useful in diagnosing
driver errors.</help>
				</entry>
				<entry name="AIC7XXX_DEBUG_MASK">
					<label>Debug code enable mask (2047 for all debugging)</label>
					<help>Bit mask of debug options that is only valid if the
CONFIG_AIC7XXX_DEBUG_ENABLE option is enabled.  The bits in this mask
are defined in the drivers/scsi/aic7xxx/aic7xxx.h - search for the
variable ahc_debug in that file to find them.</help>
				</entry>
				<entry name="AIC7XXX_REG_PRETTY_PRINT">
					<label>Decode registers during diagnostics</label>
					<help>Compile in register value tables for the output of expanded register
contents in diagnostics.  This make it much easier to understand debug
output without having to refer to a data book and/or the aic7xxx.reg
file.
</help>
				</entry>
				<entry name="SCSI_AIC79XX">
					<label>Adaptec AIC79xx U320 support</label>
					<help>This driver supports all of Adaptec's Ultra 320 PCI-X
based SCSI controllers.</help>
				</entry>
				<entry name="AIC79XX_CMDS_PER_DEVICE">
					<label>Maximum number of TCQ commands per device</label>
					<help>Specify the number of commands you would like to allocate per SCSI
device when Tagged Command Queueing (TCQ) is enabled on that device.

This is an upper bound value for the number of tagged transactions
to be used for any device.  The aic7xxx driver will automatically
vary this number based on device behavior.  For devices with a
fixed maximum, the driver will eventually lock to this maximum
and display a console message indicating this value.

Due to resource allocation issues in the Linux SCSI mid-layer, using
a high number of commands per device may result in memory allocation
failures when many devices are attached to the system.  For this reason,
the default is set to 32.  Higher values may result in higher performance
on some devices.  The upper bound is 253.  0 disables tagged queueing.

Per device tag depth can be controlled via the kernel command line
&quot;tag_info&quot; option.  See Documentation/scsi/aic79xx.txt for details.</help>
				</entry>
				<entry name="AIC79XX_RESET_DELAY_MS">
					<label>Initial bus reset delay in milli-seconds</label>
					<help>The number of milliseconds to delay after an initial bus reset.
The bus settle delay following all error recovery actions is
dictated by the SCSI layer and is not affected by this value.

Default: 5000 (5 seconds)</help>
				</entry>
				<entry name="AIC79XX_BUILD_FIRMWARE">
					<label>Build Adapter Firmware with Kernel Build</label>
					<help>This option should only be enabled if you are modifying the firmware
source to the aic79xx driver and wish to have the generated firmware
include files updated during a normal kernel build.  The assembler
for the firmware requires lex and yacc or their equivalents, as well
as the db v1 library.  You may have to install additional packages
or modify the assembler Makefile or the files it includes if your
build environment is different than that of the author.</help>
				</entry>
				<entry name="AIC79XX_DEBUG_ENABLE">
					<label>Compile in Debugging Code</label>
					<help>Compile in aic79xx debugging code that can be useful in diagnosing
driver errors.</help>
				</entry>
				<entry name="AIC79XX_DEBUG_MASK">
					<label>Debug code enable mask (16383 for all debugging)</label>
					<help>Bit mask of debug options that is only valid if the
CONFIG_AIC79XX_DEBUG_ENABLE option is enabled.  The bits in this mask
are defined in the drivers/scsi/aic7xxx/aic79xx.h - search for the
variable ahd_debug in that file to find them.</help>
				</entry>
				<entry name="AIC79XX_REG_PRETTY_PRINT">
					<label>Decode registers during diagnostics</label>
					<help>Compile in register value tables for the output of expanded register
contents in diagnostics.  This make it much easier to understand debug
output without having to refer to a data book and/or the aic7xxx.reg
file.
</help>
				</entry>
				<entry name="SCSI_AIC94XX">
					<label>Adaptec AIC94xx SAS/SATA support</label>
					<help>This driver supports Adaptec's SAS/SATA 3Gb/s 64 bit PCI-X
AIC94xx chip based host adapters.</help>
				</entry>
				<entry name="AIC94XX_DEBUG">
					<label>Compile in debug mode</label>
					<help>Compiles the aic94xx driver in debug mode.  In debug mode,
the driver prints some messages to the console.
</help>
				</entry>
				<entry name="SCSI_HISI_SAS">
					<label>HiSilicon SAS</label>
					<help>This driver supports HiSilicon's SAS HBA
</help>
				</entry>
				<entry name="SCSI_MVSAS">
					<label>Marvell 88SE64XX/88SE94XX SAS/SATA support</label>
					<help>This driver supports Marvell's SAS/SATA 3Gb/s PCI-E 88SE64XX and 6Gb/s
PCI-E 88SE94XX chip based host adapters.</help>
				</entry>
				<entry name="SCSI_MVSAS_DEBUG">
					<label>Compile in debug mode</label>
					<help>Compiles the 88SE64XX/88SE94XX driver in debug mode.  In debug mode,
the driver prints some messages to the console.</help>
				</entry>
				<entry name="SCSI_MVSAS_TASKLET">
					<label>Support for interrupt tasklet</label>
					<help>Compiles the 88SE64xx/88SE94xx driver in interrupt tasklet mode.In this mode,
the interrupt will schedule a tasklet.
</help>
				</entry>
				<entry name="SCSI_MVUMI">
					<label>Marvell UMI driver</label>
					<help>Module for Marvell Universal Message Interface(UMI) driver

To compile this driver as a module, choose M here: the
module will be called mvumi.</help>
				</entry>
				<entry name="SCSI_DPT_I2O">
					<label>Adaptec I2O RAID support </label>
					<help>This driver supports all of Adaptec's I2O based RAID controllers as
well as the DPT SmartRaid V cards.  This is an Adaptec maintained
driver by Deanna Bonds.  See &lt;file:Documentation/scsi/dpti.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called dpt_i2o.</help>
				</entry>
				<entry name="SCSI_ADVANSYS">
					<label>AdvanSys SCSI support</label>
					<help>This is a driver for all SCSI host adapters manufactured by
AdvanSys. It is documented in the kernel source in
&lt;file:drivers/scsi/advansys.c&gt;.

To compile this driver as a module, choose M here: the
module will be called advansys.</help>
				</entry>
				<entry name="SCSI_IN2000">
					<label>Always IN2000 SCSI support</label>
					<help>This is support for an ISA bus SCSI host adapter.  You'll find more
information in &lt;file:Documentation/scsi/in2000.txt&gt;. If it doesn't work
out of the box, you may have to change the jumpers for IRQ or
address selection.

To compile this driver as a module, choose M here: the
module will be called in2000.</help>
				</entry>
				<entry name="SCSI_ARCMSR">
					<label>ARECA (ARC11xx/12xx/13xx/16xx) SATA/SAS RAID Host Adapter</label>
					<help>This driver supports all of ARECA's SATA/SAS RAID controller cards.
This is an ARECA-maintained driver by Erich Chen.
If you have any problems, please mail to: &lt;erich@areca.com.tw&gt;.
Areca supports Linux RAID config tools.
Please link &lt;http://www.areca.com.tw&gt;

To compile this driver as a module, choose M here: the
module will be called arcmsr (modprobe arcmsr).</help>
				</entry>
				<entry name="SCSI_ESAS2R">
					<label>ATTO Technology's ExpressSAS RAID adapter driver</label>
					<help>This driver supports the ATTO ExpressSAS R6xx SAS/SATA RAID controllers.
</help>
				</entry>
				<entry name="MEGARAID_NEWGEN">
					<label>LSI Logic New Generation RAID Device Drivers</label>
					<help>LSI Logic RAID Device Drivers</help>
				</entry>
				<entry name="MEGARAID_MM">
					<label>LSI Logic Management Module (New Driver)</label>
					<help>Management Module provides ioctl, sysfs support for LSI Logic
RAID controllers.
To compile this driver as a module, choose M here: the
module will be called megaraid_mm</help>
				</entry>
				<entry name="MEGARAID_MAILBOX">
					<label>LSI Logic MegaRAID Driver (New Driver)</label>
					<help>List of supported controllers

OEM	Product Name		VID :DID :SVID:SSID
---	------------		---- ---- ---- ----
Dell PERC3/QC			101E:1960:1028:0471
Dell PERC3/DC			101E:1960:1028:0493
Dell PERC3/SC			101E:1960:1028:0475
Dell PERC3/Di			1028:000E:1028:0123
Dell PERC4/SC			1000:1960:1028:0520
Dell PERC4/DC			1000:1960:1028:0518
Dell PERC4/QC			1000:0407:1028:0531
Dell PERC4/Di			1028:000F:1028:014A
Dell PERC 4e/Si			1028:0013:1028:016c
Dell PERC 4e/Di			1028:0013:1028:016d
Dell PERC 4e/Di			1028:0013:1028:016e
Dell PERC 4e/Di			1028:0013:1028:016f
Dell PERC 4e/Di			1028:0013:1028:0170
Dell PERC 4e/DC			1000:0408:1028:0002
Dell PERC 4e/SC			1000:0408:1028:0001
LSI MegaRAID SCSI 320-0		1000:1960:1000:A520
LSI MegaRAID SCSI 320-1		1000:1960:1000:0520
LSI MegaRAID SCSI 320-2		1000:1960:1000:0518
LSI MegaRAID SCSI 320-0X	1000:0407:1000:0530
LSI MegaRAID SCSI 320-2X	1000:0407:1000:0532
LSI MegaRAID SCSI 320-4X	1000:0407:1000:0531
LSI MegaRAID SCSI 320-1E	1000:0408:1000:0001
LSI MegaRAID SCSI 320-2E	1000:0408:1000:0002
LSI MegaRAID SATA 150-4		1000:1960:1000:4523
LSI MegaRAID SATA 150-6		1000:1960:1000:0523
LSI MegaRAID SATA 300-4X	1000:0409:1000:3004
LSI MegaRAID SATA 300-8X	1000:0409:1000:3008
INTEL RAID Controller SRCU42X	1000:0407:8086:0532
INTEL RAID Controller SRCS16	1000:1960:8086:0523
INTEL RAID Controller SRCU42E	1000:0408:8086:0002
INTEL RAID Controller SRCZCRX	1000:0407:8086:0530
INTEL RAID Controller SRCS28X	1000:0409:8086:3008
INTEL RAID Controller SROMBU42E	1000:0408:8086:3431
INTEL RAID Controller SROMBU42E	1000:0408:8086:3499
INTEL RAID Controller SRCU51L	1000:1960:8086:0520
FSC MegaRAID PCI Express ROMB	1000:0408:1734:1065
ACER MegaRAID ROMB-2E		1000:0408:1025:004D
NEC MegaRAID PCI Express ROMB	1000:0408:1033:8287

To compile this driver as a module, choose M here: the
module will be called megaraid_mbox</help>
				</entry>
				<entry name="MEGARAID_LEGACY">
					<label>LSI Logic Legacy MegaRAID Driver</label>
					<help>This driver supports the LSI MegaRAID 418, 428, 438, 466, 762, 490
and 467 SCSI host adapters. This driver also support the all U320
RAID controllers

To compile this driver as a module, choose M here: the
module will be called megaraid</help>
				</entry>
				<entry name="MEGARAID_SAS">
					<label>LSI Logic MegaRAID SAS RAID Module</label>
					<help>Module for LSI Logic's SAS based RAID controllers.
To compile this driver as a module, choose 'm' here.
Module will be called megaraid_sas

</help>
				</entry>
				<entry name="SCSI_MPT3SAS">
					<label>LSI MPT Fusion SAS 3.0 &amp; SAS 2.0 Device Driver</label>
					<help>This driver supports PCI-Express SAS 12Gb/s Host Adapters.</help>
				</entry>
				<entry name="SCSI_MPT2SAS_MAX_SGE">
					<label>LSI MPT Fusion SAS 2.0 Max number of SG Entries (16 - 256)</label>
					<help>This option allows you to specify the maximum number of scatter-
gather entries per I/O. The driver default is 128, which matches
MAX_PHYS_SEGMENTS in most kernels.  However in SuSE kernels this
can be 256. However, it may decreased down to 16.  Decreasing this
parameter will reduce memory requirements on a per controller instance.</help>
				</entry>
				<entry name="SCSI_MPT3SAS_MAX_SGE">
					<label>LSI MPT Fusion SAS 3.0 Max number of SG Entries (16 - 256)</label>
					<help>This option allows you to specify the maximum number of scatter-
gather entries per I/O. The driver default is 128, which matches
MAX_PHYS_SEGMENTS in most kernels.  However in SuSE kernels this
can be 256. However, it may decreased down to 16.  Decreasing this
parameter will reduce memory requirements on a per controller instance.</help>
				</entry>
				<entry name="SCSI_MPT2SAS">
					<label>Legacy MPT2SAS config option</label>
					<help>Dummy config option for backwards compatiblity: configure the MPT3SAS
driver instead.
</help>
				</entry>
				<entry name="SCSI_UFSHCD">
					<label>Universal Flash Storage Controller Driver Core</label>
					<help>This selects the support for UFS devices in Linux, say Y and make
sure that you know the name of your UFS host adapter (the card
inside your computer that &quot;speaks&quot; the UFS protocol, also
called UFS Host Controller), because you will be asked for it.
The module will be called ufshcd.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/ufs.txt&gt;.
However, do not compile this as a module if your root file system
(the one containing the directory /) is located on a UFS device.</help>
				</entry>
				<entry name="SCSI_UFSHCD_PCI">
					<label>PCI bus based UFS Controller support</label>
					<help>This selects the PCI UFS Host Controller Interface. Select this if
you have UFS Host Controller with PCI Interface.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
				</entry>
				<entry name="SCSI_UFS_DWC_TC_PCI">
					<label>DesignWare pci support using a G210 Test Chip</label>
					<help>Synopsys Test Chip is a PHY for prototyping purposes.

If unsure, say N.</help>
				</entry>
				<entry name="SCSI_UFSHCD_PLATFORM">
					<label>Platform bus based UFS Controller support</label>
					<help>This selects the UFS host controller support. Select this if
you have an UFS controller on Platform bus.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
				</entry>
				<entry name="SCSI_UFS_DWC_TC_PLATFORM">
					<label>DesignWare platform support using a G210 Test Chip</label>
					<help>Synopsys Test Chip is a PHY for prototyping purposes.

If unsure, say N.</help>
				</entry>
				<entry name="SCSI_UFS_QCOM">
					<label>QCOM specific hooks to UFS controller platform driver</label>
					<help>This selects the QCOM specific additions to UFSHCD platform driver.
UFS host on QCOM needs some vendor specific configuration before
accessing the hardware which includes PHY configuration and vendor
specific registers.

Select this if you have UFS controller on QCOM chipset.
If unsure, say N.
</help>
				</entry>
				<entry name="SCSI_HPTIOP">
					<label>HighPoint RocketRAID 3xxx/4xxx Controller support</label>
					<help>This option enables support for HighPoint RocketRAID 3xxx/4xxx
controllers.

To compile this driver as a module, choose M here; the module
will be called hptiop. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_BUSLOGIC">
					<label>BusLogic SCSI support</label>
					<help>This is support for BusLogic MultiMaster and FlashPoint SCSI Host
Adapters. Consult the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, and the files
&lt;file:Documentation/scsi/BusLogic.txt&gt; and
&lt;file:Documentation/scsi/FlashPoint.txt&gt; for more information.
Note that support for FlashPoint is only available for 32-bit
x86 configurations.

To compile this driver as a module, choose M here: the
module will be called BusLogic.</help>
				</entry>
				<entry name="SCSI_FLASHPOINT">
					<label>FlashPoint support</label>
					<help>This option allows you to add FlashPoint support to the
BusLogic SCSI driver. The FlashPoint SCCB Manager code is
substantial, so users of MultiMaster Host Adapters may not
wish to include it.</help>
				</entry>
				<entry name="VMWARE_PVSCSI">
					<label>VMware PVSCSI driver support</label>
					<help>This driver supports VMware's para virtualized SCSI HBA.
To compile this driver as a module, choose M here: the
module will be called vmw_pvscsi.</help>
				</entry>
				<entry name="XEN_SCSI_FRONTEND">
					<label>XEN SCSI frontend driver</label>
					<help>The XEN SCSI frontend driver allows the kernel to access SCSI Devices
within another guest OS (usually Dom0).
Only needed if the kernel is running in a XEN guest and generic
SCSI access to a device is needed.</help>
				</entry>
				<entry name="HYPERV_STORAGE">
					<label>Microsoft Hyper-V virtual storage driver</label>
					<help>Select this option to enable the Hyper-V virtual storage driver.</help>
				</entry>
				<entry name="LIBFC">
					<label>LibFC module</label>
					<help>Fibre Channel library module</help>
				</entry>
				<entry name="LIBFCOE">
					<label>LibFCoE module</label>
					<help>Library for Fibre Channel over Ethernet module</help>
				</entry>
				<entry name="FCOE">
					<label>FCoE module</label>
					<help>Fibre Channel over Ethernet module</help>
				</entry>
				<entry name="FCOE_FNIC">
					<label>Cisco FNIC Driver</label>
					<help>This is support for the Cisco PCI-Express FCoE HBA.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;.
The module will be called fnic.</help>
				</entry>
				<entry name="SCSI_SNIC">
					<label>Cisco SNIC Driver</label>
					<help>This is support for the Cisco PCI-Express SCSI HBA.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/scsi/scsi.txt&gt;.
The module will be called snic.</help>
				</entry>
				<entry name="SCSI_SNIC_DEBUG_FS">
					<label>Cisco SNIC Driver Debugfs Support</label>
					<help>This enables to list debugging information from SNIC Driver
available via debugfs file system</help>
				</entry>
				<entry name="SCSI_DMX3191D">
					<label>DMX3191D SCSI support</label>
					<help>This is support for Domex DMX3191D SCSI Host Adapters.

To compile this driver as a module, choose M here: the
module will be called dmx3191d.</help>
				</entry>
				<entry name="SCSI_DTC3280">
					<label>DTC3180/3280 SCSI support</label>
					<help>This is support for DTC 3180/3280 SCSI Host Adapters.  Please read
the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, and the file
&lt;file:Documentation/scsi/dtc3x80.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called dtc.</help>
				</entry>
				<entry name="SCSI_EATA">
					<label>EATA ISA/EISA/PCI (DPT and generic EATA/DMA-compliant boards) support</label>
					<help>This driver supports all EATA/DMA-compliant SCSI host adapters.  DPT
ISA and all EISA I/O addresses are probed looking for the &quot;EATA&quot;
signature. The addresses of all the PCI SCSI controllers reported
by the PCI subsystem are probed as well.

You want to read the start of &lt;file:drivers/scsi/eata.c&gt; and the
SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called eata.</help>
				</entry>
				<entry name="SCSI_EATA_TAGGED_QUEUE">
					<label>enable tagged command queueing</label>
					<help>This is a feature of SCSI-2 which improves performance: the host
adapter can send several SCSI commands to a device's queue even if
previous commands haven't finished yet.
This is equivalent to the &quot;eata=tc:y&quot; boot option.</help>
				</entry>
				<entry name="SCSI_EATA_LINKED_COMMANDS">
					<label>enable elevator sorting</label>
					<help>This option enables elevator sorting for all probed SCSI disks and
CD-ROMs. It definitely reduces the average seek distance when doing
random seeks, but this does not necessarily result in a noticeable
performance improvement: your mileage may vary...
This is equivalent to the &quot;eata=lc:y&quot; boot option.</help>
				</entry>
				<entry name="SCSI_EATA_MAX_TAGS">
					<label>maximum number of queued commands</label>
					<help>This specifies how many SCSI commands can be maximally queued for
each probed SCSI device. You should reduce the default value of 16
only if you have disks with buggy or limited tagged command support.
Minimum is 2 and maximum is 62. This value is also the window size
used by the elevator sorting option above. The effective value used
by the driver for each probed SCSI device is reported at boot time.
This is equivalent to the &quot;eata=mq:8&quot; boot option.</help>
				</entry>
				<entry name="SCSI_EATA_PIO">
					<label>EATA-PIO (old DPT PM2001, PM2012A) support</label>
					<help>This driver supports all EATA-PIO protocol compliant SCSI Host
Adapters like the DPT PM2001 and the PM2012A.  EATA-DMA compliant
host adapters could also use this driver but are discouraged from
doing so, since this driver only supports hard disks and lacks
numerous features.  You might want to have a look at the SCSI-HOWTO,
available from &lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called eata_pio.</help>
				</entry>
				<entry name="SCSI_FUTURE_DOMAIN">
					<label>Future Domain 16xx SCSI/AHA-2920A support</label>
					<help>This is support for Future Domain's 16-bit SCSI host adapters
(TMC-1660/1680, TMC-1650/1670, TMC-3260, TMC-1610M/MER/MEX) and
other adapters based on the Future Domain chipsets (Quantum
ISA-200S, ISA-250MG; Adaptec AHA-2920A; and at least one IBM board).
It is explained in section 3.7 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

NOTE: Newer Adaptec AHA-2920C boards use the Adaptec AIC-7850 chip
and should use the aic7xxx driver (&quot;Adaptec AIC7xxx chipset SCSI
controller support&quot;). This Future Domain driver works with the older
Adaptec AHA-2920A boards with a Future Domain chip on them.

To compile this driver as a module, choose M here: the
module will be called fdomain.</help>
				</entry>
				<entry name="SCSI_GDTH">
					<label>Intel/ICP (former GDT SCSI Disk Array) RAID Controller support</label>
					<help>Formerly called GDT SCSI Disk Array Controller Support.

This is a driver for RAID/SCSI Disk Array Controllers (EISA/ISA/PCI)
manufactured by Intel Corporation/ICP vortex GmbH. It is documented
in the kernel source in &lt;file:drivers/scsi/gdth.c&gt; and
&lt;file:drivers/scsi/gdth.h&gt;.

To compile this driver as a module, choose M here: the
module will be called gdth.</help>
				</entry>
				<entry name="SCSI_ISCI">
					<label>Intel(R) C600 Series Chipset SAS Controller</label>
					<help>This driver supports the 6Gb/s SAS capabilities of the storage
control unit found in the Intel(R) C600 series chipset.</help>
				</entry>
				<entry name="SCSI_GENERIC_NCR5380">
					<label>Generic NCR5380/53c400 SCSI PIO support</label>
					<help>This is a driver for the old NCR 53c80 series of SCSI controllers
on boards using PIO. Most boards such as the Trantor T130 fit this
category, along with a large number of ISA 8bit controllers shipped
for free with SCSI scanners. If you have a PAS16, T128 or DMX3191
you should select the specific driver for that card rather than
generic 5380 support.

It is explained in section 3.8 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/g_NCR5380.h&gt;.

To compile this driver as a module, choose M here: the
module will be called g_NCR5380.</help>
				</entry>
				<entry name="SCSI_GENERIC_NCR5380_MMIO">
					<label>Generic NCR5380/53c400 SCSI MMIO support</label>
					<help>This is a driver for the old NCR 53c80 series of SCSI controllers
on boards using memory mapped I/O.
It is explained in section 3.8 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/g_NCR5380.h&gt;.

To compile this driver as a module, choose M here: the
module will be called g_NCR5380_mmio.</help>
				</entry>
				<entry name="SCSI_IPS">
					<label>IBM ServeRAID support</label>
					<help>This is support for the IBM ServeRAID hardware RAID controllers.
See &lt;http://www.developer.ibm.com/welcome/netfinity/serveraid.html&gt;
and &lt;http://www-947.ibm.com/support/entry/portal/docdisplay?brand=5000008&amp;lndocid=SERV-RAID&gt;
for more information.  If this driver does not work correctly
without modification please contact the author by email at
&lt;ipslinux@adaptec.com&gt;.

To compile this driver as a module, choose M here: the
module will be called ips.</help>
				</entry>
				<entry name="SCSI_IBMVSCSI">
					<label>IBM Virtual SCSI support</label>
					<help>This is the IBM POWER Virtual SCSI Client

To compile this driver as a module, choose M here: the
module will be called ibmvscsi.</help>
				</entry>
				<entry name="SCSI_IBMVSCSIS">
					<label>IBM Virtual SCSI Server support</label>
					<help>This is the IBM POWER Virtual SCSI Target Server
This driver uses the SRP protocol for communication betwen servers
guest and/or the host that run on the same server.
More information on VSCSI protocol can be found at www.power.org

The userspace configuration needed to initialize the driver can be
be found here:

https://github.com/powervm/ibmvscsis/wiki/Configuration

To compile this driver as a module, choose M here: the
module will be called ibmvscsis.</help>
				</entry>
				<entry name="SCSI_IBMVFC">
					<label>IBM Virtual FC support</label>
					<help>This is the IBM POWER Virtual FC Client

To compile this driver as a module, choose M here: the
module will be called ibmvfc.</help>
				</entry>
				<entry name="SCSI_IBMVFC_TRACE">
					<label>enable driver internal trace</label>
					<help>If you say Y here, the driver will trace all commands issued
to the adapter. Performance impact is minimal. Trace can be
dumped using /sys/class/scsi_host/hostXX/trace.</help>
				</entry>
				<entry name="SCSI_INITIO">
					<label>Initio 9100U(W) support</label>
					<help>This is support for the Initio 91XXU(W) SCSI host adapter.  Please
read the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called initio.</help>
				</entry>
				<entry name="SCSI_INIA100">
					<label>Initio INI-A100U2W support</label>
					<help>This is support for the Initio INI-A100U2W SCSI host adapter.
Please read the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called a100u2w.</help>
				</entry>
				<entry name="SCSI_PPA">
					<label>IOMEGA parallel port (ppa - older drives)</label>
					<help>This driver supports older versions of IOMEGA's parallel port ZIP
drive (a 100 MB removable media device).

Note that you can say N here if you have the SCSI version of the ZIP
drive: it will be supported automatically if you said Y to the
generic &quot;SCSI disk support&quot;, above.

If you have the ZIP Plus drive or a more recent parallel port ZIP
drive (if the supplied cable with the drive is labeled &quot;AutoDetect&quot;)
then you should say N here and Y to &quot;IOMEGA parallel port (imm -
newer drives)&quot;, below.

For more information about this driver and how to use it you should
read the file &lt;file:Documentation/scsi/ppa.txt&gt;.  You should also read
the SCSI-HOWTO, which is available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If you use this driver,
you will still be able to use the parallel port for other tasks,
such as a printer; it is safe to compile both drivers into the
kernel.

To compile this driver as a module, choose M here: the
module will be called ppa.</help>
				</entry>
				<entry name="SCSI_IMM">
					<label>IOMEGA parallel port (imm - newer drives)</label>
					<help>This driver supports newer versions of IOMEGA's parallel port ZIP
drive (a 100 MB removable media device).

Note that you can say N here if you have the SCSI version of the ZIP
drive: it will be supported automatically if you said Y to the
generic &quot;SCSI disk support&quot;, above.

If you have the ZIP Plus drive or a more recent parallel port ZIP
drive (if the supplied cable with the drive is labeled &quot;AutoDetect&quot;)
then you should say Y here; if you have an older ZIP drive, say N
here and Y to &quot;IOMEGA Parallel Port (ppa - older drives)&quot;, above.

For more information about this driver and how to use it you should
read the file &lt;file:Documentation/scsi/ppa.txt&gt;.  You should also read
the SCSI-HOWTO, which is available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If you use this driver,
you will still be able to use the parallel port for other tasks,
such as a printer; it is safe to compile both drivers into the
kernel.

To compile this driver as a module, choose M here: the
module will be called imm.</help>
				</entry>
				<entry name="SCSI_IZIP_EPP16">
					<label>ppa/imm option - Use slow (but safe) EPP-16</label>
					<help>EPP (Enhanced Parallel Port) is a standard for parallel ports which
allows them to act as expansion buses that can handle up to 64
peripheral devices.

Some parallel port chipsets are slower than their motherboard, and
so we have to control the state of the chipset's FIFO queue every
now and then to avoid data loss. This will be done if you say Y
here.

Generally, saying Y is the safe option and slows things down a bit.</help>
				</entry>
				<entry name="SCSI_IZIP_SLOW_CTR">
					<label>ppa/imm option - Assume slow parport control register</label>
					<help>Some parallel ports are known to have excessive delays between
changing the parallel port control register and good data being
available on the parallel port data/status register. This option
forces a small delay (1.0 usec to be exact) after changing the
control register to let things settle out. Enabling this option may
result in a big drop in performance but some very old parallel ports
(found in 386 vintage machines) will not work properly.

Generally, saying N is fine.</help>
				</entry>
				<entry name="SCSI_NCR53C406A">
					<label>NCR53c406a SCSI support</label>
					<help>This is support for the NCR53c406a SCSI host adapter.  For user
configurable parameters, check out &lt;file:drivers/scsi/NCR53c406a.c&gt;
in the kernel source.  Also read the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called NCR53c406.</help>
				</entry>
				<entry name="SCSI_NCR_D700">
					<label>NCR Dual 700 MCA SCSI support</label>
					<help>This is a driver for the MicroChannel Dual 700 card produced by
NCR and commonly used in 345x/35xx/4100 class machines.  It always
tries to negotiate sync and uses tag command queueing.

Unless you have an NCR manufactured machine, the chances are that
you do not have this SCSI card, so say N.</help>
				</entry>
				<entry name="SCSI_LASI700">
					<label>HP Lasi SCSI support for 53c700/710</label>
					<help>This is a driver for the SCSI controller in the Lasi chip found in
many PA-RISC workstations &amp; servers.  If you do not know whether you
have a Lasi chip, it is safe to say &quot;Y&quot; here.</help>
				</entry>
				<entry name="SCSI_SNI_53C710">
					<label>SNI RM SCSI support for 53c710</label>
					<help>This is a driver for the onboard SCSI controller found in older
SNI RM workstations &amp; servers.</help>
				</entry>
				<entry name="_53C700_LE_ON_BE"/>
				<entry name="SCSI_STEX">
					<label>Promise SuperTrak EX Series support</label>
					<help>This driver supports Promise SuperTrak EX series storage controllers.

Promise provides Linux RAID configuration utility for these
controllers. Please visit &lt;http://www.promise.com&gt; to download.

To compile this driver as a module, choose M here: the
module will be called stex.</help>
				</entry>
				<entry name="_53C700_BE_BUS"/>
				<entry name="SCSI_SYM53C8XX_2">
					<label>SYM53C8XX Version 2 SCSI support</label>
					<help>This driver supports the whole NCR53C8XX/SYM53C8XX family of
PCI-SCSI controllers.  It also supports the subset of LSI53C10XX
Ultra-160 controllers that are based on the SYM53C8XX SCRIPTS
language.  It does not support LSI53C10XX Ultra-320 PCI-X SCSI
controllers; you need to use the Fusion MPT driver for that.

Please read &lt;file:Documentation/scsi/sym53c8xx_2.txt&gt; for more
information.</help>
				</entry>
				<entry name="SCSI_SYM53C8XX_DMA_ADDRESSING_MODE">
					<label>DMA addressing mode</label>
					<help>This option only applies to PCI-SCSI chips that are PCI DAC
capable (875A, 895A, 896, 1010-33, 1010-66, 1000).

When set to 0, the driver will program the chip to only perform
32-bit DMA.  When set to 1, the chip will be able to perform DMA
to addresses up to 1TB.  When set to 2, the driver supports the
full 64-bit DMA address range, but can only address 16 segments
of 4 GB each.  This limits the total addressable range to 64 GB.

Most machines with less than 4GB of memory should use a setting
of 0 for best performance.  If your machine has 4GB of memory
or more, you should set this option to 1 (the default).

The still experimental value 2 (64 bit DMA addressing with 16
x 4GB segments limitation) can be used on systems that require
PCI address bits past bit 39 to be set for the addressing of
memory using PCI DAC cycles.</help>
				</entry>
				<entry name="SCSI_SYM53C8XX_DEFAULT_TAGS">
					<label>Default tagged command queue depth</label>
					<help>This is the default value of the command queue depth the
driver will announce to the generic SCSI layer for devices
that support tagged command queueing. This value can be changed
from the boot command line.  This is a soft limit that cannot
exceed CONFIG_SCSI_SYM53C8XX_MAX_TAGS.</help>
				</entry>
				<entry name="SCSI_SYM53C8XX_MAX_TAGS">
					<label>Maximum number of queued commands</label>
					<help>This option allows you to specify the maximum number of commands
that can be queued to any device, when tagged command queuing is
possible. The driver supports up to 256 queued commands per device.
This value is used as a compiled-in hard limit.</help>
				</entry>
				<entry name="SCSI_SYM53C8XX_MMIO">
					<label>Use memory mapped IO</label>
					<help>Memory mapped IO is faster than Port IO.  Most people should
answer Y here, but some machines may have problems.  If you have
to answer N here, please report the problem to the maintainer.</help>
				</entry>
				<entry name="SCSI_IPR">
					<label>IBM Power Linux RAID adapter support</label>
					<help>This driver supports the IBM Power Linux family RAID adapters.
This includes IBM pSeries 5712, 5703, 5709, and 570A, as well
as IBM iSeries 5702, 5703, 5709, and 570A.</help>
				</entry>
				<entry name="SCSI_IPR_TRACE">
					<label>enable driver internal trace</label>
					<help>If you say Y here, the driver will trace all commands issued
to the adapter. Performance impact is minimal. Trace can be
dumped using /sys/bus/class/scsi_host/hostXX/trace.</help>
				</entry>
				<entry name="SCSI_IPR_DUMP">
					<label>enable adapter dump support</label>
					<help>If you say Y here, the driver will support adapter crash dump.
If you enable this support, the iprdump daemon can be used
to capture adapter failure analysis information.</help>
				</entry>
				<entry name="SCSI_ZALON">
					<label>Zalon SCSI support</label>
					<help>The Zalon is a GSC/HSC bus interface chip that sits between the
PA-RISC processor and the NCR 53c720 SCSI controller on C100,
C110, J200, J210 and some D, K &amp; R-class machines.  It's also
used on the add-in Bluefish, Barracuda &amp; Shrike SCSI cards.
Say Y here if you have one of these machines or cards.</help>
				</entry>
				<entry name="SCSI_NCR_Q720">
					<label>NCR Quad 720 MCA SCSI support</label>
					<help>This is a driver for the MicroChannel Quad 720 card produced by
NCR and commonly used in 345x/35xx/4100 class machines.  It always
tries to negotiate sync and uses tag command queueing.

Unless you have an NCR manufactured machine, the chances are that
you do not have this SCSI card, so say N.</help>
				</entry>
				<entry name="SCSI_NCR53C8XX_DEFAULT_TAGS">
					<label>default tagged command queue depth</label>
					<help>&quot;Tagged command queuing&quot; is a feature of SCSI-2 which improves
performance: the host adapter can send several SCSI commands to a
device's queue even if previous commands haven't finished yet.
Because the device is intelligent, it can optimize its operations
(like head positioning) based on its own request queue. Some SCSI
devices don't implement this properly; if you want to disable this
feature, enter 0 or 1 here (it doesn't matter which).

The default value is 8 and should be supported by most hard disks.
This value can be overridden from the boot command line using the
'tags' option as follows (example):
'ncr53c8xx=tags:4/t2t3q16/t0u2q10' will set default queue depth to
4, set queue depth to 16 for target 2 and target 3 on controller 0
and set queue depth to 10 for target 0 / lun 2 on controller 1.

The normal answer therefore is to go with the default 8 and to use
a boot command line option for devices that need to use a different
command queue depth.

There is no safe option other than using good SCSI devices.</help>
				</entry>
				<entry name="SCSI_NCR53C8XX_MAX_TAGS">
					<label>maximum number of queued commands</label>
					<help>This option allows you to specify the maximum number of commands
that can be queued to any device, when tagged command queuing is
possible. The default value is 32. Minimum is 2, maximum is 64.
Modern hard disks are able to support 64 tags and even more, but
do not seem to be faster when more than 32 tags are being used.

So, the normal answer here is to go with the default value 32 unless
you are using very large hard disks with large cache (&gt;= 1 MB) that
are able to take advantage of more than 32 tagged commands.

There is no safe option and the default answer is recommended.</help>
				</entry>
				<entry name="SCSI_NCR53C8XX_SYNC">
					<label>synchronous transfers frequency in MHz</label>
					<help>The SCSI Parallel Interface-2 Standard defines 5 classes of transfer
rates: FAST-5, FAST-10, FAST-20, FAST-40 and FAST-80.  The numbers
are respectively the maximum data transfer rates in mega-transfers
per second for each class.  For example, a FAST-20 Wide 16 device is
able to transfer data at 20 million 16 bit packets per second for a
total rate of 40 MB/s.

You may specify 0 if you want to only use asynchronous data
transfers. This is the safest and slowest option. Otherwise, specify
a value between 5 and 80, depending on the capability of your SCSI
controller.  The higher the number, the faster the data transfer.
Note that 80 should normally be ok since the driver decreases the
value automatically according to the controller's capabilities.

Your answer to this question is ignored for controllers with NVRAM,
since the driver will get this information from the user set-up.  It
also can be overridden using a boot setup option, as follows
(example): 'ncr53c8xx=sync:12' will allow the driver to negotiate
for FAST-20 synchronous data transfer (20 mega-transfers per
second).

The normal answer therefore is not to go with the default but to
select the maximum value 80 allowing the driver to use the maximum
value supported by each controller. If this causes problems with
your SCSI devices, you should come back and decrease the value.

There is no safe option other than using good cabling, right
terminations and SCSI conformant devices.</help>
				</entry>
				<entry name="SCSI_NCR53C8XX_NO_DISCONNECT">
					<label>not allow targets to disconnect</label>
					<help>This option is only provided for safety if you suspect some SCSI
device of yours to not support properly the target-disconnect
feature. In that case, you would say Y here. In general however, to
not allow targets to disconnect is not reasonable if there is more
than 1 device on a SCSI bus. The normal answer therefore is N.</help>
				</entry>
				<entry name="SCSI_PAS16">
					<label>PAS16 SCSI support</label>
					<help>This is support for a SCSI host adapter.  It is explained in section
3.10 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/pas16.h&gt;.

To compile this driver as a module, choose M here: the
module will be called pas16.</help>
				</entry>
				<entry name="SCSI_QLOGIC_FAS">
					<label>Qlogic FAS SCSI support</label>
					<help>This is a driver for the ISA, VLB, and PCMCIA versions of the Qlogic
FastSCSI! cards as well as any other card based on the FASXX chip
(including the Control Concepts SCSI/IDE/SIO/PIO/FDC cards).

This driver does NOT support the PCI versions of these cards. The
PCI versions are supported by the Qlogic ISP driver (&quot;Qlogic ISP
SCSI support&quot;), below.

Information about this driver is contained in
&lt;file:Documentation/scsi/qlogicfas.txt&gt;.  You should also read the
SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called qlogicfas.</help>
				</entry>
				<entry name="SCSI_QLOGIC_1280">
					<label>Qlogic QLA 1240/1x80/1x160 SCSI support</label>
					<help>Say Y if you have a QLogic ISP1240/1x80/1x160 SCSI host adapter.

To compile this driver as a module, choose M here: the
module will be called qla1280.</help>
				</entry>
				<entry name="SCSI_QLOGICPTI">
					<label>PTI Qlogic, ISP Driver</label>
					<help>This driver supports SBUS SCSI controllers from PTI or QLogic. These
controllers are known under Solaris as qpti and in the openprom as
PTI,ptisp or QLGC,isp. Note that PCI QLogic SCSI controllers are
driven by a different driver.

To compile this driver as a module, choose M here: the
module will be called qlogicpti.</help>
				</entry>
				<entry name="SCSI_QLA_FC">
					<label>QLogic QLA2XXX Fibre Channel Support</label>
					<help>This qla2xxx driver supports all QLogic Fibre Channel
PCI and PCIe host adapters.

By default, firmware for the ISP parts will be loaded
via the Firmware Loader interface.

ISP               Firmware Filename
----------        -----------------
21xx              ql2100_fw.bin
22xx              ql2200_fw.bin
2300, 2312, 6312  ql2300_fw.bin
2322, 6322        ql2322_fw.bin
24xx, 54xx        ql2400_fw.bin
25xx              ql2500_fw.bin

Upon request, the driver caches the firmware image until
the driver is unloaded.

Firmware images can be retrieved from:

http://ldriver.qlogic.com/firmware/

They are also included in the linux-firmware tree as well.</help>
				</entry>
				<entry name="TCM_QLA2XXX">
					<label>TCM_QLA2XXX fabric module for QLogic 24xx+ series target mode HBAs</label>
					<help>Say Y here to enable the TCM_QLA2XXX fabric module for QLogic 24xx+ series target mode HBAs</help>
				</entry>
				<entry name="TCM_QLA2XXX_DEBUG">
					<label>TCM_QLA2XXX fabric module DEBUG mode for QLogic 24xx+ series target mode HBAs</label>
					<help>Say Y here to enable the TCM_QLA2XXX fabric module DEBUG for QLogic 24xx+ series target mode HBAs
This will include code to enable the SCSI command jammer</help>
				</entry>
				<entry name="SCSI_QLA_ISCSI">
					<label>QLogic ISP4XXX and ISP82XX host adapter family support</label>
					<help>This driver supports the QLogic 40xx (ISP4XXX), 8022 (ISP82XX)
and 8032 (ISP83XX) iSCSI host adapter family.
</help>
				</entry>
				<entry name="SCSI_LPFC">
					<label>Emulex LightPulse Fibre Channel Support</label>
					<help>This lpfc driver supports the Emulex LightPulse
Family of Fibre Channel PCI host adapters.</help>
				</entry>
				<entry name="SCSI_LPFC_DEBUG_FS">
					<label>Emulex LightPulse Fibre Channel debugfs Support</label>
					<help>This makes debugging information from the lpfc driver
available via the debugfs filesystem.</help>
				</entry>
				<entry name="SCSI_SIM710">
					<label>Simple 53c710 SCSI support (Compaq, NCR machines)</label>
					<help>This driver is for NCR53c710 based SCSI host adapters.

It currently supports Compaq EISA cards and NCR MCA cards</help>
				</entry>
				<entry name="SCSI_SYM53C416">
					<label>Symbios 53c416 SCSI support</label>
					<help>This is support for the sym53c416 SCSI host adapter, the SCSI
adapter that comes with some HP scanners. This driver requires that
the sym53c416 is configured first using some sort of PnP
configuration program (e.g. isapnp) or by a PnP aware BIOS. If you
are using isapnp then you need to compile this driver as a module
and then load it using insmod after isapnp has run. The parameters
of the configured card(s) should be passed to the driver. The format
is:

insmod sym53c416 sym53c416=&lt;base&gt;,&lt;irq&gt; [sym53c416_1=&lt;base&gt;,&lt;irq&gt;]

To compile this driver as a module, choose M here: the
module will be called sym53c416.</help>
				</entry>
				<entry name="SCSI_DC395x">
					<label>Tekram DC395(U/UW/F) and DC315(U) SCSI support</label>
					<help>This driver supports PCI SCSI host adapters based on the ASIC
TRM-S1040 chip, e.g Tekram DC395(U/UW/F) and DC315(U) variants.

This driver works, but is still in experimental status. So better
have a bootable disk and a backup in case of emergency.

Documentation can be found in &lt;file:Documentation/scsi/dc395x.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called dc395x.</help>
				</entry>
				<entry name="SCSI_AM53C974">
					<label>Tekram DC390(T) and Am53/79C974 SCSI support (new driver)</label>
					<help>This driver supports PCI SCSI host adapters based on the Am53C974A
chip, e.g. Tekram DC390(T), DawiControl 2974 and some onboard
PCscsi/PCnet (Am53/79C974) solutions.
This is a new implementation base on the generic esp_scsi driver.

Documentation can be found in &lt;file:Documentation/scsi/tmscsim.txt&gt;.

Note that this driver does NOT support Tekram DC390W/U/F, which are
based on NCR/Symbios chips. Use &quot;NCR53C8XX SCSI support&quot; for those.

To compile this driver as a module, choose M here: the
module will be called am53c974.</help>
				</entry>
				<entry name="SCSI_T128">
					<label>Trantor T128/T128F/T228 SCSI support</label>
					<help>This is support for a SCSI host adapter. It is explained in section
3.11 of the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/t128.h&gt;.  Note that Trantor was purchased by
Adaptec, and some former Trantor products are being sold under the
Adaptec name.

To compile this driver as a module, choose M here: the
module will be called t128.</help>
				</entry>
				<entry name="SCSI_U14_34F">
					<label>UltraStor 14F/34F support</label>
					<help>This is support for the UltraStor 14F and 34F SCSI-2 host adapters.
The source at &lt;file:drivers/scsi/u14-34f.c&gt; contains some
information about this hardware.  If the driver doesn't work out of
the box, you may have to change some settings in
&lt;file: drivers/scsi/u14-34f.c&gt;.  Read the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  Note that there is also
another driver for the same hardware: &quot;UltraStor SCSI support&quot;,
below.  You should say Y to both only if you want 24F support as
well.

To compile this driver as a module, choose M here: the
module will be called u14-34f.</help>
				</entry>
				<entry name="SCSI_U14_34F_TAGGED_QUEUE">
					<label>enable tagged command queueing</label>
					<help>This is a feature of SCSI-2 which improves performance: the host
adapter can send several SCSI commands to a device's queue even if
previous commands haven't finished yet.
This is equivalent to the &quot;u14-34f=tc:y&quot; boot option.</help>
				</entry>
				<entry name="SCSI_U14_34F_LINKED_COMMANDS">
					<label>enable elevator sorting</label>
					<help>This option enables elevator sorting for all probed SCSI disks and
CD-ROMs. It definitely reduces the average seek distance when doing
random seeks, but this does not necessarily result in a noticeable
performance improvement: your mileage may vary...
This is equivalent to the &quot;u14-34f=lc:y&quot; boot option.</help>
				</entry>
				<entry name="SCSI_U14_34F_MAX_TAGS">
					<label>maximum number of queued commands</label>
					<help>This specifies how many SCSI commands can be maximally queued for
each probed SCSI device. You should reduce the default value of 8
only if you have disks with buggy or limited tagged command support.
Minimum is 2 and maximum is 14. This value is also the window size
used by the elevator sorting option above. The effective value used
by the driver for each probed SCSI device is reported at boot time.
This is equivalent to the &quot;u14-34f=mq:8&quot; boot option.</help>
				</entry>
				<entry name="SCSI_ULTRASTOR">
					<label>UltraStor SCSI support</label>
					<help>This is support for the UltraStor 14F, 24F and 34F SCSI-2 host
adapter family.  This driver is explained in section 3.12 of the
SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  If it doesn't work out
of the box, you may have to change some settings in
&lt;file:drivers/scsi/ultrastor.h&gt;.

Note that there is also another driver for the same hardware:
&quot;UltraStor 14F/34F support&quot;, above.

To compile this driver as a module, choose M here: the
module will be called ultrastor.</help>
				</entry>
				<entry name="SCSI_NSP32">
					<label>Workbit NinjaSCSI-32Bi/UDE support</label>
					<help>This is support for the Workbit NinjaSCSI-32Bi/UDE PCI/Cardbus
SCSI host adapter. Please read the SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the
module will be called nsp32.</help>
				</entry>
				<entry name="SCSI_WD719X">
					<label>Western Digital WD7193/7197/7296 support</label>
					<help>This is a driver for Western Digital WD7193, WD7197 and WD7296 PCI
SCSI controllers (based on WD33C296A chip).</help>
				</entry>
				<entry name="SCSI_DEBUG">
					<label>SCSI debugging host and device simulator</label>
					<help>This pseudo driver simulates one or more hosts (SCSI initiators),
each with one or more targets, each with one or more logical units.
Defaults to one of each, creating a small RAM disk device. Many
parameters found in the /sys/bus/pseudo/drivers/scsi_debug
directory can be tweaked at run time.
See &lt;http://sg.danny.cz/sg/sdebug26.html&gt; for more information.
Mainly used for testing and best as a module. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_MESH">
					<label>MESH (Power Mac internal SCSI) support</label>
					<help>Many Power Macintoshes and clones have a MESH (Macintosh Enhanced
SCSI Hardware) SCSI bus adaptor (the 7200 doesn't, but all of the
other Power Macintoshes do). Say Y to include support for this SCSI
adaptor.

To compile this driver as a module, choose M here: the
module will be called mesh.</help>
				</entry>
				<entry name="SCSI_MESH_SYNC_RATE">
					<label>maximum synchronous transfer rate (MB/s) (0 = async)</label>
					<help>On Power Macintoshes (and clones) where the MESH SCSI bus adaptor
drives a bus which is entirely internal to the machine (such as the
7500, 7600, 8500, etc.), the MESH is capable of synchronous
operation at up to 10 MB/s. On machines where the SCSI bus
controlled by the MESH can have external devices connected, it is
usually rated at 5 MB/s. 5 is a safe value here unless you know the
MESH SCSI bus is internal only; in that case you can say 10. Say 0
to disable synchronous operation.</help>
				</entry>
				<entry name="SCSI_MESH_RESET_DELAY_MS">
					<label>initial bus reset delay (ms) (0 = no reset)</label>
				</entry>
				<entry name="SCSI_MAC53C94">
					<label>53C94 (Power Mac external SCSI) support</label>
					<help>On Power Macintoshes (and clones) with two SCSI buses, the external
SCSI bus is usually controlled by a 53C94 SCSI bus adaptor. Older
machines which only have one SCSI bus, such as the 7200, also use
the 53C94. Say Y to include support for the 53C94.

To compile this driver as a module, choose M here: the
module will be called mac53c94.</help>
				</entry>
				<entry name="SCSI_ACORNSCSI_3">
					<label>Acorn SCSI card (aka30) support</label>
					<help>This enables support for the Acorn SCSI card (aka30). If you have an
Acorn system with one of these, say Y. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_ACORNSCSI_TAGGED_QUEUE">
					<label>Support SCSI 2 Tagged queueing</label>
					<help>Say Y here to enable tagged queuing support on the Acorn SCSI card.

This is a feature of SCSI-2 which improves performance: the host
adapter can send several SCSI commands to a device's queue even if
previous commands haven't finished yet. Some SCSI devices don't
implement this properly, so the safe answer is N.</help>
				</entry>
				<entry name="SCSI_ACORNSCSI_SYNC">
					<label>Support SCSI 2 Synchronous Transfers</label>
					<help>Say Y here to enable synchronous transfer negotiation with all
targets on the Acorn SCSI card.

In general, this improves performance; however some SCSI devices
don't implement it properly, so the safe answer is N.</help>
				</entry>
				<entry name="SCSI_ARXESCSI">
					<label>ARXE SCSI support</label>
					<help>Around 1991, Arxe Systems Limited released a high density floppy
disc interface for the Acorn Archimedes range, to allow the use of
HD discs from the then new A5000 on earlier models. This interface
was either sold on its own or with an integral SCSI controller.
Technical details on this NCR53c94-based device are available at
&lt;http://www.cryton.demon.co.uk/acornbits/scsi_arxe.html&gt;
Say Y here to compile in support for the SCSI controller.</help>
				</entry>
				<entry name="SCSI_CUMANA_2">
					<label>CumanaSCSI II support</label>
					<help>This enables support for the Cumana SCSI II card. If you have an
Acorn system with one of these, say Y. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_EESOXSCSI">
					<label>EESOX support</label>
					<help>This enables support for the EESOX SCSI card. If you have an Acorn
system with one of these, say Y, otherwise say N.</help>
				</entry>
				<entry name="SCSI_POWERTECSCSI">
					<label>PowerTec support</label>
					<help>This enables support for the Powertec SCSI card on Acorn systems. If
you have one of these, say Y. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_CUMANA_1">
					<label>CumanaSCSI I support</label>
					<help>This enables support for the Cumana SCSI I card. If you have an
Acorn system with one of these, say Y. If unsure, say N.</help>
				</entry>
				<entry name="SCSI_OAK1">
					<label>Oak SCSI support</label>
					<help>This enables support for the Oak SCSI card. If you have an Acorn
system with one of these, say Y. If unsure, say N.

</help>
				</entry>
				<entry name="JAZZ_ESP">
					<label>MIPS JAZZ FAS216 SCSI support</label>
					<help>This is the driver for the onboard SCSI host adapter of MIPS Magnum
4000, Acer PICA, Olivetti M700-10 and a few other identical OEM
systems.</help>
				</entry>
				<entry name="A3000_SCSI">
					<label>A3000 WD33C93A support</label>
					<help>If you have an Amiga 3000 and have SCSI devices connected to the
built-in SCSI controller, say Y. Otherwise, say N.

To compile this driver as a module, choose M here: the
module will be called a3000.</help>
				</entry>
				<entry name="A2091_SCSI">
					<label>A2091/A590 WD33C93A support</label>
					<help>If you have a Commodore A2091 SCSI controller, say Y. Otherwise,
say N.

To compile this driver as a module, choose M here: the
module will be called a2091.</help>
				</entry>
				<entry name="GVP11_SCSI">
					<label>GVP Series II WD33C93A support</label>
					<help>If you have a Great Valley Products Series II SCSI controller,
answer Y. Also say Y if you have a later model of GVP SCSI
controller (such as the GVP A4008 or a Combo board). Otherwise,
answer N. This driver does NOT work for the T-Rex series of
accelerators from TekMagic and GVP-M.

To compile this driver as a module, choose M here: the
module will be called gvp11.</help>
				</entry>
				<entry name="SCSI_A4000T">
					<label>A4000T NCR53c710 SCSI support</label>
					<help>If you have an Amiga 4000T and have SCSI devices connected to the
built-in SCSI controller, say Y. Otherwise, say N.

To compile this driver as a module, choose M here: the
module will be called a4000t.</help>
				</entry>
				<entry name="SCSI_ZORRO7XX">
					<label>Zorro NCR53c710 SCSI support</label>
					<help>Support for various NCR53c710-based SCSI controllers on Zorro
expansion boards for the Amiga.
This includes:
- the Amiga 4091 Zorro III SCSI-2 controller,
- the MacroSystem Development's WarpEngine Amiga SCSI-2 controller
(info at
&lt;http://www.lysator.liu.se/amiga/ar/guide/ar310.guide?FEATURE5&gt;),
- the SCSI controller on the Phase5 Blizzard PowerUP 603e+
accelerator card for the Amiga 1200,
- the SCSI controller on the GVP Turbo 040/060 accelerator.</help>
				</entry>
				<entry name="ATARI_SCSI">
					<label>Atari native SCSI support</label>
					<help>If you have an Atari with built-in NCR5380 SCSI controller (TT,
Falcon, ...) say Y to get it supported. Of course also, if you have
a compatible SCSI controller (e.g. for Medusa).

To compile this driver as a module, choose M here: the
module will be called atari_scsi.

This driver supports both styles of NCR integration into the
system: the TT style (separate DMA), and the Falcon style (via
ST-DMA, replacing ACSI).  It does NOT support other schemes, like
in the Hades (without DMA).</help>
				</entry>
				<entry name="MAC_SCSI">
					<label>Macintosh NCR5380 SCSI</label>
					<help>This is the NCR 5380 SCSI controller included on most of the 68030
based Macintoshes.  If you have one of these say Y and read the
SCSI-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.</help>
				</entry>
				<entry name="SCSI_MAC_ESP">
					<label>Macintosh NCR53c9[46] SCSI</label>
					<help>This is the NCR 53c9x SCSI controller found on most of the 68040
based Macintoshes.

To compile this driver as a module, choose M here: the module
will be called mac_esp.</help>
				</entry>
				<entry name="MVME147_SCSI">
					<label>WD33C93 SCSI driver for MVME147</label>
					<help>Support for the on-board SCSI controller on the Motorola MVME147
single-board computer.</help>
				</entry>
				<entry name="MVME16x_SCSI">
					<label>NCR53C710 SCSI driver for MVME16x</label>
					<help>The Motorola MVME162, 166, 167, 172 and 177 boards use the NCR53C710
SCSI controller chip.  Almost everyone using one of these boards
will want to say Y to this question.</help>
				</entry>
				<entry name="BVME6000_SCSI">
					<label>NCR53C710 SCSI driver for BVME6000</label>
					<help>The BVME4000 and BVME6000 boards from BVM Ltd use the NCR53C710
SCSI controller chip.  Almost everyone using one of these boards
will want to say Y to this question.</help>
				</entry>
				<entry name="SUN3_SCSI">
					<label>Sun3 NCR5380 SCSI</label>
					<help>This option will enable support for the OBIO (onboard io) NCR5380
SCSI controller found in the Sun 3/50 and 3/60, as well as for
&quot;Sun3&quot; type VME scsi controllers also based on the NCR5380.
General Linux information on the Sun 3 series (now discontinued)
is at &lt;http://www.angelfire.com/ca2/tech68k/sun3.html&gt;.</help>
				</entry>
				<entry name="SUN3X_ESP">
					<label>Sun3x ESP SCSI</label>
					<help>The ESP was an on-board SCSI controller used on Sun 3/80
machines.  Say Y here to compile in support for it.</help>
				</entry>
				<entry name="SCSI_SUNESP">
					<label>Sparc ESP Scsi Driver</label>
					<help>This is the driver for the Sun ESP SCSI host adapter. The ESP
chipset is present in most SPARC SBUS-based computers and
supports the Emulex family of ESP SCSI chips (esp100, esp100A,
esp236, fas101, fas236) as well as the Qlogic fas366 SCSI chip.

To compile this driver as a module, choose M here: the
module will be called sun_esp.</help>
				</entry>
				<entry name="ZFCP">
					<label>FCP host bus adapter driver for IBM eServer zSeries</label>
					<help>If you want to access SCSI devices attached to your IBM eServer
zSeries by means of Fibre Channel interfaces say Y.
For details please refer to the documentation provided by IBM at
&lt;http://oss.software.ibm.com/developerworks/opensource/linux390&gt;

This driver is also available as a module. This module will be
called zfcp. If you want to compile it as a module, say M here
and read &lt;file:Documentation/kbuild/modules.txt&gt;.</help>
				</entry>
				<entry name="SCSI_PMCRAID">
					<label>PMC SIERRA Linux MaxRAID adapter support</label>
					<help>This driver supports the PMC SIERRA MaxRAID adapters.</help>
				</entry>
				<entry name="SCSI_PM8001">
					<label>PMC-Sierra SPC 8001 SAS/SATA Based Host Adapter driver</label>
					<help>This driver supports PMC-Sierra PCIE SAS/SATA 8x6G SPC 8001 chip
based host adapters.</help>
				</entry>
				<entry name="SCSI_BFA_FC">
					<label>Brocade BFA Fibre Channel Support</label>
					<help>This bfa driver supports all Brocade PCIe FC/FCOE host adapters.

To compile this driver as a module, choose M here. The module will
be called bfa.</help>
				</entry>
				<entry name="SCSI_VIRTIO">
					<label>virtio-scsi support</label>
					<help>This is the virtual HBA driver for virtio.  If the kernel will
be used in a virtual machine, say Y or M.</help>
				</entry>
				<entry name="SCSI_CHELSIO_FCOE">
					<label>Chelsio Communications FCoE support</label>
					<help>This driver supports FCoE Offload functionality over
Chelsio T4-based 10Gb Converged Network Adapters.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module choose M here; the module
will be called csiostor.
</help>
				</entry>
				<entry name="SCSI_LOWLEVEL_PCMCIA">
					<label>PCMCIA SCSI adapter support</label>
				</entry>
				<entry name="PCMCIA_AHA152X">
					<label>Adaptec AHA152X PCMCIA support</label>
					<help>Say Y here if you intend to attach this type of PCMCIA SCSI host
adapter to your computer.

To compile this driver as a module, choose M here: the
module will be called aha152x_cs.</help>
				</entry>
				<entry name="PCMCIA_FDOMAIN">
					<label>Future Domain PCMCIA support</label>
					<help>Say Y here if you intend to attach this type of PCMCIA SCSI host
adapter to your computer.

To compile this driver as a module, choose M here: the
module will be called fdomain_cs.</help>
				</entry>
				<entry name="PCMCIA_NINJA_SCSI">
					<label>NinjaSCSI-3 / NinjaSCSI-32Bi (16bit) PCMCIA support</label>
					<help>If you intend to attach this type of PCMCIA SCSI host adapter to
your computer, say Y here and read
&lt;file:Documentation/scsi/NinjaSCSI.txt&gt;.

Supported cards:

NinjaSCSI-3: (version string: &quot;WBT&quot;,&quot;NinjaSCSI-3&quot;,&quot;R1.0&quot;)
IO-DATA     PCSC-FP
ALPHA DATA  AD-PCS201
CyQ've      SFC-201
LOGITECH    LPM-SCSI2E
Pioneer PCR-PR24's card
I-O DATA CDPS-PX24's card (PCSC-F)
Panasonic KXL-RW10AN CD-RW's card
etc.

NinjaSCSI-32Bit (in 16bit mode):
[Workbit (version string: &quot;WORKBIT&quot;,&quot;UltraNinja-16&quot;,&quot;1&quot;)]
Jazz SCP050
[I-O DATA (OEM) (version string: &quot;IO DATA&quot;,&quot;CBSC16       &quot;,&quot;1&quot;)]
I-O DATA CBSC-II
[Kyusyu Matsushita Kotobuki (OEM)
(version string: &quot;KME    &quot;,&quot;SCSI-CARD-001&quot;,&quot;1&quot;)]
KME KXL-820AN's card
HP M820e CDRW's card
etc.

To compile this driver as a module, choose M here: the
module will be called nsp_cs.</help>
				</entry>
				<entry name="PCMCIA_QLOGIC">
					<label>Qlogic PCMCIA support</label>
					<help>Say Y here if you intend to attach this type of PCMCIA SCSI host
adapter to your computer.

To compile this driver as a module, choose M here: the
module will be called qlogic_cs.</help>
				</entry>
				<entry name="PCMCIA_SYM53C500">
					<label>Symbios 53c500 PCMCIA support</label>
					<help>Say Y here if you have a New Media Bus Toaster or other PCMCIA
SCSI adapter based on the Symbios 53c500 controller.

To compile this driver as a module, choose M here: the
module will be called sym53c500_cs.</help>
				</entry>
				<entry name="SCSI_DH">
					<label>SCSI Device Handlers</label>
					<help>SCSI Device Handlers provide device specific support for
devices utilized in multipath configurations. Say Y here to
select support for specific hardware.</help>
				</entry>
				<entry name="SCSI_DH_RDAC">
					<label>LSI RDAC Device Handler</label>
					<help>If you have a LSI RDAC select y. Otherwise, say N.</help>
				</entry>
				<entry name="SCSI_DH_HP_SW">
					<label>HP/COMPAQ MSA Device Handler</label>
					<help>If you have a HP/COMPAQ MSA device that requires START_STOP to
be sent to start it and cannot upgrade the firmware then select y.
Otherwise, say N.</help>
				</entry>
				<entry name="SCSI_DH_EMC">
					<label>EMC CLARiiON Device Handler</label>
					<help>If you have a EMC CLARiiON select y. Otherwise, say N.</help>
				</entry>
				<entry name="SCSI_DH_ALUA">
					<label>SPC-3 ALUA Device Handler</label>
					<help>SCSI Device handler for generic SPC-3 Asymmetric Logical Unit
Access (ALUA).

</help>
				</entry>
				<entry name="SCSI_OSD_INITIATOR">
					<label>OSD-Initiator library</label>
					<help>Enable the OSD-Initiator library (libosd.ko).
NOTE: You must also select CRYPTO_SHA1 + CRYPTO_HMAC and their
dependencies</help>
				</entry>
				<entry name="SCSI_OSD_ULD">
					<label>OSD Upper Level driver</label>
					<help>Build a SCSI upper layer driver that exports /dev/osdX devices
to user-mode for testing and controlling OSD devices. It is also
needed by exofs, for mounting an OSD based file system.</help>
				</entry>
				<entry name="SCSI_OSD_DPRINT_SENSE">
					<label>(0-2) When sense is returned, DEBUG print all sense descriptors</label>
					<help>When a CHECK_CONDITION status is returned from a target, and a
sense-buffer is retrieved, turning this on will dump a full
sense-decoding message. Setting to 2 will also print recoverable
errors that might be regularly returned for some filesystem
operations.</help>
				</entry>
				<entry name="SCSI_OSD_DEBUG">
					<label>Compile All OSD modules with lots of DEBUG prints</label>
					<help>OSD Code is populated with lots of OSD_DEBUG(..) printouts to
dmesg. Enable this if you found a bug and you want to help us
track the problem (see also MAINTAINERS). Setting this will also
force SCSI_OSD_DPRINT_SENSE=2.
</help>
				</entry>
			</container>
			<entry name="HAVE_PATA_PLATFORM">
				<help>This is an internal configuration node for any machine that
uses pata-platform driver to enable the relevant driver in the
configuration structure without having to submit endless patches
to update the PATA_PLATFORM entry.</help>
			</entry>
			<entry name="ATA">
				<label>Serial ATA and Parallel ATA drivers (libata)</label>
				<help>If you want to use an ATA hard disk, ATA tape drive, ATA CD-ROM or
any other ATA device under Linux, say Y and make sure that you know
the name of your ATA host adapter (the card inside your computer
that &quot;speaks&quot; the ATA protocol, also called ATA controller),
because you will be asked for it.

NOTE: ATA enables basic SCSI support; *however*,
'SCSI disk support', 'SCSI tape support', or
'SCSI CDROM support' may also be needed,
depending on your hardware configuration.</help>
			</entry>
			<entry name="ATA_NONSTANDARD"/>
			<entry name="ATA_VERBOSE_ERROR">
				<label>Verbose ATA error reporting</label>
				<help>This option adds parsing of ATA command descriptions and error bits
in libata kernel output, making it easier to interpret.
This option will enlarge the kernel by approx. 6KB. Disable it only
if kernel size is more important than ease of debugging.

If unsure, say Y.</help>
			</entry>
			<entry name="ATA_ACPI">
				<label>ATA ACPI Support</label>
				<help>This option adds support for ATA-related ACPI objects.
These ACPI objects add the ability to retrieve taskfiles
from the ACPI BIOS and write them to the disk controller.
These objects may be related to performance, security,
power management, or other areas.
You can disable this at kernel boot time by using the
option libata.noacpi=1</help>
			</entry>
			<entry name="SATA_ZPODD">
				<label>SATA Zero Power Optical Disc Drive (ZPODD) support</label>
				<help>This option adds support for SATA Zero Power Optical Disc
Drive (ZPODD). It requires both the ODD and the platform
support, and if enabled, will automatically power on/off the
ODD when certain condition is satisfied. This does not impact
end user's experience of the ODD, only power is saved when
the ODD is not in use (i.e. no disc inside).

If unsure, say N.</help>
			</entry>
			<entry name="SATA_PMP">
				<label>SATA Port Multiplier support</label>
				<help>This option adds support for SATA Port Multipliers
(the SATA version of an ethernet hub, or SAS expander).</help>
			</entry>
			<entry name="SATA_AHCI">
				<label>AHCI SATA support</label>
				<help>This option enables support for AHCI Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_AHCI_PLATFORM">
				<label>Platform AHCI SATA support</label>
				<help>This option enables support for Platform AHCI Serial ATA
controllers.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_BRCM">
				<label>Broadcom AHCI SATA support</label>
				<help>This option enables support for the AHCI SATA3 controller found on
Broadcom SoC's.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_DA850">
				<label>DaVinci DA850 AHCI SATA support</label>
				<help>This option enables support for the DaVinci DA850 SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_ST">
				<label>ST AHCI SATA support</label>
				<help>This option enables support for ST AHCI SATA controller.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_IMX">
				<label>Freescale i.MX AHCI SATA support</label>
				<help>This option enables support for the Freescale i.MX SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_CEVA">
				<label>CEVA AHCI SATA support</label>
				<help>This option enables support for the CEVA AHCI SATA.
It can be found on the Xilinx Zynq UltraScale+ MPSoC.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_MVEBU">
				<label>Marvell EBU AHCI SATA support</label>
				<help>This option enables support for the Marvebu EBU SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_OCTEON">
				<label>Cavium Octeon Soc Serial ATA</label>
				<help>This option enables support for Cavium Octeon SoC Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_SUNXI">
				<label>Allwinner sunxi AHCI SATA support</label>
				<help>This option enables support for the Allwinner sunxi SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_TEGRA">
				<label>NVIDIA Tegra124 AHCI SATA support</label>
				<help>This option enables support for the NVIDIA Tegra124 SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="AHCI_XGENE">
				<label>APM X-Gene 6.0Gbps AHCI SATA host controller support</label>
				<help>This option enables support for APM X-Gene SoC SATA host controller.</help>
			</entry>
			<entry name="AHCI_QORIQ">
				<label>Freescale QorIQ AHCI SATA support</label>
				<help>This option enables support for the Freescale QorIQ AHCI SoC's
onboard AHCI SATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_FSL">
				<label>Freescale 3.0Gbps SATA support</label>
				<help>This option enables support for Freescale 3.0Gbps SATA controller.
It can be found on MPC837x and MPC8315.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_AHCI_SEATTLE">
				<label>AMD Seattle 6.0Gbps AHCI SATA host controller support</label>
				<help>This option enables support for AMD Seattle SATA host controller.

If unsure, say N</help>
			</entry>
			<entry name="SATA_INIC162X">
				<label>Initio 162x SATA support (Very Experimental)</label>
				<help>This option enables support for Initio 162x Serial ATA.</help>
			</entry>
			<entry name="SATA_ACARD_AHCI">
				<label>ACard AHCI variant (ATP 8620)</label>
				<help>This option enables support for Acard.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_SIL24">
				<label>Silicon Image 3124/3132 SATA support</label>
				<help>This option enables support for Silicon Image 3124/3132 Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="ATA_SFF">
				<label>ATA SFF support (for legacy IDE and PATA)</label>
				<help>This option adds support for ATA controllers with SFF
compliant or similar programming interface.

SFF is the legacy IDE interface that has been around since
the dawn of time.  Almost all PATA controllers have an
SFF interface.  Many SATA controllers have an SFF interface
when configured into a legacy compatibility mode.

For users with exclusively modern controllers like AHCI,
Silicon Image 3124, or Marvell 6440, you may choose to
disable this unneeded SFF support.

If unsure, say Y.</help>
			</entry>
			<entry name="PDC_ADMA">
				<label>Pacific Digital ADMA support</label>
				<help>This option enables support for Pacific Digital ADMA controllers

If unsure, say N.</help>
			</entry>
			<entry name="PATA_OCTEON_CF">
				<label>OCTEON Boot Bus Compact Flash support</label>
				<help>This option enables a polled compact flash driver for use with
compact flash cards attached to the OCTEON boot bus.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_QSTOR">
				<label>Pacific Digital SATA QStor support</label>
				<help>This option enables support for Pacific Digital Serial ATA QStor.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_SX4">
				<label>Promise SATA SX4 support (Experimental)</label>
				<help>This option enables support for Promise Serial ATA SX4.

If unsure, say N.</help>
			</entry>
			<entry name="ATA_BMDMA">
				<label>ATA BMDMA support</label>
				<help>This option adds support for SFF ATA controllers with BMDMA
capability.  BMDMA stands for bus-master DMA and is the
de facto DMA interface for SFF controllers.

If unsure, say Y.</help>
			</entry>
			<entry name="ATA_PIIX">
				<label>Intel ESB, ICH, PIIX3, PIIX4 PATA/SATA support</label>
				<help>This option enables support for ICH5/6/7/8 Serial ATA
and support for PATA on the Intel ESB/ICH/PIIX3/PIIX4 series
host controllers.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_DWC">
				<label>DesignWare Cores SATA support</label>
				<help>This option enables support for the on-chip SATA controller of the
AppliedMicro processor 460EX.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_DWC_OLD_DMA">
				<label>Support old device trees</label>
				<help>This option enables support for old device trees without the
&quot;dmas&quot; property.</help>
			</entry>
			<entry name="SATA_DWC_DEBUG">
				<label>Debugging driver version</label>
				<help>This option enables debugging output in the driver.</help>
			</entry>
			<entry name="SATA_DWC_VDEBUG">
				<label>Verbose debug output</label>
				<help>This option enables the taskfile dumping and NCQ debugging.</help>
			</entry>
			<entry name="SATA_HIGHBANK">
				<label>Calxeda Highbank SATA support</label>
				<help>This option enables support for the Calxeda Highbank SoC's
onboard SATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_MV">
				<label>Marvell SATA support</label>
				<help>This option enables support for the Marvell Serial ATA family.
Currently supports 88SX[56]0[48][01] PCI(-X) chips,
as well as the newer [67]042 PCI-X/PCIe and SOC devices.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_NV">
				<label>NVIDIA SATA support</label>
				<help>This option enables support for NVIDIA Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_PROMISE">
				<label>Promise SATA TX2/TX4 support</label>
				<help>This option enables support for Promise Serial ATA TX2/TX4.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_RCAR">
				<label>Renesas R-Car SATA support</label>
				<help>This option enables support for Renesas R-Car Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_SIL">
				<label>Silicon Image SATA support</label>
				<help>This option enables support for Silicon Image Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_SIS">
				<label>SiS 964/965/966/180 SATA support</label>
				<help>This option enables support for SiS Serial ATA on
SiS 964/965/966/180 and Parallel ATA on SiS 180.
The PATA support for SiS 180 requires additionally to
enable the PATA_SIS driver in the config.
If unsure, say N.</help>
			</entry>
			<entry name="SATA_SVW">
				<label>ServerWorks Frodo / Apple K2 SATA support</label>
				<help>This option enables support for Broadcom/Serverworks/Apple K2
SATA support.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_ULI">
				<label>ULi Electronics SATA support</label>
				<help>This option enables support for ULi Electronics SATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_VIA">
				<label>VIA SATA support</label>
				<help>This option enables support for VIA Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="SATA_VITESSE">
				<label>VITESSE VSC-7174 / INTEL 31244 SATA support</label>
				<help>This option enables support for Vitesse VSC7174 and Intel 31244 Serial ATA.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_ALI">
				<label>ALi PATA support</label>
				<help>This option enables support for the ALi ATA interfaces
found on the many ALi chipsets.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_AMD">
				<label>AMD/NVidia PATA support</label>
				<help>This option enables support for the AMD and NVidia PATA
interfaces found on the chipsets for Athlon/Athlon64.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_ARASAN_CF">
				<label>ARASAN CompactFlash PATA Controller Support</label>
				<help>Say Y here to support the ARASAN CompactFlash PATA controller</help>
			</entry>
			<entry name="PATA_ARTOP">
				<label>ARTOP 6210/6260 PATA support</label>
				<help>This option enables support for ARTOP PATA controllers.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_ATIIXP">
				<label>ATI PATA support</label>
				<help>This option enables support for the ATI ATA interfaces
found on the many ATI chipsets.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_ATP867X">
				<label>ARTOP/Acard ATP867X PATA support</label>
				<help>This option enables support for ARTOP/Acard ATP867X PATA
controllers.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_BF54X">
				<label>Blackfin 54x ATAPI support</label>
				<help>This option enables support for the built-in ATAPI controller on
Blackfin 54x family chips.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CMD64X">
				<label>CMD64x PATA support</label>
				<help>This option enables support for the CMD64x series chips
except for the CMD640.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CS5520">
				<label>CS5510/5520 PATA support</label>
				<help>This option enables support for the Cyrix 5510/5520
companion chip used with the MediaGX/Geode processor family.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CS5530">
				<label>CS5530 PATA support</label>
				<help>This option enables support for the Cyrix/NatSemi/AMD CS5530
companion chip used with the MediaGX/Geode processor family.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CS5535">
				<label>CS5535 PATA support (Experimental)</label>
				<help>This option enables support for the NatSemi/AMD CS5535
companion chip used with the Geode processor family.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CS5536">
				<label>CS5536 PATA support</label>
				<help>This option enables support for the AMD CS5536
companion chip used with the Geode LX processor family.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CYPRESS">
				<label>Cypress CY82C693 PATA support (Very Experimental)</label>
				<help>This option enables support for the Cypress/Contaq CY82C693
chipset found in some Alpha systems

If unsure, say N.</help>
			</entry>
			<entry name="PATA_EFAR">
				<label>EFAR SLC90E66 support</label>
				<help>This option enables support for the EFAR SLC90E66
IDE controller found on some older machines.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_EP93XX">
				<label>Cirrus Logic EP93xx PATA support</label>
				<help>This option enables support for the PATA controller in
the Cirrus Logic EP9312 and EP9315 ARM CPU.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_HPT366">
				<label>HPT 366/368 PATA support</label>
				<help>This option enables support for the HPT 366 and 368
PATA controllers via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_HPT37X">
				<label>HPT 370/370A/371/372/374/302 PATA support</label>
				<help>This option enables support for the majority of the later HPT
PATA controllers via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_HPT3X2N">
				<label>HPT 371N/372N/302N PATA support</label>
				<help>This option enables support for the N variant HPT PATA
controllers via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_HPT3X3">
				<label>HPT 343/363 PATA support</label>
				<help>This option enables support for the HPT 343/363
PATA controllers via the new ATA layer

If unsure, say N.</help>
			</entry>
			<entry name="PATA_HPT3X3_DMA">
				<label>HPT 343/363 DMA support</label>
				<help>This option enables DMA support for the HPT343/363
controllers. Enable with care as there are still some
problems with DMA on this chipset.</help>
			</entry>
			<entry name="PATA_ICSIDE">
				<label>Acorn ICS PATA support</label>
				<help>On Acorn systems, say Y here if you wish to use the ICS PATA
interface card.  This is not required for ICS partition support.
If you are unsure, say N to this.</help>
			</entry>
			<entry name="PATA_IMX">
				<label>PATA support for Freescale iMX</label>
				<help>This option enables support for the PATA host available on Freescale
iMX SoCs.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_IT8213">
				<label>IT8213 PATA support (Experimental)</label>
				<help>This option enables support for the ITE 821 PATA
controllers via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_IT821X">
				<label>IT8211/2 PATA support</label>
				<help>This option enables support for the ITE 8211 and 8212
PATA controllers via the new ATA layer, including RAID
mode.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_JMICRON">
				<label>JMicron PATA support</label>
				<help>Enable support for the JMicron IDE controller, via the new
ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_MACIO">
				<label>Apple PowerMac/PowerBook internal 'MacIO' IDE</label>
				<help>Most IDE capable PowerMacs have IDE busses driven by a variant
of this controller which is part of the Apple chipset used on
most PowerMac models. Some models have multiple busses using
different chipsets, though generally, MacIO is one of them.</help>
			</entry>
			<entry name="PATA_MARVELL">
				<label>Marvell PATA support via legacy mode</label>
				<help>This option enables limited support for the Marvell 88SE61xx ATA
controllers. If you wish to use only the SATA ports then select
the AHCI driver alone. If you wish to the use the PATA port or
both SATA and PATA include this driver.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_MPC52xx">
				<label>Freescale MPC52xx SoC internal IDE</label>
				<help>This option enables support for integrated IDE controller
of the Freescale MPC52xx SoC.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_NETCELL">
				<label>NETCELL Revolution RAID support</label>
				<help>This option enables support for the Netcell Revolution RAID
PATA controller.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_NINJA32">
				<label>Ninja32/Delkin Cardbus ATA support</label>
				<help>This option enables support for the Ninja32, Delkin and
possibly other brands of Cardbus ATA adapter

If unsure, say N.</help>
			</entry>
			<entry name="PATA_NS87415">
				<label>Nat Semi NS87415 PATA support</label>
				<help>This option enables support for the National Semiconductor
NS87415 PCI-IDE controller.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_OLDPIIX">
				<label>Intel PATA old PIIX support</label>
				<help>This option enables support for early PIIX PATA support.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_OPTIDMA">
				<label>OPTI FireStar PATA support (Very Experimental)</label>
				<help>This option enables DMA/PIO support for the later OPTi
controllers found on some old motherboards and in some
laptops.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PDC2027X">
				<label>Promise PATA 2027x support</label>
				<help>This option enables support for Promise PATA pdc20268 to pdc20277 host adapters.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PDC_OLD">
				<label>Older Promise PATA controller support</label>
				<help>This option enables support for the Promise 20246, 20262, 20263,
20265 and 20267 adapters.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_RADISYS">
				<label>RADISYS 82600 PATA support (Experimental)</label>
				<help>This option enables support for the RADISYS 82600
PATA controllers via the new ATA layer

If unsure, say N.</help>
			</entry>
			<entry name="PATA_RDC">
				<label>RDC PATA support</label>
				<help>This option enables basic support for the later RDC PATA controllers
controllers via the new ATA layer. For the RDC 1010, you need to
enable the IT821X driver instead.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SC1200">
				<label>SC1200 PATA support</label>
				<help>This option enables support for the NatSemi/AMD SC1200 SoC
companion chip used with the Geode processor family.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SCH">
				<label>Intel SCH PATA support</label>
				<help>This option enables support for Intel SCH PATA on the Intel
SCH (US15W, US15L, UL11L) series host controllers.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SERVERWORKS">
				<label>SERVERWORKS OSB4/CSB5/CSB6/HT1000 PATA support</label>
				<help>This option enables support for the Serverworks OSB4/CSB5/CSB6 and
HT1000 PATA controllers, via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SIL680">
				<label>CMD / Silicon Image 680 PATA support</label>
				<help>This option enables support for CMD / Silicon Image 680 PATA.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SIS">
				<label>SiS PATA support</label>
				<help>This option enables support for SiS PATA controllers

If unsure, say N.</help>
			</entry>
			<entry name="PATA_TOSHIBA">
				<label>Toshiba Piccolo support (Experimental)</label>
				<help>Support for the Toshiba Piccolo controllers. Currently only the
primary channel is supported by this driver.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_TRIFLEX">
				<label>Compaq Triflex PATA support</label>
				<help>Enable support for the Compaq 'Triflex' IDE controller as found
on many Compaq Pentium-Pro systems, via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_VIA">
				<label>VIA PATA support</label>
				<help>This option enables support for the VIA PATA interfaces
found on the many VIA chipsets.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PXA">
				<label>PXA DMA-capable PATA support</label>
				<help>This option enables support for harddrive attached to PXA CPU's bus.

NOTE: This driver utilizes PXA DMA controller, in case your hardware
is not capable of doing MWDMA, use pata_platform instead.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_WINBOND">
				<label>Winbond SL82C105 PATA support</label>
				<help>This option enables support for SL82C105 PATA devices found in the
Netwinder and some other systems

If unsure, say N.</help>
			</entry>
			<entry name="PATA_AT32">
				<label>Atmel AVR32 PATA support (Experimental)</label>
				<help>This option enables support for the IDE devices on the
Atmel AT32AP platform.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_AT91">
				<label>PATA support for AT91SAM9260</label>
				<help>This option enables support for IDE devices on the Atmel AT91SAM9260 SoC.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_CMD640_PCI">
				<label>CMD640 PCI PATA support (Experimental)</label>
				<help>This option enables support for the CMD640 PCI IDE
interface chip. Only the primary channel is currently
supported.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_ISAPNP">
				<label>ISA Plug and Play PATA support</label>
				<help>This option enables support for ISA plug &amp; play ATA
controllers such as those found on old soundcards.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_IXP4XX_CF">
				<label>IXP4XX Compact Flash support</label>
				<help>This option enables support for a Compact Flash connected on
the ixp4xx expansion bus. This driver had been written for
Loft/Avila boards in mind but can work with others.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_MPIIX">
				<label>Intel PATA MPIIX support</label>
				<help>This option enables support for MPIIX PATA support.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_NS87410">
				<label>Nat Semi NS87410 PATA support</label>
				<help>This option enables support for the National Semiconductor
NS87410 PCI-IDE controller.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_OPTI">
				<label>OPTI621/6215 PATA support (Very Experimental)</label>
				<help>This option enables full PIO support for the early Opti ATA
controllers found on some old motherboards.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PALMLD">
				<label>Palm LifeDrive PATA support</label>
				<help>This option enables support for Palm LifeDrive's internal ATA
port via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PCMCIA">
				<label>PCMCIA PATA support</label>
				<help>This option enables support for PCMCIA ATA interfaces, including
compact flash card adapters via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_PLATFORM">
				<label>Generic platform device PATA support</label>
				<help>This option enables support for generic directly connected ATA
devices commonly found on embedded systems.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_OF_PLATFORM">
				<label>OpenFirmware platform device PATA support</label>
				<help>This option enables support for generic directly connected ATA
devices commonly found on embedded systems with OpenFirmware
bindings.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_QDI">
				<label>QDI VLB PATA support</label>
				<help>Support for QDI 6500 and 6580 PATA controllers on VESA local bus.</help>
			</entry>
			<entry name="PATA_RB532">
				<label>RouterBoard 532 PATA CompactFlash support</label>
				<help>This option enables support for the RouterBoard 532
PATA CompactFlash controller.

If unsure, say N.</help>
			</entry>
			<entry name="PATA_RZ1000">
				<label>PC Tech RZ1000 PATA support</label>
				<help>This option enables basic support for the PC Tech RZ1000/1
PATA controllers via the new ATA layer

If unsure, say N.</help>
			</entry>
			<entry name="PATA_SAMSUNG_CF">
				<label>Samsung SoC PATA support</label>
				<help>This option enables basic support for Samsung's S3C/S5P board
PATA controllers via the new ATA layer

If unsure, say N.</help>
			</entry>
			<entry name="PATA_WINBOND_VLB">
				<label>Winbond W83759A VLB PATA support (Experimental)</label>
				<help>Support for the Winbond W83759A controller on Vesa Local Bus
systems.</help>
			</entry>
			<entry name="PATA_ACPI">
				<label>ACPI firmware driver for PATA</label>
				<help>This option enables an ACPI method driver which drives
motherboard PATA controller interfaces through the ACPI
firmware in the BIOS. This driver can sometimes handle
otherwise unsupported hardware.</help>
			</entry>
			<entry name="ATA_GENERIC">
				<label>Generic ATA support</label>
				<help>This option enables support for generic BIOS configured
ATA controllers via the new ATA layer

If unsure, say N.</help>
			</entry>
			<entry name="PATA_LEGACY">
				<label>Legacy ISA PATA support (Experimental)</label>
				<help>This option enables support for ISA/VLB/PCI bus legacy PATA
ports and allows them to be accessed via the new ATA layer.

If unsure, say N.</help>
			</entry>
			<entry name="MD">
				<label>Multiple devices driver support (RAID and LVM)</label>
				<help>Support multiple physical spindles through a single logical device.
Required for RAID and logical volume management.</help>
			</entry>
			<entry name="BLK_DEV_MD">
				<label>RAID support</label>
				<help>This driver lets you combine several hard disk partitions into one
logical block device. This can be used to simply append one
partition to another one or to combine several redundant hard disks
into a RAID1/4/5 device so as to provide protection against hard
disk failures. This is called &quot;Software RAID&quot; since the combining of
the partitions is done by the kernel. &quot;Hardware RAID&quot; means that the
combining is done by a dedicated controller; if you have such a
controller, you do not need to say Y here.

More information about Software RAID on Linux is contained in the
Software RAID mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. There you will also learn
where to get the supporting user space utilities raidtools.

If unsure, say N.</help>
			</entry>
			<entry name="MD_AUTODETECT">
				<label>Autodetect RAID arrays during kernel boot</label>
				<help>If you say Y here, then the kernel will try to autodetect raid
arrays as part of its boot process.

If you don't use raid and say Y, this autodetection can cause
a several-second delay in the boot time due to various
synchronisation steps that are part of this step.

If unsure, say Y.</help>
			</entry>
			<entry name="MD_LINEAR">
				<label>Linear (append) mode</label>
				<help>If you say Y here, then your multiple devices driver will be able to
use the so-called linear mode, i.e. it will combine the hard disk
partitions by simply appending one to the other.

To compile this as a module, choose M here: the module
will be called linear.

If unsure, say Y.</help>
			</entry>
			<entry name="MD_RAID0">
				<label>RAID-0 (striping) mode</label>
				<help>If you say Y here, then your multiple devices driver will be able to
use the so-called raid0 mode, i.e. it will combine the hard disk
partitions into one logical device in such a fashion as to fill them
up evenly, one chunk here and one chunk there. This will increase
the throughput rate if the partitions reside on distinct disks.

Information about Software RAID on Linux is contained in the
Software-RAID mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. There you will also
learn where to get the supporting user space utilities raidtools.

To compile this as a module, choose M here: the module
will be called raid0.

If unsure, say Y.</help>
			</entry>
			<entry name="MD_RAID1">
				<label>RAID-1 (mirroring) mode</label>
				<help>A RAID-1 set consists of several disk drives which are exact copies
of each other.  In the event of a mirror failure, the RAID driver
will continue to use the operational mirrors in the set, providing
an error free MD (multiple device) to the higher levels of the
kernel.  In a set with N drives, the available space is the capacity
of a single drive, and the set protects against a failure of (N - 1)
drives.

Information about Software RAID on Linux is contained in the
Software-RAID mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  There you will also
learn where to get the supporting user space utilities raidtools.

If you want to use such a RAID-1 set, say Y.  To compile this code
as a module, choose M here: the module will be called raid1.

If unsure, say Y.</help>
			</entry>
			<entry name="MD_RAID10">
				<label>RAID-10 (mirrored striping) mode</label>
				<help>RAID-10 provides a combination of striping (RAID-0) and
mirroring (RAID-1) with easier configuration and more flexible
layout.
Unlike RAID-0, but like RAID-1, RAID-10 requires all devices to
be the same size (or at least, only as much as the smallest device
will be used).
RAID-10 provides a variety of layouts that provide different levels
of redundancy and performance.

RAID-10 requires mdadm-1.7.0 or later, available at:

ftp://ftp.kernel.org/pub/linux/utils/raid/mdadm/

If unsure, say Y.</help>
			</entry>
			<entry name="MD_RAID456">
				<label>RAID-4/RAID-5/RAID-6 mode</label>
				<help>A RAID-5 set of N drives with a capacity of C MB per drive provides
the capacity of C * (N - 1) MB, and protects against a failure
of a single drive. For a given sector (row) number, (N - 1) drives
contain data sectors, and one drive contains the parity protection.
For a RAID-4 set, the parity blocks are present on a single drive,
while a RAID-5 set distributes the parity across the drives in one
of the available parity distribution methods.

A RAID-6 set of N drives with a capacity of C MB per drive
provides the capacity of C * (N - 2) MB, and protects
against a failure of any two drives. For a given sector
(row) number, (N - 2) drives contain data sectors, and two
drives contains two independent redundancy syndromes.  Like
RAID-5, RAID-6 distributes the syndromes across the drives
in one of the available parity distribution methods.

Information about Software RAID on Linux is contained in the
Software-RAID mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. There you will also
learn where to get the supporting user space utilities raidtools.

If you want to use such a RAID-4/RAID-5/RAID-6 set, say Y.  To
compile this code as a module, choose M here: the module
will be called raid456.

If unsure, say Y.</help>
			</entry>
			<entry name="MD_MULTIPATH">
				<label>Multipath I/O support</label>
				<help>MD_MULTIPATH provides a simple multi-path personality for use
the MD framework.  It is not under active development.  New
projects should consider using DM_MULTIPATH which has more
features and more testing.

If unsure, say N.</help>
			</entry>
			<entry name="MD_FAULTY">
				<label>Faulty test module for MD</label>
				<help>The &quot;faulty&quot; module allows for a block device that occasionally returns
read or write errors.  It is useful for testing.

In unsure, say N.</help>
			</entry>
			<entry name="MD_CLUSTER">
				<label>Cluster Support for MD (EXPERIMENTAL)</label>
				<help>Clustering support for MD devices. This enables locking and
synchronization across multiple systems on the cluster, so all
nodes in the cluster can access the MD devices simultaneously.

This brings the redundancy (and uptime) of RAID levels across the
nodes of the cluster.

If unsure, say N.</help>
			</entry>
			<entry name="BCACHE">
				<label>Block device as cache</label>
				<help>Allows a block device to be used as cache for other devices; uses
a btree for indexing and the layout is optimized for SSDs.

See Documentation/bcache.txt for details.</help>
			</entry>
			<entry name="BCACHE_DEBUG">
				<label>Bcache debugging</label>
				<help>Don't select this option unless you're a developer

Enables extra debugging tools, allows expensive runtime checks to be
turned on.</help>
			</entry>
			<entry name="BCACHE_CLOSURES_DEBUG">
				<label>Debug closures</label>
				<help>Keeps all active closures in a linked list and provides a debugfs
interface to list them, which makes it possible to see asynchronous
operations that get stuck.
</help>
			</entry>
			<entry name="BLK_DEV_DM_BUILTIN"/>
			<entry name="BLK_DEV_DM">
				<label>Device mapper support</label>
				<help>Device-mapper is a low level volume manager.  It works by allowing
people to specify mappings for ranges of logical sectors.  Various
mapping types are available, in addition people may write their own
modules containing custom mappings if they wish.

Higher level volume managers such as LVM2 use this driver.

To compile this as a module, choose M here: the module will be
called dm-mod.

If unsure, say N.</help>
			</entry>
			<entry name="DM_MQ_DEFAULT">
				<label>request-based DM: use blk-mq I/O path by default</label>
				<help>This option enables the blk-mq based I/O path for request-based
DM devices by default.  With the option the dm_mod.use_blk_mq
module/boot option defaults to Y, without it to N, but it can
still be overriden either way.

If unsure say N.</help>
			</entry>
			<entry name="DM_DEBUG">
				<label>Device mapper debugging support</label>
				<help>Enable this for messages that may help debug device-mapper problems.

If unsure, say N.</help>
			</entry>
			<entry name="DM_BUFIO">
				<help>This interface allows you to do buffered I/O on a device and acts
as a cache, holding recently-read blocks in memory and performing
delayed writes.</help>
			</entry>
			<entry name="DM_DEBUG_BLOCK_STACK_TRACING">
				<label>Keep stack trace of persistent data block lock holders</label>
				<help>Enable this for messages that may help debug problems with the
block manager locking used by thin provisioning and caching.

If unsure, say N.</help>
			</entry>
			<entry name="DM_BIO_PRISON">
				<help>Some bio locking schemes used by other device-mapper targets
including thin provisioning.</help>
			</entry>
			<entry name="DM_PERSISTENT_DATA">
				<help>Library providing immutable on-disk data structure support for
device-mapper targets such as the thin provisioning target.

</help>
			</entry>
			<entry name="DM_CRYPT">
				<label>Crypt target support</label>
				<help>This device-mapper target allows you to create a device that
transparently encrypts the data on it. You'll need to activate
the ciphers you're going to use in the cryptoapi configuration.

For further information on dm-crypt and userspace tools see:
&lt;https://gitlab.com/cryptsetup/cryptsetup/wikis/DMCrypt&gt;

To compile this code as a module, choose M here: the module will
be called dm-crypt.

If unsure, say N.</help>
			</entry>
			<entry name="DM_SNAPSHOT">
				<label>Snapshot target</label>
				<help>Allow volume managers to take writable snapshots of a device.</help>
			</entry>
			<entry name="DM_THIN_PROVISIONING">
				<label>Thin provisioning target</label>
				<help>Provides thin provisioning and snapshots that share a data store.</help>
			</entry>
			<entry name="DM_CACHE">
				<label>Cache target (EXPERIMENTAL)</label>
				<help>dm-cache attempts to improve performance of a block device by
moving frequently used data to a smaller, higher performance
device.  Different 'policy' plugins can be used to change the
algorithms used to select which blocks are promoted, demoted,
cleaned etc.  It supports writeback and writethrough modes.</help>
			</entry>
			<entry name="DM_CACHE_SMQ">
				<label>Stochastic MQ Cache Policy (EXPERIMENTAL)</label>
				<help>A cache policy that uses a multiqueue ordered by recent hits
to select which blocks should be promoted and demoted.
This is meant to be a general purpose policy.  It prioritises
reads over writes.  This SMQ policy (vs MQ) offers the promise
of less memory utilization, improved performance and increased
adaptability in the face of changing workloads.</help>
			</entry>
			<entry name="DM_CACHE_CLEANER">
				<label>Cleaner Cache Policy (EXPERIMENTAL)</label>
				<help>A simple cache policy that writes back all data to the
origin.  Used when decommissioning a dm-cache.</help>
			</entry>
			<entry name="DM_ERA">
				<label>Era target (EXPERIMENTAL)</label>
				<help>dm-era tracks which parts of a block device are written to
over time.  Useful for maintaining cache coherency when using
vendor snapshots.</help>
			</entry>
			<entry name="DM_MIRROR">
				<label>Mirror target</label>
				<help>Allow volume managers to mirror logical volumes, also
needed for live data migration tools such as 'pvmove'.</help>
			</entry>
			<entry name="DM_LOG_USERSPACE">
				<label>Mirror userspace logging</label>
				<help>The userspace logging module provides a mechanism for
relaying the dm-dirty-log API to userspace.  Log designs
which are more suited to userspace implementation (e.g.
shared storage logs) or experimental logs can be implemented
by leveraging this framework.</help>
			</entry>
			<entry name="DM_RAID">
				<label>RAID 1/4/5/6/10 target</label>
				<help>A dm target that supports RAID1, RAID10, RAID4, RAID5 and RAID6 mappings

A RAID-5 set of N drives with a capacity of C MB per drive provides
the capacity of C * (N - 1) MB, and protects against a failure
of a single drive. For a given sector (row) number, (N - 1) drives
contain data sectors, and one drive contains the parity protection.
For a RAID-4 set, the parity blocks are present on a single drive,
while a RAID-5 set distributes the parity across the drives in one
of the available parity distribution methods.

A RAID-6 set of N drives with a capacity of C MB per drive
provides the capacity of C * (N - 2) MB, and protects
against a failure of any two drives. For a given sector
(row) number, (N - 2) drives contain data sectors, and two
drives contains two independent redundancy syndromes.  Like
RAID-5, RAID-6 distributes the syndromes across the drives
in one of the available parity distribution methods.</help>
			</entry>
			<entry name="DM_ZERO">
				<label>Zero target</label>
				<help>A target that discards writes, and returns all zeroes for
reads.  Useful in some recovery situations.</help>
			</entry>
			<entry name="DM_MULTIPATH">
				<label>Multipath target</label>
				<help>Allow volume managers to support multipath hardware.</help>
			</entry>
			<entry name="DM_MULTIPATH_QL">
				<label>I/O Path Selector based on the number of in-flight I/Os</label>
				<help>This path selector is a dynamic load balancer which selects
the path with the least number of in-flight I/Os.

If unsure, say N.</help>
			</entry>
			<entry name="DM_MULTIPATH_ST">
				<label>I/O Path Selector based on the service time</label>
				<help>This path selector is a dynamic load balancer which selects
the path expected to complete the incoming I/O in the shortest
time.

If unsure, say N.</help>
			</entry>
			<entry name="DM_DELAY">
				<label>I/O delaying target</label>
				<help>A target that delays reads and/or writes and can send
them to different devices.  Useful for testing.

If unsure, say N.</help>
			</entry>
			<entry name="DM_UEVENT">
				<label>DM uevents</label>
				<help>Generate udev events for DM events.</help>
			</entry>
			<entry name="DM_FLAKEY">
				<label>Flakey target</label>
				<help>A target that intermittently fails I/O for debugging purposes.</help>
			</entry>
			<entry name="DM_VERITY">
				<label>Verity target support</label>
				<help>This device-mapper target creates a read-only device that
transparently validates the data on one underlying device against
a pre-generated tree of cryptographic checksums stored on a second
device.

You'll need to activate the digests you're going to use in the
cryptoapi configuration.

To compile this code as a module, choose M here: the module will
be called dm-verity.

If unsure, say N.</help>
			</entry>
			<entry name="DM_VERITY_FEC">
				<label>Verity forward error correction support</label>
				<help>Add forward error correction support to dm-verity. This option
makes it possible to use pre-generated error correction data to
recover from corrupted blocks.

If unsure, say N.</help>
			</entry>
			<entry name="DM_SWITCH">
				<label>Switch target support (EXPERIMENTAL)</label>
				<help>This device-mapper target creates a device that supports an arbitrary
mapping of fixed-size regions of I/O across a fixed set of paths.
The path used for any specific region can be switched dynamically
by sending the target a message.

To compile this code as a module, choose M here: the module will
be called dm-switch.

If unsure, say N.</help>
			</entry>
			<entry name="DM_LOG_WRITES">
				<label>Log writes target support</label>
				<help>This device-mapper target takes two devices, one device to use
normally, one to log all write operations done to the first device.
This is for use by file system developers wishing to verify that
their fs is writing a consistent file system at all times by allowing
them to replay the log in a variety of ways and to check the
contents.

To compile this code as a module, choose M here: the module will
be called dm-log-writes.

If unsure, say N.</help>
			</entry>
			<entry name="TARGET_CORE">
				<label>Generic Target Core Mod (TCM) and ConfigFS Infrastructure</label>
				<help>Say Y or M here to enable the TCM Storage Engine and ConfigFS enabled
control path for target_core_mod.  This includes built-in TCM RAMDISK
subsystem logic for virtual LUN 0 access</help>
			</entry>
			<entry name="TCM_IBLOCK">
				<label>TCM/IBLOCK Subsystem Plugin for Linux/BLOCK</label>
				<help>Say Y here to enable the TCM/IBLOCK subsystem plugin for non-buffered
access to Linux/Block devices using BIO</help>
			</entry>
			<entry name="TCM_FILEIO">
				<label>TCM/FILEIO Subsystem Plugin for Linux/VFS</label>
				<help>Say Y here to enable the TCM/FILEIO subsystem plugin for buffered
access to Linux/VFS struct file or struct block_device</help>
			</entry>
			<entry name="TCM_PSCSI">
				<label>TCM/pSCSI Subsystem Plugin for Linux/SCSI</label>
				<help>Say Y here to enable the TCM/pSCSI subsystem plugin for non-buffered
passthrough access to Linux/SCSI device</help>
			</entry>
			<entry name="TCM_USER2">
				<label>TCM/USER Subsystem Plugin for Linux</label>
				<help>Say Y here to enable the TCM/USER subsystem plugin for a userspace
process to handle requests. This is version 2 of the ABI; version 1
is obsolete.</help>
			</entry>
			<entry name="LOOPBACK_TARGET">
				<label>TCM Virtual SAS target and Linux/SCSI LDD fabric loopback module</label>
				<help>Say Y here to enable the TCM Virtual SAS target and Linux/SCSI LLD
fabric loopback module.
</help>
			</entry>
			<entry name="TCM_FC">
				<label>TCM_FC fabric Plugin</label>
				<help>Say Y here to enable the TCM FC plugin for accessing FC fabrics in TCM
</help>
			</entry>
			<entry name="ISCSI_TARGET">
				<label>Linux-iSCSI.org iSCSI Target Mode Stack</label>
				<help>Say M here to enable the ConfigFS enabled Linux-iSCSI.org iSCSI
Target Mode Stack.</help>
			</entry>
			<entry name="ISCSI_TARGET_CXGB4">
				<label>Chelsio iSCSI target offload driver</label>
				<help>To compile this driver as module, choose M here: the module
will be called cxgbit.
</help>
			</entry>
			<entry name="SBP_TARGET">
				<label>FireWire SBP-2 fabric module</label>
				<help>Say Y or M here to enable SCSI target functionality over FireWire.
This enables you to expose SCSI devices to other nodes on the FireWire
bus, for example hard disks. Similar to FireWire Target Disk mode on
many Apple computers.

To compile this driver as a module, say M here: The module will be
called sbp-target.
</help>
			</entry>
			<entry name="FUSION">
				<label>Fusion MPT device support</label>
				<help>Say Y here to get to see options for Fusion Message
Passing Technology (MPT) drivers.
This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="FUSION_SPI">
				<label>Fusion MPT ScsiHost drivers for SPI</label>
				<help>SCSI HOST support for a parallel SCSI host adapters.

List of supported controllers:

LSI53C1020
LSI53C1020A
LSI53C1030
LSI53C1035
ATTO UL4D</help>
			</entry>
			<entry name="FUSION_FC">
				<label>Fusion MPT ScsiHost drivers for FC</label>
				<help>SCSI HOST support for a Fiber Channel host adapters.

List of supported controllers:

LSIFC909
LSIFC919
LSIFC919X
LSIFC929
LSIFC929X
LSIFC929XL
LSIFC949X
LSIFC949E
Brocade FC 410/420</help>
			</entry>
			<entry name="FUSION_SAS">
				<label>Fusion MPT ScsiHost drivers for SAS</label>
				<help>SCSI HOST support for a SAS host adapters.

List of supported controllers:

LSISAS1064
LSISAS1068
LSISAS1064E
LSISAS1068E
LSISAS1078</help>
			</entry>
			<entry name="FUSION_MAX_SGE">
				<label>Maximum number of scatter gather entries (16 - 128)</label>
				<help>This option allows you to specify the maximum number of scatter-
gather entries per I/O. The driver default is 128, which matches
SCSI_MAX_PHYS_SEGMENTS. However, it may decreased down to 16.
Decreasing this parameter will reduce memory requirements
on a per controller instance.</help>
			</entry>
			<entry name="FUSION_CTL">
				<label>Fusion MPT misc device (ioctl) driver</label>
				<help>The Fusion MPT misc device driver provides specialized control
of MPT adapters via system ioctl calls.  Use of ioctl calls to
the MPT driver requires that you create and use a misc device
node ala:
mknod /dev/mptctl c 10 240

One use of this ioctl interface is to perform an upgrade (reflash)
of the MPT adapter firmware.  Refer to readme file(s) distributed
with the Fusion MPT linux driver for additional details.

If enabled by saying M to this, a driver named: mptctl
will be compiled.

If unsure whether you really want or need this, say N.</help>
			</entry>
			<entry name="FUSION_LAN">
				<label>Fusion MPT LAN driver</label>
				<help>This module supports LAN IP traffic over Fibre Channel port(s)
on Fusion MPT compatible hardware (LSIFC9xx chips).
The physical interface used is defined in RFC 2625.
Please refer to that document for details.

Installing this driver requires the knowledge to configure and
activate a new network interface, &quot;fc0&quot;, using standard Linux tools.

If enabled by saying M to this, a driver named: mptlan
will be compiled.

If unsure whether you really want or need this, say N.</help>
			</entry>
			<entry name="FUSION_LOGGING">
				<label>Fusion MPT logging facility</label>
				<help>This turns on a logging facility that can be used to debug a number
of Fusion MPT related problems.

The debug level can be programmed on the fly via SysFS (hex values)

echo [level] &gt; /sys/class/scsi_host/host#/debug_level

There are various debug levels that can be found in the source:
file:drivers/message/fusion/mptdebug.h</help>
			</entry>
			<container name="IEEE_1394_FireWire_support">
				<label>IEEE 1394 (FireWire) support</label>
				<entry name="FIREWIRE">
					<label>FireWire driver stack</label>
					<help>This is the new-generation IEEE 1394 (FireWire) driver stack
a.k.a. Juju, a new implementation designed for robustness and
simplicity.
See http://ieee1394.wiki.kernel.org/index.php/Juju_Migration
for information about migration from the older Linux 1394 stack
to the new driver stack.

To compile this driver as a module, say M here: the module will be
called firewire-core.</help>
				</entry>
				<entry name="FIREWIRE_OHCI">
					<label>OHCI-1394 controllers</label>
					<help>Enable this driver if you have a FireWire controller based
on the OHCI specification.  For all practical purposes, this
is the only chipset in use, so say Y here.

To compile this driver as a module, say M here:  The module will be
called firewire-ohci.</help>
				</entry>
				<entry name="FIREWIRE_SBP2">
					<label>Storage devices (SBP-2 protocol)</label>
					<help>This option enables you to use SBP-2 devices connected to a
FireWire bus.  SBP-2 devices include storage devices like
harddisks and DVD drives, also some other FireWire devices
like scanners.

To compile this driver as a module, say M here:  The module will be
called firewire-sbp2.

You should also enable support for disks, CD-ROMs, etc. in the SCSI
configuration section.</help>
				</entry>
				<entry name="FIREWIRE_NET">
					<label>IP networking over 1394</label>
					<help>This enables IPv4/IPv6 over IEEE 1394, providing IP connectivity
with other implementations of RFC 2734/3146 as found on several
operating systems.  Multicast support is currently limited.

To compile this driver as a module, say M here:  The module will be
called firewire-net.</help>
				</entry>
				<entry name="FIREWIRE_NOSY">
					<label>Nosy - a FireWire traffic sniffer for PCILynx cards</label>
					<help>Nosy is an IEEE 1394 packet sniffer that is used for protocol
analysis and in development of IEEE 1394 drivers, applications,
or firmwares.

This driver lets you use a Texas Instruments PCILynx 1394 to PCI
link layer controller TSB12LV21/A/B as a low-budget bus analyzer.
PCILynx is a nowadays very rare IEEE 1394 controller which is
not OHCI 1394 compliant.

The following cards are known to be based on PCILynx or PCILynx-2:
IOI IOI-1394TT (PCI card), Unibrain Fireboard 400 PCI Lynx-2
(PCI card), Newer Technology FireWire 2 Go (CardBus card),
Apple Power Mac G3 blue &amp; white and G4 with PCI graphics
(onboard controller).

To compile this driver as a module, say M here:  The module will be
called nosy.  Source code of a userspace interface to nosy, called
nosy-dump, can be found in tools/firewire/ of the kernel sources.

If unsure, say N.</help>
				</entry>
			</container>
			<entry name="MACINTOSH_DRIVERS">
				<label>Macintosh device drivers</label>
				<help>Say Y here to get to see options for devices used with Macintosh
computers. This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="ADB">
				<label>Apple Desktop Bus (ADB) support</label>
				<help>Apple Desktop Bus (ADB) support is for support of devices which
are connected to an ADB port.  ADB devices tend to have 4 pins.
If you have an Apple Macintosh prior to the iMac, an iBook or
PowerBook, or a &quot;Blue and White G3&quot;, you probably want to say Y
here.  Otherwise say N.</help>
			</entry>
			<entry name="ADB_MACII">
				<label>Include Mac II ADB driver</label>
				<help>Say Y here if want your kernel to support Macintosh systems that use
the Mac II style ADB.  This includes the II, IIx, IIcx, SE/30, IIci,
Quadra 610, Quadra 650, Quadra 700, Quadra 800, Centris 610 and
Centris 650.</help>
			</entry>
			<entry name="ADB_MACIISI">
				<label>Include Mac IIsi ADB driver</label>
				<help>Say Y here if want your kernel to support Macintosh systems that use
the Mac IIsi style ADB.  This includes the IIsi, IIvi, IIvx, Classic
II, LC, LC II, LC III, Performa 460, and the Performa 600.</help>
			</entry>
			<entry name="ADB_IOP">
				<label>Include IOP (IIfx/Quadra 9x0) ADB driver</label>
				<help>The I/O Processor (IOP) is an Apple custom IC designed to provide
intelligent support for I/O controllers.  It is described at
&lt;http://www.angelfire.com/ca2/dev68k/iopdesc.html&gt; to enable direct
support for it, say 'Y' here.</help>
			</entry>
			<entry name="ADB_PMU68K">
				<label>Include PMU (Powerbook) ADB driver</label>
				<help>Say Y here if want your kernel to support the m68k based Powerbooks.
This includes the PowerBook 140, PowerBook 145, PowerBook 150,
PowerBook 160, PowerBook 165, PowerBook 165c, PowerBook 170,
PowerBook 180, PowerBook, 180c, PowerBook 190cs, PowerBook 520,
PowerBook Duo 210, PowerBook Duo 230, PowerBook Duo 250,
PowerBook Duo 270c, PowerBook Duo 280 and PowerBook Duo 280c.</help>
			</entry>
			<entry name="ADB_CUDA">
				<label>Support for CUDA based Macs and PowerMacs</label>
				<help>This provides support for CUDA based Macintosh and Power Macintosh
systems.  This includes many m68k based Macs (Color Classic, Mac TV,
Performa 475, Performa 520, Performa 550, Performa 575,
Performa 588, Quadra 605, Quadra 630, Quadra/Centris 660AV, and
Quadra 840AV), most OldWorld PowerMacs, the first generation iMacs,
the Blue&amp;White G3 and the &quot;Yikes&quot; G4 (PCI Graphics).  All later
models should use CONFIG_ADB_PMU instead.  It is safe to say Y here
even if your machine doesn't have a CUDA.

If unsure say Y.</help>
			</entry>
			<entry name="ADB_PMU">
				<label>Support for PMU  based PowerMacs</label>
				<help>On PowerBooks, iBooks, and recent iMacs and Power Macintoshes, the
PMU is an embedded microprocessor whose primary function is to
control system power, and battery charging on the portable models.
The PMU also controls the ADB (Apple Desktop Bus) which connects to
the keyboard and mouse on some machines, as well as the non-volatile
RAM and the RTC (real time clock) chip.  Say Y to enable support for
this device; you should do so if your machine is one of those
mentioned above.</help>
			</entry>
			<entry name="ADB_PMU_LED">
				<label>Support for the Power/iBook front LED</label>
				<help>Support the front LED on Power/iBooks as a generic LED that can
be triggered by any of the supported triggers. To get the
behaviour of the old CONFIG_BLK_DEV_IDE_PMAC_BLINK, select this
and the disk LED trigger and configure appropriately through sysfs.</help>
			</entry>
			<entry name="ADB_PMU_LED_DISK">
				<label>Use front LED as DISK LED by default</label>
				<help>This option makes the front LED default to the disk trigger
so that it blinks on disk activity.</help>
			</entry>
			<entry name="PMAC_SMU">
				<label>Support for SMU  based PowerMacs</label>
				<help>This option adds support for the newer G5 iMacs and PowerMacs based
on the &quot;SMU&quot; system control chip which replaces the old PMU.
If you don't know, say Y.</help>
			</entry>
			<entry name="PMAC_APM_EMU">
				<label>APM emulation</label>
			</entry>
			<entry name="PMAC_MEDIABAY">
				<label>Support PowerBook hotswap media bay</label>
				<help>This option adds support for older PowerBook's hotswap media bay
that can contains batteries, floppy drives, or IDE devices. PCI
devices are not fully supported in the bay as I never had one to
try with</help>
			</entry>
			<entry name="PMAC_BACKLIGHT">
				<label>Backlight control for LCD screens</label>
				<help>Say Y here to enable Macintosh specific extensions of the generic
backlight code. With this enabled, the brightness keys on older
PowerBooks will be enabled so you can change the screen brightness.
Newer models should use a userspace daemon like pbbuttonsd.</help>
			</entry>
			<entry name="PMAC_BACKLIGHT_LEGACY">
				<label>Provide legacy ioctl's on /dev/pmu for the backlight</label>
				<help>Say Y if you want to enable legacy ioctl's on /dev/pmu. This is for
programs which use this old interface. New and updated programs
should use the backlight classes in sysfs.</help>
			</entry>
			<entry name="ADB_MACIO">
				<label>Include MacIO (CHRP) ADB driver</label>
				<help>Say Y here to include direct support for the ADB controller in the
Hydra chip used on PowerPC Macintoshes of the CHRP type.  (The Hydra
also includes a MESH II SCSI controller, DBDMA controller, VIA chip,
OpenPIC controller and two RS422/Geoports.)</help>
			</entry>
			<entry name="INPUT_ADBHID">
				<label>Support for ADB input devices (keyboard, mice, ...)</label>
				<help>Say Y here if you want to have ADB (Apple Desktop Bus) HID devices
such as keyboards, mice, joysticks, trackpads  or graphic tablets
handled by the input layer.  If you say Y here, make sure to say Y to
the corresponding drivers &quot;Mouse Support&quot; (CONFIG_INPUT_MOUSEDEV) and
&quot;Event interface support&quot; (CONFIG_INPUT_EVDEV) as well.

If unsure, say Y.</help>
			</entry>
			<entry name="MAC_EMUMOUSEBTN">
				<label>Support for mouse button 2+3 emulation</label>
				<help>This provides generic support for emulating the 2nd and 3rd mouse
button with keypresses.  If you say Y here, the emulation is still
disabled by default.  The emulation is controlled by these sysctl
entries:
/proc/sys/dev/mac_hid/mouse_button_emulation
/proc/sys/dev/mac_hid/mouse_button2_keycode
/proc/sys/dev/mac_hid/mouse_button3_keycode

If you have an Apple machine with a 1-button mouse, say Y here.

To compile this driver as a module, choose M here: the
module will be called mac_hid.</help>
			</entry>
			<entry name="THERM_WINDTUNNEL">
				<label>Support for thermal management on Windtunnel G4s</label>
				<help>This driver provides some thermostat and fan control for the desktop
G4 &quot;Windtunnel&quot;</help>
			</entry>
			<entry name="THERM_ADT746X">
				<label>Support for thermal mgmnt on laptops with ADT 746x chipset</label>
				<help>This driver provides some thermostat and fan control for the
iBook G4, and the ATI based aluminium PowerBooks, allowing slightly
better fan behaviour by default, and some manual control.</help>
			</entry>
			<entry name="WINDFARM">
				<label>New PowerMac thermal control infrastructure</label>
			</entry>
			<entry name="WINDFARM_PM81">
				<label>Support for thermal management on iMac G5</label>
				<help>This driver provides thermal control for the iMacG5</help>
			</entry>
			<entry name="WINDFARM_PM72">
				<label>Support for thermal management on PowerMac G5 (AGP)</label>
				<help>This driver provides thermal control for the PowerMac G5
&quot;AGP&quot; variants (PowerMac 7,2 and 7,3)</help>
			</entry>
			<entry name="WINDFARM_RM31">
				<label>Support for thermal management on Xserve G5</label>
				<help>This driver provides thermal control for the Xserve G5
(RackMac3,1)</help>
			</entry>
			<entry name="WINDFARM_PM91">
				<label>Support for thermal management on PowerMac9,1</label>
				<help>This driver provides thermal control for the PowerMac9,1
which is the recent (SMU based) single CPU desktop G5</help>
			</entry>
			<entry name="WINDFARM_PM112">
				<label>Support for thermal management on PowerMac11,2</label>
				<help>This driver provides thermal control for the PowerMac11,2
which are the recent dual and quad G5 machines using the
970MP dual-core processor.</help>
			</entry>
			<entry name="WINDFARM_PM121">
				<label>Support for thermal management on PowerMac12,1</label>
				<help>This driver provides thermal control for the PowerMac12,1
which is the iMac G5 (iSight).</help>
			</entry>
			<entry name="ANSLCD">
				<label>Support for ANS LCD display</label>
			</entry>
			<entry name="PMAC_RACKMETER">
				<label>Support for Apple XServe front panel LEDs</label>
				<help>This driver provides some support to control the front panel
blue LEDs &quot;vu-meter&quot; of the XServer macs.</help>
			</entry>
			<entry name="SENSORS_AMS">
				<label>Apple Motion Sensor driver</label>
				<help>Support for the motion sensor included in PowerBooks. Includes
implementations for PMU and I2C.

This driver can also be built as a module. If so, the module
will be called ams.</help>
			</entry>
			<entry name="SENSORS_AMS_PMU">
				<label>PMU variant</label>
				<help>PMU variant of motion sensor, found in late 2005 PowerBooks.</help>
			</entry>
			<entry name="SENSORS_AMS_I2C">
				<label>I2C variant</label>
				<help>I2C variant of motion sensor, found in early 2005 PowerBooks and
iBooks.</help>
			</entry>
			<entry name="NETDEVICES">
				<label>Network device support</label>
				<help>You can say N here if you don't intend to connect your Linux box to
any other computer at all.

You'll have to say Y if your computer contains a network card that
you want to use under Linux. If you are going to run SLIP or PPP over
telephone line or null modem cable you need say Y here. Connecting
two machines with parallel ports using PLIP needs this, as well as
AX.25/KISS for sending Internet traffic over amateur radio links.

See also &quot;The Linux Network Administrator's Guide&quot; by Olaf Kirch and
Terry Dawson. Available at &lt;http://www.tldp.org/guides.html&gt;.

If unsure, say Y.</help>
			</entry>
			<entry name="MII"/>
			<entry name="NET_CORE">
				<label>Network core driver support</label>
				<help>You can say N here if you do not intend to use any of the
networking core drivers (i.e. VLAN, bridging, bonding, etc.)</help>
			</entry>
			<entry name="BONDING">
				<label>Bonding driver support</label>
				<help>Say 'Y' or 'M' if you wish to be able to 'bond' multiple Ethernet
Channels together. This is called 'Etherchannel' by Cisco,
'Trunking' by Sun, 802.3ad by the IEEE, and 'Bonding' in Linux.

The driver supports multiple bonding modes to allow for both high
performance and high availability operation.

Refer to &lt;file:Documentation/networking/bonding.txt&gt; for more
information.

To compile this driver as a module, choose M here: the module
will be called bonding.</help>
			</entry>
			<entry name="DUMMY">
				<label>Dummy net driver support</label>
				<help>This is essentially a bit-bucket device (i.e. traffic you send to
this device is consigned into oblivion) with a configurable IP
address. It is most commonly used in order to make your currently
inactive SLIP address seem like a real address for local programs.
If you use SLIP or PPP, you might want to say Y here. It won't
enlarge your kernel. What a deal. Read about it in the Network
Administrator's Guide, available from
&lt;http://www.tldp.org/docs.html#guide&gt;.

To compile this driver as a module, choose M here: the module
will be called dummy.</help>
			</entry>
			<entry name="EQUALIZER">
				<label>EQL (serial line load balancing) support</label>
				<help>If you have two serial connections to some other computer (this
usually requires two modems and two telephone lines) and you use
SLIP (the protocol for sending Internet traffic over telephone
lines) or PPP (a better SLIP) on them, you can make them behave like
one double speed connection using this driver.  Naturally, this has
to be supported at the other end as well, either with a similar EQL
Linux driver or with a Livingston Portmaster 2e.

Say Y if you want this and read
&lt;file:Documentation/networking/eql.txt&gt;.  You may also want to read
section 6.2 of the NET-3-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

To compile this driver as a module, choose M here: the module
will be called eql.  If unsure, say N.</help>
			</entry>
			<entry name="NET_FC">
				<label>Fibre Channel driver support</label>
				<help>Fibre Channel is a high speed serial protocol mainly used to connect
large storage devices to the computer; it is compatible with and
intended to replace SCSI.

If you intend to use Fibre Channel, you need to have a Fibre channel
adaptor card in your computer; say Y here and to the driver for your
adaptor below. You also should have said Y to &quot;SCSI support&quot; and
&quot;SCSI generic support&quot;.</help>
			</entry>
			<entry name="IFB">
				<label>Intermediate Functional Block support</label>
				<help>This is an intermediate driver that allows sharing of
resources.
To compile this driver as a module, choose M here: the module
will be called ifb.  If you want to use more than one ifb
device at a time, you need to compile this driver as a module.
Instead of 'ifb', the devices will then be called 'ifb0',
'ifb1' etc.
Look at the iproute2 documentation directory for usage etc</help>
			</entry>
			<entry name="NET_TEAM">
				<label>Ethernet team driver support</label>
				<help>This allows one to create virtual interfaces that teams together
multiple ethernet devices.

Team devices can be added using the &quot;ip&quot; command from the
iproute2 package:

&quot;ip link add link [ address MAC ] [ NAME ] type team&quot;

To compile this driver as a module, choose M here: the module
will be called team.</help>
			</entry>
			<entry name="NET_TEAM_MODE_BROADCAST">
				<label>Broadcast mode support</label>
				<help>Basic mode where packets are transmitted always by all suitable ports.

All added ports are setup to have team's device address.

To compile this team mode as a module, choose M here: the module
will be called team_mode_broadcast.</help>
			</entry>
			<entry name="NET_TEAM_MODE_ROUNDROBIN">
				<label>Round-robin mode support</label>
				<help>Basic mode where port used for transmitting packets is selected in
round-robin fashion using packet counter.

All added ports are setup to have team's device address.

To compile this team mode as a module, choose M here: the module
will be called team_mode_roundrobin.</help>
			</entry>
			<entry name="NET_TEAM_MODE_RANDOM">
				<label>Random mode support</label>
				<help>Basic mode where port used for transmitting packets is selected
randomly.

All added ports are setup to have team's device address.

To compile this team mode as a module, choose M here: the module
will be called team_mode_random.</help>
			</entry>
			<entry name="NET_TEAM_MODE_ACTIVEBACKUP">
				<label>Active-backup mode support</label>
				<help>Only one port is active at a time and the rest of ports are used
for backup.

Mac addresses of ports are not modified. Userspace is responsible
to do so.

To compile this team mode as a module, choose M here: the module
will be called team_mode_activebackup.</help>
			</entry>
			<entry name="NET_TEAM_MODE_LOADBALANCE">
				<label>Load-balance mode support</label>
				<help>This mode provides load balancing functionality. Tx port selection
is done using BPF function set up from userspace (bpf_hash_func
option)

To compile this team mode as a module, choose M here: the module
will be called team_mode_loadbalance.</help>
			</entry>
			<entry name="MACVLAN">
				<label>MAC-VLAN support</label>
				<help>This allows one to create virtual interfaces that map packets to
or from specific MAC addresses to a particular interface.

Macvlan devices can be added using the &quot;ip&quot; command from the
iproute2 package starting with the iproute2-2.6.23 release:

&quot;ip link add link &lt;real dev&gt; [ address MAC ] [ NAME ] type macvlan&quot;

To compile this driver as a module, choose M here: the module
will be called macvlan.</help>
			</entry>
			<entry name="MACVTAP">
				<label>MAC-VLAN based tap driver</label>
				<help>This adds a specialized tap character device driver that is based
on the MAC-VLAN network interface, called macvtap. A macvtap device
can be added in the same way as a macvlan device, using 'type
macvtap', and then be accessed through the tap user space interface.

To compile this driver as a module, choose M here: the module
will be called macvtap.</help>
			</entry>
			<entry name="IPVLAN">
				<label>IP-VLAN support</label>
				<help>This allows one to create virtual devices off of a main interface
and packets will be delivered based on the dest L3 (IPv6/IPv4 addr)
on packets. All interfaces (including the main interface) share L2
making it transparent to the connected L2 switch.

Ipvlan devices can be added using the &quot;ip&quot; command from the
iproute2 package starting with the iproute2-3.19 release:

&quot;ip link add link &lt;main-dev&gt; [ NAME ] type ipvlan&quot;

To compile this driver as a module, choose M here: the module
will be called ipvlan.</help>
			</entry>
			<entry name="VXLAN">
				<label>Virtual eXtensible Local Area Network (VXLAN)</label>
				<help>This allows one to create vxlan virtual interfaces that provide
Layer 2 Networks over Layer 3 Networks. VXLAN is often used
to tunnel virtual network infrastructure in virtualized environments.
For more information see:
http://tools.ietf.org/html/draft-mahalingam-dutt-dcops-vxlan-02

To compile this driver as a module, choose M here: the module
will be called vxlan.</help>
			</entry>
			<entry name="GENEVE">
				<label>Generic Network Virtualization Encapsulation</label>
				<help>This allows one to create geneve virtual interfaces that provide
Layer 2 Networks over Layer 3 Networks. GENEVE is often used
to tunnel virtual network infrastructure in virtualized environments.
For more information see:
http://tools.ietf.org/html/draft-gross-geneve-02

To compile this driver as a module, choose M here: the module
will be called geneve.</help>
			</entry>
			<entry name="GTP">
				<label>GPRS Tunneling Protocol datapath (GTP-U)</label>
				<help>This allows one to create gtp virtual interfaces that provide
the GPRS Tunneling Protocol datapath (GTP-U). This tunneling protocol
is used to prevent subscribers from accessing mobile carrier core
network infrastructure. This driver requires a userspace software that
implements the signaling protocol (GTP-C) to update its PDP context
base, such as OpenGGSN &lt;http://git.osmocom.org/openggsn/). This
tunneling protocol is implemented according to the GSM TS 09.60 and
3GPP TS 29.060 standards.

To compile this drivers as a module, choose M here: the module
wil be called gtp.</help>
			</entry>
			<entry name="MACSEC">
				<label>IEEE 802.1AE MAC-level encryption (MACsec)</label>
				<help>MACsec is an encryption standard for Ethernet.</help>
			</entry>
			<entry name="NETCONSOLE">
				<label>Network console logging support</label>
				<help>If you want to log kernel messages over the network, enable this.
See &lt;file:Documentation/networking/netconsole.txt&gt; for details.</help>
			</entry>
			<entry name="NETCONSOLE_DYNAMIC">
				<label>Dynamic reconfiguration of logging targets</label>
				<help>This option enables the ability to dynamically reconfigure target
parameters (interface, IP addresses, port numbers, MAC addresses)
at runtime through a userspace interface exported using configfs.
See &lt;file:Documentation/networking/netconsole.txt&gt; for details.</help>
			</entry>
			<entry name="NETPOLL"/>
			<entry name="NET_POLL_CONTROLLER"/>
			<entry name="NTB_NETDEV">
				<label>Virtual Ethernet over NTB Transport</label>
			</entry>
			<entry name="RIONET">
				<label>RapidIO Ethernet over messaging driver support</label>
			</entry>
			<entry name="RIONET_TX_SIZE">
				<label>Number of outbound queue entries</label>
			</entry>
			<entry name="RIONET_RX_SIZE">
				<label>Number of inbound queue entries</label>
			</entry>
			<entry name="TUN">
				<label>Universal TUN/TAP device driver support</label>
				<help>TUN/TAP provides packet reception and transmission for user space
programs.  It can be viewed as a simple Point-to-Point or Ethernet
device, which instead of receiving packets from a physical media,
receives them from user space program and instead of sending packets
via physical media writes them to the user space program.

When a program opens /dev/net/tun, driver creates and registers
corresponding net device tunX or tapX.  After a program closed above
devices, driver will automatically delete tunXX or tapXX device and
all routes corresponding to it.

Please read &lt;file:Documentation/networking/tuntap.txt&gt; for more
information.

To compile this driver as a module, choose M here: the module
will be called tun.

If you don't know what to use this for, you don't need it.</help>
			</entry>
			<entry name="TUN_VNET_CROSS_LE">
				<label>Support for cross-endian vnet headers on little-endian kernels</label>
				<help>This option allows TUN/TAP and MACVTAP device drivers in a
little-endian kernel to parse vnet headers that come from a
big-endian legacy virtio device.

Userspace programs can control the feature using the TUNSETVNETBE
and TUNGETVNETBE ioctls.

Unless you have a little-endian system hosting a big-endian virtual
machine with a legacy virtio NIC, you should say N.</help>
			</entry>
			<entry name="VETH">
				<label>Virtual ethernet pair device</label>
				<help>This device is a local ethernet tunnel. Devices are created in pairs.
When one end receives the packet it appears on its pair and vice
versa.</help>
			</entry>
			<entry name="VIRTIO_NET">
				<label>Virtio network driver</label>
				<help>This is the virtual network driver for virtio.  It can be used with
lguest or QEMU based VMMs (like KVM or Xen).  Say Y or M.</help>
			</entry>
			<entry name="NLMON">
				<label>Virtual netlink monitoring device</label>
				<help>This option enables a monitoring net device for netlink skbs. The
purpose of this is to analyze netlink messages with packet sockets.
Thus applications like tcpdump will be able to see local netlink
messages if they tap into the netlink device, record pcaps for further
diagnostics, etc. This is mostly intended for developers or support
to debug netlink issues. If unsure, say N.</help>
			</entry>
			<entry name="NET_VRF">
				<label>Virtual Routing and Forwarding (Lite)</label>
				<help>This option enables the support for mapping interfaces into VRF's. The
support enables VRF devices.</help>
			</entry>
			<entry name="SUNGEM_PHY"/>
			<entry name="ARCNET">
				<label>ARCnet support</label>
				<help>If you have a network card of this type, say Y and check out the
(arguably) beautiful poetry in
&lt;file:Documentation/networking/arcnet.txt&gt;.

You need both this driver, and the driver for the particular ARCnet
chipset of your card. If you don't know, then it's probably a
COM90xx type card, so say Y (or M) to &quot;ARCnet COM90xx chipset
support&quot; below.

To compile this driver as a module, choose M here. The module will
be called arcnet.</help>
			</entry>
			<entry name="ARCNET_1201">
				<label>Enable standard ARCNet packet format (RFC 1201)</label>
				<help>This allows you to use RFC1201 with your ARCnet card via the virtual
arc0 device.  You need to say Y here to communicate with
industry-standard RFC1201 implementations, like the arcether.com
packet driver or most DOS/Windows ODI drivers.  Please read the
ARCnet documentation in &lt;file:Documentation/networking/arcnet.txt&gt;
for more information about using arc0.</help>
			</entry>
			<entry name="ARCNET_1051">
				<label>Enable old ARCNet packet format (RFC 1051)</label>
				<help>This allows you to use RFC1051 with your ARCnet card via the virtual
arc0s device. You only need arc0s if you want to talk to ARCnet
software complying with the &quot;old&quot; standard, specifically, the DOS
arcnet.com packet driver, Amigas running AmiTCP, and some variants
of NetBSD. You do not need to say Y here to communicate with
industry-standard RFC1201 implementations, like the arcether.com
packet driver or most DOS/Windows ODI drivers. RFC1201 is included
automatically as the arc0 device. Please read the ARCnet
documentation in &lt;file:Documentation/networking/arcnet.txt&gt; for more
information about using arc0e and arc0s.</help>
			</entry>
			<entry name="ARCNET_RAW">
				<label>Enable raw mode packet interface</label>
				<help>ARCnet &quot;raw mode&quot; packet encapsulation, no soft headers.  Unlikely
to work unless talking to a copy of the same Linux arcnet driver,
but perhaps marginally faster in that case.</help>
			</entry>
			<entry name="ARCNET_CAP">
				<label>Enable CAP mode packet interface</label>
				<help>ARCnet &quot;cap mode&quot; packet encapsulation. Used to get the hardware
acknowledge back to userspace. After the initial protocol byte every
packet is stuffed with an extra 4 byte &quot;cookie&quot; which doesn't
actually appear on the network. After transmit the driver will send
back a packet with protocol byte 0 containing the status of the
transmission:
0=no hardware acknowledge
1=excessive nak
2=transmission accepted by the receiver hardware

Received packets are also stuffed with the extra 4 bytes but it will
be random data.

Cap only listens to protocol 1-8.</help>
			</entry>
			<entry name="ARCNET_COM90xx">
				<label>ARCnet COM90xx (normal) chipset driver</label>
				<help>This is the chipset driver for the standard COM90xx cards. If you
have always used the old ARCnet driver without knowing what type of
card you had, this is probably the one for you.

To compile this driver as a module, choose M here. The module will
be called com90xx.</help>
			</entry>
			<entry name="ARCNET_COM90xxIO">
				<label>ARCnet COM90xx (IO mapped) chipset driver</label>
				<help>This is the chipset driver for the COM90xx cards, using them in
IO-mapped mode instead of memory-mapped mode. This is slower than
the normal driver. Only use it if your card doesn't support shared
memory.

To compile this driver as a module, choose M here. The module will
be called com90io.</help>
			</entry>
			<entry name="ARCNET_RIM_I">
				<label>ARCnet COM90xx (RIM I) chipset driver</label>
				<help>This is yet another chipset driver for the COM90xx cards, but this
time only using memory-mapped mode, and no IO ports at all. This
driver is completely untested, so if you have one of these cards,
please mail &lt;dwmw2@infradead.org&gt;, especially if it works!

To compile this driver as a module, choose M here. The module will
be called arc-rimi.</help>
			</entry>
			<entry name="ARCNET_COM20020">
				<label>ARCnet COM20020 chipset driver</label>
				<help>This is the driver for the new COM20020 chipset. It supports such
things as promiscuous mode, so packet sniffing is possible, and
extra diagnostic information.

To compile this driver as a module, choose M here. The module will
be called com20020.</help>
			</entry>
			<entry name="ARCNET_COM20020_ISA">
				<label>Support for COM20020 on ISA</label>
			</entry>
			<entry name="ARCNET_COM20020_PCI">
				<label>Support for COM20020 on PCI</label>
			</entry>
			<entry name="ARCNET_COM20020_CS">
				<label>COM20020 ARCnet PCMCIA support</label>
				<help>Say Y here if you intend to attach this type of ARCnet PCMCIA card
to your computer.

To compile this driver as a module, choose M here: the module will be
called com20020_cs.  If unsure, say N.</help>
			</entry>
			<entry name="ATM_DRIVERS">
				<label>ATM drivers</label>
				<help>Say Y here to get to see options for Asynchronous Transfer Mode
device drivers. This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="ATM_DUMMY">
				<label>Dummy ATM driver</label>
				<help>Dummy ATM driver. Useful for proxy signalling, testing,
and development.  If unsure, say N.</help>
			</entry>
			<entry name="ATM_TCP">
				<label>ATM over TCP</label>
				<help>ATM over TCP driver. Useful mainly for development and for
experiments. If unsure, say N.</help>
			</entry>
			<entry name="ATM_LANAI">
				<label>Efficient Networks Speedstream 3010</label>
				<help>Supports ATM cards based on the Efficient Networks &quot;Lanai&quot;
chipset such as the Speedstream 3010 and the ENI-25p.  The
Speedstream 3060 is currently not supported since we don't
have the code to drive the on-board Alcatel DSL chipset (yet).</help>
			</entry>
			<entry name="ATM_ENI">
				<label>Efficient Networks ENI155P</label>
				<help>Driver for the Efficient Networks ENI155p series and SMC ATM
Power155 155 Mbps ATM adapters. Both, the versions with 512KB and
2MB on-board RAM (Efficient calls them &quot;C&quot; and &quot;S&quot;, respectively),
and the FPGA and the ASIC Tonga versions of the board are supported.
The driver works with MMF (-MF or ...F) and UTP-5 (-U5 or ...D)
adapters.

To compile this driver as a module, choose M here: the module will
be called eni.</help>
			</entry>
			<entry name="ATM_ENI_DEBUG">
				<label>Enable extended debugging</label>
				<help>Extended debugging records various events and displays that list
when an inconsistency is detected. This mechanism is faster than
generally using printks, but still has some impact on performance.
Note that extended debugging may create certain race conditions
itself. Enable this ONLY if you suspect problems with the driver.</help>
			</entry>
			<entry name="ATM_ENI_TUNE_BURST">
				<label>Fine-tune burst settings</label>
				<help>In order to obtain good throughput, the ENI NIC can transfer
multiple words of data per PCI bus access cycle. Such a multi-word
transfer is called a burst.

The default settings for the burst sizes are suitable for most PCI
chipsets. However, in some cases, large bursts may overrun buffers
in the PCI chipset and cause data corruption. In such cases, large
bursts must be disabled and only (slower) small bursts can be used.
The burst sizes can be set independently in the send (TX) and
receive (RX) direction.

Note that enabling many different burst sizes in the same direction
may increase the cost of setting up a transfer such that the
resulting throughput is lower than when using only the largest
available burst size.

Also, sometimes larger bursts lead to lower throughput, e.g. on an
Intel 440FX board, a drop from 135 Mbps to 103 Mbps was observed
when going from 8W to 16W bursts.</help>
			</entry>
			<entry name="ATM_ENI_BURST_TX_16W">
				<label>Enable 16W TX bursts (discouraged)</label>
				<help>Burst sixteen words at once in the send direction. This may work
with recent PCI chipsets, but is known to fail with older chipsets.</help>
			</entry>
			<entry name="ATM_ENI_BURST_TX_8W">
				<label>Enable 8W TX bursts (recommended)</label>
				<help>Burst eight words at once in the send direction. This is the default
setting.</help>
			</entry>
			<entry name="ATM_ENI_BURST_TX_4W">
				<label>Enable 4W TX bursts (optional)</label>
				<help>Burst four words at once in the send direction. You may want to try
this if you have disabled 8W bursts. Enabling 4W if 8W is also set
may or may not improve throughput.</help>
			</entry>
			<entry name="ATM_ENI_BURST_TX_2W">
				<label>Enable 2W TX bursts (optional)</label>
				<help>Burst two words at once in the send direction. You may want to try
this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or 8W
are also set may or may not improve throughput.</help>
			</entry>
			<entry name="ATM_ENI_BURST_RX_16W">
				<label>Enable 16W RX bursts (discouraged)</label>
				<help>Burst sixteen words at once in the receive direction. This may work
with recent PCI chipsets, but is known to fail with older chipsets.</help>
			</entry>
			<entry name="ATM_ENI_BURST_RX_8W">
				<label>Enable 8W RX bursts (discouraged)</label>
				<help>Burst eight words at once in the receive direction. This may work
with recent PCI chipsets, but is known to fail with older chipsets,
such as the Intel Neptune series.</help>
			</entry>
			<entry name="ATM_ENI_BURST_RX_4W">
				<label>Enable 4W RX bursts (recommended)</label>
				<help>Burst four words at once in the receive direction. This is the
default setting. Enabling 4W if 8W is also set may or may not
improve throughput.</help>
			</entry>
			<entry name="ATM_ENI_BURST_RX_2W">
				<label>Enable 2W RX bursts (optional)</label>
				<help>Burst two words at once in the receive direction. You may want to
try this if you have disabled 4W and 8W bursts. Enabling 2W if 4W or
8W are also set may or may not improve throughput.</help>
			</entry>
			<entry name="ATM_FIRESTREAM">
				<label>Fujitsu FireStream (FS50/FS155) </label>
				<help>Driver for the Fujitsu FireStream 155 (MB86697) and
FireStream 50 (MB86695) ATM PCI chips.

To compile this driver as a module, choose M here: the module will
be called firestream.</help>
			</entry>
			<entry name="ATM_ZATM">
				<label>ZeitNet ZN1221/ZN1225</label>
				<help>Driver for the ZeitNet ZN1221 (MMF) and ZN1225 (UTP-5) 155 Mbps ATM
adapters.

To compile this driver as a module, choose M here: the module will
be called zatm.</help>
			</entry>
			<entry name="ATM_ZATM_DEBUG">
				<label>Enable extended debugging</label>
				<help>Extended debugging records various events and displays that list
when an inconsistency is detected. This mechanism is faster than
generally using printks, but still has some impact on performance.
Note that extended debugging may create certain race conditions
itself. Enable this ONLY if you suspect problems with the driver.</help>
			</entry>
			<entry name="ATM_NICSTAR">
				<label>IDT 77201 (NICStAR) (ForeRunnerLE)</label>
				<help>The NICStAR chipset family is used in a large number of ATM NICs for
25 and for 155 Mbps, including IDT cards and the Fore ForeRunnerLE
series. Say Y if you have one of those.

To compile this driver as a module, choose M here: the module will
be called nicstar.</help>
			</entry>
			<entry name="ATM_NICSTAR_USE_SUNI">
				<label>Use suni PHY driver (155Mbps)</label>
				<help>Support for the S-UNI and compatible PHYsical layer chips. These are
found in most 155Mbps NICStAR based ATM cards, namely in the
ForeRunner LE155 cards. This driver provides detection of cable~
removal and reinsertion and provides some statistics. This driver
doesn't have removal capability when compiled as a module, so if you
need that capability don't include S-UNI support (it's not needed to
make the card work).</help>
			</entry>
			<entry name="ATM_NICSTAR_USE_IDT77105">
				<label>Use IDT77015 PHY driver (25Mbps)</label>
				<help>Support for the PHYsical layer chip in ForeRunner LE25 cards. In
addition to cable removal/reinsertion detection, this driver allows
you to control the loopback mode of the chip via a dedicated IOCTL.
This driver is required for proper handling of temporary carrier
loss, so if you have a 25Mbps NICStAR based ATM card you must say Y.</help>
			</entry>
			<entry name="ATM_IDT77252">
				<label>IDT 77252 (NICStAR II)</label>
				<help>Driver for the IDT 77252 ATM PCI chips.

To compile this driver as a module, choose M here: the module will
be called idt77252.</help>
			</entry>
			<entry name="ATM_IDT77252_DEBUG">
				<label>Enable debugging messages</label>
				<help>Somewhat useful debugging messages are available. The choice of
messages is controlled by a bitmap.  This may be specified as a
module argument.  See the file &lt;file:drivers/atm/idt77252.h&gt; for
the meanings of the bits in the mask.

When active, these messages can have a significant impact on the
speed of the driver, and the size of your syslog files! When
inactive, they will have only a modest impact on performance.</help>
			</entry>
			<entry name="ATM_IDT77252_RCV_ALL">
				<label>Receive ALL cells in raw queue</label>
				<help>Enable receiving of all cells on the ATM link, that do not match
an open connection in the raw cell queue of the driver.  Useful
for debugging or special applications only, so the safe answer is N.</help>
			</entry>
			<entry name="ATM_IDT77252_USE_SUNI"/>
			<entry name="ATM_AMBASSADOR">
				<label>Madge Ambassador (Collage PCI 155 Server)</label>
				<help>This is a driver for ATMizer based ATM card produced by Madge
Networks Ltd. Say Y (or M to compile as a module named ambassador)
here if you have one of these cards.</help>
			</entry>
			<entry name="ATM_AMBASSADOR_DEBUG">
				<label>Enable debugging messages</label>
				<help>Somewhat useful debugging messages are available. The choice of
messages is controlled by a bitmap.  This may be specified as a
module argument (kernel command line argument as well?), changed
dynamically using an ioctl (not yet) or changed by sending the
string &quot;Dxxxx&quot; to VCI 1023 (where x is a hex digit).  See the file
&lt;file:drivers/atm/ambassador.h&gt; for the meanings of the bits in the
mask.

When active, these messages can have a significant impact on the
speed of the driver, and the size of your syslog files! When
inactive, they will have only a modest impact on performance.</help>
			</entry>
			<entry name="ATM_HORIZON">
				<label>Madge Horizon [Ultra] (Collage PCI 25 and Collage PCI 155 Client)</label>
				<help>This is a driver for the Horizon chipset ATM adapter cards once
produced by Madge Networks Ltd. Say Y (or M to compile as a module
named horizon) here if you have one of these cards.</help>
			</entry>
			<entry name="ATM_HORIZON_DEBUG">
				<label>Enable debugging messages</label>
				<help>Somewhat useful debugging messages are available. The choice of
messages is controlled by a bitmap.  This may be specified as a
module argument (kernel command line argument as well?), changed
dynamically using an ioctl (not yet) or changed by sending the
string &quot;Dxxxx&quot; to VCI 1023 (where x is a hex digit).  See the file
&lt;file:drivers/atm/horizon.h&gt; for the meanings of the bits in the
mask.

When active, these messages can have a significant impact on the
speed of the driver, and the size of your syslog files! When
inactive, they will have only a modest impact on performance.</help>
			</entry>
			<entry name="ATM_IA">
				<label>Interphase ATM PCI x575/x525/x531</label>
				<help>This is a driver for the Interphase (i)ChipSAR adapter cards
which include a variety of variants in term of the size of the
control memory (128K-1KVC, 512K-4KVC), the size of the packet
memory (128K, 512K, 1M), and the PHY type (Single/Multi mode OC3,
UTP155, UTP25, DS3 and E3). Go to:
&lt;http://www.iphase.com/&gt;
for more info about the cards. Say Y (or M to compile as a module
named iphase) here if you have one of these cards.

See the file &lt;file:Documentation/networking/iphase.txt&gt; for further
details.</help>
			</entry>
			<entry name="ATM_IA_DEBUG">
				<label>Enable debugging messages</label>
				<help>Somewhat useful debugging messages are available. The choice of
messages is controlled by a bitmap. This may be specified as a
module argument (kernel command line argument as well?), changed
dynamically using an ioctl (Get the debug utility, iadbg, from
&lt;ftp://ftp.iphase.com/pub/atm/pci/&gt;).

See the file &lt;file:drivers/atm/iphase.h&gt; for the meanings of the
bits in the mask.

When active, these messages can have a significant impact on the
speed of the driver, and the size of your syslog files! When
inactive, they will have only a modest impact on performance.</help>
			</entry>
			<entry name="ATM_FORE200E">
				<label>FORE Systems 200E-series</label>
				<help>This is a driver for the FORE Systems 200E-series ATM adapter
cards. It simultaneously supports PCA-200E and SBA-200E models
on PCI and SBUS hosts. Say Y (or M to compile as a module
named fore_200e) here if you have one of these ATM adapters.

See the file &lt;file:Documentation/networking/fore200e.txt&gt; for
further details.</help>
			</entry>
			<entry name="ATM_FORE200E_USE_TASKLET">
				<label>Defer interrupt work to a tasklet</label>
				<help>This defers work to be done by the interrupt handler to a
tasklet instead of handling everything at interrupt time.  This
may improve the responsive of the host.</help>
			</entry>
			<entry name="ATM_FORE200E_TX_RETRY">
				<label>Maximum number of tx retries</label>
				<help>Specifies the number of times the driver attempts to transmit
a message before giving up, if the transmit queue of the ATM card
is transiently saturated.

Saturation of the transmit queue may occur only under extreme
conditions, e.g. when a fast host continuously submits very small
frames (&lt;64 bytes) or raw AAL0 cells (48 bytes) to the ATM adapter.

Note that under common conditions, it is unlikely that you encounter
a saturation of the transmit queue, so the retry mechanism never
comes into play.</help>
			</entry>
			<entry name="ATM_FORE200E_DEBUG">
				<label>Debugging level (0-3)</label>
				<help>Specifies the level of debugging messages issued by the driver.
The verbosity of the driver increases with the value of this
parameter.

When active, these messages can have a significant impact on
the performances of the driver, and the size of your syslog files!
Keep the debugging level to 0 during normal operations.</help>
			</entry>
			<entry name="ATM_HE">
				<label>ForeRunner HE Series</label>
				<help>This is a driver for the Marconi ForeRunner HE-series ATM adapter
cards. It simultaneously supports the 155 and 622 versions.</help>
			</entry>
			<entry name="ATM_HE_USE_SUNI">
				<label>Use S/UNI PHY driver</label>
				<help>Support for the S/UNI-Ultra and S/UNI-622 found in the ForeRunner
HE cards.  This driver provides carrier detection some statistics.</help>
			</entry>
			<entry name="ATM_SOLOS">
				<label>Solos ADSL2+ PCI Multiport card driver</label>
				<help>Support for the Solos multiport ADSL2+ card.</help>
			</entry>
			<entry name="CAIF_TTY">
				<label>CAIF TTY transport driver</label>
				<help>The CAIF TTY transport driver is a Line Discipline (ldisc)
identified as N_CAIF. When this ldisc is opened from user space
it will redirect the TTY's traffic into the CAIF stack.</help>
			</entry>
			<entry name="CAIF_SPI_SLAVE">
				<label>CAIF SPI transport driver for slave interface</label>
				<help>The CAIF Link layer SPI Protocol driver for Slave SPI interface.
This driver implements a platform driver to accommodate for a
platform specific SPI device. A sample CAIF SPI Platform device is
provided in Documentation/networking/caif/spi_porting.txt</help>
			</entry>
			<entry name="CAIF_SPI_SYNC">
				<label>Next command and length in start of frame</label>
				<help>Putting the next command and length in the start of the frame can
help to synchronize to the next transfer in case of over or under-runs.
This option also needs to be enabled on the modem.</help>
			</entry>
			<entry name="CAIF_HSI">
				<label>CAIF HSI transport driver</label>
				<help>The caif low level driver for CAIF over HSI.
Be aware that if you enable this then you also need to
enable a low-level HSI driver.</help>
			</entry>
			<entry name="CAIF_VIRTIO">
				<label>CAIF virtio transport driver</label>
				<help>The caif driver for CAIF over Virtio.</help>
			</entry>
			<entry name="VHOST_RING">
				<help>This option is selected by any driver which needs to access
the host side of a virtio ring.
</help>
			</entry>
			<container name="Distributed_Switch_Architecture_drivers">
				<label>Distributed Switch Architecture drivers</label>
				<entry name="NET_DSA_MV88E6060">
					<label>Marvell 88E6060 ethernet switch chip support</label>
					<help>This enables support for the Marvell 88E6060 ethernet switch
chip.</help>
				</entry>
				<entry name="NET_DSA_BCM_SF2">
					<label>Broadcom Starfighter 2 Ethernet switch support</label>
					<help>This enables support for the Broadcom Starfighter 2 Ethernet
switch chips.</help>
				</entry>
				<entry name="B53">
					<label>Broadcom BCM53xx managed switch support</label>
					<help>This driver adds support for Broadcom managed switch chips. It supports
BCM5325E, BCM5365, BCM539x, BCM53115 and BCM53125 as well as BCM63XX
integrated switches.</help>
				</entry>
				<entry name="B53_SPI_DRIVER">
					<label>B53 SPI connected switch driver</label>
					<help>Select to enable support for registering switches configured through SPI.</help>
				</entry>
				<entry name="B53_MDIO_DRIVER">
					<label>B53 MDIO connected switch driver</label>
					<help>Select to enable support for registering switches configured through MDIO.</help>
				</entry>
				<entry name="B53_MMAP_DRIVER">
					<label>B53 MMAP connected switch driver</label>
					<help>Select to enable support for memory-mapped switches like the BCM63XX
integrated switches.</help>
				</entry>
				<entry name="B53_SRAB_DRIVER">
					<label>B53 SRAB connected switch driver</label>
					<help>Select to enable support for memory-mapped Switch Register Access
Bridge Registers (SRAB) like it is found on the BCM53010
</help>
				</entry>
				<entry name="NET_DSA_MV88E6XXX">
					<label>Marvell 88E6xxx Ethernet switch fabric support</label>
					<help>This driver adds support for most of the Marvell 88E6xxx models of
Ethernet switch chips, except 88E6060.
</help>
				</entry>
			</container>
			<entry name="ETHERNET">
				<label>Ethernet driver support</label>
				<help>This section contains all the Ethernet device drivers.</help>
			</entry>
			<entry name="MDIO"/>
			<entry name="SUNGEM_PHY"/>
			<entry name="NET_VENDOR_3COM">
				<label>3Com devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about 3Com cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="EL3">
				<label>3c509/3c579 \&quot;EtherLink III\&quot; support</label>
				<help>If you have a network (Ethernet) card belonging to the 3Com
EtherLinkIII series, say Y here.

If your card is not working you may need to use the DOS
setup disk to disable Plug &amp; Play mode, and to select the default
media type.

To compile this driver as a module, choose M here. The module
will be called 3c509.</help>
			</entry>
			<entry name="_3C515">
				<label>3c515 ISA \&quot;Fast EtherLink\</label>
				<help>If you have a 3Com ISA EtherLink XL &quot;Corkscrew&quot; 3c515 Fast Ethernet
network card, say Y here.

To compile this driver as a module, choose M here. The module
will be called 3c515.</help>
			</entry>
			<entry name="PCMCIA_3C574">
				<label>3Com 3c574 PCMCIA support</label>
				<help>Say Y here if you intend to attach a 3Com 3c574 or compatible PCMCIA
(PC-card) Fast Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called 3c574_cs.  If unsure, say N.</help>
			</entry>
			<entry name="PCMCIA_3C589">
				<label>3Com 3c589 PCMCIA support</label>
				<help>Say Y here if you intend to attach a 3Com 3c589 or compatible PCMCIA
(PC-card) Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called 3c589_cs.  If unsure, say N.</help>
			</entry>
			<entry name="VORTEX">
				<label>3c590/3c900 series (592/595/597) \&quot;Vortex/Boomerang\&quot; support</label>
				<help>This option enables driver support for a large number of 10Mbps and
10/100Mbps EISA, PCI and Cardbus 3Com network cards:

&quot;Vortex&quot;    (Fast EtherLink 3c590/3c592/3c595/3c597) EISA and PCI
&quot;Boomerang&quot; (EtherLink XL 3c900 or 3c905)            PCI
&quot;Cyclone&quot;   (3c540/3c900/3c905/3c980/3c575/3c656)    PCI and Cardbus
&quot;Tornado&quot;   (3c905)                                  PCI
&quot;Hurricane&quot; (3c555/3cSOHO)                           PCI

If you have such a card, say Y here.  More specific information is in
&lt;file:Documentation/networking/vortex.txt&gt; and in the comments at
the beginning of &lt;file:drivers/net/ethernet/3com/3c59x.c&gt;.

To compile this support as a module, choose M here.</help>
			</entry>
			<entry name="TYPHOON">
				<label>3cr990 series \&quot;Typhoon\&quot; support</label>
				<help>This option enables driver support for the 3cr990 series of cards:

3C990-TX, 3CR990-TX-95, 3CR990-TX-97, 3CR990-FX-95, 3CR990-FX-97,
3CR990SVR, 3CR990SVR95, 3CR990SVR97, 3CR990-FX-95 Server,
3CR990-FX-97 Server, 3C990B-TX-M, 3C990BSVR

If you have a network (Ethernet) card of this type, say Y here.

To compile this driver as a module, choose M here. The module
will be called typhoon.</help>
			</entry>
			<entry name="NET_VENDOR_ADAPTEC">
				<label>Adaptec devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Adaptec cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ADAPTEC_STARFIRE">
				<label>Adaptec Starfire/DuraLAN support</label>
				<help>Say Y here if you have an Adaptec Starfire (or DuraLAN) PCI network
adapter. The DuraLAN chip is used on the 64 bit PCI boards from
Adaptec e.g. the ANA-6922A. The older 32 bit boards use the tulip
driver.

To compile this driver as a module, choose M here: the module
will be called starfire.  This is recommended.</help>
			</entry>
			<entry name="GRETH">
				<label>Aeroflex Gaisler GRETH Ethernet MAC support</label>
				<help>Say Y here if you want to use the Aeroflex Gaisler GRETH Ethernet MAC.
</help>
			</entry>
			<entry name="NET_VENDOR_AGERE">
				<label>Agere devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Agere devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="ET131X">
				<label>Agere ET-1310 Gigabit Ethernet support</label>
				<help>This driver supports Agere ET-1310 ethernet adapters.

To compile this driver as a module, choose M here. The module
will be called et131x.</help>
			</entry>
			<entry name="NET_VENDOR_ALLWINNER">
				<label>Allwinner devices</label>
				<help>If you have a network (Ethernet) card belonging to this
class, say Y here.

Note that the answer to this question doesn't directly
affect the kernel: saying N will just cause the configurator
to skip all the questions about Allwinner cards. If you say Y,
you will be asked for your specific card in the following
questions.</help>
			</entry>
			<entry name="SUN4I_EMAC">
				<label>Allwinner A10 EMAC support</label>
				<help>Support for Allwinner A10 EMAC ethernet driver.

To compile this driver as a module, choose M here.  The module
will be called sun4i-emac.</help>
			</entry>
			<entry name="NET_VENDOR_ALTEON">
				<label>Alteon devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Alteon cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ACENIC">
				<label>Alteon AceNIC/3Com 3C985/NetGear GA620 Gigabit support</label>
				<help>Say Y here if you have an Alteon AceNIC, 3Com 3C985(B), NetGear
GA620, SGI Gigabit or Farallon PN9000-SX PCI Gigabit Ethernet
adapter. The driver allows for using the Jumbo Frame option (9000
bytes/frame) however it requires that your switches can handle this
as well. To enable Jumbo Frames, add `mtu 9000' to your ifconfig
line.

To compile this driver as a module, choose M here: the
module will be called acenic.</help>
			</entry>
			<entry name="ACENIC_OMIT_TIGON_I">
				<label>Omit support for old Tigon I based AceNICs</label>
				<help>Say Y here if you only have Tigon II based AceNICs and want to leave
out support for the older Tigon I based cards which are no longer
being sold (ie. the original Alteon AceNIC and 3Com 3C985 (non B
version)).  This will reduce the size of the driver object by
app. 100KB.  If you are not sure whether your card is a Tigon I or a
Tigon II, say N here.

The safe and default value for this is N.</help>
			</entry>
			<entry name="ALTERA_TSE">
				<label>Altera Triple-Speed Ethernet MAC support</label>
				<help>This driver supports the Altera Triple-Speed (TSE) Ethernet MAC.

To compile this driver as a module, choose M here. The module
will be called alteratse.
</help>
			</entry>
			<entry name="NET_VENDOR_AMD">
				<label>AMD devices</label>
				<help>If you have a network (Ethernet) chipset belonging to this class,
say Y.

Note that the answer to this question does not directly affect
the kernel: saying N will just case the configurator to skip all
the questions regarding AMD chipsets. If you say Y, you will be asked
for your specific chipset/driver in the following questions.</help>
			</entry>
			<entry name="A2065">
				<label>A2065 support</label>
				<help>If you have a Commodore A2065 Ethernet adapter, say Y. Otherwise,
say N.

To compile this driver as a module, choose M here: the module
will be called a2065.</help>
			</entry>
			<entry name="AMD8111_ETH">
				<label>AMD 8111 (new PCI LANCE) support</label>
				<help>If you have an AMD 8111-based PCI LANCE ethernet card,
answer Y here.

To compile this driver as a module, choose M here. The module
will be called amd8111e.</help>
			</entry>
			<entry name="LANCE">
				<label>AMD LANCE and PCnet (AT1500 and NE2100) support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.
Some LinkSys cards are of this type.

To compile this driver as a module, choose M here: the module
will be called lance.  This is recommended.</help>
			</entry>
			<entry name="PCNET32">
				<label>AMD PCnet32 PCI support</label>
				<help>If you have a PCnet32 or PCnetPCI based network (Ethernet) card,
answer Y here.

To compile this driver as a module, choose M here. The module
will be called pcnet32.</help>
			</entry>
			<entry name="ARIADNE">
				<label>Ariadne support</label>
				<help>If you have a Village Tronic Ariadne Ethernet adapter, say Y.
Otherwise, say N.

To compile this driver as a module, choose M here: the module
will be called ariadne.</help>
			</entry>
			<entry name="ARM_AM79C961A">
				<label>ARM EBSA110 AM79C961A support</label>
				<help>If you wish to compile a kernel for the EBSA-110, then you should
always answer Y to this.</help>
			</entry>
			<entry name="ATARILANCE">
				<label>Atari LANCE support</label>
				<help>Say Y to include support for several Atari Ethernet adapters based
on the AMD LANCE chipset: RieblCard (with or without battery), or
PAMCard VME (also the version by Rhotron, with different addresses).</help>
			</entry>
			<entry name="DECLANCE">
				<label>DEC LANCE ethernet controller support</label>
				<help>This driver is for the series of Ethernet controllers produced by
DEC (now Compaq) based on the AMD LANCE chipset, including the
DEPCA series.  (This chipset is better known via the NE2100 cards.)</help>
			</entry>
			<entry name="HPLANCE">
				<label>HP on-board LANCE support</label>
				<help>If you want to use the builtin &quot;LANCE&quot; Ethernet controller on an
HP300 machine, say Y here.</help>
			</entry>
			<entry name="MIPS_AU1X00_ENET">
				<label>MIPS AU1000 Ethernet support</label>
				<help>If you have an Alchemy Semi AU1X00 based system
say Y.  Otherwise, say N.</help>
			</entry>
			<entry name="MVME147_NET">
				<label>MVME147 (LANCE) Ethernet support</label>
				<help>Support for the on-board Ethernet interface on the Motorola MVME147
single-board computer.  Say Y here to include the
driver for this chip in your kernel.
To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="PCMCIA_NMCLAN">
				<label>New Media PCMCIA support</label>
				<help>Say Y here if you intend to attach a New Media Ethernet or LiveWire
PCMCIA (PC-card) Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called nmclan_cs.  If unsure, say N.</help>
			</entry>
			<entry name="NI65">
				<label>NI6510 support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.

To compile this driver as a module, choose M here. The module
will be called ni65.</help>
			</entry>
			<entry name="SUN3LANCE">
				<label>Sun3/Sun3x on-board LANCE support</label>
				<help>Most Sun3 and Sun3x motherboards (including the 3/50, 3/60 and 3/80)
featured an AMD LANCE 10Mbit Ethernet controller on board; say Y
here to compile in the Linux driver for this and enable Ethernet.
General Linux information on the Sun 3 and 3x series (now
discontinued) is at
&lt;http://www.angelfire.com/ca2/tech68k/sun3.html&gt;.

If you're not building a kernel for a Sun 3, say N.</help>
			</entry>
			<entry name="SUNLANCE">
				<label>Sun LANCE support</label>
				<help>This driver supports the &quot;le&quot; interface present on all 32-bit Sparc
systems, on some older Ultra systems and as an Sbus option.  These
cards are based on the AMD LANCE chipset, which is better known
via the NE2100 cards.

To compile this driver as a module, choose M here: the module
will be called sunlance.</help>
			</entry>
			<entry name="AMD_XGBE">
				<label>AMD 10GbE Ethernet driver</label>
				<help>This driver supports the AMD 10GbE Ethernet device found on an
AMD SoC.

To compile this driver as a module, choose M here: the module
will be called amd-xgbe.</help>
			</entry>
			<entry name="AMD_XGBE_DCB">
				<label>Data Center Bridging (DCB) support</label>
				<help>Say Y here to enable Data Center Bridging (DCB) support in the
driver.

If unsure, say N.</help>
			</entry>
			<entry name="NET_XGENE">
				<label>APM X-Gene SoC Ethernet Driver</label>
				<help>This is the Ethernet driver for the on-chip ethernet interface on the
APM X-Gene SoC.

To compile this driver as a module, choose M here. This module will
be called xgene_enet.
</help>
			</entry>
			<entry name="NET_VENDOR_APPLE">
				<label>Apple devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about IBM devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="MACE">
				<label>MACE (Power Mac ethernet) support</label>
				<help>Power Macintoshes and clones with Ethernet built-in on the
motherboard will usually use a MACE (Medium Access Control for
Ethernet) interface. Say Y to include support for the MACE chip.

To compile this driver as a module, choose M here: the module
will be called mace.</help>
			</entry>
			<entry name="MACE_AAUI_PORT">
				<label>Use AAUI port instead of TP by default</label>
				<help>Some Apple machines (notably the Apple Network Server) which use the
MACE ethernet chip have an Apple AUI port (small 15-pin connector),
instead of an 8-pin RJ45 connector for twisted-pair ethernet.  Say
Y here if you have such a machine.  If unsure, say N.
The driver will default to AAUI on ANS anyway, and if you use it as
a module, you can provide the port_aaui=0|1 to force the driver.</help>
			</entry>
			<entry name="BMAC">
				<label>BMAC (G3 ethernet) support</label>
				<help>Say Y for support of BMAC Ethernet interfaces. These are used on G3
computers.

To compile this driver as a module, choose M here: the module
will be called bmac.</help>
			</entry>
			<entry name="MACMACE">
				<label>Macintosh (AV) onboard MACE ethernet</label>
				<help>Support for the onboard AMD 79C940 MACE Ethernet controller used in
the 660AV and 840AV Macintosh.  If you have one of these Macintoshes
say Y here.</help>
			</entry>
			<entry name="NET_VENDOR_ARC">
				<label>ARC devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about ARC cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ARC_EMAC_CORE"/>
			<entry name="ARC_EMAC">
				<label>ARC EMAC support</label>
				<help>On some legacy ARC (Synopsys) FPGA boards such as ARCAngel4/ML50x
non-standard on-chip ethernet device ARC EMAC 10/100 is used.
Say Y here if you have such a board.  If unsure, say N.</help>
			</entry>
			<entry name="EMAC_ROCKCHIP">
				<label>Rockchip EMAC support</label>
				<help>Support for Rockchip RK3036/RK3066/RK3188 EMAC ethernet controllers.
This selects Rockchip SoC glue layer support for the
emac device driver. This driver is used for RK3036/RK3066/RK3188
EMAC ethernet controller.</help>
			</entry>
			<entry name="NET_VENDOR_ATHEROS">
				<label>Atheros devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Atheros devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="ATL2">
				<label>Atheros L2 Fast Ethernet support</label>
				<help>This driver supports the Atheros L2 fast ethernet adapter.

To compile this driver as a module, choose M here.  The module
will be called atl2.</help>
			</entry>
			<entry name="ATL1">
				<label>Atheros/Attansic L1 Gigabit Ethernet support</label>
				<help>This driver supports the Atheros/Attansic L1 gigabit ethernet
adapter.

To compile this driver as a module, choose M here.  The module
will be called atl1.</help>
			</entry>
			<entry name="ATL1E">
				<label>Atheros L1E Gigabit Ethernet support</label>
				<help>This driver supports the Atheros L1E gigabit ethernet adapter.

To compile this driver as a module, choose M here.  The module
will be called atl1e.</help>
			</entry>
			<entry name="ATL1C">
				<label>Atheros L1C Gigabit Ethernet support</label>
				<help>This driver supports the Atheros L1C gigabit ethernet adapter.

To compile this driver as a module, choose M here.  The module
will be called atl1c.</help>
			</entry>
			<entry name="ALX">
				<label>Qualcomm Atheros AR816x/AR817x support</label>
				<help>This driver supports the Qualcomm Atheros L1F ethernet adapter,
i.e. the following chipsets:

1969:1091 - AR8161 Gigabit Ethernet
1969:1090 - AR8162 Fast Ethernet
1969:10A1 - AR8171 Gigabit Ethernet
1969:10A0 - AR8172 Fast Ethernet

To compile this driver as a module, choose M here.  The module
will be called alx.</help>
			</entry>
			<entry name="NET_VENDOR_AURORA">
				<label>Aurora VLSI devices</label>
				<help>If you have a network (Ethernet) device belonging to this class,
say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
questions about Aurora devices. If you say Y, you will be asked
for your specific device in the following questions.</help>
			</entry>
			<entry name="AURORA_NB8800">
				<label>Aurora AU-NB8800 support</label>
				<help>Support for the AU-NB8800 gigabit Ethernet controller.</help>
			</entry>
			<entry name="NET_CADENCE">
				<label>Cadence devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

If unsure, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the remaining Atmel network card questions. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="MACB">
				<label>Cadence MACB/GEM support</label>
				<help>The Cadence MACB ethernet interface is found on many Atmel AT32 and
AT91 parts.  This driver also supports the Cadence GEM (Gigabit
Ethernet MAC found in some ARM SoC devices).  Say Y to include
support for the MACB/GEM chip.

To compile this driver as a module, choose M here: the module
will be called macb.</help>
			</entry>
			<entry name="NET_BFIN">
				<label>Blackfin devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

If unsure, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the remaining Blackfin card questions. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="BFIN_MAC">
				<label>Blackfin on-chip MAC support</label>
				<help>This is the driver for Blackfin on-chip mac device. Say Y if you want
it compiled into the kernel. This driver is also available as a
module ( = code which can be inserted in and removed from the running
kernel whenever you want). The module will be called bfin_mac.</help>
			</entry>
			<entry name="BFIN_MAC_USE_L1">
				<label>Use L1 memory for rx/tx packets</label>
				<help>To get maximum network performance, you should use L1 memory as rx/tx
buffers. Say N here if you want to reserve L1 memory for other uses.</help>
			</entry>
			<entry name="BFIN_TX_DESC_NUM">
				<label>Number of transmit buffer packets</label>
				<help>Set the number of buffer packets used in driver.</help>
			</entry>
			<entry name="BFIN_RX_DESC_NUM">
				<label>Number of receive buffer packets</label>
				<help>Set the number of buffer packets used in driver.</help>
			</entry>
			<entry name="BFIN_MAC_USE_HWSTAMP">
				<label>Use IEEE 1588 hwstamp</label>
				<help>To support the IEEE 1588 Precision Time Protocol (PTP), select y here</help>
			</entry>
			<entry name="NET_VENDOR_BROADCOM">
				<label>Broadcom devices</label>
				<help>If you have a network (Ethernet) chipset belonging to this class,
say Y.

Note that the answer to this question does not directly affect
the kernel: saying N will just case the configurator to skip all
the questions regarding AMD chipsets. If you say Y, you will be asked
for your specific chipset/driver in the following questions.</help>
			</entry>
			<entry name="B44">
				<label>Broadcom 440x/47xx ethernet support</label>
				<help>If you have a network (Ethernet) controller of this type, say Y
or M here.

To compile this driver as a module, choose M here. The module
will be called b44.</help>
			</entry>
			<entry name="B44_PCI_AUTOSELECT"/>
			<entry name="B44_PCICORE_AUTOSELECT"/>
			<entry name="B44_PCI"/>
			<entry name="BCM63XX_ENET">
				<label>Broadcom 63xx internal mac support</label>
				<help>This driver supports the ethernet MACs in the Broadcom 63xx
MIPS chipset family (BCM63XX).</help>
			</entry>
			<entry name="BCMGENET">
				<label>Broadcom GENET internal MAC support</label>
				<help>This driver supports the built-in Ethernet MACs found in the
Broadcom BCM7xxx Set Top Box family chipset.</help>
			</entry>
			<entry name="BNX2">
				<label>QLogic bnx2 support</label>
				<help>This driver supports QLogic bnx2 gigabit Ethernet cards.

To compile this driver as a module, choose M here: the module
will be called bnx2.  This is recommended.</help>
			</entry>
			<entry name="CNIC">
				<label>QLogic CNIC support</label>
				<help>This driver supports offload features of QLogic bnx2 gigabit
Ethernet cards.

To compile this driver as a module, choose M here: the module
will be called cnic.  This is recommended.</help>
			</entry>
			<entry name="SB1250_MAC">
				<label>SB1250 Gigabit Ethernet support</label>
				<help>This driver supports Gigabit Ethernet interfaces based on the
Broadcom SiByte family of System-On-a-Chip parts.  They include
the BCM1120, BCM1125, BCM1125H, BCM1250, BCM1255, BCM1280, BCM1455
and BCM1480 chips.

To compile this driver as a module, choose M here: the module
will be called sb1250-mac.</help>
			</entry>
			<entry name="TIGON3">
				<label>Broadcom Tigon3 support</label>
				<help>This driver supports Broadcom Tigon3 based gigabit Ethernet cards.

To compile this driver as a module, choose M here: the module
will be called tg3.  This is recommended.</help>
			</entry>
			<entry name="BNX2X">
				<label>Broadcom NetXtremeII 10Gb support</label>
				<help>This driver supports Broadcom NetXtremeII 10 gigabit Ethernet cards.
To compile this driver as a module, choose M here: the module
will be called bnx2x.  This is recommended.</help>
			</entry>
			<entry name="BNX2X_SRIOV">
				<label>Broadcom 578xx and 57712 SR-IOV support</label>
				<help>This configuration parameter enables Single Root Input Output
Virtualization support in the 578xx and 57712 products. This
allows for virtual function acceleration in virtual environments.</help>
			</entry>
			<entry name="BGMAC">
				<help>This enables the integrated ethernet controller support for many
Broadcom (mostly iProc) SoCs. An appropriate bus interface driver
needs to be enabled to select this.</help>
			</entry>
			<entry name="BGMAC_BCMA">
				<label>Broadcom iProc GBit BCMA support</label>
				<help>This driver supports GBit MAC and BCM4706 GBit MAC cores on BCMA bus.
They can be found on BCM47xx SoCs and provide gigabit ethernet.
In case of using this driver on BCM4706 it's also requires to enable
BCMA_DRIVER_GMAC_CMN to make it work.</help>
			</entry>
			<entry name="BGMAC_PLATFORM">
				<label>Broadcom iProc GBit platform support</label>
				<help>Say Y here if you want to use the Broadcom iProc Gigabit Ethernet
controller through the generic platform interface</help>
			</entry>
			<entry name="SYSTEMPORT">
				<label>Broadcom SYSTEMPORT internal MAC support</label>
				<help>This driver supports the built-in Ethernet MACs found in the
Broadcom BCM7xxx Set Top Box family chipset using an internal
Ethernet switch.</help>
			</entry>
			<entry name="BNXT">
				<label>Broadcom NetXtreme-C/E support</label>
				<help>This driver supports Broadcom NetXtreme-C/E 10/25/40/50 gigabit
Ethernet cards.  To compile this driver as a module, choose M here:
the module will be called bnxt_en.  This is recommended.</help>
			</entry>
			<entry name="BNXT_SRIOV">
				<label>Broadcom NetXtreme-C/E SR-IOV support</label>
				<help>This configuration parameter enables Single Root Input Output
Virtualization support in the NetXtreme-C/E products. This
allows for virtual function acceleration in virtual environments.</help>
			</entry>
			<entry name="NET_VENDOR_BROCADE">
				<label>QLogic BR-series devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about QLogic BR-series cards. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="BNA">
				<label>QLogic BR-series 1010/1020/1860 10Gb Ethernet Driver support</label>
				<help>This driver supports QLogic BR-series 1010/1020/1860 10Gb CEE capable
Ethernet cards.
To compile this driver as a module, choose M here: the module
will be called bna.

For general information and support, go to the QLogic support
website at:

&lt;http://support.qlogic.com&gt;
</help>
			</entry>
			<entry name="NET_CALXEDA_XGMAC">
				<label>Calxeda 1G/10G XGMAC Ethernet driver</label>
				<help>This is the driver for the XGMAC Ethernet IP block found on Calxeda
Highbank platforms.
</help>
			</entry>
			<entry name="NET_VENDOR_CAVIUM">
				<label>Cavium ethernet drivers</label>
				<help>Select this option if you want enable Cavium network support.

If you have a Cavium SoC or network adapter, say Y.</help>
			</entry>
			<entry name="THUNDER_NIC_PF">
				<label>Thunder Physical function driver</label>
				<help>This driver supports Thunder's NIC physical function.
The NIC provides the controller and DMA engines to
move network traffic to/from the memory. The NIC
works closely with TNS, BGX and SerDes to implement the
functions replacing and virtualizing those of a typical
standalone PCIe NIC chip.</help>
			</entry>
			<entry name="THUNDER_NIC_VF">
				<label>Thunder Virtual function driver</label>
				<help>This driver supports Thunder's NIC virtual function</help>
			</entry>
			<entry name="THUNDER_NIC_BGX">
				<label>Thunder MAC interface driver (BGX)</label>
				<help>This driver supports programming and controlling of MAC
interface from NIC physical function driver.</help>
			</entry>
			<entry name="LIQUIDIO">
				<label>Cavium LiquidIO support</label>
				<help>This driver supports Cavium LiquidIO Intelligent Server Adapters
based on CN66XX and CN68XX chips.

To compile this driver as a module, choose M here: the module
will be called liquidio.  This is recommended.</help>
			</entry>
			<entry name="OCTEON_MGMT_ETHERNET">
				<label>Octeon Management port ethernet driver (CN5XXX, CN6XXX)</label>
				<help>Enable the ethernet driver for the management
port on Cavium Networks' Octeon CN57XX, CN56XX, CN55XX,
CN54XX, CN52XX, and CN6XXX chips.</help>
			</entry>
			<entry name="NET_VENDOR_CHELSIO">
				<label>Chelsio devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Chelsio devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="CHELSIO_T1">
				<label>Chelsio 10Gb Ethernet support</label>
				<help>This driver supports Chelsio gigabit and 10-gigabit
Ethernet cards. More information about adapter features and
performance tuning is in &lt;file:Documentation/networking/cxgb.txt&gt;.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module, choose M here: the module
will be called cxgb.</help>
			</entry>
			<entry name="CHELSIO_T1_1G">
				<label>Chelsio gigabit Ethernet support</label>
				<help>Enables support for Chelsio's gigabit Ethernet PCI cards.  If you
are using only 10G cards say 'N' here.</help>
			</entry>
			<entry name="CHELSIO_T3">
				<label>Chelsio Communications T3 10Gb Ethernet support</label>
				<help>This driver supports Chelsio T3-based gigabit and 10Gb Ethernet
adapters.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module, choose M here: the module
will be called cxgb3.</help>
			</entry>
			<entry name="CHELSIO_T4">
				<label>Chelsio Communications T4/T5/T6 Ethernet support</label>
				<help>This driver supports Chelsio T4, T5 &amp; T6 based gigabit, 10Gb Ethernet
adapter and T5/T6 based 40Gb and T6 based 25Gb, 50Gb and 100Gb
Ethernet adapters.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module choose M here; the module
will be called cxgb4.</help>
			</entry>
			<entry name="CHELSIO_T4_DCB">
				<label>Data Center Bridging (DCB) Support for Chelsio T4/T5/T6 cards</label>
				<help>Enable DCB support through rtNetlink interface.
Say Y here if you want to enable Data Center Bridging (DCB) support
in the driver.

If unsure, say N.</help>
			</entry>
			<entry name="CHELSIO_T4_FCOE">
				<label>Fibre Channel over Ethernet (FCoE) Support for Chelsio T5 cards</label>
				<help>Enable FCoE offload features.
Say Y here if you want to enable Fibre Channel over Ethernet (FCoE) support
in the driver.

If unsure, say N.</help>
			</entry>
			<entry name="CHELSIO_T4VF">
				<label>Chelsio Communications T4/T5/T6 Virtual Function Ethernet support</label>
				<help>This driver supports Chelsio T4, T5 &amp; T6 based gigabit, 10Gb Ethernet
adapters and T5/T6 based 40Gb and T6 based 25Gb, 50Gb and 100Gb
Ethernet adapters with PCI-E SR-IOV Virtual Functions.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module choose M here; the module
will be called cxgb4vf.</help>
			</entry>
			<entry name="CHELSIO_LIB">
				<help>Common library for Chelsio drivers.</help>
			</entry>
			<entry name="NET_VENDOR_CIRRUS">
				<label>Cirrus devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Cirrus cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="CS89x0">
				<label>CS89x0 support</label>
				<help>Support for CS89x0 chipset based Ethernet cards. If you have a
network (Ethernet) card of this type, say Y and read the file
&lt;file:Documentation/networking/cs89x0.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called cs89x0.</help>
			</entry>
			<entry name="CS89x0_PLATFORM">
				<label>CS89x0 platform driver support&quot; if HAS_IOPORT_MAP</label>
				<help>Say Y to compile the cs89x0 driver as a platform driver. This
makes this driver suitable for use on certain evaluation boards
such as the iMX21ADS.

If you are unsure, say N.</help>
			</entry>
			<entry name="EP93XX_ETH">
				<label>EP93xx Ethernet support</label>
				<help>This is a driver for the ethernet hardware included in EP93xx CPUs.
Say Y if you are building a kernel for EP93xx based devices.</help>
			</entry>
			<entry name="MAC89x0">
				<label>Macintosh CS89x0 based ethernet cards</label>
				<help>Support for CS89x0 chipset based Ethernet cards.  If you have a
Nubus or LC-PDS network (Ethernet) card of this type, say Y here.

To compile this driver as a module, choose M here. This module will
be called mac89x0.</help>
			</entry>
			<entry name="NET_VENDOR_CISCO">
				<label>Cisco devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Cisco cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ENIC">
				<label>Cisco VIC Ethernet NIC Support</label>
				<help>This enables the support for the Cisco VIC Ethernet card.
</help>
			</entry>
			<entry name="CX_ECAT">
				<label>Beckhoff CX5020 EtherCAT master support</label>
				<help>Driver for EtherCAT master module located on CCAT FPGA
that can be found on Beckhoff CX5020, and possibly other of CX
Beckhoff CX series industrial PCs.

To compile this driver as a module, choose M here. The module
will be called ec_bhf.</help>
			</entry>
			<entry name="DM9000">
				<label>DM9000 support</label>
				<help>Support for DM9000 chipset.

To compile this driver as a module, choose M here.  The module
will be called dm9000.</help>
			</entry>
			<entry name="DM9000_FORCE_SIMPLE_PHY_POLL">
				<label>Force simple NSR based PHY polling</label>
				<help>This configuration forces the DM9000 to use the NSR's LinkStatus
bit to determine if the link is up or down instead of the more
costly MII PHY reads. Note, this will not work if the chip is
operating with an external PHY.
</help>
			</entry>
			<entry name="DNET">
				<label>Dave ethernet support (DNET)</label>
				<help>The Dave ethernet interface (DNET) is found on Qong Board FPGA.
Say Y to include support for the DNET chip.

To compile this driver as a module, choose M here: the module
will be called dnet.</help>
			</entry>
			<entry name="NET_VENDOR_DEC">
				<label>Digital Equipment devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about DEC cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="NET_TULIP">
				<label>DEC - Tulip devices</label>
				<help>This selects the &quot;Tulip&quot; family of EISA/PCI network cards.</help>
			</entry>
			<entry name="DE2104X">
				<label>Early DECchip Tulip (dc2104x) PCI support</label>
				<help>This driver is developed for the SMC EtherPower series Ethernet
cards and also works with cards based on the DECchip
21040 (Tulip series) chips.  Some LinkSys PCI cards are
of this type.  (If your card is NOT SMC EtherPower 10/100 PCI
(smc9332dst), you can also try the driver for &quot;Generic DECchip&quot;
cards, below.  However, most people with a network card of this type
will say Y here.)

To compile this driver as a module, choose M here. The module will
be called de2104x.</help>
			</entry>
			<entry name="DE2104X_DSL">
				<label>Descriptor Skip Length in 32 bit longwords</label>
				<help>Setting this value allows to align ring buffer descriptors into their
own cache lines. Value of 4 corresponds to the typical 32 byte line
(the descriptor is 16 bytes). This is necessary on systems that lack
cache coherence, an example is PowerMac 5500. Otherwise 0 is safe.
Default is 0, and range is 0 to 31.</help>
			</entry>
			<entry name="TULIP">
				<label>DECchip Tulip (dc2114x) PCI support</label>
				<help>This driver is developed for the SMC EtherPower series Ethernet
cards and also works with cards based on the DECchip
21140 (Tulip series) chips.  Some LinkSys PCI cards are
of this type.  (If your card is NOT SMC EtherPower 10/100 PCI
(smc9332dst), you can also try the driver for &quot;Generic DECchip&quot;
cards, above.  However, most people with a network card of this type
will say Y here.)

To compile this driver as a module, choose M here. The module will
be called tulip.</help>
			</entry>
			<entry name="TULIP_MWI">
				<label>New bus configuration</label>
				<help>This configures your Tulip card specifically for the card and
system cache line size type you are using.

This is experimental code, not yet tested on many boards.

If unsure, say N.</help>
			</entry>
			<entry name="TULIP_MMIO">
				<label>Use PCI shared mem for NIC registers</label>
				<help>Use PCI shared memory for the NIC registers, rather than going through
the Tulip's PIO (programmed I/O ports).  Faster, but could produce
obscure bugs if your mainboard has memory controller timing issues.
If in doubt, say N.</help>
			</entry>
			<entry name="TULIP_NAPI">
				<label>Use RX polling (NAPI)</label>
				<help>NAPI is a new driver API designed to reduce CPU and interrupt load
when the driver is receiving lots of packets from the card. It is
still somewhat experimental and thus not yet enabled by default.

If your estimated Rx load is 10kpps or more, or if the card will be
deployed on potentially unfriendly networks (e.g. in a firewall),
then say Y here.

If in doubt, say N.</help>
			</entry>
			<entry name="TULIP_NAPI_HW_MITIGATION">
				<label>Use Interrupt Mitigation</label>
				<help>Use HW to reduce RX interrupts. Not strictly necessary since NAPI
reduces RX interrupts by itself. Interrupt mitigation reduces RX
interrupts even at low levels of traffic at the cost of a small
latency.

If in doubt, say Y.</help>
			</entry>
			<entry name="TULIP_DM910X"/>
			<entry name="DE4X5">
				<label>Generic DECchip &amp; DIGITAL EtherWORKS PCI/EISA</label>
				<help>This is support for the DIGITAL series of PCI/EISA Ethernet cards.
These include the DE425, DE434, DE435, DE450 and DE500 models.  If
you have a network card of this type, say Y.  More specific
information is contained in
&lt;file:Documentation/networking/de4x5.txt&gt;.

To compile this driver as a module, choose M here. The module will
be called de4x5.</help>
			</entry>
			<entry name="WINBOND_840">
				<label>Winbond W89c840 Ethernet support</label>
				<help>This driver is for the Winbond W89c840 chip.  It also works with
the TX9882 chip on the Compex RL100-ATX board.
More specific information and updates are available from
&lt;http://www.scyld.com/network/drivers.html&gt;.</help>
			</entry>
			<entry name="DM9102">
				<label>Davicom DM910x/DM980x support</label>
				<help>This driver is for DM9102(A)/DM9132/DM9801 compatible PCI cards from
Davicom (&lt;http://www.davicom.com.tw/&gt;).  If you have such a network
(Ethernet) card, say Y.  Some information is contained in the file
&lt;file:Documentation/networking/dmfe.txt&gt;.

To compile this driver as a module, choose M here. The module will
be called dmfe.</help>
			</entry>
			<entry name="ULI526X">
				<label>ULi M526x controller support</label>
				<help>This driver is for ULi M5261/M5263 10/100M Ethernet Controller
(&lt;http://www.nvidia.com/page/uli_drivers.html&gt;).

To compile this driver as a module, choose M here. The module will
be called uli526x.</help>
			</entry>
			<entry name="PCMCIA_XIRCOM">
				<label>Xircom CardBus support</label>
				<help>This driver is for the Digital &quot;Tulip&quot; Ethernet CardBus adapters.
It should work with most DEC 21*4*-based chips/ethercards, as well
as with work-alike chips from Lite-On (PNIC) and Macronix (MXIC) and
ASIX.

To compile this driver as a module, choose M here. The module will
be called xircom_cb.  If unsure, say N.</help>
			</entry>
			<entry name="NET_VENDOR_DLINK">
				<label>D-Link devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about D-Link devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="DL2K">
				<label>DL2000/TC902x/IP1000A-based Gigabit Ethernet support</label>
				<help>This driver supports DL2000/TC902x/IP1000A-based Gigabit ethernet cards,
which includes
D-Link DGE-550T Gigabit Ethernet Adapter.
D-Link DL2000-based Gigabit Ethernet Adapter.
Sundance/Tamarack TC902x Gigabit Ethernet Adapter.
ICPlus IP1000A-based cards

To compile this driver as a module, choose M here: the
module will be called dl2k.</help>
			</entry>
			<entry name="SUNDANCE">
				<label>Sundance Alta support</label>
				<help>This driver is for the Sundance &quot;Alta&quot; chip.
More specific information and updates are available from
&lt;http://www.scyld.com/network/sundance.html&gt;.</help>
			</entry>
			<entry name="SUNDANCE_MMIO">
				<label>Use MMIO instead of PIO</label>
				<help>Enable memory-mapped I/O for interaction with Sundance NIC registers.
Do NOT enable this by default, PIO (enabled when MMIO is disabled)
is known to solve bugs on certain chips.

If unsure, say N.</help>
			</entry>
			<entry name="NET_VENDOR_EMULEX">
				<label>Emulex devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Emulex cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="BE2NET">
				<label>ServerEngines' 10Gbps NIC - BladeEngine</label>
				<help>This driver implements the NIC functionality for ServerEngines'
10Gbps network adapter - BladeEngine.</help>
			</entry>
			<entry name="BE2NET_HWMON">
				<label>HWMON support for be2net driver</label>
				<help>Say Y here if you want to expose thermal sensor data on
be2net network adapter.
</help>
			</entry>
			<entry name="NET_VENDOR_EZCHIP">
				<label>EZchip devices</label>
				<help>If you have a network (Ethernet) device belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about EZchip devices. If you say Y, you will be asked for
your specific device in the following questions.</help>
			</entry>
			<entry name="EZCHIP_NPS_MANAGEMENT_ENET">
				<label>EZchip NPS management enet support</label>
				<help>Simple LAN device for debug or management purposes.
Device supports interrupts for RX and TX(completion).
Device does not have DMA ability.</help>
			</entry>
			<entry name="NET_VENDOR_EXAR">
				<label>Exar devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Exar cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="S2IO">
				<label>Exar Xframe 10Gb Ethernet Adapter</label>
				<help>This driver supports Exar Corp's Xframe Series 10Gb Ethernet Adapters.

More specific information on configuring the driver is in
&lt;file:Documentation/networking/s2io.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called s2io.</help>
			</entry>
			<entry name="VXGE">
				<label>Exar X3100 Series 10GbE PCIe Server Adapter</label>
				<help>This driver supports Exar Corp's X3100 Series 10 GbE PCIe
I/O Virtualized Server Adapter.

More specific information on configuring the driver is in
&lt;file:Documentation/networking/vxge.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called vxge.</help>
			</entry>
			<entry name="VXGE_DEBUG_TRACE_ALL">
				<label>Enabling All Debug trace statements in driver</label>
				<help>Say Y here if you want to enabling all the debug trace statements in
the vxge driver. By default only few debug trace statements are
enabled.</help>
			</entry>
			<entry name="NET_VENDOR_FARADAY">
				<label>Faraday devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Faraday cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="FTMAC100">
				<label>Faraday FTMAC100 10/100 Ethernet support</label>
				<help>This driver supports the FTMAC100 10/100 Ethernet controller
from Faraday. It is used on Faraday A320, Andes AG101 and some
other ARM/NDS32 SoC's.</help>
			</entry>
			<entry name="FTGMAC100">
				<label>Faraday FTGMAC100 Gigabit Ethernet support</label>
				<help>This driver supports the FTGMAC100 Gigabit Ethernet controller
from Faraday. It is used on Faraday A369, Andes AG102 and some
other ARM/NDS32 SoC's.</help>
			</entry>
			<entry name="NET_VENDOR_FREESCALE">
				<label>Freescale devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Freescale devices. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="FEC">
				<label>FEC ethernet controller (of ColdFire and some i.MX CPUs)</label>
				<help>Say Y here if you want to use the built-in 10/100 Fast ethernet
controller on some Motorola ColdFire and Freescale i.MX processors.</help>
			</entry>
			<entry name="FEC_MPC52xx">
				<label>FEC MPC52xx driver</label>
				<help>This option enables support for the MPC5200's on-chip
Fast Ethernet Controller
If compiled as module, it will be called fec_mpc52xx.</help>
			</entry>
			<entry name="FEC_MPC52xx_MDIO">
				<label>FEC MPC52xx MDIO bus driver</label>
				<help>The MPC5200's FEC can connect to the Ethernet either with
an external MII PHY chip or 10 Mbps 7-wire interface
(Motorola? industry standard).
If your board uses an external PHY connected to FEC, enable this.
If not sure, enable.
If compiled as module, it will be called fec_mpc52xx_phy.</help>
			</entry>
			<entry name="FS_ENET">
				<label>Freescale Ethernet Driver</label>
			</entry>
			<entry name="FS_ENET_MPC5121_FEC"/>
			<entry name="FS_ENET_HAS_SCC">
				<label>Chip has an SCC usable for ethernet</label>
			</entry>
			<entry name="FS_ENET_HAS_FCC">
				<label>Chip has an FCC usable for ethernet</label>
			</entry>
			<entry name="FS_ENET_HAS_FEC">
				<label>Chip has an FEC usable for ethernet</label>
			</entry>
			<entry name="FS_ENET_MDIO_FEC">
				<label>MDIO driver for FEC</label>
			</entry>
			<entry name="FS_ENET_MDIO_FCC">
				<label>MDIO driver for FCC</label>
			</entry>
			<entry name="FSL_FMAN">
				<label>FMan support</label>
				<help>Freescale Data-Path Acceleration Architecture Frame Manager
(FMan) support
</help>
			</entry>
			<entry name="FSL_PQ_MDIO">
				<label>Freescale PQ MDIO</label>
				<help>This driver supports the MDIO bus used by the gianfar and UCC drivers.</help>
			</entry>
			<entry name="FSL_XGMAC_MDIO">
				<label>Freescale XGMAC MDIO</label>
				<help>This driver supports the MDIO bus on the Fman 10G Ethernet MACs, and
on the FMan mEMAC (which supports both Clauses 22 and 45)</help>
			</entry>
			<entry name="UCC_GETH">
				<label>Freescale QE Gigabit Ethernet</label>
				<help>This driver supports the Gigabit Ethernet mode of the QUICC Engine,
which is available on some Freescale SOCs.</help>
			</entry>
			<entry name="UGETH_TX_ON_DEMAND">
				<label>Transmit on Demand support</label>
			</entry>
			<entry name="GIANFAR">
				<label>Gianfar Ethernet</label>
				<help>This driver supports the Gigabit TSEC on the MPC83xx, MPC85xx,
and MPC86xx family of chips, the eTSEC on LS1021A and the FEC
on the 8540.</help>
			</entry>
			<entry name="NET_VENDOR_FUJITSU">
				<label>Fujitsu devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
the questions about Fujitsu cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="PCMCIA_FMVJ18X">
				<label>Fujitsu FMV-J18x PCMCIA support</label>
				<help>Say Y here if you intend to attach a Fujitsu FMV-J18x or compatible
PCMCIA (PC-card) Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called fmvj18x_cs.  If unsure, say N.</help>
			</entry>
			<entry name="NET_VENDOR_HISILICON">
				<label>Hisilicon devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Hisilicon devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="HIX5HD2_GMAC">
				<label>Hisilicon HIX5HD2 Family Network Device Support</label>
				<help>This selects the hix5hd2 mac family network device.</help>
			</entry>
			<entry name="HISI_FEMAC">
				<label>Hisilicon Fast Ethernet MAC device support</label>
				<help>This selects the Hisilicon Fast Ethernet MAC device(FEMAC).
The FEMAC receives and transmits data over Ethernet
ports at 10/100 Mbps in full-duplex or half-duplex mode.
The FEMAC exchanges data with the CPU, and supports
the energy efficient Ethernet (EEE).</help>
			</entry>
			<entry name="HIP04_ETH">
				<label>HISILICON P04 Ethernet support</label>
				<help>If you wish to compile a kernel for a hardware with hisilicon p04 SoC and
want to use the internal ethernet then you should answer Y to this.</help>
			</entry>
			<entry name="HNS_MDIO">
				<help>This selects the HNS MDIO support. It is needed by HNS_DSAF to access
the PHY</help>
			</entry>
			<entry name="HNS">
				<label>Hisilicon Network Subsystem Support (Framework)</label>
				<help>This selects the framework support for Hisilicon Network Subsystem. It
is needed by any driver which provides HNS acceleration engine or make
use of the engine</help>
			</entry>
			<entry name="HNS_DSAF">
				<label>Hisilicon HNS DSAF device Support</label>
				<help>This selects the DSAF (Distributed System Area Frabric) network
acceleration engine support. The engine is used in Hisilicon hip05,
Hi1610 and further ICT SoC</help>
			</entry>
			<entry name="HNS_ENET">
				<label>Hisilicon HNS Ethernet Device Support</label>
				<help>This selects the general ethernet driver for HNS.  This module make
use of any HNS AE driver, such as HNS_DSAF</help>
			</entry>
			<entry name="NET_VENDOR_HP">
				<label>HP devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about HP cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="HP100">
				<label>HP 10/100VG PCLAN (ISA, EISA, PCI) support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.

To compile this driver as a module, choose M here. The module
will be called hp100.</help>
			</entry>
			<entry name="NET_VENDOR_IBM">
				<label>IBM devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about IBM devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="IBMVETH">
				<label>IBM LAN Virtual Ethernet support</label>
				<help>This driver supports virtual ethernet adapters on newer IBM iSeries
and pSeries systems.

To compile this driver as a module, choose M here. The module will
be called ibmveth.</help>
			</entry>
			<entry name="IBM_EMAC">
				<label>IBM EMAC Ethernet support</label>
				<help>This driver supports the IBM EMAC family of Ethernet controllers
typically found on 4xx embedded PowerPC chips, but also on the
Axon southbridge for Cell.</help>
			</entry>
			<entry name="IBM_EMAC_RXB">
				<label>Number of receive buffers</label>
			</entry>
			<entry name="IBM_EMAC_TXB">
				<label>Number of transmit buffers</label>
			</entry>
			<entry name="IBM_EMAC_POLL_WEIGHT">
				<label>MAL NAPI polling weight</label>
			</entry>
			<entry name="IBM_EMAC_RX_COPY_THRESHOLD">
				<label>RX skb copy threshold (bytes)</label>
			</entry>
			<entry name="IBM_EMAC_RX_SKB_HEADROOM">
				<label>Additional RX skb headroom (bytes)</label>
				<help>Additional receive skb headroom. Note, that driver
will always reserve at least 2 bytes to make IP header
aligned, so usually there is no need to add any additional
headroom.

If unsure, set to 0.</help>
			</entry>
			<entry name="IBM_EMAC_DEBUG">
				<label>Debugging</label>
			</entry>
			<entry name="IBM_EMAC_ZMII"/>
			<entry name="IBM_EMAC_RGMII"/>
			<entry name="IBM_EMAC_TAH"/>
			<entry name="IBM_EMAC_EMAC4"/>
			<entry name="IBM_EMAC_NO_FLOW_CTRL"/>
			<entry name="IBM_EMAC_MAL_CLR_ICINTSTAT"/>
			<entry name="IBM_EMAC_MAL_COMMON_ERR"/>
			<entry name="EHEA">
				<label>eHEA Ethernet support</label>
				<help>This driver supports the IBM pSeries eHEA ethernet adapter.

To compile the driver as a module, choose M here. The module
will be called ehea.</help>
			</entry>
			<entry name="IBMVNIC">
				<label>IBM Virtual NIC support</label>
				<help>This driver supports Virtual NIC adapters on IBM i and IBM System p
systems.

To compile this driver as a module, choose M here. The module will
be called ibmvnic.</help>
			</entry>
			<entry name="NET_VENDOR_INTEL">
				<label>Intel devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Intel cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="E100">
				<label>Intel(R) PRO/100+ support</label>
				<help>This driver supports Intel(R) PRO/100 family of adapters.
To verify that your adapter is supported, find the board ID number
on the adapter. Look for a label that has a barcode and a number
in the format 123456-001 (six digits hyphen three digits).

Use the above information and the Adapter &amp; Driver ID Guide that
can be located at:

&lt;http://support.intel.com&gt;

to identify the adapter.

More specific information on configuring the driver is in
&lt;file:Documentation/networking/e100.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called e100.</help>
			</entry>
			<entry name="E1000">
				<label>Intel(R) PRO/1000 Gigabit Ethernet support</label>
				<help>This driver supports Intel(R) PRO/1000 gigabit ethernet family of
adapters.  For more information on how to identify your adapter, go
to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

More specific information on configuring the driver is in
&lt;file:Documentation/networking/e1000.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called e1000.</help>
			</entry>
			<entry name="E1000E">
				<label>Intel(R) PRO/1000 PCI-Express Gigabit Ethernet support</label>
				<help>This driver supports the PCI-Express Intel(R) PRO/1000 gigabit
ethernet family of adapters. For PCI or PCI-X e1000 adapters,
use the regular e1000 driver For more information on how to
identify your adapter, go to the Adapter &amp; Driver ID Guide that
can be located at:

&lt;http://support.intel.com&gt;

To compile this driver as a module, choose M here. The module
will be called e1000e.</help>
			</entry>
			<entry name="E1000E_HWTS">
				<label>Support HW cross-timestamp on PCH devices</label>
				<help>Say Y to enable hardware supported cross-timestamping on PCH
devices. The cross-timestamp is available through the PTP clock
driver precise cross-timestamp ioctl (PTP_SYS_OFFSET_PRECISE).</help>
			</entry>
			<entry name="IGB">
				<label>Intel(R) 82575/82576 PCI-Express Gigabit Ethernet support</label>
				<help>This driver supports Intel(R) 82575/82576 gigabit ethernet family of
adapters.  For more information on how to identify your adapter, go
to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

More specific information on configuring the driver is in
&lt;file:Documentation/networking/e1000.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called igb.</help>
			</entry>
			<entry name="IGB_HWMON">
				<label>Intel(R) PCI-Express Gigabit adapters HWMON support</label>
				<help>Say Y if you want to expose thermal sensor data on Intel devices.

Some of our devices contain thermal sensors, both external and internal.
This data is available via the hwmon sysfs interface and exposes
the onboard sensors.</help>
			</entry>
			<entry name="IGB_DCA">
				<label>Direct Cache Access (DCA) Support</label>
				<help>Say Y here if you want to use Direct Cache Access (DCA) in the
driver.  DCA is a method for warming the CPU cache before data
is used, with the intent of lessening the impact of cache misses.</help>
			</entry>
			<entry name="IGBVF">
				<label>Intel(R) 82576 Virtual Function Ethernet support</label>
				<help>This driver supports Intel(R) 82576 virtual functions.  For more
information on how to identify your adapter, go to the Adapter &amp;
Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

More specific information on configuring the driver is in
&lt;file:Documentation/networking/e1000.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called igbvf.</help>
			</entry>
			<entry name="IXGB">
				<label>Intel(R) PRO/10GbE support</label>
				<help>This driver supports Intel(R) PRO/10GbE family of adapters for
PCI-X type cards. For PCI-E type cards, use the &quot;ixgbe&quot; driver
instead. For more information on how to identify your adapter, go
to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

More specific information on configuring the driver is in
&lt;file:Documentation/networking/ixgb.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called ixgb.</help>
			</entry>
			<entry name="IXGBE">
				<label>Intel(R) 10GbE PCI Express adapters support</label>
				<help>This driver supports Intel(R) 10GbE PCI Express family of
adapters.  For more information on how to identify your adapter, go
to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

To compile this driver as a module, choose M here. The module
will be called ixgbe.</help>
			</entry>
			<entry name="IXGBE_HWMON">
				<label>Intel(R) 10GbE PCI Express adapters HWMON support</label>
				<help>Say Y if you want to expose the thermal sensor data on some of
our cards, via a hwmon sysfs interface.</help>
			</entry>
			<entry name="IXGBE_DCA">
				<label>Direct Cache Access (DCA) Support</label>
				<help>Say Y here if you want to use Direct Cache Access (DCA) in the
driver.  DCA is a method for warming the CPU cache before data
is used, with the intent of lessening the impact of cache misses.</help>
			</entry>
			<entry name="IXGBE_DCB">
				<label>Data Center Bridging (DCB) Support</label>
				<help>Say Y here if you want to use Data Center Bridging (DCB) in the
driver.

If unsure, say N.</help>
			</entry>
			<entry name="IXGBEVF">
				<label>Intel(R) 10GbE PCI Express Virtual Function Ethernet support</label>
				<help>This driver supports Intel(R) PCI Express virtual functions for the
Intel(R) ixgbe driver.  For more information on how to identify your
adapter, go to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

More specific information on configuring the driver is in
&lt;file:Documentation/networking/ixgbevf.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called ixgbevf.  MSI-X interrupt support is required
for this driver to work correctly.</help>
			</entry>
			<entry name="I40E">
				<label>Intel(R) Ethernet Controller XL710 Family support</label>
				<help>This driver supports Intel(R) Ethernet Controller XL710 Family of
devices.  For more information on how to identify your adapter, go
to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

To compile this driver as a module, choose M here. The module
will be called i40e.</help>
			</entry>
			<entry name="I40E_DCB">
				<label>Data Center Bridging (DCB) Support</label>
				<help>Say Y here if you want to use Data Center Bridging (DCB) in the
driver.

If unsure, say N.</help>
			</entry>
			<entry name="I40E_FCOE">
				<label>Fibre Channel over Ethernet (FCoE)</label>
				<help>Say Y here if you want to use Fibre Channel over Ethernet (FCoE)
in the driver. This will create new netdev for exclusive FCoE
use with XL710 FCoE offloads enabled.

If unsure, say N.</help>
			</entry>
			<entry name="I40EVF">
				<label>Intel(R) XL710 X710 Virtual Function Ethernet support</label>
				<help>This driver supports Intel(R) XL710 and X710 virtual functions.
For more information on how to identify your adapter, go to the
Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

To compile this driver as a module, choose M here. The module
will be called i40evf.  MSI-X interrupt support is required
for this driver to work correctly.</help>
			</entry>
			<entry name="FM10K">
				<label>Intel(R) FM10000 Ethernet Switch Host Interface Support</label>
				<help>This driver supports Intel(R) FM10000 Ethernet Switch Host
Interface.  For more information on how to identify your adapter,
go to the Adapter &amp; Driver ID Guide that can be located at:

&lt;http://support.intel.com&gt;

To compile this driver as a module, choose M here. The module
will be called fm10k.  MSI-X interrupt support is required</help>
			</entry>
			<entry name="NET_VENDOR_I825XX">
				<label>Intel (82586/82593/82596) devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question does not directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about these devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ARM_ETHER1">
				<label>Acorn Ether1 support</label>
				<help>If you have an Acorn system with one of these (AKA25) network cards,
you should say Y to this option if you wish to use it with Linux.</help>
			</entry>
			<entry name="BVME6000_NET">
				<label>BVME6000 Ethernet support</label>
				<help>This is the driver for the Ethernet interface on BVME4000 and
BVME6000 VME boards.  Say Y here to include the driver for this chip
in your kernel.
To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="LASI_82596">
				<label>Lasi ethernet</label>
				<help>Say Y here to support the builtin Intel 82596 ethernet controller
found in Hewlett-Packard PA-RISC machines with 10Mbit ethernet.</help>
			</entry>
			<entry name="MVME16x_NET">
				<label>MVME16x Ethernet support</label>
				<help>This is the driver for the Ethernet interface on the Motorola
MVME162, 166, 167, 172 and 177 boards.  Say Y here to include the
driver for this chip in your kernel.
To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="SNI_82596">
				<label>SNI RM ethernet</label>
				<help>Say Y here to support the on-board Intel 82596 ethernet controller
built into SNI RM machines.</help>
			</entry>
			<entry name="SUN3_82586">
				<label>Sun3 on-board Intel 82586 support</label>
				<help>This driver enables support for the on-board Intel 82586 based
Ethernet adapter found on Sun 3/1xx and 3/2xx motherboards.  Note
that this driver does not support 82586-based adapters on additional
VME boards.</help>
			</entry>
			<entry name="NET_VENDOR_XSCALE">
				<label>Intel XScale IXP devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question does not directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about XSacle IXP devices. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="IXP4XX_ETH">
				<label>Intel IXP4xx Ethernet support</label>
				<help>Say Y here if you want to use built-in Ethernet ports
on IXP4xx processor.</help>
			</entry>
			<entry name="JME">
				<label>JMicron(R) PCI-Express Gigabit Ethernet support</label>
				<help>This driver supports the PCI-Express gigabit ethernet adapters
based on JMicron JMC250 chipset.

To compile this driver as a module, choose M here. The module
will be called jme.</help>
			</entry>
			<entry name="KORINA">
				<label>Korina (IDT RC32434) Ethernet support</label>
				<help>If you have a Mikrotik RouterBoard 500 or IDT RC32434
based system say Y. Otherwise say N.</help>
			</entry>
			<entry name="LANTIQ_ETOP">
				<label>Lantiq SoC ETOP driver</label>
				<help>Support for the MII0 inside the Lantiq SoC</help>
			</entry>
			<entry name="NET_VENDOR_MARVELL">
				<label>Marvell devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Marvell devices. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="MV643XX_ETH">
				<label>Marvell Discovery (643XX) and Orion ethernet support</label>
				<help>This driver supports the gigabit ethernet MACs in the
Marvell Discovery PPC/MIPS chipset family (MV643XX) and
in the Marvell Orion ARM SoC family.

Some boards that use the Discovery chipset are the Momenco
Ocelot C and Jaguar ATX and Pegasos II.</help>
			</entry>
			<entry name="MVMDIO">
				<label>Marvell MDIO interface support</label>
				<help>This driver supports the MDIO interface found in the network
interface units of the Marvell EBU SoCs (Kirkwood, Orion5x,
Dove, Armada 370 and Armada XP).

This driver is used by the MV643XX_ETH and MVNETA drivers.</help>
			</entry>
			<entry name="MVNETA_BM_ENABLE">
				<label>Marvell Armada 38x/XP network interface BM support</label>
				<help>This driver supports auxiliary block of the network
interface units in the Marvell ARMADA XP and ARMADA 38x SoC
family, which is called buffer manager.

This driver, when enabled, strictly cooperates with mvneta
driver and is common for all network ports of the devices,
even for Armada 370 SoC, which doesn't support hardware
buffer management.</help>
			</entry>
			<entry name="MVNETA">
				<label>Marvell Armada 370/38x/XP network interface support</label>
				<help>This driver supports the network interface units in the
Marvell ARMADA XP, ARMADA 370 and ARMADA 38x SoC family.

Note that this driver is distinct from the mv643xx_eth
driver, which should be used for the older Marvell SoCs
(Dove, Orion, Discovery, Kirkwood).</help>
			</entry>
			<entry name="MVNETA_BM">
				<help>MVNETA_BM must not be 'm' if MVNETA=y, so this symbol ensures
that all dependencies are met.</help>
			</entry>
			<entry name="MVPP2">
				<label>Marvell Armada 375 network interface support</label>
				<help>This driver supports the network interface units in the
Marvell ARMADA 375 SoC.</help>
			</entry>
			<entry name="PXA168_ETH">
				<label>Marvell pxa168 ethernet support</label>
				<help>This driver supports the pxa168 Ethernet ports.

To compile this driver as a module, choose M here. The module
will be called pxa168_eth.</help>
			</entry>
			<entry name="SKGE">
				<label>Marvell Yukon Gigabit Ethernet support</label>
				<help>This driver support the Marvell Yukon or SysKonnect SK-98xx/SK-95xx
and related Gigabit Ethernet adapters. It is a new smaller driver
with better performance and more complete ethtool support.

It does not support the link failover and network management
features that &quot;portable&quot; vendor supplied sk98lin driver does.

This driver supports adapters based on the original Yukon chipset:
Marvell 88E8001, Belkin F5D5005, CNet GigaCard, DLink DGE-530T,
Linksys EG1032/EG1064, 3Com 3C940/3C940B, SysKonnect SK-9871/9872.

It does not support the newer Yukon2 chipset: a separate driver,
sky2, is provided for these adapters.

To compile this driver as a module, choose M here: the module
will be called skge.  This is recommended.</help>
			</entry>
			<entry name="SKGE_DEBUG">
				<label>Debugging interface</label>
				<help>This option adds the ability to dump driver state for debugging.
The file /sys/kernel/debug/skge/ethX displays the state of the internal
transmit and receive rings.

If unsure, say N.</help>
			</entry>
			<entry name="SKGE_GENESIS">
				<label>Support for older SysKonnect Genesis boards</label>
				<help>This enables support for the older and uncommon SysKonnect Genesis
chips, which support MII via an external transceiver, instead of
an internal one. Disabling this option will save some memory
by making code smaller. If unsure say Y.</help>
			</entry>
			<entry name="SKY2">
				<label>Marvell Yukon 2 support</label>
				<help>This driver supports Gigabit Ethernet adapters based on the
Marvell Yukon 2 chipset:
Marvell 88E8021/88E8022/88E8035/88E8036/88E8038/88E8050/88E8052/
88E8053/88E8055/88E8061/88E8062, SysKonnect SK-9E21D/SK-9S21

There is companion driver for the older Marvell Yukon and
SysKonnect Genesis based adapters: skge.

To compile this driver as a module, choose M here: the module
will be called sky2.  This is recommended.</help>
			</entry>
			<entry name="SKY2_DEBUG">
				<label>Debugging interface</label>
				<help>This option adds the ability to dump driver state for debugging.
The file /sys/kernel/debug/sky2/ethX displays the state of the internal
transmit and receive rings.

If unsure, say N.</help>
			</entry>
			<entry name="NET_VENDOR_MEDIATEK">
				<label>MediaTek ethernet driver</label>
				<help>If you have a Mediatek SoC with ethernet, say Y.</help>
			</entry>
			<entry name="NET_MEDIATEK_SOC">
				<label>MediaTek MT7623 Gigabit ethernet support</label>
				<help>This driver supports the gigabit ethernet MACs in the
MediaTek MT2701/MT7623 chipset family.</help>
			</entry>
			<entry name="NET_VENDOR_MELLANOX">
				<label>Mellanox devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Mellanox cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="MLX4_EN">
				<label>Mellanox Technologies 1/10/40Gbit Ethernet support</label>
				<help>This driver supports Mellanox Technologies ConnectX Ethernet
devices.</help>
			</entry>
			<entry name="MLX4_EN_DCB">
				<label>Data Center Bridging (DCB) Support</label>
				<help>Say Y here if you want to use Data Center Bridging (DCB) in the
driver.
If set to N, will not be able to configure QoS and ratelimit attributes.
This flag is depended on the kernel's DCB support.

If unsure, set to Y</help>
			</entry>
			<entry name="MLX4_CORE"/>
			<entry name="MLX4_DEBUG">
				<label>Verbose debugging output&quot; if (MLX4_CORE &amp;&amp; EXPERT)</label>
				<help>This option causes debugging code to be compiled into the
mlx4_core driver.  The output can be turned on via the
debug_level module parameter (which can also be set after
the driver is loaded through sysfs).
</help>
			</entry>
			<entry name="MLX5_CORE">
				<label>Mellanox Technologies ConnectX-4 and Connect-IB core driver</label>
				<help>Core driver for low level functionality of the ConnectX-4 and
Connect-IB cards by Mellanox Technologies.</help>
			</entry>
			<entry name="MLX5_CORE_EN">
				<label>Mellanox Technologies ConnectX-4 Ethernet support</label>
				<help>Ethernet support in Mellanox Technologies ConnectX-4 NIC.
Ethernet and Infiniband support in ConnectX-4 are currently mutually
exclusive.</help>
			</entry>
			<entry name="MLX5_CORE_EN_DCB">
				<label>Data Center Bridging (DCB) Support</label>
				<help>Say Y here if you want to use Data Center Bridging (DCB) in the
driver.
If set to N, will not be able to configure QoS and ratelimit attributes.
This flag is depended on the kernel's DCB support.

If unsure, set to Y
</help>
			</entry>
			<entry name="MLXSW_CORE">
				<label>Mellanox Technologies Switch ASICs support</label>
				<help>This driver supports Mellanox Technologies Switch ASICs family.

To compile this driver as a module, choose M here: the
module will be called mlxsw_core.</help>
			</entry>
			<entry name="MLXSW_CORE_HWMON">
				<label>HWMON support for Mellanox Technologies Switch ASICs</label>
				<help>Say Y here if you want to expose HWMON interface on mlxsw devices.</help>
			</entry>
			<entry name="MLXSW_PCI">
				<label>PCI bus implementation for Mellanox Technologies Switch ASICs</label>
				<help>This is PCI bus implementation for Mellanox Technologies Switch ASICs.

To compile this driver as a module, choose M here: the
module will be called mlxsw_pci.</help>
			</entry>
			<entry name="MLXSW_SWITCHX2">
				<label>Mellanox Technologies SwitchX-2 support</label>
				<help>This driver supports Mellanox Technologies SwitchX-2 Ethernet
Switch ASICs.

To compile this driver as a module, choose M here: the
module will be called mlxsw_switchx2.</help>
			</entry>
			<entry name="MLXSW_SPECTRUM">
				<label>Mellanox Technologies Spectrum support</label>
				<help>This driver supports Mellanox Technologies Spectrum Ethernet
Switch ASICs.

To compile this driver as a module, choose M here: the
module will be called mlxsw_spectrum.</help>
			</entry>
			<entry name="MLXSW_SPECTRUM_DCB">
				<label>Data Center Bridging (DCB) support</label>
				<help>Say Y here if you want to use Data Center Bridging (DCB) in the
driver.
</help>
			</entry>
			<entry name="NET_VENDOR_MICREL">
				<label>Micrel devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Micrel devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="ARM_KS8695_ETHER">
				<label>KS8695 Ethernet support</label>
				<help>If you wish to compile a kernel for the KS8695 and want to
use the internal ethernet then you should answer Y to this.</help>
			</entry>
			<entry name="KS8842">
				<label>Micrel KSZ8841/42 with generic bus interface</label>
				<help>This platform driver is for KSZ8841(1-port) / KS8842(2-port)
ethernet switch chip (managed, VLAN, QoS) from Micrel or
Timberdale(FPGA).</help>
			</entry>
			<entry name="KS8851">
				<label>Micrel KS8851 SPI</label>
				<help>SPI driver for Micrel KS8851 SPI attached network chip.</help>
			</entry>
			<entry name="KS8851_MLL">
				<label>Micrel KS8851 MLL</label>
				<help>This platform driver is for Micrel KS8851 Address/data bus
multiplexed network chip.</help>
			</entry>
			<entry name="KSZ884X_PCI">
				<label>Micrel KSZ8841/2 PCI</label>
				<help>This PCI driver is for Micrel KSZ8841/KSZ8842 PCI Ethernet chip.

To compile this driver as a module, choose M here. The module
will be called ksz884x.</help>
			</entry>
			<entry name="NET_VENDOR_MICROCHIP">
				<label>Microchip devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Microchip cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="ENC28J60">
				<label>ENC28J60 support</label>
				<help>Support for the Microchip EN28J60 ethernet chip.

To compile this driver as a module, choose M here. The module will be
called enc28j60.</help>
			</entry>
			<entry name="ENC28J60_WRITEVERIFY">
				<label>Enable write verify</label>
				<help>Enable the verify after the buffer write useful for debugging purpose.
If unsure, say N.</help>
			</entry>
			<entry name="ENCX24J600">
				<label>ENCX24J600 support</label>
				<help>Support for the Microchip ENC424J600/624J600 ethernet chip.

To compile this driver as a module, choose M here. The module will be
called encx24j600.</help>
			</entry>
			<entry name="NET_VENDOR_MOXART">
				<label>MOXA ART devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about MOXA ART devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="ARM_MOXART_ETHER">
				<label>MOXART Ethernet support</label>
				<help>If you wish to compile a kernel for a hardware with MOXA ART SoC and
want to use the internal ethernet then you should answer Y to this.</help>
			</entry>
			<entry name="NET_VENDOR_MYRI">
				<label>Myricom devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Myricom cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="MYRI10GE">
				<label>Myricom Myri-10G Ethernet support</label>
				<help>This driver supports Myricom Myri-10G Dual Protocol interface in
Ethernet mode. If the eeprom on your board is not recent enough,
you will need a newer firmware image.
You may get this image or more information, at:

&lt;http://www.myri.com/scs/download-Myri10GE.html&gt;

To compile this driver as a module, choose M here. The module
will be called myri10ge.</help>
			</entry>
			<entry name="MYRI10GE_DCA">
				<label>Direct Cache Access (DCA) Support</label>
				<help>Say Y here if you want to use Direct Cache Access (DCA) in the
driver.  DCA is a method for warming the CPU cache before data
is used, with the intent of lessening the impact of cache misses.</help>
			</entry>
			<entry name="FEALNX">
				<label>Myson MTD-8xx PCI Ethernet support</label>
				<help>Say Y here to support the Myson MTD-800 family of PCI-based Ethernet
cards. &lt;http://www.myson.com.tw/&gt;</help>
			</entry>
			<entry name="NET_VENDOR_NATSEMI">
				<label>National Semi-conductor devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about National Semi-conductor devices. If you say Y,
you will be asked for your specific card in the following questions.</help>
			</entry>
			<entry name="MACSONIC">
				<label>Macintosh SONIC based ethernet (onboard, NuBus, LC, CS)</label>
				<help>Support for NatSemi SONIC based Ethernet devices.  This includes
the onboard Ethernet in many Quadras as well as some LC-PDS,
a few Nubus and all known Comm Slot Ethernet cards.  If you have
one of these say Y here.

To compile this driver as a module, choose M here. This module will
be called macsonic.</help>
			</entry>
			<entry name="MIPS_JAZZ_SONIC">
				<label>MIPS JAZZ onboard SONIC Ethernet support</label>
				<help>This is the driver for the onboard card of MIPS Magnum 4000,
Acer PICA, Olivetti M700-10 and a few other identical OEM systems.</help>
			</entry>
			<entry name="NATSEMI">
				<label>National Semiconductor DP8381x series PCI Ethernet support</label>
				<help>This driver is for the National Semiconductor DP83810 series,
which is used in cards from PureData, NetGear, Linksys
and others, including the 83815 chip.
More specific information and updates are available from
&lt;http://www.scyld.com/network/natsemi.html&gt;.</help>
			</entry>
			<entry name="NS83820">
				<label>National Semiconductor DP83820 support</label>
				<help>This is a driver for the National Semiconductor DP83820 series
of gigabit ethernet MACs.  Cards using this chipset include
the D-Link DGE-500T, PureData's PDP8023Z-TG, SMC's SMC9462TX,
SOHO-GA2000T, SOHO-GA2500T.  The driver supports the use of
zero copy.</help>
			</entry>
			<entry name="XTENSA_XT2000_SONIC">
				<label>Xtensa XT2000 onboard SONIC Ethernet support</label>
				<help>This is the driver for the onboard card of the Xtensa XT2000 board.</help>
			</entry>
			<entry name="NET_VENDOR_NETRONOME">
				<label>Netronome(R) devices</label>
				<help>If you have a Netronome(R) network (Ethernet) card or device, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Netronome(R) cards. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="NFP_NETVF">
				<label>Netronome(R) NFP4000/NFP6000 VF NIC driver</label>
				<help>This driver supports SR-IOV virtual functions of
the Netronome(R) NFP4000/NFP6000 cards working as
a advanced Ethernet NIC.</help>
			</entry>
			<entry name="NFP_NET_DEBUG">
				<label>Debug support for Netronome(R) NFP3200/NFP6000 NIC drivers</label>
				<help>Enable extra sanity checks and debugfs support in
Netronome(R) NFP3200/NFP6000 NIC PF and VF drivers.
Note: selecting this option may adversely impact
performance.</help>
			</entry>
			<entry name="NET_VENDOR_8390">
				<label>National Semi-conductor 8390 devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Western Digital cards. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="PCMCIA_AXNET">
				<label>Asix AX88190 PCMCIA support</label>
				<help>Say Y here if you intend to attach an Asix AX88190-based PCMCIA
(PC-card) Fast Ethernet card to your computer.  These cards are
nearly NE2000 compatible but need a separate driver due to a few
misfeatures.

To compile this driver as a module, choose M here: the module will be
called axnet_cs.  If unsure, say N.</help>
			</entry>
			<entry name="AX88796">
				<label>ASIX AX88796 NE2000 clone support</label>
				<help>AX88796 driver, using platform bus to provide
chip detection and resources</help>
			</entry>
			<entry name="AX88796_93CX6">
				<label>ASIX AX88796 external 93CX6 eeprom support</label>
				<help>Select this if your platform comes with an external 93CX6 eeprom.</help>
			</entry>
			<entry name="HYDRA">
				<label>Hydra support</label>
				<help>If you have a Hydra Ethernet adapter, say Y. Otherwise, say N.

To compile this driver as a module, choose M here: the module
will be called hydra.</help>
			</entry>
			<entry name="ARM_ETHERH">
				<label>I-cubed EtherH/ANT EtherM support</label>
				<help>If you have an Acorn system with one of these network cards, you
should say Y to this option if you wish to use it with Linux.</help>
			</entry>
			<entry name="MAC8390">
				<label>Macintosh NS 8390 based ethernet cards</label>
				<help>If you want to include a driver to support Nubus or LC-PDS
Ethernet cards using an NS8390 chipset or its equivalent, say Y.</help>
			</entry>
			<entry name="MCF8390">
				<label>ColdFire NS8390 based Ethernet support</label>
				<help>This driver is for Ethernet devices using an NS8390-compatible
chipset on many common ColdFire CPU based boards. Many of the older
Freescale dev boards use this, and some other common boards like
some SnapGear routers do as well.

If you have one of these boards and want to use the network interface
on them then choose Y. To compile this driver as a module, choose M
here, the module will be called mcf8390.</help>
			</entry>
			<entry name="NE2000">
				<label>NE2000/NE1000 support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.
Many Ethernet cards without a specific driver are compatible with
the NE2000.

If you have a PCI NE2000 card however, say N here and Y to &quot;PCI
NE2000 and clone support&quot; below.

To compile this driver as a module, choose M here. The module
will be called ne.</help>
			</entry>
			<entry name="NE2K_PCI">
				<label>PCI NE2000 and clones support (see help)</label>
				<help>This driver is for NE2000 compatible PCI cards. It will not work
with ISA NE2000 cards (they have their own driver, &quot;NE2000/NE1000
support&quot; below). If you have a PCI NE2000 network (Ethernet) card,
say Y here.

This driver also works for the following NE2000 clone cards:
RealTek RTL-8029  Winbond 89C940  Compex RL2000  KTI ET32P2
NetVin NV5000SC   Via 86C926      SureCom NE34   Winbond
Holtek HT80232    Holtek HT80229

To compile this driver as a module, choose M here. The module
will be called ne2k-pci.</help>
			</entry>
			<entry name="APNE">
				<label>PCMCIA NE2000 support</label>
				<help>If you have a PCMCIA NE2000 compatible adapter, say Y.  Otherwise,
say N.

To compile this driver as a module, choose M here: the module
will be called apne.</help>
			</entry>
			<entry name="PCMCIA_PCNET">
				<label>NE2000 compatible PCMCIA support</label>
				<help>Say Y here if you intend to attach an NE2000 compatible PCMCIA
(PC-card) Ethernet or Fast Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called pcnet_cs.  If unsure, say N.</help>
			</entry>
			<entry name="STNIC">
				<label>National DP83902AV  support</label>
				<help>Support for cards based on the National Semiconductor DP83902AV
ST-NIC Serial Network Interface Controller for Twisted Pair.  This
is a 10Mbit/sec Ethernet controller.  Product overview and specs at
&lt;http://www.national.com/pf/DP/DP83902A.html&gt;.

If unsure, say N.</help>
			</entry>
			<entry name="ULTRA">
				<label>SMC Ultra support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.

Important: There have been many reports that, with some motherboards
mixing an SMC Ultra and an Adaptec AHA154x SCSI card (or compatible,
such as some BusLogic models) causes corruption problems with many
operating systems. The Linux smc-ultra driver has a work-around for
this but keep it in mind if you have such a SCSI card and have
problems.

To compile this driver as a module, choose M here. The module
will be called smc-ultra.</help>
			</entry>
			<entry name="WD80x3">
				<label>WD80*3 support</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.

To compile this driver as a module, choose M here. The module
will be called wd.</help>
			</entry>
			<entry name="ZORRO8390">
				<label>Zorro NS8390-based Ethernet support</label>
				<help>This driver is for Zorro Ethernet cards using an NS8390-compatible
chipset, like the Village Tronic Ariadne II and the Individual
Computers X-Surf Ethernet cards. If you have such a card, say Y.
Otherwise, say N.

To compile this driver as a module, choose M here: the module
will be called zorro8390.</help>
			</entry>
			<entry name="NET_NETX">
				<label>NetX Ethernet support</label>
				<help>This is support for the Hilscher netX builtin Ethernet ports

To compile this driver as a module, choose M here. The module
will be called netx-eth.</help>
			</entry>
			<entry name="NET_VENDOR_NUVOTON">
				<label>Nuvoton devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Nuvoton cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="W90P910_ETH">
				<label>Nuvoton w90p910 Ethernet support</label>
				<help>Say Y here if you want to use built-in Ethernet ports
on w90p910 processor.</help>
			</entry>
			<entry name="NET_VENDOR_NVIDIA">
				<label>NVIDIA devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about NVIDIA cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="FORCEDETH">
				<label>nForce Ethernet support</label>
				<help>If you have a network (Ethernet) controller of this type, say Y here.

To compile this driver as a module, choose M here. The module
will be called forcedeth.</help>
			</entry>
			<entry name="LPC_ENET">
				<label>NXP ethernet MAC on LPC devices</label>
				<help>Say Y or M here if you want to use the NXP ethernet MAC included on
some NXP LPC devices. You can safely enable this option for LPC32xx
SoC. Also available as a module.
</help>
			</entry>
			<entry name="NET_VENDOR_OKI">
				<label>OKI Semiconductor devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about OKI Semiconductor cards. If you say Y, you will
be asked for your specific card in the following questions.</help>
			</entry>
			<entry name="PCH_GBE">
				<label>OKI SEMICONDUCTOR IOH(ML7223/ML7831) GbE</label>
				<help>This is a gigabit ethernet driver for EG20T PCH.
EG20T PCH is the platform controller hub that is used in Intel's
general embedded platform.  EG20T PCH has Gigabit Ethernet interface.
Using this interface, it is able to access system devices connected
to Gigabit Ethernet.  This driver enables Gigabit Ethernet function.

This driver also can be used for OKI SEMICONDUCTOR IOH(Input/
Output Hub), ML7223/ML7831.
ML7223 IOH is for MP(Media Phone) use. ML7831 IOH is for general
purpose use.
ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7223/ML7831 is completely compatible for Intel EG20T PCH.
</help>
			</entry>
			<entry name="ETHOC">
				<label>OpenCores 10/100 Mbps Ethernet MAC support</label>
				<help>Say Y here if you want to use the OpenCores 10/100 Mbps Ethernet MAC.</help>
			</entry>
			<entry name="NET_PACKET_ENGINE">
				<label>Packet Engine devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about packet engine devices. If you say Y, you will
be asked for your specific card in the following questions.</help>
			</entry>
			<entry name="HAMACHI">
				<label>Packet Engines Hamachi GNIC-II support</label>
				<help>If you have a Gigabit Ethernet card of this type, say Y here.

To compile this driver as a module, choose M here. The module will be
called hamachi.</help>
			</entry>
			<entry name="YELLOWFIN">
				<label>Packet Engines Yellowfin Gigabit-NIC support</label>
				<help>Say Y here if you have a Packet Engines G-NIC PCI Gigabit Ethernet
adapter or the SYM53C885 Ethernet controller. The Gigabit adapter is
used by the Beowulf Linux cluster project.  See
&lt;http://cesdis.gsfc.nasa.gov/linux/drivers/yellowfin.html&gt; for more
information about this driver in particular and Beowulf in general.

To compile this driver as a module, choose M here: the module
will be called yellowfin.  This is recommended.</help>
			</entry>
			<entry name="NET_VENDOR_PASEMI">
				<label>PA Semi devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about PA Semi cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="PASEMI_MAC">
				<label>PA Semi 1/10Gbit MAC</label>
				<help>This driver supports the on-chip 1/10Gbit Ethernet controller on
PA Semi's PWRficient line of chips.</help>
			</entry>
			<entry name="NET_VENDOR_QLOGIC">
				<label>QLogic devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about QLogic cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="QLA3XXX">
				<label>QLogic QLA3XXX Network Driver Support</label>
				<help>This driver supports QLogic ISP3XXX gigabit Ethernet cards.

To compile this driver as a module, choose M here: the module
will be called qla3xxx.</help>
			</entry>
			<entry name="QLCNIC">
				<label>QLOGIC QLCNIC 1/10Gb Converged Ethernet NIC Support</label>
				<help>This driver supports QLogic QLE8240 and QLE8242 Converged Ethernet
devices.</help>
			</entry>
			<entry name="QLCNIC_SRIOV">
				<label>QLOGIC QLCNIC 83XX family SR-IOV Support</label>
				<help>This configuration parameter enables Single Root Input Output
Virtualization support for QLE83XX Converged Ethernet devices.
This allows for virtual function acceleration in virtualized
environments.</help>
			</entry>
			<entry name="QLCNIC_DCB">
				<label>QLOGIC QLCNIC 82XX and 83XX family DCB Support</label>
				<help>This configuration parameter enables DCB support in QLE83XX
and QLE82XX Converged Ethernet devices. This allows for DCB
get operations support through rtNetlink interface. Only CEE
mode of DCB is supported. PG and PFC values are related only
to Tx.</help>
			</entry>
			<entry name="QLCNIC_HWMON">
				<label>QLOGIC QLCNIC 82XX and 83XX family HWMON support</label>
				<help>This configuration parameter can be used to read the
board temperature in Converged Ethernet devices
supported by qlcnic.

This data is available via the hwmon sysfs interface.</help>
			</entry>
			<entry name="QLGE">
				<label>QLogic QLGE 10Gb Ethernet Driver Support</label>
				<help>This driver supports QLogic ISP8XXX 10Gb Ethernet cards.

To compile this driver as a module, choose M here: the module
will be called qlge.</help>
			</entry>
			<entry name="NETXEN_NIC">
				<label>NetXen Multi port (1/10) Gigabit Ethernet NIC</label>
				<help>This enables the support for NetXen's Gigabit Ethernet card.</help>
			</entry>
			<entry name="QED">
				<label>QLogic QED 25/40/100Gb core driver</label>
				<help>This enables the support for ...</help>
			</entry>
			<entry name="QED_SRIOV">
				<label>QLogic QED 25/40/100Gb SR-IOV support</label>
				<help>This configuration parameter enables Single Root Input Output
Virtualization support for QED devices.
This allows for virtual function acceleration in virtualized
environments.</help>
			</entry>
			<entry name="QEDE">
				<label>QLogic QED 25/40/100Gb Ethernet NIC</label>
				<help>This enables the support for ...</help>
			</entry>
			<entry name="NET_VENDOR_QUALCOMM">
				<label>Qualcomm devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Qualcomm cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="QCA7000">
				<label>Qualcomm Atheros QCA7000 support</label>
				<help>This SPI protocol driver supports the Qualcomm Atheros QCA7000.

To compile this driver as a module, choose M here. The module
will be called qcaspi.</help>
			</entry>
			<entry name="NET_VENDOR_REALTEK">
				<label>Realtek devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Realtek devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ATP">
				<label>AT-LAN-TEC/RealTek pocket adapter support</label>
				<help>This is a network (Ethernet) device which attaches to your parallel
port. Read the file &lt;file:drivers/net/ethernet/realtek/atp.c&gt;
if you want to use this.  If you intend to use this driver, you
should have said N to the &quot;Parallel printer support&quot;, because the two
drivers don't like each other.

To compile this driver as a module, choose M here: the module
will be called atp.</help>
			</entry>
			<entry name="_8139CP">
				<label>RealTek RTL-8139 C+ PCI Fast Ethernet Adapter support</label>
				<help>This is a driver for the Fast Ethernet PCI network cards based on
the RTL8139C+ chips. If you have one of those, say Y here.

To compile this driver as a module, choose M here: the module
will be called 8139cp.  This is recommended.</help>
			</entry>
			<entry name="_8139TOO">
				<label>RealTek RTL-8129/8130/8139 PCI Fast Ethernet Adapter support</label>
				<help>This is a driver for the Fast Ethernet PCI network cards based on
the RTL 8129/8130/8139 chips. If you have one of those, say Y here.

To compile this driver as a module, choose M here: the module
will be called 8139too.  This is recommended.</help>
			</entry>
			<entry name="_8139TOO_PIO">
				<label>Use PIO instead of MMIO</label>
				<help>This instructs the driver to use programmed I/O ports (PIO) instead
of PCI shared memory (MMIO).  This can possibly solve some problems
in case your mainboard has memory consistency issues.  If unsure,
say N.</help>
			</entry>
			<entry name="_8139TOO_TUNE_TWISTER">
				<label>Support for uncommon RTL-8139 rev. K (automatic channel equalization)</label>
				<help>This implements a function which might come in handy in case you
are using low quality on long cabling. It is required for RealTek
RTL-8139 revision K boards, and totally unused otherwise.  It tries
to match the transceiver to the cable characteristics. This is
experimental since hardly documented by the manufacturer.
If unsure, say Y.</help>
			</entry>
			<entry name="_8139TOO_8129">
				<label>Support for older RTL-8129/8130 boards</label>
				<help>This enables support for the older and uncommon RTL-8129 and
RTL-8130 chips, which support MII via an external transceiver,
instead of an internal one.  Disabling this option will save some
memory by making the code size smaller.  If unsure, say Y.</help>
			</entry>
			<entry name="_8139_OLD_RX_RESET">
				<label>Use older RX-reset method</label>
				<help>The 8139too driver was recently updated to contain a more rapid
reset sequence, in the face of severe receive errors.  This &quot;new&quot;
RX-reset method should be adequate for all boards.  But if you
experience problems, you can enable this option to restore the
old RX-reset behavior.  If unsure, say N.</help>
			</entry>
			<entry name="R8169">
				<label>Realtek 8169 gigabit ethernet support</label>
				<help>Say Y here if you have a Realtek 8169 PCI Gigabit Ethernet adapter.

To compile this driver as a module, choose M here: the module
will be called r8169.  This is recommended.</help>
			</entry>
			<entry name="NET_VENDOR_RENESAS">
				<label>Renesas devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Renesas devices. If you say Y, you will be asked
for your specific device in the following questions.</help>
			</entry>
			<entry name="SH_ETH">
				<label>Renesas SuperH Ethernet support</label>
				<help>Renesas SuperH Ethernet device driver.
This driver supporting CPUs are:
- SH7619, SH7710, SH7712, SH7724, SH7734, SH7763, SH7757,
R8A7740, R8A777x and R8A779x.</help>
			</entry>
			<entry name="RAVB">
				<label>Renesas Ethernet AVB support</label>
				<help>Renesas Ethernet AVB device driver.
This driver supports the following SoCs:
- R8A779x.</help>
			</entry>
			<entry name="NET_VENDOR_RDC">
				<label>RDC devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about RDC cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="R6040">
				<label>RDC R6040 Fast Ethernet Adapter support</label>
				<help>This is a driver for the R6040 Fast Ethernet MACs found in the
the RDC R-321x System-on-chips.

To compile this driver as a module, choose M here: the module
will be called r6040. This is recommended.</help>
			</entry>
			<entry name="NET_VENDOR_ROCKER">
				<label>Rocker devices</label>
				<help>If you have a network device belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Rocker devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ROCKER">
				<label>Rocker switch driver (EXPERIMENTAL)</label>
				<help>This driver supports Rocker switch device.

To compile this driver as a module, choose M here: the
module will be called rocker.</help>
			</entry>
			<entry name="NET_VENDOR_SAMSUNG">
				<label>Samsung Ethernet devices</label>
				<help>If you have a network (Ethernet) chipset belonging to this class,
say Y.

Note that the answer to this question does not directly affect
the kernel: saying N will just case the configurator to skip all
the questions about Samsung chipsets. If you say Y, you will be asked
for your specific chipset/driver in the following questions.</help>
			</entry>
			<entry name="SXGBE_ETH">
				<label>Samsung 10G/2.5G/1G SXGBE Ethernet driver</label>
				<help>This is the driver for the SXGBE 10G Ethernet IP block found on
Samsung platforms.

To compile this driver as a module, choose M here: the module
will be called samsung-sxgbe.</help>
			</entry>
			<entry name="NET_VENDOR_SEEQ">
				<label>SEEQ devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about SEEQ devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ARM_ETHER3">
				<label>Acorn/ANT Ether3 support</label>
				<help>If you have an Acorn system with one of these network cards, you
should say Y to this option if you wish to use it with Linux.</help>
			</entry>
			<entry name="SGISEEQ">
				<label>SGI Seeq ethernet controller support</label>
				<help>Say Y here if you have an Seeq based Ethernet network card. This is
used in many Silicon Graphics machines.</help>
			</entry>
			<entry name="NET_VENDOR_SILAN">
				<label>Silan devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Silan devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="SC92031">
				<label>Silan SC92031 PCI Fast Ethernet Adapter driver</label>
				<help>This is a driver for the Fast Ethernet PCI network cards based on
the Silan SC92031 chip (sometimes also called Rsltek 8139D). If you
have one of these, say Y here.

To compile this driver as a module, choose M here: the module
will be called sc92031.  This is recommended.</help>
			</entry>
			<entry name="NET_VENDOR_SIS">
				<label>Silicon Integrated Systems (SiS) devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about SiS devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="SIS900">
				<label>SiS 900/7016 PCI Fast Ethernet Adapter support</label>
				<help>This is a driver for the Fast Ethernet PCI network cards based on
the SiS 900 and SiS 7016 chips. The SiS 900 core is also embedded in
SiS 630 and SiS 540 chipsets.

This driver also supports AMD 79C901 HomePNA so that you can use
your phone line as a network cable.

To compile this driver as a module, choose M here: the module
will be called sis900.  This is recommended.</help>
			</entry>
			<entry name="SIS190">
				<label>SiS190/SiS191 gigabit ethernet support</label>
				<help>Say Y here if you have a SiS 190 PCI Fast Ethernet adapter or
a SiS 191 PCI Gigabit Ethernet adapter. Both are expected to
appear in lan on motherboard designs which are based on SiS 965
and SiS 966 south bridge.

To compile this driver as a module, choose M here: the module
will be called sis190.  This is recommended.</help>
			</entry>
			<entry name="SFC">
				<label>Solarflare SFC4000/SFC9000/SFC9100-family support</label>
				<help>This driver supports 10/40-gigabit Ethernet cards based on
the Solarflare SFC4000, SFC9000-family and SFC9100-family
controllers.

To compile this driver as a module, choose M here.  The module
will be called sfc.</help>
			</entry>
			<entry name="SFC_MTD">
				<label>Solarflare SFC4000/SFC9000/SFC9100-family MTD support</label>
				<help>This exposes the on-board flash and/or EEPROM as MTD devices
(e.g. /dev/mtd1).  This is required to update the firmware or
the boot configuration under Linux.</help>
			</entry>
			<entry name="SFC_MCDI_MON">
				<label>Solarflare SFC9000/SFC9100-family hwmon support</label>
				<help>This exposes the on-board firmware-managed sensors as a
hardware monitor device.</help>
			</entry>
			<entry name="SFC_SRIOV">
				<label>Solarflare SFC9000-family SR-IOV support</label>
				<help>This enables support for the SFC9000 I/O Virtualization
features, allowing accelerated network performance in
virtualized environments.</help>
			</entry>
			<entry name="SFC_MCDI_LOGGING">
				<label>Solarflare SFC9000/SFC9100-family MCDI logging support</label>
				<help>This enables support for tracing of MCDI (Management-Controller-to-
Driver-Interface) commands and responses, allowing debugging of
driver/firmware interaction.  The tracing is actually enabled by
a sysfs file 'mcdi_logging' under the PCI device.
</help>
			</entry>
			<entry name="NET_VENDOR_SGI">
				<label>SGI devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about SGI devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="SGI_IOC3_ETH">
				<label>SGI IOC3 Ethernet</label>
				<help>If you have a network (Ethernet) card of this type, say Y here.</help>
			</entry>
			<entry name="SGI_O2MACE_ETH">
				<label>SGI O2 MACE Fast Ethernet support</label>
			</entry>
			<entry name="NET_VENDOR_SMSC">
				<label>SMC (SMSC)/Western Digital devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about SMC/Western Digital cards. If you say Y, you will
be asked for your specific card in the following questions.</help>
			</entry>
			<entry name="SMC9194">
				<label>SMC 9194 support</label>
				<help>This is support for the SMC9xxx based Ethernet cards. Choose this
option if you have a DELL laptop with the docking station, or
another SMC9192/9194 based chipset.  Say Y if you want it compiled
into the kernel, and read the file
&lt;file:Documentation/networking/smc9.txt&gt;.

To compile this driver as a module, choose M here. The module
will be called smc9194.</help>
			</entry>
			<entry name="SMC91X">
				<label>SMC 91C9x/91C1xxx support</label>
				<help>This is a driver for SMC's 91x series of Ethernet chipsets,
including the SMC91C94 and the SMC91C111. Say Y if you want it
compiled into the kernel, and read the file
&lt;file:Documentation/networking/smc9.txt&gt;.

This driver is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called smc91x.  If you want to compile it as a
module, say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="PCMCIA_SMC91C92">
				<label>SMC 91Cxx PCMCIA support</label>
				<help>Say Y here if you intend to attach an SMC 91Cxx compatible PCMCIA
(PC-card) Ethernet or Fast Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called smc91c92_cs.  If unsure, say N.</help>
			</entry>
			<entry name="EPIC100">
				<label>SMC EtherPower II</label>
				<help>This driver is for the SMC EtherPower II 9432 PCI Ethernet NIC,
which is based on the SMC83c17x (EPIC/100).
More specific information and updates are available from
&lt;http://www.scyld.com/network/epic100.html&gt;.</help>
			</entry>
			<entry name="SMC911X">
				<label>SMSC LAN911[5678] support</label>
				<help>This is a driver for SMSC's LAN911x series of Ethernet chipsets
including the new LAN9115, LAN9116, LAN9117, and LAN9118.
Say Y here if you want it compiled into the kernel.

This driver is also available as a module. The module will be
called smc911x.  If you want to compile it as a module, say M
here and read &lt;file:Documentation/kbuild/modules.txt&gt;</help>
			</entry>
			<entry name="SMSC911X">
				<label>SMSC LAN911x/LAN921x families embedded ethernet support</label>
				<help>Say Y here if you want support for SMSC LAN911x and LAN921x families
of ethernet controllers.

To compile this driver as a module, choose M here. The module
will be called smsc911x.</help>
			</entry>
			<entry name="SMSC911X_ARCH_HOOKS">
				<help>If the arch enables this, it allows the arch to implement various
hooks for more comprehensive interrupt control and also to override
the source of the MAC address.</help>
			</entry>
			<entry name="SMSC9420">
				<label>SMSC LAN9420 PCI ethernet adapter support</label>
				<help>This is a driver for SMSC's LAN9420 PCI ethernet adapter.
Say Y here if you want it compiled into the kernel.

This driver is also available as a module. The module will be
called smsc9420.  If you want to compile it as a module, say M
here and read &lt;file:Documentation/kbuild/modules.txt&gt;</help>
			</entry>
			<entry name="NET_VENDOR_STMICRO">
				<label>STMicroelectronics devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about STMicroelectronics cards. If you say Y, you will
be asked for your specific card in the following questions.</help>
			</entry>
			<entry name="STMMAC_ETH">
				<label>STMicroelectronics 10/100/1000 Ethernet driver</label>
				<help>This is the driver for the Ethernet IPs are built around a
Synopsys IP Core and only tested on the STMicroelectronics
platforms.</help>
			</entry>
			<entry name="STMMAC_PLATFORM">
				<label>STMMAC Platform bus support</label>
				<help>This selects the platform specific bus support for the stmmac driver.
This is the driver used on several SoCs:
STi, Allwinner, Amlogic Meson, Altera SOCFPGA.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="DWMAC_GENERIC">
				<label>Generic driver for DWMAC</label>
				<help>Generic DWMAC driver for platforms that don't require any
platform specific code to function or is using platform
data for setup.</help>
			</entry>
			<entry name="DWMAC_IPQ806X">
				<label>QCA IPQ806x DWMAC support</label>
				<help>Support for QCA IPQ806X DWMAC Ethernet.

This selects the IPQ806x SoC glue layer support for the stmmac
device driver. This driver does not use any of the hardware
acceleration features available on this SoC. Network devices
will behave like standard non-accelerated ethernet interfaces.</help>
			</entry>
			<entry name="DWMAC_LPC18XX">
				<label>NXP LPC18xx/43xx DWMAC support</label>
				<help>Support for NXP LPC18xx/43xx DWMAC Ethernet.</help>
			</entry>
			<entry name="DWMAC_MESON">
				<label>Amlogic Meson dwmac support</label>
				<help>Support for Ethernet controller on Amlogic Meson SoCs.

This selects the Amlogic Meson SoC glue layer support for
the stmmac device driver. This driver is used for Meson6 and
Meson8 SoCs.</help>
			</entry>
			<entry name="DWMAC_ROCKCHIP">
				<label>Rockchip dwmac support</label>
				<help>Support for Ethernet controller on Rockchip RK3288 SoC.

This selects the Rockchip RK3288 SoC glue layer support for
the stmmac device driver.</help>
			</entry>
			<entry name="DWMAC_SOCFPGA">
				<label>SOCFPGA dwmac support</label>
				<help>Support for ethernet controller on Altera SOCFPGA

This selects the Altera SOCFPGA SoC glue layer support
for the stmmac device driver. This driver is used for
arria5 and cyclone5 FPGA SoCs.</help>
			</entry>
			<entry name="DWMAC_STI">
				<label>STi GMAC support</label>
				<help>Support for ethernet controller on STi SOCs.

This selects STi SoC glue layer support for the stmmac
device driver. This driver is used on for the STi series
SOCs GMAC ethernet controller.</help>
			</entry>
			<entry name="DWMAC_SUNXI">
				<label>Allwinner GMAC support</label>
				<help>Support for Allwinner A20/A31 GMAC ethernet controllers.

This selects Allwinner SoC glue layer support for the
stmmac device driver. This driver is used for A20/A31
GMAC ethernet controller.</help>
			</entry>
			<entry name="STMMAC_PCI">
				<label>STMMAC PCI bus support</label>
				<help>This is to select the Synopsys DWMAC available on PCI devices,
if you have a controller with this interface, say Y or M here.

This PCI support is tested on XLINX XC2V3000 FF1152AMT0221
D1215994A VIRTEX FPGA board.

If unsure, say N.</help>
			</entry>
			<entry name="NET_VENDOR_SUN">
				<label>Sun devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Sun network interfaces. If you say Y, you will be
asked for your specific card in the following questions.</help>
			</entry>
			<entry name="HAPPYMEAL">
				<label>Sun Happy Meal 10/100baseT support</label>
				<help>This driver supports the &quot;hme&quot; interface present on most Ultra
systems and as an option on older Sbus systems. This driver supports
both PCI and Sbus devices. This driver also supports the &quot;qfe&quot; quad
100baseT device available in both PCI and Sbus configurations.

To compile this driver as a module, choose M here: the module
will be called sunhme.</help>
			</entry>
			<entry name="SUNBMAC">
				<label>Sun BigMAC 10/100baseT support</label>
				<help>This driver supports the &quot;be&quot; interface available as an Sbus option.
This is Sun's older 100baseT Ethernet device.

To compile this driver as a module, choose M here: the module
will be called sunbmac.</help>
			</entry>
			<entry name="SUNQE">
				<label>Sun QuadEthernet support</label>
				<help>This driver supports the &quot;qe&quot; 10baseT Ethernet device, available as
an Sbus option. Note that this is not the same as Quad FastEthernet
&quot;qfe&quot; which is supported by the Happy Meal driver instead.

To compile this driver as a module, choose M here: the module
will be called sunqe.</help>
			</entry>
			<entry name="SUNGEM">
				<label>Sun GEM support</label>
				<help>Support for the Sun GEM chip, aka Sun GigabitEthernet/P 2.0.  See also
&lt;http://docs.oracle.com/cd/E19455-01/806-3985-10/806-3985-10.pdf&gt;.</help>
			</entry>
			<entry name="CASSINI">
				<label>Sun Cassini support</label>
				<help>Support for the Sun Cassini chip, aka Sun GigaSwift Ethernet. See also
&lt;http://docs.oracle.com/cd/E19113-01/giga.ether.pci/817-4341-10/817-4341-10.pdf&gt;.</help>
			</entry>
			<entry name="SUNVNET_COMMON"/>
			<entry name="SUNVNET">
				<label>Sun Virtual Network support</label>
				<help>Support for virtual network devices under Sun Logical Domains.</help>
			</entry>
			<entry name="LDMVSW">
				<label>Sun4v LDoms Virtual Switch support</label>
				<help>Support for virtual switch devices under Sun4v Logical Domains.
This driver adds a network interface for every vsw-port node
found in the machine description of a service domain.
Linux bridge/switch software can use these interfaces for
guest domain network interconnectivity or guest domain
connection to a physical network on a service domain.</help>
			</entry>
			<entry name="NIU">
				<label>Sun Neptune 10Gbit Ethernet support</label>
				<help>This enables support for cards based upon Sun's
Neptune chipset.</help>
			</entry>
			<entry name="NET_VENDOR_SYNOPSYS">
				<label>Synopsys devices</label>
				<help>If you have a network (Ethernet) device belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Synopsys devices. If you say Y, you will be asked
for your specific device in the following questions.</help>
			</entry>
			<entry name="SYNOPSYS_DWC_ETH_QOS">
				<label>Sypnopsys DWC Ethernet QOS v4.10a support</label>
				<help>This driver supports the DWC Ethernet QoS from Synopsys</help>
			</entry>
			<entry name="NET_VENDOR_TEHUTI">
				<label>Tehuti devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Tehuti cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="TEHUTI">
				<label>Tehuti Networks 10G Ethernet</label>
				<help>Tehuti Networks 10G Ethernet NIC</help>
			</entry>
			<entry name="NET_VENDOR_TI">
				<label>Texas Instruments (TI) devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about TI devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="TI_DAVINCI_EMAC">
				<label>TI DaVinci EMAC Support</label>
				<help>This driver supports TI's DaVinci Ethernet .

To compile this driver as a module, choose M here: the module
will be called davinci_emac_driver.  This is recommended.</help>
			</entry>
			<entry name="TI_DAVINCI_MDIO">
				<label>TI DaVinci MDIO Support</label>
				<help>This driver supports TI's DaVinci MDIO module.

To compile this driver as a module, choose M here: the module
will be called davinci_mdio.  This is recommended.</help>
			</entry>
			<entry name="TI_DAVINCI_CPDMA">
				<label>TI DaVinci CPDMA Support</label>
				<help>This driver supports TI's DaVinci CPDMA dma engine.

To compile this driver as a module, choose M here: the module
will be called davinci_cpdma.  This is recommended.</help>
			</entry>
			<entry name="TI_CPSW_PHY_SEL">
				<help>This driver supports configuring of the phy mode connected to
the CPSW.</help>
			</entry>
			<entry name="TI_CPSW_ALE">
				<label>TI CPSW ALE Support</label>
				<help>This driver supports TI's CPSW ALE module.</help>
			</entry>
			<entry name="TI_CPSW">
				<label>TI CPSW Switch Support</label>
				<help>This driver supports TI's CPSW Ethernet Switch.

To compile this driver as a module, choose M here: the module
will be called cpsw.</help>
			</entry>
			<entry name="TI_CPTS">
				<label>TI Common Platform Time Sync (CPTS) Support</label>
				<help>This driver supports the Common Platform Time Sync unit of
the CPSW Ethernet Switch. The unit can time stamp PTP UDP/IPv4
and Layer 2 packets, and the driver offers a PTP Hardware Clock.</help>
			</entry>
			<entry name="TI_KEYSTONE_NETCP">
				<label>TI Keystone NETCP Core Support</label>
				<help>This driver supports TI's Keystone NETCP Core.

To compile this driver as a module, choose M here: the module
will be called keystone_netcp.</help>
			</entry>
			<entry name="TI_KEYSTONE_NETCP_ETHSS">
				<label>TI Keystone NETCP Ethernet subsystem Support</label>
				<help>
To compile this driver as a module, choose M here: the module
will be called keystone_netcp_ethss.

config TLAN
tristate &quot;TI ThunderLAN support&quot;
depends on (PCI || EISA)
---help---
If you have a PCI Ethernet network card based on the ThunderLAN chip
which is supported by this driver, say Y here.

Devices currently supported by this driver are Compaq Netelligent,
Compaq NetFlex and Olicom cards.  Please read the file
&lt;file:Documentation/networking/tlan.txt&gt; for more details.

To compile this driver as a module, choose M here. The module
will be called tlan.

Please email feedback to &lt;torben.mathiasen@compaq.com&gt;.

config CPMAC
tristate &quot;TI AR7 CPMAC Ethernet support&quot;
depends on AR7
select PHYLIB
---help---
TI AR7 CPMAC Ethernet support

endif # NET_VENDOR_TI
</help>
			</entry>
			<entry name="TILE_NET">
				<label>Tilera GBE/XGBE network driver support</label>
				<help>This is a standard Linux network device driver for the
on-chip Tilera Gigabit Ethernet and XAUI interfaces.

To compile this driver as a module, choose M here: the module
will be called tile_net.
</help>
			</entry>
			<entry name="NET_VENDOR_TOSHIBA">
				<label>Toshiba devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Toshiba cards. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="GELIC_NET">
				<label>PS3 Gigabit Ethernet driver</label>
				<help>This driver supports the network device on the PS3 game
console.  This driver has built-in support for Ethernet.

To compile this driver as a module, choose M here: the
module will be called ps3_gelic.</help>
			</entry>
			<entry name="GELIC_WIRELESS">
				<label>PS3 Wireless support</label>
				<help>This option adds the support for the wireless feature of PS3.
If you have the wireless-less model of PS3 or have no plan to
use wireless feature, disabling this option saves memory.  As
the driver automatically distinguishes the models, you can
safely enable this option even if you have a wireless-less model.</help>
			</entry>
			<entry name="SPIDER_NET">
				<label>Spider Gigabit Ethernet driver</label>
				<help>This driver supports the Gigabit Ethernet chips present on the
Cell Processor-Based Blades from IBM.</help>
			</entry>
			<entry name="TC35815">
				<label>TOSHIBA TC35815 Ethernet support</label>
			</entry>
			<entry name="NET_VENDOR_TUNDRA">
				<label>Tundra devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Tundra cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="TSI108_ETH">
				<label>Tundra TSI108 gigabit Ethernet support</label>
				<help>This driver supports Tundra TSI108 gigabit Ethernet ports.
To compile this driver as a module, choose M here: the module
will be called tsi108_eth.</help>
			</entry>
			<entry name="NET_VENDOR_VIA">
				<label>VIA devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about VIA devices. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="VIA_RHINE">
				<label>VIA Rhine support</label>
				<help>If you have a VIA &quot;Rhine&quot; based network card (Rhine-I (VT86C100A),
Rhine-II (VT6102), or Rhine-III (VT6105)), say Y here. Rhine-type
Ethernet functions can also be found integrated on South Bridges
(e.g. VT8235).

To compile this driver as a module, choose M here. The module
will be called via-rhine.</help>
			</entry>
			<entry name="VIA_RHINE_MMIO">
				<label>Use MMIO instead of PIO</label>
				<help>This instructs the driver to use PCI shared memory (MMIO) instead of
programmed I/O ports (PIO). Enabling this gives an improvement in
processing time in parts of the driver.

If unsure, say Y.</help>
			</entry>
			<entry name="VIA_VELOCITY">
				<label>VIA Velocity support</label>
				<help>If you have a VIA &quot;Velocity&quot; based network card say Y here.

To compile this driver as a module, choose M here. The module
will be called via-velocity.</help>
			</entry>
			<entry name="NET_VENDOR_WIZNET">
				<label>WIZnet devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about WIZnet devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="WIZNET_W5100">
				<label>WIZnet W5100 Ethernet support</label>
				<help>Support for WIZnet W5100 chips.

W5100 is a single chip with integrated 10/100 Ethernet MAC,
PHY and hardware TCP/IP stack, but this driver is limited to
the MAC and PHY functions only, onchip TCP/IP is unused.

To compile this driver as a module, choose M here: the module
will be called w5100.</help>
			</entry>
			<entry name="WIZNET_W5300">
				<label>WIZnet W5300 Ethernet support</label>
				<help>Support for WIZnet W5300 chips.

W5300 is a single chip with integrated 10/100 Ethernet MAC,
PHY and hardware TCP/IP stack, but this driver is limited to
the MAC and PHY functions only, onchip TCP/IP is unused.

To compile this driver as a module, choose M here: the module
will be called w5300.</help>
			</entry>
			<entry name="WIZNET_BUS_DIRECT">
				<label>Direct address bus mode</label>
				<help>In direct address mode host system can directly access all registers
after mapping to Memory-Mapped I/O space.</help>
			</entry>
			<entry name="WIZNET_BUS_INDIRECT">
				<label>Indirect address bus mode</label>
				<help>In indirect address mode host system indirectly accesses registers
using Indirect Mode Address Register and Indirect Mode Data Register,
which are directly mapped to Memory-Mapped I/O space.</help>
			</entry>
			<entry name="WIZNET_BUS_ANY">
				<label>Select interface mode in runtime</label>
				<help>If interface mode is unknown in compile time, it can be selected
in runtime from board/platform resources configuration.

Performance may decrease compared to explicitly selected bus mode.</help>
			</entry>
			<entry name="WIZNET_W5100_SPI">
				<label>WIZnet W5100/W5200/W5500 Ethernet support for SPI mode</label>
				<help>In SPI mode host system accesses registers using SPI protocol
(mode 0) on the SPI bus.

Performance decreases compared to other bus interface mode.
In W5100 SPI mode, burst READ/WRITE processing are not provided.

To compile this driver as a module, choose M here: the module
will be called w5100-spi.</help>
			</entry>
			<entry name="NET_VENDOR_XILINX">
				<label>Xilinx devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Xilinx devices. If you say Y, you will be asked
for your specific card in the following questions.</help>
			</entry>
			<entry name="XILINX_EMACLITE">
				<label>Xilinx 10/100 Ethernet Lite support</label>
				<help>This driver supports the 10/100 Ethernet Lite from Xilinx.</help>
			</entry>
			<entry name="XILINX_AXI_EMAC">
				<label>Xilinx 10/100/1000 AXI Ethernet support</label>
				<help>This driver supports the 10/100/1000 Ethernet from Xilinx for the
AXI bus interface used in Xilinx Virtex FPGAs.</help>
			</entry>
			<entry name="XILINX_LL_TEMAC">
				<label>Xilinx LL TEMAC (LocalLink Tri-mode Ethernet MAC) driver</label>
				<help>This driver supports the Xilinx 10/100/1000 LocalLink TEMAC
core used in Xilinx Spartan and Virtex FPGAs</help>
			</entry>
			<entry name="NET_VENDOR_XIRCOM">
				<label>Xircom devices</label>
				<help>If you have a network (Ethernet) card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about Xircom cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="PCMCIA_XIRC2PS">
				<label>Xircom 16-bit PCMCIA support</label>
				<help>Say Y here if you intend to attach a Xircom 16-bit PCMCIA (PC-card)
Ethernet or Fast Ethernet card to your computer.

To compile this driver as a module, choose M here: the module will be
called xirc2ps_cs.  If unsure, say N.</help>
			</entry>
			<entry name="FDDI">
				<label>FDDI driver support</label>
				<help>Fiber Distributed Data Interface is a high speed local area network
design; essentially a replacement for high speed Ethernet. FDDI can
run over copper or fiber. If you are connected to such a network and
want a driver for the FDDI card in your computer, say Y here (and
then also Y to the driver for your FDDI card, below). Most people
will say N.</help>
			</entry>
			<entry name="DEFXX">
				<label>Digital DEFTA/DEFEA/DEFPA adapter support</label>
				<help>This is support for the DIGITAL series of TURBOchannel (DEFTA),
EISA (DEFEA) and PCI (DEFPA) controllers which can connect you
to a local FDDI network.

To compile this driver as a module, choose M here: the module
will be called defxx.  If unsure, say N.</help>
			</entry>
			<entry name="DEFXX_MMIO">
				<label>Use MMIO instead of PIO&quot; if PCI || EISA</label>
				<help>This instructs the driver to use EISA or PCI memory-mapped I/O
(MMIO) as appropriate instead of programmed I/O ports (PIO).
Enabling this gives an improvement in processing time in parts
of the driver, but it may cause problems with EISA (DEFEA)
adapters.  TURBOchannel does not have the concept of I/O ports,
so MMIO is always used for these (DEFTA) adapters.

If unsure, say N.</help>
			</entry>
			<entry name="SKFP">
				<label>SysKonnect FDDI PCI support</label>
				<help>Say Y here if you have a SysKonnect FDDI PCI adapter.
The following adapters are supported by this driver:
- SK-5521 (SK-NET FDDI-UP)
- SK-5522 (SK-NET FDDI-UP DAS)
- SK-5541 (SK-NET FDDI-FP)
- SK-5543 (SK-NET FDDI-LP)
- SK-5544 (SK-NET FDDI-LP DAS)
- SK-5821 (SK-NET FDDI-UP64)
- SK-5822 (SK-NET FDDI-UP64 DAS)
- SK-5841 (SK-NET FDDI-FP64)
- SK-5843 (SK-NET FDDI-LP64)
- SK-5844 (SK-NET FDDI-LP64 DAS)
- Netelligent 100 FDDI DAS Fibre SC
- Netelligent 100 FDDI SAS Fibre SC
- Netelligent 100 FDDI DAS UTP
- Netelligent 100 FDDI SAS UTP
- Netelligent 100 FDDI SAS Fibre MIC

Read &lt;file:Documentation/networking/skfp.txt&gt; for information about
the driver.

Questions concerning this driver can be addressed to:
&lt;linux@syskonnect.de&gt;

To compile this driver as a module, choose M here: the module
will be called skfp.  This is recommended.</help>
			</entry>
			<entry name="HIPPI">
				<label>HIPPI driver support</label>
				<help>HIgh Performance Parallel Interface (HIPPI) is a 800Mbit/sec and
1600Mbit/sec dual-simplex switched or point-to-point network. HIPPI
can run over copper (25m) or fiber (300m on multi-mode or 10km on
single-mode). HIPPI networks are commonly used for clusters and to
connect to super computers. If you are connected to a HIPPI network
and have a HIPPI network card in your computer that you want to use
under Linux, say Y here (you must also remember to enable the driver
for your HIPPI card below). Most people will say N here.</help>
			</entry>
			<entry name="ROADRUNNER">
				<label>Essential RoadRunner HIPPI PCI adapter support</label>
				<help>Say Y here if this is your PCI HIPPI network card.

To compile this driver as a module, choose M here: the module
will be called rrunner.  If unsure, say N.</help>
			</entry>
			<entry name="ROADRUNNER_LARGE_RINGS">
				<label>Use large TX/RX rings</label>
				<help>If you say Y here, the RoadRunner driver will preallocate up to 2 MB
of additional memory to allow for fastest operation, both for
transmitting and receiving. This memory cannot be used by any other
kernel code or by user space programs. Say Y here only if you have
the memory.</help>
			</entry>
			<entry name="NET_SB1000">
				<label>General Instruments Surfboard 1000</label>
				<help>This is a driver for the General Instrument (also known as
NextLevel) SURFboard 1000 internal
cable modem. This is an ISA card which is used by a number of cable
TV companies to provide cable modem access. It's a one-way
downstream-only cable modem, meaning that your upstream net link is
provided by your regular phone modem.

At present this driver only compiles as a module, so say M here if
you have this card. The module will be called sb1000. Then read
&lt;file:Documentation/networking/README.sb1000&gt; for information on how
to use this module, as it needs special ppp scripts for establishing
a connection. Further documentation and the necessary scripts can be
found at:

&lt;http://www.jacksonville.net/~fventuri/&gt;
&lt;http://home.adelphia.net/~siglercm/sb1000.html&gt;
&lt;http://linuxpower.cx/~cable/&gt;

If you don't have this card, of course say N.</help>
			</entry>
			<entry name="PHYLIB">
				<label>PHY Device support and infrastructure</label>
				<help>Ethernet controllers are usually attached to PHY
devices.  This option provides infrastructure for
managing PHY devices.</help>
			</entry>
			<entry name="SWPHY"/>
			<entry name="AQUANTIA_PHY">
				<label>Drivers for the Aquantia PHYs</label>
				<help>Currently supports the Aquantia AQ1202, AQ2104, AQR105, AQR405</help>
			</entry>
			<entry name="AT803X_PHY">
				<label>Drivers for Atheros AT803X PHYs</label>
				<help>Currently supports the AT8030 and AT8035 model</help>
			</entry>
			<entry name="AMD_PHY">
				<label>Drivers for the AMD PHYs</label>
				<help>Currently supports the am79c874</help>
			</entry>
			<entry name="MARVELL_PHY">
				<label>Drivers for Marvell PHYs</label>
				<help>Currently has a driver for the 88E1011S</help>
			</entry>
			<entry name="DAVICOM_PHY">
				<label>Drivers for Davicom PHYs</label>
				<help>Currently supports dm9161e and dm9131</help>
			</entry>
			<entry name="QSEMI_PHY">
				<label>Drivers for Quality Semiconductor PHYs</label>
				<help>Currently supports the qs6612</help>
			</entry>
			<entry name="LXT_PHY">
				<label>Drivers for the Intel LXT PHYs</label>
				<help>Currently supports the lxt970, lxt971</help>
			</entry>
			<entry name="CICADA_PHY">
				<label>Drivers for the Cicada PHYs</label>
				<help>Currently supports the cis8204</help>
			</entry>
			<entry name="VITESSE_PHY">
				<label>Drivers for the Vitesse PHYs</label>
				<help>Currently supports the vsc8244</help>
			</entry>
			<entry name="TERANETICS_PHY">
				<label>Drivers for the Teranetics PHYs</label>
				<help>Currently supports the Teranetics TN2020</help>
			</entry>
			<entry name="SMSC_PHY">
				<label>Drivers for SMSC PHYs</label>
				<help>Currently supports the LAN83C185, LAN8187 and LAN8700 PHYs</help>
			</entry>
			<entry name="BCM_NET_PHYLIB"/>
			<entry name="BROADCOM_PHY">
				<label>Drivers for Broadcom PHYs</label>
				<help>Currently supports the BCM5411, BCM5421, BCM5461, BCM54616S, BCM5464,
BCM5481 and BCM5482 PHYs.</help>
			</entry>
			<entry name="BCM_CYGNUS_PHY">
				<label>Drivers for Broadcom Cygnus SoC internal PHY</label>
				<help>This PHY driver is for the 1G internal PHYs of the Broadcom
Cygnus Family SoC.

Currently supports internal PHY's used in the BCM11300,
BCM11320, BCM11350, BCM11360, BCM58300, BCM58302,
BCM58303 &amp; BCM58305 Broadcom Cygnus SoCs.</help>
			</entry>
			<entry name="BCM63XX_PHY">
				<label>Drivers for Broadcom 63xx SOCs internal PHY</label>
				<help>Currently supports the 6348 and 6358 PHYs.</help>
			</entry>
			<entry name="BCM7XXX_PHY">
				<label>Drivers for Broadcom 7xxx SOCs internal PHYs</label>
				<help>Currently supports the BCM7366, BCM7439, BCM7445, and
40nm and 65nm generation of BCM7xxx Set Top Box SoCs.</help>
			</entry>
			<entry name="BCM87XX_PHY">
				<label>Driver for Broadcom BCM8706 and BCM8727 PHYs</label>
				<help>Currently supports the BCM8706 and BCM8727 10G Ethernet PHYs.</help>
			</entry>
			<entry name="ICPLUS_PHY">
				<label>Drivers for ICPlus PHYs</label>
				<help>Currently supports the IP175C and IP1001 PHYs.</help>
			</entry>
			<entry name="REALTEK_PHY">
				<label>Drivers for Realtek PHYs</label>
				<help>Supports the Realtek 821x PHY.</help>
			</entry>
			<entry name="NATIONAL_PHY">
				<label>Drivers for National Semiconductor PHYs</label>
				<help>Currently supports the DP83865 PHY.</help>
			</entry>
			<entry name="STE10XP">
				<label>Driver for STMicroelectronics STe10Xp PHYs</label>
				<help>This is the driver for the STe100p and STe101p PHYs.</help>
			</entry>
			<entry name="LSI_ET1011C_PHY">
				<label>Driver for LSI ET1011C PHY</label>
				<help>Supports the LSI ET1011C PHY.</help>
			</entry>
			<entry name="MICREL_PHY">
				<label>Driver for Micrel PHYs</label>
				<help>Supports the KSZ9021, VSC8201, KS8001 PHYs.</help>
			</entry>
			<entry name="DP83848_PHY">
				<label>Driver for Texas Instruments DP83848 PHY</label>
				<help>Supports the DP83848 PHY.</help>
			</entry>
			<entry name="DP83867_PHY">
				<label>Drivers for Texas Instruments DP83867 Gigabit PHY</label>
				<help>Currently supports the DP83867 PHY.</help>
			</entry>
			<entry name="MICROCHIP_PHY">
				<label>Drivers for Microchip PHYs</label>
				<help>Supports the LAN88XX PHYs.</help>
			</entry>
			<entry name="FIXED_PHY">
				<label>Driver for MDIO Bus/PHY emulation with fixed speed/link PHYs</label>
				<help>Adds the platform &quot;fixed&quot; MDIO Bus to cover the boards that use
PHYs that are not connected to the real MDIO bus.

Currently tested with mpc866ads and mpc8349e-mitx.</help>
			</entry>
			<entry name="MDIO_BITBANG">
				<label>Support for bitbanged MDIO buses</label>
				<help>This module implements the MDIO bus protocol in software,
for use by low level drivers that export the ability to
drive the relevant pins.

If in doubt, say N.</help>
			</entry>
			<entry name="MDIO_GPIO">
				<label>Support for GPIO lib-based bitbanged MDIO buses</label>
				<help>Supports GPIO lib-based MDIO busses.

To compile this driver as a module, choose M here: the module
will be called mdio-gpio.</help>
			</entry>
			<entry name="MDIO_CAVIUM"/>
			<entry name="MDIO_OCTEON">
				<label>Support for MDIO buses on Octeon and some ThunderX SOCs</label>
				<help>This module provides a driver for the Octeon and ThunderX MDIO
buses. It is required by the Octeon and ThunderX ethernet device
drivers on some systems.</help>
			</entry>
			<entry name="MDIO_THUNDER">
				<label>Support for MDIO buses on ThunderX SOCs</label>
				<help>This driver supports the MDIO interfaces found on Cavium
ThunderX SoCs when the MDIO bus device appears as a PCI
device.</help>
			</entry>
			<entry name="MDIO_SUN4I">
				<label>Allwinner sun4i MDIO interface support</label>
				<help>This driver supports the MDIO interface found in the network
interface units of the Allwinner SoC that have an EMAC (A10,
A12, A10s, etc.)</help>
			</entry>
			<entry name="MDIO_MOXART">
				<label>MOXA ART MDIO interface support</label>
				<help>This driver supports the MDIO interface found in the network
interface units of the MOXA ART SoC</help>
			</entry>
			<entry name="MDIO_BUS_MUX">
				<help>This module provides a driver framework for MDIO bus
multiplexers which connect one of several child MDIO busses
to a parent bus.  Switching between child busses is done by
device specific drivers.</help>
			</entry>
			<entry name="MDIO_BUS_MUX_GPIO">
				<label>Support for GPIO controlled MDIO bus multiplexers</label>
				<help>This module provides a driver for MDIO bus multiplexers that
are controlled via GPIO lines.  The multiplexer connects one of
several child MDIO busses to a parent bus.  Child bus
selection is under the control of GPIO lines.</help>
			</entry>
			<entry name="MDIO_BUS_MUX_MMIOREG">
				<label>Support for MMIO device-controlled MDIO bus multiplexers</label>
				<help>This module provides a driver for MDIO bus multiplexers that
are controlled via a simple memory-mapped device, like an FPGA.
The multiplexer connects one of several child MDIO busses to a
parent bus.  Child bus selection is under the control of one of
the FPGA's registers.

Currently, only 8-bit registers are supported.</help>
			</entry>
			<entry name="MDIO_BUS_MUX_BCM_IPROC">
				<label>Support for iProc based MDIO bus multiplexers</label>
				<help>This module provides a driver for MDIO bus multiplexers found in
iProc based Broadcom SoCs. This multiplexer connects one of several
child MDIO bus to a parent bus. Buses could be internal as well as
external and selection logic lies inside the same multiplexer.</help>
			</entry>
			<entry name="MDIO_BCM_UNIMAC">
				<label>Broadcom UniMAC MDIO bus controller</label>
				<help>This module provides a driver for the Broadcom UniMAC MDIO busses.
This hardware can be found in the Broadcom GENET Ethernet MAC
controllers as well as some Broadcom Ethernet switches such as the
Starfighter 2 switches.</help>
			</entry>
			<entry name="MDIO_BCM_IPROC">
				<label>Broadcom iProc MDIO bus controller</label>
				<help>This module provides a driver for the MDIO busses found in the
Broadcom iProc SoC's.</help>
			</entry>
			<entry name="INTEL_XWAY_PHY">
				<label>Driver for Intel XWAY PHYs</label>
				<help>Supports the Intel XWAY (former Lantiq) 11G and 22E PHYs.
These PHYs are marked as standalone chips under the names
PEF 7061, PEF 7071 and PEF 7072 or integrated into the Intel
SoCs xRX200, xRX300, xRX330, xRX350 and xRX550.</help>
			</entry>
			<entry name="MDIO_HISI_FEMAC">
				<label>Hisilicon FEMAC MDIO bus controller</label>
				<help>This module provides a driver for the MDIO busses found in the
Hisilicon SoC that have an Fast Ethernet MAC.</help>
			</entry>
			<entry name="MDIO_XGENE">
				<label>APM X-Gene SoC MDIO bus controller</label>
				<help>This module provides a driver for the MDIO busses found in the
APM X-Gene SoC's.</help>
			</entry>
			<entry name="MICREL_KS8995MA">
				<label>Micrel KS8995MA 5-ports 10/100 managed Ethernet switch</label>
			</entry>
			<entry name="PLIP">
				<label>PLIP (parallel port) support</label>
				<help>PLIP (Parallel Line Internet Protocol) is used to create a
reasonably fast mini network consisting of two (or, rarely, more)
local machines.  A PLIP link from a Linux box is a popular means to
install a Linux distribution on a machine which doesn't have a
CD-ROM drive (a minimal system has to be transferred with floppies
first). The kernels on both machines need to have this PLIP option
enabled for this to work.

The PLIP driver has two modes, mode 0 and mode 1.  The parallel
ports (the connectors at the computers with 25 holes) are connected
with &quot;null printer&quot; or &quot;Turbo Laplink&quot; cables which can transmit 4
bits at a time (mode 0) or with special PLIP cables, to be used on
bidirectional parallel ports only, which can transmit 8 bits at a
time (mode 1); you can find the wiring of these cables in
&lt;file:Documentation/networking/PLIP.txt&gt;.  The cables can be up to
15m long.  Mode 0 works also if one of the machines runs DOS/Windows
and has some PLIP software installed, e.g. the Crynwr PLIP packet
driver (&lt;http://oak.oakland.edu/simtel.net/msdos/pktdrvr-pre.html&gt;)
and winsock or NCSA's telnet.

If you want to use PLIP, say Y and read the PLIP mini-HOWTO as well
as the NET-3-HOWTO, both available from
&lt;http://www.tldp.org/docs.html#howto&gt;.  Note that the PLIP
protocol has been changed and this PLIP driver won't work together
with the PLIP support in Linux versions 1.0.x.  This option enlarges
your kernel by about 8 KB.

To compile this driver as a module, choose M here. The module
will be called plip. If unsure, say Y or M, in case you buy
a laptop later.
</help>
			</entry>
			<entry name="PPP">
				<label>PPP (point-to-point protocol) support</label>
				<help>PPP (Point to Point Protocol) is a newer and better SLIP.  It serves
the same purpose: sending Internet traffic over telephone (and other
serial) lines.  Ask your access provider if they support it, because
otherwise you can't use it; most Internet access providers these
days support PPP rather than SLIP.

To use PPP, you need an additional program called pppd as described
in the PPP-HOWTO, available at
&lt;http://www.tldp.org/docs.html#howto&gt;.  Make sure that you have
the version of pppd recommended in &lt;file:Documentation/Changes&gt;.
The PPP option enlarges your kernel by about 16 KB.

There are actually two versions of PPP: the traditional PPP for
asynchronous lines, such as regular analog phone lines, and
synchronous PPP which can be used over digital ISDN lines for
example.  If you want to use PPP over phone lines or other
asynchronous serial lines, you need to say Y (or M) here and also to
the next option, &quot;PPP support for async serial ports&quot;.  For PPP over
synchronous lines, you should say Y (or M) here and to &quot;Support
synchronous PPP&quot;, below.

If you said Y to &quot;Version information on all symbols&quot; above, then
you cannot compile the PPP driver into the kernel; you can then only
compile it as a module. To compile this driver as a module, choose M
here. The module will be called ppp_generic.</help>
			</entry>
			<entry name="PPP_BSDCOMP">
				<label>PPP BSD-Compress compression</label>
				<help>Support for the BSD-Compress compression method for PPP, which uses
the LZW compression method to compress each PPP packet before it is
sent over the wire. The machine at the other end of the PPP link
(usually your ISP) has to support the BSD-Compress compression
method as well for this to be useful. Even if they don't support it,
it is safe to say Y here.

The PPP Deflate compression method (&quot;PPP Deflate compression&quot;,
above) is preferable to BSD-Compress, because it compresses better
and is patent-free.

Note that the BSD compression code will always be compiled as a
module; it is called bsd_comp and will show up in the directory
modules once you have said &quot;make modules&quot;. If unsure, say N.</help>
			</entry>
			<entry name="PPP_DEFLATE">
				<label>PPP Deflate compression</label>
				<help>Support for the Deflate compression method for PPP, which uses the
Deflate algorithm (the same algorithm that gzip uses) to compress
each PPP packet before it is sent over the wire.  The machine at the
other end of the PPP link (usually your ISP) has to support the
Deflate compression method as well for this to be useful.  Even if
they don't support it, it is safe to say Y here.

To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="PPP_FILTER">
				<label>PPP filtering</label>
				<help>Say Y here if you want to be able to filter the packets passing over
PPP interfaces.  This allows you to control which packets count as
activity (i.e. which packets will reset the idle timer or bring up
a demand-dialed link) and which packets are to be dropped entirely.
You need to say Y here if you wish to use the pass-filter and
active-filter options to pppd.

If unsure, say N.</help>
			</entry>
			<entry name="PPP_MPPE">
				<label>PPP MPPE compression (encryption)</label>
				<help>Support for the MPPE Encryption protocol, as employed by the
Microsoft Point-to-Point Tunneling Protocol.

See http://pptpclient.sourceforge.net/ for information on
configuring PPTP clients and servers to utilize this method.</help>
			</entry>
			<entry name="PPP_MULTILINK">
				<label>PPP multilink support</label>
				<help>PPP multilink is a protocol (defined in RFC 1990) which allows you
to combine several (logical or physical) lines into one logical PPP
connection, so that you can utilize your full bandwidth.

This has to be supported at the other end as well and you need a
version of the pppd daemon which understands the multilink protocol.

If unsure, say N.</help>
			</entry>
			<entry name="PPPOATM">
				<label>PPP over ATM</label>
				<help>Support PPP (Point to Point Protocol) encapsulated in ATM frames.
This implementation does not yet comply with section 8 of RFC2364,
which can lead to bad results if the ATM peer loses state and
changes its encapsulation unilaterally.</help>
			</entry>
			<entry name="PPPOE">
				<label>PPP over Ethernet</label>
				<help>Support for PPP over Ethernet.

This driver requires the latest version of pppd from the CVS
repository at cvs.samba.org.  Alternatively, see the
RoaringPenguin package (&lt;http://www.roaringpenguin.com/pppoe&gt;)
which contains instruction on how to use this driver (under
the heading &quot;Kernel mode PPPoE&quot;).</help>
			</entry>
			<entry name="PPTP">
				<label>PPP over IPv4 (PPTP)</label>
				<help>Support for PPP over IPv4.(Point-to-Point Tunneling Protocol)

This driver requires pppd plugin to work in client mode or
modified pptpd (poptop) to work in server mode.
See http://accel-pptp.sourceforge.net/ for information how to
utilize this module.</help>
			</entry>
			<entry name="PPPOL2TP">
				<label>PPP over L2TP</label>
				<help>Support for PPP-over-L2TP socket family. L2TP is a protocol
used by ISPs and enterprises to tunnel PPP traffic over UDP
tunnels. L2TP is replacing PPTP for VPN uses.</help>
			</entry>
			<entry name="PPP_ASYNC">
				<label>PPP support for async serial ports</label>
				<help>Say Y (or M) here if you want to be able to use PPP over standard
asynchronous serial ports, such as COM1 or COM2 on a PC.  If you use
a modem (not a synchronous or ISDN modem) to contact your ISP, you
need this option.

To compile this driver as a module, choose M here.

If unsure, say Y.</help>
			</entry>
			<entry name="PPP_SYNC_TTY">
				<label>PPP support for sync tty ports</label>
				<help>Say Y (or M) here if you want to be able to use PPP over synchronous
(HDLC) tty devices, such as the SyncLink adapter. These devices
are often used for high-speed leased lines like T1/E1.

To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="SLIP">
				<label>SLIP (serial line) support</label>
				<help>Say Y if you intend to use SLIP or CSLIP (compressed SLIP) to
connect to your Internet service provider or to connect to some
other local Unix box or if you want to configure your Linux box as a
Slip/CSlip server for other people to dial in. SLIP (Serial Line
Internet Protocol) is a protocol used to send Internet traffic over
serial connections such as telephone lines or null modem cables;
nowadays, the protocol PPP is more commonly used for this same
purpose.

Normally, your access provider has to support SLIP in order for you
to be able to use it, but there is now a SLIP emulator called SLiRP
around (available from
&lt;ftp://ibiblio.org/pub/Linux/system/network/serial/&gt;) which
allows you to use SLIP over a regular dial up shell connection. If
you plan to use SLiRP, make sure to say Y to CSLIP, below. The
NET-3-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, explains how to
configure SLIP. Note that you don't need this option if you just
want to run term (term is a program which gives you almost full
Internet connectivity if you have a regular dial up shell account on
some Internet connected Unix computer. Read
&lt;http://www.bart.nl/~patrickr/term-howto/Term-HOWTO.html&gt;). SLIP
support will enlarge your kernel by about 4 KB. If unsure, say N.

To compile this driver as a module, choose M here. The module
will be called slip.</help>
			</entry>
			<entry name="SLHC">
				<help>This option enables Van Jacobsen serial line header compression
routines.</help>
			</entry>
			<entry name="SLIP_COMPRESSED">
				<label>CSLIP compressed headers</label>
				<help>This protocol is faster than SLIP because it uses compression on the
TCP/IP headers (not on the data itself), but it has to be supported
on both ends. Ask your access provider if you are not sure and
answer Y, just in case. You will still be able to use plain SLIP. If
you plan to use SLiRP, the SLIP emulator (available from
&lt;ftp://ibiblio.org/pub/Linux/system/network/serial/&gt;) which
allows you to use SLIP over a regular dial up shell connection, you
definitely want to say Y here. The NET-3-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, explains how to configure
CSLIP. This won't enlarge your kernel.</help>
			</entry>
			<entry name="SLIP_SMART">
				<label>Keepalive and linefill</label>
				<help>Adds additional capabilities to the SLIP driver to support the
RELCOM line fill and keepalive monitoring. Ideal on poor quality
analogue lines.</help>
			</entry>
			<entry name="SLIP_MODE_SLIP6">
				<label>Six bit SLIP encapsulation</label>
				<help>Just occasionally you may need to run IP over hostile serial
networks that don't pass all control characters or are only seven
bit. Saying Y here adds an extra mode you can use with SLIP:
&quot;slip6&quot;. In this mode, SLIP will only send normal ASCII symbols over
the serial device. Naturally, this has to be supported at the other
end of the link as well. It's good enough, for example, to run IP
over the async ports of a Camtec JNT Pad. If unsure, say N.</help>
			</entry>
			<container name="S_390_network_device_drivers">
				<label>S/390 network device drivers</label>
				<entry name="LCS">
					<label>Lan Channel Station Interface</label>
					<help>Select this option if you want to use LCS networking on IBM System z.
This device driver supports FDDI (IEEE 802.7) and Ethernet.
To compile as a module, choose M. The module name is lcs.
If you do not know what it is, it's safe to choose Y.</help>
				</entry>
				<entry name="CTCM">
					<label>CTC and MPC SNA device support</label>
					<help>Select this option if you want to use channel-to-channel
point-to-point networking on IBM System z.
This device driver supports real CTC coupling using ESCON.
It also supports virtual CTCs when running under VM.
This driver also supports channel-to-channel MPC SNA devices.
MPC is an SNA protocol device used by Communication Server for Linux.
To compile as a module, choose M. The module name is ctcm.
To compile into the kernel, choose Y.
If you do not need any channel-to-channel connection, choose N.</help>
				</entry>
				<entry name="NETIUCV">
					<label>IUCV network device support (VM only)</label>
					<help>Select this option if you want to use inter-user communication
vehicle networking under VM or VIF. It enables a fast communication
link between VM guests. Using ifconfig a point-to-point connection
can be established to the Linux on IBM System z
running on the other VM guest. To compile as a module, choose M.
The module name is netiucv. If unsure, choose Y.</help>
				</entry>
				<entry name="SMSGIUCV">
					<label>IUCV special message support (VM only)</label>
					<help>Select this option if you want to be able to receive SMSG messages
from other VM guest systems.</help>
				</entry>
				<entry name="SMSGIUCV_EVENT">
					<label>Deliver IUCV special messages as uevents (VM only)</label>
					<help>Select this option to deliver CP special messages (SMSGs) as
uevents.  The driver handles only those special messages that
start with &quot;APP&quot;.

To compile as a module, choose M. The module name is &quot;smsgiucv_app&quot;.</help>
				</entry>
				<entry name="QETH">
					<label>Gigabit Ethernet device support</label>
					<help>This driver supports the IBM System z OSA Express adapters
in QDIO mode (all media types), HiperSockets interfaces and z/VM
virtual NICs for Guest LAN and VSWITCH.

For details please refer to the documentation provided by IBM at
&lt;http://www.ibm.com/developerworks/linux/linux390&gt;

To compile this driver as a module, choose M.
The module name is qeth.</help>
				</entry>
				<entry name="QETH_L2">
					<label>qeth layer 2 device support</label>
					<help>Select this option to be able to run qeth devices in layer 2 mode.
To compile as a module, choose M. The module name is qeth_l2.
If unsure, choose y.</help>
				</entry>
				<entry name="QETH_L3">
					<label>qeth layer 3 device support</label>
					<help>Select this option to be able to run qeth devices in layer 3 mode.
To compile as a module choose M. The module name is qeth_l3.
If unsure, choose Y.</help>
				</entry>
				<entry name="QETH_IPV6"/>
				<entry name="CCWGROUP"/>
			</container>
			<entry name="USB_NET_DRIVERS">
				<label>USB Network Adapters</label>
			</entry>
			<entry name="USB_CATC">
				<label>USB CATC NetMate-based Ethernet device support</label>
				<help>Say Y if you want to use one of the following 10Mbps USB Ethernet
device based on the EL1210A chip. Supported devices are:
Belkin F5U011
Belkin F5U111
CATC NetMate
CATC NetMate II
smartBridges smartNIC

This driver makes the adapter appear as a normal Ethernet interface,
typically on eth0, if it is the only ethernet device, or perhaps on
eth1, if you have a PCI or ISA ethernet card installed.

To compile this driver as a module, choose M here: the
module will be called catc.</help>
			</entry>
			<entry name="USB_KAWETH">
				<label>USB KLSI KL5USB101-based ethernet device support</label>
				<help>Say Y here if you want to use one of the following 10Mbps only
USB Ethernet adapters based on the KLSI KL5KUSB101B chipset:
3Com 3C19250
ADS USB-10BT
ATEN USB Ethernet
ASANTE USB To Ethernet Adapter
AOX Endpoints USB Ethernet
Correga K.K.
D-Link DSB-650C and DU-E10
Entrega / Portgear E45
I-O DATA USB-ET/T
Jaton USB Ethernet Device Adapter
Kingston Technology USB Ethernet Adapter
Linksys USB10T
Mobility USB-Ethernet Adapter
NetGear EA-101
Peracom Enet and Enet2
Portsmith Express Ethernet Adapter
Shark Pocket Adapter
SMC 2202USB
Sony Vaio port extender

This driver is likely to work with most 10Mbps only USB Ethernet
adapters, including some &quot;no brand&quot; devices. It does NOT work on
SmartBridges smartNIC or on Belkin F5U111 devices - you should use
the CATC NetMate driver for those. If you are not sure which one
you need, select both, and the correct one should be selected for
you.

This driver makes the adapter appear as a normal Ethernet interface,
typically on eth0, if it is the only ethernet device, or perhaps on
eth1, if you have a PCI or ISA ethernet card installed.

To compile this driver as a module, choose M here: the
module will be called kaweth.</help>
			</entry>
			<entry name="USB_PEGASUS">
				<label>USB Pegasus/Pegasus-II based ethernet device support</label>
				<help>Say Y here if you know you have Pegasus or Pegasus-II based adapter.
If in doubt then look at &lt;file:drivers/net/usb/pegasus.h&gt; for the
complete list of supported devices.

If your particular adapter is not in the list and you are _sure_ it
is Pegasus or Pegasus II based then send me
&lt;petkan@users.sourceforge.net&gt; vendor and device IDs.

To compile this driver as a module, choose M here: the
module will be called pegasus.</help>
			</entry>
			<entry name="USB_RTL8150">
				<label>USB RTL8150 based ethernet device support</label>
				<help>Say Y here if you have RTL8150 based usb-ethernet adapter.
Send me &lt;petkan@users.sourceforge.net&gt; any comments you may have.
You can also check for updates at &lt;http://pegasus2.sourceforge.net/&gt;.

To compile this driver as a module, choose M here: the
module will be called rtl8150.</help>
			</entry>
			<entry name="USB_RTL8152">
				<label>Realtek RTL8152/RTL8153 Based USB Ethernet Adapters</label>
				<help>This option adds support for Realtek RTL8152 based USB 2.0
10/100 Ethernet adapters and RTL8153 based USB 3.0 10/100/1000
Ethernet adapters.

To compile this driver as a module, choose M here: the
module will be called r8152.</help>
			</entry>
			<entry name="USB_LAN78XX">
				<label>Microchip LAN78XX Based USB Ethernet Adapters</label>
				<help>This option adds support for Microchip LAN78XX based USB 2
&amp; USB 3 10/100/1000 Ethernet adapters.

To compile this driver as a module, choose M here: the
module will be called lan78xx.</help>
			</entry>
			<entry name="USB_USBNET">
				<label>Multi-purpose USB Networking Framework</label>
				<help>This driver supports several kinds of network links over USB,
with &quot;minidrivers&quot; built around a common network driver core
that supports deep queues for efficient transfers.  (This gives
better performance with small packets and at high speeds).

The USB host runs &quot;usbnet&quot;, and the other end of the link might be:

- Another USB host, when using USB &quot;network&quot; or &quot;data transfer&quot;
cables.  These are often used to network laptops to PCs, like
&quot;Laplink&quot; parallel cables or some motherboards.  These rely
on specialized chips from many suppliers.

- An intelligent USB gadget, perhaps embedding a Linux system.
These include PDAs running Linux (iPaq, Yopy, Zaurus, and
others), and devices that interoperate using the standard
CDC-Ethernet specification (including many cable modems).

- Network adapter hardware (like those for 10/100 Ethernet) which
uses this driver framework.

The link will appear with a name like &quot;usb0&quot;, when the link is
a two-node link, or &quot;eth0&quot; for most CDC-Ethernet devices.  Those
two-node links are most easily managed with Ethernet Bridging
(CONFIG_BRIDGE) instead of routing.

For more information see &lt;http://www.linux-usb.org/usbnet/&gt;.

To compile this driver as a module, choose M here: the
module will be called usbnet.</help>
			</entry>
			<entry name="USB_NET_AX8817X">
				<label>ASIX AX88xxx Based USB 2.0 Ethernet Adapters</label>
				<help>This option adds support for ASIX AX88xxx based USB 2.0
10/100 Ethernet adapters.

This driver should work with at least the following devices:
* Aten UC210T
* ASIX AX88172
* Billionton Systems, USB2AR
* Billionton Systems, GUSB2AM-1G-B
* Buffalo LUA-U2-KTX
* Corega FEther USB2-TX
* D-Link DUB-E100
* Hawking UF200
* Linksys USB200M
* Netgear FA120
* Sitecom LN-029
* Sitecom LN-028
* Intellinet USB 2.0 Ethernet
* ST Lab USB 2.0 Ethernet
* TrendNet TU2-ET100

This driver creates an interface named &quot;ethX&quot;, where X depends on
what other networking devices you have in use.</help>
			</entry>
			<entry name="USB_NET_AX88179_178A">
				<label>ASIX AX88179/178A USB 3.0/2.0 to Gigabit Ethernet</label>
				<help>This option adds support for ASIX AX88179 based USB 3.0/2.0
to Gigabit Ethernet adapters.

This driver should work with at least the following devices:
* ASIX AX88179
* ASIX AX88178A
* Sitcomm LN-032

This driver creates an interface named &quot;ethX&quot;, where X depends on
what other networking devices you have in use.</help>
			</entry>
			<entry name="USB_NET_CDCETHER">
				<label>CDC Ethernet support (smart devices such as cable modems)</label>
				<help>This option supports devices conforming to the Communication Device
Class (CDC) Ethernet Control Model, a specification that's easy to
implement in device firmware.  The CDC specifications are available
from &lt;http://www.usb.org/&gt;.

CDC Ethernet is an implementation option for DOCSIS cable modems
that support USB connectivity, used for non-Microsoft USB hosts.
The Linux-USB CDC Ethernet Gadget driver is an open implementation.
This driver should work with at least the following devices:

* Dell Wireless 5530 HSPA
* Ericsson PipeRider (all variants)
* Ericsson Mobile Broadband Module (all variants)
* Motorola (DM100 and SB4100)
* Broadcom Cable Modem (reference design)
* Toshiba (PCX1100U and F3507g/F3607gw)
* ...

This driver creates an interface named &quot;ethX&quot;, where X depends on
what other networking devices you have in use.  However, if the
IEEE 802 &quot;local assignment&quot; bit is set in the address, a &quot;usbX&quot;
name is used instead.</help>
			</entry>
			<entry name="USB_NET_CDC_EEM">
				<label>CDC EEM support</label>
				<help>This option supports devices conforming to the Communication Device
Class (CDC) Ethernet Emulation Model, a specification that's easy to
implement in device firmware.  The CDC EEM specifications are available
from &lt;http://www.usb.org/&gt;.

This driver creates an interface named &quot;ethX&quot;, where X depends on
what other networking devices you have in use.  However, if the
IEEE 802 &quot;local assignment&quot; bit is set in the address, a &quot;usbX&quot;
name is used instead.</help>
			</entry>
			<entry name="USB_NET_CDC_NCM">
				<label>CDC NCM support</label>
				<help>This driver provides support for CDC NCM (Network Control Model
Device USB Class Specification). The CDC NCM specification is
available from &lt;http://www.usb.org/&gt;.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module.

This driver should work with at least the following devices:
* ST-Ericsson M700 LTE FDD/TDD Mobile Broadband Modem (ref. design)
* ST-Ericsson M5730 HSPA+ Mobile Broadband Modem (reference design)
* ST-Ericsson M570 HSPA+ Mobile Broadband Modem (reference design)
* ST-Ericsson M343 HSPA Mobile Broadband Modem (reference design)
* Ericsson F5521gw Mobile Broadband Module</help>
			</entry>
			<entry name="USB_NET_HUAWEI_CDC_NCM">
				<label>Huawei NCM embedded AT channel support</label>
				<help>This driver supports huawei-style NCM devices, that use NCM as a
transport for other protocols, usually an embedded AT channel.
Good examples are:
* Huawei E3131
* Huawei E3251

To compile this driver as a module, choose M here: the module will be
called huawei_cdc_ncm.ko.</help>
			</entry>
			<entry name="USB_NET_CDC_MBIM">
				<label>CDC MBIM support</label>
				<help>This driver provides support for CDC MBIM (Mobile Broadband
Interface Model) devices. The CDC MBIM specification is
available from &lt;http://www.usb.org/&gt;.

MBIM devices require configuration using the management
protocol defined by the MBIM specification.  This driver
provides unfiltered access to the MBIM control channel
through the associated /dev/cdc-wdmx character device.

To compile this driver as a module, choose M here: the
module will be called cdc_mbim.</help>
			</entry>
			<entry name="USB_NET_DM9601">
				<label>Davicom DM96xx based USB 10/100 ethernet devices</label>
				<help>This option adds support for Davicom DM9601/DM9620/DM9621A
based USB 10/100 Ethernet adapters.</help>
			</entry>
			<entry name="USB_NET_SR9700">
				<label>CoreChip-sz SR9700 based USB 1.1 10/100 ethernet devices</label>
				<help>This option adds support for CoreChip-sz SR9700 based USB 1.1
10/100 Ethernet adapters.</help>
			</entry>
			<entry name="USB_NET_SR9800">
				<label>CoreChip-sz SR9800 based USB 2.0 10/100 ethernet devices</label>
				<help>Say Y if you want to use one of the following 100Mbps USB Ethernet
device based on the CoreChip-sz SR9800 chip.

This driver makes the adapter appear as a normal Ethernet interface,
typically on eth0, if it is the only ethernet device, or perhaps on
eth1, if you have a PCI or ISA ethernet card installed.

To compile this driver as a module, choose M here: the
module will be called sr9800.</help>
			</entry>
			<entry name="USB_NET_SMSC75XX">
				<label>SMSC LAN75XX based USB 2.0 gigabit ethernet devices</label>
				<help>This option adds support for SMSC LAN75XX based USB 2.0
Gigabit Ethernet adapters.</help>
			</entry>
			<entry name="USB_NET_SMSC95XX">
				<label>SMSC LAN95XX based USB 2.0 10/100 ethernet devices</label>
				<help>This option adds support for SMSC LAN95XX based USB 2.0
10/100 Ethernet adapters.</help>
			</entry>
			<entry name="USB_NET_GL620A">
				<label>GeneSys GL620USB-A based cables</label>
				<help>Choose this option if you're using a host-to-host cable,
or PC2PC motherboard, with this chip.

Note that the half-duplex &quot;GL620USB&quot; is not supported.</help>
			</entry>
			<entry name="USB_NET_NET1080">
				<label>NetChip 1080 based cables (Laplink, ...)</label>
				<help>Choose this option if you're using a host-to-host cable based
on this design:  one NetChip 1080 chip and supporting logic,
optionally with LEDs that indicate traffic</help>
			</entry>
			<entry name="USB_NET_PLUSB">
				<label>Prolific PL-2301/2302/25A1 based cables</label>
				<help>Choose this option if you're using a host-to-host cable
with one of these chips.</help>
			</entry>
			<entry name="USB_NET_MCS7830">
				<label>MosChip MCS7830 based Ethernet adapters</label>
				<help>Choose this option if you're using a 10/100 Ethernet USB2
adapter based on the MosChip 7830 controller. This includes
adapters marketed under the DeLOCK brand.</help>
			</entry>
			<entry name="USB_NET_RNDIS_HOST">
				<label>Host for RNDIS and ActiveSync devices</label>
				<help>This option enables hosting &quot;Remote NDIS&quot; USB networking links,
as encouraged by Microsoft (instead of CDC Ethernet!) for use in
various devices that may only support this protocol.  A variant
of this protocol (with even less public documentation) seems to
be at the root of Microsoft's &quot;ActiveSync&quot; too.

Avoid using this protocol unless you have no better options.
The protocol specification is incomplete, and is controlled by
(and for) Microsoft; it isn't an &quot;Open&quot; ecosystem or market.</help>
			</entry>
			<entry name="USB_NET_CDC_SUBSET_ENABLE"/>
			<entry name="USB_NET_CDC_SUBSET">
				<label>Simple USB Network Links (CDC Ethernet subset)</label>
				<help>This driver module supports USB network devices that can work
without any device-specific information.  Select it if you have
one of these drivers.

Note that while many USB host-to-host cables can work in this mode,
that may mean not being able to talk to Win32 systems or more
commonly not being able to handle certain events (like replugging
the host on the other end) very well.  Also, these devices will
not generally have permanently assigned Ethernet addresses.</help>
			</entry>
			<entry name="USB_ALI_M5632">
				<label>ALi M5632 based 'USB 2.0 Data Link' cables</label>
				<help>Choose this option if you're using a host-to-host cable
based on this design, which supports USB 2.0 high speed.</help>
			</entry>
			<entry name="USB_AN2720">
				<label>AnchorChips 2720 based cables (Xircom PGUNET, ...)</label>
				<help>Choose this option if you're using a host-to-host cable
based on this design.  Note that AnchorChips is now a
Cypress brand.</help>
			</entry>
			<entry name="USB_BELKIN">
				<label>eTEK based host-to-host cables (Advance, Belkin, ...)</label>
				<help>Choose this option if you're using a host-to-host cable
based on this design:  two NetChip 2890 chips and an Atmel
microcontroller, with LEDs that indicate traffic.</help>
			</entry>
			<entry name="USB_ARMLINUX">
				<label>Embedded ARM Linux links (iPaq, ...)</label>
				<help>Choose this option to support the &quot;usb-eth&quot; networking driver
used by most of the ARM Linux community with device controllers
such as the SA-11x0 and PXA-25x UDCs, or the tftp capabilities
in some PXA versions of the &quot;blob&quot; boot loader.

Linux-based &quot;Gumstix&quot; PXA-25x based systems use this protocol
to talk with other Linux systems.

Although the ROMs shipped with Sharp Zaurus products use a
different link level framing protocol, you can have them use
this simpler protocol by installing a different kernel.</help>
			</entry>
			<entry name="USB_EPSON2888">
				<label>Epson 2888 based firmware (DEVELOPMENT)</label>
				<help>Choose this option to support the usb networking links used
by some sample firmware from Epson.</help>
			</entry>
			<entry name="USB_KC2190">
				<label>KT Technology KC2190 based cables (InstaNet)</label>
				<help>Choose this option if you're using a host-to-host cable
with one of these chips.</help>
			</entry>
			<entry name="USB_NET_ZAURUS">
				<label>Sharp Zaurus (stock ROMs) and compatible</label>
				<help>Choose this option to support the usb networking links used by
Zaurus models like the SL-5000D, SL-5500, SL-5600, A-300, B-500.
This also supports some related device firmware, as used in some
PDAs from Olympus and some cell phones from Motorola.

If you install an alternate image, such as the Linux 2.6 based
versions of OpenZaurus, you should no longer need to support this
protocol.  Only the &quot;eth-fd&quot; or &quot;net_fd&quot; drivers in these devices
really need this non-conformant variant of CDC Ethernet (or in
some cases CDC MDLM) protocol, not &quot;g_ether&quot;.</help>
			</entry>
			<entry name="USB_NET_CX82310_ETH">
				<label>Conexant CX82310 USB ethernet port</label>
				<help>Choose this option if you're using a Conexant CX82310-based ADSL
router with USB ethernet port. This driver is for routers only,
it will not work with ADSL modems (use cxacru driver instead).</help>
			</entry>
			<entry name="USB_NET_KALMIA">
				<label>Samsung Kalmia based LTE USB modem</label>
				<help>Choose this option if you have a Samsung Kalmia based USB modem
as Samsung GT-B3730.

To compile this driver as a module, choose M here: the
module will be called kalmia.</help>
			</entry>
			<entry name="USB_NET_QMI_WWAN">
				<label>QMI WWAN driver for Qualcomm MSM based 3G and LTE modems</label>
				<help>Support WWAN LTE/3G devices based on Qualcomm Mobile Data Modem
(MDM) chipsets.  Examples of such devices are
* Huawei E392/E398

This driver will only drive the ethernet part of the chips.
The devices require additional configuration to be usable.
Multiple management interfaces with linux drivers are
available:

* option: AT commands on /dev/ttyUSBx
* cdc-wdm: Qualcomm MSM Interface (QMI) protocol on /dev/cdc-wdmx

A modem manager with support for QMI is recommended.

To compile this driver as a module, choose M here: the
module will be called qmi_wwan.</help>
			</entry>
			<entry name="USB_HSO">
				<label>Option USB High Speed Mobile Devices</label>
				<help>Choose this option if you have an Option HSDPA/HSUPA card.
These cards support downlink speeds of 7.2Mbps or greater.

To compile this driver as a module, choose M here: the
module will be called hso.</help>
			</entry>
			<entry name="USB_NET_INT51X1">
				<label>Intellon PLC based usb adapter</label>
				<help>Choose this option if you're using a 14Mb USB-based PLC
(Powerline Communications) solution with an Intellon
INT51x1/INT5200 chip, like the &quot;devolo dLan duo&quot;.</help>
			</entry>
			<entry name="USB_CDC_PHONET">
				<label>CDC Phonet support</label>
				<help>Choose this option to support the Phonet interface to a Nokia
cellular modem, as found on most Nokia handsets with the
&quot;PC suite&quot; USB profile.</help>
			</entry>
			<entry name="USB_IPHETH">
				<label>Apple iPhone USB Ethernet driver</label>
				<help>Module used to share Internet connection (tethering) from your
iPhone (Original, 3G and 3GS) to your system.
Note that you need userspace libraries and programs that are needed
to pair your device with your system and that understand the iPhone
protocol.

For more information: http://giagio.com/wiki/moin.cgi/iPhoneEthernetDriver</help>
			</entry>
			<entry name="USB_SIERRA_NET">
				<label>USB-to-WWAN Driver for Sierra Wireless modems</label>
				<help>Choose this option if you have a Sierra Wireless USB-to-WWAN device.

To compile this driver as a module, choose M here: the
module will be called sierra_net.</help>
			</entry>
			<entry name="USB_VL600">
				<label>LG VL600 modem dongle</label>
				<help>Select this if you want to use an LG Electronics 4G/LTE usb modem
called VL600.  This driver only handles the ethernet
interface exposed by the modem firmware.  To establish a connection
you will first need a userspace program that sends the right
command to the modem through its CDC ACM port, and most
likely also a DHCP client.  See this thread about using the
4G modem from Verizon:

http://ubuntuforums.org/showpost.php?p=10589647&amp;postcount=17</help>
			</entry>
			<entry name="USB_NET_CH9200">
				<label>QingHeng CH9200 USB ethernet support</label>
				<help>Choose this option if you have a USB ethernet adapter with a QinHeng
CH9200 chipset.

To compile this driver as a module, choose M here: the
module will be called ch9200.</help>
			</entry>
			<entry name="WLAN">
				<label>Wireless LAN</label>
				<help>This section contains all the pre 802.11 and 802.11 wireless
device drivers. For a complete list of drivers and documentation
on them refer to the wireless wiki:

http://wireless.kernel.org/en/users/Drivers</help>
			</entry>
			<entry name="WLAN_VENDOR_ADMTEK">
				<label>ADMtek devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ADM8211">
				<label>ADMtek ADM8211 support</label>
				<help>This driver is for ADM8211A, ADM8211B, and ADM8211C based cards.
These are PCI/mini-PCI/Cardbus 802.11b chips found in cards such as:

Xterasys Cardbus XN-2411b
Blitz NetWave Point PC
TrendNet 221pc
Belkin F5D6001
SMC 2635W
Linksys WPC11 v1
Fiberline FL-WL-200X
3com Office Connect (3CRSHPW796)
Corega WLPCIB-11
SMC 2602W V2 EU
D-Link DWL-520 Revision C

However, some of these cards have been replaced with other chips
like the RTL8180L (Xterasys Cardbus XN-2411b, Belkin F5D6001) or
the Ralink RT2400 (SMC2635W) without a model number change.

Thanks to Infineon-ADMtek for their support of this driver.</help>
			</entry>
			<entry name="ATH_COMMON"/>
			<entry name="WLAN_VENDOR_ATH">
				<label>Atheros/Qualcomm devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.

For more information and documentation on this module you can visit:

http://wireless.kernel.org/en/users/Drivers/ath

For information on all Atheros wireless drivers visit:

http://wireless.kernel.org/en/users/Drivers/Atheros</help>
			</entry>
			<entry name="ATH_DEBUG">
				<label>Atheros wireless debugging</label>
				<help>Say Y, if you want to debug atheros wireless drivers.
Right now only ath9k makes use of this.</help>
			</entry>
			<entry name="ATH_TRACEPOINTS">
				<label>Atheros wireless tracing</label>
				<help>This option enables tracepoints for atheros wireless drivers.
Currently, ath9k makes use of this facility.</help>
			</entry>
			<entry name="ATH_REG_DYNAMIC_USER_REG_HINTS">
				<label>Atheros dynamic user regulatory hints</label>
				<help>Say N. This should only be enabled in countries where
this feature is explicitly allowed and only on cards that
specifically have been tested for this.</help>
			</entry>
			<entry name="ATH_REG_DYNAMIC_USER_CERT_TESTING">
				<label>Atheros dynamic user regulatory testing</label>
				<help>Say N. This should only be enabled on systems
undergoing certification testing.</help>
			</entry>
			<entry name="ATH5K">
				<label>Atheros 5xxx wireless cards support</label>
				<help>This module adds support for wireless adapters based on
Atheros 5xxx chipset.

Currently the following chip versions are supported:

MAC: AR5211 AR5212
PHY: RF5111/2111 RF5112/2112 RF5413/2413

This driver uses the kernel's mac80211 subsystem.

If you choose to build a module, it'll be called ath5k. Say M if
unsure.</help>
			</entry>
			<entry name="ATH5K_DEBUG">
				<label>Atheros 5xxx debugging</label>
				<help>Atheros 5xxx debugging messages.

Say Y, if and you will get debug options for ath5k.
To use this, you need to mount debugfs:

mount -t debugfs debug /sys/kernel/debug

You will get access to files under:
/sys/kernel/debug/ath5k/phy0/

To enable debug, pass the debug level to the debug module
parameter. For example:

modprobe ath5k debug=0x00000400</help>
			</entry>
			<entry name="ATH5K_TRACER">
				<label>Atheros 5xxx tracer</label>
				<help>Say Y here to enable tracepoints for the ath5k driver
using the kernel tracing infrastructure.  Select this
option if you are interested in debugging the driver.

If unsure, say N.</help>
			</entry>
			<entry name="ATH5K_AHB">
				<label>Atheros 5xxx AHB bus support</label>
				<help>This adds support for WiSoC type chipsets of the 5xxx Atheros
family.</help>
			</entry>
			<entry name="ATH5K_PCI">
				<label>Atheros 5xxx PCI bus support</label>
				<help>This adds support for PCI type chipsets of the 5xxx Atheros
family.</help>
			</entry>
			<entry name="ATH5K_TEST_CHANNELS">
				<label>Enables testing channels on ath5k</label>
				<help>This enables non-standard IEEE 802.11 channels on ath5k, which
can be used for research purposes. This option should be disabled
unless doing research.
</help>
			</entry>
			<entry name="ATH9K_HW"/>
			<entry name="ATH9K_COMMON"/>
			<entry name="ATH9K_DFS_DEBUGFS"/>
			<entry name="ATH9K_BTCOEX_SUPPORT">
				<label>Atheros bluetooth coexistence support</label>
				<help>Say Y, if you want to use the ath9k/ath9k_htc radios together with
Bluetooth modules in the same system.</help>
			</entry>
			<entry name="ATH9K">
				<label>Atheros 802.11n wireless cards support</label>
				<help>This module adds support for wireless adapters based on
Atheros IEEE 802.11n AR5008, AR9001 and AR9002 family
of chipsets. For a specific list of supported external
cards, laptops that already ship with these cards and
APs that come with these cards refer to ath9k wiki
products page:

http://wireless.kernel.org/en/users/Drivers/ath9k/products

If you choose to build a module, it'll be called ath9k.</help>
			</entry>
			<entry name="ATH9K_PCI">
				<label>Atheros ath9k PCI/PCIe bus support</label>
				<help>This option enables the PCI bus support in ath9k.

Say Y, if you have a compatible PCI/PCIe wireless card.</help>
			</entry>
			<entry name="ATH9K_AHB">
				<label>Atheros ath9k AHB bus support</label>
				<help>This option enables the AHB bus support in ath9k.

Say Y, if you have a SoC with a compatible built-in
wireless MAC. Say N if unsure.</help>
			</entry>
			<entry name="ATH9K_DEBUGFS">
				<label>Atheros ath9k debugging</label>
				<help>Say Y, if you need access to ath9k's statistics for
interrupts, rate control, etc.

Also required for changing debug message flags at run time.</help>
			</entry>
			<entry name="ATH9K_STATION_STATISTICS">
				<label>Detailed station statistics</label>
				<help>This option enables detailed statistics for association stations.</help>
			</entry>
			<entry name="ATH9K_TX99">
				<label>Atheros ath9k TX99 testing support</label>
				<help>Say N. This should only be enabled on systems undergoing
certification testing and evaluation in a controlled environment.
Enabling this will only enable TX99 support, all other modes of
operation will be disabled.

TX99 support enables Specific Absorption Rate (SAR) testing.
SAR is the unit of measurement for the amount of radio frequency(RF)
absorbed by the body when using a wireless device. The RF exposure
limits used are expressed in the terms of SAR, which is a measure
of the electric and magnetic field strength and power density for
transmitters operating at frequencies from 300 kHz to 100 GHz.
Regulatory bodies around the world require that wireless device
be evaluated to meet the RF exposure limits set forth in the
governmental SAR regulations.</help>
			</entry>
			<entry name="ATH9K_DFS_CERTIFIED">
				<label>Atheros DFS support for certified platforms</label>
				<help>This option enables DFS support for initiating radiation on
ath9k. There is no way to dynamically detect if a card was DFS
certified and as such this is left as a build time option. This
option should only be enabled by system integrators that can
guarantee that all the platforms that their kernel will run on
have obtained appropriate regulatory body certification for a
respective Atheros card by using ath9k on the target shipping
platforms.

This is currently only a placeholder for future DFS support,
as DFS support requires more components that still need to be
developed. At this point enabling this option won't do anything
except increase code size.</help>
			</entry>
			<entry name="ATH9K_DYNACK">
				<label>Atheros ath9k ACK timeout estimation algorithm (EXPERIMENTAL)</label>
				<help>This option enables ath9k dynamic ACK timeout estimation algorithm
based on ACK frame RX timestamp, TX frame timestamp and frame
duration</help>
			</entry>
			<entry name="ATH9K_WOW">
				<label>Wake on Wireless LAN support (EXPERIMENTAL)</label>
				<help>This option enables Wake on Wireless LAN support for certain cards.
Currently, AR9462 is supported.</help>
			</entry>
			<entry name="ATH9K_RFKILL">
				<label>Atheros ath9k rfkill support&quot; if EXPERT</label>
				<help>Say Y to have ath9k poll the RF-Kill GPIO every couple of
seconds. Turn off to save power, but enable it if you have
a platform that can toggle the RF-Kill GPIO.</help>
			</entry>
			<entry name="ATH9K_CHANNEL_CONTEXT">
				<label>Channel Context support</label>
				<help>This option enables channel context support in ath9k, which is needed
for multi-channel concurrency. Enable this if P2P PowerSave support
is required.</help>
			</entry>
			<entry name="ATH9K_PCOEM">
				<label>Atheros ath9k support for PC OEM cards&quot; if EXPERT</label>
			</entry>
			<entry name="ATH9K_HTC">
				<label>Atheros HTC based wireless cards support</label>
				<help>Support for Atheros HTC based cards.
Chipsets supported: AR9271

For more information: http://wireless.kernel.org/en/users/Drivers/ath9k_htc

The built module will be ath9k_htc.</help>
			</entry>
			<entry name="ATH9K_HTC_DEBUGFS">
				<label>Atheros ath9k_htc debugging</label>
				<help>Say Y, if you need access to ath9k_htc's statistics.</help>
			</entry>
			<entry name="ATH9K_HWRNG">
				<label>Random number generator support</label>
				<help>This option incorporates the ADC register output as a source of
randomness into Linux entropy pool (/dev/urandom and /dev/random)

Say Y, feeds the entropy directly from the WiFi driver to the input
pool.
</help>
			</entry>
			<entry name="CARL9170">
				<label>Linux Community AR9170 802.11n USB support</label>
				<help>This is the mainline driver for the Atheros &quot;otus&quot; 802.11n USB devices.

It needs a special firmware (carl9170-1.fw), which can be downloaded
from our wiki here:
&lt;http://wireless.kernel.org/en/users/Drivers/carl9170&gt;

If you choose to build a module, it'll be called carl9170.</help>
			</entry>
			<entry name="CARL9170_LEDS">
				<label>SoftLED Support</label>
				<help>This option is necessary, if you want your device' LEDs to blink

Say Y, unless you need the LEDs for firmware debugging.</help>
			</entry>
			<entry name="CARL9170_DEBUGFS">
				<label>DebugFS Support</label>
				<help>Export several driver and device internals to user space.

Say N.</help>
			</entry>
			<entry name="CARL9170_WPC"/>
			<entry name="CARL9170_HWRNG">
				<label>Random number generator</label>
				<help>Provides a hardware random number generator to the kernel.

SECURITY WARNING: It's relatively easy to eavesdrop all
generated random numbers from the transport stream with
usbmon [software] or special usb sniffer hardware.

Say N, unless your setup[i.e.: embedded system] has no
other rng source and you can afford to take the risk.
</help>
			</entry>
			<entry name="ATH6KL">
				<label>Atheros mobile chipsets support</label>
				<help>This module adds core support for wireless adapters based on
Atheros AR6003 and AR6004 chipsets. You still need separate
bus drivers for USB and SDIO to be able to use real devices.

If you choose to build it as a module, it will be called
ath6kl_core. Please note that AR6002 and AR6001 are not
supported by this driver.</help>
			</entry>
			<entry name="ATH6KL_SDIO">
				<label>Atheros ath6kl SDIO support</label>
				<help>This module adds support for wireless adapters based on
Atheros AR6003 and AR6004 chipsets running over SDIO. If you
choose to build it as a module, it will be called ath6kl_sdio.
Please note that AR6002 and AR6001 are not supported by this
driver.</help>
			</entry>
			<entry name="ATH6KL_USB">
				<label>Atheros ath6kl USB support</label>
				<help>This module adds support for wireless adapters based on
Atheros AR6004 chipset and chipsets based on it running over
USB. If you choose to build it as a module, it will be
called ath6kl_usb.</help>
			</entry>
			<entry name="ATH6KL_DEBUG">
				<label>Atheros ath6kl debugging</label>
				<help>Enables ath6kl debug support, including debug messages
enabled with debug_mask module parameter and debugfs
interface.

If unsure, say Y to make it easier to debug problems.</help>
			</entry>
			<entry name="ATH6KL_TRACING">
				<label>Atheros ath6kl tracing support</label>
				<help>Select this to ath6kl use tracing infrastructure which, for
example, can be enabled with help of trace-cmd. All debug
messages and commands are delivered to using individually
enablable trace points.

If unsure, say Y to make it easier to debug problems.</help>
			</entry>
			<entry name="ATH6KL_REGDOMAIN">
				<label>Atheros ath6kl regdomain support</label>
				<help>Enabling this makes it possible to change the regdomain in
the firmware. This can be only enabled if regulatory requirements
are taken into account.

If unsure, say N.
</help>
			</entry>
			<entry name="AR5523">
				<label>Atheros AR5523 wireless driver support</label>
				<help>This module add support for AR5523 based USB dongles such as D-Link
DWL-G132, Netgear WPN111 and many more.
</help>
			</entry>
			<entry name="WIL6210">
				<label>Wilocity 60g WiFi card wil6210 support</label>
				<help>This module adds support for wireless adapter based on
wil6210 chip by Wilocity. It supports operation on the
60 GHz band, covered by the IEEE802.11ad standard.

http://wireless.kernel.org/en/users/Drivers/wil6210

If you choose to build it as a module, it will be called
wil6210</help>
			</entry>
			<entry name="WIL6210_ISR_COR">
				<label>Use Clear-On-Read mode for ISR registers for wil6210</label>
				<help>ISR registers on wil6210 chip may operate in either
COR (Clear-On-Read) or W1C (Write-1-to-Clear) mode.
For production code, use COR (say y); is default since
it saves extra target transaction;
For ISR debug, use W1C (say n); is allows to monitor ISR
registers with debugfs. If COR were used, ISR would
self-clear when accessed for debug purposes, it makes
such monitoring impossible.
Say y unless you debug interrupts</help>
			</entry>
			<entry name="WIL6210_TRACING">
				<label>wil6210 tracing support</label>
				<help>Say Y here to enable tracepoints for the wil6210 driver
using the kernel tracing infrastructure.  Select this
option if you are interested in debugging the driver.

If unsure, say Y to make it easier to debug problems.
</help>
			</entry>
			<entry name="ATH10K">
				<label>Atheros 802.11ac wireless cards support</label>
				<help>This module adds support for wireless adapters based on
Atheros IEEE 802.11ac family of chipsets.

If you choose to build a module, it'll be called ath10k.</help>
			</entry>
			<entry name="ATH10K_PCI">
				<label>Atheros ath10k PCI support</label>
				<help>This module adds support for PCIE bus</help>
			</entry>
			<entry name="ATH10K_AHB">
				<label>Atheros ath10k AHB support</label>
				<help>This module adds support for AHB bus</help>
			</entry>
			<entry name="ATH10K_DEBUG">
				<label>Atheros ath10k debugging</label>
				<help>Enables debug support

If unsure, say Y to make it easier to debug problems.</help>
			</entry>
			<entry name="ATH10K_DEBUGFS">
				<label>Atheros ath10k debugfs support</label>
				<help>Enabled debugfs support

If unsure, say Y to make it easier to debug problems.</help>
			</entry>
			<entry name="ATH10K_TRACING">
				<label>Atheros ath10k tracing support</label>
				<help>Select this to ath10k use tracing infrastructure.</help>
			</entry>
			<entry name="ATH10K_DFS_CERTIFIED">
				<label>Atheros DFS support for certified platforms</label>
				<help>This option enables DFS support for initiating radiation on
ath10k.
</help>
			</entry>
			<entry name="WCN36XX">
				<label>Qualcomm Atheros WCN3660/3680 support</label>
				<help>This module adds support for wireless adapters based on
Qualcomm Atheros WCN3660 and WCN3680 mobile chipsets.

If you choose to build a module, it'll be called wcn36xx.</help>
			</entry>
			<entry name="WCN36XX_DEBUGFS">
				<label>WCN36XX debugfs support</label>
				<help>Enabled debugfs support

If unsure, say Y to make it easier to debug problems.
</help>
			</entry>
			<entry name="WLAN_VENDOR_ATMEL">
				<label>Atmel devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="ATMEL">
				<label>Atmel at76c50x chipset  802.11b support</label>
				<help>A driver 802.11b wireless cards based on the Atmel fast-vnet
chips. This driver supports standard Linux wireless extensions.

Many  cards based on this chipset do not have flash memory
and need their firmware loaded at start-up. If yours is
one of these, you will need to provide a firmware image
to be loaded into the card by the driver. The Atmel
firmware package can be downloaded from
&lt;http://www.thekelleys.org.uk/atmel&gt;</help>
			</entry>
			<entry name="PCI_ATMEL">
				<label>Atmel at76c506 PCI cards</label>
				<help>Enable support for PCI and mini-PCI cards containing the
Atmel at76c506 chip.</help>
			</entry>
			<entry name="PCMCIA_ATMEL">
				<label>Atmel at76c502/at76c504 PCMCIA cards</label>
				<help>Enable support for PCMCIA cards containing the
Atmel at76c502 and at76c504 chips.</help>
			</entry>
			<entry name="AT76C50X_USB">
				<label>Atmel at76c503/at76c505/at76c505a USB cards</label>
				<help>Enable support for USB Wireless devices using Atmel at76c503,
at76c505 or at76c505a chips.</help>
			</entry>
			<entry name="WLAN_VENDOR_BROADCOM">
				<label>Broadcom devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="B43">
				<label>Broadcom 43xx wireless support (mac80211 stack)</label>
				<help>b43 is a driver for the Broadcom 43xx series wireless devices.

Check &quot;lspci&quot; for something like
&quot;Broadcom Corporation BCM43XX 802.11 Wireless LAN Controller&quot;
to determine whether you own such a device.

This driver supports the new BCM43xx IEEE 802.11G devices, but not
the old IEEE 802.11B devices. Old devices are supported by
the b43legacy driver.
Note that this has nothing to do with the standard that your AccessPoint
supports (A, B, G or a combination).
IEEE 802.11G devices can talk to IEEE 802.11B AccessPoints.

It is safe to include both b43 and b43legacy as the underlying glue
layer will automatically load the correct version for your device.

This driver uses V4 firmware, which must be installed separately using
b43-fwcutter.

This driver can be built as a module (recommended) that will be called &quot;b43&quot;.
If unsure, say M.</help>
			</entry>
			<entry name="B43_BCMA"/>
			<entry name="B43_SSB"/>
			<entry name="B43_BUSES_BCMA_AND_SSB">
				<label>BCMA and SSB</label>
			</entry>
			<entry name="B43_BUSES_BCMA">
				<label>BCMA only</label>
			</entry>
			<entry name="B43_BUSES_SSB">
				<label>SSB only</label>
			</entry>
			<entry name="B43_PCI_AUTOSELECT"/>
			<entry name="B43_PCICORE_AUTOSELECT"/>
			<entry name="B43_SDIO">
				<label>Broadcom 43xx SDIO device support</label>
				<help>Broadcom 43xx device support for Soft-MAC SDIO devices.

With this config option you can drive Soft-MAC b43 cards with a
Secure Digital I/O interface.
This includes the WLAN daughter card found on the Nintendo Wii
video game console.
Note that this does not support Broadcom 43xx Full-MAC devices.

It's safe to select Y here, even if you don't have a B43 SDIO device.

If unsure, say N.</help>
			</entry>
			<entry name="B43_BCMA_PIO"/>
			<entry name="B43_PIO"/>
			<entry name="B43_PHY_G">
				<label>Support for G-PHY (802.11g) devices</label>
				<help>This PHY type can be found in the following chipsets:
PCI: BCM4306, BCM4311, BCM4318
SoC: BCM4712, BCM5352E</help>
			</entry>
			<entry name="B43_PHY_N">
				<label>Support for N-PHY (the main 802.11n series) devices</label>
				<help>This PHY type can be found in the following chipsets:
PCI: BCM4321, BCM4322,
BCM43222, BCM43224, BCM43225,
BCM43131, BCM43217, BCM43227, BCM43228
SoC: BCM4716, BCM4717, BCM4718, BCM5356, BCM5357, BCM5358</help>
			</entry>
			<entry name="B43_PHY_LP">
				<label>Support for LP-PHY (low-power 802.11g) devices</label>
				<help>The LP-PHY is a low-power PHY built into some notebooks
and embedded devices. It supports 802.11a/b/g
(802.11a support is optional, and currently disabled).</help>
			</entry>
			<entry name="B43_PHY_HT">
				<label>Support for HT-PHY (high throughput 802.11n) devices</label>
				<help>This PHY type with 3x3:3 MIMO can be found in the BCM4331 PCI chipset.</help>
			</entry>
			<entry name="B43_PHY_LCN">
				<label>Support for LCN-PHY devices (BROKEN)</label>
				<help>Support for the LCN-PHY.

Say N, this is BROKEN and crashes driver.</help>
			</entry>
			<entry name="B43_PHY_AC">
				<label>Support for AC-PHY (802.11ac) devices (BROKEN)</label>
				<help>This PHY type can be found in the following chipsets:
PCI: BCM4352, BCM4360

Say N, this is BROKEN and crashes driver.</help>
			</entry>
			<entry name="B43_LEDS"/>
			<entry name="B43_HWRNG"/>
			<entry name="B43_DEBUG">
				<label>Broadcom 43xx debugging</label>
				<help>Broadcom 43xx debugging.

This adds additional runtime sanity checks and statistics to the driver.
These checks and statistics might be expensive and hurt the runtime
performance of your system.
This also adds the b43 debugfs interface.

Do not enable this, unless you are debugging the driver.

Say N, if you are a distributor or user building a release kernel
for production use.
Only say Y, if you are debugging a problem in the b43 driver sourcecode.
</help>
			</entry>
			<entry name="B43LEGACY">
				<label>Broadcom 43xx-legacy wireless support (mac80211 stack)</label>
				<help>b43legacy is a driver for 802.11b devices from Broadcom (BCM4301 and
BCM4303) and early model 802.11g chips (BCM4306 Ver. 2) used in the
Linksys WPC54G V1 PCMCIA devices.

Newer 802.11g and 802.11a devices need b43.

It is safe to include both b43 and b43legacy as the underlying glue
layer will automatically load the correct version for your device.

This driver uses V3 firmware, which must be installed separately using
b43-fwcutter.

This driver can be built as a module (recommended) that will be
called &quot;b43legacy&quot;. If unsure, say M.</help>
			</entry>
			<entry name="B43LEGACY_PCI_AUTOSELECT"/>
			<entry name="B43LEGACY_PCICORE_AUTOSELECT"/>
			<entry name="B43LEGACY_LEDS"/>
			<entry name="B43LEGACY_HWRNG"/>
			<entry name="B43LEGACY_DEBUG">
				<label>Broadcom 43xx-legacy debugging</label>
				<help>Say Y, because this information will help you get the driver running.
This option generates a minimum of log output.</help>
			</entry>
			<entry name="B43LEGACY_DMA"/>
			<entry name="B43LEGACY_PIO"/>
			<entry name="B43LEGACY_DMA_AND_PIO_MODE">
				<label>DMA + PIO</label>
				<help>Include both, Direct Memory Access (DMA) and Programmed I/O (PIO)
data transfer modes. The mode actually used is selectable through
the module parameter &quot;pio&quot;. With pio=0 as a module parameter, the
default DMA is used, otherwise PIO is used.

If unsure, choose this option.</help>
			</entry>
			<entry name="B43LEGACY_DMA_MODE">
				<label>DMA (Direct Memory Access) only</label>
				<help>Only include Direct Memory Access (DMA).
This reduces the size of the driver module, by omitting the PIO code.</help>
			</entry>
			<entry name="B43LEGACY_PIO_MODE">
				<label>PIO (Programmed I/O) only</label>
				<help>Only include Programmed I/O (PIO).
This reduces the size of the driver module, by omitting the DMA code.
Please note that PIO transfers are slow (compared to DMA).

Also note that not all devices of the b43legacy series support PIO.

You should use PIO only if DMA does not work for you.</help>
			</entry>
			<entry name="BRCMUTIL"/>
			<entry name="BRCMSMAC">
				<label>Broadcom IEEE802.11n PCIe SoftMAC WLAN driver</label>
				<help>This module adds support for PCIe wireless adapters based on Broadcom
IEEE802.11n SoftMAC chipsets. It also has WLAN led support, which will
be available if you select BCMA_DRIVER_GPIO. If you choose to build a
module, the driver will be called brcmsmac.ko.</help>
			</entry>
			<entry name="BRCMFMAC">
				<label>Broadcom IEEE802.11n embedded FullMAC WLAN driver</label>
				<help>This module adds support for embedded wireless adapters based on
Broadcom IEEE802.11n FullMAC chipsets. It has to work with at least
one of the bus interface support. If you choose to build a module,
it'll be called brcmfmac.ko.</help>
			</entry>
			<entry name="BRCMFMAC_PROTO_BCDC"/>
			<entry name="BRCMFMAC_PROTO_MSGBUF"/>
			<entry name="BRCMFMAC_SDIO">
				<label>SDIO bus interface support for FullMAC driver</label>
				<help>This option enables the SDIO bus interface support for Broadcom
IEEE802.11n embedded FullMAC WLAN driver. Say Y if you want to
use the driver for a SDIO wireless card.</help>
			</entry>
			<entry name="BRCMFMAC_USB">
				<label>USB bus interface support for FullMAC driver</label>
				<help>This option enables the USB bus interface support for Broadcom
IEEE802.11n embedded FullMAC WLAN driver. Say Y if you want to
use the driver for an USB wireless card.</help>
			</entry>
			<entry name="BRCMFMAC_PCIE">
				<label>PCIE bus interface support for FullMAC driver</label>
				<help>This option enables the PCIE bus interface support for Broadcom
IEEE802.11ac embedded FullMAC WLAN driver. Say Y if you want to
use the driver for an PCIE wireless card.</help>
			</entry>
			<entry name="BRCM_TRACING">
				<label>Broadcom device tracing</label>
				<help>If you say Y here, the Broadcom wireless drivers will register
with ftrace to dump event information into the trace ringbuffer.
Tracing can be enabled at runtime to aid in debugging wireless
issues. This option adds a small amount of overhead when tracing
is disabled. If unsure, say Y to allow developers to better help
you when wireless problems occur.</help>
			</entry>
			<entry name="BRCMDBG">
				<label>Broadcom driver debug functions</label>
				<help>Selecting this enables additional code for debug purposes.
</help>
			</entry>
			<entry name="WLAN_VENDOR_CISCO">
				<label>Cisco devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="AIRO">
				<label>Cisco/Aironet 34X/35X/4500/4800 ISA and PCI cards</label>
				<help>This is the standard Linux driver to support Cisco/Aironet ISA and
PCI 802.11 wireless cards.
It supports the new 802.11b cards from Cisco (Cisco 34X, Cisco 35X
- with or without encryption) as well as card before the Cisco
acquisition (Aironet 4500, Aironet 4800, Aironet 4800B).

This driver support both the standard Linux Wireless Extensions
and Cisco proprietary API, so both the Linux Wireless Tools and the
Cisco Linux utilities can be used to configure the card.

The driver can be compiled as a module and will be named &quot;airo&quot;.</help>
			</entry>
			<entry name="AIRO_CS">
				<label>Cisco/Aironet 34X/35X/4500/4800 PCMCIA cards</label>
				<help>This is the standard Linux driver to support Cisco/Aironet PCMCIA
802.11 wireless cards.  This driver is the same as the Aironet
driver part of the Linux Pcmcia package.
It supports the new 802.11b cards from Cisco (Cisco 34X, Cisco 35X
- with or without encryption) as well as card before the Cisco
acquisition (Aironet 4500, Aironet 4800, Aironet 4800B). It also
supports OEM of Cisco such as the DELL TrueMobile 4800 and Xircom
802.11b cards.

This driver support both the standard Linux Wireless Extensions
and Cisco proprietary API, so both the Linux Wireless Tools and the
Cisco Linux utilities can be used to configure the card.</help>
			</entry>
			<entry name="WLAN_VENDOR_INTEL">
				<label>Intel devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="IPW2100">
				<label>Intel PRO/Wireless 2100 Network Connection</label>
				<help>A driver for the Intel PRO/Wireless 2100 Network
Connection 802.11b wireless network adapter.

See &lt;file:Documentation/networking/README.ipw2100&gt; for information on
the capabilities currently enabled in this driver and for tips
for debugging issues and problems.

In order to use this driver, you will need a firmware image for it.
You can obtain the firmware from
&lt;http://ipw2100.sf.net/&gt;.  Once you have the firmware image, you
will need to place it in /lib/firmware.

You will also very likely need the Wireless Tools in order to
configure your card:

&lt;http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html&gt;.

It is recommended that you compile this driver as a module (M)
rather than built-in (Y). This driver requires firmware at device
initialization time, and when built-in this typically happens
before the filesystem is accessible (hence firmware will be
unavailable and initialization will fail). If you do choose to build
this driver into your kernel image, you can avoid this problem by
including the firmware and a firmware loader in an initramfs.</help>
			</entry>
			<entry name="IPW2100_MONITOR">
				<label>Enable promiscuous mode</label>
				<help>Enables promiscuous/monitor mode support for the ipw2100 driver.
With this feature compiled into the driver, you can switch to
promiscuous mode via the Wireless Tool's Monitor mode.  While in this
mode, no packets can be sent.</help>
			</entry>
			<entry name="IPW2100_DEBUG">
				<label>Enable full debugging output in IPW2100 module.</label>
				<help>This option will enable debug tracing output for the IPW2100.

This will result in the kernel module being ~60k larger.  You can
control which debug output is sent to the kernel log by setting the
value in

/sys/bus/pci/drivers/ipw2100/debug_level

This entry will only exist if this option is enabled.

If you are not trying to debug or develop the IPW2100 driver, you
most likely want to say N here.</help>
			</entry>
			<entry name="IPW2200">
				<label>Intel PRO/Wireless 2200BG and 2915ABG Network Connection</label>
				<help>A driver for the Intel PRO/Wireless 2200BG and 2915ABG Network
Connection adapters.

See &lt;file:Documentation/networking/README.ipw2200&gt; for
information on the capabilities currently enabled in this
driver and for tips for debugging issues and problems.

In order to use this driver, you will need a firmware image for it.
You can obtain the firmware from
&lt;http://ipw2200.sf.net/&gt;.  See the above referenced README.ipw2200
for information on where to install the firmware images.

You will also very likely need the Wireless Tools in order to
configure your card:

&lt;http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html&gt;.

It is recommended that you compile this driver as a module (M)
rather than built-in (Y). This driver requires firmware at device
initialization time, and when built-in this typically happens
before the filesystem is accessible (hence firmware will be
unavailable and initialization will fail). If you do choose to build
this driver into your kernel image, you can avoid this problem by
including the firmware and a firmware loader in an initramfs.</help>
			</entry>
			<entry name="IPW2200_MONITOR">
				<label>Enable promiscuous mode</label>
				<help>Enables promiscuous/monitor mode support for the ipw2200 driver.
With this feature compiled into the driver, you can switch to
promiscuous mode via the Wireless Tool's Monitor mode.  While in this
mode, no packets can be sent.</help>
			</entry>
			<entry name="IPW2200_RADIOTAP">
				<label>Enable radiotap format 802.11 raw packet support</label>
			</entry>
			<entry name="IPW2200_PROMISCUOUS">
				<label>Enable creation of a RF radiotap promiscuous interface</label>
				<help>Enables the creation of a second interface prefixed 'rtap'.
This second interface will provide every received in radiotap
format.

This is useful for performing wireless network analysis while
maintaining an active association.

Example usage:

% modprobe ipw2200 rtap_iface=1
% ifconfig rtap0 up
% tethereal -i rtap0

If you do not specify 'rtap_iface=1' as a module parameter then
the rtap interface will not be created and you will need to turn
it on via sysfs:

% echo 1 &gt; /sys/bus/pci/drivers/ipw2200/*/rtap_iface</help>
			</entry>
			<entry name="IPW2200_QOS">
				<label>Enable QoS support</label>
			</entry>
			<entry name="IPW2200_DEBUG">
				<label>Enable full debugging output in IPW2200 module.</label>
				<help>This option will enable low level debug tracing output for IPW2200.

Note, normal debug code is already compiled in. This low level
debug option enables debug on hot paths (e.g Tx, Rx, ISR) and
will result in the kernel module being ~70 larger.  Most users
will typically not need this high verbosity debug information.

If you are not sure, say N here.</help>
			</entry>
			<entry name="LIBIPW">
				<help>This option enables the hardware independent IEEE 802.11
networking stack.  This component is deprecated in favor of the
mac80211 component.</help>
			</entry>
			<entry name="LIBIPW_DEBUG">
				<label>Full debugging output for the LIBIPW component</label>
				<help>This option will enable debug tracing output for the
libipw component.

This will result in the kernel module being ~70k larger.  You
can control which debug output is sent to the kernel log by
setting the value in

/proc/net/ieee80211/debug_level

For example:

% echo 0x00000FFO &gt; /proc/net/ieee80211/debug_level

For a list of values you can assign to debug_level, you
can look at the bit mask values in ieee80211.h

If you are not trying to debug or develop the libipw
component, you most likely want to say N here.
</help>
			</entry>
			<entry name="IWLEGACY"/>
			<entry name="IWL4965">
				<label>Intel Wireless WiFi 4965AGN (iwl4965)</label>
				<help>This option enables support for

Select to build the driver supporting the:

Intel Wireless WiFi Link 4965AGN

This driver uses the kernel's mac80211 subsystem.

In order to use this driver, you will need a microcode (uCode)
image for it. You can obtain the microcode from:

&lt;http://intellinuxwireless.org/&gt;.

The microcode is typically installed in /lib/firmware. You can
look in the hotplug script /etc/hotplug/firmware.agent to
determine which directory FIRMWARE_DIR is set to when the script
runs.

If you want to compile the driver as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.  The
module will be called iwl4965.</help>
			</entry>
			<entry name="IWL3945">
				<label>Intel PRO/Wireless 3945ABG/BG Network Connection (iwl3945)</label>
				<help>Select to build the driver supporting the:

Intel PRO/Wireless 3945ABG/BG Network Connection

This driver uses the kernel's mac80211 subsystem.

In order to use this driver, you will need a microcode (uCode)
image for it. You can obtain the microcode from:

&lt;http://intellinuxwireless.org/&gt;.

The microcode is typically installed in /lib/firmware. You can
look in the hotplug script /etc/hotplug/firmware.agent to
determine which directory FIRMWARE_DIR is set to when the script
runs.

If you want to compile the driver as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.  The
module will be called iwl3945.</help>
			</entry>
			<container name="iwl3945_iwl4965_Debugging_Options">
				<label>iwl3945 / iwl4965 Debugging Options</label>
				<entry name="IWLEGACY_DEBUG">
					<label>Enable full debugging output in iwlegacy (iwl 3945/4965) drivers</label>
					<help>This option will enable debug tracing output for the iwlegacy
drivers.

This will result in the kernel module being ~100k larger.  You can
control which debug output is sent to the kernel log by setting the
value in

/sys/class/net/wlan0/device/debug_level

This entry will only exist if this option is enabled.

To set a value, simply echo an 8-byte hex value to the same file:

% echo 0x43fff &gt; /sys/class/net/wlan0/device/debug_level

You can find the list of debug mask values in:
drivers/net/wireless/iwlegacy/common.h

If this is your first time using this driver, you should say Y here
as the debug information can assist others in helping you resolve
any problems you may encounter.</help>
				</entry>
				<entry name="IWLEGACY_DEBUGFS">
					<label>iwlegacy (iwl 3945/4965) debugfs support</label>
					<help>Enable creation of debugfs files for the iwlegacy drivers. This
is a low-impact option that allows getting insight into the
driver's state at runtime.</help>
				</entry>
			</container>
			<entry name="IWLWIFI">
				<label>Intel Wireless WiFi Next Gen AGN - Wireless-N/Advanced-N/Ultimate-N (iwlwifi) </label>
				<help>Select to build the driver supporting the:

Intel Wireless WiFi Link Next-Gen AGN

This option enables support for use with the following hardware:
Intel Wireless WiFi Link 6250AGN Adapter
Intel 6000 Series Wi-Fi Adapters (6200AGN and 6300AGN)
Intel WiFi Link 1000BGN
Intel Wireless WiFi 5150AGN
Intel Wireless WiFi 5100AGN, 5300AGN, and 5350AGN
Intel 6005 Series Wi-Fi Adapters
Intel 6030 Series Wi-Fi Adapters
Intel Wireless WiFi Link 6150BGN 2 Adapter
Intel 100 Series Wi-Fi Adapters (100BGN and 130BGN)
Intel 2000 Series Wi-Fi Adapters
Intel 7260 Wi-Fi Adapter
Intel 3160 Wi-Fi Adapter
Intel 7265 Wi-Fi Adapter
Intel 8260 Wi-Fi Adapter
Intel 3165 Wi-Fi Adapter


This driver uses the kernel's mac80211 subsystem.

In order to use this driver, you will need a firmware
image for it. You can obtain the microcode from:

&lt;http://wireless.kernel.org/en/users/Drivers/iwlwifi&gt;.

The firmware is typically installed in /lib/firmware. You can
look in the hotplug script /etc/hotplug/firmware.agent to
determine which directory FIRMWARE_DIR is set to when the script
runs.

If you want to compile the driver as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.  The
module will be called iwlwifi.</help>
			</entry>
			<entry name="IWLWIFI_LEDS"/>
			<entry name="IWLDVM">
				<label>Intel Wireless WiFi DVM Firmware support</label>
				<help>This is the driver that supports the DVM firmware. The list
of the devices that use this firmware is available here:
https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware</help>
			</entry>
			<entry name="IWLMVM">
				<label>Intel Wireless WiFi MVM Firmware support</label>
				<help>This is the driver that supports the MVM firmware. The list
of the devices that use this firmware is available here:
https://wireless.wiki.kernel.org/en/users/drivers/iwlwifi#firmware</help>
			</entry>
			<entry name="IWLWIFI_OPMODE_MODULAR"/>
			<entry name="IWLWIFI_BCAST_FILTERING">
				<label>Enable broadcast filtering</label>
				<help>Say Y here to enable default bcast filtering configuration.

Enabling broadcast filtering will drop any incoming wireless
broadcast frames, except some very specific predefined
patterns (e.g. incoming arp requests).

If unsure, don't enable this option, as some programs might
expect incoming broadcasts for their normal operations.</help>
			</entry>
			<entry name="IWLWIFI_PCIE_RTPM">
				<label>Enable runtime power management mode for PCIe devices</label>
				<help>Say Y here to enable runtime power management for PCIe
devices.  If enabled, the device will go into low power mode
when idle for a short period of time, allowing for improved
power saving during runtime.

If unsure, say N.</help>
			</entry>
			<container name="Debugging_Options">
				<label>Debugging Options</label>
				<entry name="IWLWIFI_DEBUG">
					<label>Enable full debugging output in the iwlwifi driver</label>
					<help>This option will enable debug tracing output for the iwlwifi drivers

This will result in the kernel module being ~100k larger.  You can
control which debug output is sent to the kernel log by setting the
value in

/sys/module/iwlwifi/parameters/debug

This entry will only exist if this option is enabled.

To set a value, simply echo an 8-byte hex value to the same file:

% echo 0x43fff &gt; /sys/module/iwlwifi/parameters/debug

You can find the list of debug mask values in:
drivers/net/wireless/iwlwifi/iwl-debug.h

If this is your first time using this driver, you should say Y here
as the debug information can assist others in helping you resolve
any problems you may encounter.</help>
				</entry>
				<entry name="IWLWIFI_DEBUGFS">
					<label>iwlwifi debugfs support</label>
					<help>Enable creation of debugfs files for the iwlwifi drivers. This
is a low-impact option that allows getting insight into the
driver's state at runtime.</help>
				</entry>
				<entry name="IWLWIFI_DEVICE_TRACING">
					<label>iwlwifi device access tracing</label>
					<help>Say Y here to trace all commands, including TX frames and IO
accesses, sent to the device. If you say yes, iwlwifi will
register with the ftrace framework for event tracing and dump
all this information to the ringbuffer, you may need to
increase the ringbuffer size. See the ftrace documentation
for more information.

When tracing is not enabled, this option still has some
(though rather small) overhead.

If unsure, say Y so we can help you better when problems
occur.</help>
				</entry>
			</container>
			<entry name="WLAN_VENDOR_INTERSIL">
				<label>Intersil devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="HOSTAP">
				<label>IEEE 802.11 for Host AP (Prism2/2.5/3 and WEP/TKIP/CCMP)</label>
				<help>Shared driver code for IEEE 802.11b wireless cards based on
Intersil Prism2/2.5/3 chipset. This driver supports so called
Host AP mode that allows the card to act as an IEEE 802.11
access point.

See &lt;http://hostap.epitest.fi/&gt; for more information about the
Host AP driver configuration and tools. This site includes
information and tools (hostapd and wpa_supplicant) for WPA/WPA2
support.

This option includes the base Host AP driver code that is shared by
different hardware models. You will also need to enable support for
PLX/PCI/CS version of the driver to actually use the driver.

The driver can be compiled as a module and it will be called
hostap.</help>
			</entry>
			<entry name="HOSTAP_FIRMWARE">
				<label>Support downloading firmware images with Host AP driver</label>
				<help>Configure Host AP driver to include support for firmware image
download. This option by itself only enables downloading to the
volatile memory, i.e. the card RAM. This option is required to
support cards that don't have firmware in flash, such as D-Link
DWL-520 rev E and D-Link DWL-650 rev P.

Firmware image downloading needs a user space tool, prism2_srec.
It is available from http://hostap.epitest.fi/.</help>
			</entry>
			<entry name="HOSTAP_FIRMWARE_NVRAM">
				<label>Support for non-volatile firmware download</label>
				<help>Allow Host AP driver to write firmware images to the non-volatile
card memory, i.e. flash memory that survives power cycling.
Enable this option if you want to be able to change card firmware
permanently.

Firmware image downloading needs a user space tool, prism2_srec.
It is available from http://hostap.epitest.fi/.</help>
			</entry>
			<entry name="HOSTAP_PLX">
				<label>Host AP driver for Prism2/2.5/3 in PLX9052 PCI adaptors</label>
				<help>Host AP driver's version for Prism2/2.5/3 PC Cards in PLX9052 based
PCI adaptors.

&quot;Host AP support for Prism2/2.5/3 IEEE 802.11b&quot; is required for this
driver and its help text includes more information about the Host AP
driver.

The driver can be compiled as a module and will be named
hostap_plx.</help>
			</entry>
			<entry name="HOSTAP_PCI">
				<label>Host AP driver for Prism2.5 PCI adaptors</label>
				<help>Host AP driver's version for Prism2.5 PCI adaptors.

&quot;Host AP support for Prism2/2.5/3 IEEE 802.11b&quot; is required for this
driver and its help text includes more information about the Host AP
driver.

The driver can be compiled as a module and will be named
hostap_pci.</help>
			</entry>
			<entry name="HOSTAP_CS">
				<label>Host AP driver for Prism2/2.5/3 PC Cards</label>
				<help>Host AP driver's version for Prism2/2.5/3 PC Cards.

&quot;Host AP support for Prism2/2.5/3 IEEE 802.11b&quot; is required for this
driver and its help text includes more information about the Host AP
driver.

The driver can be compiled as a module and will be named
hostap_cs.
</help>
			</entry>
			<entry name="HERMES">
				<label>Hermes chipset 802.11b support (Orinoco/Prism2/Symbol)</label>
				<help>A driver for 802.11b wireless cards based on the &quot;Hermes&quot; or
Intersil HFA384x (Prism 2) MAC controller.  This includes the vast
majority of the PCMCIA 802.11b cards (which are nearly all rebadges)
- except for the Cisco/Aironet cards.  Cards supported include the
Apple Airport (not a PCMCIA card), WavelanIEEE/Orinoco,
Cabletron/EnteraSys Roamabout, ELSA AirLancer, MELCO Buffalo, Avaya,
IBM High Rate Wireless, Farralon Syyline, Samsung MagicLAN, Netgear
MA401, LinkSys WPC-11, D-Link DWL-650, 3Com AirConnect, Intel
IPW2011, and Symbol Spectrum24 High Rate amongst others.

This option includes the guts of the driver, but in order to
actually use a card you will also need to enable support for PCMCIA
Hermes cards, PLX9052 based PCI adaptors or the Apple Airport below.

You will also very likely also need the Wireless Tools in order to
configure your card and that /etc/pcmcia/wireless.opts works :
&lt;http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html&gt;</help>
			</entry>
			<entry name="HERMES_PRISM">
				<label>Support Prism 2/2.5 chipset</label>
				<help>
Say Y to enable support for Prism 2 and 2.5 chipsets.  These
chipsets are better handled by the hostap driver.  This driver
would not support WPA or firmware download for Prism chipset.

If you are not sure, say N.

config HERMES_CACHE_FW_ON_INIT
bool &quot;Cache Hermes firmware on driver initialisation&quot;
depends on HERMES
default y
---help---
Say Y to cache any firmware required by the Hermes drivers
on startup.  The firmware will remain cached until the
driver is unloaded.  The cache uses 64K of RAM.

Otherwise load the firmware from userspace as required.  In
this case the driver should be unloaded and restarted
whenever the firmware is changed.

If you are not sure, say Y.

config APPLE_AIRPORT
tristate &quot;Apple Airport support (built-in)&quot;
depends on PPC_PMAC &amp;&amp; HERMES
help
Say Y here to support the Airport 802.11b wireless Ethernet hardware
built into the Macintosh iBook and other recent PowerPC-based
Macintosh machines. This is essentially a Lucent Orinoco card with
a non-standard interface.

This driver does not support the Airport Extreme (802.11b/g). Use
the BCM43xx driver for Airport Extreme cards.

config PLX_HERMES
tristate &quot;Hermes in PLX9052 based PCI adaptor support (Netgear MA301 etc.)&quot;
depends on PCI &amp;&amp; HERMES
help
Enable support for PCMCIA cards supported by the &quot;Hermes&quot; (aka
orinoco) driver when used in PLX9052 based PCI adaptors.  These
adaptors are not a full PCMCIA controller but act as a more limited
PCI &lt;-&gt; PCMCIA bridge.  Several vendors sell such adaptors so that
802.11b PCMCIA cards can be used in desktop machines.  The Netgear
MA301 is such an adaptor.

config TMD_HERMES
tristate &quot;Hermes in TMD7160 based PCI adaptor support&quot;
depends on PCI &amp;&amp; HERMES
help
Enable support for PCMCIA cards supported by the &quot;Hermes&quot; (aka
orinoco) driver when used in TMD7160 based PCI adaptors.  These
adaptors are not a full PCMCIA controller but act as a more limited
PCI &lt;-&gt; PCMCIA bridge.  Several vendors sell such adaptors so that
802.11b PCMCIA cards can be used in desktop machines.

config NORTEL_HERMES
tristate &quot;Nortel emobility PCI adaptor support&quot;
depends on PCI &amp;&amp; HERMES
help
Enable support for PCMCIA cards supported by the &quot;Hermes&quot; (aka
orinoco) driver when used in Nortel emobility PCI adaptors.  These
adaptors are not full PCMCIA controllers, but act as a more limited
PCI &lt;-&gt; PCMCIA bridge.

config PCI_HERMES
tristate &quot;Prism 2.5 PCI 802.11b adaptor support&quot;
depends on PCI &amp;&amp; HERMES &amp;&amp; HERMES_PRISM
help
Enable support for PCI and mini-PCI 802.11b wireless NICs based on
the Prism 2.5 chipset.  These are true PCI cards, not the 802.11b
PCMCIA cards bundled with PCI&lt;-&gt;PCMCIA adaptors which are also
common.  Some of the built-in wireless adaptors in laptops are of
this variety.

config PCMCIA_HERMES
tristate &quot;Hermes PCMCIA card support&quot;
depends on PCMCIA &amp;&amp; HERMES &amp;&amp; HAS_IOPORT_MAP
---help---
A driver for &quot;Hermes&quot; chipset based PCMCIA wireless adaptors, such
as the Lucent WavelanIEEE/Orinoco cards and their OEM (Cabletron/
EnteraSys RoamAbout 802.11, ELSA Airlancer, Melco Buffalo and
others).  It should also be usable on various Prism II based cards
such as the Linksys, D-Link and Farallon Skyline.  It should also
work on Symbol cards such as the 3Com AirConnect and Ericsson WLAN.

You will very likely need the Wireless Tools in order to
configure your card and that /etc/pcmcia/wireless.opts works:
&lt;http://www.hpl.hp.com/personal/Jean_Tourrilhes/Linux/Tools.html&gt;.

config PCMCIA_SPECTRUM
tristate &quot;Symbol Spectrum24 Trilogy PCMCIA card support&quot;
depends on PCMCIA &amp;&amp; HERMES &amp;&amp; HAS_IOPORT_MAP
---help---

This is a driver for 802.11b cards using RAM-loadable Symbol
firmware, such as Symbol Wireless Networker LA4100, CompactFlash
cards by Socket Communications and Intel PRO/Wireless 2011B.

This driver requires firmware download on startup.  Utilities
for downloading Symbol firmware are available at
&lt;http://sourceforge.net/projects/orinoco/&gt;

config ORINOCO_USB
tristate &quot;Agere Orinoco USB support&quot;
depends on USB &amp;&amp; HERMES
select FW_LOADER
---help---
This driver is for USB versions of the Agere Orinoco card.
</help>
			</entry>
			<entry name="P54_COMMON">
				<label>Softmac Prism54 support</label>
				<help>This is common code for isl38xx/stlc45xx based modules.
This module does nothing by itself - the USB/PCI/SPI front-ends
also need to be enabled in order to support any devices.

These devices require softmac firmware which can be found at
&lt;http://wireless.kernel.org/en/users/Drivers/p54&gt;

If you choose to build a module, it'll be called p54common.</help>
			</entry>
			<entry name="P54_USB">
				<label>Prism54 USB support</label>
				<help>This driver is for USB isl38xx based wireless cards.

These devices require softmac firmware which can be found at
&lt;http://wireless.kernel.org/en/users/Drivers/p54&gt;

If you choose to build a module, it'll be called p54usb.</help>
			</entry>
			<entry name="P54_PCI">
				<label>Prism54 PCI support</label>
				<help>This driver is for PCI isl38xx based wireless cards.
This driver supports most devices that are supported by the
fullmac prism54 driver plus many devices which are not
supported by the fullmac driver/firmware.

This driver requires softmac firmware which can be found at
&lt;http://wireless.kernel.org/en/users/Drivers/p54&gt;

If you choose to build a module, it'll be called p54pci.</help>
			</entry>
			<entry name="P54_SPI">
				<label>Prism54 SPI (stlc45xx) support</label>
				<help>This driver is for stlc4550 or stlc4560 based wireless chips
such as Nokia's N800/N810 Portable Internet Tablet.

If you choose to build a module, it'll be called p54spi.</help>
			</entry>
			<entry name="P54_SPI_DEFAULT_EEPROM">
				<label>Include fallback EEPROM blob</label>
				<help>Unlike the PCI or USB devices, the SPI variants don't have
a dedicated EEPROM chip to store all device specific values
for calibration, country and interface settings.

The driver will try to load the image &quot;3826.eeprom&quot;, if the
file is put at the right place. (usually /lib/firmware.)

Only if this request fails, this option will provide a
backup set of generic values to get the device working.

Enabling this option adds about 4k to p54spi.</help>
			</entry>
			<entry name="P54_LEDS"/>
			<entry name="PRISM54">
				<label>'Intersil Prism GT/Duette/Indigo PCI/Cardbus (DEPRECATED)'</label>
				<help>This enables support for FullMAC PCI/Cardbus prism54 devices. This
driver is now deprecated in favor for the SoftMAC driver, p54pci.
p54pci supports FullMAC PCI/Cardbus devices as well.

For more information refer to the p54 wiki:

http://wireless.kernel.org/en/users/Drivers/p54

Note: You need a motherboard with DMA support to use any of these cards

When built as module you get the module prism54</help>
			</entry>
			<entry name="WLAN_VENDOR_MARVELL">
				<label>Marvell devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="LIBERTAS">
				<label>Marvell 8xxx Libertas WLAN driver support</label>
				<help>A library for Marvell Libertas 8xxx devices.</help>
			</entry>
			<entry name="LIBERTAS_USB">
				<label>Marvell Libertas 8388 USB 802.11b/g cards</label>
				<help>A driver for Marvell Libertas 8388 USB devices.</help>
			</entry>
			<entry name="LIBERTAS_CS">
				<label>Marvell Libertas 8385 CompactFlash 802.11b/g cards</label>
				<help>A driver for Marvell Libertas 8385 CompactFlash devices.</help>
			</entry>
			<entry name="LIBERTAS_SDIO">
				<label>Marvell Libertas 8385/8686/8688 SDIO 802.11b/g cards</label>
				<help>A driver for Marvell Libertas 8385/8686/8688 SDIO devices.</help>
			</entry>
			<entry name="LIBERTAS_SPI">
				<label>Marvell Libertas 8686 SPI 802.11b/g cards</label>
				<help>A driver for Marvell Libertas 8686 SPI devices.</help>
			</entry>
			<entry name="LIBERTAS_DEBUG">
				<label>Enable full debugging output in the Libertas module.</label>
				<help>Debugging support.</help>
			</entry>
			<entry name="LIBERTAS_MESH">
				<label>Enable mesh support</label>
				<help>This enables Libertas' MESH support, used by e.g. the OLPC people.
</help>
			</entry>
			<entry name="LIBERTAS_THINFIRM">
				<label>Marvell 8xxx Libertas WLAN driver support with thin firmware</label>
				<help>A library for Marvell Libertas 8xxx devices using thinfirm.</help>
			</entry>
			<entry name="LIBERTAS_THINFIRM_DEBUG">
				<label>Enable full debugging output in the Libertas thin firmware module.</label>
				<help>Debugging support.</help>
			</entry>
			<entry name="LIBERTAS_THINFIRM_USB">
				<label>Marvell Libertas 8388 USB 802.11b/g cards with thin firmware</label>
				<help>A driver for Marvell Libertas 8388 USB devices using thinfirm.
</help>
			</entry>
			<entry name="MWIFIEX">
				<label>Marvell WiFi-Ex Driver</label>
				<help>This adds support for wireless adapters based on Marvell
802.11n/ac chipsets.

If you choose to build it as a module, it will be called
mwifiex.</help>
			</entry>
			<entry name="MWIFIEX_SDIO">
				<label>Marvell WiFi-Ex Driver for SD8786/SD8787/SD8797/SD8887/SD8897/SD8997</label>
				<help>This adds support for wireless adapters based on Marvell
8786/8787/8797/8887/8897/8997 chipsets with SDIO interface.

If you choose to build it as a module, it will be called
mwifiex_sdio.</help>
			</entry>
			<entry name="MWIFIEX_PCIE">
				<label>Marvell WiFi-Ex Driver for PCIE 8766/8897/8997</label>
				<help>This adds support for wireless adapters based on Marvell
8766/8897/8997 chipsets with PCIe interface.

If you choose to build it as a module, it will be called
mwifiex_pcie.</help>
			</entry>
			<entry name="MWIFIEX_USB">
				<label>Marvell WiFi-Ex Driver for USB8766/8797/8997</label>
				<help>This adds support for wireless adapters based on Marvell
8797/8997 chipset with USB interface.

If you choose to build it as a module, it will be called
mwifiex_usb.
</help>
			</entry>
			<entry name="MWL8K">
				<label>Marvell 88W8xxx PCI/PCIe Wireless support</label>
				<help>This driver supports Marvell TOPDOG 802.11 wireless cards.

To compile this driver as a module, choose M here: the module
will be called mwl8k.  If unsure, say N.</help>
			</entry>
			<entry name="WLAN_VENDOR_MEDIATEK">
				<label>MediaTek devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="MT7601U">
				<label>MediaTek MT7601U (USB) support</label>
				<help>This adds support for MT7601U-based wireless USB dongles.
</help>
			</entry>
			<entry name="WLAN_VENDOR_RALINK">
				<label>Ralink devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="RT2X00">
				<label>Ralink driver support</label>
				<help>This will enable the support for the Ralink drivers,
developed in the rt2x00 project &lt;http://rt2x00.serialmonkey.com&gt;.

These drivers make use of the mac80211 stack.

When building one of the individual drivers, the rt2x00 library
will also be created. That library (when the driver is built as
a module) will be called rt2x00lib.

Additionally PCI and USB libraries will also be build depending
on the types of drivers being selected, these libraries will be
called rt2x00pci and rt2x00usb.</help>
			</entry>
			<entry name="RT2400PCI">
				<label>Ralink rt2400 (PCI/PCMCIA) support</label>
				<help>This adds support for rt2400 wireless chipset family.
Supported chips: RT2460.

When compiled as a module, this driver will be called rt2400pci.</help>
			</entry>
			<entry name="RT2500PCI">
				<label>Ralink rt2500 (PCI/PCMCIA) support</label>
				<help>This adds support for rt2500 wireless chipset family.
Supported chips: RT2560.

When compiled as a module, this driver will be called rt2500pci.</help>
			</entry>
			<entry name="RT61PCI">
				<label>Ralink rt2501/rt61 (PCI/PCMCIA) support</label>
				<help>This adds support for rt2501 wireless chipset family.
Supported chips: RT2561, RT2561S &amp; RT2661.

When compiled as a module, this driver will be called rt61pci.</help>
			</entry>
			<entry name="RT2800PCI">
				<label>Ralink rt27xx/rt28xx/rt30xx (PCI/PCIe/PCMCIA) support</label>
				<help>This adds support for rt27xx/rt28xx/rt30xx wireless chipset family.
Supported chips: RT2760, RT2790, RT2860, RT2880, RT2890, RT3052,
RT3090, RT3091 &amp; RT3092

When compiled as a module, this driver will be called &quot;rt2800pci.ko&quot;.</help>
			</entry>
			<entry name="RT2800PCI_RT33XX">
				<label>rt2800pci - Include support for rt33xx devices</label>
				<help>This adds support for rt33xx wireless chipset family to the
rt2800pci driver.
Supported chips: RT3390</help>
			</entry>
			<entry name="RT2800PCI_RT35XX">
				<label>rt2800pci - Include support for rt35xx devices (EXPERIMENTAL)</label>
				<help>This adds support for rt35xx wireless chipset family to the
rt2800pci driver.
Supported chips: RT3060, RT3062, RT3562, RT3592</help>
			</entry>
			<entry name="RT2800PCI_RT53XX">
				<label>rt2800pci - Include support for rt53xx devices (EXPERIMENTAL)</label>
				<help>This adds support for rt53xx wireless chipset family to the
rt2800pci driver.
Supported chips: RT5390</help>
			</entry>
			<entry name="RT2800PCI_RT3290">
				<label>rt2800pci - Include support for rt3290 devices (EXPERIMENTAL)</label>
				<help>This adds support for rt3290 wireless chipset family to the
rt2800pci driver.
Supported chips: RT3290</help>
			</entry>
			<entry name="RT2500USB">
				<label>Ralink rt2500 (USB) support</label>
				<help>This adds support for rt2500 wireless chipset family.
Supported chips: RT2571 &amp; RT2572.

When compiled as a module, this driver will be called rt2500usb.</help>
			</entry>
			<entry name="RT73USB">
				<label>Ralink rt2501/rt73 (USB) support</label>
				<help>This adds support for rt2501 wireless chipset family.
Supported chips: RT2571W, RT2573 &amp; RT2671.

When compiled as a module, this driver will be called rt73usb.</help>
			</entry>
			<entry name="RT2800USB">
				<label>Ralink rt27xx/rt28xx/rt30xx (USB) support</label>
				<help>This adds support for rt27xx/rt28xx/rt30xx wireless chipset family.
Supported chips: RT2770, RT2870 &amp; RT3070, RT3071 &amp; RT3072

When compiled as a module, this driver will be called &quot;rt2800usb.ko&quot;.</help>
			</entry>
			<entry name="RT2800USB_RT33XX">
				<label>rt2800usb - Include support for rt33xx devices</label>
				<help>This adds support for rt33xx wireless chipset family to the
rt2800usb driver.
Supported chips: RT3370</help>
			</entry>
			<entry name="RT2800USB_RT35XX">
				<label>rt2800usb - Include support for rt35xx devices (EXPERIMENTAL)</label>
				<help>This adds support for rt35xx wireless chipset family to the
rt2800usb driver.
Supported chips: RT3572</help>
			</entry>
			<entry name="RT2800USB_RT3573">
				<label>rt2800usb - Include support for rt3573 devices (EXPERIMENTAL)</label>
				<help>This enables support for RT3573 chipset based wireless USB devices
in the rt2800usb driver.</help>
			</entry>
			<entry name="RT2800USB_RT53XX">
				<label>rt2800usb - Include support for rt53xx devices (EXPERIMENTAL)</label>
				<help>This adds support for rt53xx wireless chipset family to the
rt2800usb driver.
Supported chips: RT5370</help>
			</entry>
			<entry name="RT2800USB_RT55XX">
				<label>rt2800usb - Include support for rt55xx devices (EXPERIMENTAL)</label>
				<help>This adds support for rt55xx wireless chipset family to the
rt2800usb driver.
Supported chips: RT5572</help>
			</entry>
			<entry name="RT2800USB_UNKNOWN">
				<label>rt2800usb - Include support for unknown (USB) devices</label>
				<help>This adds support for rt2800usb devices that are known to
have a rt28xx family compatible chipset, but for which the exact
chipset is unknown.

Support status for these devices is unknown, and enabling these
devices may or may not work.</help>
			</entry>
			<entry name="RT2800SOC">
				<label>Ralink WiSoC support</label>
				<help>This adds support for Ralink WiSoC devices.
Supported chips: RT2880, RT3050, RT3052, RT3350, RT3352.

When compiled as a module, this driver will be called rt2800soc.</help>
			</entry>
			<entry name="RT2800_LIB"/>
			<entry name="RT2800_LIB_MMIO"/>
			<entry name="RT2X00_LIB_MMIO"/>
			<entry name="RT2X00_LIB_PCI"/>
			<entry name="RT2X00_LIB_SOC"/>
			<entry name="RT2X00_LIB_USB"/>
			<entry name="RT2X00_LIB"/>
			<entry name="RT2X00_LIB_FIRMWARE"/>
			<entry name="RT2X00_LIB_CRYPTO"/>
			<entry name="RT2X00_LIB_LEDS"/>
			<entry name="RT2X00_LIB_DEBUGFS">
				<label>Ralink debugfs support</label>
				<help>Enable creation of debugfs files for the rt2x00 drivers.
These debugfs files support both reading and writing of the
most important register types of the rt2x00 hardware.</help>
			</entry>
			<entry name="RT2X00_DEBUG">
				<label>Ralink debug output</label>
				<help>Enable debugging output for all rt2x00 modules</help>
			</entry>
			<entry name="WLAN_VENDOR_REALTEK">
				<label>Realtek devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="RTL8180">
				<label>Realtek 8180/8185/8187SE PCI support</label>
				<help>This is a driver for RTL8180, RTL8185 and RTL8187SE based cards.
These are PCI based chips found in cards such as:

(RTL8185 802.11g)
A-Link WL54PC

(RTL8180 802.11b)
Belkin F5D6020 v3
Belkin F5D6020 v3
Dlink DWL-610
Dlink DWL-510
Netgear MA521
Level-One WPC-0101
Acer Aspire 1357 LMi
VCTnet PC-11B1
Ovislink AirLive WL-1120PCM
Mentor WL-PCI
Linksys WPC11 v4
TrendNET TEW-288PI
D-Link DWL-520 Rev D
Repotec RP-WP7126
TP-Link TL-WN250/251
Zonet ZEW1000
Longshine LCS-8031-R
HomeLine HLW-PCC200
GigaFast WF721-AEX
Planet WL-3553
Encore ENLWI-PCI1-NT
TrendNET TEW-266PC
Gigabyte GN-WLMR101
Siemens-fujitsu Amilo D1840W
Edimax EW-7126
PheeNet WL-11PCIR
Tonze PC-2100T
Planet WL-8303
Dlink DWL-650 v M1
Edimax EW-7106
Q-Tec 770WC
Topcom Skyr@cer 4011b
Roper FreeLan 802.11b (edition 2004)
Wistron Neweb Corp CB-200B
Pentagram HorNET
QTec 775WC
TwinMOS Booming B Series
Micronet SP906BB
Sweex LC700010
Surecom EP-9428
Safecom SWLCR-1100

Thanks to Realtek for their support!</help>
			</entry>
			<entry name="RTL8187">
				<label>Realtek 8187 and 8187B USB support</label>
				<help>This is a driver for RTL8187 and RTL8187B based cards.
These are USB based chips found in devices such as:

Netgear WG111v2
Level 1 WNC-0301USB
Micronet SP907GK V5
Encore ENUWI-G2
Trendnet TEW-424UB
ASUS P5B Deluxe/P5K Premium motherboards
Toshiba Satellite Pro series of laptops
Asus Wireless Link
Linksys WUSB54GC-EU v2
(v1 = rt73usb; v3 is rt2070-based,
use staging/rt3070 or try rt2800usb)

Thanks to Realtek for their support!</help>
			</entry>
			<entry name="RTL8187_LEDS"/>
			<entry name="RTL_CARDS">
				<label>Realtek rtlwifi family of devices</label>
				<help>This option will enable support for the Realtek mac80211-based
wireless drivers. Drivers rtl8192ce, rtl8192cu, rtl8192se, rtl8192de,
rtl8723ae, rtl8723be, rtl8188ee, rtl8192ee, and rtl8821ae share
some common code.</help>
			</entry>
			<entry name="RTL8192CE">
				<label>Realtek RTL8192CE/RTL8188CE Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8192CE/RTL8188CE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8192ce</help>
			</entry>
			<entry name="RTL8192SE">
				<label>Realtek RTL8192SE/RTL8191SE PCIe Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8192SE/RTL8191SE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8192se</help>
			</entry>
			<entry name="RTL8192DE">
				<label>Realtek RTL8192DE/RTL8188DE PCIe Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8192DE/RTL8188DE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8192de</help>
			</entry>
			<entry name="RTL8723AE">
				<label>Realtek RTL8723AE PCIe Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8723AE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8723ae</help>
			</entry>
			<entry name="RTL8723BE">
				<label>Realtek RTL8723BE PCIe Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8723BE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8723be</help>
			</entry>
			<entry name="RTL8188EE">
				<label>Realtek RTL8188EE Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8188EE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8188ee</help>
			</entry>
			<entry name="RTL8192EE">
				<label>Realtek RTL8192EE Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8192EE 802.11n PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8192ee</help>
			</entry>
			<entry name="RTL8821AE">
				<label>Realtek RTL8821AE/RTL8812AE Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8821AE/RTL8812AE 802.11ac PCIe
wireless network adapters.

If you choose to build it as a module, it will be called rtl8821ae</help>
			</entry>
			<entry name="RTL8192CU">
				<label>Realtek RTL8192CU/RTL8188CU USB Wireless Network Adapter</label>
				<help>This is the driver for Realtek RTL8192CU/RTL8188CU 802.11n USB
wireless network adapters.

If you choose to build it as a module, it will be called rtl8192cu</help>
			</entry>
			<entry name="RTLWIFI"/>
			<entry name="RTLWIFI_PCI"/>
			<entry name="RTLWIFI_USB"/>
			<entry name="RTLWIFI_DEBUG">
				<label>Debugging output for rtlwifi driver family</label>
				<help>To use the module option that sets the dynamic-debugging level for,
the front-end driver, this parameter must be &quot;Y&quot;. For memory-limited
systems, choose &quot;N&quot;. If in doubt, choose &quot;Y&quot;.</help>
			</entry>
			<entry name="RTL8192C_COMMON"/>
			<entry name="RTL8723_COMMON"/>
			<entry name="RTLBTCOEXIST"/>
			<entry name="RTL8XXXU">
				<label>RTL8723AU/RTL8188[CR]U/RTL819[12]CU (mac80211) support</label>
				<help>This is an alternative driver for various Realtek RTL8XXX
parts written to utilize the Linux mac80211 stack.
The driver is known to work with a number of RTL8723AU,
RL8188CU, RTL8188RU, RTL8191CU, and RTL8192CU devices

This driver is under development and has a limited feature
set. In particular it does not yet support 40MHz channels
and power management. However it should have a smaller
memory footprint than the vendor drivers and benefits
from the in kernel mac80211 stack.

It can coexist with drivers from drivers/staging/rtl8723au,
drivers/staging/rtl8192u, and drivers/net/wireless/rtlwifi,
but you will need to control which module you wish to load.

To compile this driver as a module, choose M here: the module will
be called r8xxxu.  If unsure, say N.</help>
			</entry>
			<entry name="RTL8XXXU_UNTESTED">
				<label>Include support for untested Realtek 8xxx USB devices (EXPERIMENTAL)</label>
				<help>This option enables detection of Realtek 8723/8188/8191/8192 WiFi
USB devices which have not been tested directly by the driver
author or reported to be working by third parties.

Please report your results!
</help>
			</entry>
			<entry name="WLAN_VENDOR_RSI">
				<label>Redpine Signals Inc devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="RSI_91X">
				<label>Redpine Signals Inc 91x WLAN driver support</label>
				<help>This option enabes support for RSI 1x1 devices.
Select M (recommended), if you have a RSI 1x1 wireless module.</help>
			</entry>
			<entry name="RSI_DEBUGFS">
				<label>Redpine Signals Inc debug support</label>
				<help>Say Y, if you would like to enable debug support. This option
creates debugfs entries</help>
			</entry>
			<entry name="RSI_SDIO">
				<label>Redpine Signals SDIO bus support</label>
				<help>This option enables the SDIO bus support in rsi drivers.
Select M (recommended), if you have a RSI 1x1 wireless module.</help>
			</entry>
			<entry name="RSI_USB">
				<label>Redpine Signals USB bus support</label>
				<help>This option enables the USB bus support in rsi drivers.
Select M (recommended), if you have a RSI 1x1 wireless module.</help>
			</entry>
			<entry name="WLAN_VENDOR_ST">
				<label>STMicroelectronics devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="CW1200">
				<label>CW1200 WLAN support</label>
				<help>This is a driver for the ST-E CW1100 &amp; CW1200 WLAN chipsets.
This option just enables the driver core, see below for
specific bus support.</help>
			</entry>
			<entry name="CW1200_WLAN_SDIO">
				<label>Support SDIO platforms</label>
				<help>Enable support for the CW1200 connected via an SDIO bus.
By default this driver only supports the Sagrad SG901-1091/1098 EVK
and similar designs that utilize a hardware reset circuit. To
support different CW1200 SDIO designs you will need to override
the default platform data by calling cw1200_sdio_set_platform_data()
in your board setup file.</help>
			</entry>
			<entry name="CW1200_WLAN_SPI">
				<label>Support SPI platforms</label>
				<help>Enables support for the CW1200 connected via a SPI bus.  You will
need to add appropriate platform data glue in your board setup
file.</help>
			</entry>
			<entry name="WLAN_VENDOR_TI">
				<label>Texas Instrument devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="WL1251">
				<label>TI wl1251 driver support</label>
				<help>This will enable TI wl1251 driver support. The drivers make
use of the mac80211 stack.

If you choose to build a module, it'll be called wl1251. Say
N if unsure.</help>
			</entry>
			<entry name="WL1251_SPI">
				<label>TI wl1251 SPI support</label>
				<help>This module adds support for the SPI interface of adapters using
TI wl1251 chipset.  Select this if your platform is using
the SPI bus.

If you choose to build a module, it'll be called wl1251_spi.
Say N if unsure.</help>
			</entry>
			<entry name="WL1251_SDIO">
				<label>TI wl1251 SDIO support</label>
				<help>This module adds support for the SDIO interface of adapters using
TI wl1251 chipset.  Select this if your platform is using
the SDIO bus.

If you choose to build a module, it'll be called
wl1251_sdio. Say N if unsure.
</help>
			</entry>
			<entry name="WL12XX">
				<label>TI wl12xx support</label>
				<help>This module adds support for wireless adapters based on TI wl1271,
wl1273, wl1281 and wl1283 chipsets. This module does *not* include
support for wl1251.  For wl1251 support, use the separate homonymous
driver instead.
</help>
			</entry>
			<entry name="WL18XX">
				<label>TI wl18xx support</label>
				<help>This module adds support for wireless adapters based on TI
WiLink 8 chipsets.
</help>
			</entry>
			<entry name="WLCORE">
				<label>TI wlcore support</label>
				<help>This module contains the main code for TI WLAN chips.  It abstracts
hardware-specific differences among different chipset families.
Each chipset family needs to implement its own lower-level module
that will depend on this module for the common code.

If you choose to build a module, it will be called wlcore. Say N if
unsure.</help>
			</entry>
			<entry name="WLCORE_SPI">
				<label>TI wlcore SPI support</label>
				<help>This module adds support for the SPI interface of adapters using
TI WLAN chipsets.  Select this if your platform is using
the SPI bus.

If you choose to build a module, it'll be called wlcore_spi.
Say N if unsure.</help>
			</entry>
			<entry name="WLCORE_SDIO">
				<label>TI wlcore SDIO support</label>
				<help>This module adds support for the SDIO interface of adapters using
TI WLAN chipsets.  Select this if your platform is using
the SDIO bus.

If you choose to build a module, it'll be called wlcore_sdio.
Say N if unsure.
</help>
			</entry>
			<entry name="WILINK_PLATFORM_DATA">
				<label>TI WiLink platform data</label>
				<help>Small platform data bit needed to pass data to the sdio modules.</help>
			</entry>
			<entry name="WLAN_VENDOR_ZYDAS">
				<label>ZyDAS devices</label>
				<help>If you have a wireless card belonging to this class, say Y.

Note that the answer to this question doesn't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about  cards. If you say Y, you will be asked for
your specific card in the following questions.</help>
			</entry>
			<entry name="USB_ZD1201">
				<label>USB ZD1201 based Wireless device support</label>
				<help>Say Y if you want to use wireless LAN adapters based on the ZyDAS
ZD1201 chip.

This driver makes the adapter appear as a normal Ethernet interface,
typically on wlan0.

The zd1201 device requires external firmware to be loaded.
This can be found at http://linux-lc100020.sourceforge.net/

To compile this driver as a module, choose M here: the
module will be called zd1201.</help>
			</entry>
			<entry name="ZD1211RW">
				<label>ZyDAS ZD1211/ZD1211B USB-wireless support</label>
				<help>This is a driver for the ZyDAS ZD1211/ZD1211B wireless
chip, present in many USB-wireless adapters.

Device firmware is required alongside this driver. You can download
the firmware distribution from http://sf.net/projects/zd1211/files/</help>
			</entry>
			<entry name="ZD1211RW_DEBUG">
				<label>ZyDAS ZD1211 debugging</label>
				<help>ZD1211 debugging messages. Choosing Y will result in additional debug
messages being saved to your kernel logs, which may help debug any
problems.

</help>
			</entry>
			<entry name="PCMCIA_RAYCS">
				<label>Aviator/Raytheon 2.4GHz wireless support</label>
				<help>Say Y here if you intend to attach an Aviator/Raytheon PCMCIA
(PC-card) wireless Ethernet networking card to your computer.
Please read the file &lt;file:Documentation/networking/ray_cs.txt&gt; for
details.

To compile this driver as a module, choose M here: the module will be
called ray_cs.  If unsure, say N.</help>
			</entry>
			<entry name="PCMCIA_WL3501">
				<label>Planet WL3501 PCMCIA cards</label>
				<help>A driver for WL3501 PCMCIA 802.11 wireless cards made by Planet.
It has basic support for Linux wireless extensions and initial
micro support for ethtool.</help>
			</entry>
			<entry name="MAC80211_HWSIM">
				<label>Simulated radio testing tool for mac80211</label>
				<help>This driver is a developer testing tool that can be used to test
IEEE 802.11 networking stack (mac80211) functionality. This is not
needed for normal wireless LAN usage and is only for testing. See
Documentation/networking/mac80211_hwsim for more information on how
to use this tool.

To compile this driver as a module, choose M here: the module will be
called mac80211_hwsim.  If unsure, say N.</help>
			</entry>
			<entry name="USB_NET_RNDIS_WLAN">
				<label>Wireless RNDIS USB support</label>
				<help>This is a driver for wireless RNDIS devices.
These are USB based adapters found in devices such as:

Buffalo WLI-U2-KG125S
U.S. Robotics USR5421
Belkin F5D7051
Linksys WUSB54GSv2
Linksys WUSB54GSC
Asus WL169gE
Eminent EM4045
BT Voyager 1055
Linksys WUSB54GSv1
U.S. Robotics USR5420
BUFFALO WLI-USB-G54

All of these devices are based on Broadcom 4320 chip which is the
only wireless RNDIS chip known to date.

If you choose to build a module, it'll be called rndis_wlan.</help>
			</entry>
			<container name="WiMAX_Wireless_Broadband_devices">
				<label>WiMAX Wireless Broadband devices</label>
				<entry name="WIMAX_I2400M"/>
				<entry name="WIMAX_I2400M_USB">
					<label>Intel Wireless WiMAX Connection 2400 over USB (including 5x50)</label>
					<help>Select if you have a device based on the Intel WiMAX
Connection 2400 over USB (like any of the Intel Wireless
WiMAX/WiFi Link 5x50 series).

If unsure, it is safe to select M (module).</help>
				</entry>
				<entry name="WIMAX_I2400M_DEBUG_LEVEL">
					<label>WiMAX i2400m debug level</label>
					<help>
Select the maximum debug verbosity level to be compiled into
the WiMAX i2400m driver code.

By default, this is disabled at runtime and can be
selectively enabled at runtime for different parts of the
code using the sysfs debug-levels file.

If set at zero, this will compile out all the debug code.

It is recommended that it is left at 8.
</help>
				</entry>
			</container>
			<entry name="WAN">
				<label>Wan interfaces support</label>
				<help>Wide Area Networks (WANs), such as X.25, Frame Relay and leased
lines, are used to interconnect Local Area Networks (LANs) over vast
distances with data transfer rates significantly higher than those
achievable with commonly used asynchronous modem connections.

Usually, a quite expensive external device called a `WAN router' is
needed to connect to a WAN. As an alternative, a relatively
inexpensive WAN interface card can allow your Linux box to directly
connect to a WAN.

If you have one of those cards and wish to use it under Linux,
say Y here and also to the WAN driver for your card.

If unsure, say N.</help>
			</entry>
			<entry name="HOSTESS_SV11">
				<label>Comtrol Hostess SV-11 support</label>
				<help>Driver for Comtrol Hostess SV-11 network card which
operates on low speed synchronous serial links at up to
256Kbps, supporting PPP and Cisco HDLC.

The driver will be compiled as a module: the
module will be called hostess_sv11.</help>
			</entry>
			<entry name="COSA">
				<label>COSA/SRP sync serial boards support</label>
				<help>Driver for COSA and SRP synchronous serial boards.

These boards allow to connect synchronous serial devices (for example
base-band modems, or any other device with the X.21, V.24, V.35 or
V.36 interface) to your Linux box. The cards can work as the
character device, synchronous PPP network device, or the Cisco HDLC
network device.

You will need user-space utilities COSA or SRP boards for downloading
the firmware to the cards and to set them up. Look at the
&lt;http://www.fi.muni.cz/~kas/cosa/&gt; for more information. You can also
read the comment at the top of the &lt;file:drivers/net/wan/cosa.c&gt; for
details about the cards and the driver itself.

The driver will be compiled as a module: the
module will be called cosa.</help>
			</entry>
			<entry name="LANMEDIA">
				<label>LanMedia Corp. SSI/V.35, T1/E1, HSSI, T3 boards</label>
				<help>Driver for the following Lan Media family of serial boards:

- LMC 1000 board allows you to connect synchronous serial devices
(for example base-band modems, or any other device with the X.21,
V.24, V.35 or V.36 interface) to your Linux box.

- LMC 1200 with on board DSU board allows you to connect your Linux
box directly to a T1 or E1 circuit.

- LMC 5200 board provides a HSSI interface capable of running up to
52 Mbits per second.

- LMC 5245 board connects directly to a T3 circuit saving the
additional external hardware.

To change setting such as clock source you will need lmcctl.
It is available at &lt;ftp://ftp.lanmedia.com/&gt; (broken link).

To compile this driver as a module, choose M here: the
module will be called lmc.</help>
			</entry>
			<entry name="SEALEVEL_4021">
				<label>Sealevel Systems 4021 support</label>
				<help>This is a driver for the Sealevel Systems ACB 56 serial I/O adapter.

The driver will be compiled as a module: the
module will be called sealevel.</help>
			</entry>
			<entry name="HDLC">
				<label>Generic HDLC layer</label>
				<help>Say Y to this option if your Linux box contains a WAN (Wide Area
Network) card supported by this driver and you are planning to
connect the box to a WAN.

You will need supporting software from
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.
Generic HDLC driver currently supports raw HDLC, Cisco HDLC, Frame
Relay, synchronous Point-to-Point Protocol (PPP) and X.25.

To compile this driver as a module, choose M here: the
module will be called hdlc.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_RAW">
				<label>Raw HDLC support</label>
				<help>Generic HDLC driver supporting raw HDLC over WAN connections.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_RAW_ETH">
				<label>Raw HDLC Ethernet device support</label>
				<help>Generic HDLC driver supporting raw HDLC Ethernet device emulation
over WAN connections.

You will need it for Ethernet over HDLC bridges.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_CISCO">
				<label>Cisco HDLC support</label>
				<help>Generic HDLC driver supporting Cisco HDLC over WAN connections.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_FR">
				<label>Frame Relay support</label>
				<help>Generic HDLC driver supporting Frame Relay over WAN connections.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_PPP">
				<label>Synchronous Point-to-Point Protocol (PPP) support</label>
				<help>Generic HDLC driver supporting PPP over WAN connections.

If unsure, say N.</help>
			</entry>
			<entry name="HDLC_X25">
				<label>X.25 protocol support</label>
				<help>Generic HDLC driver supporting X.25 over WAN connections.

If unsure, say N.</help>
			</entry>
			<entry name="PCI200SYN">
				<label>Goramo PCI200SYN support</label>
				<help>Driver for PCI200SYN cards by Goramo sp. j.

If you have such a card, say Y here and see
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.

To compile this as a module, choose M here: the
module will be called pci200syn.

If unsure, say N.</help>
			</entry>
			<entry name="WANXL">
				<label>SBE Inc. wanXL support</label>
				<help>Driver for wanXL PCI cards by SBE Inc.

If you have such a card, say Y here and see
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.

To compile this as a module, choose M here: the
module will be called wanxl.

If unsure, say N.</help>
			</entry>
			<entry name="WANXL_BUILD_FIRMWARE">
				<label>rebuild wanXL firmware</label>
				<help>Allows you to rebuild firmware run by the QUICC processor.
It requires as68k, ld68k and hexdump programs.

You should never need this option, say N.</help>
			</entry>
			<entry name="PC300TOO">
				<label>Cyclades PC300 RSV/X21 alternative support</label>
				<help>Alternative driver for PC300 RSV/X21 PCI cards made by
Cyclades, Inc. If you have such a card, say Y here and see
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.

To compile this as a module, choose M here: the module
will be called pc300too.

If unsure, say N here.</help>
			</entry>
			<entry name="N2">
				<label>SDL RISCom/N2 support</label>
				<help>Driver for RISCom/N2 single or dual channel ISA cards by
SDL Communications Inc.

If you have such a card, say Y here and see
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.

Note that N2csu and N2dds cards are not supported by this driver.

To compile this driver as a module, choose M here: the module
will be called n2.

If unsure, say N.</help>
			</entry>
			<entry name="C101">
				<label>Moxa C101 support</label>
				<help>Driver for C101 SuperSync ISA cards by Moxa Technologies Co., Ltd.

If you have such a card, say Y here and see
&lt;http://www.kernel.org/pub/linux/utils/net/hdlc/&gt;.

To compile this driver as a module, choose M here: the
module will be called c101.

If unsure, say N.</help>
			</entry>
			<entry name="FARSYNC">
				<label>FarSync T-Series support</label>
				<help>Support for the FarSync T-Series X.21 (and V.35/V.24) cards by
FarSite Communications Ltd.

Synchronous communication is supported on all ports at speeds up to
8Mb/s (128K on V.24) using synchronous PPP, Cisco HDLC, raw HDLC,
Frame Relay or X.25/LAPB.

If you want the module to be automatically loaded when the interface
is referenced then you should add &quot;alias hdlcX farsync&quot; to a file
in /etc/modprobe.d/ for each interface, where X is 0, 1, 2, ..., or
simply use &quot;alias hdlc* farsync&quot; to indicate all of them.

To compile this driver as a module, choose M here: the
module will be called farsync.</help>
			</entry>
			<entry name="DSCC4">
				<label>Etinc PCISYNC serial board support</label>
				<help>Driver for Etinc PCISYNC boards based on the Infineon (ex. Siemens)
DSCC4 chipset.

This is supposed to work with the four port card. Take a look at
&lt;http://www.cogenit.fr/dscc4/&gt; for further information about the
driver.

To compile this driver as a module, choose M here: the
module will be called dscc4.</help>
			</entry>
			<entry name="FSL_UCC_HDLC">
				<label>Freescale QUICC Engine HDLC support</label>
				<help>Driver for Freescale QUICC Engine HDLC controller. The driver
supports HDLC in NMSI and TDM mode.

To compile this driver as a module, choose M here: the
module will be called fsl_ucc_hdlc.</help>
			</entry>
			<entry name="SLIC_DS26522">
				<label>Slic Maxim ds26522 card support</label>
				<help>This module initializes and configures the slic maxim card
in T1 or E1 mode.

To compile this driver as a module, choose M here: the
module will be called slic_ds26522.</help>
			</entry>
			<entry name="DSCC4_PCISYNC">
				<label>Etinc PCISYNC features</label>
				<help>Due to Etinc's design choice for its PCISYNC cards, some operations
are only allowed on specific ports of the DSCC4. This option is the
only way for the driver to know that it shouldn't return a success
code for these operations.

Please say Y if your card is an Etinc's PCISYNC.</help>
			</entry>
			<entry name="DSCC4_PCI_RST">
				<label>Hard reset support</label>
				<help>Various DSCC4 bugs forbid any reliable software reset of the ASIC.
As a replacement, some vendors provide a way to assert the PCI #RST
pin of DSCC4 through the GPIO port of the card. If you choose Y,
the driver will make use of this feature before module removal
(i.e. rmmod). The feature is known to be available on Commtech's
cards. Contact your manufacturer for details.

Say Y if your card supports this feature.</help>
			</entry>
			<entry name="IXP4XX_HSS">
				<label>Intel IXP4xx HSS (synchronous serial port) support</label>
				<help>Say Y here if you want to use built-in HSS ports
on IXP4xx processor.</help>
			</entry>
			<entry name="DLCI">
				<label>Frame Relay DLCI support</label>
				<help>Support for the Frame Relay protocol.

Frame Relay is a fast low-cost way to connect to a remote Internet
access provider or to form a private wide area network. The one
physical line from your box to the local &quot;switch&quot; (i.e. the entry
point to the Frame Relay network, usually at the phone company) can
carry several logical point-to-point connections to other computers
connected to the Frame Relay network. For a general explanation of
the protocol, check out &lt;http://www.mplsforum.org/&gt;.

To use frame relay, you need supporting hardware (called FRAD) and
certain programs from the net-tools package as explained in
&lt;file:Documentation/networking/framerelay.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called dlci.</help>
			</entry>
			<entry name="DLCI_MAX">
				<label>Max DLCI per device</label>
				<help>How many logical point-to-point frame relay connections (the
identifiers of which are called DCLIs) should be handled by each
of your hardware frame relay access devices.

Go with the default.</help>
			</entry>
			<entry name="SDLA">
				<label>SDLA (Sangoma S502/S508) support</label>
				<help>Driver for the Sangoma S502A, S502E, and S508 Frame Relay Access
Devices.

These are multi-protocol cards, but only Frame Relay is supported
by the driver at this time. Please read
&lt;file:Documentation/networking/framerelay.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called sdla.</help>
			</entry>
			<entry name="LAPBETHER">
				<label>LAPB over Ethernet driver</label>
				<help>Driver for a pseudo device (typically called /dev/lapb0) which allows
you to open an LAPB point-to-point connection to some other computer
on your Ethernet network.

In order to do this, you need to say Y or M to the driver for your
Ethernet card as well as to &quot;LAPB Data Link Driver&quot;.

To compile this driver as a module, choose M here: the
module will be called lapbether.

If unsure, say N.</help>
			</entry>
			<entry name="X25_ASY">
				<label>X.25 async driver</label>
				<help>Send and receive X.25 frames over regular asynchronous serial
lines such as telephone lines equipped with ordinary modems.

Experts should note that this driver doesn't currently comply with
the asynchronous HDLS framing protocols in CCITT recommendation X.25.

To compile this driver as a module, choose M here: the
module will be called x25_asy.

If unsure, say N.</help>
			</entry>
			<entry name="SBNI">
				<label>Granch SBNI12 Leased Line adapter support</label>
				<help>Driver for ISA SBNI12-xx cards which are low cost alternatives to
leased line modems.

You can find more information and last versions of drivers and
utilities at &lt;http://www.granch.ru/&gt;. If you have any question you
can send email to &lt;sbni@granch.ru&gt;.

To compile this driver as a module, choose M here: the
module will be called sbni.

If unsure, say N.</help>
			</entry>
			<entry name="SBNI_MULTILINE">
				<label>Multiple line feature support</label>
				<help>Schedule traffic for some parallel lines, via SBNI12 adapters.

If you have two computers connected with two parallel lines it's
possible to increase transfer rate nearly twice. You should have
a program named 'sbniconfig' to configure adapters.

If unsure, say N.</help>
			</entry>
			<entry name="IEEE802154_DRIVERS">
				<label>IEEE 802.15.4 drivers</label>
				<help>Say Y here to get to see options for IEEE 802.15.4 Low-Rate
Wireless Personal Area Network device drivers. This option alone
does not add any kernel code.

If you say N, all options in this submenu will be skipped and
disabled.</help>
			</entry>
			<entry name="IEEE802154_FAKELB">
				<label>IEEE 802.15.4 loopback driver</label>
				<help>Say Y here to enable the fake driver that can emulate a net
of several interconnected radio devices.

This driver can also be built as a module. To do so say M here.
The module will be called 'fakelb'.</help>
			</entry>
			<entry name="IEEE802154_AT86RF230">
				<label>AT86RF230/231/233/212 transceiver driver</label>
				<help>Say Y here to enable the at86rf230/231/233/212 SPI 802.15.4 wireless
controller.

This driver can also be built as a module. To do so, say M here.
the module will be called 'at86rf230'.</help>
			</entry>
			<entry name="IEEE802154_AT86RF230_DEBUGFS">
				<label>AT86RF230 debugfs interface</label>
				<help>This option compiles debugfs code for the at86rf230 driver.</help>
			</entry>
			<entry name="IEEE802154_MRF24J40">
				<label>Microchip MRF24J40 transceiver driver</label>
				<help>Say Y here to enable the MRF24J20 SPI 802.15.4 wireless
controller.

This driver can also be built as a module. To do so, say M here.
the module will be called 'mrf24j40'.</help>
			</entry>
			<entry name="IEEE802154_CC2520">
				<label>CC2520 transceiver driver</label>
				<help>Say Y here to enable the CC2520 SPI 802.15.4 wireless
controller.

This driver can also be built as a module. To do so, say M here.
the module will be called 'cc2520'.</help>
			</entry>
			<entry name="IEEE802154_ATUSB">
				<label>ATUSB transceiver driver</label>
				<help>Say Y here to enable the ATUSB IEEE 802.15.4 wireless
controller.

This driver can also be built as a module. To do so say M here.
The module will be called 'atusb'.</help>
			</entry>
			<entry name="IEEE802154_ADF7242">
				<label>ADF7242 transceiver driver</label>
				<help>Say Y here to enable the ADF7242 SPI 802.15.4 wireless
controller.

This driver can also be built as a module. To do so, say M here.
the module will be called 'adf7242'.
</help>
			</entry>
			<entry name="XEN_NETDEV_FRONTEND">
				<label>Xen network device frontend driver</label>
				<help>This driver provides support for Xen paravirtual network
devices exported by a Xen network driver domain (often
domain 0).

The corresponding Linux backend driver is enabled by the
CONFIG_XEN_NETDEV_BACKEND option.

If you are compiling a kernel for use as Xen guest, you
should say Y here. To compile this driver as a module, chose
M here: the module will be called xen-netfront.</help>
			</entry>
			<entry name="XEN_NETDEV_BACKEND">
				<label>Xen backend network device</label>
				<help>This driver allows the kernel to act as a Xen network driver
domain which exports paravirtual network devices to other
Xen domains. These devices can be accessed by any operating
system that implements a compatible front end.

The corresponding Linux frontend driver is enabled by the
CONFIG_XEN_NETDEV_FRONTEND configuration option.

The backend driver presents a standard network device
endpoint for each paravirtual network device to the driver
domain network stack. These can then be bridged or routed
etc in order to provide full network connectivity.

If you are compiling a kernel to run in a Xen network driver
domain (often this is domain 0) you should say Y here. To
compile this driver as a module, chose M here: the module
will be called xen-netback.</help>
			</entry>
			<entry name="VMXNET3">
				<label>VMware VMXNET3 ethernet driver</label>
				<help>This driver supports VMware's vmxnet3 virtual ethernet NIC.
To compile this driver as a module, choose M here: the
module will be called vmxnet3.</help>
			</entry>
			<entry name="FUJITSU_ES">
				<label>FUJITSU Extended Socket Network Device driver</label>
				<help>This driver provides support for Extended Socket network device
on Extended Partitioning of FUJITSU PRIMEQUEST 2000 E2 series.</help>
			</entry>
			<entry name="HYPERV_NET">
				<label>Microsoft Hyper-V virtual network driver</label>
				<help>Select this option to enable the Hyper-V virtual network driver.
</help>
			</entry>
			<entry name="ISDN">
				<label>ISDN support</label>
				<help>ISDN (&quot;Integrated Services Digital Network&quot;, called RNIS in France)
is a fully digital telephone service that can be used for voice and
data connections.  If your computer is equipped with an ISDN
adapter you can use it to connect to your Internet service provider
(with SLIP or PPP) faster than via a conventional telephone modem
(though still much slower than with DSL) or to make and accept
voice calls (eg. turning your PC into a software answering machine
or PABX).

Select this option if you want your kernel to support ISDN.</help>
			</entry>
			<entry name="ISDN_I4L">
				<label>Old ISDN4Linux (deprecated)</label>
				<help>This driver allows you to use an ISDN adapter for networking
connections and as dialin/out device.  The isdn-tty's have a built
in AT-compatible modem emulator.  Network devices support autodial,
channel-bundling, callback and caller-authentication without having
a daemon running.  A reduced T.70 protocol is supported with tty's
suitable for German BTX.  On D-Channel, the protocols EDSS1
(Euro-ISDN) and 1TR6 (German style) are supported.  See
&lt;file:Documentation/isdn/README&gt; for more information.

ISDN support in the linux kernel is moving towards a new API,
called CAPI (Common ISDN Application Programming Interface).
Therefore the old ISDN4Linux layer will eventually become obsolete.
It is still available, though, for use with adapters that are not
supported by the new CAPI subsystem yet.</help>
			</entry>
			<entry name="ISDN_PPP">
				<label>Support synchronous PPP</label>
				<help>Over digital connections such as ISDN, there is no need to
synchronize sender and recipient's clocks with start and stop bits
as is done over analog telephone lines. Instead, one can use
&quot;synchronous PPP&quot;. Saying Y here will include this protocol. This
protocol is used by Cisco and Sun for example. So you want to say Y
here if the other end of your ISDN connection supports it. You will
need a special version of pppd (called ipppd) for using this
feature. See &lt;file:Documentation/isdn/README.syncppp&gt; and
&lt;file:Documentation/isdn/syncPPP.FAQ&gt; for more information.</help>
			</entry>
			<entry name="ISDN_PPP_VJ">
				<label>Use VJ-compression with synchronous PPP</label>
				<help>This enables Van Jacobson header compression for synchronous PPP.
Say Y if the other end of the connection supports it.</help>
			</entry>
			<entry name="ISDN_MPP">
				<label>Support generic MP (RFC 1717)</label>
				<help>With synchronous PPP enabled, it is possible to increase throughput
by bundling several ISDN-connections, using this protocol. See
&lt;file:Documentation/isdn/README.syncppp&gt; for more information.</help>
			</entry>
			<entry name="IPPP_FILTER">
				<label>Filtering for synchronous PPP</label>
				<help>Say Y here if you want to be able to filter the packets passing over
IPPP interfaces.  This allows you to control which packets count as
activity (i.e. which packets will reset the idle timer or bring up
a demand-dialled link) and which packets are to be dropped entirely.
You need to say Y here if you wish to use the pass-filter and
active-filter options to ipppd.</help>
			</entry>
			<entry name="ISDN_PPP_BSDCOMP">
				<label>Support BSD compression</label>
				<help>Support for the BSD-Compress compression method for PPP, which uses
the LZW compression method to compress each PPP packet before it is
sent over the wire. The machine at the other end of the PPP link
(usually your ISP) has to support the BSD-Compress compression
method as well for this to be useful. Even if they don't support it,
it is safe to say Y here.</help>
			</entry>
			<entry name="ISDN_AUDIO">
				<label>Support audio via ISDN</label>
				<help>If you say Y here, the modem-emulator will support a subset of the
EIA Class 8 Voice commands. Using a getty with voice-support
(mgetty+sendfax by &lt;gert@greenie.muc.de&gt; with an extension, available
with the ISDN utility package for example), you will be able to use
your Linux box as an ISDN-answering machine. Of course, this must be
supported by the lowlevel driver also. Currently, the HiSax driver
is the only voice-supporting driver. See
&lt;file:Documentation/isdn/README.audio&gt; for more information.</help>
			</entry>
			<entry name="ISDN_TTY_FAX">
				<label>Support AT-Fax Class 1 and 2 commands</label>
				<help>If you say Y here, the modem-emulator will support a subset of the
Fax Class 1 and 2 commands. Using a getty with fax-support
(mgetty+sendfax, hylafax), you will be able to use your Linux box as
an ISDN-fax-machine. This must be supported by the lowlevel driver
also. See &lt;file:Documentation/isdn/README.fax&gt; for more information.</help>
			</entry>
			<entry name="ISDN_X25">
				<label>X.25 PLP on top of ISDN</label>
				<help>This feature provides the X.25 protocol over ISDN connections.
See &lt;file:Documentation/isdn/README.x25&gt; for more information
if you are thinking about using this.</help>
			</entry>
			<container name="ISDN_feature_submodules">
				<label>ISDN feature submodules</label>
				<entry name="ISDN_DRV_LOOP">
					<label>isdnloop support</label>
					<help>This driver provides a virtual ISDN card. Its primary purpose is
testing of linklevel features or configuration without getting
charged by your service-provider for lots of phone calls.
You need will need the loopctrl utility from the latest isdn4k-utils
package to set up this driver.</help>
				</entry>
				<entry name="ISDN_DIVERSION">
					<label>Support isdn diversion services</label>
					<help>This option allows you to use some supplementary diversion
services in conjunction with the HiSax driver on an EURO/DSS1
line.

Supported options are CD (call deflection), CFU (Call forward
unconditional), CFB (Call forward when busy) and CFNR (call forward
not reachable). Additionally the actual CFU, CFB and CFNR state may
be interrogated.

The use of CFU, CFB, CFNR and interrogation may be limited to some
countries. The keypad protocol is still not implemented. CD should
work in all countries if the service has been subscribed to.

Please read the file &lt;file:Documentation/isdn/README.diversion&gt;.</help>
				</entry>
			</container>
			<container name="Passive_cards">
				<label>Passive cards</label>
				<entry name="ISDN_DRV_HISAX">
					<label>HiSax SiemensChipSet driver support</label>
					<help>This is a driver supporting the Siemens chipset on various
ISDN-cards (like AVM A1, Elsa ISDN cards, Teles S0-16.0, Teles
S0-16.3, Teles S0-8, Teles/Creatix PnP, ITK micro ix1 and many
compatibles).

HiSax is just the name of this driver, not the name of any hardware.

If you have a card with such a chipset, you should say Y here and
also to the configuration option of the driver for your particular
card, below.</help>
				</entry>
				<entry name="HISAX_EURO">
					<label>HiSax Support for EURO/DSS1</label>
					<help>Say Y or N according to the D-channel protocol which your local
telephone service company provides.

The call control protocol E-DSS1 is used in most European countries.
If unsure, say Y.</help>
				</entry>
				<entry name="DE_AOC">
					<label>Support for german chargeinfo</label>
					<help>If you want that the HiSax hardware driver sends messages to the
upper level of the isdn code on each AOCD (Advice Of Charge, During
the call -- transmission of the fee information during a call) and
on each AOCE (Advice Of Charge, at the End of the call --
transmission of fee information at the end of the call), say Y here.
This works only in Germany.</help>
				</entry>
				<entry name="HISAX_NO_SENDCOMPLETE">
					<label>Disable sending complete</label>
					<help>If you have trouble with some ugly exchanges or you live in
Australia select this option.</help>
				</entry>
				<entry name="HISAX_NO_LLC">
					<label>Disable sending low layer compatibility</label>
					<help>If you have trouble with some ugly exchanges try to select this
option.</help>
				</entry>
				<entry name="HISAX_NO_KEYPAD">
					<label>Disable keypad protocol option</label>
					<help>If you like to send special dial strings including * or # without
using the keypad protocol, select this option.</help>
				</entry>
				<entry name="HISAX_1TR6">
					<label>HiSax Support for german 1TR6</label>
					<help>Say Y or N according to the D-channel protocol which your local
telephone service company provides.

1TR6 is an old call control protocol which was used in Germany
before E-DSS1 was established. Nowadays, all new lines in Germany
use E-DSS1.</help>
				</entry>
				<entry name="HISAX_NI1">
					<label>HiSax Support for US NI1</label>
					<help>Enable this if you like to use ISDN in US on a NI1 basic rate
interface.</help>
				</entry>
				<entry name="HISAX_MAX_CARDS">
					<label>Maximum number of cards supported by HiSax</label>
					<help>This option allows you to specify the maximum number of cards which
the HiSax driver will be able to handle.</help>
				</entry>
				<entry name="HISAX_16_0">
					<label>Teles 16.0/8.0</label>
					<help>This enables HiSax support for the Teles ISDN-cards S0-16.0, S0-8
and many compatibles.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port/shmem settings.</help>
				</entry>
				<entry name="HISAX_16_3">
					<label>Teles 16.3 or PNP or PCMCIA</label>
					<help>This enables HiSax support for the Teles ISDN-cards S0-16.3 the
Teles/Creatix PnP and the Teles PCMCIA.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_TELESPCI">
					<label>Teles PCI</label>
					<help>This enables HiSax support for the Teles PCI.
See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it.</help>
				</entry>
				<entry name="HISAX_S0BOX">
					<label>Teles S0Box</label>
					<help>This enables HiSax support for the Teles/Creatix parallel port
S0BOX.  See &lt;file:Documentation/isdn/README.HiSax&gt; on how to
configure it.</help>
				</entry>
				<entry name="HISAX_AVM_A1">
					<label>AVM A1 (Fritz)</label>
					<help>This enables HiSax support for the AVM A1 (aka &quot;Fritz&quot;).

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_FRITZPCI">
					<label>AVM PnP/PCI (Fritz!PnP/PCI)</label>
					<help>This enables HiSax support for the AVM &quot;Fritz!PnP&quot; and &quot;Fritz!PCI&quot;.
See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it.</help>
				</entry>
				<entry name="HISAX_AVM_A1_PCMCIA">
					<label>AVM A1 PCMCIA (Fritz)</label>
					<help>This enables HiSax support for the AVM A1 &quot;Fritz!PCMCIA&quot;).
See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it.</help>
				</entry>
				<entry name="HISAX_ELSA">
					<label>Elsa cards</label>
					<help>This enables HiSax support for the Elsa Mircolink ISA cards, for the
Elsa Quickstep series cards and Elsa PCMCIA.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_IX1MICROR2">
					<label>ITK ix1-micro Revision 2</label>
					<help>This enables HiSax support for the ITK ix1-micro Revision 2 card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_DIEHLDIVA">
					<label>Eicon.Diehl Diva cards</label>
					<help>This enables HiSax support for the Eicon.Diehl Diva none PRO
versions passive ISDN cards.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_ASUSCOM">
					<label>ASUSCOM ISA cards</label>
					<help>This enables HiSax support for the AsusCom and their OEM versions
passive ISDN ISA cards.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_TELEINT">
					<label>TELEINT cards</label>
					<help>This enables HiSax support for the TELEINT SA1 semiactiv ISDN card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_HFCS">
					<label>HFC-S based cards</label>
					<help>This enables HiSax support for the HFC-S 2BDS0 based cards, like
teles 16.3c.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_SEDLBAUER">
					<label>Sedlbauer cards</label>
					<help>This enables HiSax support for the Sedlbauer passive ISDN cards.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using the different cards, a different D-channel protocol, or
non-standard IRQ/port settings.</help>
				</entry>
				<entry name="HISAX_SPORTSTER">
					<label>USR Sportster internal TA</label>
					<help>This enables HiSax support for the USR Sportster internal TA card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_MIC">
					<label>MIC card</label>
					<help>This enables HiSax support for the ITH MIC card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_NETJET">
					<label>NETjet card</label>
					<help>This enables HiSax support for the NetJet from Traverse
Technologies.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_NETJET_U">
					<label>NETspider U card</label>
					<help>This enables HiSax support for the Netspider U interface ISDN card
from Traverse Technologies.
See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_NICCY">
					<label>Niccy PnP/PCI card</label>
					<help>This enables HiSax support for the Dr. Neuhaus Niccy PnP or PCI.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_ISURF">
					<label>Siemens I-Surf card</label>
					<help>This enables HiSax support for the Siemens I-Talk/I-Surf card with
ISAR chip.
See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_HSTSAPHIR">
					<label>HST Saphir card</label>
					<help>This enables HiSax support for the HST Saphir card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_BKM_A4T">
					<label>Telekom A4T card</label>
					<help>This enables HiSax support for the Telekom A4T card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_SCT_QUADRO">
					<label>Scitel Quadro card</label>
					<help>This enables HiSax support for the Scitel Quadro card.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_GAZEL">
					<label>Gazel cards</label>
					<help>This enables HiSax support for the Gazel cards.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_HFC_PCI">
					<label>HFC PCI-Bus cards</label>
					<help>This enables HiSax support for the HFC-S PCI 2BDS0 based cards.

For more information see under
&lt;file:Documentation/isdn/README.hfc-pci&gt;.</help>
				</entry>
				<entry name="HISAX_W6692">
					<label>Winbond W6692 based cards</label>
					<help>This enables HiSax support for Winbond W6692 based PCI ISDN cards.

See &lt;file:Documentation/isdn/README.HiSax&gt; on how to configure it
using a different D-channel protocol, or non-standard IRQ/port
settings.</help>
				</entry>
				<entry name="HISAX_HFC_SX">
					<label>HFC-S+, HFC-SP, HFC-PCMCIA cards</label>
					<help>This enables HiSax support for the HFC-S+, HFC-SP and HFC-PCMCIA
cards. This code is not finished yet.</help>
				</entry>
				<entry name="HISAX_ENTERNOW_PCI">
					<label>Formula-n enter:now PCI card</label>
					<help>This enables HiSax support for the Formula-n enter:now PCI
ISDN card.</help>
				</entry>
				<entry name="HISAX_DEBUG">
					<label>HiSax debugging</label>
					<help>This enables debugging code in the new-style HiSax drivers, i.e.
the ST5481 USB driver currently.
If in doubt, say yes.</help>
				</entry>
				<entry name="HISAX_SEDLBAUER_CS">
					<label>Sedlbauer PCMCIA cards</label>
					<help>This enables the PCMCIA client driver for the Sedlbauer Speed Star
and Speed Star II cards.</help>
				</entry>
				<entry name="HISAX_ELSA_CS">
					<label>ELSA PCMCIA MicroLink cards</label>
					<help>This enables the PCMCIA client driver for the Elsa PCMCIA MicroLink
card.</help>
				</entry>
				<entry name="HISAX_AVM_A1_CS">
					<label>AVM A1 PCMCIA cards</label>
					<help>This enables the PCMCIA client driver for the AVM A1 / Fritz!Card
PCMCIA cards.</help>
				</entry>
				<entry name="HISAX_TELES_CS">
					<label>TELES PCMCIA cards</label>
					<help>This enables the PCMCIA client driver for the Teles PCMCIA cards.</help>
				</entry>
				<entry name="HISAX_ST5481">
					<label>ST5481 USB ISDN modem</label>
					<help>This enables the driver for ST5481 based USB ISDN adapters,
e.g. the BeWan Gazel 128 USB</help>
				</entry>
				<entry name="HISAX_HFCUSB">
					<label>HFC USB based ISDN modems</label>
					<help>This enables the driver for HFC USB based ISDN modems.</help>
				</entry>
				<entry name="HISAX_HFC4S8S">
					<label>HFC-4S/8S based ISDN cards</label>
					<help>This enables the driver for HFC-4S/8S based ISDN cards.</help>
				</entry>
				<entry name="HISAX_FRITZ_PCIPNP">
					<label>AVM Fritz!Card PCI/PCIv2/PnP support</label>
					<help>This enables the driver for the AVM Fritz!Card PCI,
Fritz!Card PCI v2 and Fritz!Card PnP.
(the latter also needs you to select &quot;ISA Plug and Play support&quot;
from the menu &quot;Plug and Play configuration&quot;)</help>
				</entry>
			</container>
			<entry name="ISDN_CAPI">
				<label>CAPI 2.0 subsystem</label>
				<help>This provides CAPI (the Common ISDN Application Programming
Interface) Version 2.0, a standard making it easy for programs to
access ISDN hardware in a device independent way. (For details see
&lt;http://www.capi.org/&gt;.)  CAPI supports making and accepting voice
and data connections, controlling call options and protocols,
as well as ISDN supplementary services like call forwarding or
three-party conferences (if supported by the specific hardware
driver).

Select this option and the appropriate hardware driver below if
you have an ISDN adapter supported by the CAPI subsystem.</help>
			</entry>
			<entry name="CAPI_TRACE">
				<label>CAPI trace support</label>
				<help>If you say Y here, the kernelcapi driver can make verbose traces
of CAPI messages. This feature can be enabled/disabled via IOCTL for
every controller (default disabled).
This will increase the size of the kernelcapi module by 20 KB.
If unsure, say Y.</help>
			</entry>
			<entry name="ISDN_CAPI_CAPI20">
				<label>CAPI2.0 /dev/capi20 support</label>
				<help>This option will provide the CAPI 2.0 interface to userspace
applications via /dev/capi20. Applications should use the
standardized libcapi20 to access this functionality.  You should say
Y/M here.</help>
			</entry>
			<entry name="ISDN_CAPI_MIDDLEWARE">
				<label>CAPI2.0 Middleware support</label>
				<help>This option will enhance the capabilities of the /dev/capi20
interface.  It will provide a means of moving a data connection,
established via the usual /dev/capi20 interface to a special tty
device.  If you want to use pppd with pppdcapiplugin to dial up to
your ISP, say Y here.</help>
			</entry>
			<entry name="ISDN_CAPI_CAPIDRV">
				<label>CAPI2.0 capidrv interface support</label>
				<help>This option provides the glue code to hook up CAPI driven cards to
the legacy isdn4linux link layer.  If you have a card which is
supported by a CAPI driver, but still want to use old features like
ippp interfaces or ttyI emulation, say Y/M here.</help>
			</entry>
			<entry name="ISDN_CAPI_CAPIDRV_VERBOSE">
				<label>Verbose reason code reporting</label>
				<help>If you say Y here, the capidrv interface will give verbose reasons
for disconnecting. This will increase the size of the kernel by 7 KB.
If unsure, say N.
</help>
			</entry>
			<entry name="CAPI_AVM">
				<label>Active AVM cards</label>
				<help>Enable support for AVM active ISDN cards.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_B1ISA">
				<label>AVM B1 ISA support</label>
				<help>Enable support for the ISA version of the AVM B1 card.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_B1PCI">
				<label>AVM B1 PCI support</label>
				<help>Enable support for the PCI version of the AVM B1 card.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_B1PCIV4">
				<label>AVM B1 PCI V4 support</label>
				<help>Enable support for the V4 version of AVM B1 PCI card.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_T1ISA">
				<label>AVM T1/T1-B ISA support</label>
				<help>Enable support for the AVM T1 T1B card.
Note: This is a PRI card and handle 30 B-channels.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_B1PCMCIA">
				<label>AVM B1/M1/M2 PCMCIA support</label>
				<help>Enable support for the PCMCIA version of the AVM B1 card.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_AVM_CS">
				<label>AVM B1/M1/M2 PCMCIA cs module</label>
				<help>Enable the PCMCIA client driver for the AVM B1/M1/M2
PCMCIA cards.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_T1PCI">
				<label>AVM T1/T1-B PCI support</label>
				<help>Enable support for the AVM T1 T1B card.
Note: This is a PRI card and handle 30 B-channels.</help>
			</entry>
			<entry name="ISDN_DRV_AVMB1_C4">
				<label>AVM C4/C2 support</label>
				<help>Enable support for the AVM C4/C2 PCI cards.
These cards handle 4/2 BRI ISDN lines (8/4 channels).</help>
			</entry>
			<entry name="CAPI_EICON">
				<label>Active Eicon DIVA Server cards</label>
				<help>Enable support for Eicon Networks active ISDN cards.</help>
			</entry>
			<entry name="ISDN_DIVAS">
				<label>Support Eicon DIVA Server cards</label>
				<help>Say Y here if you have an Eicon Networks DIVA Server PCI ISDN card.
In order to use this card, additional firmware is necessary, which
has to be downloaded into the card using the divactrl utility.</help>
			</entry>
			<entry name="ISDN_DIVAS_BRIPCI">
				<label>DIVA Server BRI/PCI support</label>
				<help>Enable support for DIVA Server BRI-PCI.</help>
			</entry>
			<entry name="ISDN_DIVAS_PRIPCI">
				<label>DIVA Server PRI/PCI support</label>
				<help>Enable support for DIVA Server PRI-PCI.</help>
			</entry>
			<entry name="ISDN_DIVAS_DIVACAPI">
				<label>DIVA CAPI2.0 interface support</label>
				<help>You need this to provide the CAPI interface
for DIVA Server cards.</help>
			</entry>
			<entry name="ISDN_DIVAS_USERIDI">
				<label>DIVA User-IDI interface support</label>
				<help>Enable support for user-mode IDI interface.</help>
			</entry>
			<entry name="ISDN_DIVAS_MAINT">
				<label>DIVA Maint driver support</label>
				<help>Enable Divas Maintenance driver.</help>
			</entry>
			<entry name="ISDN_DRV_GIGASET">
				<label>Siemens Gigaset support</label>
				<help>This driver supports the Siemens Gigaset SX205/255 family of
ISDN DECT bases, including the predecessors Gigaset 3070/3075
and 4170/4175 and their T-Com versions Sinus 45isdn and Sinus
721X.
If you have one of these devices, say M here and for at least
one of the connection specific parts that follow.
This will build a module called &quot;gigaset&quot;.
Note: If you build your ISDN subsystem (ISDN_CAPI or ISDN_I4L)
as a module, you have to build this driver as a module too,
otherwise the Gigaset device won't show up as an ISDN device.</help>
			</entry>
			<entry name="GIGASET_CAPI">
				<label>Gigaset CAPI support</label>
				<help>Build the Gigaset driver as a CAPI 2.0 driver interfacing with
the Kernel CAPI subsystem. To use it with the old ISDN4Linux
subsystem you'll have to enable the capidrv glue driver.
(select ISDN_CAPI_CAPIDRV.)
Say N to build the old native ISDN4Linux variant.
If unsure, say Y.</help>
			</entry>
			<entry name="GIGASET_I4L"/>
			<entry name="GIGASET_DUMMYLL"/>
			<entry name="GIGASET_BASE">
				<label>Gigaset base station support</label>
				<help>Say M here if you want to use the USB interface of the Gigaset
base for connection to your system.
This will build a module called &quot;bas_gigaset&quot;.</help>
			</entry>
			<entry name="GIGASET_M105">
				<label>Gigaset M105 support</label>
				<help>Say M here if you want to connect to the Gigaset base via DECT
using a Gigaset M105 (Sinus 45 Data 2) USB DECT device.
This will build a module called &quot;usb_gigaset&quot;.</help>
			</entry>
			<entry name="GIGASET_M101">
				<label>Gigaset M101 support</label>
				<help>Say M here if you want to connect to the Gigaset base via DECT
using a Gigaset M101 (Sinus 45 Data 1) RS232 DECT device.
This will build a module called &quot;ser_gigaset&quot;.</help>
			</entry>
			<entry name="GIGASET_DEBUG">
				<label>Gigaset debugging</label>
				<help>This enables debugging code in the Gigaset drivers.
If in doubt, say yes.</help>
			</entry>
			<entry name="HYSDN">
				<label>Hypercope HYSDN cards (Champ, Ergo, Metro) support (module only)</label>
				<help>Say Y here if you have one of Hypercope's active PCI ISDN cards
Champ, Ergo and Metro. You will then get a module called hysdn.
Please read the file &lt;file:Documentation/isdn/README.hysdn&gt; for more
information.</help>
			</entry>
			<entry name="HYSDN_CAPI">
				<label>HYSDN CAPI 2.0 support</label>
				<help>Say Y here if you like to use Hypercope's CAPI 2.0 interface.
</help>
			</entry>
			<entry name="MISDN">
				<label>Modular ISDN driver</label>
				<help>Enable support for the modular ISDN driver.</help>
			</entry>
			<entry name="MISDN_DSP">
				<label>Digital Audio Processing of transparent data</label>
				<help>Enable support for digital audio processing capability.

This module may be used for special applications that require
cross connecting of bchannels, conferencing, dtmf decoding,
echo cancellation, tone generation, and Blowfish encryption and
decryption. It may use hardware features if available.

E.g. it is required for PBX4Linux. Go to http://isdn.eversberg.eu
and get more information about this module and its usage.

If unsure, say 'N'.</help>
			</entry>
			<entry name="MISDN_L1OIP">
				<label>ISDN over IP tunnel</label>
				<help>Enable support for ISDN over IP tunnel.

It features:
- dynamic IP exchange, if one or both peers have dynamic IPs
- BRI (S0) and PRI (S2M) interface
- layer 1 control via network keepalive frames
- direct tunneling of physical interface via IP

NOTE: This protocol is called 'Layer 1 over IP' and is not
compatible with ISDNoIP (Agfeo) or TDMoIP. Protocol description is
provided in the source code.</help>
			</entry>
			<entry name="MISDN_HFCPCI">
				<label>Support for HFC PCI cards</label>
				<help>Enable support for cards with Cologne Chip AG's
HFC PCI chip.</help>
			</entry>
			<entry name="MISDN_HFCMULTI">
				<label>Support for HFC multiport cards (HFC-4S/8S/E1)</label>
				<help>Enable support for cards with Cologne Chip AG's HFC multiport
chip. There are three types of chips that are quite similar,
but the interface is different:
* HFC-4S (4 S/T interfaces on one chip)
* HFC-8S (8 S/T interfaces on one chip)
* HFC-E1 (E1 interface for 2Mbit ISDN)</help>
			</entry>
			<entry name="MISDN_HFCMULTI_8xx">
				<label>Support for XHFC embedded board in HFC multiport driver</label>
				<help>Enable support for the XHFC embedded solution from Speech Design.</help>
			</entry>
			<entry name="MISDN_HFCUSB">
				<label>Support for HFC-S USB based TAs</label>
				<help>Enable support for USB ISDN TAs with Cologne Chip AG's
HFC-S USB ISDN Controller</help>
			</entry>
			<entry name="MISDN_AVMFRITZ">
				<label>Support for AVM FRITZ!CARD PCI</label>
				<help>Enable support for AVMs FRITZ!CARD PCI cards</help>
			</entry>
			<entry name="MISDN_SPEEDFAX">
				<label>Support for Sedlbauer Speedfax+</label>
				<help>Enable support for Sedlbauer Speedfax+.</help>
			</entry>
			<entry name="MISDN_INFINEON">
				<label>Support for cards with Infineon chipset</label>
				<help>Enable support for cards with ISAC + HSCX, IPAC or IPAC-SX
chip from Infineon (former manufacturer Siemens).</help>
			</entry>
			<entry name="MISDN_W6692">
				<label>Support for cards with Winbond 6692</label>
				<help>Enable support for Winbond 6692 PCI chip based cards.</help>
			</entry>
			<entry name="MISDN_NETJET">
				<label>Support for NETJet cards</label>
				<help>Enable support for Traverse Technologies NETJet PCI cards.</help>
			</entry>
			<entry name="MISDN_IPAC"/>
			<entry name="MISDN_ISAR"/>
			<entry name="ISDN_HDLC"/>
			<entry name="NVM">
				<label>Open-Channel SSD target support</label>
				<help>Say Y here to get to enable Open-channel SSDs.

Open-Channel SSDs implement a set of extension to SSDs, that
exposes direct access to the underlying non-volatile memory.

If you say N, all options in this submenu will be skipped and disabled
only do this if you know what you are doing.</help>
			</entry>
			<entry name="NVM_DEBUG">
				<label>Open-Channel SSD debugging support</label>
				<help>Exposes a debug management interface to create/remove targets at:

/sys/module/lnvm/parameters/configure_debug

It is required to create/remove targets without IOCTLs.</help>
			</entry>
			<entry name="NVM_GENNVM">
				<label>General Non-Volatile Memory Manager for Open-Channel SSDs</label>
				<help>Non-volatile memory media manager for Open-Channel SSDs that implements
physical media metadata management and block provisioning API.

This is the standard media manager for using Open-Channel SSDs, and
required for targets to be instantiated.</help>
			</entry>
			<entry name="NVM_RRPC">
				<label>Round-robin Hybrid Open-Channel SSD target</label>
				<help>Allows an open-channel SSD to be exposed as a block device to the
host. The target is implemented using a linear mapping table and
cost-based garbage collection. It is optimized for 4K IO sizes.</help>
			</entry>
			<container name="Input_device_support">
				<label>Input device support</label>
				<entry name="INPUT">
					<label>Generic input layer (needed for keyboard, mouse, ...)&quot; if EXPERT</label>
					<help>Say Y here if you have any input device (mouse, keyboard, tablet,
joystick, steering wheel ...) connected to your system and want
it to be available to applications. This includes standard PS/2
keyboard and mouse.

Say N here if you have a headless (no monitor, no keyboard) system.

More information is available: &lt;file:Documentation/input/input.txt&gt;

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called input.</help>
				</entry>
				<entry name="INPUT_LEDS">
					<label>Export input device LEDs in sysfs</label>
					<help>Say Y here if you would like to export LEDs on input devices
as standard LED class devices in sysfs.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called input-leds.</help>
				</entry>
				<entry name="INPUT_FF_MEMLESS">
					<label>Support for memoryless force-feedback devices</label>
					<help>Say Y here if you have memoryless force-feedback input device
such as Logitech WingMan Force 3D, ThrustMaster FireStorm Dual
Power 2, or similar. You will also need to enable hardware-specific
driver.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ff-memless.</help>
				</entry>
				<entry name="INPUT_POLLDEV">
					<label>Polled input device skeleton</label>
					<help>Say Y here if you are using a driver for an input
device that periodically polls hardware state. This
option is only useful for out-of-tree drivers since
in-tree drivers select it automatically.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called input-polldev.</help>
				</entry>
				<entry name="INPUT_SPARSEKMAP">
					<label>Sparse keymap support library</label>
					<help>Say Y here if you are using a driver for an input
device that uses sparse keymap. This option is only
useful for out-of-tree drivers since in-tree drivers
select it automatically.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called sparse-keymap.</help>
				</entry>
				<entry name="INPUT_MATRIXKMAP">
					<label>Matrix keymap support library</label>
					<help>Say Y here if you are using a driver for an input
device that uses matrix keymap. This option is only
useful for out-of-tree drivers since in-tree drivers
select it automatically.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called matrix-keymap.</help>
				</entry>
				<entry name="INPUT_MOUSEDEV">
					<label>Mouse interface</label>
					<help>Say Y here if you want your mouse to be accessible as char devices
13:32+ - /dev/input/mouseX and 13:63 - /dev/input/mice as an
emulated IntelliMouse Explorer PS/2 mouse. That way, all user space
programs (including SVGAlib, GPM and X) will be able to use your
mouse.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called mousedev.</help>
				</entry>
				<entry name="INPUT_MOUSEDEV_PSAUX">
					<label>Provide legacy /dev/psaux device</label>
					<help>Say Y here if you want your mouse also be accessible as char device
10:1 - /dev/psaux. The data available through /dev/psaux is exactly
the same as the data from /dev/input/mice.

If unsure, say Y.</help>
				</entry>
				<entry name="INPUT_MOUSEDEV_SCREEN_X">
					<label>Horizontal screen resolution</label>
					<help>If you're using a digitizer, or a graphic tablet, and want to use
it as a mouse then the mousedev driver needs to know the X window
screen resolution you are using to correctly scale the data. If
you're not using a digitizer, this value is ignored.</help>
				</entry>
				<entry name="INPUT_MOUSEDEV_SCREEN_Y">
					<label>Vertical screen resolution</label>
					<help>If you're using a digitizer, or a graphic tablet, and want to use
it as a mouse then the mousedev driver needs to know the X window
screen resolution you are using to correctly scale the data. If
you're not using a digitizer, this value is ignored.</help>
				</entry>
				<entry name="INPUT_JOYDEV">
					<label>Joystick interface</label>
					<help>Say Y here if you want your joystick or gamepad to be
accessible as char device 13:0+ - /dev/input/jsX device.

If unsure, say Y.

More information is available: &lt;file:Documentation/input/joystick.txt&gt;

To compile this driver as a module, choose M here: the
module will be called joydev.</help>
				</entry>
				<entry name="INPUT_EVDEV">
					<label>Event interface</label>
					<help>Say Y here if you want your input device events be accessible
under char device 13:64+ - /dev/input/eventX in a generic way.

To compile this driver as a module, choose M here: the
module will be called evdev.</help>
				</entry>
				<entry name="INPUT_EVBUG">
					<label>Event debugging</label>
					<help>Say Y here if you have a problem with the input subsystem and
want all events (keypresses, mouse movements), to be output to
the system log. While this is useful for debugging, it's also
a security threat - your keypresses include your passwords, of
course.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called evbug.</help>
				</entry>
				<entry name="INPUT_APMPOWER">
					<label>Input Power Event -&gt; APM Bridge&quot; if EXPERT</label>
					<help>Say Y here if you want suspend key events to trigger a user
requested suspend through APM. This is useful on embedded
systems where such behaviour is desired without userspace
interaction. If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called apm-power.</help>
				</entry>
				<entry name="INPUT_KEYBOARD">
					<label>Keyboards</label>
					<help>Say Y here, and a list of supported keyboards will be displayed.
This option doesn't affect the kernel.

If unsure, say Y.</help>
				</entry>
				<entry name="KEYBOARD_ADP5520">
					<label>Keypad Support for ADP5520 PMIC</label>
					<help>This option enables support for the keypad scan matrix
on Analog Devices ADP5520 PMICs.

To compile this driver as a module, choose M here: the module will
be called adp5520-keys.</help>
				</entry>
				<entry name="KEYBOARD_ADP5588">
					<label>ADP5588/87 I2C QWERTY Keypad and IO Expander</label>
					<help>Say Y here if you want to use a ADP5588/87 attached to your
system I2C bus.

To compile this driver as a module, choose M here: the
module will be called adp5588-keys.</help>
				</entry>
				<entry name="KEYBOARD_ADP5589">
					<label>ADP5585/ADP5589 I2C QWERTY Keypad and IO Expander</label>
					<help>Say Y here if you want to use a ADP5585/ADP5589 attached to your
system I2C bus.

To compile this driver as a module, choose M here: the
module will be called adp5589-keys.</help>
				</entry>
				<entry name="KEYBOARD_AMIGA">
					<label>Amiga keyboard</label>
					<help>Say Y here if you are running Linux on any AMIGA and have a keyboard
attached.

To compile this driver as a module, choose M here: the
module will be called amikbd.</help>
				</entry>
				<entry name="ATARI_KBD_CORE"/>
				<entry name="KEYBOARD_ATARI">
					<label>Atari keyboard</label>
					<help>Say Y here if you are running Linux on any Atari and have a keyboard
attached.

To compile this driver as a module, choose M here: the
module will be called atakbd.</help>
				</entry>
				<entry name="KEYBOARD_ATKBD">
					<label>AT keyboard</label>
					<help>Say Y here if you want to use a standard AT or PS/2 keyboard. Usually
you'll need this, unless you have a different type keyboard (USB, ADB
or other). This also works for AT and PS/2 keyboards connected over a
PS/2 to serial converter.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called atkbd.</help>
				</entry>
				<entry name="KEYBOARD_ATKBD_HP_KEYCODES">
					<label>Use HP keyboard scancodes</label>
					<help>Say Y here if you have a PA-RISC machine and want to use an AT or
PS/2 keyboard, and your keyboard uses keycodes that are specific to
PA-RISC keyboards.

Say N if you use a standard keyboard.</help>
				</entry>
				<entry name="KEYBOARD_ATKBD_RDI_KEYCODES">
					<label>Use PrecisionBook keyboard scancodes</label>
					<help>If you have an RDI PrecisionBook, say Y here if you want to use its
built-in keyboard (as opposed to an external keyboard).

The PrecisionBook has five keys that conflict with those used by most
AT and PS/2 keyboards. These are as follows:

PrecisionBook    Standard AT or PS/2

F1               F12
Left Ctrl        Left Alt
Caps Lock        Left Ctrl
Right Ctrl       Caps Lock
Left             102nd key (the key to the right of Left Shift)

If you say N here, and use the PrecisionBook keyboard, then each key
in the left-hand column will be interpreted as the corresponding key
in the right-hand column.

If you say Y here, and use an external keyboard, then each key in the
right-hand column will be interpreted as the key shown in the
left-hand column.</help>
				</entry>
				<entry name="KEYBOARD_QT1070">
					<label>Atmel AT42QT1070 Touch Sensor Chip</label>
					<help>Say Y here if you want to use Atmel AT42QT1070 QTouch
Sensor chip as input device.

To compile this driver as a module, choose M here:
the module will be called qt1070</help>
				</entry>
				<entry name="KEYBOARD_QT2160">
					<label>Atmel AT42QT2160 Touch Sensor Chip</label>
					<help>If you say yes here you get support for Atmel AT42QT2160 Touch
Sensor chip as a keyboard input.

This driver can also be built as a module. If so, the module
will be called qt2160.</help>
				</entry>
				<entry name="KEYBOARD_BFIN">
					<label>Blackfin BF54x keypad support</label>
					<help>Say Y here if you want to use the BF54x keypad.

To compile this driver as a module, choose M here: the
module will be called bf54x-keys.</help>
				</entry>
				<entry name="KEYBOARD_CLPS711X">
					<label>CLPS711X Keypad support</label>
					<help>Say Y here to enable the matrix keypad on the Cirrus Logic
CLPS711X CPUs.

To compile this driver as a module, choose M here: the
module will be called clps711x-keypad.</help>
				</entry>
				<entry name="KEYBOARD_LKKBD">
					<label>DECstation/VAXstation LK201/LK401 keyboard</label>
					<help>Say Y here if you want to use a LK201 or LK401 style serial
keyboard. This keyboard is also useable on PCs if you attach
it with the inputattach program. The connector pinout is
described within lkkbd.c.

To compile this driver as a module, choose M here: the
module will be called lkkbd.</help>
				</entry>
				<entry name="KEYBOARD_EP93XX">
					<label>EP93xx Matrix Keypad support</label>
					<help>Say Y here to enable the matrix keypad on the Cirrus EP93XX.

To compile this driver as a module, choose M here: the
module will be called ep93xx_keypad.</help>
				</entry>
				<entry name="KEYBOARD_GPIO">
					<label>GPIO Buttons</label>
					<help>This driver implements support for buttons connected
to GPIO pins of various CPUs (and some other chips).

Say Y here if your device has buttons connected
directly to such GPIO pins.  Your board-specific
setup logic must also provide a platform device,
with configuration data saying which GPIOs are used.

To compile this driver as a module, choose M here: the
module will be called gpio_keys.</help>
				</entry>
				<entry name="KEYBOARD_GPIO_POLLED">
					<label>Polled GPIO buttons</label>
					<help>This driver implements support for buttons connected
to GPIO pins that are not capable of generating interrupts.

Say Y here if your device has buttons connected
directly to such GPIO pins.  Your board-specific
setup logic must also provide a platform device,
with configuration data saying which GPIOs are used.

To compile this driver as a module, choose M here: the
module will be called gpio_keys_polled.</help>
				</entry>
				<entry name="KEYBOARD_TCA6416">
					<label>TCA6416/TCA6408A Keypad Support</label>
					<help>This driver implements basic keypad functionality
for keys connected through TCA6416/TCA6408A IO expanders.

Say Y here if your device has keys connected to
TCA6416/TCA6408A IO expander. Your board-specific setup logic
must also provide pin-mask details(of which TCA6416 pins
are used for keypad).

If enabled the entire TCA6416 device will be managed through
this driver.

To compile this driver as a module, choose M here: the
module will be called tca6416_keypad.</help>
				</entry>
				<entry name="KEYBOARD_TCA8418">
					<label>TCA8418 Keypad Support</label>
					<help>This driver implements basic keypad functionality
for keys connected through TCA8418 keypad decoder.

Say Y here if your device has keys connected to
TCA8418 keypad decoder.

If enabled the complete TCA8418 device will be managed through
this driver.

To compile this driver as a module, choose M here: the
module will be called tca8418_keypad.</help>
				</entry>
				<entry name="KEYBOARD_MATRIX">
					<label>GPIO driven matrix keypad support</label>
					<help>Enable support for GPIO driven matrix keypad.

To compile this driver as a module, choose M here: the
module will be called matrix_keypad.</help>
				</entry>
				<entry name="KEYBOARD_HIL_OLD">
					<label>HP HIL keyboard support (simple driver)</label>
					<help>The &quot;Human Interface Loop&quot; is a older, 8-channel USB-like
controller used in several Hewlett Packard models. This driver
was adapted from the one written for m68k/hp300, and implements
support for a keyboard attached to the HIL port, but not for
any other types of HIL input devices like mice or tablets.
However, it has been thoroughly tested and is stable.

If you want full HIL support including support for multiple
keyboards, mice, and tablets, you have to enable the
&quot;HP System Device Controller i8042 Support&quot; in the input/serio
submenu.</help>
				</entry>
				<entry name="KEYBOARD_HIL">
					<label>HP HIL keyboard/pointer support</label>
					<help>The &quot;Human Interface Loop&quot; is a older, 8-channel USB-like
controller used in several Hewlett Packard models.
This driver implements support for HIL-keyboards and pointing
devices (mice, tablets, touchscreens) attached
to your machine, so normally you should say Y here.</help>
				</entry>
				<entry name="KEYBOARD_HP6XX">
					<label>HP Jornada 6xx keyboard</label>
					<help>Say Y here if you have a HP Jornada 620/660/680/690 and want to
support the built-in keyboard.

To compile this driver as a module, choose M here: the
module will be called jornada680_kbd.</help>
				</entry>
				<entry name="KEYBOARD_HP7XX">
					<label>HP Jornada 7xx keyboard</label>
					<help>Say Y here if you have a HP Jornada 710/720/728 and want to
support the built-in keyboard.

To compile this driver as a module, choose M here: the
module will be called jornada720_kbd.</help>
				</entry>
				<entry name="KEYBOARD_LM8323">
					<label>LM8323 keypad chip</label>
					<help>If you say yes here you get support for the National Semiconductor
LM8323 keypad controller.

To compile this driver as a module, choose M here: the
module will be called lm8323.</help>
				</entry>
				<entry name="KEYBOARD_LM8333">
					<label>LM8333 keypad chip</label>
					<help>If you say yes here you get support for the National Semiconductor
LM8333 keypad controller.

To compile this driver as a module, choose M here: the
module will be called lm8333.</help>
				</entry>
				<entry name="KEYBOARD_LOCOMO">
					<label>LoCoMo Keyboard Support</label>
					<help>Say Y here if you are running Linux on a Sharp Zaurus Collie or Poodle based PDA

To compile this driver as a module, choose M here: the
module will be called locomokbd.</help>
				</entry>
				<entry name="KEYBOARD_LPC32XX">
					<label>LPC32XX matrix key scanner support</label>
					<help>Say Y here if you want to use NXP LPC32XX SoC key scanner interface,
connected to a key matrix.

To compile this driver as a module, choose M here: the
module will be called lpc32xx-keys.</help>
				</entry>
				<entry name="KEYBOARD_MAPLE">
					<label>Maple bus keyboard</label>
					<help>Say Y here if you have a Dreamcast console running Linux and have
a keyboard attached to its Maple bus.

To compile this driver as a module, choose M here: the
module will be called maple_keyb.</help>
				</entry>
				<entry name="KEYBOARD_MAX7359">
					<label>Maxim MAX7359 Key Switch Controller</label>
					<help>If you say yes here you get support for the Maxim MAX7359 Key
Switch Controller chip. This providers microprocessors with
management of up to 64 key switches

To compile this driver as a module, choose M here: the
module will be called max7359_keypad.</help>
				</entry>
				<entry name="KEYBOARD_MCS">
					<label>MELFAS MCS Touchkey</label>
					<help>Say Y here if you have the MELFAS MCS5000/5080 touchkey controller
chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mcs_touchkey.</help>
				</entry>
				<entry name="KEYBOARD_MPR121">
					<label>Freescale MPR121 Touchkey</label>
					<help>Say Y here if you have Freescale MPR121 touchkey controller
chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mpr121_touchkey.</help>
				</entry>
				<entry name="KEYBOARD_SNVS_PWRKEY">
					<label>IMX SNVS Power Key Driver</label>
					<help>This is the snvs powerkey driver for the Freescale i.MX application
processors that are newer than i.MX6 SX.

To compile this driver as a module, choose M here; the
module will be called snvs_pwrkey.</help>
				</entry>
				<entry name="KEYBOARD_IMX">
					<label>IMX keypad support</label>
					<help>Enable support for IMX keypad port.

To compile this driver as a module, choose M here: the
module will be called imx_keypad.</help>
				</entry>
				<entry name="KEYBOARD_NEWTON">
					<label>Newton keyboard</label>
					<help>Say Y here if you have a Newton keyboard on a serial port.

To compile this driver as a module, choose M here: the
module will be called newtonkbd.</help>
				</entry>
				<entry name="KEYBOARD_NOMADIK">
					<label>ST-Ericsson Nomadik SKE keyboard</label>
					<help>Say Y here if you want to use a keypad provided on the SKE controller
used on the Ux500 and Nomadik platforms

To compile this driver as a module, choose M here: the
module will be called nmk-ske-keypad.</help>
				</entry>
				<entry name="KEYBOARD_NSPIRE">
					<label>TI-NSPIRE built-in keyboard</label>
					<help>Say Y here if you want to use the built-in keypad on TI-NSPIRE.

To compile this driver as a module, choose M here: the
module will be called nspire-keypad.</help>
				</entry>
				<entry name="KEYBOARD_TEGRA">
					<label>NVIDIA Tegra internal matrix keyboard controller support</label>
					<help>Say Y here if you want to use a matrix keyboard connected directly
to the internal keyboard controller on Tegra SoCs.

To compile this driver as a module, choose M here: the
module will be called tegra-kbc.</help>
				</entry>
				<entry name="KEYBOARD_OPENCORES">
					<label>OpenCores Keyboard Controller</label>
					<help>Say Y here if you want to use the OpenCores Keyboard Controller
http://www.opencores.org/project,keyboardcontroller

To compile this driver as a module, choose M here; the
module will be called opencores-kbd.</help>
				</entry>
				<entry name="KEYBOARD_PXA27x">
					<label>PXA27x/PXA3xx keypad support</label>
					<help>Enable support for PXA27x/PXA3xx keypad controller.

To compile this driver as a module, choose M here: the
module will be called pxa27x_keypad.</help>
				</entry>
				<entry name="KEYBOARD_PXA930_ROTARY">
					<label>PXA930/PXA935 Enhanced Rotary Controller Support</label>
					<help>Enable support for PXA930/PXA935 Enhanced Rotary Controller.

To compile this driver as a module, choose M here: the
module will be called pxa930_rotary.</help>
				</entry>
				<entry name="KEYBOARD_PMIC8XXX">
					<label>Qualcomm PMIC8XXX keypad support</label>
					<help>Say Y here if you want to enable the driver for the PMIC8XXX
keypad provided as a reference design from Qualcomm. This is intended
to support upto 18x8 matrix based keypad design.

To compile this driver as a module, choose M here: the module will
be called pmic8xxx-keypad.</help>
				</entry>
				<entry name="KEYBOARD_SAMSUNG">
					<label>Samsung keypad support</label>
					<help>Say Y here if you want to use the keypad on your Samsung mobile
device.

To compile this driver as a module, choose M here: the
module will be called samsung-keypad.</help>
				</entry>
				<entry name="KEYBOARD_GOLDFISH_EVENTS">
					<label>Generic Input Event device for Goldfish</label>
					<help>Say Y here to get an input event device for the Goldfish virtual
device emulator.

To compile this driver as a module, choose M here: the
module will be called goldfish-events.</help>
				</entry>
				<entry name="KEYBOARD_STOWAWAY">
					<label>Stowaway keyboard</label>
					<help>Say Y here if you have a Stowaway keyboard on a serial port.
Stowaway compatible keyboards like Dicota Input-PDA keyboard
are also supported by this driver.

To compile this driver as a module, choose M here: the
module will be called stowaway.</help>
				</entry>
				<entry name="KEYBOARD_ST_KEYSCAN">
					<label>STMicroelectronics keyscan support</label>
					<help>Say Y here if you want to use a keypad attached to the keyscan block
on some STMicroelectronics SoC devices.

To compile this driver as a module, choose M here: the
module will be called st-keyscan.</help>
				</entry>
				<entry name="KEYBOARD_SUNKBD">
					<label>Sun Type 4 and Type 5 keyboard</label>
					<help>Say Y here if you want to use a Sun Type 4 or Type 5 keyboard,
connected either to the Sun keyboard connector or to an serial
(RS-232) port via a simple adapter.

To compile this driver as a module, choose M here: the
module will be called sunkbd.</help>
				</entry>
				<entry name="KEYBOARD_SH_KEYSC">
					<label>SuperH KEYSC keypad support</label>
					<help>Say Y here if you want to use a keypad attached to the KEYSC block
on SuperH processors such as sh7722 and sh7343.

To compile this driver as a module, choose M here: the
module will be called sh_keysc.</help>
				</entry>
				<entry name="KEYBOARD_STMPE">
					<label>STMPE keypad support</label>
					<help>Say Y here if you want to use the keypad controller on STMPE I/O
expanders.

To compile this driver as a module, choose M here: the module will be
called stmpe-keypad.</help>
				</entry>
				<entry name="KEYBOARD_SUN4I_LRADC">
					<label>Allwinner sun4i low res adc attached tablet keys support</label>
					<help>This selects support for the Allwinner low res adc attached tablet
keys found on Allwinner sunxi SoCs.

To compile this driver as a module, choose M here: the
module will be called sun4i-lradc-keys.</help>
				</entry>
				<entry name="KEYBOARD_DAVINCI">
					<label>TI DaVinci Key Scan</label>
					<help>Say Y to enable keypad module support for the TI DaVinci
platforms (DM365).

To compile this driver as a module, choose M here: the
module will be called davinci_keyscan.</help>
				</entry>
				<entry name="KEYBOARD_IPAQ_MICRO">
					<label>Buttons on Micro SoC (iPaq h3100,h3600,h3700)</label>
					<help>Say Y to enable support for the buttons attached to
Micro peripheral controller on iPAQ h3100/h3600/h3700

To compile this driver as a module, choose M here: the
module will be called ipaq-micro-keys.</help>
				</entry>
				<entry name="KEYBOARD_OMAP">
					<label>TI OMAP keypad support</label>
					<help>Say Y here if you want to use the OMAP keypad.

To compile this driver as a module, choose M here: the
module will be called omap-keypad.</help>
				</entry>
				<entry name="KEYBOARD_OMAP4">
					<label>TI OMAP4+ keypad support</label>
					<help>Say Y here if you want to use the OMAP4+ keypad.

To compile this driver as a module, choose M here: the
module will be called omap4-keypad.</help>
				</entry>
				<entry name="KEYBOARD_SPEAR">
					<label>ST SPEAR keyboard support</label>
					<help>Say Y here if you want to use the SPEAR keyboard.

To compile this driver as a module, choose M here: the
module will be called spear-keboard.</help>
				</entry>
				<entry name="KEYBOARD_TC3589X">
					<label>TC3589X Keypad support</label>
					<help>Say Y here if you want to use the keypad controller on
TC35892/3 I/O expander.

To compile this driver as a module, choose M here: the
module will be called tc3589x-keypad.</help>
				</entry>
				<entry name="KEYBOARD_TWL4030">
					<label>TI TWL4030/TWL5030/TPS659x0 keypad support</label>
					<help>Say Y here if your board use the keypad controller on
TWL4030 family chips.  It's safe to say enable this
even on boards that don't use the keypad controller.

To compile this driver as a module, choose M here: the
module will be called twl4030_keypad.</help>
				</entry>
				<entry name="KEYBOARD_XTKBD">
					<label>XT keyboard</label>
					<help>Say Y here if you want to use the old IBM PC/XT keyboard (or
compatible) on your system. This is only possible with a
parallel port keyboard adapter, you cannot connect it to the
keyboard port on a PC that runs Linux.

To compile this driver as a module, choose M here: the
module will be called xtkbd.</help>
				</entry>
				<entry name="KEYBOARD_W90P910">
					<label>W90P910 Matrix Keypad support</label>
					<help>Say Y here to enable the matrix keypad on evaluation board
based on W90P910.

To compile this driver as a module, choose M here: the
module will be called w90p910_keypad.</help>
				</entry>
				<entry name="KEYBOARD_CROS_EC">
					<label>ChromeOS EC keyboard</label>
					<help>Say Y here to enable the matrix keyboard used by ChromeOS devices
and implemented on the ChromeOS EC. You must enable one bus option
(MFD_CROS_EC_I2C or MFD_CROS_EC_SPI) to use this.

To compile this driver as a module, choose M here: the
module will be called cros_ec_keyb.</help>
				</entry>
				<entry name="KEYBOARD_CAP11XX">
					<label>Microchip CAP11XX based touch sensors</label>
					<help>Say Y here to enable the CAP11XX touch sensor driver.

To compile this driver as a module, choose M here: the
module will be called cap11xx.</help>
				</entry>
				<entry name="KEYBOARD_BCM">
					<label>Broadcom keypad driver</label>
					<help>Say Y here if you want to use Broadcom keypad.

To compile this driver as a module, choose M here: the
module will be called bcm-keypad.</help>
				</entry>
				<entry name="INPUT_MOUSE">
					<label>Mice</label>
					<help>Say Y here, and a list of supported mice will be displayed.
This option doesn't affect the kernel.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2">
					<label>PS/2 mouse</label>
					<help>Say Y here if you have a PS/2 mouse connected to your system. This
includes the standard 2 or 3-button PS/2 mouse, as well as PS/2
mice with wheels and extra buttons, Microsoft, Logitech or Genius
compatible.

Synaptics, ALPS or Elantech TouchPad users might be interested
in a specialized Xorg/XFree86 driver at:
&lt;http://w1.894.telia.com/~u89404340/touchpad/index.html&gt;
and a new version of GPM at:
&lt;http://www.geocities.com/dt_or/gpm/gpm.html&gt;
&lt;http://xorg.freedesktop.org/archive/individual/driver/&gt;
to take advantage of the advanced features of the touchpad.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called psmouse.</help>
				</entry>
				<entry name="MOUSE_PS2_ALPS">
					<label>ALPS PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have an ALPS PS/2 touchpad connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_BYD">
					<label>BYD PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a BYD PS/2 touchpad connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_LOGIPS2PP">
					<label>Logitech PS/2++ mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a Logitech PS/2++ mouse connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_SYNAPTICS">
					<label>Synaptics PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a Synaptics PS/2 TouchPad connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_CYPRESS">
					<label>Cypress PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a Cypress PS/2 Trackpad connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_LIFEBOOK">
					<label>Fujitsu Lifebook PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a Fujitsu B-series Lifebook PS/2
TouchScreen connected to your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_TRACKPOINT">
					<label>IBM Trackpoint PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have an IBM Trackpoint PS/2 mouse connected
to your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_ELANTECH">
					<label>Elantech PS/2 protocol extension</label>
					<help>Say Y here if you have an Elantech PS/2 touchpad connected
to your system.

This driver exposes some configuration registers via sysfs
entries. For further information,
see &lt;file:Documentation/input/elantech.txt&gt;.

If unsure, say N.</help>
				</entry>
				<entry name="MOUSE_PS2_SENTELIC">
					<label>Sentelic Finger Sensing Pad PS/2 protocol extension</label>
					<help>Say Y here if you have a laptop (such as MSI WIND Netbook)
with Sentelic Finger Sensing Pad touchpad.

If unsure, say N.</help>
				</entry>
				<entry name="MOUSE_PS2_TOUCHKIT">
					<label>eGalax TouchKit PS/2 protocol extension</label>
					<help>Say Y here if you have an eGalax TouchKit PS/2 touchscreen
connected to your system.

If unsure, say N.</help>
				</entry>
				<entry name="MOUSE_PS2_OLPC">
					<label>OLPC PS/2 mouse protocol extension</label>
					<help>Say Y here if you have an OLPC XO-1 laptop (with built-in
PS/2 touchpad/tablet device).  The manufacturer calls the
touchpad an HGPK.

If unsure, say N.</help>
				</entry>
				<entry name="MOUSE_PS2_FOCALTECH">
					<label>FocalTech PS/2 mouse protocol extension&quot; if EXPERT</label>
					<help>Say Y here if you have a FocalTech PS/2 TouchPad connected to
your system.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_PS2_VMMOUSE">
					<label>Virtual mouse (vmmouse)</label>
					<help>Say Y here if you are running under control of VMware hypervisor
(ESXi, Workstation or Fusion). Also make sure that when you enable
this option, you remove the xf86-input-vmmouse user-space driver
or upgrade it to at least xf86-input-vmmouse 13.1.0, which doesn't
load in the presence of an in-kernel vmmouse driver.

If unsure, say N.</help>
				</entry>
				<entry name="MOUSE_SERIAL">
					<label>Serial mouse</label>
					<help>Say Y here if you have a serial (RS-232, COM port) mouse connected
to your system. This includes Sun, MouseSystems, Microsoft,
Logitech and all other compatible serial mice.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called sermouse.</help>
				</entry>
				<entry name="MOUSE_APPLETOUCH">
					<label>Apple USB Touchpad support</label>
					<help>Say Y here if you want to use an Apple USB Touchpad.

These are the touchpads that can be found on post-February 2005
Apple Powerbooks (prior models have a Synaptics touchpad connected
to the ADB bus).

This driver provides a basic mouse driver but can be interfaced
with the synaptics X11 driver to provide acceleration and
scrolling in X11.

For further information, see
&lt;file:Documentation/input/appletouch.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called appletouch.</help>
				</entry>
				<entry name="MOUSE_BCM5974">
					<label>Apple USB BCM5974 Multitouch trackpad support</label>
					<help>Say Y here if you have an Apple USB BCM5974 Multitouch
trackpad.

The BCM5974 is the multitouch trackpad found in the Macbook
Air (JAN2008) and Macbook Pro Penryn (FEB2008) laptops.

It is also found in the IPhone (2007) and Ipod Touch (2008).

This driver provides multitouch functionality together with
the synaptics X11 driver.

The interface is currently identical to the appletouch interface,
for further information, see
&lt;file:Documentation/input/appletouch.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called bcm5974.</help>
				</entry>
				<entry name="MOUSE_CYAPA">
					<label>Cypress APA I2C Trackpad support</label>
					<help>This driver adds support for Cypress All Points Addressable (APA)
I2C Trackpads, including the ones used in 2012 Samsung Chromebooks.

Say Y here if you have a Cypress APA I2C Trackpad.

To compile this driver as a module, choose M here: the module will be
called cyapa.</help>
				</entry>
				<entry name="MOUSE_ELAN_I2C">
					<label>ELAN I2C Touchpad support</label>
					<help>This driver adds support for Elan I2C/SMbus Trackpads.

Say Y here if you have a ELAN I2C/SMbus Touchpad.

To compile this driver as a module, choose M here: the module will be
called elan_i2c.</help>
				</entry>
				<entry name="MOUSE_ELAN_I2C_I2C">
					<label>Enable I2C support</label>
					<help>Say Y here if Elan Touchpad in your system is connected to
a standard I2C controller.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_ELAN_I2C_SMBUS">
					<label>Enable SMbus support</label>
					<help>Say Y here if Elan Touchpad in your system is connected to
a SMbus adapter.

If unsure, say Y.</help>
				</entry>
				<entry name="MOUSE_INPORT">
					<label>InPort/MS/ATIXL busmouse</label>
					<help>Say Y here if you have an InPort, Microsoft or ATI XL busmouse.
They are rather rare these days.

To compile this driver as a module, choose M here: the
module will be called inport.</help>
				</entry>
				<entry name="MOUSE_ATIXL">
					<label>ATI XL variant</label>
					<help>Say Y here if your mouse is of the ATI XL variety.</help>
				</entry>
				<entry name="MOUSE_LOGIBM">
					<label>Logitech busmouse</label>
					<help>Say Y here if you have a Logitech busmouse.
They are rather rare these days.

To compile this driver as a module, choose M here: the
module will be called logibm.</help>
				</entry>
				<entry name="MOUSE_PC110PAD">
					<label>IBM PC110 touchpad</label>
					<help>Say Y if you have the IBM PC-110 micro-notebook and want its
touchpad supported.

To compile this driver as a module, choose M here: the
module will be called pc110pad.</help>
				</entry>
				<entry name="MOUSE_AMIGA">
					<label>Amiga mouse</label>
					<help>Say Y here if you have an Amiga and want its native mouse
supported by the kernel.

To compile this driver as a module, choose M here: the
module will be called amimouse.</help>
				</entry>
				<entry name="MOUSE_ATARI">
					<label>Atari mouse</label>
					<help>Say Y here if you have an Atari and want its native mouse
supported by the kernel.

To compile this driver as a module, choose M here: the
module will be called atarimouse.</help>
				</entry>
				<entry name="MOUSE_RISCPC">
					<label>Acorn RiscPC mouse</label>
					<help>Say Y here if you have the Acorn RiscPC computer and want its
native mouse supported.

To compile this driver as a module, choose M here: the
module will be called rpcmouse.</help>
				</entry>
				<entry name="MOUSE_VSXXXAA">
					<label>DEC VSXXX-AA/GA mouse and VSXXX-AB tablet</label>
					<help>Say Y (or M) if you want to use a DEC VSXXX-AA (hockey
puck) or a VSXXX-GA (rectangular) mouse. Theses mice are
typically used on DECstations or VAXstations, but can also
be used on any box capable of RS232 (with some adaptor
described in the source file). This driver also works with the
digitizer (VSXXX-AB) DEC produced.</help>
				</entry>
				<entry name="MOUSE_GPIO">
					<label>GPIO mouse</label>
					<help>This driver simulates a mouse on GPIO lines of various CPUs (and some
other chips).

Say Y here if your device has buttons or a simple joystick connected
directly to GPIO lines. Your board-specific setup logic must also
provide a platform device and platform data saying which GPIOs are
used.

To compile this driver as a module, choose M here: the
module will be called gpio_mouse.</help>
				</entry>
				<entry name="MOUSE_PXA930_TRKBALL">
					<label>PXA930 Trackball mouse</label>
					<help>Say Y here to support PXA930 Trackball mouse.</help>
				</entry>
				<entry name="MOUSE_MAPLE">
					<label>Maple mouse (for the Dreamcast)</label>
					<help>This driver supports the Maple mouse on the SEGA Dreamcast.

Most Dreamcast users, who have a mouse, will say Y here.

To compile this driver as a module choose M here: the module will be
called maplemouse.</help>
				</entry>
				<entry name="MOUSE_SYNAPTICS_I2C">
					<label>Synaptics I2C Touchpad support</label>
					<help>This driver supports Synaptics I2C touchpad controller on eXeda
mobile device.
The device will not work the synaptics X11 driver because
(i) it  reports only relative coordinates and has no capabilities
to report absolute coordinates
(ii) the eXeda device itself uses Xfbdev as X Server and it does
not allow using xf86-input-* drivers.

Say y here if you have eXeda device and want to use a Synaptics
I2C Touchpad.

To compile this driver as a module, choose M here: the
module will be called synaptics_i2c.</help>
				</entry>
				<entry name="MOUSE_SYNAPTICS_USB">
					<label>Synaptics USB device support</label>
					<help>Say Y here if you want to use a Synaptics USB touchpad or pointing
stick.

While these devices emulate an USB mouse by default and can be used
with standard usbhid driver, this driver, together with its X.Org
counterpart, allows you to fully utilize capabilities of the device.
More information can be found at:
&lt;http://jan-steinhoff.de/linux/synaptics-usb.html&gt;

To compile this driver as a module, choose M here: the
module will be called synaptics_usb.</help>
				</entry>
				<entry name="MOUSE_NAVPOINT_PXA27x">
					<label>Synaptics NavPoint (PXA27x SSP/SPI)</label>
					<help>This driver adds support for the Synaptics NavPoint touchpad connected
to a PXA27x SSP port in SPI slave mode. The device emulates a mouse;
a tap or tap-and-a-half drag gesture emulates the left mouse button.
For example, use the xf86-input-evdev driver for an X pointing device.

To compile this driver as a module, choose M here: the
module will be called navpoint.</help>
				</entry>
				<entry name="INPUT_JOYSTICK">
					<label>Joysticks/Gamepads</label>
					<help>If you have a joystick, 6dof controller, gamepad, steering wheel,
weapon control system or something like that you can say Y here
and the list of supported devices will be displayed. This option
doesn't affect the kernel.

Please read the file &lt;file:Documentation/input/joystick.txt&gt; which
contains more information.</help>
				</entry>
				<entry name="JOYSTICK_ANALOG">
					<label>Classic PC analog joysticks and gamepads</label>
					<help>Say Y here if you have a joystick that connects to the PC
gameport. In addition to the usual PC analog joystick, this driver
supports many extensions, including joysticks with throttle control,
with rudders, additional hats and buttons compatible with CH
Flightstick Pro, ThrustMaster FCS, 6 and 8 button gamepads, or
Saitek Cyborg joysticks.

Please read the file &lt;file:Documentation/input/joystick.txt&gt; which
contains more information.

To compile this driver as a module, choose M here: the
module will be called analog.</help>
				</entry>
				<entry name="JOYSTICK_A3D">
					<label>Assassin 3D and MadCatz Panther devices</label>
					<help>Say Y here if you have an FPGaming or MadCatz controller using the
A3D protocol over the PC gameport.

To compile this driver as a module, choose M here: the
module will be called a3d.</help>
				</entry>
				<entry name="JOYSTICK_ADI">
					<label>Logitech ADI digital joysticks and gamepads</label>
					<help>Say Y here if you have a Logitech controller using the ADI
protocol over the PC gameport.

To compile this driver as a module, choose M here: the
module will be called adi.</help>
				</entry>
				<entry name="JOYSTICK_COBRA">
					<label>Creative Labs Blaster Cobra gamepad</label>
					<help>Say Y here if you have a Creative Labs Blaster Cobra gamepad.

To compile this driver as a module, choose M here: the
module will be called cobra.</help>
				</entry>
				<entry name="JOYSTICK_GF2K">
					<label>Genius Flight2000 Digital joysticks and gamepads</label>
					<help>Say Y here if you have a Genius Flight2000 or MaxFighter digitally
communicating joystick or gamepad.

To compile this driver as a module, choose M here: the
module will be called gf2k.</help>
				</entry>
				<entry name="JOYSTICK_GRIP">
					<label>Gravis GrIP joysticks and gamepads</label>
					<help>Say Y here if you have a Gravis controller using the GrIP protocol
over the PC gameport.

To compile this driver as a module, choose M here: the
module will be called grip.</help>
				</entry>
				<entry name="JOYSTICK_GRIP_MP">
					<label>Gravis GrIP MultiPort</label>
					<help>Say Y here if you have the original Gravis GrIP MultiPort, a hub
that connects to the gameport and you connect gamepads to it.

To compile this driver as a module, choose M here: the
module will be called grip_mp.</help>
				</entry>
				<entry name="JOYSTICK_GUILLEMOT">
					<label>Guillemot joysticks and gamepads</label>
					<help>Say Y here if you have a Guillemot joystick using a digital
protocol over the PC gameport.

To compile this driver as a module, choose M here: the
module will be called guillemot.</help>
				</entry>
				<entry name="JOYSTICK_INTERACT">
					<label>InterAct digital joysticks and gamepads</label>
					<help>Say Y here if you have an InterAct gameport or joystick
communicating digitally over the gameport.

To compile this driver as a module, choose M here: the
module will be called interact.</help>
				</entry>
				<entry name="JOYSTICK_SIDEWINDER">
					<label>Microsoft SideWinder digital joysticks and gamepads</label>
					<help>Say Y here if you have a Microsoft controller using the Digital
Overdrive protocol over PC gameport.

To compile this driver as a module, choose M here: the
module will be called sidewinder.</help>
				</entry>
				<entry name="JOYSTICK_TMDC">
					<label>ThrustMaster DirectConnect joysticks and gamepads</label>
					<help>Say Y here if you have a ThrustMaster controller using the
DirectConnect (BSP) protocol over the PC gameport.

To compile this driver as a module, choose M here: the
module will be called tmdc.</help>
				</entry>
				<entry name="JOYSTICK_IFORCE">
					<label>I-Force devices</label>
					<help>Say Y here if you have an I-Force joystick or steering wheel

You also must choose at least one of the two options below.

To compile this driver as a module, choose M here: the
module will be called iforce.</help>
				</entry>
				<entry name="JOYSTICK_IFORCE_USB">
					<label>I-Force USB joysticks and wheels</label>
					<help>Say Y here if you have an I-Force joystick or steering wheel
connected to your USB port.</help>
				</entry>
				<entry name="JOYSTICK_IFORCE_232">
					<label>I-Force Serial joysticks and wheels</label>
					<help>Say Y here if you have an I-Force joystick or steering wheel
connected to your serial (COM) port.

You will need an additional utility called inputattach, see
&lt;file:Documentation/input/joystick.txt&gt;
and &lt;file:Documentation/input/ff.txt&gt;.

</help>
				</entry>
				<entry name="JOYSTICK_WARRIOR">
					<label>Logitech WingMan Warrior joystick</label>
					<help>Say Y here if you have a Logitech WingMan Warrior joystick connected
to your computer's serial port.

To compile this driver as a module, choose M here: the
module will be called warrior.</help>
				</entry>
				<entry name="JOYSTICK_MAGELLAN">
					<label>LogiCad3d Magellan/SpaceMouse 6dof controllers</label>
					<help>Say Y here if you have a Magellan or Space Mouse 6DOF controller
connected to your computer's serial port.

To compile this driver as a module, choose M here: the
module will be called magellan.</help>
				</entry>
				<entry name="JOYSTICK_SPACEORB">
					<label>SpaceTec SpaceOrb/Avenger 6dof controllers</label>
					<help>Say Y here if you have a SpaceOrb 360 or SpaceBall Avenger 6DOF
controller connected to your computer's serial port.

To compile this driver as a module, choose M here: the
module will be called spaceorb.</help>
				</entry>
				<entry name="JOYSTICK_SPACEBALL">
					<label>SpaceTec SpaceBall 6dof controllers</label>
					<help>Say Y here if you have a SpaceTec SpaceBall 2003/3003/4000 FLX
controller connected to your computer's serial port. For the
SpaceBall 4000 USB model, use the USB HID driver.

To compile this driver as a module, choose M here: the
module will be called spaceball.</help>
				</entry>
				<entry name="JOYSTICK_STINGER">
					<label>Gravis Stinger gamepad</label>
					<help>Say Y here if you have a Gravis Stinger connected to one of your
serial ports.

To compile this driver as a module, choose M here: the
module will be called stinger.</help>
				</entry>
				<entry name="JOYSTICK_TWIDJOY">
					<label>Twiddler as a joystick</label>
					<help>Say Y here if you have a Handykey Twiddler connected to your
computer's serial port and want to use it as a joystick.

To compile this driver as a module, choose M here: the
module will be called twidjoy.</help>
				</entry>
				<entry name="JOYSTICK_ZHENHUA">
					<label>5-byte Zhenhua RC transmitter</label>
					<help>Say Y here if you have a Zhen Hua PPM-4CH transmitter which is
supplied with a ready to fly micro electric indoor helicopters
such as EasyCopter, Lama, MiniCopter, DragonFly or Jabo and want
to use it via serial cable as a joystick.

To compile this driver as a module, choose M here: the
module will be called zhenhua.</help>
				</entry>
				<entry name="JOYSTICK_DB9">
					<label>Multisystem, Sega Genesis, Saturn joysticks and gamepads</label>
					<help>Say Y here if you have a Sega Master System gamepad, Sega Genesis
gamepad, Sega Saturn gamepad, or a Multisystem -- Atari, Amiga,
Commodore, Amstrad CPC joystick connected to your parallel port.
For more information on how to use the driver please read
&lt;file:Documentation/input/joystick-parport.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called db9.</help>
				</entry>
				<entry name="JOYSTICK_GAMECON">
					<label>Multisystem, NES, SNES, N64, PSX joysticks and gamepads</label>
					<help>Say Y here if you have a Nintendo Entertainment System gamepad,
Super Nintendo Entertainment System gamepad, Nintendo 64 gamepad,
Sony PlayStation gamepad or a Multisystem -- Atari, Amiga,
Commodore, Amstrad CPC joystick connected to your parallel port.
For more information on how to use the driver please read
&lt;file:Documentation/input/joystick-parport.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called gamecon.</help>
				</entry>
				<entry name="JOYSTICK_TURBOGRAFX">
					<label>Multisystem joysticks via TurboGraFX device</label>
					<help>Say Y here if you have the TurboGraFX interface by Steffen Schwenke,
and want to use it with Multisystem -- Atari, Amiga, Commodore,
Amstrad CPC joystick. For more information on how to use the driver
please read &lt;file:Documentation/input/joystick-parport.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called turbografx.</help>
				</entry>
				<entry name="JOYSTICK_AMIGA">
					<label>Amiga joysticks</label>
					<help>Say Y here if you have an Amiga with a digital joystick connected
to it.

To compile this driver as a module, choose M here: the
module will be called amijoy.</help>
				</entry>
				<entry name="JOYSTICK_AS5011">
					<label>Austria Microsystem AS5011 joystick</label>
					<help>Say Y here if you have an AS5011 digital joystick connected to your
system.

To compile this driver as a module, choose M here: the
module will be called as5011.</help>
				</entry>
				<entry name="JOYSTICK_JOYDUMP">
					<label>Gameport data dumper</label>
					<help>Say Y here if you want to dump data from your joystick into the system
log for debugging purposes. Say N if you are making a production
configuration or aren't sure.

To compile this driver as a module, choose M here: the
module will be called joydump.</help>
				</entry>
				<entry name="JOYSTICK_XPAD">
					<label>X-Box gamepad support</label>
					<help>Say Y here if you want to use the X-Box pad with your computer.
Make sure to say Y to &quot;Joystick support&quot; (CONFIG_INPUT_JOYDEV)
and/or &quot;Event interface support&quot; (CONFIG_INPUT_EVDEV) as well.

For information about how to connect the X-Box pad to USB, see
&lt;file:Documentation/input/xpad.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called xpad.</help>
				</entry>
				<entry name="JOYSTICK_XPAD_FF">
					<label>X-Box gamepad rumble support</label>
					<help>Say Y here if you want to take advantage of xbox 360 rumble features.</help>
				</entry>
				<entry name="JOYSTICK_XPAD_LEDS">
					<label>LED Support for Xbox360 controller 'BigX' LED</label>
					<help>This option enables support for the LED which surrounds the Big X on
XBox 360 controller.</help>
				</entry>
				<entry name="JOYSTICK_WALKERA0701">
					<label>Walkera WK-0701 RC transmitter</label>
					<help>Say Y or M here if you have a Walkera WK-0701 transmitter which is
supplied with a ready to fly Walkera helicopters such as HM36,
HM37, HM60 and want to use it via parport as a joystick. More
information is available: &lt;file:Documentation/input/walkera0701.txt&gt;

To compile this driver as a module, choose M here: the
module will be called walkera0701.</help>
				</entry>
				<entry name="JOYSTICK_MAPLE">
					<label>Dreamcast control pad</label>
					<help>Say Y here if you have a SEGA Dreamcast and want to use your
controller as a joystick.

Most Dreamcast users will say Y.

To compile this as a module choose M here: the module will be called
maplecontrol.</help>
				</entry>
				<entry name="INPUT_TABLET">
					<label>Tablets</label>
					<help>Say Y here, and a list of supported tablets will be displayed.
This option doesn't affect the kernel.

If unsure, say Y.</help>
				</entry>
				<entry name="TABLET_USB_ACECAD">
					<label>Acecad Flair tablet support (USB)</label>
					<help>Say Y here if you want to use the USB version of the Acecad Flair
tablet.  Make sure to say Y to &quot;Mouse support&quot;
(CONFIG_INPUT_MOUSEDEV) and/or &quot;Event interface support&quot;
(CONFIG_INPUT_EVDEV) as well.

To compile this driver as a module, choose M here: the
module will be called acecad.</help>
				</entry>
				<entry name="TABLET_USB_AIPTEK">
					<label>Aiptek 6000U/8000U and Genius G_PEN tablet support (USB)</label>
					<help>Say Y here if you want to use the USB version of the Aiptek 6000U,
Aiptek 8000U or Genius G-PEN 560 tablet.  Make sure to say Y to
&quot;Mouse support&quot; (CONFIG_INPUT_MOUSEDEV) and/or &quot;Event interface
support&quot; (CONFIG_INPUT_EVDEV) as well.

To compile this driver as a module, choose M here: the
module will be called aiptek.</help>
				</entry>
				<entry name="TABLET_USB_GTCO">
					<label>GTCO CalComp/InterWrite USB Support</label>
					<help>Say Y here if you want to use the USB version of the GTCO
CalComp/InterWrite Tablet.  Make sure to say Y to &quot;Mouse support&quot;
(CONFIG_INPUT_MOUSEDEV) and/or &quot;Event interface support&quot;
(CONFIG_INPUT_EVDEV) as well.

To compile this driver as a module, choose M here: the
module will be called gtco.</help>
				</entry>
				<entry name="TABLET_USB_HANWANG">
					<label>Hanwang Art Master III tablet support (USB)</label>
					<help>Say Y here if you want to use the USB version of the Hanwang Art
Master III tablet.

To compile this driver as a module, choose M here: the
module will be called hanwang.</help>
				</entry>
				<entry name="TABLET_USB_KBTAB">
					<label>KB Gear JamStudio tablet support (USB)</label>
					<help>Say Y here if you want to use the USB version of the KB Gear
JamStudio tablet.  Make sure to say Y to &quot;Mouse support&quot;
(CONFIG_INPUT_MOUSEDEV) and/or &quot;Event interface support&quot;
(CONFIG_INPUT_EVDEV) as well.

To compile this driver as a module, choose M here: the
module will be called kbtab.</help>
				</entry>
				<entry name="TABLET_USB_PEGASUS">
					<label>Pegasus Mobile Notetaker Pen input tablet support</label>
					<help>Say Y here if you want to use the Pegasus Mobile Notetaker,
also known as:
Genie e-note The Notetaker,
Staedtler Digital ballpoint pen 990 01,
IRISnotes Express or
NEWLink Digital Note Taker.

To compile this driver as a module, choose M here: the
module will be called pegasus_notetaker.</help>
				</entry>
				<entry name="TABLET_SERIAL_WACOM4">
					<label>Wacom protocol 4 serial tablet support</label>
					<help>Say Y here if you want to use Wacom protocol 4 serial tablets.
E.g. serial versions of the Cintiq, Graphire or Penpartner.

To compile this driver as a module, choose M here: the
module will be called wacom_serial4.</help>
				</entry>
				<entry name="INPUT_TOUCHSCREEN">
					<label>Touchscreens</label>
					<help>Say Y here, and a list of supported touchscreens will be displayed.
This option doesn't affect the kernel.

If unsure, say Y.</help>
				</entry>
				<entry name="TOUCHSCREEN_PROPERTIES"/>
				<entry name="TOUCHSCREEN_88PM860X">
					<label>Marvell 88PM860x touchscreen</label>
					<help>Say Y here if you have a 88PM860x PMIC and want to enable
support for the built-in touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called 88pm860x-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_ADS7846">
					<label>ADS7846/TSC2046/AD7873 and AD(S)7843 based touchscreens</label>
					<help>Say Y here if you have a touchscreen interface using the
ADS7846/TSC2046/AD7873 or ADS7843/AD7843 controller,
and your board-specific setup code includes that in its
table of SPI devices.

If HWMON is selected, and the driver is told the reference voltage
on your board, you will also get hwmon interfaces for the voltage
(and on ads7846/tsc2046/ad7873, temperature) sensors of this chip.

If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ads7846.</help>
				</entry>
				<entry name="TOUCHSCREEN_AD7877">
					<label>AD7877 based touchscreens</label>
					<help>Say Y here if you have a touchscreen interface using the
AD7877 controller, and your board-specific initialization
code includes that in its table of SPI devices.

If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ad7877.</help>
				</entry>
				<entry name="TOUCHSCREEN_AD7879">
					<label>Analog Devices AD7879-1/AD7889-1 touchscreen interface</label>
					<help>Say Y here if you want to support a touchscreen interface using
the AD7879-1/AD7889-1 controller.

You should select a bus connection too.

To compile this driver as a module, choose M here: the
module will be called ad7879.</help>
				</entry>
				<entry name="TOUCHSCREEN_AD7879_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if you have AD7879-1/AD7889-1 hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called ad7879-i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_AD7879_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if you have AD7879-1/AD7889-1 hooked to a SPI bus.

If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ad7879-spi.</help>
				</entry>
				<entry name="TOUCHSCREEN_AR1021_I2C">
					<label>Microchip AR1021 i2c touchscreen</label>
					<help>Say Y here if you have the Microchip AR1021 touchscreen controller
chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ar1021_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_ATMEL_MXT">
					<label>Atmel mXT I2C Touchscreen</label>
					<help>Say Y here if you have Atmel mXT series I2C touchscreen,
such as AT42QT602240/ATMXT224, connected to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called atmel_mxt_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_AUO_PIXCIR">
					<label>AUO in-cell touchscreen using Pixcir ICs</label>
					<help>Say Y here if you have a AUO display with in-cell touchscreen
using Pixcir ICs.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called auo-pixcir-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_BU21013">
					<label>BU21013 based touch panel controllers</label>
					<help>Say Y here if you have a bu21013 touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called bu21013_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_CHIPONE_ICN8318">
					<label>chipone icn8318 touchscreen controller</label>
					<help>Say Y here if you have a ChipOne icn8318 based I2C touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called chipone_icn8318.</help>
				</entry>
				<entry name="TOUCHSCREEN_CY8CTMG110">
					<label>cy8ctmg110 touchscreen</label>
					<help>Say Y here if you have a cy8ctmg110 capacitive touchscreen on
an AAVA device.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called cy8ctmg110_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP_CORE">
					<label>Cypress TTSP touchscreen</label>
					<help>Say Y here if you have a touchscreen using controller from
the Cypress TrueTouch(tm) Standard Product family connected
to your system. You will also need to select appropriate
bus connection below.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called cyttsp_core.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if the touchscreen is connected via I2C bus.

To compile this driver as a module, choose M here: the
module will be called cyttsp_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if the touchscreen is connected via SPI bus.

To compile this driver as a module, choose M here: the
module will be called cyttsp_spi.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP4_CORE">
					<label>Cypress TrueTouch Gen4 Touchscreen Driver</label>
					<help>Core driver for Cypress TrueTouch(tm) Standard Product
Generation4 touchscreen controllers.

Say Y here if you have a Cypress Gen4 touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP4_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if the touchscreen is connected via I2C bus.

To compile this driver as a module, choose M here: the
module will be called cyttsp4_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_CYTTSP4_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if the touchscreen is connected via SPI bus.

To compile this driver as a module, choose M here: the
module will be called cyttsp4_spi.</help>
				</entry>
				<entry name="TOUCHSCREEN_DA9034">
					<label>Touchscreen support for Dialog Semiconductor DA9034</label>
					<help>Say Y here to enable the support for the touchscreen found
on Dialog Semiconductor DA9034 PMIC.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called da9034-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_DA9052">
					<label>Dialog DA9052/DA9053 TSI</label>
					<help>Say Y here to support the touchscreen found on Dialog Semiconductor
DA9052-BC and DA9053-AA/Bx PMICs.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called da9052_tsi.</help>
				</entry>
				<entry name="TOUCHSCREEN_DYNAPRO">
					<label>Dynapro serial touchscreen</label>
					<help>Say Y here if you have a Dynapro serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called dynapro.</help>
				</entry>
				<entry name="TOUCHSCREEN_HAMPSHIRE">
					<label>Hampshire serial touchscreen</label>
					<help>Say Y here if you have a Hampshire serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called hampshire.</help>
				</entry>
				<entry name="TOUCHSCREEN_EETI">
					<label>EETI touchscreen panel support</label>
					<help>Say Y here to enable support for I2C connected EETI touch panels.

To compile this driver as a module, choose M here: the
module will be called eeti_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_EGALAX">
					<label>EETI eGalax multi-touch panel support</label>
					<help>Say Y here to enable support for I2C connected EETI
eGalax multi-touch panels.

To compile this driver as a module, choose M here: the
module will be called egalax_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_EGALAX_SERIAL">
					<label>EETI eGalax serial touchscreen</label>
					<help>Say Y here to enable support for serial connected EETI
eGalax touch panels.

To compile this driver as a module, choose M here: the
module will be called egalax_ts_serial.</help>
				</entry>
				<entry name="TOUCHSCREEN_FT6236">
					<label>FT6236 I2C touchscreen</label>
					<help>Say Y here to enable support for the I2C connected FT6x06 and
FT6x36 family of capacitive touchscreen drivers.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ft6236.</help>
				</entry>
				<entry name="TOUCHSCREEN_FUJITSU">
					<label>Fujitsu serial touchscreen</label>
					<help>Say Y here if you have the Fujitsu touchscreen (such as one
installed in Lifebook P series laptop) connected to your
system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called fujitsu-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_GOODIX">
					<label>Goodix I2C touchscreen</label>
					<help>Say Y here if you have the Goodix touchscreen (such as one
installed in Onda v975w tablets) connected to your
system. It also supports 5-finger chip models, which can be
found on ARM tablets, like Wexler TAB7200 and MSI Primo73.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called goodix.</help>
				</entry>
				<entry name="TOUCHSCREEN_ILI210X">
					<label>Ilitek ILI210X based touchscreen</label>
					<help>Say Y here if you have a ILI210X based touchscreen
controller. This driver supports models ILI2102,
ILI2102s, ILI2103, ILI2103s and ILI2105.
Such kind of chipsets can be found in Amazon Kindle Fire
touchscreens.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ili210x.</help>
				</entry>
				<entry name="TOUCHSCREEN_IPROC">
					<label>IPROC touch panel driver support</label>
					<help>Say Y here if you want to add support for the IPROC touch
controller to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called bcm_iproc_tsc.</help>
				</entry>
				<entry name="TOUCHSCREEN_S3C2410">
					<label>Samsung S3C2410/generic touchscreen input driver</label>
					<help>Say Y here if you have the s3c2410 touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called s3c2410_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_GUNZE">
					<label>Gunze AHL-51S touchscreen</label>
					<help>Say Y here if you have the Gunze AHL-51 touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called gunze.</help>
				</entry>
				<entry name="TOUCHSCREEN_ELAN">
					<label>Elan eKTH I2C touchscreen</label>
					<help>Say Y here if you have an Elan eKTH I2C touchscreen
connected to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called elants_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_ELO">
					<label>Elo serial touchscreens</label>
					<help>Say Y here if you have an Elo serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called elo.</help>
				</entry>
				<entry name="TOUCHSCREEN_WACOM_W8001">
					<label>Wacom W8001 penabled serial touchscreen</label>
					<help>Say Y here if you have an Wacom W8001 penabled serial touchscreen
connected to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called wacom_w8001.</help>
				</entry>
				<entry name="TOUCHSCREEN_WACOM_I2C">
					<label>Wacom Tablet support (I2C)</label>
					<help>Say Y here if you want to use the I2C version of the Wacom
Pen Tablet.

If unsure, say N.

To compile this driver as a module, choose M here: the module
will be called wacom_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_LPC32XX">
					<label>LPC32XX touchscreen controller</label>
					<help>Say Y here if you have a LPC32XX device and want
to support the built-in touchscreen.

To compile this driver as a module, choose M here: the
module will be called lpc32xx_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_MAX11801">
					<label>MAX11801 based touchscreens</label>
					<help>Say Y here if you have a MAX11801 based touchscreen
controller.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called max11801_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_MCS5000">
					<label>MELFAS MCS-5000 touchscreen</label>
					<help>Say Y here if you have the MELFAS MCS-5000 touchscreen controller
chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mcs5000_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_MMS114">
					<label>MELFAS MMS114 touchscreen</label>
					<help>Say Y here if you have the MELFAS MMS114 touchscreen controller
chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mms114.</help>
				</entry>
				<entry name="TOUCHSCREEN_MELFAS_MIP4">
					<label>MELFAS MIP4 Touchscreen</label>
					<help>Say Y here if you have a MELFAS MIP4 Touchscreen device.

If unsure, say N.

To compile this driver as a module, choose M here:
the module will be called melfas_mip4.</help>
				</entry>
				<entry name="TOUCHSCREEN_MTOUCH">
					<label>MicroTouch serial touchscreens</label>
					<help>Say Y here if you have a MicroTouch (3M) serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mtouch.</help>
				</entry>
				<entry name="TOUCHSCREEN_IMX6UL_TSC">
					<label>Freescale i.MX6UL touchscreen controller</label>
					<help>Say Y here if you have a Freescale i.MX6UL, and want to
use the internal touchscreen controller.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called imx6ul_tsc.</help>
				</entry>
				<entry name="TOUCHSCREEN_INEXIO">
					<label>iNexio serial touchscreens</label>
					<help>Say Y here if you have an iNexio serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called inexio.</help>
				</entry>
				<entry name="TOUCHSCREEN_INTEL_MID">
					<label>Intel MID platform resistive touchscreen</label>
					<help>Say Y here if you have a Intel MID based touchscreen in
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called intel_mid_touch.</help>
				</entry>
				<entry name="TOUCHSCREEN_MK712">
					<label>ICS MicroClock MK712 touchscreen</label>
					<help>Say Y here if you have the ICS MicroClock MK712 touchscreen
controller chip in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mk712.</help>
				</entry>
				<entry name="TOUCHSCREEN_HP600">
					<label>HP Jornada 6xx touchscreen</label>
					<help>Say Y here if you have a HP Jornada 620/660/680/690 and want to
support the built-in touchscreen.

To compile this driver as a module, choose M here: the
module will be called hp680_ts_input.</help>
				</entry>
				<entry name="TOUCHSCREEN_HP7XX">
					<label>HP Jornada 7xx touchscreen</label>
					<help>Say Y here if you have a HP Jornada 710/720/728 and want
to support the built-in touchscreen.

To compile this driver as a module, choose M here: the
module will be called jornada720_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_IPAQ_MICRO">
					<label>HP iPAQ Atmel Micro ASIC touchscreen</label>
					<help>Say Y here to enable support for the touchscreen attached to
the Atmel Micro peripheral controller on iPAQ h3100/h3600/h3700

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ipaq-micro-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_HTCPEN">
					<label>HTC Shift X9500 touchscreen</label>
					<help>Say Y here if you have an HTC Shift UMPC also known as HTC X9500
Clio / Shangrila and want to support the built-in touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called htcpen.</help>
				</entry>
				<entry name="TOUCHSCREEN_PENMOUNT">
					<label>Penmount serial touchscreen</label>
					<help>Say Y here if you have a Penmount serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called penmount.</help>
				</entry>
				<entry name="TOUCHSCREEN_EDT_FT5X06">
					<label>EDT FocalTech FT5x06 I2C Touchscreen support</label>
					<help>Say Y here if you have an EDT &quot;Polytouch&quot; touchscreen based
on the FocalTech FT5x06 family of controllers connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called edt-ft5x06.</help>
				</entry>
				<entry name="TOUCHSCREEN_MIGOR">
					<label>Renesas MIGO-R touchscreen</label>
					<help>Say Y here to enable MIGO-R touchscreen support.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called migor_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_TOUCHRIGHT">
					<label>Touchright serial touchscreen</label>
					<help>Say Y here if you have a Touchright serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called touchright.</help>
				</entry>
				<entry name="TOUCHSCREEN_TOUCHWIN">
					<label>Touchwin serial touchscreen</label>
					<help>Say Y here if you have a Touchwin serial touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called touchwin.</help>
				</entry>
				<entry name="TOUCHSCREEN_TI_AM335X_TSC">
					<label>TI Touchscreen Interface</label>
					<help>Say Y here if you have 4/5/8 wire touchscreen controller
to be connected to the ADC controller on your TI AM335x SoC.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ti_am335x_tsc.</help>
				</entry>
				<entry name="TOUCHSCREEN_UCB1400">
					<label>Philips UCB1400 touchscreen</label>
					<help>This enables support for the Philips UCB1400 touchscreen interface.
The UCB1400 is an AC97 audio codec.  The touchscreen interface
will be initialized only after the ALSA subsystem has been
brought up and the UCB1400 detected.  You therefore have to
configure ALSA support as well (either built-in or modular,
independently of whether this driver is itself built-in or
modular) for this driver to work.

To compile this driver as a module, choose M here: the
module will be called ucb1400_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_PIXCIR">
					<label>PIXCIR I2C touchscreens</label>
					<help>Say Y here if you have a pixcir i2c touchscreen
controller.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called pixcir_i2c_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_WDT87XX_I2C">
					<label>Weida HiTech I2C touchscreen</label>
					<help>Say Y here if you have a Weida WDT87XX I2C touchscreen
connected to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called wdt87xx_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM831X">
					<label>Support for WM831x touchscreen controllers</label>
					<help>This enables support for the touchscreen controller on the WM831x
series of PMICs.

To compile this driver as a module, choose M here: the
module will be called wm831x-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM97XX">
					<label>Support for WM97xx AC97 touchscreen controllers</label>
					<help>Say Y here if you have a Wolfson Microelectronics WM97xx
touchscreen connected to your system. Note that this option
only enables core driver, you will also need to select
support for appropriate chip below.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called wm97xx-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM9705">
					<label>WM9705 Touchscreen interface support</label>
					<help>Say Y here to enable support for the Wolfson Microelectronics
WM9705 touchscreen controller.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM9712">
					<label>WM9712 Touchscreen interface support</label>
					<help>Say Y here to enable support for the Wolfson Microelectronics
WM9712 touchscreen controller.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM9713">
					<label>WM9713 Touchscreen interface support</label>
					<help>Say Y here to enable support for the Wolfson Microelectronics
WM9713 touchscreen controller.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM97XX_ATMEL">
					<label>WM97xx Atmel accelerated touch</label>
					<help>Say Y here for support for streaming mode with WM97xx touchscreens
on Atmel AT91 or AVR32 systems with an AC97C module.

Be aware that this will use channel B in the controller for
streaming data, this must not conflict with other AC97C drivers.

If unsure, say N.

To compile this driver as a module, choose M here: the module will
be called atmel-wm97xx.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM97XX_MAINSTONE">
					<label>WM97xx Mainstone/Palm accelerated touch</label>
					<help>Say Y here for support for streaming mode with WM97xx touchscreens
on Mainstone, Palm Tungsten T5, TX and LifeDrive systems.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mainstone-wm97xx.</help>
				</entry>
				<entry name="TOUCHSCREEN_WM97XX_ZYLONITE">
					<label>Zylonite accelerated touch</label>
					<help>Say Y here for support for streaming mode with the touchscreen
on Zylonite systems.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called zylonite-wm97xx.</help>
				</entry>
				<entry name="TOUCHSCREEN_USB_COMPOSITE">
					<label>USB Touchscreen Driver</label>
					<help>USB Touchscreen driver for:
- eGalax Touchkit USB (also includes eTurboTouch CT-410/510/700)
- PanJit TouchSet USB
- 3M MicroTouch USB (EX II series)
- ITM
- some other eTurboTouch
- Gunze AHL61
- DMC TSC-10/25
- IRTOUCHSYSTEMS/UNITOP
- IdealTEK URTC1000
- GoTop Super_Q2/GogoPen/PenPower tablets
- JASTEC USB Touch Controller/DigiTech DTR-02U
- Zytronic controllers
- Elo TouchSystems 2700 IntelliTouch
- EasyTouch USB Touch Controller from Data Modul
- e2i (Mimo monitors)

Have a look at &lt;http://linux.chapter7.ch/touchkit/&gt; for
a usage description and the required user-space stuff.

To compile this driver as a module, choose M here: the
module will be called usbtouchscreen.</help>
				</entry>
				<entry name="TOUCHSCREEN_MX25">
					<label>Freescale i.MX25 touchscreen input driver</label>
					<help>Enable support for touchscreen connected to your i.MX25.

To compile this driver as a module, choose M here: the
module will be called fsl-imx25-tcq.</help>
				</entry>
				<entry name="TOUCHSCREEN_MC13783">
					<label>Freescale MC13783 touchscreen input driver</label>
					<help>Say Y here if you have an Freescale MC13783 PMIC on your
board and want to use its touchscreen

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called mc13783_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_USB_EGALAX">
					<label>eGalax, eTurboTouch CT-410/510/700 device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_PANJIT">
					<label>PanJit device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_3M">
					<label>3M/Microtouch EX II series device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_ITM">
					<label>ITM device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_ETURBO">
					<label>eTurboTouch (non-eGalax compatible) device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_GUNZE">
					<label>Gunze AHL61 device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_DMC_TSC10">
					<label>DMC TSC-10/25 device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_IRTOUCH">
					<label>IRTOUCHSYSTEMS/UNITOP device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_IDEALTEK">
					<label>IdealTEK URTC1000 device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_GENERAL_TOUCH">
					<label>GeneralTouch Touchscreen device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_GOTOP">
					<label>GoTop Super_Q2/GogoPen/PenPower tablet device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_JASTEC">
					<label>JASTEC/DigiTech DTR-02U USB touch controller device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_ELO">
					<label>Elo TouchSystems 2700 IntelliTouch controller device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_E2I">
					<label>e2i Touchscreen controller (e.g. from Mimo 740)&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_ZYTRONIC">
					<label>Zytronic controller&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_ETT_TC45USB">
					<label>ET&amp;T USB series TC4UM/TC5UH touchscreen controller support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_NEXIO">
					<label>NEXIO/iNexio device support&quot; if EXPERT</label>
				</entry>
				<entry name="TOUCHSCREEN_USB_EASYTOUCH">
					<label>EasyTouch USB Touch controller device support&quot; if EMBEDDED</label>
					<help>Say Y here if you have an EasyTouch USB Touch controller.
If unsure, say N.</help>
				</entry>
				<entry name="TOUCHSCREEN_TOUCHIT213">
					<label>Sahara TouchIT-213 touchscreen</label>
					<help>Say Y here if you have a Sahara TouchIT-213 Tablet PC.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called touchit213.</help>
				</entry>
				<entry name="TOUCHSCREEN_TS4800">
					<label>TS-4800 touchscreen</label>
					<help>Say Y here if you have a touchscreen on a TS-4800 board.

On TS-4800, the touchscreen is not handled directly by Linux but by
a companion FPGA.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ts4800_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_TSC_SERIO">
					<label>TSC-10/25/40 serial touchscreen support</label>
					<help>Say Y here if you have a TSC-10, 25 or 40 serial touchscreen connected
to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called tsc40.</help>
				</entry>
				<entry name="TOUCHSCREEN_TSC200X_CORE"/>
				<entry name="TOUCHSCREEN_TSC2004">
					<label>TSC2004 based touchscreens</label>
					<help>Say Y here if you have a TSC2004 based touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called tsc2004.</help>
				</entry>
				<entry name="TOUCHSCREEN_TSC2005">
					<label>TSC2005 based touchscreens</label>
					<help>Say Y here if you have a TSC2005 based touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called tsc2005.</help>
				</entry>
				<entry name="TOUCHSCREEN_TSC2007">
					<label>TSC2007 based touchscreens</label>
					<help>Say Y here if you have a TSC2007 based touchscreen.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called tsc2007.</help>
				</entry>
				<entry name="TOUCHSCREEN_W90X900">
					<label>W90P910 touchscreen driver</label>
					<help>Say Y here if you have a W90P910 based touchscreen.

To compile this driver as a module, choose M here: the
module will be called w90p910_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_PCAP">
					<label>Motorola PCAP touchscreen</label>
					<help>Say Y here if you have a Motorola EZX telephone and
want to enable support for the built-in touchscreen.

To compile this driver as a module, choose M here: the
module will be called pcap_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_RM_TS">
					<label>Raydium I2C Touchscreen</label>
					<help>Say Y here if you have Raydium series I2C touchscreen,
such as RM32380, connected to your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called raydium_i2c_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_SILEAD">
					<label>Silead I2C touchscreen</label>
					<help>Say Y here if you have the Silead touchscreen connected to
your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called silead.</help>
				</entry>
				<entry name="TOUCHSCREEN_SIS_I2C">
					<label>SiS 9200 family I2C touchscreen</label>
					<help>This enables support for SiS 9200 family over I2C based touchscreens.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called sis_i2c.</help>
				</entry>
				<entry name="TOUCHSCREEN_ST1232">
					<label>Sitronix ST1232 touchscreen controllers</label>
					<help>Say Y here if you want to support Sitronix ST1232
touchscreen controller.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called st1232_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_STMPE">
					<label>STMicroelectronics STMPE touchscreens</label>
					<help>Say Y here if you want support for STMicroelectronics
STMPE touchscreen controllers.

To compile this driver as a module, choose M here: the
module will be called stmpe-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_SUN4I">
					<label>Allwinner sun4i resistive touchscreen controller support</label>
					<help>This selects support for the resistive touchscreen controller
found on Allwinner sunxi SoCs.

To compile this driver as a module, choose M here: the
module will be called sun4i-ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_SUR40">
					<label>Samsung SUR40 (Surface 2.0/PixelSense) touchscreen</label>
					<help>Say Y here if you want support for the Samsung SUR40 touchscreen
(also known as Microsoft Surface 2.0 or Microsoft PixelSense).

To compile this driver as a module, choose M here: the
module will be called sur40.</help>
				</entry>
				<entry name="TOUCHSCREEN_SURFACE3_SPI">
					<label>Ntrig/Microsoft Surface 3 SPI touchscreen</label>
					<help>Say Y here if you have the Ntrig/Microsoft SPI touchscreen
controller chip as found on the Surface 3 in your system.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called surface3_spi.</help>
				</entry>
				<entry name="TOUCHSCREEN_SX8654">
					<label>Semtech SX8654 touchscreen</label>
					<help>Say Y here if you have a Semtech SX8654 touchscreen controller.

If unsure, say N

To compile this driver as a module, choose M here: the
module will be called sx8654.</help>
				</entry>
				<entry name="TOUCHSCREEN_TPS6507X">
					<label>TPS6507x based touchscreens</label>
					<help>Say Y here if you have a TPS6507x based touchscreen
controller.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called tps6507x_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_ZFORCE">
					<label>Neonode zForce infrared touchscreens</label>
					<help>Say Y here if you have a touchscreen using the zforce
infraread technology from Neonode.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called zforce_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_COLIBRI_VF50">
					<label>Toradex Colibri on board touchscreen driver</label>
					<help>Say Y here if you have a Colibri VF50 and plan to use
the on-board provided 4-wire touchscreen driver.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called colibri_vf50_ts.</help>
				</entry>
				<entry name="TOUCHSCREEN_ROHM_BU21023">
					<label>ROHM BU21023/24 Dual touch support resistive touchscreens</label>
					<help>Say Y here if you have a touchscreen using ROHM BU21023/24.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called bu21023_ts.</help>
				</entry>
				<entry name="INPUT_MISC">
					<label>Miscellaneous devices</label>
					<help>Say Y here, and a list of miscellaneous input drivers will be displayed.
Everything that didn't fit into the other categories is here. This option
doesn't affect the kernel.

If unsure, say Y.</help>
				</entry>
				<entry name="INPUT_88PM860X_ONKEY">
					<label>88PM860x ONKEY support</label>
					<help>Support the ONKEY of Marvell 88PM860x PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called 88pm860x_onkey.</help>
				</entry>
				<entry name="INPUT_88PM80X_ONKEY">
					<label>88PM80x ONKEY support</label>
					<help>Support the ONKEY of Marvell 88PM80x PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called 88pm80x_onkey.</help>
				</entry>
				<entry name="INPUT_AB8500_PONKEY">
					<label>AB8500 Pon (PowerOn) Key</label>
					<help>Say Y here to use the PowerOn Key for ST-Ericsson's AB8500
Mix-Sig PMIC.

To compile this driver as a module, choose M here: the module
will be called ab8500-ponkey.</help>
				</entry>
				<entry name="INPUT_AD714X">
					<label>Analog Devices AD714x Capacitance Touch Sensor</label>
					<help>Say Y here if you want to support an AD7142/3/7/8/7A touch sensor.

You should select a bus connection too.

To compile this driver as a module, choose M here: the
module will be called ad714x.</help>
				</entry>
				<entry name="INPUT_AD714X_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if you have AD7142/AD7147 hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called ad714x-i2c.</help>
				</entry>
				<entry name="INPUT_AD714X_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if you have AD7142/AD7147 hooked to a SPI bus.

To compile this driver as a module, choose M here: the
module will be called ad714x-spi.</help>
				</entry>
				<entry name="INPUT_ARIZONA_HAPTICS">
					<label>Arizona haptics support</label>
					<help>Say Y to enable support for the haptics module in Arizona CODECs.

To compile this driver as a module, choose M here: the
module will be called arizona-haptics.</help>
				</entry>
				<entry name="INPUT_ATMEL_CAPTOUCH">
					<label>Atmel Capacitive Touch Button Driver</label>
					<help>Say Y here if an Atmel Capacitive Touch Button device which
implements &quot;captouch&quot; protocol is connected to I2C bus. Typically
this device consists of Atmel Touch sensor controlled by AtMegaXX
MCU running firmware based on Qtouch library.
One should find &quot;atmel,captouch&quot; node in the board specific DTS.

To compile this driver as a module, choose M here: the
module will be called atmel_captouch.</help>
				</entry>
				<entry name="INPUT_BMA150">
					<label>BMA150/SMB380 acceleration sensor support</label>
					<help>Say Y here if you have Bosch Sensortec's BMA150 or SMB380
acceleration sensor hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called bma150.</help>
				</entry>
				<entry name="INPUT_E3X0_BUTTON">
					<label>NI Ettus Research USRP E3xx Button support.</label>
					<help>Say Y here to enable support for the NI Ettus Research
USRP E3xx Button.

To compile this driver as a module, choose M here: the
module will be called e3x0_button.</help>
				</entry>
				<entry name="INPUT_PCSPKR">
					<label>PC Speaker support</label>
					<help>Say Y here if you want the standard PC Speaker to be used for
bells and whistles.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called pcspkr.</help>
				</entry>
				<entry name="INPUT_PM8941_PWRKEY">
					<label>Qualcomm PM8941 power key support</label>
					<help>Say Y here if you want support for the power key usually found
on boards using a Qualcomm PM8941 compatible PMIC.

If unsure, say Y.

To compile this driver as a module, choose M here: the module
will be called pm8941-pwrkey.</help>
				</entry>
				<entry name="INPUT_PM8XXX_VIBRATOR">
					<label>Qualcomm PM8XXX vibrator support</label>
					<help>This option enables device driver support for the vibrator
on Qualcomm PM8xxx chip. This driver supports ff-memless interface
from input framework.

To compile this driver as module, choose M here: the
module will be called pm8xxx-vibrator.</help>
				</entry>
				<entry name="INPUT_PMIC8XXX_PWRKEY">
					<label>PMIC8XXX power key support</label>
					<help>Say Y here if you want support for the PMIC8XXX power key.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called pmic8xxx-pwrkey.</help>
				</entry>
				<entry name="INPUT_SPARCSPKR">
					<label>SPARC Speaker support</label>
					<help>Say Y here if you want the standard Speaker on Sparc PCI systems
to be used for bells and whistles.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called sparcspkr.</help>
				</entry>
				<entry name="INPUT_M68K_BEEP">
					<label>M68k Beeper support</label>
				</entry>
				<entry name="INPUT_MAX77693_HAPTIC">
					<label>MAXIM MAX77693/MAX77843 haptic controller support</label>
					<help>This option enables support for the haptic controller on
MAXIM MAX77693 and MAX77843 chips.

To compile this driver as module, choose M here: the
module will be called max77693-haptic.</help>
				</entry>
				<entry name="INPUT_MAX8925_ONKEY">
					<label>MAX8925 ONKEY support</label>
					<help>Support the ONKEY of MAX8925 PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called max8925_onkey.</help>
				</entry>
				<entry name="INPUT_MAX8997_HAPTIC">
					<label>MAXIM MAX8997 haptic controller support</label>
					<help>This option enables device driver support for the haptic controller
on MAXIM MAX8997 chip. This driver supports ff-memless interface
from input framework.

To compile this driver as module, choose M here: the
module will be called max8997-haptic.</help>
				</entry>
				<entry name="INPUT_MC13783_PWRBUTTON">
					<label>MC13783 ON buttons</label>
					<help>Support the ON buttons of MC13783 PMIC as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called mc13783-pwrbutton.</help>
				</entry>
				<entry name="INPUT_MMA8450">
					<label>MMA8450 - Freescale's 3-Axis, 8/12-bit Digital Accelerometer</label>
					<help>Say Y here if you want to support Freescale's MMA8450 Accelerometer
through I2C interface.

To compile this driver as a module, choose M here: the
module will be called mma8450.</help>
				</entry>
				<entry name="INPUT_MPU3050">
					<label>MPU3050 Triaxial gyroscope sensor</label>
					<help>Say Y here if you want to support InvenSense MPU3050
connected via an I2C bus.

To compile this driver as a module, choose M here: the
module will be called mpu3050.</help>
				</entry>
				<entry name="INPUT_APANEL">
					<label>Fujitsu Lifebook Application Panel buttons</label>
					<help>Say Y here for support of the Application Panel buttons, used on
Fujitsu Lifebook. These are attached to the mainboard through
an SMBus interface managed by the I2C Intel ICH (i801) driver,
which you should also build for this kernel.

To compile this driver as a module, choose M here: the module will
be called apanel.</help>
				</entry>
				<entry name="INPUT_GP2A">
					<label>Sharp GP2AP002A00F I2C Proximity/Opto sensor driver</label>
					<help>Say Y here if you have a Sharp GP2AP002A00F proximity/als combo-chip
hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called gp2ap002a00f.</help>
				</entry>
				<entry name="INPUT_GPIO_BEEPER">
					<label>Generic GPIO Beeper support</label>
					<help>Say Y here if you have a beeper connected to a GPIO pin.

To compile this driver as a module, choose M here: the
module will be called gpio-beeper.</help>
				</entry>
				<entry name="INPUT_GPIO_TILT_POLLED">
					<label>Polled GPIO tilt switch</label>
					<help>This driver implements support for tilt switches connected
to GPIO pins that are not capable of generating interrupts.

The list of gpios to use and the mapping of their states
to specific angles is done via platform data.

To compile this driver as a module, choose M here: the
module will be called gpio_tilt_polled.</help>
				</entry>
				<entry name="INPUT_IXP4XX_BEEPER">
					<label>IXP4XX Beeper support</label>
					<help>If you say yes here, you can connect a beeper to the
ixp4xx gpio pins. This is used by the LinkSys NSLU2.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called ixp4xx-beeper.</help>
				</entry>
				<entry name="INPUT_COBALT_BTNS">
					<label>Cobalt button interface</label>
					<help>Say Y here if you want to support MIPS Cobalt button interface.

To compile this driver as a module, choose M here: the
module will be called cobalt_btns.</help>
				</entry>
				<entry name="INPUT_WISTRON_BTNS">
					<label>x86 Wistron laptop button interface</label>
					<help>Say Y here for support of Wistron laptop button interfaces, used on
laptops of various brands, including Acer and Fujitsu-Siemens. If
available, mail and wifi LEDs will be controllable via /sys/class/leds.

To compile this driver as a module, choose M here: the module will
be called wistron_btns.</help>
				</entry>
				<entry name="INPUT_ATLAS_BTNS">
					<label>x86 Atlas button interface</label>
					<help>Say Y here for support of Atlas wallmount touchscreen buttons.
The events will show up as scancodes F1 through F9 via evdev.

To compile this driver as a module, choose M here: the module will
be called atlas_btns.</help>
				</entry>
				<entry name="INPUT_ATI_REMOTE2">
					<label>ATI / Philips USB RF remote control</label>
					<help>Say Y here if you want to use an ATI or Philips USB RF remote control.
These are RF remotes with USB receivers.
ATI Remote Wonder II comes with some ATI's All-In-Wonder video cards
and is also available as a separate product.
This driver provides mouse pointer, left and right mouse buttons,
and maps all the other remote buttons to keypress events.

To compile this driver as a module, choose M here: the module will be
called ati_remote2.</help>
				</entry>
				<entry name="INPUT_KEYSPAN_REMOTE">
					<label>Keyspan DMR USB remote control</label>
					<help>Say Y here if you want to use a Keyspan DMR USB remote control.
Currently only the UIA-11 type of receiver has been tested.  The tag
on the receiver that connects to the USB port should have a P/N that
will tell you what type of DMR you have.  The UIA-10 type is not
supported at this time.  This driver maps all buttons to keypress
events.

To compile this driver as a module, choose M here: the module will
be called keyspan_remote.</help>
				</entry>
				<entry name="INPUT_KXTJ9">
					<label>Kionix KXTJ9 tri-axis digital accelerometer</label>
					<help>Say Y here to enable support for the Kionix KXTJ9 digital tri-axis
accelerometer.

To compile this driver as a module, choose M here: the module will
be called kxtj9.</help>
				</entry>
				<entry name="INPUT_KXTJ9_POLLED_MODE">
					<label>Enable polling mode support</label>
					<help>Say Y here if you need accelerometer to work in polling mode.</help>
				</entry>
				<entry name="INPUT_POWERMATE">
					<label>Griffin PowerMate and Contour Jog support</label>
					<help>Say Y here if you want to use Griffin PowerMate or Contour Jog devices.
These are aluminum dials which can measure clockwise and anticlockwise
rotation.  The dial also acts as a pushbutton.  The base contains an LED
which can be instructed to pulse or to switch to a particular intensity.

You can download userspace tools from
&lt;http://sowerbutts.com/powermate/&gt;.

To compile this driver as a module, choose M here: the
module will be called powermate.</help>
				</entry>
				<entry name="INPUT_YEALINK">
					<label>Yealink usb-p1k voip phone</label>
					<help>Say Y here if you want to enable keyboard and LCD functions of the
Yealink usb-p1k usb phones. The audio part is enabled by the generic
usb sound driver, so you might want to enable that as well.

For information about how to use these additional functions, see
&lt;file:Documentation/input/yealink.txt&gt;.

To compile this driver as a module, choose M here: the module will be
called yealink.</help>
				</entry>
				<entry name="INPUT_CM109">
					<label>C-Media CM109 USB I/O Controller</label>
					<help>Say Y here if you want to enable keyboard and buzzer functions of the
C-Media CM109 usb phones. The audio part is enabled by the generic
usb sound driver, so you might want to enable that as well.

To compile this driver as a module, choose M here: the module will be
called cm109.</help>
				</entry>
				<entry name="INPUT_REGULATOR_HAPTIC">
					<label>Regulator haptics support</label>
					<help>This option enables device driver support for the haptic controlled
by a regulator. This driver supports ff-memless interface
from input framework.

To compile this driver as a module, choose M here: the
module will be called regulator-haptic.</help>
				</entry>
				<entry name="INPUT_RETU_PWRBUTTON">
					<label>Retu Power button Driver</label>
					<help>Say Y here if you want to enable power key reporting via the
Retu chips found in Nokia Internet Tablets (770, N800, N810).

To compile this driver as a module, choose M here. The module will
be called retu-pwrbutton.</help>
				</entry>
				<entry name="INPUT_TPS65218_PWRBUTTON">
					<label>TPS65218 Power button driver</label>
					<help>Say Y here if you want to enable power buttong reporting for
the TPS65218 Power Management IC device.

To compile this driver as a module, choose M here. The module will
be called tps65218-pwrbutton.</help>
				</entry>
				<entry name="INPUT_AXP20X_PEK">
					<label>X-Powers AXP20X power button driver</label>
					<help>Say Y here if you want to enable power key reporting via the
AXP20X PMIC.

To compile this driver as a module, choose M here. The module will
be called axp20x-pek.</help>
				</entry>
				<entry name="INPUT_TWL4030_PWRBUTTON">
					<label>TWL4030 Power button Driver</label>
					<help>Say Y here if you want to enable power key reporting via the
TWL4030 family of chips.

To compile this driver as a module, choose M here. The module will
be called twl4030_pwrbutton.</help>
				</entry>
				<entry name="INPUT_TWL4030_VIBRA">
					<label>Support for TWL4030 Vibrator</label>
					<help>This option enables support for TWL4030 Vibrator Driver.

To compile this driver as a module, choose M here. The module will
be called twl4030_vibra.</help>
				</entry>
				<entry name="INPUT_TWL6040_VIBRA">
					<label>Support for TWL6040 Vibrator</label>
					<help>This option enables support for TWL6040 Vibrator Driver.

To compile this driver as a module, choose M here. The module will
be called twl6040_vibra.</help>
				</entry>
				<entry name="INPUT_UINPUT">
					<label>User level driver support</label>
					<help>Say Y here if you want to support user level drivers for input
subsystem accessible under char device 10:223 - /dev/input/uinput.

To compile this driver as a module, choose M here: the
module will be called uinput.</help>
				</entry>
				<entry name="INPUT_SGI_BTNS">
					<label>SGI Indy/O2 volume button interface</label>
					<help>Say Y here if you want to support SGI Indy/O2 volume button interface.

To compile this driver as a module, choose M here: the
module will be called sgi_btns.</help>
				</entry>
				<entry name="HP_SDC_RTC">
					<label>HP SDC Real Time Clock</label>
					<help>Say Y here if you want to support the built-in real time clock
of the HP SDC controller.</help>
				</entry>
				<entry name="INPUT_PALMAS_PWRBUTTON">
					<label>Palmas Power button Driver</label>
					<help>Say Y here if you want to enable power key reporting via the
Palmas family of PMICs.

To compile this driver as a module, choose M here. The module will
be called palmas_pwrbutton.</help>
				</entry>
				<entry name="INPUT_PCF50633_PMU">
					<label>PCF50633 PMU events</label>
					<help>Say Y to include support for delivering  PMU events via  input
layer on NXP PCF50633.</help>
				</entry>
				<entry name="INPUT_PCF8574">
					<label>PCF8574 Keypad input device</label>
					<help>Say Y here if you want to support a keypad connected via I2C
with a PCF8574.

To compile this driver as a module, choose M here: the
module will be called pcf8574_keypad.</help>
				</entry>
				<entry name="INPUT_PWM_BEEPER">
					<label>PWM beeper support</label>
					<help>Say Y here to get support for PWM based beeper devices.

If unsure, say N.

To compile this driver as a module, choose M here: the module will be
called pwm-beeper.</help>
				</entry>
				<entry name="INPUT_GPIO_ROTARY_ENCODER">
					<label>Rotary encoders connected to GPIO pins</label>
					<help>Say Y here to add support for rotary encoders connected to GPIO lines.
Check file:Documentation/input/rotary-encoder.txt for more
information.

To compile this driver as a module, choose M here: the
module will be called rotary_encoder.</help>
				</entry>
				<entry name="INPUT_RB532_BUTTON">
					<label>Mikrotik Routerboard 532 button interface</label>
					<help>Say Y here if you want support for the S1 button built into
Mikrotik's Routerboard 532.

To compile this driver as a module, choose M here: the
module will be called rb532_button.</help>
				</entry>
				<entry name="INPUT_DA9052_ONKEY">
					<label>Dialog DA9052/DA9053 Onkey</label>
					<help>Support the ONKEY of Dialog DA9052 PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the
module will be called da9052_onkey.</help>
				</entry>
				<entry name="INPUT_DA9055_ONKEY">
					<label>Dialog Semiconductor DA9055 ONKEY</label>
					<help>Support the ONKEY of DA9055 PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called da9055_onkey.</help>
				</entry>
				<entry name="INPUT_DA9063_ONKEY">
					<label>Dialog DA9062/63 OnKey</label>
					<help>Support the ONKEY of Dialog DA9063 and DA9062 Power Management ICs
as an input device capable of reporting the power button status.

To compile this driver as a module, choose M here: the module
will be called da9063_onkey.</help>
				</entry>
				<entry name="INPUT_DM355EVM">
					<label>TI DaVinci DM355 EVM Keypad and IR Remote</label>
					<help>Supports the pushbuttons and IR remote used with
the DM355 EVM board.

To compile this driver as a module, choose M here: the
module will be called dm355evm_keys.</help>
				</entry>
				<entry name="INPUT_BFIN_ROTARY">
					<label>Blackfin Rotary support</label>
					<help>Say Y here if you want to use the Blackfin Rotary.

To compile this driver as a module, choose M here: the
module will be called bfin-rotary.</help>
				</entry>
				<entry name="INPUT_WM831X_ON">
					<label>WM831X ON pin</label>
					<help>Support the ON pin of WM831X PMICs as an input device
reporting power button status.

To compile this driver as a module, choose M here: the module
will be called wm831x_on.</help>
				</entry>
				<entry name="INPUT_PCAP">
					<label>Motorola EZX PCAP misc input events</label>
					<help>Say Y here if you want to use Power key and Headphone button
on Motorola EZX phones.

To compile this driver as a module, choose M here: the
module will be called pcap_keys.</help>
				</entry>
				<entry name="INPUT_ADXL34X">
					<label>Analog Devices ADXL34x Three-Axis Digital Accelerometer</label>
					<help>Say Y here if you have a Accelerometer interface using the
ADXL345/6 controller, and your board-specific initialization
code includes that in its table of devices.

This driver can use either I2C or SPI communication to the
ADXL345/6 controller.  Select the appropriate method for
your system.

If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called adxl34x.</help>
				</entry>
				<entry name="INPUT_ADXL34X_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here if you have ADXL345/6 hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called adxl34x-i2c.</help>
				</entry>
				<entry name="INPUT_ADXL34X_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here if you have ADXL345/6 hooked to a SPI bus.

To compile this driver as a module, choose M here: the
module will be called adxl34x-spi.</help>
				</entry>
				<entry name="INPUT_IMS_PCU">
					<label>IMS Passenger Control Unit driver</label>
					<help>Say Y here if you have system with IMS Rave Passenger Control Unit.

To compile this driver as a module, choose M here: the module will be
called ims_pcu.</help>
				</entry>
				<entry name="INPUT_CMA3000">
					<label>VTI CMA3000 Tri-axis accelerometer</label>
					<help>Say Y here if you want to use VTI CMA3000_D0x Accelerometer
driver

This driver currently only supports I2C interface to the
controller. Also select the I2C method.

If unsure, say N

To compile this driver as a module, choose M here: the
module will be called cma3000_d0x.</help>
				</entry>
				<entry name="INPUT_CMA3000_I2C">
					<label>Support I2C bus connection</label>
					<help>Say Y here if you want to use VTI CMA3000_D0x Accelerometer
through I2C interface.

To compile this driver as a module, choose M here: the
module will be called cma3000_d0x_i2c.</help>
				</entry>
				<entry name="INPUT_XEN_KBDDEV_FRONTEND">
					<label>Xen virtual keyboard and mouse support</label>
					<help>This driver implements the front-end of the Xen virtual
keyboard and mouse device driver.  It communicates with a back-end
in another domain.

To compile this driver as a module, choose M here: the
module will be called xen-kbdfront.</help>
				</entry>
				<entry name="INPUT_SIRFSOC_ONKEY">
					<label>CSR SiRFSoC power on/off/suspend key support</label>
					<help>Say Y here if you want to support for the SiRFSoC power on/off/suspend key
in Linux, after you press the onkey, system will suspend.

If unsure, say N.</help>
				</entry>
				<entry name="INPUT_IDEAPAD_SLIDEBAR">
					<label>IdeaPad Laptop Slidebar</label>
					<help>Say Y here if you have an IdeaPad laptop with a slidebar.

To compile this driver as a module, choose M here: the
module will be called ideapad_slidebar.</help>
				</entry>
				<entry name="INPUT_SOC_BUTTON_ARRAY">
					<label>Windows-compatible SoC Button Array</label>
					<help>Say Y here if you have a SoC-based tablet that originally
runs Windows 8.

To compile this driver as a module, choose M here: the
module will be called soc_button_array.</help>
				</entry>
				<entry name="INPUT_DRV260X_HAPTICS">
					<label>TI DRV260X haptics support</label>
					<help>Say Y to enable support for the TI DRV260X haptics driver.

To compile this driver as a module, choose M here: the
module will be called drv260x-haptics.</help>
				</entry>
				<entry name="INPUT_DRV2665_HAPTICS">
					<label>TI DRV2665 haptics support</label>
					<help>Say Y to enable support for the TI DRV2665 haptics driver.

To compile this driver as a module, choose M here: the
module will be called drv2665-haptics.</help>
				</entry>
				<entry name="INPUT_DRV2667_HAPTICS">
					<label>TI DRV2667 haptics support</label>
					<help>Say Y to enable support for the TI DRV2667 haptics driver.

To compile this driver as a module, choose M here: the
module will be called drv2667-haptics.</help>
				</entry>
				<entry name="INPUT_HISI_POWERKEY">
					<label>Hisilicon PMIC ONKEY support</label>
					<help>Say Y to enable support for PMIC ONKEY.

To compile this driver as a module, choose M here: the
module will be called hisi_powerkey.</help>
				</entry>
				<entry name="RMI4_CORE">
					<label>Synaptics RMI4 bus support</label>
					<help>Say Y here if you want to support the Synaptics RMI4 bus.  This is
required for all RMI4 device support.

If unsure, say Y.</help>
				</entry>
				<entry name="RMI4_I2C">
					<label>RMI4 I2C Support</label>
					<help>Say Y here if you want to support RMI4 devices connected to an I2C
bus.

If unsure, say Y.</help>
				</entry>
				<entry name="RMI4_SPI">
					<label>RMI4 SPI Support</label>
					<help>Say Y here if you want to support RMI4 devices connected to a SPI
bus.

If unsure, say N.</help>
				</entry>
				<entry name="RMI4_2D_SENSOR"/>
				<entry name="RMI4_F11">
					<label>RMI4 Function 11 (2D pointing)</label>
					<help>Say Y here if you want to add support for RMI4 function 11.

Function 11 provides 2D multifinger pointing for touchscreens and
touchpads. For sensors that support relative pointing, F11 also
provides mouse input.</help>
				</entry>
				<entry name="RMI4_F12">
					<label>RMI4 Function 12 (2D pointing)</label>
					<help>Say Y here if you want to add support for RMI4 function 12.

Function 12 provides 2D multifinger pointing for touchscreens and
touchpads. For sensors that support relative pointing, F12 also
provides mouse input.</help>
				</entry>
				<entry name="RMI4_F30">
					<label>RMI4 Function 30 (GPIO LED)</label>
					<help>Say Y here if you want to add support for RMI4 function 30.

Function 30 provides GPIO and LED support for RMI4 devices. This
includes support for buttons on TouchPads and ClickPads.
</help>
				</entry>
				<container name="Hardware_I_O_ports">
					<label>Hardware I/O ports</label>
					<entry name="SERIO">
						<label>Serial I/O support</label>
						<help>Say Yes here if you have any input device that uses serial I/O to
communicate with the system. This includes the
* standard AT keyboard and PS/2 mouse *
as well as serial mice, Sun keyboards, some joysticks and 6dof
devices and more.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called serio.</help>
					</entry>
					<entry name="ARCH_MIGHT_HAVE_PC_SERIO">
						<help>Select this config option from the architecture Kconfig if
the architecture might use a PC serio device (i8042) to
communicate with keyboard, mouse, etc.</help>
					</entry>
					<entry name="SERIO_I8042">
						<label>i8042 PC Keyboard controller</label>
						<help>i8042 is the chip over which the standard AT keyboard and PS/2
mouse are connected to the computer. If you use these devices,
you'll need to say Y here.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called i8042.</help>
					</entry>
					<entry name="SERIO_SERPORT">
						<label>Serial port line discipline</label>
						<help>Say Y here if you plan to use an input device (mouse, joystick,
tablet, 6dof) that communicates over the RS232 serial (COM) port.

More information is available: &lt;file:Documentation/input/input.txt&gt;

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called serport.</help>
					</entry>
					<entry name="SERIO_CT82C710">
						<label>ct82c710 Aux port controller</label>
						<help>Say Y here if you have a Texas Instruments TravelMate notebook
equipped with the ct82c710 chip and want to use a mouse connected
to the &quot;QuickPort&quot;.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called ct82c710.</help>
					</entry>
					<entry name="SERIO_Q40KBD">
						<label>Q40 keyboard controller</label>
					</entry>
					<entry name="SERIO_PARKBD">
						<label>Parallel port keyboard adapter</label>
						<help>Say Y here if you built a simple parallel port adapter to attach
an additional AT keyboard, XT keyboard or PS/2 mouse.

More information is available: &lt;file:Documentation/input/input.txt&gt;

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called parkbd.</help>
					</entry>
					<entry name="SERIO_RPCKBD">
						<label>Acorn RiscPC keyboard controller</label>
						<help>Say Y here if you have the Acorn RiscPC and want to use an AT
keyboard connected to its keyboard controller.

To compile this driver as a module, choose M here: the
module will be called rpckbd.</help>
					</entry>
					<entry name="SERIO_AT32PSIF">
						<label>AVR32 PSIF PS/2 keyboard and mouse controller</label>
						<help>Say Y here if you want to use the PSIF peripheral on AVR32 devices
and connect a PS/2 keyboard and/or mouse to it.

To compile this driver as a module, choose M here: the module will
be called at32psif.</help>
					</entry>
					<entry name="SERIO_AMBAKMI">
						<label>AMBA KMI keyboard controller</label>
					</entry>
					<entry name="SERIO_SA1111">
						<label>Intel SA1111 keyboard controller</label>
					</entry>
					<entry name="SERIO_GSCPS2">
						<label>HP GSC PS/2 keyboard and PS/2 mouse controller</label>
						<help>This driver provides support for the PS/2 ports on PA-RISC machines
over which HP PS/2 keyboards and PS/2 mice may be connected.
If you use these devices, you'll need to say Y here.

It's safe to enable this driver, so if unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called gscps2.</help>
					</entry>
					<entry name="HP_SDC">
						<label>HP System Device Controller i8042 Support</label>
						<help>This option enables support for the &quot;System Device
Controller&quot;, an i8042 carrying microcode to manage a
few miscellaneous devices on some Hewlett Packard systems.
The SDC itself contains a 10ms resolution timer/clock capable
of delivering interrupts on a periodic and one-shot basis.
The SDC may also be connected to a battery-backed real-time
clock, a basic audio waveform generator, and an HP-HIL Master
Link Controller serving up to seven input devices.

By itself this option is rather useless, but enabling it will
enable selection of drivers for the abovementioned devices.
It is, however, incompatible with the old, reliable HIL keyboard
driver, and the new HIL driver is experimental, so if you plan
to use a HIL keyboard as your primary keyboard, you may wish
to keep using that driver until the new HIL drivers have had
more testing.</help>
					</entry>
					<entry name="HIL_MLC">
						<label>HIL MLC Support (needed for HIL input devices)</label>
					</entry>
					<entry name="SERIO_PCIPS2">
						<label>PCI PS/2 keyboard and PS/2 mouse controller</label>
						<help>Say Y here if you have a Mobility Docking station with PS/2
keyboard and mice ports.

To compile this driver as a module, choose M here: the
module will be called pcips2.</help>
					</entry>
					<entry name="SERIO_MACEPS2">
						<label>SGI O2 MACE PS/2 controller</label>
						<help>Say Y here if you have SGI O2 workstation and want to use its
PS/2 ports.

To compile this driver as a module, choose M here: the
module will be called maceps2.</help>
					</entry>
					<entry name="SERIO_LIBPS2">
						<label>PS/2 driver library</label>
						<help>Say Y here if you are using a driver for device connected
to a PS/2 port, such as PS/2 mouse or standard AT keyboard.

To compile this driver as a module, choose M here: the
module will be called libps2.</help>
					</entry>
					<entry name="SERIO_RAW">
						<label>Raw access to serio ports</label>
						<help>Say Y here if you want to have raw access to serio ports, such as
AUX ports on i8042 keyboard controller. Each serio port that is
bound to this driver will be accessible via a char device with
major 10 and dynamically allocated minor. The driver will try
allocating minor 1 (that historically corresponds to /dev/psaux)
first. To bind this driver to a serio port use sysfs interface:

echo -n &quot;serio_raw&quot; &gt; /sys/bus/serio/devices/serioX/drvctl

To compile this driver as a module, choose M here: the
module will be called serio_raw.</help>
					</entry>
					<entry name="SERIO_XILINX_XPS_PS2">
						<label>Xilinx XPS PS/2 Controller Support</label>
						<help>This driver supports XPS PS/2 IP from the Xilinx EDK on
PowerPC platform.

To compile this driver as a module, choose M here: the
module will be called xilinx_ps2.</help>
					</entry>
					<entry name="SERIO_ALTERA_PS2">
						<label>Altera UP PS/2 controller</label>
						<help>Say Y here if you have Altera University Program PS/2 ports.

To compile this driver as a module, choose M here: the
module will be called altera_ps2.</help>
					</entry>
					<entry name="SERIO_AMS_DELTA">
						<label>Amstrad Delta (E3) mailboard support</label>
						<help>Say Y here if you have an E3 and want to use its mailboard,
or any standard AT keyboard connected to the mailboard port.

When used for the E3 mailboard, a non-standard key table
must be loaded from userspace, possibly using udev extras
provided keymap helper utility.

To compile this driver as a module, choose M here;
the module will be called ams_delta_serio.</help>
					</entry>
					<entry name="SERIO_PS2MULT">
						<label>TQC PS/2 multiplexer</label>
						<help>Say Y here if you have the PS/2 line multiplexer like the one
present on TQC boards.

To compile this driver as a module, choose M here: the
module will be called ps2mult.</help>
					</entry>
					<entry name="SERIO_ARC_PS2">
						<label>ARC PS/2 support</label>
						<help>Say Y here if you have an ARC FPGA platform with a PS/2
controller in it.

To compile this driver as a module, choose M here; the module
will be called arc_ps2.</help>
					</entry>
					<entry name="SERIO_APBPS2">
						<label>GRLIB APBPS2 PS/2 keyboard/mouse controller</label>
						<help>Say Y here if you want support for GRLIB APBPS2 peripherals used
to connect to PS/2 keyboard and/or mouse.

To compile this driver as a module, choose M here: the module will
be called apbps2.</help>
					</entry>
					<entry name="SERIO_OLPC_APSP">
						<label>OLPC AP-SP input support</label>
						<help>Say Y here if you want support for the keyboard and touchpad included
in the OLPC XO-1.75 and XO-4 laptops.

To compile this driver as a module, choose M here: the module will
be called olpc_apsp.</help>
					</entry>
					<entry name="HYPERV_KEYBOARD">
						<label>Microsoft Synthetic Keyboard driver</label>
						<help>Select this option to enable the Hyper-V Keyboard driver.

To compile this driver as a module, choose M here: the module will
be called hyperv_keyboard.</help>
					</entry>
					<entry name="SERIO_SUN4I_PS2">
						<label>Allwinner A10 PS/2 controller support</label>
						<help>This selects support for the PS/2 Host Controller on
Allwinner A10.

To compile this driver as a module, choose M here: the
module will be called sun4i-ps2.</help>
					</entry>
					<entry name="USERIO">
						<label>User space serio port driver support</label>
						<help>Say Y here if you want to support user level drivers for serio
subsystem accessible under char device 10:240 - /dev/userio. Using
this facility userspace programs can implement serio ports that
will be used by the standard in-kernel serio consumer drivers,
such as psmouse and atkbd.

To compile this driver as a module, choose M here: the module will be
called userio.

If you are unsure, say N.</help>
					</entry>
					<entry name="GAMEPORT">
						<label>Gameport support</label>
						<help>Gameport support is for the standard 15-pin PC gameport. If you
have a joystick, gamepad, gameport card, a soundcard with a gameport
or anything else that uses the gameport, say Y or M here and also to
at least one of the hardware specific drivers.

For Ensoniq AudioPCI (ES1370), AudioPCI 97 (ES1371), ESS Solo1,
S3 SonicVibes, Trident 4DWave, SiS7018, and ALi 5451 gameport
support is provided by the sound drivers, so you won't need any
from the below listed modules. You still need to say Y here.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called gameport.</help>
					</entry>
					<entry name="GAMEPORT_NS558">
						<label>Classic ISA and PnP gameport support</label>
						<help>Say Y here if you have an ISA or PnP gameport.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called ns558.</help>
					</entry>
					<entry name="GAMEPORT_L4">
						<label>PDPI Lightning 4 gamecard support</label>
						<help>Say Y here if you have a PDPI Lightning 4 gamecard.

To compile this driver as a module, choose M here: the
module will be called lightning.</help>
					</entry>
					<entry name="GAMEPORT_EMU10K1">
						<label>SB Live and Audigy gameport support</label>
						<help>Say Y here if you have a SoundBlaster Live! or SoundBlaster
Audigy card and want to use its gameport.

To compile this driver as a module, choose M here: the
module will be called emu10k1-gp.</help>
					</entry>
					<entry name="GAMEPORT_FM801">
						<label>ForteMedia FM801 gameport support</label>
						<help>Say Y here if you have ForteMedia FM801 PCI audio controller
(Abit AU10, Genius Sound Maker, HP Workstation zx2000,
and others), and want to use its gameport.

To compile this driver as a module, choose M here: the
module will be called fm801-gp.</help>
					</entry>
				</container>
			</container>
			<container name="Character_devices">
				<label>Character devices</label>
				<entry name="TTY">
					<label>Enable TTY&quot; if EXPERT</label>
					<help>Allows you to remove TTY support which can save space, and
blocks features that require TTY from inclusion in the kernel.
TTY is required for any text terminals or serial port
communication. Most users should leave this enabled.</help>
				</entry>
				<entry name="VT">
					<label>Virtual terminal&quot; if EXPERT</label>
					<help>If you say Y here, you will get support for terminal devices with
display and keyboard devices. These are called &quot;virtual&quot; because you
can run several virtual terminals (also called virtual consoles) on
one physical terminal. This is rather useful, for example one
virtual terminal can collect system messages and warnings, another
one can be used for a text-mode user session, and a third could run
an X session, all in parallel. Switching between virtual terminals
is done with certain key combinations, usually Alt-&lt;function key&gt;.

The setterm command (&quot;man setterm&quot;) can be used to change the
properties (such as colors or beeping) of a virtual terminal. The
man page console_codes(4) (&quot;man console_codes&quot;) contains the special
character sequences that can be used to change those properties
directly. The fonts used on virtual terminals can be changed with
the setfont (&quot;man setfont&quot;) command and the key bindings are defined
with the loadkeys (&quot;man loadkeys&quot;) command.

You need at least one virtual terminal device in order to make use
of your keyboard and monitor. Therefore, only people configuring an
embedded system would want to say N here in order to save some
memory; the only way to log into such a system is then via a serial
or network connection.

If unsure, say Y, or else you won't be able to do much with your new
shiny Linux system :-)</help>
				</entry>
				<entry name="CONSOLE_TRANSLATIONS">
					<label>Enable character translations in console&quot; if EXPERT</label>
					<help>This enables support for font mapping and Unicode translation
on virtual consoles.</help>
				</entry>
				<entry name="VT_CONSOLE">
					<label>Support for console on virtual terminal&quot; if EXPERT</label>
					<help>The system console is the device which receives all kernel messages
and warnings and which allows logins in single user mode. If you
answer Y here, a virtual terminal (the device used to interact with
a physical terminal) can be used as system console. This is the most
common mode of operations, so you should say Y here unless you want
the kernel messages be output only to a serial port (in which case
you should say Y to &quot;Console on serial port&quot;, below).

If you do say Y here, by default the currently visible virtual
terminal (/dev/tty0) will be used as system console. You can change
that with a kernel command line option such as &quot;console=tty3&quot; which
would use the third virtual terminal as system console. (Try &quot;man
bootparam&quot; or see the documentation of your boot loader (lilo or
loadlin) about how to pass options to the kernel at boot time.)

If unsure, say Y.</help>
				</entry>
				<entry name="VT_CONSOLE_SLEEP"/>
				<entry name="HW_CONSOLE"/>
				<entry name="VT_HW_CONSOLE_BINDING">
					<label>Support for binding and unbinding console drivers</label>
					<help>The virtual terminal is the device that interacts with the physical
terminal through console drivers. On these systems, at least one
console driver is loaded. In other configurations, additional console
drivers may be enabled, such as the framebuffer console. If more than
1 console driver is enabled, setting this to 'y' will allow you to
select the console driver that will serve as the backend for the
virtual terminals.

See &lt;file:Documentation/console/console.txt&gt; for more
information. For framebuffer console users, please refer to
&lt;file:Documentation/fb/fbcon.txt&gt;.</help>
				</entry>
				<entry name="UNIX98_PTYS">
					<label>Unix98 PTY support&quot; if EXPERT</label>
					<help>A pseudo terminal (PTY) is a software device consisting of two
halves: a master and a slave. The slave device behaves identical to
a physical terminal; the master device is used by a process to
read data from and write data to the slave, thereby emulating a
terminal. Typical programs for the master side are telnet servers
and xterms.

Linux has traditionally used the BSD-like names /dev/ptyxx for
masters and /dev/ttyxx for slaves of pseudo terminals. This scheme
has a number of problems. The GNU C library glibc 2.1 and later,
however, supports the Unix98 naming standard: in order to acquire a
pseudo terminal, a process opens /dev/ptmx; the number of the pseudo
terminal is then made available to the process and the pseudo
terminal slave can be accessed as /dev/pts/&lt;number&gt;. What was
traditionally /dev/ttyp2 will then be /dev/pts/2, for example.

All modern Linux systems use the Unix98 ptys.  Say Y unless
you're on an embedded system and want to conserve memory.</help>
				</entry>
				<entry name="LEGACY_PTYS">
					<label>Legacy (BSD) PTY support</label>
					<help>A pseudo terminal (PTY) is a software device consisting of two
halves: a master and a slave. The slave device behaves identical to
a physical terminal; the master device is used by a process to
read data from and write data to the slave, thereby emulating a
terminal. Typical programs for the master side are telnet servers
and xterms.

Linux has traditionally used the BSD-like names /dev/ptyxx
for masters and /dev/ttyxx for slaves of pseudo
terminals. This scheme has a number of problems, including
security.  This option enables these legacy devices; on most
systems, it is safe to say N.</help>
				</entry>
				<entry name="LEGACY_PTY_COUNT">
					<label>Maximum number of legacy PTY in use</label>
					<help>The maximum number of legacy PTYs that can be used at any one time.
The default is 256, and should be more than enough.  Embedded
systems may want to reduce this to save memory.

When not in use, each legacy PTY occupies 12 bytes on 32-bit
architectures and 24 bytes on 64-bit architectures.</help>
				</entry>
				<entry name="BFIN_JTAG_COMM">
					<label>Blackfin JTAG Communication</label>
					<help>Add support for emulating a TTY device over the Blackfin JTAG.

To compile this driver as a module, choose M here: the
module will be called bfin_jtag_comm.</help>
				</entry>
				<entry name="BFIN_JTAG_COMM_CONSOLE">
					<label>Console on Blackfin JTAG</label>
				</entry>
				<entry name="SERIAL_NONSTANDARD">
					<label>Non-standard serial port support</label>
					<help>Say Y here if you have any non-standard serial boards -- boards
which aren't supported using the standard &quot;dumb&quot; serial driver.
This includes intelligent serial boards such as Cyclades,
Digiboards, etc. These are usually used for systems that need many
serial ports because they serve many terminals or dial-in
connections.

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about non-standard serial boards.

Most people can say N here.</help>
				</entry>
				<entry name="ROCKETPORT">
					<label>Comtrol RocketPort support</label>
					<help>This driver supports Comtrol RocketPort and RocketModem PCI boards.
These boards provide 2, 4, 8, 16, or 32 high-speed serial ports or
modems.  For information about the RocketPort/RocketModem  boards
and this driver read &lt;file:Documentation/serial/rocket.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called rocket.

If you want to compile this driver into the kernel, say Y here.  If
you don't have a Comtrol RocketPort/RocketModem card installed, say N.</help>
				</entry>
				<entry name="CYCLADES">
					<label>Cyclades async mux support</label>
					<help>This driver supports Cyclades Z and Y multiserial boards.
You would need something like this to connect more than two modems to
your Linux box, for instance in order to become a dial-in server.

For information about the Cyclades-Z card, read
&lt;file:Documentation/serial/README.cycladesZ&gt;.

To compile this driver as a module, choose M here: the
module will be called cyclades.

If you haven't heard about it, it's safe to say N.</help>
				</entry>
				<entry name="CYZ_INTR">
					<label>Cyclades-Z interrupt mode operation</label>
					<help>The Cyclades-Z family of multiport cards allows 2 (two) driver op
modes: polling and interrupt. In polling mode, the driver will check
the status of the Cyclades-Z ports every certain amount of time
(which is called polling cycle and is configurable). In interrupt
mode, it will use an interrupt line (IRQ) in order to check the
status of the Cyclades-Z ports. The default op mode is polling. If
unsure, say N.</help>
				</entry>
				<entry name="MOXA_INTELLIO">
					<label>Moxa Intellio support</label>
					<help>Say Y here if you have a Moxa Intellio multiport serial card.

To compile this driver as a module, choose M here: the
module will be called moxa.</help>
				</entry>
				<entry name="MOXA_SMARTIO">
					<label>Moxa SmartIO support v. 2.0</label>
					<help>Say Y here if you have a Moxa SmartIO multiport serial card and/or
want to help develop a new version of this driver.

This is upgraded (1.9.1) driver from original Moxa drivers with
changes finally resulting in PCI probing.

This driver can also be built as a module. The module will be called
mxser. If you want to do that, say M here.</help>
				</entry>
				<entry name="SYNCLINK">
					<label>Microgate SyncLink card support</label>
					<help>Provides support for the SyncLink ISA and PCI multiprotocol serial
adapters. These adapters support asynchronous and HDLC bit
synchronous communication up to 10Mbps (PCI adapter).

This driver can only be built as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called synclink.  If you want to do that, say M
here.</help>
				</entry>
				<entry name="SYNCLINKMP">
					<label>SyncLink Multiport support</label>
					<help>Enable support for the SyncLink Multiport (2 or 4 ports)
serial adapter, running asynchronous and HDLC communications up
to 2.048Mbps. Each ports is independently selectable for
RS-232, V.35, RS-449, RS-530, and X.21

This driver may be built as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called synclinkmp.  If you want to do that, say M
here.</help>
				</entry>
				<entry name="SYNCLINK_GT">
					<label>SyncLink GT/AC support</label>
					<help>Support for SyncLink GT and SyncLink AC families of
synchronous and asynchronous serial adapters
manufactured by Microgate Systems, Ltd. (www.microgate.com)</help>
				</entry>
				<entry name="NOZOMI">
					<label>HSDPA Broadband Wireless Data Card - Globe Trotter</label>
					<help>If you have a HSDPA driver Broadband Wireless Data Card -
Globe Trotter PCMCIA card, say Y here.

To compile this driver as a module, choose M here, the module
will be called nozomi.</help>
				</entry>
				<entry name="ISI">
					<label>Multi-Tech multiport card support</label>
					<help>This is a driver for the Multi-Tech cards which provide several
serial ports.  The driver is experimental and can currently only be
built as a module. The module will be called isicom.
If you want to do that, choose M here.</help>
				</entry>
				<entry name="N_HDLC">
					<label>HDLC line discipline support</label>
					<help>Allows synchronous HDLC communications with tty device drivers that
support synchronous HDLC such as the Microgate SyncLink adapter.

This driver can be built as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called n_hdlc. If you want to do that, say M
here.</help>
				</entry>
				<entry name="N_GSM">
					<label>GSM MUX line discipline support (EXPERIMENTAL)</label>
					<help>This line discipline provides support for the GSM MUX protocol and
presents the mux as a set of 61 individual tty devices.</help>
				</entry>
				<entry name="TRACE_ROUTER">
					<label>Trace data router for MIPI P1149.7 cJTAG standard</label>
					<help>The trace router uses the Linux tty line discipline framework to
route trace data coming from a tty port (say UART for example) to
the trace sink line discipline driver and to another tty port (say
USB). This is part of a solution for the MIPI P1149.7, compact JTAG,
standard, which is for debugging mobile devices. The PTI driver in
drivers/misc/pti.c defines the majority of this MIPI solution.

You should select this driver if the target kernel is meant for
a mobile device containing a modem.  Then you will need to select
&quot;Trace data sink for MIPI P1149.7 cJTAG standard&quot; line discipline
driver.</help>
				</entry>
				<entry name="TRACE_SINK">
					<label>Trace data sink for MIPI P1149.7 cJTAG standard</label>
					<help>The trace sink uses the Linux line discipline framework to receive
trace data coming from the trace router line discipline driver
to a user-defined tty port target, like USB.
This is to provide a way to extract modem trace data on
devices that do not have a PTI HW module, or just need modem
trace data to come out of a different HW output port.
This is part of a solution for the P1149.7, compact JTAG, standard.

If you select this option, you need to select
&quot;Trace data router for MIPI P1149.7 cJTAG standard&quot;.</help>
				</entry>
				<entry name="PPC_EPAPR_HV_BYTECHAN">
					<label>ePAPR hypervisor byte channel driver</label>
					<help>This driver creates /dev entries for each ePAPR hypervisor byte
channel, thereby allowing applications to communicate with byte
channels as if they were serial ports.</help>
				</entry>
				<entry name="PPC_EARLY_DEBUG_EHV_BC">
					<label>Early console (udbg) support for ePAPR hypervisors</label>
					<help>Select this option to enable early console (a.k.a. &quot;udbg&quot;) support
via an ePAPR byte channel.  You also need to choose the byte channel
handle below.</help>
				</entry>
				<entry name="PPC_EARLY_DEBUG_EHV_BC_HANDLE">
					<label>Byte channel handle for early console (udbg)</label>
					<help>If you want early console (udbg) output through a byte channel,
specify the handle of the byte channel to use.

For this to work, the byte channel driver must be compiled
in-kernel, not as a module.

Note that only one early console driver can be enabled, so don't
enable any others if you enable this one.

If the number you specify is not a valid byte channel handle, then
there simply will be no early console output.  This is true also
if you don't boot under a hypervisor at all.</help>
				</entry>
				<entry name="GOLDFISH_TTY">
					<label>Goldfish TTY Driver</label>
					<help>Console and system TTY driver for the Goldfish virtual platform.</help>
				</entry>
				<entry name="DA_TTY">
					<label>DA TTY</label>
					<help>This enables a TTY on a Dash channel.</help>
				</entry>
				<entry name="DA_CONSOLE">
					<label>DA Console</label>
					<help>This enables a console on a Dash channel.</help>
				</entry>
				<entry name="MIPS_EJTAG_FDC_TTY">
					<label>MIPS EJTAG Fast Debug Channel TTY</label>
					<help>This enables a TTY and console on the MIPS EJTAG Fast Debug Channels,
if they are present. This can be useful when working with an EJTAG
probe which supports it, to get console output and a login prompt via
EJTAG without needing to connect a serial cable.

TTY devices are named e.g. ttyFDC3c2 (for FDC channel 2 of the FDC on
CPU3).

The console can be enabled with console=fdc1 (for FDC channel 1 on all
CPUs). Do not use the console unless there is a debug probe attached
to drain the FDC TX FIFO.

If unsure, say N.</help>
				</entry>
				<entry name="MIPS_EJTAG_FDC_EARLYCON">
					<label>Early FDC console</label>
					<help>This registers a console on FDC channel 1 very early during boot (from
MIPS arch code). This is useful for bring-up and debugging early boot
issues.

Do not enable unless there is a debug probe attached to drain the FDC
TX FIFO.

If unsure, say N.</help>
				</entry>
				<entry name="MIPS_EJTAG_FDC_KGDB">
					<label>Use KGDB over an FDC channel</label>
					<help>This enables the use of KGDB over an FDC channel, allowing KGDB to be
used remotely or when a serial port isn't available.</help>
				</entry>
				<entry name="MIPS_EJTAG_FDC_KGDB_CHAN">
					<label>KGDB FDC channel</label>
					<help>FDC channel number to use for KGDB.</help>
				</entry>
				<entry name="DEVMEM">
					<label>/dev/mem virtual device support</label>
					<help>Say Y here if you want to support the /dev/mem device.
The /dev/mem device is used to access areas of physical
memory.
When in doubt, say &quot;Y&quot;.</help>
				</entry>
				<entry name="DEVKMEM">
					<label>/dev/kmem virtual device support</label>
					<help>Say Y here if you want to support the /dev/kmem device. The
/dev/kmem device is rarely used, but can be used for certain
kind of kernel debugging operations.
When in doubt, say &quot;N&quot;.</help>
				</entry>
				<entry name="SGI_SNSC">
					<label>SGI Altix system controller communication support</label>
					<help>If you have an SGI Altix and you want to enable system
controller communication from user space (you want this!),
say Y.  Otherwise, say N.</help>
				</entry>
				<entry name="SGI_TIOCX">
					<label>SGI TIO CX driver support</label>
					<help>If you have an SGI Altix and you have fpga devices attached
to your TIO, say Y here, otherwise say N.</help>
				</entry>
				<entry name="SGI_MBCS">
					<label>SGI FPGA Core Services driver support</label>
					<help>If you have an SGI Altix with an attached SABrick
say Y or M here, otherwise say N.</help>
				</entry>
				<container name="Serial_drivers">
					<label>Serial drivers</label>
					<entry name="SERIAL_EARLYCON">
						<help>Support for early consoles with the earlycon parameter. This enables
the console before standard serial driver is probed. The console is
enabled when early_param is processed.</help>
					</entry>
					<entry name="SERIAL_8250">
						<label>8250/16550 and compatible serial support</label>
						<help>This selects whether you want to include the driver for the standard
serial ports.  The standard answer is Y.  People who might say N
here are those that are setting up dedicated Ethernet WWW/FTP
servers, or users that have one of the various bus mice instead of a
serial mouse and don't intend to use their machine's standard serial
port for anything.  (Note that the Cyclades multi serial port driver
does not need this driver built in for it to work.)

To compile this driver as a module, choose M here: the
module will be called 8250.
[WARNING: Do not compile this driver as a module if you are using
non-standard serial ports, since the configuration information will
be lost when the driver is unloaded.  This limitation may be lifted
in the future.]

BTW1: If you have a mouseman serial mouse which is not recognized by
the X window system, try running gpm first.

BTW2: If you intend to use a software modem (also called Winmodem)
under Linux, forget it.  These modems are crippled and require
proprietary drivers which are only available under Windows.

Most people will say Y or M here, so that they can use serial mice,
modems and similar devices connecting to the standard serial ports.</help>
					</entry>
					<entry name="SERIAL_8250_DEPRECATED_OPTIONS">
						<label>Support 8250_core.* kernel options (DEPRECATED)</label>
						<help>In 3.7 we renamed 8250 to 8250_core by mistake, so now we have to
accept kernel parameters in both forms like 8250_core.nr_uarts=4 and
8250.nr_uarts=4. We now renamed the module back to 8250, but if
anybody noticed in 3.7 and changed their userspace we still have to
keep the 8250_core.* options around until they revert the changes
they already did.

If 8250 is built as a module, this adds 8250_core alias instead.

If you did not notice yet and/or you have userspace from pre-3.7, it
is safe (and recommended) to say N here.</help>
					</entry>
					<entry name="SERIAL_8250_PNP">
						<label>8250/16550 PNP device support&quot; if EXPERT</label>
						<help>This builds standard PNP serial support. You may be able to
disable this feature if you only need legacy serial support.</help>
					</entry>
					<entry name="SERIAL_8250_FINTEK">
						<label>Support for Fintek F81216A LPC to 4 UART RS485 API</label>
						<help>Selecting this option will add support for the RS485 capabilities
of the Fintek F81216A LPC to 4 UART.

If this option is not selected the device will be configured as a
standard 16550A serial port.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_CONSOLE">
						<label>Console on 8250/16550 and compatible serial port</label>
						<help>If you say Y here, it will be possible to use a serial port as the
system console (the system console is the device which receives all
kernel messages and warnings and which allows logins in single user
mode). This could be useful if some terminal or printer is connected
to that serial port.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyS1&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (grub or lilo or loadlin) about how to pass options
to the kernel at boot time.)

If you don't have a VGA card installed and you say Y here, the
kernel will automatically use the first serial line, /dev/ttyS0, as
system console.

You can set that using a kernel command line option such as
&quot;console=uart8250,io,0x3f8,9600n8&quot;
&quot;console=uart8250,mmio,0xff5e0000,115200n8&quot;.
and it will switch to normal serial console when the corresponding
port is ready.
&quot;earlycon=uart8250,io,0x3f8,9600n8&quot;
&quot;earlycon=uart8250,mmio,0xff5e0000,115200n8&quot;.
it will not only setup early console.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_GSC"/>
					<entry name="SERIAL_8250_DMA">
						<label>DMA support for 16550 compatible UART controllers&quot; if EXPERT</label>
						<help>This builds DMA support that can be used with 8250/16650
compatible UART controllers that support DMA signaling.</help>
					</entry>
					<entry name="SERIAL_8250_PCI">
						<label>8250/16550 PCI device support&quot; if EXPERT</label>
						<help>This builds standard PCI serial support. You may be able to
disable this feature if you only need legacy serial support.
Saves about 9K.
Note that serial ports on NetMos 9835 Multi-I/O cards are handled
by the parport_serial driver, enabled with CONFIG_PARPORT_SERIAL.</help>
					</entry>
					<entry name="SERIAL_8250_HP300"/>
					<entry name="SERIAL_8250_CS">
						<label>8250/16550 PCMCIA device support</label>
						<help>Say Y here to enable support for 16-bit PCMCIA serial devices,
including serial port cards, modems, and the modem functions of
multi-function Ethernet/modem cards. (PCMCIA- or PC-cards are
credit-card size devices often used with laptops.)

To compile this driver as a module, choose M here: the
module will be called serial_cs.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_NR_UARTS">
						<label>Maximum number of 8250/16550 serial ports</label>
						<help>Set this to the number of serial ports you want the driver
to support.  This includes any ports discovered via ACPI or
PCI enumeration and any ports that may be added at run-time
via hot-plug, or any ISA multi-port serial cards.</help>
					</entry>
					<entry name="SERIAL_8250_RUNTIME_UARTS">
						<label>Number of 8250/16550 serial ports to register at runtime</label>
						<help>Set this to the maximum number of serial ports you want
the kernel to register at boot time.  This can be overridden
with the module parameter &quot;nr_uarts&quot;, or boot-time parameter
8250.nr_uarts</help>
					</entry>
					<entry name="SERIAL_8250_EXTENDED">
						<label>Extended 8250/16550 serial driver options</label>
						<help>If you wish to use any non-standard features of the standard &quot;dumb&quot;
driver, say Y here. This includes HUB6 support, shared serial
interrupts, special multiport support, support for more than the
four COM 1/2/3/4 boards, etc.

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about serial driver options. If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_MANY_PORTS">
						<label>Support more than 4 legacy serial ports</label>
						<help>Say Y here if you have dumb serial boards other than the four
standard COM 1/2/3/4 ports. This may happen if you have an AST
FourPort, Accent Async, Boca (read the Boca mini-HOWTO, available
from &lt;http://www.tldp.org/docs.html#howto&gt;), or other custom
serial port hardware which acts similar to standard serial port
hardware. If you only use the standard COM 1/2/3/4 ports, you can
say N here to save some memory. You can also say Y if you have an
&quot;intelligent&quot; multiport card such as Cyclades, Digiboards, etc.</help>
					</entry>
					<entry name="SERIAL_8250_FOURPORT">
						<label>Support Fourport cards</label>
						<help>Say Y here if you have an AST FourPort serial board.

To compile this driver as a module, choose M here: the module
will be called 8250_fourport.</help>
					</entry>
					<entry name="SERIAL_8250_ACCENT">
						<label>Support Accent cards</label>
						<help>Say Y here if you have an Accent Async serial board.

To compile this driver as a module, choose M here: the module
will be called 8250_accent.</help>
					</entry>
					<entry name="SERIAL_8250_BOCA">
						<label>Support Boca cards</label>
						<help>Say Y here if you have a Boca serial board.  Please read the Boca
mini-HOWTO, available from &lt;http://www.tldp.org/docs.html#howto&gt;

To compile this driver as a module, choose M here: the module
will be called 8250_boca.</help>
					</entry>
					<entry name="SERIAL_8250_EXAR_ST16C554">
						<label>Support Exar ST16C554/554D Quad UART</label>
						<help>The Uplogix Envoy TU301 uses this Exar Quad UART.  If you are
tinkering with your Envoy TU301, or have a machine with this UART,
say Y here.

To compile this driver as a module, choose M here: the module
will be called 8250_exar_st16c554.</help>
					</entry>
					<entry name="SERIAL_8250_HUB6">
						<label>Support Hub6 cards</label>
						<help>Say Y here if you have a HUB6 serial board.

To compile this driver as a module, choose M here: the module
will be called 8250_hub6.</help>
					</entry>
					<entry name="SERIAL_8250_SHARE_IRQ">
						<label>Support for sharing serial interrupts</label>
						<help>Some serial boards have hardware support which allows multiple dumb
serial ports on the same board to share a single IRQ. To enable
support for this in the serial driver, say Y here.</help>
					</entry>
					<entry name="SERIAL_8250_DETECT_IRQ">
						<label>Autodetect IRQ on standard ports (unsafe)</label>
						<help>Say Y here if you want the kernel to try to guess which IRQ
to use for your serial port.

This is considered unsafe; it is far better to configure the IRQ in
a boot script using the setserial command.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_RSA">
						<label>Support RSA serial ports</label>
						<help>Say Y here if you have a IODATA RSA-DV II/S ISA card and
would like to use its &gt;115kbps speeds.
You will need to provide module parameter &quot;probe_rsa&quot;, or boot-time
parameter 8250.probe_rsa with I/O addresses of this card then.

If you don't have such card, or if unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_ACORN">
						<label>Acorn expansion card serial port support</label>
						<help>If you have an Atomwide Serial card or Serial Port card for an Acorn
system, say Y to this option.  The driver can handle 1, 2, or 3 port
cards.  If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_BCM2835AUX">
						<label>BCM2835 auxiliar mini UART support</label>
						<help>Support for the BCM2835 auxiliar mini UART.

Features and limitations of the UART are
Registers are similar to 16650 registers,
set bits in the control registers that are unsupported
are ignored and read back as 0
7/8 bit operation with 1 start and 1 stop bit
8 symbols deep fifo for rx and tx
SW controlled RTS and SW readable CTS
Clock rate derived from system clock
Uses 8 times oversampling (compared to 16 times for 16650)
Missing break detection (but break generation)
Missing framing error detection
Missing parity bit
Missing receive time-out interrupt
Missing DCD, DSR, DTR and RI signals

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_FSL"/>
					<entry name="SERIAL_8250_DW">
						<label>Support for Synopsys DesignWare 8250 quirks</label>
						<help>Selecting this option will enable handling of the extra features
present in the Synopsys DesignWare APB UART.</help>
					</entry>
					<entry name="SERIAL_8250_EM">
						<label>Support for Emma Mobile integrated serial port</label>
						<help>Selecting this option will add support for the integrated serial
port hardware found on the Emma Mobile line of processors.
If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_RT288X">
						<label>Ralink RT288x/RT305x/RT3662/RT3883 serial port support</label>
						<help>Selecting this option will add support for the alternate register
layout used by Ralink RT288x/RT305x, Alchemy Au1xxx, and some others.
If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_OMAP">
						<label>Support for OMAP internal UART (8250 based driver)</label>
						<help>If you have a machine based on an Texas Instruments OMAP CPU you
can enable its onboard serial ports by enabling this option.

This driver uses ttyS instead of ttyO.</help>
					</entry>
					<entry name="SERIAL_8250_OMAP_TTYO_FIXUP">
						<label>Replace ttyO with ttyS</label>
						<help>This option replaces the &quot;console=ttyO&quot; argument with the matching
ttyS argument if the user did not specified it on the command line.
This ensures that the user can see the kernel output during boot
which he wouldn't see otherwise. The getty has still to be configured
for ttyS instead of ttyO regardless of this option.
This option is intended for people who &quot;automatically&quot; enable this
driver without knowing that this driver requires a different console=
argument. If you read this, please keep this option disabled and
instead update your kernel command line. If you prepare a kernel for a
distribution or other kind of larger user base then you probably want
to keep this option enabled. Otherwise people might complain about a
not booting kernel because the serial console remains silent in case
they forgot to update the command line.</help>
					</entry>
					<entry name="SERIAL_8250_LPC18XX">
						<label>NXP LPC18xx/43xx serial port support</label>
						<help>If you have a LPC18xx/43xx based board and want to use the
serial port, say Y to this option. If unsure, say Y.</help>
					</entry>
					<entry name="SERIAL_8250_MT6577">
						<label>Mediatek serial port support</label>
						<help>If you have a Mediatek based board and want to use the
serial port, say Y to this option. If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_UNIPHIER">
						<label>Support for UniPhier on-chip UART</label>
						<help>If you have a UniPhier based board and want to use the on-chip
serial ports, say Y to this option. If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_INGENIC">
						<label>Support for Ingenic SoC serial ports</label>
						<help>If you have a system using an Ingenic SoC and wish to make use of
its UARTs, say Y to this option. If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_8250_MID">
						<label>Support for serial ports on Intel MID platforms&quot; if EXPERT</label>
						<help>Selecting this option will enable handling of the extra features
present on the UART found on Intel Medfield SOC and various other
Intel platforms.</help>
					</entry>
					<entry name="SERIAL_8250_MOXA">
						<label>MOXA SmartIO MUE support</label>
						<help>Say Y here if you have a Moxa SmartIO MUE multiport serial card.
If unsure, say N.

This driver can also be built as a module. The module will be called
8250_moxa. If you want to do that, say M here.</help>
					</entry>
					<entry name="SERIAL_OF_PLATFORM">
						<label>Devicetree based probing for 8250 ports</label>
						<help>This option is used for all 8250 compatible serial ports that
are probed through devicetree, including Open Firmware based
PowerPC systems and embedded systems on architectures using the
flattened device tree format.
</help>
					</entry>
					<entry name="SERIAL_AMBA_PL010">
						<label>ARM AMBA PL010 serial port support</label>
						<help>This selects the ARM(R) AMBA(R) PrimeCell PL010 UART.  If you have
an Integrator/AP or Integrator/PP2 platform, or if you have a
Cirrus Logic EP93xx CPU, say Y or M here.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_AMBA_PL010_CONSOLE">
						<label>Support for console on AMBA serial port</label>
						<help>Say Y here if you wish to use an AMBA PrimeCell UART as the system
console (the system console is the device which receives all kernel
messages and warnings and which allows logins in single user mode).

Even if you say Y here, the currently visible framebuffer console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyAM0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_AMBA_PL011">
						<label>ARM AMBA PL011 serial port support</label>
						<help>This selects the ARM(R) AMBA(R) PrimeCell PL011 UART.  If you have
an Integrator/PP2, Integrator/CP or Versatile platform, say Y or M
here.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_AMBA_PL011_CONSOLE">
						<label>Support for console on AMBA serial port</label>
						<help>Say Y here if you wish to use an AMBA PrimeCell UART as the system
console (the system console is the device which receives all kernel
messages and warnings and which allows logins in single user mode).

Even if you say Y here, the currently visible framebuffer console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyAMA0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_EARLYCON_ARM_SEMIHOST">
						<label>Early console using ARM semihosting</label>
						<help>Support for early debug console using ARM semihosting. This enables
the console before standard serial driver is probed. This is enabled
with &quot;earlycon=smh&quot; on the kernel command line. The console is
enabled when early_param is processed.</help>
					</entry>
					<entry name="SERIAL_SB1250_DUART">
						<label>BCM1xxx on-chip DUART serial support</label>
						<help>Support for the asynchronous serial interface (DUART) included in
the BCM1250 and derived System-On-a-Chip (SOC) devices.  Note that
the letter D in DUART stands for &quot;dual&quot;, which is how the device
is implemented.  Depending on the SOC configuration there may be
one or more DUARTs available of which all are handled.

If unsure, say Y.  To compile this driver as a module, choose M here:
the module will be called sb1250-duart.</help>
					</entry>
					<entry name="SERIAL_SB1250_DUART_CONSOLE">
						<label>Support for console on a BCM1xxx DUART serial port</label>
						<help>If you say Y here, it will be possible to use a serial port as the
system console (the system console is the device which receives all
kernel messages and warnings and which allows logins in single user
mode).

If unsure, say Y.</help>
					</entry>
					<entry name="SERIAL_ATMEL">
						<label>AT91 / AT32 on-chip serial port support</label>
						<help>This enables the driver for the on-chip UARTs of the Atmel
AT91 and AT32 processors.</help>
					</entry>
					<entry name="SERIAL_ATMEL_CONSOLE">
						<label>Support for console on AT91 / AT32 serial port</label>
						<help>Say Y here if you wish to use an on-chip UART on a Atmel
AT91 or AT32 processor as the system console (the system
console is the device which receives all kernel messages and
warnings and which allows logins in single user mode).</help>
					</entry>
					<entry name="SERIAL_ATMEL_PDC">
						<label>Support DMA transfers on AT91 / AT32 serial port</label>
						<help>Say Y here if you wish to use the PDC to do DMA transfers to
and from the Atmel AT91 / AT32 serial port. In order to
actually use DMA transfers, make sure that the use_dma_tx
and use_dma_rx members in the atmel_uart_data struct is set
appropriately for each port.

Note that break and error handling currently doesn't work
properly when DMA is enabled. Make sure that ports where
this matters don't use DMA.</help>
					</entry>
					<entry name="SERIAL_ATMEL_TTYAT">
						<label>Install as device ttyATn instead of ttySn</label>
						<help>Say Y here if you wish to have the internal AT91 / AT32 UARTs
appear as /dev/ttyATn (major 204, minor starting at 154)
instead of the normal /dev/ttySn (major 4, minor starting at
64). This is necessary if you also want other UARTs, such as
external 8250/16C550 compatible UARTs.
The ttySn nodes are legally reserved for the 8250 serial driver
but are often misused by other serial drivers.

To use this, you should create suitable ttyATn device nodes in
/dev/, and pass &quot;console=ttyATn&quot; to the kernel.

Say Y if you have an external 8250/16C550 UART.  If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_KGDB_NMI">
						<label>Serial console over KGDB NMI debugger port</label>
						<help>This special driver allows you to temporary use NMI debugger port
as a normal console (assuming that the port is attached to KGDB).

Unlike KDB's disable_nmi command, with this driver you are always
able to go back to the debugger using KGDB escape sequence ($3#33).
This is because this console driver processes the input in NMI
context, and thus is able to intercept the magic sequence.

Note that since the console interprets input and uses polling
communication methods, for things like PPP you still must fully
detach debugger port from the KGDB NMI (i.e. disable_nmi), and
use raw console.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_KS8695">
						<label>Micrel KS8695 (Centaur) serial port support</label>
						<help>This selects the Micrel Centaur KS8695 UART.  Say Y here.</help>
					</entry>
					<entry name="SERIAL_KS8695_CONSOLE">
						<label>Support for console on KS8695 (Centaur) serial port</label>
						<help>Say Y here if you wish to use a KS8695 (Centaur) UART as the
system console (the system console is the device which
receives all kernel messages and warnings and which allows
logins in single user mode).</help>
					</entry>
					<entry name="SERIAL_MESON">
						<label>Meson serial port support</label>
						<help>This enables the driver for the on-chip UARTs of the Amlogic
MesonX processors.</help>
					</entry>
					<entry name="SERIAL_MESON_CONSOLE">
						<label>Support for console on meson</label>
						<help>Say Y here if you wish to use a Amlogic MesonX UART as the
system console (the system console is the device which
receives all kernel messages and warnings and which allows
logins in single user mode) as /dev/ttyAMLx.</help>
					</entry>
					<entry name="SERIAL_CLPS711X">
						<label>CLPS711X serial port support</label>
						<help>This enables the driver for the on-chip UARTs of the Cirrus
Logic EP711x/EP721x/EP731x processors.</help>
					</entry>
					<entry name="SERIAL_CLPS711X_CONSOLE">
						<label>Support for console on CLPS711X serial port</label>
						<help>Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyCL1&quot;.</help>
					</entry>
					<entry name="SERIAL_SAMSUNG">
						<label>Samsung SoC serial support</label>
						<help>Support for the on-chip UARTs on the Samsung S3C24XX series CPUs,
providing /dev/ttySAC0, 1 and 2 (note, some machines may not
provide all of these ports, depending on how the serial port
pins are configured.</help>
					</entry>
					<entry name="SERIAL_SAMSUNG_UARTS_4">
						<help>Internal node for the common case of 4 Samsung compatible UARTs</help>
					</entry>
					<entry name="SERIAL_SAMSUNG_UARTS">
						<help>Select the number of available UART ports for the Samsung S3C
serial driver</help>
					</entry>
					<entry name="SERIAL_SAMSUNG_DEBUG">
						<label>Samsung SoC serial debug</label>
						<help>Add support for debugging the serial driver. Since this is
generally being used as a console, we use our own output
routines that go via the low-level debug printascii()
function.</help>
					</entry>
					<entry name="SERIAL_SAMSUNG_CONSOLE">
						<label>Support for console on Samsung SoC serial port</label>
						<help>Allow selection of the S3C24XX on-board serial ports for use as
an virtual console.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttySACx&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader about how to pass options to the kernel at
boot time.)</help>
					</entry>
					<entry name="SERIAL_SIRFSOC">
						<label>SiRF SoC Platform Serial port support</label>
						<help>Support for the on-chip UART on the CSR SiRFprimaII series,
providing /dev/ttySiRF0, 1 and 2 (note, some machines may not
provide all of these ports, depending on how the serial port
pins are configured).</help>
					</entry>
					<entry name="SERIAL_SIRFSOC_CONSOLE">
						<label>Support for console on SiRF SoC serial port</label>
						<help>Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttySiRFx&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader about how to pass options to the kernel at
boot time.)</help>
					</entry>
					<entry name="SERIAL_TEGRA">
						<label>NVIDIA Tegra20/30 SoC serial controller</label>
						<help>Support for the on-chip UARTs on the NVIDIA Tegra series SOCs
providing /dev/ttyTHS0, 1, 2, 3 and 4 (note, some machines may not
provide all of these ports, depending on how the serial port
are enabled). This driver uses the APB DMA to achieve higher baudrate
and better performance.</help>
					</entry>
					<entry name="SERIAL_MAX3100">
						<label>MAX3100 support</label>
						<help>MAX3100 chip support</help>
					</entry>
					<entry name="SERIAL_MAX310X">
						<label>MAX310X support</label>
						<help>This selects support for an advanced UART from Maxim (Dallas).
Supported ICs are MAX3107, MAX3108, MAX3109, MAX14830.
Each IC contains 128 words each of receive and transmit FIFO
that can be controlled through I2C or high-speed SPI.

Say Y here if you want to support this ICs.</help>
					</entry>
					<entry name="SERIAL_DZ">
						<label>DECstation DZ serial driver</label>
						<help>DZ11-family serial controllers for DECstations and VAXstations,
including the DC7085, M7814, and M7819.</help>
					</entry>
					<entry name="SERIAL_DZ_CONSOLE">
						<label>Support console on DECstation DZ serial driver</label>
						<help>If you say Y here, it will be possible to use a serial port as the
system console (the system console is the device which receives all
kernel messages and warnings and which allows logins in single user
mode).

Note that the firmware uses ttyS3 as the serial console on
DECstations that use this driver.

If unsure, say Y.</help>
					</entry>
					<entry name="SERIAL_ZS">
						<label>DECstation Z85C30 serial support</label>
						<help>Support for the Zilog 85C350 serial communications controller used
for serial ports in newer DECstation systems.  These include the
DECsystem 5900 and all models of the DECstation and DECsystem 5000
systems except from model 200.

If unsure, say Y.  To compile this driver as a module, choose M here:
the module will be called zs.</help>
					</entry>
					<entry name="SERIAL_ZS_CONSOLE">
						<label>Support for console on a DECstation Z85C30 serial port</label>
						<help>If you say Y here, it will be possible to use a serial port as the
system console (the system console is the device which receives all
kernel messages and warnings and which allows logins in single user
mode).

Note that the firmware uses ttyS1 as the serial console on the
Maxine and ttyS3 on the others using this driver.

If unsure, say Y.</help>
					</entry>
					<entry name="SERIAL_21285">
						<label>DC21285 serial port support</label>
						<help>If you have a machine based on a 21285 (Footbridge) StrongARM(R)/
PCI bridge you can enable its onboard serial port by enabling this
option.</help>
					</entry>
					<entry name="SERIAL_21285_CONSOLE">
						<label>Console on DC21285 serial port</label>
						<help>If you have enabled the serial port on the 21285 footbridge you can
make it the console by answering Y to this option.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyFB&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_MPSC">
						<label>Marvell MPSC serial port support</label>
						<help>Say Y here if you want to use the Marvell MPSC serial controller.</help>
					</entry>
					<entry name="SERIAL_MPSC_CONSOLE">
						<label>Support for console on Marvell MPSC serial port</label>
						<help>Say Y here if you want to support a serial console on a Marvell MPSC.</help>
					</entry>
					<entry name="SERIAL_PXA">
						<label>PXA serial port support</label>
						<help>If you have a machine based on an Intel XScale PXA2xx CPU you
can enable its onboard serial ports by enabling this option.</help>
					</entry>
					<entry name="SERIAL_PXA_CONSOLE">
						<label>Console on PXA serial port</label>
						<help>If you have enabled the serial port on the Intel XScale PXA
CPU you can make it the console by answering Y to this option.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttySA0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_SA1100">
						<label>SA1100 serial port support</label>
						<help>If you have a machine based on a SA1100/SA1110 StrongARM(R) CPU you
can enable its onboard serial port by enabling this option.
Please read &lt;file:Documentation/arm/SA1100/serial_UART&gt; for further
info.</help>
					</entry>
					<entry name="SERIAL_SA1100_CONSOLE">
						<label>Console on SA1100 serial port</label>
						<help>If you have enabled the serial port on the SA1100/SA1110 StrongARM
CPU you can make it the console by answering Y to this option.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttySA0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_BFIN">
						<label>Blackfin serial port support</label>
						<help>Add support for the built-in UARTs on the Blackfin.

To compile this driver as a module, choose M here: the
module is named bfin_uart.ko.</help>
					</entry>
					<entry name="SERIAL_BFIN_CONSOLE">
						<label>Console on Blackfin serial port</label>
					</entry>
					<entry name="SERIAL_BFIN_DMA">
						<label>DMA mode</label>
						<help>This driver works under DMA mode. If this option is selected, the
blackfin simple dma driver is also enabled.</help>
					</entry>
					<entry name="SERIAL_BFIN_PIO">
						<label>PIO mode</label>
						<help>This driver works under PIO mode.</help>
					</entry>
					<entry name="SERIAL_BFIN_UART0">
						<label>Enable UART0</label>
						<help>Enable UART0</help>
					</entry>
					<entry name="BFIN_UART0_CTSRTS">
						<label>Enable UART0 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_UART1">
						<label>Enable UART1</label>
						<help>Enable UART1</help>
					</entry>
					<entry name="BFIN_UART1_CTSRTS">
						<label>Enable UART1 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_UART2">
						<label>Enable UART2</label>
						<help>Enable UART2</help>
					</entry>
					<entry name="BFIN_UART2_CTSRTS">
						<label>Enable UART2 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_UART3">
						<label>Enable UART3</label>
						<help>Enable UART3</help>
					</entry>
					<entry name="BFIN_UART3_CTSRTS">
						<label>Enable UART3 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_IMX">
						<label>IMX serial port support</label>
						<help>If you have a machine based on a Motorola IMX CPU you
can enable its onboard serial port by enabling this option.</help>
					</entry>
					<entry name="SERIAL_IMX_CONSOLE">
						<label>Console on IMX serial port</label>
						<help>If you have enabled the serial port on the Freescale IMX
CPU you can make it the console by answering Y to this option.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttymxc0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your bootloader about how to pass options to the kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_UARTLITE">
						<label>Xilinx uartlite serial port support</label>
						<help>Say Y here if you want to use the Xilinx uartlite serial controller.

To compile this driver as a module, choose M here: the
module will be called uartlite.</help>
					</entry>
					<entry name="SERIAL_UARTLITE_CONSOLE">
						<label>Support for console on Xilinx uartlite serial port</label>
						<help>Say Y here if you wish to use a Xilinx uartlite as the system
console (the system console is the device which receives all kernel
messages and warnings and which allows logins in single user mode).</help>
					</entry>
					<entry name="SERIAL_SUNCORE"/>
					<entry name="SERIAL_SUNZILOG">
						<label>Sun Zilog8530 serial support</label>
						<help>This driver supports the Zilog8530 serial ports found on many Sparc
systems.  Say Y or M if you want to be able to these serial ports.</help>
					</entry>
					<entry name="SERIAL_SUNZILOG_CONSOLE">
						<label>Console on Sun Zilog8530 serial port</label>
						<help>If you would like to be able to use the Zilog8530 serial port
on your Sparc system as the console, you can do so by answering
Y to this option.</help>
					</entry>
					<entry name="SERIAL_SUNSU">
						<label>Sun SU serial support</label>
						<help>This driver supports the 8250 serial ports that run the keyboard and
mouse on (PCI) UltraSPARC systems.  Say Y or M if you want to be able
to these serial ports.</help>
					</entry>
					<entry name="SERIAL_SUNSU_CONSOLE">
						<label>Console on Sun SU serial port</label>
						<help>If you would like to be able to use the SU serial port
on your Sparc system as the console, you can do so by answering
Y to this option.</help>
					</entry>
					<entry name="SERIAL_MUX">
						<label>Serial MUX support</label>
						<help>Saying Y here will enable the hardware MUX serial driver for
the Nova, K class systems and D class with a 'remote control card'.
The hardware MUX is not 8250/16550 compatible therefore the
/dev/ttyB0 device is shared between the Serial MUX and the PDC
software console. The following steps need to be completed to use
the Serial MUX:

1. create the device entry (mknod /dev/ttyB0 c 11 0)
2. Edit the /etc/inittab to start a getty listening on /dev/ttyB0
3. Add device ttyB0 to /etc/securetty (if you want to log on as
root on this console.)
4. Change the kernel command console parameter to: console=ttyB0</help>
					</entry>
					<entry name="SERIAL_MUX_CONSOLE">
						<label>Support for console on serial MUX</label>
					</entry>
					<entry name="PDC_CONSOLE">
						<label>PDC software console support</label>
						<help>Saying Y here will enable the software based PDC console to be
used as the system console.  This is useful for machines in
which the hardware based console has not been written yet.  The
following steps must be completed to use the PDC console:

1. create the device entry (mknod /dev/ttyB0 c 11 0)
2. Edit the /etc/inittab to start a getty listening on /dev/ttyB0
3. Add device ttyB0 to /etc/securetty (if you want to log on as
root on this console.)
4. Change the kernel command console parameter to: console=ttyB0</help>
					</entry>
					<entry name="SERIAL_SUNSAB">
						<label>Sun Siemens SAB82532 serial support</label>
						<help>This driver supports the Siemens SAB82532 DUSCC serial ports on newer
(PCI) UltraSPARC systems.  Say Y or M if you want to be able to these
serial ports.</help>
					</entry>
					<entry name="SERIAL_SUNSAB_CONSOLE">
						<label>Console on Sun Siemens SAB82532 serial port</label>
						<help>If you would like to be able to use the SAB82532 serial port
on your Sparc system as the console, you can do so by answering
Y to this option.</help>
					</entry>
					<entry name="SERIAL_SUNHV">
						<label>Sun4v Hypervisor Console support</label>
						<help>This driver supports the console device found on SUN4V Sparc
systems.  Say Y if you want to be able to use this device.</help>
					</entry>
					<entry name="SERIAL_IP22_ZILOG">
						<label>SGI Zilog8530 serial support</label>
						<help>This driver supports the Zilog8530 serial ports found on SGI
systems.  Say Y or M if you want to be able to these serial ports.</help>
					</entry>
					<entry name="SERIAL_IP22_ZILOG_CONSOLE">
						<label>Console on SGI Zilog8530 serial port</label>
					</entry>
					<entry name="SERIAL_SH_SCI">
						<label>SuperH SCI(F) serial port support</label>
					</entry>
					<entry name="SERIAL_SH_SCI_NR_UARTS">
						<label>Maximum number of SCI(F) serial ports</label>
					</entry>
					<entry name="SERIAL_SH_SCI_CONSOLE">
						<label>Support for console on SuperH SCI(F)</label>
					</entry>
					<entry name="SERIAL_SH_SCI_EARLYCON">
						<label>Support for early console on SuperH SCI(F)</label>
					</entry>
					<entry name="SERIAL_SH_SCI_DMA">
						<label>DMA support</label>
					</entry>
					<entry name="SERIAL_PNX8XXX">
						<label>Enable PNX8XXX SoCs' UART Support</label>
						<help>If you have a MIPS-based Philips SoC such as PNX8330 and you want
to use serial ports, say Y.  Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_PNX8XXX_CONSOLE">
						<label>Enable PNX8XX0 serial console</label>
						<help>If you have a MIPS-based Philips SoC such as PNX8330 and you want
to use serial console, say Y. Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_HS_LPC32XX">
						<label>LPC32XX high speed serial port support</label>
						<help>Support for the LPC32XX high speed serial ports (up to 900kbps).
Those are UARTs completely different from the Standard UARTs on the
LPC32XX SoC.
Choose M or Y here to build this driver.</help>
					</entry>
					<entry name="SERIAL_HS_LPC32XX_CONSOLE">
						<label>Enable LPC32XX high speed UART serial console</label>
						<help>If you would like to be able to use one of the high speed serial
ports on the LPC32XX as the console, you can do so by answering
Y to this option.</help>
					</entry>
					<entry name="SERIAL_CORE"/>
					<entry name="SERIAL_CORE_CONSOLE"/>
					<entry name="CONSOLE_POLL"/>
					<entry name="SERIAL_MCF">
						<label>Coldfire serial support</label>
						<help>This serial driver supports the Freescale Coldfire serial ports.</help>
					</entry>
					<entry name="SERIAL_MCF_BAUDRATE">
						<label>Default baudrate for Coldfire serial ports</label>
						<help>This setting lets you define what the default baudrate is for the
ColdFire serial ports. The usual default varies from board to board,
and this setting is a way of catering for that.</help>
					</entry>
					<entry name="SERIAL_MCF_CONSOLE">
						<label>Coldfire serial console support</label>
						<help>Enable a ColdFire internal serial port to be the system console.</help>
					</entry>
					<entry name="SERIAL_PMACZILOG">
						<label>Mac or PowerMac z85c30 ESCC support</label>
						<help>This driver supports the Zilog z85C30 serial ports found on
(Power)Mac machines.
Say Y or M if you want to be able to these serial ports.</help>
					</entry>
					<entry name="SERIAL_PMACZILOG_TTYS">
						<label>Use ttySn device nodes for Zilog z85c30</label>
						<help>The pmac_zilog driver for the z85C30 chip on many powermacs
historically used the device numbers for /dev/ttySn.  The
8250 serial port driver also uses these numbers, which means
the two drivers being unable to coexist; you could not use
both z85C30 and 8250 type ports at the same time.

If this option is not selected, the pmac_zilog driver will
use the device numbers allocated for /dev/ttyPZn.  This allows
the pmac_zilog and 8250 drivers to co-exist, but may cause
existing userspace setups to break.  Programs that need to
access the built-in serial ports on powermacs will need to
be reconfigured to use /dev/ttyPZn instead of /dev/ttySn.

If you enable this option, any z85c30 ports in the system will
be registered as ttyS0 onwards as in the past, and you will be
unable to use the 8250 module for PCMCIA or other 16C550-style
UARTs.

Say N unless you need the z85c30 ports on your (Power)Mac
to appear as /dev/ttySn.</help>
					</entry>
					<entry name="SERIAL_PMACZILOG_CONSOLE">
						<label>Console on Mac or PowerMac z85c30 serial port</label>
						<help>If you would like to be able to use the z85c30 serial port
on your (Power)Mac as the console, you can do so by answering
Y to this option.</help>
					</entry>
					<entry name="SERIAL_CPM">
						<label>CPM SCC/SMC serial port support</label>
						<help>This driver supports the SCC and SMC serial ports on Motorola
embedded PowerPC that contain a CPM1 (8xx) or CPM2 (8xxx)</help>
					</entry>
					<entry name="SERIAL_CPM_CONSOLE">
						<label>Support for console on CPM SCC/SMC serial port</label>
						<help>Say Y here if you wish to use a SCC or SMC CPM UART as the system
console (the system console is the device which receives all kernel
messages and warnings and which allows logins in single user mode).

Even if you say Y here, the currently visible framebuffer console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyCPM0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)</help>
					</entry>
					<entry name="SERIAL_SGI_L1_CONSOLE">
						<label>SGI Altix L1 serial console support</label>
						<help>If you have an SGI Altix and you would like to use the system
controller serial port as your console (you want this!),
say Y.  Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_PIC32">
						<label>Microchip PIC32 serial support</label>
						<help>If you have a PIC32, this driver supports the serial ports.

Say Y or M to use PIC32 serial ports, otherwise say N. Note that
to use a serial port as a console, this must be included in kernel and
not as a module.</help>
					</entry>
					<entry name="SERIAL_PIC32_CONSOLE">
						<label>PIC32 serial console support</label>
						<help>If you have a PIC32, this driver supports the putting a console on one
of the serial ports.

Say Y to use the PIC32 console, otherwise say N.</help>
					</entry>
					<entry name="SERIAL_MPC52xx">
						<label>Freescale MPC52xx/MPC512x family PSC serial support</label>
						<help>This driver supports MPC52xx and MPC512x PSC serial ports. If you would
like to use them, you must answer Y or M to this option. Note that
for use as console, it must be included in kernel and not as a
module.</help>
					</entry>
					<entry name="SERIAL_MPC52xx_CONSOLE">
						<label>Console on a Freescale MPC52xx/MPC512x family PSC serial port</label>
						<help>Select this options if you'd like to use one of the PSC serial port
of the Freescale MPC52xx family as a console.</help>
					</entry>
					<entry name="SERIAL_MPC52xx_CONSOLE_BAUD">
						<label>Freescale MPC52xx/MPC512x family PSC serial port baud</label>
						<help>Select the MPC52xx console baud rate.
This value is only used if the bootloader doesn't pass in the
console baudrate</help>
					</entry>
					<entry name="SERIAL_ICOM">
						<label>IBM Multiport Serial Adapter</label>
						<help>This driver is for a family of multiport serial adapters
including 2 port RVX, 2 port internal modem, 4 port internal
modem and a split 1 port RVX and 1 port internal modem.

This driver can also be built as a module.  If so, the module
will be called icom.</help>
					</entry>
					<entry name="SERIAL_M32R_SIO">
						<label>M32R SIO I/F</label>
						<help>Say Y here if you want to use the M32R serial controller.</help>
					</entry>
					<entry name="SERIAL_M32R_SIO_CONSOLE">
						<label>use SIO console</label>
						<help>Say Y here if you want to support a serial console.

If you use an M3T-M32700UT or an OPSPUT platform,
please say also y for SERIAL_M32R_PLDSIO.</help>
					</entry>
					<entry name="SERIAL_M32R_PLDSIO">
						<label>M32R SIO I/F on a PLD</label>
						<help>Say Y here if you want to use the M32R serial controller
on a PLD (Programmable Logic Device).

If you use an M3T-M32700UT or an OPSPUT platform,
please say Y.</help>
					</entry>
					<entry name="SERIAL_TXX9">
						<label>TMPTX39XX/49XX SIO support</label>
					</entry>
					<entry name="HAS_TXX9_SERIAL"/>
					<entry name="SERIAL_TXX9_NR_UARTS">
						<label>Maximum number of TMPTX39XX/49XX SIO ports</label>
					</entry>
					<entry name="SERIAL_TXX9_CONSOLE">
						<label>TMPTX39XX/49XX SIO Console support</label>
					</entry>
					<entry name="SERIAL_TXX9_STDSERIAL">
						<label>TX39XX/49XX SIO act as standard serial</label>
					</entry>
					<entry name="SERIAL_VR41XX">
						<label>NEC VR4100 series Serial Interface Unit support</label>
						<help>If you have a NEC VR4100 series processor and you want to use
Serial Interface Unit(SIU) or Debug Serial Interface Unit(DSIU)
(not include VR4111/VR4121 DSIU), say Y.  Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_VR41XX_CONSOLE">
						<label>Enable NEC VR4100 series Serial Interface Unit console</label>
						<help>If you have a NEC VR4100 series processor and you want to use
a console on a serial port, say Y.  Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_JSM">
						<label>Digi International NEO and Classic PCI Support</label>
						<help>This is a driver for Digi International's Neo and Classic series
of cards which provide multiple serial ports. You would need
something like this to connect more than two modems to your Linux
box, for instance in order to become a dial-in server. This driver
supports PCI boards only.

If you have a card like this, say Y here, otherwise say N.

To compile this driver as a module, choose M here: the
module will be called jsm.</help>
					</entry>
					<entry name="SERIAL_SGI_IOC4">
						<label>SGI IOC4 controller serial support</label>
						<help>If you have an SGI Altix with an IOC4 based Base IO card
and wish to use the serial ports on this card, say Y.
Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_SGI_IOC3">
						<label>SGI Altix IOC3 serial support</label>
						<help>If you have an SGI Altix with an IOC3 serial card,
say Y or M.  Otherwise, say N.</help>
					</entry>
					<entry name="SERIAL_MSM">
						<label>MSM on-chip serial port support</label>
					</entry>
					<entry name="SERIAL_MSM_CONSOLE">
						<label>MSM serial console support</label>
					</entry>
					<entry name="SERIAL_VT8500">
						<label>VIA VT8500 on-chip serial port support</label>
					</entry>
					<entry name="SERIAL_VT8500_CONSOLE">
						<label>VIA VT8500 serial console support</label>
					</entry>
					<entry name="SERIAL_ETRAXFS">
						<label>ETRAX FS serial port support</label>
					</entry>
					<entry name="SERIAL_ETRAXFS_CONSOLE">
						<label>ETRAX FS serial console support</label>
					</entry>
					<entry name="SERIAL_NETX">
						<label>NetX serial port support</label>
						<help>If you have a machine based on a Hilscher NetX SoC you
can enable its onboard serial port by enabling this option.

To compile this driver as a module, choose M here: the
module will be called netx-serial.</help>
					</entry>
					<entry name="SERIAL_NETX_CONSOLE">
						<label>Console on NetX serial port</label>
						<help>If you have enabled the serial port on the Hilscher NetX SoC
you can make it the console by answering Y to this option.</help>
					</entry>
					<entry name="SERIAL_OMAP">
						<label>OMAP serial port support</label>
						<help>If you have a machine based on an Texas Instruments OMAP CPU you
can enable its onboard serial ports by enabling this option.

By enabling this option you take advantage of dma feature available
with the omap-serial driver. DMA support can be enabled from platform
data.</help>
					</entry>
					<entry name="SERIAL_OMAP_CONSOLE">
						<label>Console on OMAP serial port</label>
						<help>Select this option if you would like to use omap serial port as
console.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyOx&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader about how to pass options to the kernel at
boot time.)</help>
					</entry>
					<entry name="SERIAL_LANTIQ">
						<label>Lantiq serial driver</label>
						<help>Support for console and UART on Lantiq SoCs.</help>
					</entry>
					<entry name="SERIAL_QE">
						<label>Freescale QUICC Engine serial port support</label>
						<help>This driver supports the QE serial ports on Freescale embedded
PowerPC that contain a QUICC Engine.</help>
					</entry>
					<entry name="SERIAL_SCCNXP">
						<label>SCCNXP serial port support</label>
						<help>This selects support for an advanced UART from NXP (Philips).
Supported ICs are SCC2681, SCC2691, SCC2692, SC28L91, SC28L92,
SC28L202, SCC68681 and SCC68692.</help>
					</entry>
					<entry name="SERIAL_SCCNXP_CONSOLE">
						<label>Console on SCCNXP serial port</label>
						<help>Support for console on SCCNXP serial ports.</help>
					</entry>
					<entry name="SERIAL_SC16IS7XX_CORE"/>
					<entry name="SERIAL_SC16IS7XX">
						<label>SC16IS7xx serial support</label>
						<help>This selects support for SC16IS7xx serial ports.
Supported ICs are SC16IS740, SC16IS741, SC16IS750, SC16IS752,
SC16IS760 and SC16IS762. Select supported buses using options below.</help>
					</entry>
					<entry name="SERIAL_SC16IS7XX_I2C">
						<label>SC16IS7xx for I2C interface</label>
						<help>Enable SC16IS7xx driver on I2C bus,
If required say y, and say n to i2c if not required,
Enabled by default to support oldconfig.
You must select at least one bus for the driver to be built.</help>
					</entry>
					<entry name="SERIAL_SC16IS7XX_SPI">
						<label>SC16IS7xx for spi interface</label>
						<help>Enable SC16IS7xx driver on SPI bus,
If required say y, and say n to spi if not required,
This is additional support to exsisting driver.
You must select at least one bus for the driver to be built.</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT">
						<label>Blackfin SPORT emulate UART</label>
						<help>Enable SPORT emulate UART on Blackfin series.

To compile this driver as a module, choose M here: the
module will be called bfin_sport_uart.</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT_CONSOLE">
						<label>Console on Blackfin sport emulated uart</label>
					</entry>
					<entry name="SERIAL_BFIN_SPORT0_UART">
						<label>Enable UART over SPORT0</label>
						<help>Enable UART over SPORT0</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT0_UART_CTSRTS">
						<label>Enable UART over SPORT0 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT1_UART">
						<label>Enable UART over SPORT1</label>
						<help>Enable UART over SPORT1</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT1_UART_CTSRTS">
						<label>Enable UART over SPORT1 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT2_UART">
						<label>Enable UART over SPORT2</label>
						<help>Enable UART over SPORT2</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT2_UART_CTSRTS">
						<label>Enable UART over SPORT2 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT3_UART">
						<label>Enable UART over SPORT3</label>
						<help>Enable UART over SPORT3</help>
					</entry>
					<entry name="SERIAL_BFIN_SPORT3_UART_CTSRTS">
						<label>Enable UART over SPORT3 hardware flow control</label>
						<help>Enable hardware flow control in the driver.</help>
					</entry>
					<entry name="SERIAL_TIMBERDALE">
						<label>Support for timberdale UART</label>
						<help>Add support for UART controller on timberdale.</help>
					</entry>
					<entry name="SERIAL_BCM63XX">
						<label>Broadcom BCM63xx/BCM33xx UART support</label>
						<help>This enables the driver for the onchip UART core found on
the following chipsets:

BCM33xx (cable modem)
BCM63xx/BCM63xxx (DSL)
BCM68xx (PON)
BCM7xxx (STB) - DOCSIS console</help>
					</entry>
					<entry name="SERIAL_BCM63XX_CONSOLE">
						<label>Console on BCM63xx serial port</label>
						<help>If you have enabled the serial port on the BCM63xx CPU
you can make it the console by answering Y to this option.</help>
					</entry>
					<entry name="SERIAL_GRLIB_GAISLER_APBUART">
						<label>GRLIB APBUART serial support</label>
						<help>Add support for the GRLIB APBUART serial port.</help>
					</entry>
					<entry name="SERIAL_GRLIB_GAISLER_APBUART_CONSOLE">
						<label>Console on GRLIB APBUART serial port</label>
						<help>Support for running a console on the GRLIB APBUART</help>
					</entry>
					<entry name="SERIAL_ALTERA_JTAGUART">
						<label>Altera JTAG UART support</label>
						<help>This driver supports the Altera JTAG UART port.</help>
					</entry>
					<entry name="SERIAL_ALTERA_JTAGUART_CONSOLE">
						<label>Altera JTAG UART console support</label>
						<help>Enable a Altera JTAG UART port to be the system console.</help>
					</entry>
					<entry name="SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS">
						<label>Bypass output when no connection</label>
						<help>Bypass console output and keep going even if there is no
JTAG terminal connection with the host.</help>
					</entry>
					<entry name="SERIAL_ALTERA_UART">
						<label>Altera UART support</label>
						<help>This driver supports the Altera softcore UART port.</help>
					</entry>
					<entry name="SERIAL_ALTERA_UART_MAXPORTS">
						<label>Maximum number of Altera UART ports</label>
						<help>This setting lets you define the maximum number of the Altera
UART ports. The usual default varies from board to board, and
this setting is a way of catering for that.</help>
					</entry>
					<entry name="SERIAL_ALTERA_UART_BAUDRATE">
						<label>Default baudrate for Altera UART ports</label>
						<help>This setting lets you define what the default baudrate is for the
Altera UART ports. The usual default varies from board to board,
and this setting is a way of catering for that.</help>
					</entry>
					<entry name="SERIAL_ALTERA_UART_CONSOLE">
						<label>Altera UART console support</label>
						<help>Enable a Altera UART port to be the system console.</help>
					</entry>
					<entry name="SERIAL_IFX6X60">
						<label>SPI protocol driver for Infineon 6x60 modem (EXPERIMENTAL)</label>
						<help>Support for the IFX6x60 modem devices on Intel MID platforms.</help>
					</entry>
					<entry name="SERIAL_PCH_UART">
						<label>Intel EG20T PCH/LAPIS Semicon IOH(ML7213/ML7223/ML7831) UART</label>
						<help>This driver is for PCH(Platform controller Hub) UART of Intel EG20T
which is an IOH(Input/Output Hub) for x86 embedded processor.
Enabling PCH_DMA, this PCH UART works as DMA mode.

This driver also can be used for LAPIS Semiconductor IOH(Input/
Output Hub), ML7213, ML7223 and ML7831.
ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
for MP(Media Phone) use and ML7831 IOH is for general purpose use.
ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.</help>
					</entry>
					<entry name="SERIAL_PCH_UART_CONSOLE">
						<label>Support for console on Intel EG20T PCH UART/OKI SEMICONDUCTOR ML7213 IOH</label>
						<help>Say Y here if you wish to use the PCH UART as the system console
(the system  console is the device which receives all kernel messages and
warnings and which allows logins in single user mode).</help>
					</entry>
					<entry name="SERIAL_MXS_AUART">
						<label>MXS AUART support</label>
						<help>This driver supports the MXS and Alphascale ASM9260 Application
UART (AUART) port.</help>
					</entry>
					<entry name="SERIAL_MXS_AUART_CONSOLE">
						<label>MXS AUART console support</label>
						<help>Enable a MXS AUART port to be the system console.</help>
					</entry>
					<entry name="SERIAL_XILINX_PS_UART">
						<label>Cadence (Xilinx Zynq) UART support</label>
						<help>This driver supports the Cadence UART. It is found e.g. in Xilinx
Zynq.</help>
					</entry>
					<entry name="SERIAL_XILINX_PS_UART_CONSOLE">
						<label>Cadence UART console support</label>
						<help>Enable a Cadence UART port to be the system console.</help>
					</entry>
					<entry name="SERIAL_AR933X">
						<label>AR933X serial port support</label>
						<help>If you have an Atheros AR933X SOC based board and want to use the
built-in UART of the SoC, say Y to this option.

To compile this driver as a module, choose M here: the
module will be called ar933x_uart.</help>
					</entry>
					<entry name="SERIAL_AR933X_CONSOLE">
						<label>Console on AR933X serial port</label>
						<help>Enable a built-in UART port of the AR933X to be the system console.</help>
					</entry>
					<entry name="SERIAL_AR933X_NR_UARTS">
						<label>Maximum number of AR933X serial ports</label>
						<help>Set this to the number of serial ports you want the driver
to support.</help>
					</entry>
					<entry name="SERIAL_EFM32_UART">
						<label>EFM32 UART/USART port</label>
						<help>This driver support the USART and UART ports on
Energy Micro's efm32 SoCs.</help>
					</entry>
					<entry name="SERIAL_MPS2_UART_CONSOLE">
						<label>MPS2 UART console support</label>
					</entry>
					<entry name="SERIAL_MPS2_UART">
						<label>MPS2 UART port</label>
						<help>This driver support the UART ports on ARM MPS2.</help>
					</entry>
					<entry name="SERIAL_EFM32_UART_CONSOLE">
						<label>EFM32 UART/USART console support</label>
					</entry>
					<entry name="SERIAL_TILEGX">
						<label>TILE-Gx on-chip serial port support</label>
						<help>This device provides access to the on-chip UARTs on the TILE-Gx
processor.</help>
					</entry>
					<entry name="SERIAL_ARC">
						<label>ARC UART driver support</label>
						<help>Driver for on-chip UART for ARC(Synopsys) for the legacy
FPGA Boards (ML50x/ARCAngel4)</help>
					</entry>
					<entry name="SERIAL_ARC_CONSOLE">
						<label>Console on ARC UART</label>
						<help>Enable system Console on ARC UART</help>
					</entry>
					<entry name="SERIAL_ARC_NR_PORTS">
						<label>Number of ARC UART ports</label>
						<help>Set this to the number of serial ports you want the driver
to support.</help>
					</entry>
					<entry name="SERIAL_RP2">
						<label>Comtrol RocketPort EXPRESS/INFINITY support</label>
						<help>This driver supports the Comtrol RocketPort EXPRESS and
RocketPort INFINITY families of PCI/PCIe multiport serial adapters.
These adapters use a &quot;RocketPort 2&quot; ASIC that is not compatible
with the original RocketPort driver (CONFIG_ROCKETPORT).

To compile this driver as a module, choose M here: the
module will be called rp2.

If you want to compile this driver into the kernel, say Y here.  If
you don't have a suitable RocketPort card installed, say N.</help>
					</entry>
					<entry name="SERIAL_RP2_NR_UARTS">
						<label>Maximum number of RocketPort EXPRESS/INFINITY ports</label>
						<help>If multiple cards are present, the default limit of 32 ports may
need to be increased.</help>
					</entry>
					<entry name="SERIAL_FSL_LPUART">
						<label>Freescale lpuart serial port support</label>
						<help>Support for the on-chip lpuart on some Freescale SOCs.</help>
					</entry>
					<entry name="SERIAL_FSL_LPUART_CONSOLE">
						<label>Console on Freescale lpuart serial port</label>
						<help>If you have enabled the lpuart serial port on the Freescale SoCs,
you can make it the console by answering Y to this option.</help>
					</entry>
					<entry name="SERIAL_CONEXANT_DIGICOLOR">
						<label>Conexant Digicolor CX92xxx USART serial port support</label>
						<help>Support for the on-chip USART on Conexant Digicolor SoCs.</help>
					</entry>
					<entry name="SERIAL_CONEXANT_DIGICOLOR_CONSOLE">
						<label>Console on Conexant Digicolor serial port</label>
						<help>If you have enabled the USART serial port on Conexant Digicolor
SoCs, you can make it the console by answering Y to this option.</help>
					</entry>
					<entry name="SERIAL_ST_ASC">
						<label>ST ASC serial port support</label>
						<help>This driver is for the on-chip Asychronous Serial Controller on
STMicroelectronics STi SoCs.
ASC is embedded in ST COMMS IP block. It supports Rx &amp; Tx functionality.
It support all industry standard baud rates.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_ST_ASC_CONSOLE">
						<label>Support for console on ST ASC</label>
					</entry>
					<entry name="SERIAL_MEN_Z135">
						<label>MEN 16z135 Support</label>
						<help>Say yes here to enable support for the MEN 16z135 High Speed UART IP-Core
on a MCB carrier.

This driver can also be build as a module. If so, the module will be called
men_z135_uart.ko</help>
					</entry>
					<entry name="SERIAL_SPRD">
						<label>Support for Spreadtrum serial</label>
						<help>This enables the driver for the Spreadtrum's serial.</help>
					</entry>
					<entry name="SERIAL_SPRD_CONSOLE">
						<label>Spreadtrum UART console support</label>
						<help>Support for early debug console using Spreadtrum's serial. This enables
the console before standard serial driver is probed. This is enabled
with &quot;earlycon&quot; on the kernel command line. The console is
enabled when early_param is processed.</help>
					</entry>
					<entry name="SERIAL_STM32">
						<label>STMicroelectronics STM32 serial port support</label>
						<help>This driver is for the on-chip Serial Controller on
STMicroelectronics STM32 MCUs.
USART supports Rx &amp; Tx functionality.
It support all industry standard baud rates.

If unsure, say N.</help>
					</entry>
					<entry name="SERIAL_STM32_CONSOLE">
						<label>Support for console on STM32</label>
					</entry>
					<entry name="SERIAL_MVEBU_UART">
						<label>Marvell EBU serial port support</label>
						<help>This driver is for Marvell EBU SoC's UART. If you have a machine
based on the Armada-3700 SoC and wish to use the on-board serial
port,
say 'Y' here.
Otherwise, say 'N'.</help>
					</entry>
					<entry name="SERIAL_MVEBU_CONSOLE">
						<label>Console on Marvell EBU serial port</label>
						<help>Say 'Y' here if you wish to use Armada-3700 UART as the system console.
(the system console is the device which receives all kernel messages
and warnings and which allows logins in single user mode)
Otherwise, say 'N'.</help>
					</entry>
				</container>
				<entry name="SERIAL_MCTRL_GPIO"/>
				<entry name="TTY_PRINTK">
					<label>TTY driver to output user messages via printk</label>
					<help>If you say Y here, the support for writing user messages (i.e.
console messages) via printk is available.

The feature is useful to inline user messages with kernel
messages.
In order to use this feature, you should output user messages
to /dev/ttyprintk or redirect console to this TTY.

If unsure, say N.</help>
				</entry>
				<entry name="BFIN_OTP">
					<label>Blackfin On-Chip OTP Memory Support</label>
					<help>If you say Y here, you will get support for a character device
interface into the One Time Programmable memory pages that are
stored on the Blackfin processor.  This will not get you access
to the secure memory pages however.  You will need to write your
own secure code and reader for that.

To compile this driver as a module, choose M here: the module
will be called bfin-otp.

If unsure, it is safe to say Y.</help>
				</entry>
				<entry name="BFIN_OTP_WRITE_ENABLE">
					<label>Enable writing support of OTP pages</label>
					<help>If you say Y here, you will enable support for writing of the
OTP pages.  This is dangerous by nature as you can only program
the pages once, so only enable this option when you actually
need it so as to not inadvertently clobber data.

If unsure, say N.</help>
				</entry>
				<entry name="PRINTER">
					<label>Parallel printer support</label>
					<help>If you intend to attach a printer to the parallel port of your Linux
box (as opposed to using a serial printer; if the connector at the
printer has 9 or 25 holes [&quot;female&quot;], then it's serial), say Y.
Also read the Printing-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;.

It is possible to share one parallel port among several devices
(e.g. printer and ZIP drive) and it is safe to compile the
corresponding drivers into the kernel.

To compile this driver as a module, choose M here and read
&lt;file:Documentation/parport.txt&gt;.  The module will be called lp.

If you have several parallel ports, you can specify which ports to
use with the &quot;lp&quot; kernel command line option.  (Try &quot;man bootparam&quot;
or see the documentation of your boot loader (lilo or loadlin) about
how to pass options to the kernel at boot time.)  The syntax of the
&quot;lp&quot; command line option can be found in &lt;file:drivers/char/lp.c&gt;.

If you have more than 8 printers, you need to increase the LP_NO
macro in lp.c and the PARPORT_MAX macro in parport.h.</help>
				</entry>
				<entry name="LP_CONSOLE">
					<label>Support for console on line printer</label>
					<help>If you want kernel messages to be printed out as they occur, you
can have a console on the printer. This option adds support for
doing that; to actually get it to happen you need to pass the
option &quot;console=lp0&quot; to the kernel at boot time.

If the printer is out of paper (or off, or unplugged, or too
busy..) the kernel will stall until the printer is ready again.
By defining CONSOLE_LP_STRICT to 0 (at your own risk) you
can make the kernel continue when this happens,
but it'll lose the kernel messages.

If unsure, say N.</help>
				</entry>
				<entry name="PPDEV">
					<label>Support for user-space parallel port device drivers</label>
					<help>Saying Y to this adds support for /dev/parport device nodes.  This
is needed for programs that want portable access to the parallel
port, for instance deviceid (which displays Plug-and-Play device
IDs).

This is the parallel port equivalent of SCSI generic support (sg).
It is safe to say N to this -- it is not needed for normal printing
or parallel port CD-ROM/disk support.

To compile this driver as a module, choose M here: the
module will be called ppdev.

If unsure, say N.</help>
				</entry>
				<entry name="HVC_DRIVER">
					<help>Generic &quot;hypervisor virtual console&quot; infrastructure for various
hypervisors (pSeries, iSeries, Xen, lguest).
It will automatically be selected if one of the back-end console drivers
is selected.</help>
				</entry>
				<entry name="HVC_IRQ"/>
				<entry name="HVC_CONSOLE">
					<label>pSeries Hypervisor Virtual Console support</label>
					<help>pSeries machines when partitioned support a hypervisor virtual
console. This driver allows each pSeries partition to have a console
which is accessed via the HMC.</help>
				</entry>
				<entry name="HVC_OLD_HVSI">
					<label>Old driver for pSeries serial port (/dev/hvsi*)</label>
				</entry>
				<entry name="HVC_OPAL">
					<label>OPAL Console support</label>
					<help>PowerNV machines running under OPAL need that driver to get a console</help>
				</entry>
				<entry name="HVC_RTAS">
					<label>IBM RTAS Console support</label>
					<help>IBM Console device driver which makes use of RTAS</help>
				</entry>
				<entry name="HVC_IUCV">
					<label>z/VM IUCV Hypervisor console support (VM only)</label>
					<help>This driver provides a Hypervisor console (HVC) back-end to access
a Linux (console) terminal via a z/VM IUCV communication path.</help>
				</entry>
				<entry name="HVC_XEN">
					<label>Xen Hypervisor Console support</label>
					<help>Xen virtual console device driver</help>
				</entry>
				<entry name="HVC_XEN_FRONTEND">
					<label>Xen Hypervisor Multiple Consoles support</label>
					<help>Xen driver for secondary virtual consoles</help>
				</entry>
				<entry name="HVC_UDBG">
					<label>udbg based fake hypervisor console</label>
					<help>This is meant to be used during HW bring up or debugging when
no other console mechanism exist but udbg, to get you a quick
console for userspace. Do NOT enable in production kernels.</help>
				</entry>
				<entry name="HVC_DCC">
					<label>ARM JTAG DCC console</label>
					<help>This console uses the JTAG DCC on ARM to create a console under the HVC
driver. This console is used through a JTAG only on ARM. If you don't have
a JTAG then you probably don't want this option.</help>
				</entry>
				<entry name="HVC_BFIN_JTAG">
					<label>Blackfin JTAG console</label>
					<help>This console uses the Blackfin JTAG to create a console under the
the HVC driver.  If you don't have JTAG, then you probably don't
want this option.</help>
				</entry>
				<entry name="HVCS">
					<label>IBM Hypervisor Virtual Console Server support</label>
					<help>Partitionable IBM Power5 ppc64 machines allow hosting of
firmware virtual consoles from one Linux partition by
another Linux partition.  This driver allows console data
from Linux partitions to be accessed through TTY device
interfaces in the device tree of a Linux partition running
this driver.

To compile this driver as a module, choose M here: the
module will be called hvcs.  Additionally, this module
will depend on arch specific APIs exported from hvcserver.ko
which will also be compiled when this driver is built as a
module.</help>
				</entry>
				<entry name="VIRTIO_CONSOLE">
					<label>Virtio console</label>
					<help>Virtio console for use with lguest and other hypervisors.

Also serves as a general-purpose serial device for data
transfer between the guest and host.  Character devices at
/dev/vportNpn will be created when corresponding ports are
found, where N is the device number and n is the port number
within that device.  If specified by the host, a sysfs
attribute called 'name' will be populated with a name for
the port which can be used by udev scripts to create a
symlink to the device.</help>
				</entry>
				<entry name="IBM_BSR">
					<label>IBM POWER Barrier Synchronization Register support</label>
					<help>This devices exposes a hardware mechanism for fast synchronization
of threads across a large system which avoids bouncing a cacheline
between several cores on a system</help>
				</entry>
				<entry name="POWERNV_OP_PANEL">
					<label>IBM POWERNV Operator Panel Display support</label>
					<help>If you say Y here, a special character device node, /dev/op_panel,
will be created which exposes the operator panel display on IBM
Power Systems machines with FSPs.

If you don't require access to the operator panel display from user
space, say N.

If unsure, say M here to build it as a module called powernv-op-panel.</help>
				</entry>
				<entry name="IPMI_HANDLER">
					<label>'IPMI top-level message handler'</label>
					<help>This enables the central IPMI message handler, required for IPMI
to work.

IPMI is a standard for managing sensors (temperature,
voltage, etc.) in a system.

See &lt;file:Documentation/IPMI.txt&gt; for more details on the driver.

If unsure, say N.</help>
				</entry>
				<entry name="IPMI_PANIC_EVENT">
					<label>'Generate a panic event to all BMCs on a panic'</label>
					<help>When a panic occurs, this will cause the IPMI message handler to
generate an IPMI event describing the panic to each interface
registered with the message handler.</help>
				</entry>
				<entry name="IPMI_PANIC_STRING">
					<label>'Generate OEM events containing the panic string'</label>
					<help>When a panic occurs, this will cause the IPMI message handler to
generate IPMI OEM type f0 events holding the IPMB address of the
panic generator (byte 4 of the event), a sequence number for the
string (byte 5 of the event) and part of the string (the rest of the
event).  Bytes 1, 2, and 3 are the normal usage for an OEM event.
You can fetch these events and use the sequence numbers to piece the
string together.</help>
				</entry>
				<entry name="IPMI_DEVICE_INTERFACE">
					<label>'Device interface for IPMI'</label>
					<help>This provides an IOCTL interface to the IPMI message handler so
userland processes may use IPMI.  It supports poll() and select().</help>
				</entry>
				<entry name="IPMI_SI">
					<label>'IPMI System Interface handler'</label>
					<help>Provides a driver for System Interfaces (KCS, SMIC, BT).
Currently, only KCS and SMIC are supported.  If
you are using IPMI, you should probably say &quot;y&quot; here.</help>
				</entry>
				<entry name="IPMI_SSIF">
					<label>'IPMI SMBus handler (SSIF)'</label>
					<help>Provides a driver for a SMBus interface to a BMC, meaning that you
have a driver that must be accessed over an I2C bus instead of a
standard interface.  This module requires I2C support.</help>
				</entry>
				<entry name="IPMI_POWERNV">
					<label>'POWERNV (OPAL firmware) IPMI interface'</label>
					<help>Provides a driver for OPAL firmware-based IPMI interfaces.</help>
				</entry>
				<entry name="IPMI_WATCHDOG">
					<label>'IPMI Watchdog Timer'</label>
					<help>This enables the IPMI watchdog timer.</help>
				</entry>
				<entry name="IPMI_POWEROFF">
					<label>'IPMI Poweroff'</label>
					<help>This enables a function to power off the system with IPMI if
the IPMI management controller is capable of this.</help>
				</entry>
				<entry name="DS1620">
					<label>NetWinder thermometer support</label>
					<help>Say Y here to include support for the thermal management hardware
found in the NetWinder. This driver allows the user to control the
temperature set points and to read the current temperature.

It is also possible to say M here to build it as a module (ds1620)
It is recommended to be used on a NetWinder, but it is not a
necessity.</help>
				</entry>
				<entry name="NWBUTTON">
					<label>NetWinder Button</label>
					<help>If you say Y here and create a character device node /dev/nwbutton
with major and minor numbers 10 and 158 (&quot;man mknod&quot;), then every
time the orange button is pressed a number of times, the number of
times the button was pressed will be written to that device.

This is most useful for applications, as yet unwritten, which
perform actions based on how many times the button is pressed in a
row.

Do not hold the button down for too long, as the driver does not
alter the behaviour of the hardware reset circuitry attached to the
button; it will still execute a hard reset if the button is held
down for longer than approximately five seconds.

To compile this driver as a module, choose M here: the
module will be called nwbutton.

Most people will answer Y to this question and &quot;Reboot Using Button&quot;
below to be able to initiate a system shutdown from the button.</help>
				</entry>
				<entry name="NWBUTTON_REBOOT">
					<label>Reboot Using Button</label>
					<help>If you say Y here, then you will be able to initiate a system
shutdown and reboot by pressing the orange button a number of times.
The number of presses to initiate the shutdown is two by default,
but this can be altered by modifying the value of NUM_PRESSES_REBOOT
in nwbutton.h and recompiling the driver or, if you compile the
driver as a module, you can specify the number of presses at load
time with &quot;insmod button reboot_count=&lt;something&gt;&quot;.</help>
				</entry>
				<entry name="NWFLASH">
					<label>NetWinder flash support</label>
					<help>If you say Y here and create a character device /dev/flash with
major 10 and minor 160 you can manipulate the flash ROM containing
the NetWinder firmware. Be careful as accidentally overwriting the
flash contents can render your computer unbootable. On no account
allow random users access to this device. :-)

To compile this driver as a module, choose M here: the
module will be called nwflash.

If you're not sure, say N.</help>
				</entry>
				<entry name="HW_RANDOM">
					<label>Hardware Random Number Generator Core support</label>
					<help>Hardware Random Number Generator Core infrastructure.

To compile this driver as a module, choose M here: the
module will be called rng-core.  This provides a device
that's usually called /dev/hwrng, and which exposes one
of possibly several hardware random number generators.

These hardware random number generators do not feed directly
into the kernel's random number generator.  That is usually
handled by the &quot;rngd&quot; daemon.  Documentation/hw_random.txt
has more information.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_TIMERIOMEM">
					<label>Timer IOMEM HW Random Number Generator support</label>
					<help>This driver provides kernel-side support for a generic Random
Number Generator used by reading a 'dumb' iomem address that
is to be read no faster than, for example, once a second;
the default FPGA bitstream on the TS-7800 has such functionality.

To compile this driver as a module, choose M here: the
module will be called timeriomem-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_INTEL">
					<label>Intel HW Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on Intel i8xx-based motherboards.

To compile this driver as a module, choose M here: the
module will be called intel-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_AMD">
					<label>AMD HW Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on AMD 76x-based motherboards.

To compile this driver as a module, choose M here: the
module will be called amd-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_ATMEL">
					<label>Atmel Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on Atmel AT91 devices.

To compile this driver as a module, choose M here: the
module will be called atmel-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_BCM63XX">
					<label>Broadcom BCM63xx Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on the Broadcom BCM63xx SoCs.

To compile this driver as a module, choose M here: the
module will be called bcm63xx-rng

If unusure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_BCM2835">
					<label>Broadcom BCM2835 Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on the Broadcom BCM2835 SoCs.

To compile this driver as a module, choose M here: the
module will be called bcm2835-rng

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_IPROC_RNG200">
					<label>Broadcom iProc RNG200 support</label>
					<help>This driver provides kernel-side support for the RNG200
hardware found on the Broadcom iProc SoCs.

To compile this driver as a module, choose M here: the
module will be called iproc-rng200

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_GEODE">
					<label>AMD Geode HW Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on the AMD Geode LX.

To compile this driver as a module, choose M here: the
module will be called geode-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_N2RNG">
					<label>Niagara2 Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on Niagara2 cpus.

To compile this driver as a module, choose M here: the
module will be called n2-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_VIA">
					<label>VIA HW Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number
Generator hardware found on VIA based motherboards.

To compile this driver as a module, choose M here: the
module will be called via-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_IXP4XX">
					<label>Intel IXP4xx NPU HW Pseudo-Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Pseudo-Random
Number Generator hardware found on the Intel IXP45x/46x NPU.

To compile this driver as a module, choose M here: the
module will be called ixp4xx-rng.

If unsure, say Y.</help>
				</entry>
				<entry name="HW_RANDOM_OMAP">
					<label>OMAP Random Number Generator support</label>
					<help>This driver provides kernel-side support for the Random Number</help>
				</entry>
				<entry name="NVRAM">
					<label>/dev/nvram support</label>
					<help>If you say Y here and create a character special file /dev/nvram
with major number 10 and minor number 144 using mknod (&quot;man mknod&quot;),
you get read and write access to the extra bytes of non-volatile
memory in the real time clock (RTC), which is contained in every PC
and most Ataris.  The actual number of bytes varies, depending on the
nvram in the system, but is usually 114 (128-14 for the RTC).

This memory is conventionally called &quot;CMOS RAM&quot; on PCs and &quot;NVRAM&quot;
on Ataris. /dev/nvram may be used to view settings there, or to
change them (with some utility). It could also be used to frequently
save a few bits of very important data that may not be lost over
power-off and for which writing to disk is too insecure. Note
however that most NVRAM space in a PC belongs to the BIOS and you
should NEVER idly tamper with it. See Ralf Brown's interrupt list
for a guide to the use of CMOS bytes by your BIOS.

On Atari machines, /dev/nvram is always configured and does not need
to be selected.

To compile this driver as a module, choose M here: the
module will be called nvram.</help>
				</entry>
				<entry name="RTC">
					<label>Enhanced Real Time Clock Support (legacy PC RTC driver)</label>
					<help>If you say Y here and create a character special file /dev/rtc with
major number 10 and minor number 135 using mknod (&quot;man mknod&quot;), you
will get access to the real time clock (or hardware clock) built
into your computer.

Every PC has such a clock built in. It can be used to generate
signals from as low as 1Hz up to 8192Hz, and can also be used
as a 24 hour alarm. It reports status information via the file
/proc/driver/rtc and its behaviour is set by various ioctls on
/dev/rtc.

If you run Linux on a multiprocessor machine and said Y to
&quot;Symmetric Multi Processing&quot; above, you should say Y here to read
and set the RTC in an SMP compatible fashion.

If you think you have a use for such a device (such as periodic data
sampling), then say Y here, and read &lt;file:Documentation/rtc.txt&gt;
for details.

To compile this driver as a module, choose M here: the
module will be called rtc.</help>
				</entry>
				<entry name="JS_RTC">
					<label>Enhanced Real Time Clock Support</label>
					<help>If you say Y here and create a character special file /dev/rtc with
major number 10 and minor number 135 using mknod (&quot;man mknod&quot;), you
will get access to the real time clock (or hardware clock) built
into your computer.

Every PC has such a clock built in. It can be used to generate
signals from as low as 1Hz up to 8192Hz, and can also be used
as a 24 hour alarm. It reports status information via the file
/proc/driver/rtc and its behaviour is set by various ioctls on
/dev/rtc.

If you think you have a use for such a device (such as periodic data
sampling), then say Y here, and read &lt;file:Documentation/rtc.txt&gt;
for details.

To compile this driver as a module, choose M here: the
module will be called js-rtc.</help>
				</entry>
				<entry name="EFI_RTC">
					<label>EFI Real Time Clock Services</label>
				</entry>
				<entry name="DS1302">
					<label>DS1302 RTC support</label>
					<help>If you say Y here and create a character special file /dev/rtc with
major number 121 and minor number 0 using mknod (&quot;man mknod&quot;), you
will get access to the real time clock (or hardware clock) built
into your computer.</help>
				</entry>
				<entry name="DTLK">
					<label>Double Talk PC internal speech card support</label>
					<help>This driver is for the DoubleTalk PC, a speech synthesizer
manufactured by RC Systems (&lt;http://www.rcsys.com/&gt;).  It is also
called the `internal DoubleTalk'.

To compile this driver as a module, choose M here: the
module will be called dtlk.</help>
				</entry>
				<entry name="XILINX_HWICAP">
					<label>Xilinx HWICAP Support</label>
					<help>This option enables support for Xilinx Internal Configuration
Access Port (ICAP) driver.  The ICAP is used on Xilinx Virtex
FPGA platforms to partially reconfigure the FPGA at runtime.

If unsure, say N.</help>
				</entry>
				<entry name="R3964">
					<label>Siemens R3964 line discipline</label>
					<help>This driver allows synchronous communication with devices using the
Siemens R3964 packet protocol. Unless you are dealing with special
hardware like PLCs, you are unlikely to need this.

To compile this driver as a module, choose M here: the
module will be called n_r3964.

If unsure, say N.</help>
				</entry>
				<entry name="APPLICOM">
					<label>Applicom intelligent fieldbus card support</label>
					<help>This driver provides the kernel-side support for the intelligent
fieldbus cards made by Applicom International. More information
about these cards can be found on the WWW at the address
&lt;http://www.applicom-int.com/&gt;, or by email from David Woodhouse
&lt;dwmw2@infradead.org&gt;.

To compile this driver as a module, choose M here: the
module will be called applicom.

If unsure, say N.</help>
				</entry>
				<entry name="SONYPI">
					<label>Sony Vaio Programmable I/O Control Device support</label>
					<help>This driver enables access to the Sony Programmable I/O Control
Device which can be found in many (all ?) Sony Vaio laptops.

If you have one of those laptops, read
&lt;file:Documentation/laptops/sonypi.txt&gt;, and say Y or M here.

To compile this driver as a module, choose M here: the
module will be called sonypi.</help>
				</entry>
				<entry name="GPIO_TB0219">
					<label>TANBAC TB0219 GPIO support</label>
				</entry>
				<container name="PCMCIA_character_devices">
					<label>PCMCIA character devices</label>
					<entry name="SYNCLINK_CS">
						<label>SyncLink PC Card support</label>
						<help>Enable support for the SyncLink PC Card serial adapter, running
asynchronous and HDLC communications up to 512Kbps. The port is
selectable for RS-232, V.35, RS-449, RS-530, and X.21

This driver may be built as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called synclink_cs.  If you want to do that, say M
here.</help>
					</entry>
					<entry name="CARDMAN_4000">
						<label>Omnikey Cardman 4000 support</label>
						<help>Enable support for the Omnikey Cardman 4000 PCMCIA Smartcard
reader.

This kernel driver requires additional userspace support, either
by the vendor-provided PC/SC ifd_handler (http://www.omnikey.com/),
or via the cm4000 backend of OpenCT (http://www.opensc-project.org/opensc).</help>
					</entry>
					<entry name="CARDMAN_4040">
						<label>Omnikey CardMan 4040 support</label>
						<help>Enable support for the Omnikey CardMan 4040 PCMCIA Smartcard
reader.

This card is basically a USB CCID device connected to a FIFO
in I/O space.  To use the kernel driver, you will need either the
PC/SC ifdhandler provided from the Omnikey homepage
(http://www.omnikey.com/), or a current development version of OpenCT
(http://www.opensc-project.org/opensc).</help>
					</entry>
					<entry name="IPWIRELESS">
						<label>IPWireless 3G UMTS PCMCIA card support</label>
						<help>This is a driver for 3G UMTS PCMCIA card from IPWireless company. In
some countries (for example Czech Republic, T-Mobile ISP) this card
is shipped for service called UMTS 4G.</help>
					</entry>
				</container>
				<entry name="MWAVE">
					<label>ACP Modem (Mwave) support</label>
					<help>The ACP modem (Mwave) for Linux is a WinModem. It is composed of a
kernel driver and a user level application. Together these components
support direct attachment to public switched telephone networks (PSTNs)
and support selected world wide countries.

This version of the ACP Modem driver supports the IBM Thinkpad 600E,
600, and 770 that include on board ACP modem hardware.

The modem also supports the standard communications port interface
(ttySx) and is compatible with the Hayes AT Command Set.

The user level application needed to use this driver can be found at
the IBM Linux Technology Center (LTC) web site:
&lt;http://www.ibm.com/linux/ltc/&gt;.

If you own one of the above IBM Thinkpads which has the Mwave chipset
in it, say Y.

To compile this driver as a module, choose M here: the
module will be called mwave.</help>
				</entry>
				<entry name="SCx200_GPIO">
					<label>NatSemi SCx200 GPIO Support</label>
					<help>Give userspace access to the GPIO pins on the National
Semiconductor SCx200 processors.

If compiled as a module, it will be called scx200_gpio.</help>
				</entry>
				<entry name="PC8736x_GPIO">
					<label>NatSemi PC8736x GPIO Support</label>
					<help>Give userspace access to the GPIO pins on the National
Semiconductor PC-8736x (x=[03456]) SuperIO chip.  The chip
has multiple functional units, inc several managed by
hwmon/pc87360 driver.  Tested with PC-87366

If compiled as a module, it will be called pc8736x_gpio.</help>
				</entry>
				<entry name="NSC_GPIO">
					<label>NatSemi Base GPIO Support</label>
					<help>Common support used (and needed) by scx200_gpio and
pc8736x_gpio drivers.  If those drivers are built as
modules, this one will be too, named nsc_gpio</help>
				</entry>
				<entry name="RAW_DRIVER">
					<label>RAW driver (/dev/raw/rawN)</label>
					<help>The raw driver permits block devices to be bound to /dev/raw/rawN.
Once bound, I/O against /dev/raw/rawN uses efficient zero-copy I/O.
See the raw(8) manpage for more details.

Applications should preferably open the device (eg /dev/hda1)
with the O_DIRECT flag.</help>
				</entry>
				<entry name="MAX_RAW_DEVS">
					<label>Maximum number of RAW devices to support (1-65536)</label>
					<help>The maximum number of RAW devices that are supported.
Default is 256. Increase this number in case you need lots of
raw devices.</help>
				</entry>
				<entry name="HPET">
					<label>HPET - High Precision Event Timer&quot; if (X86 || IA64)</label>
					<help>If you say Y here, you will have a miscdevice named &quot;/dev/hpet/&quot;.  Each
open selects one of the timers supported by the HPET.  The timers are
non-periodic and/or periodic.</help>
				</entry>
				<entry name="HPET_MMAP">
					<label>Allow mmap of HPET</label>
					<help>If you say Y here, user applications will be able to mmap
the HPET registers.</help>
				</entry>
				<entry name="HPET_MMAP_DEFAULT">
					<label>Enable HPET MMAP access by default</label>
					<help>In some hardware implementations, the page containing HPET
registers may also contain other things that shouldn't be
exposed to the user.  This option selects the default (if
kernel parameter hpet_mmap is not set) user access to the
registers for applications that require it.</help>
				</entry>
				<entry name="HANGCHECK_TIMER">
					<label>Hangcheck timer</label>
					<help>The hangcheck-timer module detects when the system has gone
out to lunch past a certain margin.  It can reboot the system
or merely print a warning.</help>
				</entry>
				<entry name="MMTIMER">
					<label>MMTIMER Memory mapped RTC for SGI Altix</label>
					<help>The mmtimer device allows direct userspace access to the
Altix system timer.</help>
				</entry>
				<entry name="UV_MMTIMER">
					<label>UV_MMTIMER Memory mapped RTC for SGI UV</label>
					<help>The uv_mmtimer device allows direct userspace access to the
UV system timer.</help>
				</entry>
				<entry name="TCG_TPM">
					<label>TPM Hardware Support</label>
					<help>If you have a TPM security chip in your system, which
implements the Trusted Computing Group's specification,
say Yes and it will be accessible from within Linux.  For
more information see &lt;http://www.trustedcomputinggroup.org&gt;.
An implementation of the Trusted Software Stack (TSS), the
userspace enablement piece of the specification, can be
obtained at: &lt;http://sourceforge.net/projects/trousers&gt;.  To
compile this driver as a module, choose M here; the module
will be called tpm. If unsure, say N.
Notes:
1) For more TPM drivers enable CONFIG_PNP, CONFIG_ACPI
and CONFIG_PNPACPI.
2) Without ACPI enabled, the BIOS event log won't be accessible,
which is required to validate the PCR 0-7 values.</help>
				</entry>
				<entry name="TCG_TIS_CORE">
					<help>TCG TIS TPM core driver. It implements the TPM TCG TIS logic and hooks
into the TPM kernel APIs. Physical layers will register against it.</help>
				</entry>
				<entry name="TCG_TIS">
					<label>TPM Interface Specification 1.2 Interface / TPM 2.0 FIFO Interface</label>
					<help>If you have a TPM security chip that is compliant with the
TCG TIS 1.2 TPM specification (TPM1.2) or the TCG PTP FIFO
specification (TPM2.0) say Yes and it will be accessible from
within Linux. To compile this driver as a module, choose  M here;
the module will be called tpm_tis.</help>
				</entry>
				<entry name="TCG_TIS_SPI">
					<label>TPM Interface Specification 1.3 Interface / TPM 2.0 FIFO Interface - (SPI)</label>
					<help>If you have a TPM security chip which is connected to a regular,
non-tcg SPI master (i.e. most embedded platforms) that is compliant with the
TCG TIS 1.3 TPM specification (TPM1.2) or the TCG PTP FIFO
specification (TPM2.0) say Yes and it will be accessible from
within Linux. To compile this driver as a module, choose  M here;
the module will be called tpm_tis_spi.</help>
				</entry>
				<entry name="TCG_TIS_I2C_ATMEL">
					<label>TPM Interface Specification 1.2 Interface (I2C - Atmel)</label>
					<help>If you have an Atmel I2C TPM security chip say Yes and it will be
accessible from within Linux.
To compile this driver as a module, choose M here; the module will
be called tpm_tis_i2c_atmel.</help>
				</entry>
				<entry name="TCG_TIS_I2C_INFINEON">
					<label>TPM Interface Specification 1.2 Interface (I2C - Infineon)</label>
					<help>If you have a TPM security chip that is compliant with the
TCG TIS 1.2 TPM specification and Infineon's I2C Protocol Stack
Specification 0.20 say Yes and it will be accessible from within
Linux.
To compile this driver as a module, choose M here; the module
will be called tpm_i2c_infineon.</help>
				</entry>
				<entry name="TCG_TIS_I2C_NUVOTON">
					<label>TPM Interface Specification 1.2 Interface (I2C - Nuvoton)</label>
					<help>If you have a TPM security chip with an I2C interface from
Nuvoton Technology Corp. say Yes and it will be accessible
from within Linux.
To compile this driver as a module, choose M here; the module
will be called tpm_i2c_nuvoton.</help>
				</entry>
				<entry name="TCG_NSC">
					<label>National Semiconductor TPM Interface</label>
					<help>If you have a TPM security chip from National Semiconductor
say Yes and it will be accessible from within Linux.  To
compile this driver as a module, choose M here; the module
will be called tpm_nsc.</help>
				</entry>
				<entry name="TCG_ATMEL">
					<label>Atmel TPM Interface</label>
					<help>If you have a TPM security chip from Atmel say Yes and it
will be accessible from within Linux.  To compile this driver
as a module, choose M here; the module will be called tpm_atmel.</help>
				</entry>
				<entry name="TCG_INFINEON">
					<label>Infineon Technologies TPM Interface</label>
					<help>If you have a TPM security chip from Infineon Technologies
(either SLD 9630 TT 1.1 or SLB 9635 TT 1.2) say Yes and it
will be accessible from within Linux.
To compile this driver as a module, choose M here; the module
will be called tpm_infineon.
Further information on this driver and the supported hardware
can be found at http://www.trust.rub.de/projects/linux-device-driver-infineon-tpm/</help>
				</entry>
				<entry name="TCG_IBMVTPM">
					<label>IBM VTPM Interface</label>
					<help>If you have IBM virtual TPM (VTPM) support say Yes and it
will be accessible from within Linux.  To compile this driver
as a module, choose M here; the module will be called tpm_ibmvtpm.</help>
				</entry>
				<entry name="TCG_XEN">
					<label>XEN TPM Interface</label>
					<help>If you want to make TPM support available to a Xen user domain,
say Yes and it will be accessible from within Linux. See
the manpages for xl, xl.conf, and docs/misc/vtpm.txt in
the Xen source repository for more details.
To compile this driver as a module, choose M here; the module
will be called xen-tpmfront.</help>
				</entry>
				<entry name="TCG_CRB">
					<label>TPM 2.0 CRB Interface</label>
					<help>If you have a TPM security chip that is compliant with the
TCG CRB 2.0 TPM specification say Yes and it will be accessible
from within Linux.  To compile this driver as a module, choose
M here; the module will be called tpm_crb.</help>
				</entry>
				<entry name="TCG_VTPM_PROXY">
					<label>VTPM Proxy Interface</label>
					<help>This driver proxies for an emulated TPM (vTPM) running in userspace.
A device /dev/vtpmx is provided that creates a device pair
/dev/vtpmX and a server-side file descriptor on which the vTPM
can receive commands.</help>
				</entry>
				<entry name="TCG_TIS_ST33ZP24">
					<help>STMicroelectronics ST33ZP24 core driver. It implements the core
TPM1.2 logic and hooks into the TPM kernel APIs. Physical layers will
register against it.

To compile this driver as a module, choose m here. The module will be called
tpm_st33zp24.</help>
				</entry>
				<entry name="TCG_TIS_ST33ZP24_I2C">
					<label>STMicroelectronics TPM Interface Specification 1.2 Interface (I2C)</label>
					<help>This module adds support for the STMicroelectronics TPM security chip
ST33ZP24 with i2c interface.
To compile this driver as a module, choose M here; the module will be
called tpm_st33zp24_i2c.</help>
				</entry>
				<entry name="TCG_TIS_ST33ZP24_SPI">
					<label>STMicroelectronics TPM Interface Specification 1.2 Interface (SPI)</label>
					<help>This module adds support for the STMicroelectronics TPM security chip
ST33ZP24 with spi interface.
To compile this driver as a module, choose M here; the module will be
called tpm_st33zp24_spi.
</help>
				</entry>
				<entry name="TELCLOCK">
					<label>Telecom clock driver for ATCA SBC</label>
					<help>The telecom clock device is specific to the MPCBL0010 and MPCBL0050
ATCA computers and allows direct userspace access to the
configuration of the telecom clock configuration settings.  This
device is used for hardware synchronization across the ATCA backplane
fabric.  Upon loading, the driver exports a sysfs directory,
/sys/devices/platform/telco_clock, with a number of files for
controlling the behavior of this hardware.</help>
				</entry>
				<entry name="DEVPORT"/>
				<entry name="TN3270">
					<label>Support for locally attached 3270 terminals</label>
					<help>Include support for IBM 3270 terminals.</help>
				</entry>
				<entry name="TN3270_TTY">
					<label>Support for tty input/output on 3270 terminals</label>
					<help>Include support for using an IBM 3270 terminal as a Linux tty.</help>
				</entry>
				<entry name="TN3270_FS">
					<label>Support for fullscreen applications on 3270 terminals</label>
					<help>Include support for fullscreen applications on an IBM 3270 terminal.</help>
				</entry>
				<entry name="TN3270_CONSOLE">
					<label>Support for console on 3270 terminal</label>
					<help>Include support for using an IBM 3270 terminal as a Linux system
console.  Available only if 3270 support is compiled in statically.</help>
				</entry>
				<entry name="TN3215">
					<label>Support for 3215 line mode terminal</label>
					<help>Include support for IBM 3215 line-mode terminals.</help>
				</entry>
				<entry name="TN3215_CONSOLE">
					<label>Support for console on 3215 line mode terminal</label>
					<help>Include support for using an IBM 3215 line-mode terminal as a
Linux system console.</help>
				</entry>
				<entry name="CCW_CONSOLE"/>
				<entry name="SCLP_TTY">
					<label>Support for SCLP line mode terminal</label>
					<help>Include support for IBM SCLP line-mode terminals.</help>
				</entry>
				<entry name="SCLP_CONSOLE">
					<label>Support for console on SCLP line mode terminal</label>
					<help>Include support for using an IBM HWC line-mode terminal as the Linux
system console.</help>
				</entry>
				<entry name="SCLP_VT220_TTY">
					<label>Support for SCLP VT220-compatible terminal</label>
					<help>Include support for an IBM SCLP VT220-compatible terminal.</help>
				</entry>
				<entry name="SCLP_VT220_CONSOLE">
					<label>Support for console on SCLP VT220-compatible terminal</label>
					<help>Include support for using an IBM SCLP VT220-compatible terminal as a
Linux system console.</help>
				</entry>
				<entry name="SCLP_ASYNC">
					<label>Support for Call Home via Asynchronous SCLP Records</label>
					<help>This option enables the call home function, which is able to inform
the service element and connected organisations about a kernel panic.
You should only select this option if you know what you are doing,
want for inform other people about your kernel panics,
need this feature and intend to run your kernel in LPAR.</help>
				</entry>
				<entry name="SCLP_ASYNC_ID">
					<label>Component ID for Call Home</label>
					<help>The Component ID for Call Home is used to identify the correct
problem reporting queue the call home records should be sent to.

If your are unsure, please use the default value &quot;000000000&quot;.</help>
				</entry>
				<entry name="HMC_DRV">
					<label>Support for file transfers from HMC drive CD/DVD-ROM</label>
					<help>This option enables support for file transfers from a Hardware
Management Console (HMC) drive CD/DVD-ROM. It is available as a
module, called 'hmcdrv', and also as kernel built-in. There is one
optional parameter for this module: cachesize=N, which modifies the
transfer cache size from it's default value 0.5MB to N bytes. If N
is zero, then no caching is performed.</help>
				</entry>
				<entry name="SCLP_OFB">
					<label>Support for Open-for-Business SCLP Event</label>
					<help>This option enables the Open-for-Business interface to the s390
Service Element.</help>
				</entry>
				<entry name="S390_TAPE">
					<label>S/390 tape device support</label>
					<help>Select this option if you want to access channel-attached tape
devices on IBM S/390 or zSeries.
If you select this option you will also want to select at
least one of the tape interface options and one of the tape
hardware options in order to access a tape device.
This option is also available as a module. The module will be
called tape390 and include all selected interfaces and
hardware drivers.</help>
				</entry>
				<entry name="S390_TAPE_34XX">
					<label>Support for 3480/3490 tape hardware</label>
					<help>Select this option if you want to access IBM 3480/3490 magnetic
tape subsystems and 100% compatibles.
It is safe to say &quot;Y&quot; here.</help>
				</entry>
				<entry name="S390_TAPE_3590">
					<label>Support for 3590 tape hardware</label>
					<help>Select this option if you want to access IBM 3590 magnetic
tape subsystems and 100% compatibles.
It is safe to say &quot;Y&quot; here.</help>
				</entry>
				<entry name="VMLOGRDR">
					<label>Support for the z/VM recording system services (VM only)</label>
					<help>Select this option if you want to be able to receive records collected
by the z/VM recording system services, eg. from *LOGREC, *ACCOUNT or
*SYMPTOM.
This driver depends on the IUCV support driver.</help>
				</entry>
				<entry name="VMCP">
					<label>Support for the z/VM CP interface</label>
					<help>Select this option if you want to be able to interact with the control
program on z/VM</help>
				</entry>
				<entry name="MONREADER">
					<label>API for reading z/VM monitor service records</label>
					<help>Character device driver for reading z/VM monitor service records</help>
				</entry>
				<entry name="MONWRITER">
					<label>API for writing z/VM monitor service records</label>
					<help>Character device driver for writing z/VM monitor service records</help>
				</entry>
				<entry name="S390_VMUR">
					<label>z/VM unit record device driver</label>
					<help>Character device driver for z/VM reader, puncher and printer.

</help>
				</entry>
				<entry name="TILE_SROM">
					<label>Character-device access via hypervisor to the Tilera SPI ROM</label>
					<help>This device provides character-level read-write access
to the SROM, typically via the &quot;0&quot;, &quot;1&quot;, and &quot;2&quot; devices
in /dev/srom/.  The Tilera hypervisor makes the flash
device appear much like a simple EEPROM, and knows
how to partition a single ROM for multiple purposes.</help>
				</entry>
				<entry name="XILLYBUS">
					<label>Xillybus generic FPGA interface</label>
					<help>Xillybus is a generic interface for peripherals designed on
programmable logic (FPGA). The driver probes the hardware for
its capabilities, and creates device files accordingly.

If unsure, say N.</help>
				</entry>
				<entry name="XILLYBUS_PCIE">
					<label>Xillybus over PCIe</label>
					<help>Set to M if you want Xillybus to use PCI Express for communicating
with the FPGA.</help>
				</entry>
				<entry name="XILLYBUS_OF">
					<label>Xillybus over Device Tree</label>
					<help>Set to M if you want Xillybus to find its resources from the
Open Firmware Flattened Device Tree. If the target is an embedded
system, say M.</help>
				</entry>
			</container>
			<container name="I2C_support">
				<label>I2C support</label>
				<entry name="I2C">
					<label>I2C support</label>
					<help>I2C (pronounce: I-squared-C) is a slow serial bus protocol used in
many micro controller applications and developed by Philips.  SMBus,
or System Management Bus is a subset of the I2C protocol.  More
information is contained in the directory &lt;file:Documentation/i2c/&gt;,
especially in the file called &quot;summary&quot; there.

Both I2C and SMBus are supported here. You will need this for
hardware sensors support, and also for Video For Linux support.

If you want I2C support, you should say Y here and also to the
specific driver for your bus adapter(s) below.

This I2C support can also be built as a module.  If so, the module
will be called i2c-core.</help>
				</entry>
				<entry name="ACPI_I2C_OPREGION">
					<label>ACPI I2C Operation region support</label>
					<help>Say Y here if you want to enable ACPI I2C operation region support.
Operation Regions allow firmware (BIOS) code to access I2C slave devices,
such as smart batteries through an I2C host controller driver.</help>
				</entry>
				<entry name="I2C_BOARDINFO"/>
				<entry name="I2C_COMPAT">
					<label>Enable compatibility bits for old user-space</label>
					<help>Say Y here if you intend to run lm-sensors 3.1.1 or older, or any
other user-space package which expects i2c adapters to be class
devices. If you don't know, say Y.</help>
				</entry>
				<entry name="I2C_CHARDEV">
					<label>I2C device interface</label>
					<help>Say Y here to use i2c-* device files, usually found in the /dev
directory on your system.  They make it possible to have user-space
programs use the I2C bus.  Information on how to do this is
contained in the file &lt;file:Documentation/i2c/dev-interface&gt;.

This support is also available as a module.  If so, the module
will be called i2c-dev.</help>
				</entry>
				<entry name="I2C_MUX">
					<label>I2C bus multiplexing support</label>
					<help>Say Y here if you want the I2C core to support the ability to
handle multiplexed I2C bus topologies, by presenting each
multiplexed segment as a I2C adapter.

This support is also available as a module.  If so, the module
will be called i2c-mux.</help>
				</entry>
				<container name="Multiplexer_I2C_Chip_support">
					<label>Multiplexer I2C Chip support</label>
					<entry name="I2C_ARB_GPIO_CHALLENGE">
						<label>GPIO-based I2C arbitration</label>
						<help>If you say yes to this option, support will be included for an
I2C multimaster arbitration scheme using GPIOs and a challenge &amp;
response mechanism where masters have to claim the bus by asserting
a GPIO.

This driver can also be built as a module.  If so, the module
will be called i2c-arb-gpio-challenge.</help>
					</entry>
					<entry name="I2C_MUX_GPIO">
						<label>GPIO-based I2C multiplexer</label>
						<help>If you say yes to this option, support will be included for a
GPIO based I2C multiplexer. This driver provides access to
I2C busses connected through a MUX, which is controlled
through GPIO pins.

This driver can also be built as a module.  If so, the module
will be called i2c-mux-gpio.</help>
					</entry>
					<entry name="I2C_MUX_PCA9541">
						<label>NXP PCA9541 I2C Master Selector</label>
						<help>If you say yes here you get support for the NXP PCA9541
I2C Master Selector.

This driver can also be built as a module.  If so, the module
will be called i2c-mux-pca9541.</help>
					</entry>
					<entry name="I2C_MUX_PCA954x">
						<label>Philips PCA954x I2C Mux/switches</label>
						<help>If you say yes here you get support for the Philips PCA954x
I2C mux/switch devices.

This driver can also be built as a module.  If so, the module
will be called i2c-mux-pca954x.</help>
					</entry>
					<entry name="I2C_MUX_PINCTRL">
						<label>pinctrl-based I2C multiplexer</label>
						<help>If you say yes to this option, support will be included for an I2C
multiplexer that uses the pinctrl subsystem, i.e. pin multiplexing.
This is useful for SoCs whose I2C module's signals can be routed to
different sets of pins at run-time.

This driver can also be built as a module. If so, the module will be
called pinctrl-i2cmux.</help>
					</entry>
					<entry name="I2C_MUX_REG">
						<label>Register-based I2C multiplexer</label>
						<help>If you say yes to this option, support will be included for a
register based I2C multiplexer. This driver provides access to
I2C busses connected through a MUX, which is controlled
by a single register.

This driver can also be built as a module.  If so, the module
will be called i2c-mux-reg.</help>
					</entry>
					<entry name="I2C_DEMUX_PINCTRL">
						<label>pinctrl-based I2C demultiplexer</label>
						<help>If you say yes to this option, support will be included for an I2C
demultiplexer that uses the pinctrl subsystem. This is useful if you
want to change the I2C master at run-time depending on features.</help>
					</entry>
				</container>
				<entry name="I2C_HELPER_AUTO">
					<label>Autoselect pertinent helper modules</label>
					<help>Some I2C bus drivers require so-called &quot;I2C algorithm&quot; modules
to work. These are basically software-only abstractions of generic
I2C interfaces. This option will autoselect them so that you don't
have to care.

Unselect this only if you need to enable additional helper
modules, for example for use with external I2C bus drivers.

In doubt, say Y.</help>
				</entry>
				<entry name="I2C_SMBUS">
					<label>SMBus-specific protocols&quot; if !I2C_HELPER_AUTO</label>
					<help>Say Y here if you want support for SMBus extensions to the I2C
specification. At the moment, two extensions are supported:
the SMBus Alert protocol and the SMBus Host Notify protocol.

This support is also available as a module.  If so, the module
will be called i2c-smbus.</help>
				</entry>
				<container name="I2C_Algorithms">
					<label>I2C Algorithms</label>
				</container>
				<container name="I2C_Hardware_Bus_support">
					<label>I2C Hardware Bus support</label>
					<entry name="I2C_ALI1535">
						<label>ALI 1535</label>
						<help>If you say yes to this option, support will be included for the SMB
Host controller on Acer Labs Inc. (ALI) M1535 South Bridges.  The SMB
controller is part of the 7101 device, which is an ACPI-compliant
Power Management Unit (PMU).

This driver can also be built as a module.  If so, the module
will be called i2c-ali1535.</help>
					</entry>
					<entry name="I2C_ALI1563">
						<label>ALI 1563</label>
						<help>If you say yes to this option, support will be included for the SMB
Host controller on Acer Labs Inc. (ALI) M1563 South Bridges.  The SMB
controller is part of the 7101 device, which is an ACPI-compliant
Power Management Unit (PMU).

This driver can also be built as a module.  If so, the module
will be called i2c-ali1563.</help>
					</entry>
					<entry name="I2C_ALI15X3">
						<label>ALI 15x3</label>
						<help>If you say yes to this option, support will be included for the
Acer Labs Inc. (ALI) M1514 and M1543 motherboard I2C interfaces.

This driver can also be built as a module.  If so, the module
will be called i2c-ali15x3.</help>
					</entry>
					<entry name="I2C_AMD756">
						<label>AMD 756/766/768/8111 and nVidia nForce</label>
						<help>If you say yes to this option, support will be included for the AMD
756/766/768 mainboard I2C interfaces.  The driver also includes
support for the first (SMBus 1.0) I2C interface of the AMD 8111 and
the nVidia nForce I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-amd756.</help>
					</entry>
					<entry name="I2C_AMD756_S4882">
						<label>SMBus multiplexing on the Tyan S4882</label>
						<help>Enabling this option will add specific SMBus support for the Tyan
S4882 motherboard.  On this 4-CPU board, the SMBus is multiplexed
over 8 different channels, where the various memory module EEPROMs
and temperature sensors live.  Saying yes here will give you access
to these in addition to the trunk.

This driver can also be built as a module.  If so, the module
will be called i2c-amd756-s4882.</help>
					</entry>
					<entry name="I2C_AMD8111">
						<label>AMD 8111</label>
						<help>If you say yes to this option, support will be included for the
second (SMBus 2.0) AMD 8111 mainboard I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-amd8111.</help>
					</entry>
					<entry name="I2C_HIX5HD2">
						<label>Hix5hd2 high-speed I2C driver</label>
						<help>Say Y here to include support for high-speed I2C controller in the
Hisilicon based hix5hd2 SoCs.

This driver can also be built as a module.  If so, the module
will be called i2c-hix5hd2.</help>
					</entry>
					<entry name="I2C_I801">
						<label>Intel 82801 (ICH/PCH)</label>
						<help>If you say yes to this option, support will be included for the Intel
801 family of mainboard I2C interfaces.  Specifically, the following
versions of the chipset are supported:
82801AA
82801AB
82801BA
82801CA/CAM
82801DB
82801EB/ER (ICH5/ICH5R)
6300ESB
ICH6
ICH7
ESB2
ICH8
ICH9
EP80579 (Tolapai)
ICH10
5/3400 Series (PCH)
6 Series (PCH)
Patsburg (PCH)
DH89xxCC (PCH)
Panther Point (PCH)
Lynx Point (PCH)
Lynx Point-LP (PCH)
Avoton (SOC)
Wellsburg (PCH)
Coleto Creek (PCH)
Wildcat Point (PCH)
Wildcat Point-LP (PCH)
BayTrail (SOC)
Sunrise Point-H (PCH)
Sunrise Point-LP (PCH)
DNV (SOC)
Broxton (SOC)
Lewisburg (PCH)

This driver can also be built as a module.  If so, the module
will be called i2c-i801.</help>
					</entry>
					<entry name="I2C_ISCH">
						<label>Intel SCH SMBus 1.0</label>
						<help>Say Y here if you want to use SMBus controller on the Intel SCH
based systems.

This driver can also be built as a module. If so, the module
will be called i2c-isch.</help>
					</entry>
					<entry name="I2C_ISMT">
						<label>Intel iSMT SMBus Controller</label>
						<help>If you say yes to this option, support will be included for the Intel
iSMT SMBus host controller interface.

This driver can also be built as a module.  If so, the module will be
called i2c-ismt.</help>
					</entry>
					<entry name="I2C_PIIX4">
						<label>Intel PIIX4 and compatible (ATI/AMD/Serverworks/Broadcom/SMSC)</label>
						<help>If you say yes to this option, support will be included for the Intel
PIIX4 family of mainboard I2C interfaces.  Specifically, the following
versions of the chipset are supported (note that Serverworks is part
of Broadcom):
Intel PIIX4
Intel 440MX
ATI IXP200
ATI IXP300
ATI IXP400
ATI SB600
ATI SB700/SP5100
ATI SB800
AMD Hudson-2
AMD ML
AMD CZ
Serverworks OSB4
Serverworks CSB5
Serverworks CSB6
Serverworks HT-1000
Serverworks HT-1100
SMSC Victory66

Some AMD chipsets contain two PIIX4-compatible SMBus
controllers. This driver will attempt to use both controllers
on the SB700/SP5100, if they have been initialized by the BIOS.

This driver can also be built as a module.  If so, the module
will be called i2c-piix4.</help>
					</entry>
					<entry name="I2C_NFORCE2">
						<label>Nvidia nForce2, nForce3 and nForce4</label>
						<help>If you say yes to this option, support will be included for the Nvidia
nForce2, nForce3 and nForce4 families of mainboard I2C interfaces.

This driver can also be built as a module.  If so, the module
will be called i2c-nforce2.</help>
					</entry>
					<entry name="I2C_NFORCE2_S4985">
						<label>SMBus multiplexing on the Tyan S4985</label>
						<help>Enabling this option will add specific SMBus support for the Tyan
S4985 motherboard.  On this 4-CPU board, the SMBus is multiplexed
over 4 different channels, where the various memory module EEPROMs
live.  Saying yes here will give you access to these in addition
to the trunk.

This driver can also be built as a module.  If so, the module
will be called i2c-nforce2-s4985.</help>
					</entry>
					<entry name="I2C_SIS5595">
						<label>SiS 5595</label>
						<help>If you say yes to this option, support will be included for the
SiS5595 SMBus (a subset of I2C) interface.

This driver can also be built as a module.  If so, the module
will be called i2c-sis5595.</help>
					</entry>
					<entry name="I2C_SIS630">
						<label>SiS 630/730/964</label>
						<help>If you say yes to this option, support will be included for the
SiS630, SiS730 and SiS964 SMBus (a subset of I2C) interface.

This driver can also be built as a module.  If so, the module
will be called i2c-sis630.</help>
					</entry>
					<entry name="I2C_SIS96X">
						<label>SiS 96x</label>
						<help>If you say yes to this option, support will be included for the SiS
96x SMBus (a subset of I2C) interfaces.  Specifically, the following
chipsets are supported:
645/961
645DX/961
645DX/962
648/961
650/961
735
745

This driver can also be built as a module.  If so, the module
will be called i2c-sis96x.</help>
					</entry>
					<entry name="I2C_VIA">
						<label>VIA VT82C586B</label>
						<help>If you say yes to this option, support will be included for the VIA
82C586B I2C interface

This driver can also be built as a module.  If so, the module
will be called i2c-via.</help>
					</entry>
					<entry name="I2C_VIAPRO">
						<label>VIA VT82C596/82C686/82xx and CX700/VX8xx/VX900</label>
						<help>If you say yes to this option, support will be included for the VIA
VT82C596 and later SMBus interface.  Specifically, the following
chipsets are supported:
VT82C596A/B
VT82C686A/B
VT8231
VT8233/A
VT8235
VT8237R/A/S
VT8251
CX700
VX800/VX820
VX855/VX875
VX900

This driver can also be built as a module.  If so, the module
will be called i2c-viapro.</help>
					</entry>
					<entry name="I2C_SCMI">
						<label>SMBus Control Method Interface</label>
						<help>This driver supports the SMBus Control Method Interface. It needs the
BIOS to declare ACPI control methods as described in the SMBus Control
Method Interface specification.

To compile this driver as a module, choose M here:
the module will be called i2c-scmi.</help>
					</entry>
					<entry name="I2C_HYDRA">
						<label>CHRP Apple Hydra Mac I/O I2C interface</label>
						<help>This supports the use of the I2C interface in the Apple Hydra Mac
I/O chip on some CHRP machines (e.g. the LongTrail).  Say Y if you
have such a machine.

This support is also available as a module.  If so, the module
will be called i2c-hydra.</help>
					</entry>
					<entry name="I2C_POWERMAC">
						<label>Powermac I2C interface</label>
						<help>This exposes the various PowerMac i2c interfaces to the linux i2c
layer and to userland. It is used by various drivers on the PowerMac
platform, and should generally be enabled.

This support is also available as a module.  If so, the module
will be called i2c-powermac.</help>
					</entry>
					<entry name="I2C_AT91">
						<label>Atmel AT91 I2C Two-Wire interface (TWI)</label>
						<help>This supports the use of the I2C interface on Atmel AT91
processors.

A serious problem is that there is no documented way to issue
repeated START conditions for more than two messages, as needed
to support combined I2C messages.  Use the i2c-gpio driver
unless your system can cope with this limitation.

Caution! at91rm9200, at91sam9261, at91sam9260, at91sam9263 devices
don't have clock stretching in transmission mode. For that reason,
you can encounter underrun issues causing premature stop sendings if
the latency to fill the transmission register is too long. If you
are facing this situation, use the i2c-gpio driver.</help>
					</entry>
					<entry name="I2C_AU1550">
						<label>Au1550/Au1200/Au1300 SMBus interface</label>
						<help>If you say yes to this option, support will be included for the
Au1550/Au1200/Au1300 SMBus interface.

This driver can also be built as a module.  If so, the module
will be called i2c-au1550.</help>
					</entry>
					<entry name="I2C_AXXIA">
						<label>Axxia I2C controller</label>
						<help>Say yes if you want to support the I2C bus on Axxia platforms.

Please note that this controller is limited to transfers of maximum
255 bytes in length. Any attempt to to a larger transfer will return
an error.</help>
					</entry>
					<entry name="I2C_BCM2835">
						<label>Broadcom BCM2835 I2C controller</label>
						<help>If you say yes to this option, support will be included for the
BCM2835 I2C controller.

If you don't know what to do here, say N.

This support is also available as a module.  If so, the module
will be called i2c-bcm2835.</help>
					</entry>
					<entry name="I2C_BCM_IPROC">
						<label>Broadcom iProc I2C controller</label>
						<help>If you say yes to this option, support will be included for the
Broadcom iProc I2C controller.

If you don't know what to do here, say N.</help>
					</entry>
					<entry name="I2C_BCM_KONA">
						<label>BCM Kona I2C adapter</label>
						<help>If you say yes to this option, support will be included for the
I2C interface on the Broadcom Kona family of processors.

If you do not need KONA I2C interface, say N.</help>
					</entry>
					<entry name="I2C_BRCMSTB">
						<label>BRCM Settop I2C controller</label>
						<help>If you say yes to this option, support will be included for the
I2C interface on the Broadcom Settop SoCs.

If you do not need I2C interface, say N.</help>
					</entry>
					<entry name="I2C_BLACKFIN_TWI">
						<label>Blackfin TWI I2C support</label>
						<help>This is the I2C bus driver for Blackfin on-chip TWI interface.

This driver can also be built as a module.  If so, the module
will be called i2c-bfin-twi.</help>
					</entry>
					<entry name="I2C_BLACKFIN_TWI_CLK_KHZ">
						<label>Blackfin TWI I2C clock (kHz)</label>
						<help>The unit of the TWI clock is kHz.</help>
					</entry>
					<entry name="I2C_CADENCE">
						<label>Cadence I2C Controller</label>
						<help>Say yes here to select Cadence I2C Host Controller. This controller is
e.g. used by Xilinx Zynq.</help>
					</entry>
					<entry name="I2C_CBUS_GPIO">
						<label>CBUS I2C driver</label>
						<help>Support for CBUS access using I2C API. Mostly relevant for Nokia
Internet Tablets (770, N800 and N810).

This driver can also be built as a module.  If so, the module
will be called i2c-cbus-gpio.</help>
					</entry>
					<entry name="I2C_CPM">
						<label>Freescale CPM1 or CPM2 (MPC8xx/826x)</label>
						<help>This supports the use of the I2C interface on Freescale
processors with CPM1 or CPM2.

This driver can also be built as a module.  If so, the module
will be called i2c-cpm.</help>
					</entry>
					<entry name="I2C_DAVINCI">
						<label>DaVinci I2C driver</label>
						<help>Support for TI DaVinci I2C controller driver.

This driver can also be built as a module.  If so, the module
will be called i2c-davinci.

Please note that this driver might be needed to bring up other
devices such as DaVinci NIC.
For details please see http://www.ti.com/davinci</help>
					</entry>
					<entry name="I2C_DESIGNWARE_CORE"/>
					<entry name="I2C_DESIGNWARE_PLATFORM">
						<label>Synopsys DesignWare Platform</label>
						<help>If you say yes to this option, support will be included for the
Synopsys DesignWare I2C adapter. Only master mode is supported.

This driver can also be built as a module.  If so, the module
will be called i2c-designware-platform.</help>
					</entry>
					<entry name="I2C_DESIGNWARE_PCI">
						<label>Synopsys DesignWare PCI</label>
						<help>If you say yes to this option, support will be included for the
Synopsys DesignWare I2C adapter. Only master mode is supported.

This driver can also be built as a module.  If so, the module
will be called i2c-designware-pci.</help>
					</entry>
					<entry name="I2C_DESIGNWARE_BAYTRAIL">
						<label>Intel Baytrail I2C semaphore support</label>
						<help>This driver enables managed host access to the PMIC I2C bus on select
Intel BayTrail platforms using the X-Powers AXP288 PMIC. It allows
the host to request uninterrupted access to the PMIC's I2C bus from
the platform firmware controlling it. You should say Y if running on
a BayTrail system using the AXP288.</help>
					</entry>
					<entry name="I2C_DIGICOLOR">
						<label>Conexant Digicolor I2C driver</label>
						<help>Support for Conexant Digicolor SoCs (CX92755) I2C controller driver.

This driver can also be built as a module.  If so, the module
will be called i2c-digicolor.</help>
					</entry>
					<entry name="I2C_EFM32">
						<label>EFM32 I2C controller</label>
						<help>This driver supports the i2c block found in Energy Micro's EFM32
SoCs.</help>
					</entry>
					<entry name="I2C_EG20T">
						<label>Intel EG20T PCH/LAPIS Semicon IOH(ML7213/ML7223/ML7831) I2C</label>
						<help>This driver is for PCH(Platform controller Hub) I2C of EG20T which
is an IOH(Input/Output Hub) for x86 embedded processor.
This driver can access PCH I2C bus device.

This driver also can be used for LAPIS Semiconductor IOH(Input/
Output Hub), ML7213, ML7223 and ML7831.
ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
for MP(Media Phone) use and ML7831 IOH is for general purpose use.
ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.</help>
					</entry>
					<entry name="I2C_EMEV2">
						<label>EMMA Mobile series I2C adapter</label>
						<help>If you say yes to this option, support will be included for the
I2C interface on the Renesas Electronics EM/EV family of processors.</help>
					</entry>
					<entry name="I2C_EXYNOS5">
						<label>Exynos5 high-speed I2C driver</label>
						<help>High-speed I2C controller on Exynos5 based Samsung SoCs.</help>
					</entry>
					<entry name="I2C_GPIO">
						<label>GPIO-based bitbanging I2C</label>
						<help>This is a very simple bitbanging I2C driver utilizing the
arch-neutral GPIO API to control the SCL and SDA lines.</help>
					</entry>
					<entry name="I2C_HIGHLANDER">
						<label>Highlander FPGA SMBus interface</label>
						<help>If you say yes to this option, support will be included for
the SMBus interface located in the FPGA on various Highlander
boards, particularly the R0P7780LC0011RL and R0P7785LC0011RL
FPGAs. This is wholly unrelated to the SoC I2C.

This driver can also be built as a module.  If so, the module
will be called i2c-highlander.</help>
					</entry>
					<entry name="I2C_IBM_IIC">
						<label>IBM PPC 4xx on-chip I2C interface</label>
						<help>Say Y here if you want to use IIC peripheral found on
embedded IBM PPC 4xx based systems.

This driver can also be built as a module.  If so, the module
will be called i2c-ibm_iic.</help>
					</entry>
					<entry name="I2C_IMG">
						<label>Imagination Technologies I2C SCB Controller</label>
						<help>Say Y here if you want to use the IMG I2C SCB controller,
available on the TZ1090 and other IMG SoCs.

This driver can also be built as a module.  If so, the module
will be called i2c-img-scb.</help>
					</entry>
					<entry name="I2C_IMX">
						<label>IMX I2C interface</label>
						<help>Say Y here if you want to use the IIC bus controller on
the Freescale i.MX/MXC or Layerscape processors.

This driver can also be built as a module.  If so, the module
will be called i2c-imx.</help>
					</entry>
					<entry name="I2C_IOP3XX">
						<label>Intel IOPx3xx and IXP4xx on-chip I2C interface</label>
						<help>Say Y here if you want to use the IIC bus controller on
the Intel IOPx3xx I/O Processors or IXP4xx Network Processors.

This driver can also be built as a module.  If so, the module
will be called i2c-iop3xx.</help>
					</entry>
					<entry name="I2C_JZ4780">
						<label>JZ4780 I2C controller interface support</label>
						<help>If you say yes to this option, support will be included for the
Ingenic JZ4780 I2C controller.

If you don't know what to do here, say N.</help>
					</entry>
					<entry name="I2C_KEMPLD">
						<label>Kontron COM I2C Controller</label>
						<help>This enables support for the I2C bus interface on some Kontron ETX
and COMexpress (ETXexpress) modules.

This driver can also be built as a module. If so, the module
will be called i2c-kempld.</help>
					</entry>
					<entry name="I2C_LPC2K">
						<label>I2C bus support for NXP LPC2K/LPC178x/18xx/43xx</label>
						<help>This driver supports the I2C interface found several NXP
devices including LPC2xxx, LPC178x/7x and LPC18xx/43xx.

This driver can also be built as a module.  If so, the module
will be called i2c-lpc2k.</help>
					</entry>
					<entry name="I2C_MESON">
						<label>Amlogic Meson I2C controller</label>
						<help>If you say yes to this option, support will be included for the
I2C interface on the Amlogic Meson family of SoCs.</help>
					</entry>
					<entry name="I2C_MPC">
						<label>MPC107/824x/85xx/512x/52xx/83xx/86xx</label>
						<help>If you say yes to this option, support will be included for the
built-in I2C interface on the MPC107, Tsi107, MPC512x, MPC52xx,
MPC8240, MPC8245, MPC83xx, MPC85xx and MPC8641 family processors.

This driver can also be built as a module.  If so, the module
will be called i2c-mpc.</help>
					</entry>
					<entry name="I2C_MT65XX">
						<label>MediaTek I2C adapter</label>
						<help>This selects the MediaTek(R) Integrated Inter Circuit bus driver
for MT65xx and MT81xx.
If you want to use MediaTek(R) I2C interface, say Y or M here.
If unsure, say N.</help>
					</entry>
					<entry name="I2C_MV64XXX">
						<label>Marvell mv64xxx I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
built-in I2C interface on the Marvell 64xxx line of host bridges.
This driver is also used for Allwinner SoCs I2C controllers.

This driver can also be built as a module.  If so, the module
will be called i2c-mv64xxx.</help>
					</entry>
					<entry name="I2C_MXS">
						<label>Freescale i.MX28 I2C interface</label>
						<help>Say Y here if you want to use the I2C bus controller on
the Freescale i.MX28 processors.

This driver can also be built as a module.  If so, the module
will be called i2c-mxs.</help>
					</entry>
					<entry name="I2C_NOMADIK">
						<label>ST-Ericsson Nomadik/Ux500 I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
I2C interface from ST-Ericsson's Nomadik and Ux500 architectures,
as well as the STA2X11 PCIe I/O HUB.</help>
					</entry>
					<entry name="I2C_OCORES">
						<label>OpenCores I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
OpenCores I2C controller. For details see
http://www.opencores.org/projects.cgi/web/i2c/overview

This driver can also be built as a module.  If so, the module
will be called i2c-ocores.</help>
					</entry>
					<entry name="I2C_OMAP">
						<label>OMAP I2C adapter</label>
						<help>If you say yes to this option, support will be included for the
I2C interface on the Texas Instruments OMAP1/2 family of processors.
Like OMAP1510/1610/1710/5912 and OMAP242x.
For details see http://www.ti.com/omap.</help>
					</entry>
					<entry name="I2C_PASEMI">
						<label>PA Semi SMBus interface</label>
						<help>Supports the PA Semi PWRficient on-chip SMBus interfaces.</help>
					</entry>
					<entry name="I2C_PCA_PLATFORM">
						<label>PCA9564/PCA9665 as platform device</label>
						<help>This driver supports a memory mapped Philips PCA9564/PCA9665
parallel bus to I2C bus controller.

This driver can also be built as a module.  If so, the module
will be called i2c-pca-platform.</help>
					</entry>
					<entry name="I2C_PMCMSP">
						<label>PMC MSP I2C TWI Controller</label>
						<help>This driver supports the PMC TWI controller on MSP devices.

This driver can also be built as module. If so, the module
will be called i2c-pmcmsp.</help>
					</entry>
					<entry name="I2C_PNX">
						<label>I2C bus support for Philips PNX and NXP LPC targets</label>
						<help>This driver supports the Philips IP3204 I2C IP block master and/or
slave controller

This driver can also be built as a module.  If so, the module
will be called i2c-pnx.</help>
					</entry>
					<entry name="I2C_PUV3">
						<label>PKUnity v3 I2C bus support</label>
						<help>This driver supports the I2C IP inside the PKUnity-v3 SoC.
This I2C bus controller is under AMBA/AXI bus.

This driver can also be built as a module.  If so, the module
will be called i2c-puv3.</help>
					</entry>
					<entry name="I2C_PXA">
						<label>Intel PXA2XX I2C adapter</label>
						<help>If you have devices in the PXA I2C bus, say yes to this option.
This driver can also be built as a module.  If so, the module
will be called i2c-pxa.</help>
					</entry>
					<entry name="I2C_PXA_PCI"/>
					<entry name="I2C_PXA_SLAVE">
						<label>Intel PXA2XX I2C Slave comms support</label>
						<help>Support I2C slave mode communications on the PXA I2C bus.  This
is necessary for systems where the PXA may be a target on the
I2C bus.</help>
					</entry>
					<entry name="I2C_QUP">
						<label>Qualcomm QUP based I2C controller</label>
						<help>If you say yes to this option, support will be included for the
built-in I2C interface on the Qualcomm SoCs.

This driver can also be built as a module.  If so, the module
will be called i2c-qup.</help>
					</entry>
					<entry name="I2C_RIIC">
						<label>Renesas RIIC adapter</label>
						<help>If you say yes to this option, support will be included for the
Renesas RIIC I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-riic.</help>
					</entry>
					<entry name="I2C_RK3X">
						<label>Rockchip RK3xxx I2C adapter</label>
						<help>Say Y here to include support for the I2C adapter in Rockchip RK3xxx
SoCs.

This driver can also be built as a module. If so, the module will
be called i2c-rk3x.</help>
					</entry>
					<entry name="HAVE_S3C2410_I2C">
						<help>This will include I2C support for Samsung SoCs. If you want to
include I2C support for any machine, kindly select this in the
respective Kconfig file.</help>
					</entry>
					<entry name="I2C_S3C2410">
						<label>S3C2410 I2C Driver</label>
						<help>Say Y here to include support for I2C controller in the
Samsung SoCs.</help>
					</entry>
					<entry name="I2C_SH7760">
						<label>Renesas SH7760 I2C Controller</label>
						<help>This driver supports the 2 I2C interfaces on the Renesas SH7760.

This driver can also be built as a module.  If so, the module
will be called i2c-sh7760.</help>
					</entry>
					<entry name="I2C_SH_MOBILE">
						<label>SuperH Mobile I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
built-in I2C interface on the Renesas SH-Mobile processor.

This driver can also be built as a module.  If so, the module
will be called i2c-sh_mobile.</help>
					</entry>
					<entry name="I2C_SIMTEC">
						<label>Simtec Generic I2C interface</label>
						<help>If you say yes to this option, support will be included for
the Simtec Generic I2C interface. This driver is for the
simple I2C bus used on newer Simtec products for general
I2C, such as DDC on the Simtec BBD2016A.

This driver can also be built as a module. If so, the module
will be called i2c-simtec.</help>
					</entry>
					<entry name="I2C_SIRF">
						<label>CSR SiRFprimaII I2C interface</label>
						<help>If you say yes to this option, support will be included for the
CSR SiRFprimaII I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-sirf.</help>
					</entry>
					<entry name="I2C_ST">
						<label>STMicroelectronics SSC I2C support</label>
						<help>Enable this option to add support for STMicroelectronics SoCs
hardware SSC (Synchronous Serial Controller) as an I2C controller.

This driver can also be built as module. If so, the module
will be called i2c-st.</help>
					</entry>
					<entry name="I2C_STU300">
						<label>ST Microelectronics DDC I2C interface</label>
						<help>If you say yes to this option, support will be included for the
I2C interface from ST Microelectronics simply called &quot;DDC I2C&quot;
supporting both I2C and DDC, used in e.g. the U300 series
mobile platforms.

This driver can also be built as a module. If so, the module
will be called i2c-stu300.</help>
					</entry>
					<entry name="I2C_SUN6I_P2WI">
						<label>Allwinner sun6i internal P2WI controller</label>
						<help>If you say yes to this option, support will be included for the
P2WI (Push/Pull 2 Wire Interface) controller embedded in some sunxi
SOCs.
The P2WI looks like an SMBus controller (which supports only byte
accesses), except that it only supports one slave device.
This interface is used to connect to specific PMIC devices (like the
AXP221).</help>
					</entry>
					<entry name="I2C_TEGRA">
						<label>NVIDIA Tegra internal I2C controller</label>
						<help>If you say yes to this option, support will be included for the
I2C controller embedded in NVIDIA Tegra SOCs</help>
					</entry>
					<entry name="I2C_UNIPHIER">
						<label>UniPhier FIFO-less I2C controller</label>
						<help>If you say yes to this option, support will be included for
the UniPhier FIFO-less I2C interface embedded in PH1-LD4, PH1-sLD8,
or older UniPhier SoCs.</help>
					</entry>
					<entry name="I2C_UNIPHIER_F">
						<label>UniPhier FIFO-builtin I2C controller</label>
						<help>If you say yes to this option, support will be included for
the UniPhier FIFO-builtin I2C interface embedded in PH1-Pro4,
PH1-Pro5, or newer UniPhier SoCs.</help>
					</entry>
					<entry name="I2C_VERSATILE">
						<label>ARM Versatile/Realview I2C bus support</label>
						<help>Say yes if you want to support the I2C serial bus on ARMs Versatile
range of platforms.

This driver can also be built as a module.  If so, the module
will be called i2c-versatile.</help>
					</entry>
					<entry name="I2C_WMT">
						<label>Wondermedia WM8xxx SoC I2C bus support</label>
						<help>Say yes if you want to support the I2C bus on Wondermedia 8xxx-series
SoCs.

This driver can also be built as a module. If so, the module will be
called i2c-wmt.</help>
					</entry>
					<entry name="I2C_OCTEON">
						<label>Cavium OCTEON I2C bus support</label>
						<help>Say yes if you want to support the I2C serial bus on Cavium
OCTEON SOC.

This driver can also be built as a module.  If so, the module
will be called i2c-octeon.</help>
					</entry>
					<entry name="I2C_XILINX">
						<label>Xilinx I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
Xilinx I2C controller.

This driver can also be built as a module.  If so, the module
will be called xilinx_i2c.</help>
					</entry>
					<entry name="I2C_XLR">
						<label>Netlogic XLR and Sigma Designs I2C support</label>
						<help>This driver enables support for the on-chip I2C interface of
the Netlogic XLR/XLS MIPS processors and Sigma Designs SOCs.

This driver can also be built as a module.  If so, the module
will be called i2c-xlr.</help>
					</entry>
					<entry name="I2C_XLP9XX">
						<label>XLP9XX I2C support</label>
						<help>This driver enables support for the on-chip I2C interface of
the Broadcom XLP9xx/XLP5xx MIPS and Vulcan ARM64 processors.

This driver can also be built as a module.  If so, the module will
be called i2c-xlp9xx.</help>
					</entry>
					<entry name="I2C_RCAR">
						<label>Renesas R-Car I2C Controller</label>
						<help>If you say yes to this option, support will be included for the
R-Car I2C controller.

This driver can also be built as a module.  If so, the module
will be called i2c-rcar.</help>
					</entry>
					<entry name="I2C_DIOLAN_U2C">
						<label>Diolan U2C-12 USB adapter</label>
						<help>If you say yes to this option, support will be included for Diolan
U2C-12, a USB to I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-diolan-u2c.</help>
					</entry>
					<entry name="I2C_DLN2">
						<label>Diolan DLN-2 USB I2C adapter</label>
						<help>If you say yes to this option, support will be included for Diolan
DLN2, a USB to I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-dln2.</help>
					</entry>
					<entry name="I2C_PARPORT">
						<label>Parallel port adapter</label>
						<help>This supports parallel port I2C adapters such as the ones made by
Philips or Velleman, Analog Devices evaluation boards, and more.
Basically any adapter using the parallel port as an I2C bus with
no extra chipset is supported by this driver, or could be.

This driver is a replacement for (and was inspired by) an older
driver named i2c-philips-par.  The new driver supports more devices,
and makes it easier to add support for new devices.

An adapter type parameter is now mandatory.  Please read the file
Documentation/i2c/busses/i2c-parport for details.

Another driver exists, named i2c-parport-light, which doesn't depend
on the parport driver.  This is meant for embedded systems. Don't say
Y here if you intend to say Y or M there.

This support is also available as a module.  If so, the module
will be called i2c-parport.</help>
					</entry>
					<entry name="I2C_PARPORT_LIGHT">
						<label>Parallel port adapter (light)</label>
						<help>This supports parallel port I2C adapters such as the ones made by
Philips or Velleman, Analog Devices evaluation boards, and more.
Basically any adapter using the parallel port as an I2C bus with
no extra chipset is supported by this driver, or could be.

This driver is a light version of i2c-parport.  It doesn't depend
on the parport driver, and uses direct I/O access instead.  This
might be preferred on embedded systems where wasting memory for
the clean but heavy parport handling is not an option.  The
drawback is a reduced portability and the impossibility to
daisy-chain other parallel port devices.

Don't say Y here if you said Y or M to i2c-parport.  Saying M to
both is possible but both modules should not be loaded at the same
time.

This support is also available as a module.  If so, the module
will be called i2c-parport-light.</help>
					</entry>
					<entry name="I2C_ROBOTFUZZ_OSIF">
						<label>RobotFuzz Open Source InterFace USB adapter</label>
						<help>If you say yes to this option, support will be included for the
RobotFuzz Open Source InterFace USB to I2C interface.

This driver can also be built as a module.  If so, the module
will be called i2c-osif.</help>
					</entry>
					<entry name="I2C_TAOS_EVM">
						<label>TAOS evaluation module</label>
						<help>This supports TAOS evaluation modules on serial port. In order to
use this driver, you will need the inputattach tool, which is part
of the input-utils package.

If unsure, say N.

This support is also available as a module.  If so, the module
will be called i2c-taos-evm.</help>
					</entry>
					<entry name="I2C_TINY_USB">
						<label>Tiny-USB adapter</label>
						<help>If you say yes to this option, support will be included for the
i2c-tiny-usb, a simple do-it-yourself USB to I2C interface. See
http://www.harbaum.org/till/i2c_tiny_usb for hardware details.

This driver can also be built as a module.  If so, the module
will be called i2c-tiny-usb.</help>
					</entry>
					<entry name="I2C_VIPERBOARD">
						<label>Viperboard I2C master support</label>
						<help>Say yes here to access the I2C part of the Nano River
Technologies Viperboard as I2C master.
See viperboard API specification and Nano
River Tech's viperboard.h for detailed meaning
of the module parameters.</help>
					</entry>
					<entry name="I2C_ACORN">
						<label>Acorn IOC/IOMD I2C bus support</label>
						<help>Say yes if you want to support the I2C bus on Acorn platforms.

If you don't know, say Y.</help>
					</entry>
					<entry name="I2C_ELEKTOR">
						<label>Elektor ISA card</label>
						<help>This supports the PCF8584 ISA bus I2C adapter.  Say Y if you own
such an adapter.

This support is also available as a module.  If so, the module
will be called i2c-elektor.</help>
					</entry>
					<entry name="I2C_PCA_ISA">
						<label>PCA9564/PCA9665 on an ISA bus</label>
						<help>This driver supports ISA boards using the Philips PCA9564/PCA9665
parallel bus to I2C bus controller.

This driver can also be built as a module.  If so, the module
will be called i2c-pca-isa.

This device is almost undetectable and using this driver on a
system which doesn't have this device will result in long
delays when I2C/SMBus chip drivers are loaded (e.g. at boot
time).  If unsure, say N.</help>
					</entry>
					<entry name="I2C_SIBYTE">
						<label>SiByte SMBus interface</label>
						<help>Supports the SiByte SOC on-chip I2C interfaces (2 channels).</help>
					</entry>
					<entry name="I2C_CROS_EC_TUNNEL">
						<label>ChromeOS EC tunnel I2C bus</label>
						<help>If you say yes here you get an I2C bus that will tunnel i2c commands
through to the other side of the ChromeOS EC to the i2c bus
connected there. This will work whatever the interface used to
talk to the EC (SPI, I2C or LPC).</help>
					</entry>
					<entry name="I2C_XGENE_SLIMPRO">
						<label>APM X-Gene SoC I2C SLIMpro devices support</label>
						<help>Enable I2C bus access using the APM X-Gene SoC SLIMpro
co-processor. The I2C device access the I2C bus via the X-Gene
to SLIMpro (On chip coprocessor) mailbox mechanism.
If unsure, say N.</help>
					</entry>
					<entry name="SCx200_ACB">
						<label>Geode ACCESS.bus support</label>
						<help>Enable the use of the ACCESS.bus controllers on the Geode SCx200 and
SC1100 processors and the CS5535 and CS5536 Geode companion devices.

If you don't know what to do here, say N.

This support is also available as a module.  If so, the module
will be called scx200_acb.</help>
					</entry>
					<entry name="I2C_OPAL">
						<label>IBM OPAL I2C driver</label>
						<help>This exposes the PowerNV platform i2c busses to the linux i2c layer,
the driver is based on the OPAL interfaces.

This driver can also be built as a module. If so, the module will be
called as i2c-opal.</help>
					</entry>
				</container>
				<entry name="I2C_STUB">
					<label>I2C/SMBus Test Stub</label>
					<help>This module may be useful to developers of SMBus client drivers,
especially for certain kinds of sensor chips.

If you do build this module, be sure to read the notes and warnings
in &lt;file:Documentation/i2c/i2c-stub&gt;.

If you don't know what to do here, definitely say N.</help>
				</entry>
				<entry name="I2C_SLAVE">
					<label>I2C slave support</label>
				</entry>
				<entry name="I2C_SLAVE_EEPROM">
					<label>I2C eeprom slave driver</label>
				</entry>
				<entry name="I2C_DEBUG_CORE">
					<label>I2C Core debugging messages</label>
					<help>Say Y here if you want the I2C core to produce a bunch of debug
messages to the system log.  Select this if you are having a
problem with I2C support and want to see more of what is going on.</help>
				</entry>
				<entry name="I2C_DEBUG_ALGO">
					<label>I2C Algorithm debugging messages</label>
					<help>Say Y here if you want the I2C algorithm drivers to produce a bunch
of debug messages to the system log.  Select this if you are having
a problem with I2C support and want to see more of what is going
on.</help>
				</entry>
				<entry name="I2C_DEBUG_BUS">
					<label>I2C Bus debugging messages</label>
					<help>Say Y here if you want the I2C bus drivers to produce a bunch of
debug messages to the system log.  Select this if you are having
a problem with I2C support and want to see more of what is going
on.</help>
				</entry>
			</container>
			<entry name="SPI">
				<label>SPI support</label>
				<help>The &quot;Serial Peripheral Interface&quot; is a low level synchronous
protocol.  Chips that support SPI can have data transfer rates
up to several tens of Mbit/sec.  Chips are addressed with a
controller and a chipselect.  Most SPI slaves don't support
dynamic device discovery; some are even write-only or read-only.

SPI is widely used by microcontrollers to talk with sensors,
eeprom and flash memory, codecs and various other controller
chips, analog to digital (and d-to-a) converters, and more.
MMC and SD cards can be accessed using SPI protocol; and for
DataFlash cards used in MMC sockets, SPI must always be used.

SPI is one of a family of similar protocols using a four wire
interface (select, clock, data in, data out) including Microwire
(half duplex), SSP, SSI, and PSP.  This driver framework should
work with most such devices and controllers.</help>
			</entry>
			<entry name="SPI_DEBUG">
				<label>Debug support for SPI drivers</label>
				<help>Say &quot;yes&quot; to enable debug messaging (like dev_dbg and pr_debug),
sysfs, and debugfs support in SPI controller and protocol drivers.</help>
			</entry>
			<entry name="SPI_MASTER">
				<help>If your system has an master-capable SPI controller (which
provides the clock and chipselect), you can enable that
controller and the protocol drivers for the SPI slave chips
that are connected.</help>
			</entry>
			<entry name="SPI_ALTERA">
				<label>Altera SPI Controller</label>
				<help>This is the driver for the Altera SPI Controller.</help>
			</entry>
			<entry name="SPI_ATH79">
				<label>Atheros AR71XX/AR724X/AR913X SPI controller driver</label>
				<help>This enables support for the SPI controller present on the
Atheros AR71XX/AR724X/AR913X SoCs.</help>
			</entry>
			<entry name="SPI_ATMEL">
				<label>Atmel SPI Controller</label>
				<help>This selects a driver for the Atmel SPI Controller, present on
many AT32 (AVR32) and AT91 (ARM) chips.</help>
			</entry>
			<entry name="SPI_AU1550">
				<label>Au1550/Au1200/Au1300 SPI Controller</label>
				<help>If you say yes to this option, support will be included for the
PSC SPI controller found on Au1550, Au1200 and Au1300 series.</help>
			</entry>
			<entry name="SPI_AXI_SPI_ENGINE">
				<label>Analog Devices AXI SPI Engine controller</label>
				<help>This enables support for the Analog Devices AXI SPI Engine SPI controller.
It is part of the SPI Engine framework that is used in some Analog Devices
reference designs for FPGAs.</help>
			</entry>
			<entry name="SPI_BCM2835">
				<label>BCM2835 SPI controller</label>
				<help>This selects a driver for the Broadcom BCM2835 SPI master.

The BCM2835 contains two types of SPI master controller; the
&quot;universal SPI master&quot;, and the regular SPI controller. This driver
is for the regular SPI controller. Slave mode operation is not also
not supported.</help>
			</entry>
			<entry name="SPI_BCM2835AUX">
				<label>BCM2835 SPI auxiliary controller</label>
				<help>This selects a driver for the Broadcom BCM2835 SPI aux master.

The BCM2835 contains two types of SPI master controller; the
&quot;universal SPI master&quot;, and the regular SPI controller.
This driver is for the universal/auxiliary SPI controller.</help>
			</entry>
			<entry name="SPI_BFIN5XX">
				<label>SPI controller driver for ADI Blackfin5xx</label>
				<help>This is the SPI controller master driver for Blackfin 5xx processor.</help>
			</entry>
			<entry name="SPI_ADI_V3">
				<label>SPI controller v3 for ADI</label>
				<help>This is the SPI controller v3 master driver
found on Blackfin 60x processor.</help>
			</entry>
			<entry name="SPI_BFIN_SPORT">
				<label>SPI bus via Blackfin SPORT</label>
				<help>Enable support for a SPI bus via the Blackfin SPORT peripheral.</help>
			</entry>
			<entry name="SPI_BCM53XX">
				<label>Broadcom BCM53xx SPI controller</label>
				<help>Enable support for the SPI controller on Broadcom BCM53xx ARM SoCs.</help>
			</entry>
			<entry name="SPI_BCM63XX">
				<label>Broadcom BCM63xx SPI controller</label>
				<help>Enable support for the SPI controller on the Broadcom BCM63xx SoCs.</help>
			</entry>
			<entry name="SPI_BCM63XX_HSSPI">
				<label>Broadcom BCM63XX HS SPI controller driver</label>
				<help>This enables support for the High Speed SPI controller present on
newer Broadcom BCM63XX SoCs.</help>
			</entry>
			<entry name="SPI_BITBANG">
				<label>Utilities for Bitbanging SPI masters</label>
				<help>With a few GPIO pins, your system can bitbang the SPI protocol.
Select this to get SPI support through I/O pins (GPIO, parallel
port, etc).  Or, some systems' SPI master controller drivers use
this code to manage the per-word or per-transfer accesses to the
hardware shift registers.

This is library code, and is automatically selected by drivers that
need it.  You only need to select this explicitly to support driver
modules that aren't part of this kernel tree.</help>
			</entry>
			<entry name="SPI_BUTTERFLY">
				<label>Parallel port adapter for AVR Butterfly (DEVELOPMENT)</label>
				<help>This uses a custom parallel port cable to connect to an AVR
Butterfly &lt;http://www.atmel.com/products/avr/butterfly&gt;, an
inexpensive battery powered microcontroller evaluation board.
This same cable can be used to flash new firmware.</help>
			</entry>
			<entry name="SPI_CADENCE">
				<label>Cadence SPI controller</label>
				<help>This selects the Cadence SPI controller master driver
used by Xilinx Zynq and ZynqMP.</help>
			</entry>
			<entry name="SPI_CLPS711X">
				<label>CLPS711X host SPI controller</label>
				<help>This enables dedicated general purpose SPI/Microwire1-compatible
master mode interface (SSI1) for CLPS711X-based CPUs.</help>
			</entry>
			<entry name="SPI_COLDFIRE_QSPI">
				<label>Freescale Coldfire QSPI controller</label>
				<help>This enables support for the Coldfire QSPI controller in master
mode.</help>
			</entry>
			<entry name="SPI_DAVINCI">
				<label>Texas Instruments DaVinci/DA8x/OMAP-L/AM1x SoC SPI controller</label>
				<help>SPI master controller for DaVinci/DA8x/OMAP-L/AM1x SPI modules.</help>
			</entry>
			<entry name="SPI_DESIGNWARE">
				<label>DesignWare SPI controller core support</label>
				<help>general driver for SPI controller core from DesignWare</help>
			</entry>
			<entry name="SPI_DW_PCI">
				<label>PCI interface driver for DW SPI core</label>
			</entry>
			<entry name="SPI_DW_MID_DMA">
				<label>DMA support for DW SPI controller on Intel MID platform</label>
			</entry>
			<entry name="SPI_DW_MMIO">
				<label>Memory-mapped io interface driver for DW SPI core</label>
			</entry>
			<entry name="SPI_DLN2">
				<label>Diolan DLN-2 USB SPI adapter</label>
				<help>If you say yes to this option, support will be included for Diolan
DLN2, a USB to SPI interface.

This driver can also be built as a module.  If so, the module
will be called spi-dln2.</help>
			</entry>
			<entry name="SPI_EFM32">
				<label>EFM32 SPI controller</label>
				<help>Driver for the spi controller found on Energy Micro's EFM32 SoCs.</help>
			</entry>
			<entry name="SPI_EP93XX">
				<label>Cirrus Logic EP93xx SPI controller</label>
				<help>This enables using the Cirrus EP93xx SPI controller in master
mode.</help>
			</entry>
			<entry name="SPI_FALCON">
				<label>Falcon SPI controller support</label>
				<help>The external bus unit (EBU) found on the FALC-ON SoC has SPI
emulation that is designed for serial flash access. This driver
has only been tested with m25p80 type chips. The hardware has no
support for other types of SPI peripherals.</help>
			</entry>
			<entry name="SPI_GPIO">
				<label>GPIO-based bitbanging SPI Master</label>
				<help>This simple GPIO bitbanging SPI master uses the arch-neutral GPIO
interface to manage MOSI, MISO, SCK, and chipselect signals.  SPI
slaves connected to a bus using this driver are configured as usual,
except that the spi_board_info.controller_data holds the GPIO number
for the chipselect used by this controller driver.

Note that this driver often won't achieve even 1 Mbit/sec speeds,
making it unusually slow for SPI.  If your platform can inline
GPIO operations, you should be able to leverage that for better
speed with a custom version of this driver; see the source code.</help>
			</entry>
			<entry name="SPI_IMG_SPFI">
				<label>IMG SPFI controller</label>
				<help>This enables support for the SPFI master controller found on
IMG SoCs.</help>
			</entry>
			<entry name="SPI_IMX">
				<label>Freescale i.MX SPI controllers</label>
				<help>This enables using the Freescale i.MX SPI controllers in master
mode.</help>
			</entry>
			<entry name="SPI_LM70_LLP">
				<label>Parallel port adapter for LM70 eval board (DEVELOPMENT)</label>
				<help>This driver supports the NS LM70 LLP Evaluation Board,
which interfaces to an LM70 temperature sensor using
a parallel port.</help>
			</entry>
			<entry name="SPI_LP8841_RTC">
				<label>ICP DAS LP-8841 SPI Controller for RTC</label>
				<help>This driver provides an SPI master device to drive Maxim
DS-1302 real time clock.

Say N here unless you plan to run the kernel on an ICP DAS
LP-8x4x industrial computer.</help>
			</entry>
			<entry name="SPI_MPC52xx">
				<label>Freescale MPC52xx SPI (non-PSC) controller support</label>
				<help>This drivers supports the MPC52xx SPI controller in master SPI
mode.</help>
			</entry>
			<entry name="SPI_MPC52xx_PSC">
				<label>Freescale MPC52xx PSC SPI controller</label>
				<help>This enables using the Freescale MPC52xx Programmable Serial
Controller in master SPI mode.</help>
			</entry>
			<entry name="SPI_MPC512x_PSC">
				<label>Freescale MPC512x PSC SPI controller</label>
				<help>This enables using the Freescale MPC5121 Programmable Serial
Controller in SPI master mode.</help>
			</entry>
			<entry name="SPI_FSL_LIB"/>
			<entry name="SPI_FSL_CPM"/>
			<entry name="SPI_FSL_SPI">
				<label>Freescale SPI controller and Aeroflex Gaisler GRLIB SPI controller</label>
				<help>This enables using the Freescale SPI controllers in master mode.
MPC83xx platform uses the controller in cpu mode or CPM/QE mode.
MPC8569 uses the controller in QE mode, MPC8610 in cpu mode.
This also enables using the Aeroflex Gaisler GRLIB SPI controller in
master mode.</help>
			</entry>
			<entry name="SPI_FSL_DSPI">
				<label>Freescale DSPI controller</label>
				<help>This enables support for the Freescale DSPI controller in master
mode. VF610 platform uses the controller.</help>
			</entry>
			<entry name="SPI_FSL_ESPI">
				<label>Freescale eSPI controller</label>
				<help>This enables using the Freescale eSPI controllers in master mode.
From MPC8536, 85xx platform uses the controller, and all P10xx,
P20xx, P30xx,P40xx, P50xx uses this controller.</help>
			</entry>
			<entry name="SPI_MESON_SPIFC">
				<label>Amlogic Meson SPIFC controller</label>
				<help>This enables master mode support for the SPIFC (SPI flash
controller) available in Amlogic Meson SoCs.</help>
			</entry>
			<entry name="SPI_MT65XX">
				<label>MediaTek SPI controller</label>
				<help>This selects the MediaTek(R) SPI bus driver.
If you want to use MediaTek(R) SPI interface,
say Y or M here.If you are not sure, say N.
SPI drivers for Mediatek MT65XX and MT81XX series ARM SoCs.</help>
			</entry>
			<entry name="SPI_NUC900">
				<label>Nuvoton NUC900 series SPI</label>
				<help>SPI driver for Nuvoton NUC900 series ARM SoCs</help>
			</entry>
			<entry name="SPI_OC_TINY">
				<label>OpenCores tiny SPI</label>
				<help>This is the driver for OpenCores tiny SPI master controller.</help>
			</entry>
			<entry name="SPI_OCTEON">
				<label>Cavium OCTEON SPI controller</label>
				<help>SPI host driver for the hardware found on some Cavium OCTEON
SOCs.</help>
			</entry>
			<entry name="SPI_OMAP_UWIRE">
				<label>OMAP1 MicroWire</label>
				<help>This hooks up to the MicroWire controller on OMAP1 chips.</help>
			</entry>
			<entry name="SPI_OMAP24XX">
				<label>McSPI driver for OMAP</label>
				<help>SPI master controller for OMAP24XX and later Multichannel SPI
(McSPI) modules.</help>
			</entry>
			<entry name="SPI_TI_QSPI">
				<label>DRA7xxx QSPI controller support</label>
				<help>QSPI master controller for DRA7xxx used for flash devices.
This device supports single, dual and quad read support, while
it only supports single write mode.</help>
			</entry>
			<entry name="SPI_OMAP_100K">
				<label>OMAP SPI 100K</label>
				<help>OMAP SPI 100K master controller for omap7xx boards.</help>
			</entry>
			<entry name="SPI_ORION">
				<label>Orion SPI master</label>
				<help>This enables using the SPI master controller on the Orion chips.</help>
			</entry>
			<entry name="SPI_PIC32">
				<label>Microchip PIC32 series SPI</label>
				<help>SPI driver for Microchip PIC32 SPI master controller.</help>
			</entry>
			<entry name="SPI_PIC32_SQI">
				<label>Microchip PIC32 Quad SPI driver</label>
				<help>SPI driver for PIC32 Quad SPI controller.</help>
			</entry>
			<entry name="SPI_PL022">
				<label>ARM AMBA PL022 SSP controller</label>
				<help>This selects the ARM(R) AMBA(R) PrimeCell PL022 SSP
controller. If you have an embedded system with an AMBA(R)
bus and a PL022 controller, say Y or M here.</help>
			</entry>
			<entry name="SPI_PPC4xx">
				<label>PPC4xx SPI Controller</label>
				<help>This selects a driver for the PPC4xx SPI Controller.</help>
			</entry>
			<entry name="SPI_PXA2XX">
				<label>PXA2xx SSP SPI master</label>
				<help>This enables using a PXA2xx or Sodaville SSP port as a SPI master
controller. The driver can be configured to use any SSP port and
additional documentation can be found a Documentation/spi/pxa2xx.</help>
			</entry>
			<entry name="SPI_PXA2XX_PCI"/>
			<entry name="SPI_ROCKCHIP">
				<label>Rockchip SPI controller driver</label>
				<help>This selects a driver for Rockchip SPI controller.

If you say yes to this option, support will be included for
RK3066, RK3188 and RK3288 families of SPI controller.
Rockchip SPI controller support DMA transport and PIO mode.
The main usecase of this controller is to use spi flash as boot
device.</help>
			</entry>
			<entry name="SPI_RB4XX">
				<label>Mikrotik RB4XX SPI master</label>
				<help>SPI controller driver for the Mikrotik RB4xx series boards.</help>
			</entry>
			<entry name="SPI_RSPI">
				<label>Renesas RSPI/QSPI controller</label>
				<help>SPI driver for Renesas RSPI and QSPI blocks.</help>
			</entry>
			<entry name="SPI_QUP">
				<label>Qualcomm SPI controller with QUP interface</label>
				<help>Qualcomm Universal Peripheral (QUP) core is an AHB slave that
provides a common data path (an output FIFO and an input FIFO)
for serial peripheral interface (SPI) mini-core. SPI in master
mode supports up to 50MHz, up to four chip selects, programmable
data path from 4 bits to 32 bits and numerous protocol variants.

This driver can also be built as a module.  If so, the module
will be called spi_qup.</help>
			</entry>
			<entry name="SPI_S3C24XX">
				<label>Samsung S3C24XX series SPI</label>
				<help>SPI driver for Samsung S3C24XX series ARM SoCs</help>
			</entry>
			<entry name="SPI_S3C24XX_FIQ">
				<label>S3C24XX driver with FIQ pseudo-DMA</label>
				<help>Enable FIQ support for the S3C24XX SPI driver to provide pseudo
DMA by using the fast-interrupt request framework, This allows
the driver to get DMA-like performance when there are either
no free DMA channels, or when doing transfers that required both
TX and RX data paths.</help>
			</entry>
			<entry name="SPI_S3C64XX">
				<label>Samsung S3C64XX series type SPI</label>
				<help>SPI driver for Samsung S3C64XX and newer SoCs.</help>
			</entry>
			<entry name="SPI_SC18IS602">
				<label>NXP SC18IS602/602B/603 I2C to SPI bridge</label>
				<help>SPI driver for NXP SC18IS602/602B/603 I2C to SPI bridge.</help>
			</entry>
			<entry name="SPI_SH_MSIOF">
				<label>SuperH MSIOF SPI controller</label>
				<help>SPI driver for SuperH and SH Mobile MSIOF blocks.</help>
			</entry>
			<entry name="SPI_SH">
				<label>SuperH SPI controller</label>
				<help>SPI driver for SuperH SPI blocks.</help>
			</entry>
			<entry name="SPI_SH_SCI">
				<label>SuperH SCI SPI controller</label>
				<help>SPI driver for SuperH SCI blocks.</help>
			</entry>
			<entry name="SPI_SH_HSPI">
				<label>SuperH HSPI controller</label>
				<help>SPI driver for SuperH HSPI blocks.</help>
			</entry>
			<entry name="SPI_SIRF">
				<label>CSR SiRFprimaII SPI controller</label>
				<help>SPI driver for CSR SiRFprimaII SoCs</help>
			</entry>
			<entry name="SPI_ST_SSC4">
				<label>STMicroelectronics SPI SSC-based driver</label>
				<help>STMicroelectronics SoCs support for SPI. If you say yes to
this option, support will be included for the SSC driven SPI.</help>
			</entry>
			<entry name="SPI_SUN4I">
				<label>Allwinner A10 SoCs SPI controller</label>
				<help>SPI driver for Allwinner sun4i, sun5i and sun7i SoCs</help>
			</entry>
			<entry name="SPI_SUN6I">
				<label>Allwinner A31 SPI controller</label>
				<help>This enables using the SPI controller on the Allwinner A31 SoCs.</help>
			</entry>
			<entry name="SPI_MXS">
				<label>Freescale MXS SPI controller</label>
				<help>SPI driver for Freescale MXS devices.</help>
			</entry>
			<entry name="SPI_TEGRA114">
				<label>NVIDIA Tegra114 SPI Controller</label>
				<help>SPI driver for NVIDIA Tegra114 SPI Controller interface. This controller
is different than the older SoCs SPI controller and also register interface
get changed with this controller.</help>
			</entry>
			<entry name="SPI_TEGRA20_SFLASH">
				<label>Nvidia Tegra20 Serial flash Controller</label>
				<help>SPI driver for Nvidia Tegra20 Serial flash Controller interface.
The main usecase of this controller is to use spi flash as boot
device.</help>
			</entry>
			<entry name="SPI_TEGRA20_SLINK">
				<label>Nvidia Tegra20/Tegra30 SLINK Controller</label>
				<help>SPI driver for Nvidia Tegra20/Tegra30 SLINK Controller interface.</help>
			</entry>
			<entry name="SPI_TOPCLIFF_PCH">
				<label>Intel EG20T PCH/LAPIS Semicon IOH(ML7213/ML7223/ML7831) SPI</label>
				<help>SPI driver for the Topcliff PCH (Platform Controller Hub) SPI bus
used in some x86 embedded processors.

This driver also supports the ML7213/ML7223/ML7831, a companion chip
for the Atom E6xx series and compatible with the Intel EG20T PCH.</help>
			</entry>
			<entry name="SPI_TXX9">
				<label>Toshiba TXx9 SPI controller</label>
				<help>SPI driver for Toshiba TXx9 MIPS SoCs</help>
			</entry>
			<entry name="SPI_XCOMM">
				<label>Analog Devices AD-FMCOMMS1-EBZ SPI-I2C-bridge driver</label>
				<help>Support for the SPI-I2C bridge found on the Analog Devices
AD-FMCOMMS1-EBZ board.</help>
			</entry>
			<entry name="SPI_XILINX">
				<label>Xilinx SPI controller common module</label>
				<help>This exposes the SPI controller IP from the Xilinx EDK.

See the &quot;OPB Serial Peripheral Interface (SPI) (v1.00e)&quot;
Product Specification document (DS464) for hardware details.

Or for the DS570, see &quot;XPS Serial Peripheral Interface (SPI) (v2.00b)&quot;</help>
			</entry>
			<entry name="SPI_XLP">
				<label>Netlogic XLP SPI controller driver</label>
				<help>Enable support for the SPI controller on the Netlogic XLP SoCs.
Currently supported XLP variants are XLP8XX, XLP3XX, XLP2XX, XLP9XX
and XLP5XX.

If you have a Netlogic XLP platform say Y here.
If unsure, say N.</help>
			</entry>
			<entry name="SPI_XTENSA_XTFPGA">
				<label>Xtensa SPI controller for xtfpga</label>
				<help>SPI driver for xtfpga SPI master controller.

This simple SPI master controller is built into xtfpga bitstreams
and is used to control daughterboard audio codec. It always transfers
16 bit words in SPI mode 0, automatically asserting CS on transfer
start and deasserting on end.</help>
			</entry>
			<entry name="SPI_ZYNQMP_GQSPI">
				<label>Xilinx ZynqMP GQSPI controller</label>
				<help>Enables Xilinx GQSPI controller driver for Zynq UltraScale+ MPSoC.</help>
			</entry>
			<entry name="SPI_SPIDEV">
				<label>User mode SPI device driver support</label>
				<help>This supports user mode SPI protocol drivers.

Note that this application programming interface is EXPERIMENTAL
and hence SUBJECT TO CHANGE WITHOUT NOTICE while it stabilizes.</help>
			</entry>
			<entry name="SPI_LOOPBACK_TEST">
				<label>spi loopback test framework support</label>
				<help>This enables the SPI loopback testing framework driver

primarily used for development of spi_master drivers
and to detect regressions</help>
			</entry>
			<entry name="SPI_TLE62X0">
				<label>Infineon TLE62X0 (for power switching)</label>
				<help>SPI driver for Infineon TLE62X0 series line driver chips,
such as the TLE6220, TLE6230 and TLE6240.  This provides a
sysfs interface, with each line presented as a kind of GPIO
exposing both switch control and diagnostic feedback.</help>
			</entry>
			<entry name="SPMI">
				<label>SPMI support</label>
				<help>SPMI (System Power Management Interface) is a two-wire
serial interface between baseband and application processors
and Power Management Integrated Circuits (PMIC).</help>
			</entry>
			<entry name="SPMI_MSM_PMIC_ARB">
				<label>Qualcomm MSM SPMI Controller (PMIC Arbiter)</label>
				<help>If you say yes to this option, support will be included for the
built-in SPMI PMIC Arbiter interface on Qualcomm MSM family
processors.

This is required for communicating with Qualcomm PMICs and
other devices that have the SPMI interface.</help>
			</entry>
			<entry name="HSI">
				<label>HSI support</label>
				<help>The &quot;High speed synchronous Serial Interface&quot; is
synchronous serial interface used mainly to connect
application engines and cellular modems.</help>
			</entry>
			<entry name="HSI_BOARDINFO"/>
			<entry name="OMAP_SSI">
				<label>OMAP SSI hardware driver</label>
				<help>SSI is a legacy version of HSI. It is usually used to connect
an application engine with a cellular modem.
If you say Y here, you will enable the OMAP SSI hardware driver.

If unsure, say N.
</help>
			</entry>
			<entry name="NOKIA_MODEM">
				<label>Nokia Modem</label>
				<help>Say Y here if you want to add support for the modem on Nokia
N900 (Nokia RX-51) hardware.

If unsure, say N.</help>
			</entry>
			<entry name="CMT_SPEECH">
				<label>CMT speech</label>
				<help>If you say Y here, you will enable the CMT speech protocol used
by Nokia modems. If you say M the protocol will be available as
module named cmt_speech.

If unsure, say N.</help>
			</entry>
			<entry name="SSI_PROTOCOL">
				<label>SSI protocol</label>
				<help>If you say Y here, you will enable the SSI protocol aka McSAAB.

If unsure, say N.</help>
			</entry>
			<entry name="HSI_CHAR">
				<label>HSI/SSI character driver</label>
				<help>If you say Y here, you will enable the HSI/SSI character driver.
This driver provides a simple character device interface for
serial communication with the cellular modem over HSI/SSI bus.
</help>
			</entry>
			<container name="PPS_support">
				<label>PPS support</label>
				<entry name="PPS">
					<label>PPS support</label>
					<help>PPS (Pulse Per Second) is a special pulse provided by some GPS
antennae. Userland can use it to get a high-precision time
reference.

Some antennae's PPS signals are connected with the CD (Carrier
Detect) pin of the serial line they use to communicate with the
host. In this case use the SERIAL_LINE client support.

Some antennae's PPS signals are connected with some special host
inputs so you have to enable the corresponding client support.

To compile this driver as a module, choose M here: the module
will be called pps_core.ko.</help>
				</entry>
				<entry name="PPS_DEBUG">
					<label>PPS debugging messages</label>
					<help>Say Y here if you want the PPS support to produce a bunch of debug
messages to the system log.  Select this if you are having a
problem with PPS support and want to see more of what is going on.</help>
				</entry>
				<entry name="NTP_PPS">
					<label>PPS kernel consumer support</label>
					<help>This option adds support for direct in-kernel time
synchronization using an external PPS signal.

It doesn't work on tickless systems at the moment.</help>
				</entry>
				<entry name="PPS_CLIENT_KTIMER">
					<label>Kernel timer client (Testing client, use for debug)</label>
					<help>If you say yes here you get support for a PPS debugging client
which uses a kernel timer to generate the PPS signal.

This driver can also be built as a module.  If so, the module
will be called pps-ktimer.</help>
				</entry>
				<entry name="PPS_CLIENT_LDISC">
					<label>PPS line discipline</label>
					<help>If you say yes here you get support for a PPS source connected
with the CD (Carrier Detect) pin of your serial port.</help>
				</entry>
				<entry name="PPS_CLIENT_PARPORT">
					<label>Parallel port PPS client</label>
					<help>If you say yes here you get support for a PPS source connected
with the interrupt pin of your parallel port.</help>
				</entry>
				<entry name="PPS_CLIENT_GPIO">
					<label>PPS client using GPIO</label>
					<help>If you say yes here you get support for a PPS source using
GPIO. To be useful you must also register a platform device
specifying the GPIO pin and other options, usually in your board
setup.</help>
				</entry>
				<entry name="PPS_GENERATOR_PARPORT">
					<label>Parallel port PPS signal generator</label>
					<help>If you say yes here you get support for a PPS signal generator which
utilizes STROBE pin of a parallel port to send PPS signals. It uses
parport abstraction layer and hrtimers to precisely control the signal.
</help>
				</entry>
			</container>
			<container name="PTP_clock_support">
				<label>PTP clock support</label>
				<entry name="PTP_1588_CLOCK">
					<label>PTP clock support</label>
					<help>The IEEE 1588 standard defines a method to precisely
synchronize distributed clocks over Ethernet networks. The
standard defines a Precision Time Protocol (PTP), which can
be used to achieve synchronization within a few dozen
microseconds. In addition, with the help of special hardware
time stamping units, it can be possible to achieve
synchronization to within a few hundred nanoseconds.

This driver adds support for PTP clocks as character
devices. If you want to use a PTP clock, then you should
also enable at least one clock driver as well.

To compile this driver as a module, choose M here: the module
will be called ptp.</help>
				</entry>
				<entry name="PTP_1588_CLOCK_GIANFAR">
					<label>Freescale eTSEC as PTP clock</label>
					<help>This driver adds support for using the eTSEC as a PTP
clock. This clock is only useful if your PTP programs are
getting hardware time stamps on the PTP Ethernet packets
using the SO_TIMESTAMPING API.

To compile this driver as a module, choose M here: the module
will be called gianfar_ptp.</help>
				</entry>
				<entry name="PTP_1588_CLOCK_IXP46X">
					<label>Intel IXP46x as PTP clock</label>
					<help>This driver adds support for using the IXP46X as a PTP
clock. This clock is only useful if your PTP programs are
getting hardware time stamps on the PTP Ethernet packets
using the SO_TIMESTAMPING API.

To compile this driver as a module, choose M here: the module
will be called ptp_ixp46x.</help>
				</entry>
				<entry name="DP83640_PHY">
					<label>Driver for the National Semiconductor DP83640 PHYTER</label>
					<help>Supports the DP83640 PHYTER with IEEE 1588 features.

This driver adds support for using the DP83640 as a PTP
clock. This clock is only useful if your PTP programs are
getting hardware time stamps on the PTP Ethernet packets
using the SO_TIMESTAMPING API.

In order for this to work, your MAC driver must also
implement the skb_tx_timestamp() function.</help>
				</entry>
				<entry name="PTP_1588_CLOCK_PCH">
					<label>Intel PCH EG20T as PTP clock</label>
					<help>This driver adds support for using the PCH EG20T as a PTP
clock. The hardware supports time stamping of PTP packets
when using the end-to-end delay (E2E) mechansim. The peer
delay mechansim (P2P) is not supported.

This clock is only useful if your PTP programs are getting
hardware time stamps on the PTP Ethernet packets using the
SO_TIMESTAMPING API.

To compile this driver as a module, choose M here: the module
will be called ptp_pch.</help>
				</entry>
			</container>
			<entry name="PINCTRL"/>
			<container name="Pin_controllers">
				<label>Pin controllers</label>
				<entry name="PINMUX">
					<label>Support pin multiplexing controllers&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="PINCONF">
					<label>Support pin configuration controllers&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="GENERIC_PINCONF"/>
				<entry name="DEBUG_PINCTRL">
					<label>Debug PINCTRL calls</label>
					<help>Say Y here to add some extra checks and diagnostics to PINCTRL calls.</help>
				</entry>
				<entry name="PINCTRL_ADI2">
					<label>ADI pin controller driver</label>
					<help>This is the pin controller and gpio driver for ADI BF54x, BF60x and
future processors. This option is selected automatically when specific
machine and arch are selected to build.</help>
				</entry>
				<entry name="PINCTRL_AS3722">
					<label>Pinctrl and GPIO driver for ams AS3722 PMIC</label>
					<help>AS3722 device supports the configuration of GPIO pins for different
functionality. This driver supports the pinmux, push-pull and
open drain configuration for the GPIO pins of AS3722 devices. It also
supports the GPIO functionality through gpiolib.</help>
				</entry>
				<entry name="PINCTRL_BF54x"/>
				<entry name="PINCTRL_BF60x"/>
				<entry name="PINCTRL_AT91">
					<label>AT91 pinctrl driver</label>
					<help>Say Y here to enable the at91 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_AT91PIO4">
					<label>AT91 PIO4 pinctrl driver</label>
					<help>Say Y here to enable the at91 pinctrl/gpio driver for Atmel PIO4
controller available on sama5d2 SoC.</help>
				</entry>
				<entry name="PINCTRL_AMD">
					<label>AMD GPIO pin control</label>
					<help>driver for memory mapped GPIO functionality on AMD platforms
(x86 or arm).Most pins are usually muxed to some other
functionality by firmware,so only a small amount is available
for gpio use.

Requires ACPI/FDT device enumeration code to set up a platform
device.</help>
				</entry>
				<entry name="PINCTRL_DIGICOLOR"/>
				<entry name="PINCTRL_LANTIQ"/>
				<entry name="PINCTRL_LPC18XX">
					<label>NXP LPC18XX/43XX SCU pinctrl driver</label>
					<help>Pinctrl driver for NXP LPC18xx/43xx System Control Unit (SCU).</help>
				</entry>
				<entry name="PINCTRL_FALCON"/>
				<entry name="PINCTRL_MESON"/>
				<entry name="PINCTRL_OXNAS"/>
				<entry name="PINCTRL_ROCKCHIP"/>
				<entry name="PINCTRL_SINGLE">
					<label>One-register-per-pin type device tree based pinctrl driver</label>
					<help>This selects the device tree based generic pinctrl driver.</help>
				</entry>
				<entry name="PINCTRL_SIRF">
					<label>CSR SiRFprimaII pin controller driver</label>
				</entry>
				<entry name="PINCTRL_PISTACHIO"/>
				<entry name="PINCTRL_ST"/>
				<entry name="PINCTRL_TZ1090">
					<label>Toumaz Xenif TZ1090 pin control driver</label>
				</entry>
				<entry name="PINCTRL_TZ1090_PDC">
					<label>Toumaz Xenif TZ1090 PDC pin control driver</label>
				</entry>
				<entry name="PINCTRL_U300">
					<label>U300 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_COH901">
					<label>ST-Ericsson U300 COH 901 335/571 GPIO</label>
					<help>Say yes here to support GPIO interface on ST-Ericsson U300.
The names of the two IP block variants supported are
COH 901 335 and COH 901 571/3. They contain 3, 5 or 7
ports of 8 GPIO pins each.</help>
				</entry>
				<entry name="PINCTRL_MAX77620">
					<label>MAX77620/MAX20024 Pincontrol support</label>
					<help>Say Yes here to enable Pin control support for Maxim PMIC MAX77620.
This PMIC has 8 GPIO pins that work as GPIO as well as special
function in alternate mode. This driver also configure push-pull,
open drain, FPS slots etc.</help>
				</entry>
				<entry name="PINCTRL_PALMAS">
					<label>Pinctrl driver for the PALMAS Series MFD devices</label>
					<help>Palmas device supports the configuration of pins for different
functionality. This driver supports the pinmux, push-pull and
open drain configuration for the Palmas series devices like
TPS65913, TPS80036 etc.</help>
				</entry>
				<entry name="PINCTRL_PIC32">
					<label>Microchip PIC32 pin controller driver</label>
					<help>This is the pin controller and gpio driver for Microchip PIC32
microcontrollers. This option is selected automatically when specific
machine and arch are selected to build.</help>
				</entry>
				<entry name="PINCTRL_PIC32MZDA"/>
				<entry name="PINCTRL_ZYNQ">
					<label>Pinctrl driver for Xilinx Zynq</label>
					<help>This selects the pinctrl driver for Xilinx Zynq.</help>
				</entry>
				<entry name="PINCTRL_BCM281XX">
					<label>Broadcom BCM281xx pinctrl driver</label>
					<help>Say Y here to support Broadcom BCM281xx pinctrl driver, which is used
for the BCM281xx SoC family, including BCM11130, BCM11140, BCM11351,
BCM28145, and BCM28155 SoCs.  This driver requires the pinctrl
framework.  GPIO is provided by a separate GPIO driver.</help>
				</entry>
				<entry name="PINCTRL_BCM2835"/>
				<entry name="PINCTRL_IPROC_GPIO">
					<label>Broadcom iProc GPIO (with PINCONF) driver</label>
					<help>Say yes here to enable the Broadcom iProc GPIO driver.

The Broadcom iProc based SoCs- Cygnus, NS2, NSP and Stingray, use
same GPIO Controller IP hence this driver could be used for all.

The Broadcom Cygnus SoC has 3 GPIO controllers including the ASIU
GPIO controller (ASIU), the chipCommonG GPIO controller (CCM), and
the always-ON GPIO controller (CRMU/AON). All 3 GPIO controllers are
supported by this driver.

The Broadcom NSP has two GPIO controllers including the ChipcommonA
GPIO, the ChipcommonB GPIO. Later controller is supported by this
driver.

The Broadcom NS2 has two GPIO controller including the CRMU GPIO,
the ChipcommonG GPIO. Both controllers are supported by this driver.

The Broadcom Stingray GPIO controllers are supported by this driver.

All above SoCs GPIO controllers support basic PINCONF functions such
as bias pull up, pull down, and drive strength configurations, when
these pins are muxed to GPIO.

It provides the framework where pins from the individual GPIO can be
individually muxed to GPIO function, through interaction with the
SoCs IOMUX controller. This features could be used only on SoCs which
support individual pin muxing.</help>
				</entry>
				<entry name="PINCTRL_CYGNUS_MUX">
					<label>Broadcom Cygnus IOMUX driver</label>
					<help>Say yes here to enable the Broadcom Cygnus IOMUX driver.

The Broadcom Cygnus IOMUX driver supports group based IOMUX
configuration, with the exception that certain individual pins
can be overrided to GPIO function</help>
				</entry>
				<entry name="PINCTRL_NSP_GPIO">
					<label>Broadcom NSP GPIO (with PINCONF) driver</label>
					<help>Say yes here to enable the Broadcom NSP GPIO driver.

The Broadcom Northstar Plus SoC ChipcommonA GPIO controller is
supported by this driver.

The ChipcommonA GPIO controller support basic PINCONF functions such
as bias pull up, pull down, and drive strength configurations, when
these pins are muxed to GPIO.</help>
				</entry>
				<entry name="PINCTRL_NS2_MUX">
					<label>Broadcom Northstar2 pinmux driver</label>
					<help>Say yes here to enable the Broadcom NS2 MUX driver.

The Broadcom Northstar2 IOMUX driver supports group based IOMUX
configuration.</help>
				</entry>
				<entry name="PINCTRL_NSP_MUX">
					<label>Broadcom NSP IOMUX driver</label>
					<help>Say yes here to enable the Broadcom NSP SOC IOMUX driver.

The Broadcom Northstar Plus IOMUX driver supports pin based IOMUX
configuration, with certain individual pins can be overridden
to GPIO function.
</help>
				</entry>
				<entry name="PINCTRL_BERLIN"/>
				<entry name="PINCTRL_BERLIN_BG2"/>
				<entry name="PINCTRL_BERLIN_BG2CD"/>
				<entry name="PINCTRL_BERLIN_BG2Q"/>
				<entry name="PINCTRL_BERLIN_BG4CT">
					<label>Marvell berlin4ct pin controller driver</label>
				</entry>
				<entry name="PINCTRL_IMX"/>
				<entry name="PINCTRL_IMX1_CORE"/>
				<entry name="PINCTRL_IMX1">
					<label>IMX1 pinctrl driver</label>
					<help>Say Y here to enable the imx1 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX21">
					<label>i.MX21 pinctrl driver</label>
					<help>Say Y here to enable the i.MX21 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX27">
					<label>IMX27 pinctrl driver</label>
					<help>Say Y here to enable the imx27 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX25">
					<label>IMX25 pinctrl driver</label>
					<help>Say Y here to enable the imx25 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX35">
					<label>IMX35 pinctrl driver</label>
					<help>Say Y here to enable the imx35 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX50">
					<label>IMX50 pinctrl driver</label>
					<help>Say Y here to enable the imx50 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX51">
					<label>IMX51 pinctrl driver</label>
					<help>Say Y here to enable the imx51 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX53">
					<label>IMX53 pinctrl driver</label>
					<help>Say Y here to enable the imx53 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX6Q">
					<label>IMX6Q/DL pinctrl driver</label>
					<help>Say Y here to enable the imx6q/dl pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX6SL">
					<label>IMX6SL pinctrl driver</label>
					<help>Say Y here to enable the imx6sl pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX6SX">
					<label>IMX6SX pinctrl driver</label>
					<help>Say Y here to enable the imx6sx pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX6UL">
					<label>IMX6UL pinctrl driver</label>
					<help>Say Y here to enable the imx6ul pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_IMX7D">
					<label>IMX7D pinctrl driver</label>
					<help>Say Y here to enable the imx7d pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_VF610">
					<label>Freescale Vybrid VF610 pinctrl driver</label>
					<help>Say Y here to enable the Freescale Vybrid VF610 pinctrl driver</help>
				</entry>
				<entry name="PINCTRL_MXS"/>
				<entry name="PINCTRL_IMX23"/>
				<entry name="PINCTRL_IMX28"/>
				<entry name="PINCTRL_BAYTRAIL">
					<label>Intel Baytrail GPIO pin control</label>
					<help>driver for memory mapped GPIO functionality on Intel Baytrail
platforms. Supports 3 banks with 102, 28 and 44 gpios.
Most pins are usually muxed to some other functionality by firmware,
so only a small amount is available for gpio use.

Requires ACPI device enumeration code to set up a platform device.</help>
				</entry>
				<entry name="PINCTRL_CHERRYVIEW">
					<label>Intel Cherryview/Braswell pinctrl and GPIO driver</label>
					<help>Cherryview/Braswell pinctrl driver provides an interface that
allows configuring of SoC pins and using them as GPIOs.</help>
				</entry>
				<entry name="PINCTRL_MERRIFIELD">
					<label>Intel Merrifield pinctrl driver</label>
					<help>Merrifield Family-Level Interface Shim (FLIS) driver provides an
interface that allows configuring of SoC pins and using them as
GPIOs.</help>
				</entry>
				<entry name="PINCTRL_INTEL"/>
				<entry name="PINCTRL_BROXTON">
					<label>Intel Broxton pinctrl and GPIO driver</label>
					<help>Broxton pinctrl driver provides an interface that allows
configuring of SoC pins and using them as GPIOs.</help>
				</entry>
				<entry name="PINCTRL_SUNRISEPOINT">
					<label>Intel Sunrisepoint pinctrl and GPIO driver</label>
					<help>Sunrisepoint is the PCH of Intel Skylake. This pinctrl driver
provides an interface that allows configuring of PCH pins and
using them as GPIOs.
</help>
				</entry>
				<entry name="PINCTRL_MVEBU"/>
				<entry name="PINCTRL_DOVE"/>
				<entry name="PINCTRL_KIRKWOOD"/>
				<entry name="PINCTRL_ARMADA_370"/>
				<entry name="PINCTRL_ARMADA_375"/>
				<entry name="PINCTRL_ARMADA_38X"/>
				<entry name="PINCTRL_ARMADA_39X"/>
				<entry name="PINCTRL_ARMADA_XP"/>
				<entry name="PINCTRL_ORION"/>
				<entry name="PINCTRL_ABX500">
					<label>ST-Ericsson ABx500 family Mixed Signal Circuit gpio functions</label>
					<help>Select this to enable the ABx500 family IC GPIO driver</help>
				</entry>
				<entry name="PINCTRL_AB8500">
					<label>AB8500 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_AB8540">
					<label>AB8540 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_AB9540">
					<label>AB9540 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_AB8505">
					<label>AB8505 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_NOMADIK">
					<label>Nomadik pin controller driver</label>
				</entry>
				<entry name="PINCTRL_STN8815">
					<label>STN8815 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_DB8500">
					<label>DB8500 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_DB8540">
					<label>DB8540 pin controller driver</label>
				</entry>
				<entry name="PINCTRL_PXA"/>
				<entry name="PINCTRL_PXA25X">
					<label>Marvell PXA25x pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf driver for the Marvell
PXA2xx block found in the pxa25x platforms.</help>
				</entry>
				<entry name="PINCTRL_PXA27X">
					<label>Marvell PXA27x pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf driver for the Marvell
PXA2xx block found in the pxa27x platforms.</help>
				</entry>
				<entry name="PINCTRL_MSM"/>
				<entry name="PINCTRL_APQ8064">
					<label>Qualcomm APQ8064 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm APQ8064 platform.</help>
				</entry>
				<entry name="PINCTRL_APQ8084">
					<label>Qualcomm APQ8084 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm APQ8084 platform.</help>
				</entry>
				<entry name="PINCTRL_IPQ4019">
					<label>Qualcomm IPQ4019 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm IPQ4019 platform.</help>
				</entry>
				<entry name="PINCTRL_IPQ8064">
					<label>Qualcomm IPQ8064 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm IPQ8064 platform.</help>
				</entry>
				<entry name="PINCTRL_MSM8660">
					<label>Qualcomm 8660 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm 8660 platform.</help>
				</entry>
				<entry name="PINCTRL_MSM8960">
					<label>Qualcomm 8960 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm 8960 platform.</help>
				</entry>
				<entry name="PINCTRL_MDM9615">
					<label>Qualcomm 9615 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm 9615 platform.</help>
				</entry>
				<entry name="PINCTRL_MSM8X74">
					<label>Qualcomm 8x74 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm 8974 platform.</help>
				</entry>
				<entry name="PINCTRL_MSM8916">
					<label>Qualcomm 8916 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found on the Qualcomm 8916 platform.</help>
				</entry>
				<entry name="PINCTRL_MSM8996">
					<label>Qualcomm MSM8996 pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm TLMM block found in the Qualcomm MSM8996 platform.</help>
				</entry>
				<entry name="PINCTRL_QDF2XXX">
					<label>Qualcomm Technologies QDF2xxx pin controller driver</label>
					<help>This is the GPIO driver for the TLMM block found on the
Qualcomm Technologies QDF2xxx SOCs.</help>
				</entry>
				<entry name="PINCTRL_QCOM_SPMI_PMIC">
					<label>Qualcomm SPMI PMIC pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm GPIO and MPP blocks found in the Qualcomm PMIC's chips,
which are using SPMI for communication with SoC. Example PMIC's
devices are pm8841, pm8941 and pma8084.</help>
				</entry>
				<entry name="PINCTRL_QCOM_SSBI_PMIC">
					<label>Qualcomm SSBI PMIC pin controller driver</label>
					<help>This is the pinctrl, pinmux, pinconf and gpiolib driver for the
Qualcomm GPIO and MPP blocks found in the Qualcomm PMIC's chips,
which are using SSBI for communication with SoC. Example PMIC's
devices are pm8058 and pm8921.</help>
				</entry>
				<entry name="PINCTRL_SAMSUNG"/>
				<entry name="PINCTRL_EXYNOS">
					<label>Pinctrl driver data for Samsung EXYNOS SoCs other than 5440</label>
				</entry>
				<entry name="PINCTRL_EXYNOS5440">
					<label>Samsung EXYNOS5440 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_S3C24XX">
					<label>Samsung S3C24XX SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_S3C64XX">
					<label>Samsung S3C64XX SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_SH_PFC">
					<help>This enables pin control drivers for SH and SH Mobile platforms</help>
				</entry>
				<entry name="PINCTRL_SH_PFC_GPIO">
					<help>This enables pin control and GPIO drivers for SH/SH Mobile platforms</help>
				</entry>
				<entry name="PINCTRL_PFC_EMEV2"/>
				<entry name="PINCTRL_PFC_R8A73A4"/>
				<entry name="PINCTRL_PFC_R8A7740"/>
				<entry name="PINCTRL_PFC_R8A7778"/>
				<entry name="PINCTRL_PFC_R8A7779"/>
				<entry name="PINCTRL_PFC_R8A7790"/>
				<entry name="PINCTRL_PFC_R8A7791"/>
				<entry name="PINCTRL_PFC_R8A7793"/>
				<entry name="PINCTRL_PFC_R8A7794"/>
				<entry name="PINCTRL_PFC_R8A7795"/>
				<entry name="PINCTRL_PFC_SH7203"/>
				<entry name="PINCTRL_PFC_SH7264"/>
				<entry name="PINCTRL_PFC_SH7269"/>
				<entry name="PINCTRL_PFC_SH73A0"/>
				<entry name="PINCTRL_PFC_SH7720"/>
				<entry name="PINCTRL_PFC_SH7722"/>
				<entry name="PINCTRL_PFC_SH7723"/>
				<entry name="PINCTRL_PFC_SH7724"/>
				<entry name="PINCTRL_PFC_SH7734"/>
				<entry name="PINCTRL_PFC_SH7757"/>
				<entry name="PINCTRL_PFC_SH7785"/>
				<entry name="PINCTRL_PFC_SH7786"/>
				<entry name="PINCTRL_PFC_SHX3"/>
				<entry name="PINCTRL_SPEAR">
					<help>This enables pin control drivers for SPEAr Platform</help>
				</entry>
				<entry name="PINCTRL_SPEAR3XX"/>
				<entry name="PINCTRL_SPEAR300">
					<label>ST Microelectronics SPEAr300 SoC pin controller driver</label>
				</entry>
				<entry name="PINCTRL_SPEAR310">
					<label>ST Microelectronics SPEAr310 SoC pin controller driver</label>
				</entry>
				<entry name="PINCTRL_SPEAR320">
					<label>ST Microelectronics SPEAr320 SoC pin controller driver</label>
				</entry>
				<entry name="PINCTRL_SPEAR1310">
					<label>ST Microelectronics SPEAr1310 SoC pin controller driver</label>
				</entry>
				<entry name="PINCTRL_SPEAR1340">
					<label>ST Microelectronics SPEAr1340 SoC pin controller driver</label>
				</entry>
				<entry name="PINCTRL_SPEAR_PLGPIO">
					<label>SPEAr SoC PLGPIO Controller</label>
					<help>Say yes here to support PLGPIO controller on ST Microelectronics SPEAr
SoCs.</help>
				</entry>
				<entry name="PINCTRL_STM32"/>
				<entry name="PINCTRL_STM32F429">
					<label>STMicroelectronics STM32F429 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_STM32F429</label>
				</entry>
				<entry name="PINCTRL_STM32F746">
					<label>STMicroelectronics STM32F746 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_STM32F746</label>
				</entry>
				<entry name="PINCTRL_SUNXI"/>
				<entry name="PINCTRL_SUN4I_A10"/>
				<entry name="PINCTRL_SUN5I_A10S"/>
				<entry name="PINCTRL_SUN5I_A13"/>
				<entry name="PINCTRL_SUN6I_A31"/>
				<entry name="PINCTRL_SUN6I_A31S"/>
				<entry name="PINCTRL_SUN6I_A31_R"/>
				<entry name="PINCTRL_SUN7I_A20"/>
				<entry name="PINCTRL_SUN8I_A23"/>
				<entry name="PINCTRL_SUN8I_A33"/>
				<entry name="PINCTRL_SUN8I_A83T"/>
				<entry name="PINCTRL_SUN8I_A23_R"/>
				<entry name="PINCTRL_SUN8I_H3"/>
				<entry name="PINCTRL_SUN8I_H3_R"/>
				<entry name="PINCTRL_SUN9I_A80"/>
				<entry name="PINCTRL_SUN9I_A80_R"/>
				<entry name="PINCTRL_SUN50I_A64"/>
				<entry name="PINCTRL_TEGRA"/>
				<entry name="PINCTRL_TEGRA20"/>
				<entry name="PINCTRL_TEGRA30"/>
				<entry name="PINCTRL_TEGRA114"/>
				<entry name="PINCTRL_TEGRA124"/>
				<entry name="PINCTRL_TEGRA210"/>
				<entry name="PINCTRL_TEGRA_XUSB"/>
				<entry name="PINCTRL_UNIPHIER">
					<label>UniPhier SoC pinctrl drivers</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_LD4">
					<label>UniPhier PH1-LD4 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_PRO4">
					<label>UniPhier PH1-Pro4 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_SLD8">
					<label>UniPhier PH1-sLD8 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_PRO5">
					<label>UniPhier PH1-Pro5 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_PXS2">
					<label>UniPhier ProXstream2 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_LD6B">
					<label>UniPhier PH1-LD6b SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_LD11">
					<label>UniPhier PH1-LD11 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_UNIPHIER_LD20">
					<label>UniPhier PH1-LD20 SoC pinctrl driver</label>
				</entry>
				<entry name="PINCTRL_WMT"/>
				<entry name="PINCTRL_VT8500">
					<label>VIA VT8500 pin controller driver</label>
					<help>Say yes here to support the gpio/pin control module on
VIA VT8500 SoCs.</help>
				</entry>
				<entry name="PINCTRL_WM8505">
					<label>Wondermedia WM8505 pin controller driver</label>
					<help>Say yes here to support the gpio/pin control module on
Wondermedia WM8505 SoCs.</help>
				</entry>
				<entry name="PINCTRL_WM8650">
					<label>Wondermedia WM8650 pin controller driver</label>
					<help>Say yes here to support the gpio/pin control module on
Wondermedia WM8650 SoCs.</help>
				</entry>
				<entry name="PINCTRL_WM8750">
					<label>Wondermedia WM8750 pin controller driver</label>
					<help>Say yes here to support the gpio/pin control module on
Wondermedia WM8750 SoCs.</help>
				</entry>
				<entry name="PINCTRL_WM8850">
					<label>Wondermedia WM8850 pin controller driver</label>
					<help>Say yes here to support the gpio/pin control module on
Wondermedia WM8850 SoCs.</help>
				</entry>
				<entry name="PINCTRL_MTK"/>
				<entry name="PINCTRL_MT2701">
					<label>Mediatek MT2701 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_MT2701</label>
				</entry>
				<entry name="PINCTRL_MT7623">
					<label>Mediatek MT7623 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_MT7623</label>
				</entry>
				<entry name="PINCTRL_MT8135">
					<label>Mediatek MT8135 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_MT8135</label>
				</entry>
				<entry name="PINCTRL_MT8127">
					<label>Mediatek MT8127 pin control&quot; if COMPILE_TEST &amp;&amp; !MACH_MT8127</label>
				</entry>
				<entry name="PINCTRL_MT8173">
					<label>Mediatek MT8173 pin control</label>
				</entry>
				<entry name="PINCTRL_MT6397">
					<label>Mediatek MT6397 pin control&quot; if COMPILE_TEST &amp;&amp; !MFD_MT6397</label>
				</entry>
				<entry name="PINCTRL_XWAY"/>
				<entry name="PINCTRL_TB10X"/>
			</container>
			<entry name="ARCH_HAVE_CUSTOM_GPIO_H">
				<help>Selecting this config option from the architecture Kconfig allows
the architecture to provide a custom asm/gpio.h implementation
overriding the default implementations.  New uses of this are
strongly discouraged.</help>
			</entry>
			<entry name="ARCH_WANT_OPTIONAL_GPIOLIB">
				<help>Select this config option from the architecture Kconfig, if
it is possible to use gpiolib on the architecture, but let the
user decide whether to actually build it or not.
Select this instead of ARCH_REQUIRE_GPIOLIB, if your architecture does
not depend on GPIOs being available, but rather let the user
decide whether he needs it or not.</help>
			</entry>
			<entry name="ARCH_REQUIRE_GPIOLIB">
				<help>Platforms select gpiolib if they use this infrastructure
for all their GPIOs, usually starting with ones integrated
into SOC processors.
Selecting this from the architecture code will cause the gpiolib
code to always get built in.</help>
			</entry>
			<entry name="GPIOLIB">
				<label>GPIO Support</label>
				<help>This enables GPIO support through the generic GPIO library.
You only need to enable this, if you also want to enable
one or more of the GPIO drivers below.

If unsure, say N.</help>
			</entry>
			<entry name="GPIO_DEVRES"/>
			<entry name="OF_GPIO"/>
			<entry name="GPIO_ACPI"/>
			<entry name="GPIOLIB_IRQCHIP"/>
			<entry name="DEBUG_GPIO">
				<label>Debug GPIO calls</label>
				<help>Say Y here to add some extra checks and diagnostics to GPIO calls.
These checks help ensure that GPIOs have been properly initialized
before they are used, and that sleeping calls are not made from
non-sleeping contexts.  They can make bitbanged serial protocols
slower.  The diagnostics help catch the type of setup errors
that are most common when setting up new platforms or boards.</help>
			</entry>
			<entry name="GPIO_SYSFS">
				<label>/sys/class/gpio/... (sysfs interface)</label>
				<help>Say Y here to add a sysfs interface for GPIOs.

This is mostly useful to work around omissions in a system's
kernel support.  Those are common in custom and semicustom
hardware assembled using standard kernels with a minimum of
custom patches.  In those cases, userspace code may import
a given GPIO from the kernel, if no kernel driver requested it.

Kernel drivers may also request that a particular GPIO be
exported to userspace; this can be useful when debugging.</help>
			</entry>
			<entry name="GPIO_GENERIC"/>
			<entry name="GPIO_MAX730X"/>
			<container name="Memory_mapped_GPIO_drivers">
				<label>Memory mapped GPIO drivers</label>
				<entry name="GPIO_74XX_MMIO">
					<label>GPIO driver for 74xx-ICs with MMIO access</label>
					<help>Say yes here to support GPIO functionality for 74xx-compatible ICs
with MMIO access. Compatible models include:
1 bit:	741G125 (Input), 741G74 (Output)
2 bits:	742G125 (Input), 7474 (Output)
4 bits:	74125 (Input), 74175 (Output)
6 bits:	74365 (Input), 74174 (Output)
8 bits:	74244 (Input), 74273 (Output)
16 bits:	741624 (Input), 7416374 (Output)</help>
				</entry>
				<entry name="GPIO_ALTERA">
					<label>Altera GPIO</label>
					<help>Say Y or M here to build support for the Altera PIO device.

If driver is built as a module it will be called gpio-altera.</help>
				</entry>
				<entry name="GPIO_AMDPT">
					<label>AMD Promontory GPIO support</label>
					<help>driver for GPIO functionality on Promontory IOHub
Require ACPI ASL code to enumerate as a platform device.</help>
				</entry>
				<entry name="GPIO_ATH79">
					<label>Atheros AR71XX/AR724X/AR913X GPIO support</label>
					<help>Select this option to enable GPIO driver for
Atheros AR71XX/AR724X/AR913X SoC devices.</help>
				</entry>
				<entry name="GPIO_BCM_KONA">
					<label>Broadcom Kona GPIO</label>
					<help>Turn on GPIO support for Broadcom &quot;Kona&quot; chips.</help>
				</entry>
				<entry name="GPIO_BRCMSTB">
					<label>BRCMSTB GPIO support</label>
					<help>Say yes here to enable GPIO support for Broadcom STB (BCM7XXX) SoCs.</help>
				</entry>
				<entry name="GPIO_CLPS711X">
					<label>CLPS711X GPIO support</label>
					<help>Say yes here to support GPIO on CLPS711X SoCs.</help>
				</entry>
				<entry name="GPIO_DAVINCI">
					<label>TI Davinci/Keystone GPIO support</label>
					<help>Say yes here to enable GPIO support for TI Davinci/Keystone SoCs.</help>
				</entry>
				<entry name="GPIO_DWAPB">
					<label>Synopsys DesignWare APB GPIO driver</label>
					<help>Say Y or M here to build support for the Synopsys DesignWare APB
GPIO block.</help>
				</entry>
				<entry name="GPIO_EM">
					<label>Emma Mobile GPIO</label>
					<help>Say yes here to support GPIO on Renesas Emma Mobile SoCs.</help>
				</entry>
				<entry name="GPIO_EP93XX"/>
				<entry name="GPIO_ETRAXFS">
					<label>Axis ETRAX FS General I/O</label>
					<help>Say yes here to support the GPIO controller on Axis ETRAX FS SoCs.</help>
				</entry>
				<entry name="GPIO_GE_FPGA">
					<label>GE FPGA based GPIO</label>
					<help>Support for common GPIO functionality provided on some GE Single Board
Computers.

This driver provides basic support (configure as input or output, read
and write pin state) for GPIO implemented in a number of GE single
board computers.</help>
				</entry>
				<entry name="GPIO_GENERIC_PLATFORM">
					<label>Generic memory-mapped GPIO controller support (MMIO platform device)</label>
					<help>Say yes here to support basic platform_device memory-mapped GPIO controllers.</help>
				</entry>
				<entry name="GPIO_GRGPIO">
					<label>Aeroflex Gaisler GRGPIO support</label>
					<help>Select this to support Aeroflex Gaisler GRGPIO cores from the GRLIB
VHDL IP core library.</help>
				</entry>
				<entry name="GPIO_ICH">
					<label>Intel ICH GPIO</label>
					<help>Say yes here to support the GPIO functionality of a number of Intel
ICH-based chipsets.  Currently supported devices: ICH6, ICH7, ICH8
ICH9, ICH10, Series 5/3400 (eg Ibex Peak), Series 6/C200 (eg
Cougar Point), NM10 (Tiger Point), and 3100 (Whitmore Lake).

If unsure, say N.</help>
				</entry>
				<entry name="GPIO_IOP">
					<label>Intel IOP GPIO</label>
					<help>Say yes here to support the GPIO functionality of a number of Intel
IOP32X or IOP33X.

If unsure, say N.</help>
				</entry>
				<entry name="GPIO_LOONGSON">
					<label>Loongson-2/3 GPIO support</label>
					<help>driver for GPIO functionality on Loongson-2F/3A/3B processors.</help>
				</entry>
				<entry name="GPIO_LPC18XX">
					<label>NXP LPC18XX/43XX GPIO support</label>
					<help>Select this option to enable GPIO driver for
NXP LPC18XX/43XX devices.</help>
				</entry>
				<entry name="GPIO_LYNXPOINT">
					<label>Intel Lynxpoint GPIO support</label>
					<help>driver for GPIO functionality on Intel Lynxpoint PCH chipset
Requires ACPI device enumeration code to set up a platform device.</help>
				</entry>
				<entry name="GPIO_MB86S7X">
					<label>GPIO support for Fujitsu MB86S7x Platforms</label>
					<help>Say yes here to support the GPIO controller in Fujitsu MB86S70 SoCs.</help>
				</entry>
				<entry name="GPIO_MENZ127">
					<label>MEN 16Z127 GPIO support</label>
					<help>Say yes here to support the MEN 16Z127 GPIO Controller</help>
				</entry>
				<entry name="GPIO_MM_LANTIQ">
					<label>Lantiq Memory mapped GPIOs</label>
					<help>This enables support for memory mapped GPIOs on the External Bus Unit
(EBU) found on Lantiq SoCs. The gpios are output only as they are
created by attaching a 16bit latch to the bus.</help>
				</entry>
				<entry name="GPIO_MOXART">
					<label>MOXART GPIO support</label>
					<help>Select this option to enable GPIO driver for
MOXA ART SoC devices.</help>
				</entry>
				<entry name="GPIO_MPC5200"/>
				<entry name="GPIO_MPC8XXX">
					<label>MPC512x/MPC8xxx/QorIQ GPIO support</label>
					<help>Say Y here if you're going to use hardware that connects to the
MPC512x/831x/834x/837x/8572/8610/QorIQ GPIOs.</help>
				</entry>
				<entry name="GPIO_MVEBU"/>
				<entry name="GPIO_MXC"/>
				<entry name="GPIO_MXS"/>
				<entry name="GPIO_OCTEON">
					<label>Cavium OCTEON GPIO</label>
					<help>Say yes here to support the on-chip GPIO lines on the OCTEON
family of SOCs.</help>
				</entry>
				<entry name="GPIO_OMAP">
					<label>TI OMAP GPIO support&quot; if ARCH_OMAP2PLUS || COMPILE_TEST</label>
					<help>Say yes here to enable GPIO support for TI OMAP SoCs.</help>
				</entry>
				<entry name="GPIO_PL061">
					<label>PrimeCell PL061 GPIO support</label>
					<help>Say yes here to support the PrimeCell PL061 GPIO device</help>
				</entry>
				<entry name="GPIO_PXA">
					<label>PXA GPIO support</label>
					<help>Say yes here to support the PXA GPIO device</help>
				</entry>
				<entry name="GPIO_RCAR">
					<label>Renesas R-Car GPIO</label>
					<help>Say yes here to support GPIO on Renesas R-Car SoCs.</help>
				</entry>
				<entry name="GPIO_SPEAR_SPICS">
					<label>ST SPEAr13xx SPI Chip Select as GPIO support</label>
					<help>Say yes here to support ST SPEAr SPI Chip Select as GPIO device</help>
				</entry>
				<entry name="GPIO_STA2X11">
					<label>STA2x11/ConneXt GPIO support</label>
					<help>Say yes here to support the STA2x11/ConneXt GPIO device.
The GPIO module has 128 GPIO pins with alternate functions.</help>
				</entry>
				<entry name="GPIO_STP_XWAY">
					<label>XWAY STP GPIOs</label>
					<help>This enables support for the Serial To Parallel (STP) unit found on
XWAY SoC. The STP allows the SoC to drive a shift registers cascade,
that can be up to 24 bit. This peripheral is aimed at driving leds.
Some of the gpios/leds can be auto updated by the soc with dsl and
phy status.</help>
				</entry>
				<entry name="GPIO_SYSCON">
					<label>GPIO based on SYSCON</label>
					<help>Say yes here to support GPIO functionality though SYSCON driver.</help>
				</entry>
				<entry name="GPIO_TB10X"/>
				<entry name="GPIO_TEGRA">
					<label>NVIDIA Tegra GPIO support</label>
					<help>Say yes here to support GPIO pins on NVIDIA Tegra SoCs.</help>
				</entry>
				<entry name="GPIO_TS4800">
					<label>TS-4800 DIO blocks and compatibles</label>
					<help>This driver support TS-4800 FPGA GPIO controllers.</help>
				</entry>
				<entry name="GPIO_TZ1090">
					<label>Toumaz Xenif TZ1090 GPIO support</label>
					<help>Say yes here to support Toumaz Xenif TZ1090 GPIOs.</help>
				</entry>
				<entry name="GPIO_TZ1090_PDC">
					<label>Toumaz Xenif TZ1090 PDC GPIO support</label>
					<help>Say yes here to support Toumaz Xenif TZ1090 PDC GPIOs.</help>
				</entry>
				<entry name="GPIO_VF610">
					<help>Say yes here to support Vybrid vf610 GPIOs.</help>
				</entry>
				<entry name="GPIO_VR41XX">
					<label>NEC VR4100 series General-purpose I/O Uint support</label>
					<help>Say yes here to support the NEC VR4100 series General-purpose I/O Uint</help>
				</entry>
				<entry name="GPIO_VX855">
					<label>VIA VX855/VX875 GPIO</label>
					<help>Support access to the VX855/VX875 GPIO lines through the gpio library.

This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="GPIO_XGENE">
					<label>APM X-Gene GPIO controller support</label>
					<help>This driver is to support the GPIO block within the APM X-Gene SoC
platform's generic flash controller. The GPIO pins are muxed with
the generic flash controller's address and data pins. Say yes
here to enable the GFC GPIO functionality.</help>
				</entry>
				<entry name="GPIO_XGENE_SB">
					<label>APM X-Gene GPIO standby controller support</label>
					<help>This driver supports the GPIO block within the APM X-Gene
Standby Domain. Say yes here to enable the GPIO functionality.</help>
				</entry>
				<entry name="GPIO_XILINX">
					<label>Xilinx GPIO support</label>
					<help>Say yes here to support the Xilinx FPGA GPIO device</help>
				</entry>
				<entry name="GPIO_XLP">
					<label>Netlogic XLP GPIO support</label>
					<help>This driver provides support for GPIO interface on Netlogic XLP MIPS64
SoCs. Currently supported XLP variants are XLP8XX, XLP3XX, XLP2XX,
XLP9XX and XLP5XX.

If unsure, say N.</help>
				</entry>
				<entry name="GPIO_XTENSA">
					<label>Xtensa GPIO32 support</label>
					<help>Say yes here to support the Xtensa internal GPIO32 IMPWIRE (input)
and EXPSTATE (output) ports</help>
				</entry>
				<entry name="GPIO_ZEVIO">
					<label>LSI ZEVIO SoC memory mapped GPIOs</label>
					<help>Say yes here to support the GPIO controller in LSI ZEVIO SoCs.</help>
				</entry>
				<entry name="GPIO_ZYNQ">
					<label>Xilinx Zynq GPIO support</label>
					<help>Say yes here to support Xilinx Zynq GPIO controller.</help>
				</entry>
				<entry name="GPIO_ZX">
					<label>ZTE ZX GPIO support</label>
					<help>Say yes here to support the GPIO device on ZTE ZX SoCs.</help>
				</entry>
				<entry name="GPIO_LOONGSON1">
					<label>Loongson1 GPIO support</label>
					<help>Say Y or M here to support GPIO on Loongson1 SoCs.</help>
				</entry>
			</container>
			<container name="Port_mapped_I_O_GPIO_drivers">
				<label>Port-mapped I/O GPIO drivers</label>
				<entry name="GPIO_104_DIO_48E">
					<label>ACCES 104-DIO-48E GPIO support</label>
					<help>Enables GPIO support for the ACCES 104-DIO-48E series (104-DIO-48E,
104-DIO-24E). The base port addresses for the devices may be
configured via the base module parameter. The interrupt line numbers
for the devices may be configured via the irq module parameter.</help>
				</entry>
				<entry name="GPIO_104_IDIO_16">
					<label>ACCES 104-IDIO-16 GPIO support</label>
					<help>Enables GPIO support for the ACCES 104-IDIO-16 family (104-IDIO-16,
104-IDIO-16E, 104-IDO-16, 104-IDIO-8, 104-IDIO-8E, 104-IDO-8). The
base port addresses for the devices may be configured via the base
module parameter. The interrupt line numbers for the devices may be
configured via the irq module parameter.</help>
				</entry>
				<entry name="GPIO_104_IDI_48">
					<label>ACCES 104-IDI-48 GPIO support</label>
					<help>Enables GPIO support for the ACCES 104-IDI-48 family (104-IDI-48A,
104-IDI-48AC, 104-IDI-48B, 104-IDI-48BC). The base port addresses for
the devices may be configured via the base module parameter. The
interrupt line numbers for the devices may be configured via the irq
module parameter.</help>
				</entry>
				<entry name="GPIO_F7188X">
					<label>F71869, F71869A, F71882FG, F71889F and F81866 GPIO support</label>
					<help>This option enables support for GPIOs found on Fintek Super-I/O
chips F71869, F71869A, F71882FG, F71889F and F81866.

To compile this driver as a module, choose M here: the module will
be called f7188x-gpio.</help>
				</entry>
				<entry name="GPIO_IT87">
					<label>IT87xx GPIO support</label>
					<help>Say yes here to support GPIO functionality of IT87xx Super I/O chips.

This driver is tested with ITE IT8728 and IT8732 Super I/O chips, and
supports the IT8761E, IT8620E and IT8628E Super I/O chip as well.

To compile this driver as a module, choose M here: the module will
be called gpio_it87</help>
				</entry>
				<entry name="GPIO_SCH">
					<label>Intel SCH/TunnelCreek/Centerton/Quark X1000 GPIO</label>
					<help>Say yes here to support GPIO interface on Intel Poulsbo SCH,
Intel Tunnel Creek processor, Intel Centerton processor or
Intel Quark X1000 SoC.

The Intel SCH contains a total of 14 GPIO pins. Ten GPIOs are
powered by the core power rail and are turned off during sleep
modes (S3 and higher). The remaining four GPIOs are powered by
the Intel SCH suspend power supply. These GPIOs remain
active during S3. The suspend powered GPIOs can be used to wake the
system from the Suspend-to-RAM state.

The Intel Tunnel Creek processor has 5 GPIOs powered by the
core power rail and 9 from suspend power supply.

The Intel Centerton processor has a total of 30 GPIO pins.
Twenty-one are powered by the core power rail and 9 from the
suspend power supply.

The Intel Quark X1000 SoC has 2 GPIOs powered by the core
power well and 6 from the suspend power well.</help>
				</entry>
				<entry name="GPIO_SCH311X">
					<label>SMSC SCH311x SuperI/O GPIO</label>
					<help>Driver to enable the GPIOs found on SMSC SMSC SCH3112, SCH3114 and
SCH3116 &quot;Super I/O&quot; chipsets.

To compile this driver as a module, choose M here: the module will
be called gpio-sch311x.</help>
				</entry>
				<entry name="GPIO_TS5500">
					<label>TS-5500 DIO blocks and compatibles</label>
					<help>This driver supports Digital I/O exposed by pin blocks found on some
Technologic Systems platforms. It includes, but is not limited to, 3
blocks of the TS-5500: DIO1, DIO2 and the LCD port, and the TS-5600
LCD port.</help>
				</entry>
				<entry name="GPIO_WS16C48">
					<label>WinSystems WS16C48 GPIO support</label>
					<help>Enables GPIO support for the WinSystems WS16C48. The base port
addresses for the devices may be configured via the base module
parameter. The interrupt line numbers for the devices may be
configured via the irq module parameter.</help>
				</entry>
			</container>
			<container name="I2C_GPIO_expanders">
				<label>I2C GPIO expanders</label>
				<entry name="GPIO_ADP5588">
					<label>ADP5588 I2C GPIO expander</label>
					<help>This option enables support for 18 GPIOs found
on Analog Devices ADP5588 GPIO Expanders.</help>
				</entry>
				<entry name="GPIO_ADP5588_IRQ">
					<label>Interrupt controller support for ADP5588</label>
					<help>Say yes here to enable the adp5588 to be used as an interrupt
controller. It requires the driver to be built in the kernel.</help>
				</entry>
				<entry name="GPIO_ADNP">
					<label>Avionic Design N-bit GPIO expander</label>
					<help>This option enables support for N GPIOs found on Avionic Design
I2C GPIO expanders. The register space will be extended by powers
of two, so the controller will need to accommodate for that. For
example: if a controller provides 48 pins, 6 registers will be
enough to represent all pins, but the driver will assume a
register layout for 64 pins (8 registers).</help>
				</entry>
				<entry name="GPIO_MAX7300">
					<label>Maxim MAX7300 GPIO expander</label>
					<help>GPIO driver for Maxim MAX7300 I2C-based GPIO expander.</help>
				</entry>
				<entry name="GPIO_MAX732X">
					<label>MAX7319, MAX7320-7327 I2C Port Expanders</label>
					<help>Say yes here to support the MAX7319, MAX7320-7327 series of I2C
Port Expanders. Each IO port on these chips has a fixed role of
Input (designated by 'I'), Push-Pull Output ('O'), or Open-Drain
Input and Output (designed by 'P'). The combinations are listed
below:

8 bits:	max7319 (8I), max7320 (8O), max7321 (8P),
max7322 (4I4O), max7323 (4P4O)

16 bits:	max7324 (8I8O), max7325 (8P8O),
max7326 (4I12O), max7327 (4P12O)

Board setup code must specify the model to use, and the start
number for these GPIOs.</help>
				</entry>
				<entry name="GPIO_MAX732X_IRQ">
					<label>Interrupt controller support for MAX732x</label>
					<help>Say yes here to enable the max732x to be used as an interrupt
controller. It requires the driver to be built in the kernel.</help>
				</entry>
				<entry name="GPIO_MC9S08DZ60">
					<label>MX35 3DS BOARD MC9S08DZ60 GPIO functions</label>
					<help>Select this to enable the MC9S08DZ60 GPIO driver</help>
				</entry>
				<entry name="GPIO_PCA953X">
					<label>PCA95[357]x, PCA9698, TCA64xx, and MAX7310 I/O ports</label>
					<help>Say yes here to provide access to several register-oriented
SMBus I/O expanders, made mostly by NXP or TI.  Compatible
models include:

4 bits:	pca9536, pca9537

8 bits:	max7310, max7315, pca6107, pca9534, pca9538, pca9554,
pca9556, pca9557, pca9574, tca6408, xra1202

16 bits:	max7312, max7313, pca9535, pca9539, pca9555, pca9575,
tca6416

24 bits:	tca6424

40 bits:	pca9505, pca9698</help>
				</entry>
				<entry name="GPIO_PCA953X_IRQ">
					<label>Interrupt controller support for PCA953x</label>
					<help>Say yes here to enable the pca953x to be used as an interrupt
controller. It requires the driver to be built in the kernel.</help>
				</entry>
				<entry name="GPIO_PCF857X">
					<label>PCF857x, PCA{85,96}7x, and MAX732[89] I2C GPIO expanders</label>
					<help>Say yes here to provide access to most &quot;quasi-bidirectional&quot; I2C
GPIO expanders used for additional digital outputs or inputs.
Most of these parts are from NXP, though TI is a second source for
some of them.  Compatible models include:

8 bits:   pcf8574, pcf8574a, pca8574, pca8574a,
pca9670, pca9672, pca9674, pca9674a,
max7328, max7329

16 bits:  pcf8575, pcf8575c, pca8575,
pca9671, pca9673, pca9675

Your board setup code will need to declare the expanders in
use, and assign numbers to the GPIOs they expose.  Those GPIOs
can then be used from drivers and other kernel code, just like
other GPIOs, but only accessible from task contexts.

This driver provides an in-kernel interface to those GPIOs using
platform-neutral GPIO calls.</help>
				</entry>
				<entry name="GPIO_SX150X">
					<label>Semtech SX150x I2C GPIO expander</label>
					<help>Say yes here to provide support for Semtech SX150-series I2C
GPIO expanders. Compatible models include:

8 bits:  sx1508q
16 bits: sx1509q</help>
				</entry>
				<entry name="GPIO_TPIC2810">
					<label>TPIC2810 8-Bit I2C GPO expander</label>
					<help>Say yes here to enable the GPO driver for the TI TPIC2810 chip.

To compile this driver as a module, choose M here: the module will
be called gpio-tpic2810.</help>
				</entry>
			</container>
			<container name="MFD_GPIO_expanders">
				<label>MFD GPIO expanders</label>
				<entry name="GPIO_ADP5520">
					<label>GPIO Support for ADP5520 PMIC</label>
					<help>This option enables support for on-chip GPIO found
on Analog Devices ADP5520 PMICs.</help>
				</entry>
				<entry name="GPIO_ARIZONA">
					<label>Wolfson Microelectronics Arizona class devices</label>
					<help>Support for GPIOs on Wolfson Arizona class devices.</help>
				</entry>
				<entry name="GPIO_CRYSTAL_COVE">
					<label>GPIO support for Crystal Cove PMIC</label>
					<help>Support for GPIO pins on Crystal Cove PMIC.

Say Yes if you have a Intel SoC based tablet with Crystal Cove PMIC
inside.

This driver can also be built as a module. If so, the module will be
called gpio-crystalcove.</help>
				</entry>
				<entry name="GPIO_CS5535">
					<label>AMD CS5535/CS5536 GPIO support</label>
					<help>The AMD CS5535 and CS5536 southbridges support 28 GPIO pins that
can be used for quite a number of things.  The CS5535/6 is found on
AMD Geode and Lemote Yeeloong devices.

If unsure, say N.</help>
				</entry>
				<entry name="GPIO_DA9052">
					<label>Dialog DA9052 GPIO</label>
					<help>Say yes here to enable the GPIO driver for the DA9052 chip.</help>
				</entry>
				<entry name="GPIO_DA9055">
					<label>Dialog Semiconductor DA9055 GPIO</label>
					<help>Say yes here to enable the GPIO driver for the DA9055 chip.

The Dialog DA9055 PMIC chip has 3 GPIO pins that can be
be controller by this driver.

If driver is built as a module it will be called gpio-da9055.</help>
				</entry>
				<entry name="GPIO_DLN2">
					<label>Diolan DLN2 GPIO support</label>
					<help>Select this option to enable GPIO driver for the Diolan DLN2
board.

This driver can also be built as a module. If so, the module
will be called gpio-dln2.</help>
				</entry>
				<entry name="GPIO_JANZ_TTL">
					<label>Janz VMOD-TTL Digital IO Module</label>
					<help>This enables support for the Janz VMOD-TTL Digital IO module.
This driver provides support for driving the pins in output
mode only. Input mode is not supported.</help>
				</entry>
				<entry name="GPIO_KEMPLD">
					<label>Kontron ETX / COMexpress GPIO</label>
					<help>This enables support for the PLD GPIO interface on some Kontron ETX
and COMexpress (ETXexpress) modules.

This driver can also be built as a module. If so, the module will be
called gpio-kempld.</help>
				</entry>
				<entry name="GPIO_LP3943">
					<label>TI/National Semiconductor LP3943 GPIO expander</label>
					<help>GPIO driver for LP3943 MFD.
LP3943 can be used as a GPIO expander which provides up to 16 GPIOs.
Open drain outputs are required for this usage.</help>
				</entry>
				<entry name="GPIO_MAX77620">
					<label>GPIO support for PMIC MAX77620 and MAX20024</label>
					<help>GPIO driver for MAX77620 and MAX20024 PMIC from Maxim Semiconductor.
MAX77620 PMIC has 8 pins that can be configured as GPIOs. The
driver also provides interrupt support for each of the gpios.
Say yes here to enable the max77620 to be used as gpio controller.</help>
				</entry>
				<entry name="GPIO_MSIC">
					<label>Intel MSIC mixed signal gpio support</label>
					<help>Enable support for GPIO on intel MSIC controllers found in
intel MID devices</help>
				</entry>
				<entry name="GPIO_PALMAS">
					<label>TI PALMAS series PMICs GPIO</label>
					<help>Select this option to enable GPIO driver for the TI PALMAS
series chip family.</help>
				</entry>
				<entry name="GPIO_RC5T583">
					<label>RICOH RC5T583 GPIO</label>
					<help>Select this option to enable GPIO driver for the Ricoh RC5T583
chip family.
This driver provides the support for driving/reading the gpio pins
of RC5T583 device through standard gpio library.</help>
				</entry>
				<entry name="GPIO_STMPE">
					<label>STMPE GPIOs</label>
					<help>This enables support for the GPIOs found on the STMPE I/O
Expanders.</help>
				</entry>
				<entry name="GPIO_TC3589X">
					<label>TC3589X GPIOs</label>
					<help>This enables support for the GPIOs found on the TC3589X
I/O Expander.</help>
				</entry>
				<entry name="GPIO_TIMBERDALE">
					<label>Support for timberdale GPIO IP</label>
					<help>Add support for the GPIO IP in the timberdale FPGA.</help>
				</entry>
				<entry name="GPIO_TPS65086">
					<label>TI TPS65086 GPO</label>
					<help>This driver supports the GPO on TI TPS65086x PMICs.</help>
				</entry>
				<entry name="GPIO_TPS65218">
					<label>TPS65218 GPIO</label>
					<help>Select this option to enable GPIO driver for the TPS65218
chip family.</help>
				</entry>
				<entry name="GPIO_TPS6586X">
					<label>TPS6586X GPIO</label>
					<help>Select this option to enable GPIO driver for the TPS6586X
chip family.</help>
				</entry>
				<entry name="GPIO_TPS65910">
					<label>TPS65910 GPIO</label>
					<help>Select this option to enable GPIO driver for the TPS65910
chip family.</help>
				</entry>
				<entry name="GPIO_TPS65912">
					<label>TI TPS65912 GPIO</label>
					<help>This driver supports TPS65912 gpio chip</help>
				</entry>
				<entry name="GPIO_TWL4030">
					<label>TWL4030, TWL5030, and TPS659x0 GPIOs</label>
					<help>Say yes here to access the GPIO signals of various multi-function
power management chips from Texas Instruments.</help>
				</entry>
				<entry name="GPIO_TWL6040">
					<label>TWL6040 GPO</label>
					<help>Say yes here to access the GPO signals of twl6040
audio chip from Texas Instruments.</help>
				</entry>
				<entry name="GPIO_UCB1400">
					<label>Philips UCB1400 GPIO</label>
					<help>This enables support for the Philips UCB1400 GPIO pins.
The UCB1400 is an AC97 audio codec.</help>
				</entry>
				<entry name="GPIO_WM831X">
					<label>WM831x GPIOs</label>
					<help>Say yes here to access the GPIO signals of WM831x power management
chips from Wolfson Microelectronics.</help>
				</entry>
				<entry name="GPIO_WM8350">
					<label>WM8350 GPIOs</label>
					<help>Say yes here to access the GPIO signals of WM8350 power management
chips from Wolfson Microelectronics.</help>
				</entry>
				<entry name="GPIO_WM8994">
					<label>WM8994 GPIOs</label>
					<help>Say yes here to access the GPIO signals of WM8994 audio hub
CODECs from Wolfson Microelectronics.</help>
				</entry>
			</container>
			<container name="PCI_GPIO_expanders">
				<label>PCI GPIO expanders</label>
				<entry name="GPIO_AMD8111">
					<label>AMD 8111 GPIO driver</label>
					<help>The AMD 8111 south bridge contains 32 GPIO pins which can be used.

Note, that usually system firmware/ACPI handles GPIO pins on their
own and users might easily break their systems with uncarefull usage
of this driver!

If unsure, say N</help>
				</entry>
				<entry name="GPIO_BT8XX">
					<label>BT8XX GPIO abuser</label>
					<help>The BT8xx frame grabber chip has 24 GPIO pins that can be abused
as a cheap PCI GPIO card.

This chip can be found on Miro, Hauppauge and STB TV-cards.

The card needs to be physically altered for using it as a
GPIO card. For more information on how to build a GPIO card
from a BT8xx TV card, see the documentation file at
Documentation/bt8xxgpio.txt

If unsure, say N.</help>
				</entry>
				<entry name="GPIO_INTEL_MID">
					<label>Intel MID GPIO support</label>
					<help>Say Y here to support Intel MID GPIO.</help>
				</entry>
				<entry name="GPIO_MERRIFIELD">
					<label>Intel Merrifield GPIO support</label>
					<help>Say Y here to support Intel Merrifield GPIO.</help>
				</entry>
				<entry name="GPIO_ML_IOH">
					<label>OKI SEMICONDUCTOR ML7213 IOH GPIO support</label>
					<help>ML7213 is companion chip for Intel Atom E6xx series.
This driver can be used for OKI SEMICONDUCTOR ML7213 IOH(Input/Output
Hub) which is for IVI(In-Vehicle Infotainment) use.
This driver can access the IOH's GPIO device.</help>
				</entry>
				<entry name="GPIO_PCH">
					<label>Intel EG20T PCH/LAPIS Semiconductor IOH(ML7223/ML7831) GPIO</label>
					<help>This driver is for PCH(Platform controller Hub) GPIO of Intel Topcliff
which is an IOH(Input/Output Hub) for x86 embedded processor.
This driver can access PCH GPIO device.

This driver also can be used for LAPIS Semiconductor IOH(Input/
Output Hub), ML7223 and ML7831.
ML7223 IOH is for MP(Media Phone) use.
ML7831 IOH is for general purpose use.
ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7223/ML7831 is completely compatible for Intel EG20T PCH.</help>
				</entry>
				<entry name="GPIO_RDC321X">
					<label>RDC R-321x GPIO support</label>
					<help>Support for the RDC R321x SoC GPIOs over southbridge
PCI configuration space.</help>
				</entry>
				<entry name="GPIO_SODAVILLE">
					<label>Intel Sodaville GPIO support</label>
					<help>Say Y here to support Intel Sodaville GPIO.</help>
				</entry>
			</container>
			<container name="SPI_GPIO_expanders">
				<label>SPI GPIO expanders</label>
				<entry name="GPIO_74X164">
					<label>74x164 serial-in/parallel-out 8-bits shift register</label>
					<help>Driver for 74x164 compatible serial-in/parallel-out 8-outputs
shift registers. This driver can be used to provide access
to more gpio outputs.</help>
				</entry>
				<entry name="GPIO_MAX7301">
					<label>Maxim MAX7301 GPIO expander</label>
					<help>GPIO driver for Maxim MAX7301 SPI-based GPIO expander.</help>
				</entry>
				<entry name="GPIO_MC33880">
					<label>Freescale MC33880 high-side/low-side switch</label>
					<help>SPI driver for Freescale MC33880 high-side/low-side switch.
This provides GPIO interface supporting inputs and outputs.</help>
				</entry>
				<entry name="GPIO_PISOSR">
					<label>Generic parallel-in/serial-out shift register</label>
					<help>GPIO driver for SPI compatible parallel-in/serial-out shift
registers. These are input only devices.</help>
				</entry>
			</container>
			<container name="SPI_or_I2C_GPIO_expanders">
				<label>SPI or I2C GPIO expanders</label>
				<entry name="GPIO_MCP23S08">
					<label>Microchip MCP23xxx I/O expander</label>
					<help>SPI/I2C driver for Microchip MCP23S08/MCP23S17/MCP23008/MCP23017
I/O expanders.
This provides a GPIO interface supporting inputs and outputs.
The I2C versions of the chips can be used as interrupt-controller.</help>
				</entry>
			</container>
			<container name="USB_GPIO_expanders">
				<label>USB GPIO expanders</label>
				<entry name="GPIO_VIPERBOARD">
					<label>Viperboard GPIO a &amp; b support</label>
					<help>Say yes here to access the GPIO signals of Nano River
Technologies Viperboard. There are two GPIO chips on the
board: gpioa and gpiob.
See viperboard API specification and Nano
River Tech's viperboard.h for detailed meaning
of the module parameters.</help>
				</entry>
			</container>
			<entry name="W1">
				<label>Dallas's 1-wire support</label>
				<help>Dallas' 1-wire bus is useful to connect slow 1-pin devices
such as iButtons and thermal sensors.

If you want W1 support, you should say Y here.

This W1 support can also be built as a module.  If so, the module
will be called wire.</help>
			</entry>
			<entry name="W1_CON">
				<label>Userspace communication over connector</label>
				<help>This allows to communicate with userspace using connector. For more
information see &lt;file:Documentation/connector/connector.txt&gt;.
There are three types of messages between w1 core and userspace:
1. Events. They are generated each time new master or slave device found
either due to automatic or requested search.
2. Userspace commands. Includes read/write and search/alarm search commands.
3. Replies to userspace commands.</help>
			</entry>
			<container name="_1_wire_Bus_Masters">
				<label>1-wire Bus Masters</label>
				<entry name="W1_MASTER_MATROX">
					<label>Matrox G400 transport layer for 1-wire</label>
					<help>Say Y here if you want to communicate with your 1-wire devices
using Matrox's G400 GPIO pins.

This support is also available as a module.  If so, the module
will be called matrox_w1.</help>
				</entry>
				<entry name="W1_MASTER_DS2490">
					<label>DS2490 USB &lt;-&gt; W1 transport layer for 1-wire</label>
					<help>Say Y here if you want to have a driver for DS2490 based USB &lt;-&gt; W1 bridges,
for example DS9490*.

This support is also available as a module.  If so, the module
will be called ds2490.</help>
				</entry>
				<entry name="W1_MASTER_DS2482">
					<label>Maxim DS2482 I2C to 1-Wire bridge</label>
					<help>If you say yes here you get support for the Maxim DS2482
I2C to 1-Wire bridge.

This driver can also be built as a module.  If so, the module
will be called ds2482.</help>
				</entry>
				<entry name="W1_MASTER_MXC">
					<label>Freescale MXC 1-wire busmaster</label>
					<help>Say Y here to enable MXC 1-wire host</help>
				</entry>
				<entry name="W1_MASTER_DS1WM">
					<label>Maxim DS1WM 1-wire busmaster</label>
					<help>Say Y here to enable the DS1WM 1-wire driver, such as that
in HP iPAQ devices like h5xxx, h2200, and ASIC3-based like
hx4700.</help>
				</entry>
				<entry name="W1_MASTER_GPIO">
					<label>GPIO 1-wire busmaster</label>
					<help>Say Y here if you want to communicate with your 1-wire devices using
GPIO pins. This driver uses the GPIO API to control the wire.

This support is also available as a module.  If so, the module
will be called w1-gpio.</help>
				</entry>
				<entry name="HDQ_MASTER_OMAP">
					<label>OMAP HDQ driver</label>
					<help>Say Y here if you want support for the 1-wire or HDQ Interface
on an OMAP processor.</help>
				</entry>
			</container>
			<container name="_1_wire_Slaves">
				<label>1-wire Slaves</label>
				<entry name="W1_SLAVE_THERM">
					<label>Thermal family implementation</label>
					<help>Say Y here if you want to connect 1-wire thermal sensors to your
wire.</help>
				</entry>
				<entry name="W1_SLAVE_SMEM">
					<label>Simple 64bit memory family implementation</label>
					<help>Say Y here if you want to connect 1-wire
simple 64bit memory rom(ds2401/ds2411/ds1990*) to your wire.</help>
				</entry>
				<entry name="W1_SLAVE_DS2408">
					<label>8-Channel Addressable Switch (IO Expander) 0x29 family support (DS2408)</label>
					<help>Say Y here if you want to use a 1-wire
DS2408 8-Channel Addressable Switch device support</help>
				</entry>
				<entry name="W1_SLAVE_DS2408_READBACK">
					<label>Read-back values written to DS2408's output register</label>
					<help>Enabling this will cause the driver to read back the values written
to the chip's output register in order to detect errors.

This is slower but useful when debugging chips and/or busses.</help>
				</entry>
				<entry name="W1_SLAVE_DS2413">
					<label>Dual Channel Addressable Switch 0x3a family support (DS2413)</label>
					<help>Say Y here if you want to use a 1-wire
DS2413 Dual Channel Addressable Switch device support</help>
				</entry>
				<entry name="W1_SLAVE_DS2406">
					<label>Dual Channel Addressable Switch 0x12 family support (DS2406)</label>
					<help>Say Y or M here if you want to use a 1-wire
DS2406 Dual Channel Addressable Switch.  EPROM read/write
support for these devices is not implemented.</help>
				</entry>
				<entry name="W1_SLAVE_DS2423">
					<label>Counter 1-wire device (DS2423)</label>
					<help>If you enable this you can read the counter values available
in the DS2423 chipset from the w1_slave file under the
sys file system.

Say Y here if you want to use a 1-wire
counter family device (DS2423).</help>
				</entry>
				<entry name="W1_SLAVE_DS2431">
					<label>1kb EEPROM family support (DS2431)</label>
					<help>Say Y here if you want to use a 1-wire
1kb EEPROM family device (DS2431)</help>
				</entry>
				<entry name="W1_SLAVE_DS2433">
					<label>4kb EEPROM family support (DS2433)</label>
					<help>Say Y here if you want to use a 1-wire
4kb EEPROM family device (DS2433).</help>
				</entry>
				<entry name="W1_SLAVE_DS2433_CRC">
					<label>Protect DS2433 data with a CRC16</label>
					<help>Say Y here to protect DS2433 data with a CRC16.
Each block has 30 bytes of data and a two byte CRC16.
Full block writes are only allowed if the CRC is valid.</help>
				</entry>
				<entry name="W1_SLAVE_DS2760">
					<label>Dallas 2760 battery monitor chip (HP iPAQ &amp; others)</label>
					<help>If you enable this you will have the DS2760 battery monitor
chip support.

The battery monitor chip is used in many batteries/devices
as the one who is responsible for charging/discharging/monitoring
Li+ batteries.

If you are unsure, say N.</help>
				</entry>
				<entry name="W1_SLAVE_DS2780">
					<label>Dallas 2780 battery monitor chip</label>
					<help>If you enable this you will have the DS2780 battery monitor
chip support.

The battery monitor chip is used in many batteries/devices
as the one who is responsible for charging/discharging/monitoring
Li+ batteries.

If you are unsure, say N.</help>
				</entry>
				<entry name="W1_SLAVE_DS2781">
					<label>Dallas 2781 battery monitor chip</label>
					<help>If you enable this you will have the DS2781 battery monitor
chip support.

The battery monitor chip is used in many batteries/devices
as the one who is responsible for charging/discharging/monitoring
Li+ batteries.

If you are unsure, say N.</help>
				</entry>
				<entry name="W1_SLAVE_DS28E04">
					<label>4096-Bit Addressable 1-Wire EEPROM with PIO (DS28E04-100)</label>
					<help>If you enable this you will have the DS28E04-100
chip support.

Say Y here if you want to use a 1-wire
4kb EEPROM with PIO family device (DS28E04).

If you are unsure, say N.</help>
				</entry>
				<entry name="W1_SLAVE_BQ27000">
					<label>BQ27000 slave support</label>
					<help>Say Y here if you want to use a hdq
bq27000 slave support.</help>
				</entry>
			</container>
			<entry name="POWER_SUPPLY">
				<label>Power supply class support</label>
				<help>Say Y here to enable power supply class support. This allows
power supply (batteries, AC, USB) monitoring by userspace
via sysfs and uevent (if available) and/or APM kernel interface
(if selected below).</help>
			</entry>
			<entry name="POWER_SUPPLY_DEBUG">
				<label>Power supply debug</label>
				<help>Say Y here to enable debugging messages for power supply class
and drivers.</help>
			</entry>
			<entry name="PDA_POWER">
				<label>Generic PDA/phone power driver</label>
				<help>Say Y here to enable generic power driver for PDAs and phones with
one or two external power supplies (AC/USB) connected to main and
backup batteries, and optional builtin charger.</help>
			</entry>
			<entry name="APM_POWER">
				<label>APM emulation for class batteries</label>
				<help>Say Y here to enable support APM status emulation using
battery class devices.</help>
			</entry>
			<entry name="GENERIC_ADC_BATTERY">
				<label>Generic battery support using IIO</label>
				<help>Say Y here to enable support for the generic battery driver
which uses IIO framework to read adc.</help>
			</entry>
			<entry name="MAX8925_POWER">
				<label>MAX8925 battery charger support</label>
				<help>Say Y here to enable support for the battery charger in the Maxim
MAX8925 PMIC.</help>
			</entry>
			<entry name="WM831X_BACKUP">
				<label>WM831X backup battery charger support</label>
				<help>Say Y here to enable support for the backup battery charger
in the Wolfson Microelectronics WM831x PMICs.</help>
			</entry>
			<entry name="WM831X_POWER">
				<label>WM831X PMU support</label>
				<help>Say Y here to enable support for the power management unit
provided by Wolfson Microelectronics WM831x PMICs.</help>
			</entry>
			<entry name="WM8350_POWER">
				<label>WM8350 PMU support</label>
				<help>Say Y here to enable support for the power management unit
provided by the Wolfson Microelectronics WM8350 PMIC.</help>
			</entry>
			<entry name="TEST_POWER">
				<label>Test power driver</label>
				<help>This driver is used for testing. It's safe to say M here.</help>
			</entry>
			<entry name="BATTERY_88PM860X">
				<label>Marvell 88PM860x battery driver</label>
				<help>Say Y here to enable battery monitor for Marvell 88PM860x chip.</help>
			</entry>
			<entry name="BATTERY_ACT8945A">
				<label>Active-semi ACT8945A charger driver</label>
				<help>Say Y here to enable support for power supply provided by
Active-semi ActivePath ACT8945A charger.</help>
			</entry>
			<entry name="BATTERY_DS2760">
				<label>DS2760 battery driver (HP iPAQ &amp; others)</label>
				<help>Say Y here to enable support for batteries with ds2760 chip.</help>
			</entry>
			<entry name="BATTERY_DS2780">
				<label>DS2780 battery driver</label>
				<help>Say Y here to enable support for batteries with ds2780 chip.</help>
			</entry>
			<entry name="BATTERY_DS2781">
				<label>DS2781 battery driver</label>
				<help>If you enable this you will have the DS2781 battery driver support.

The battery monitor chip is used in many batteries/devices
as the one who is responsible for charging/discharging/monitoring
Li+ batteries.

If you are unsure, say N.</help>
			</entry>
			<entry name="BATTERY_DS2782">
				<label>DS2782/DS2786 standalone gas-gauge</label>
				<help>Say Y here to enable support for the DS2782/DS2786 standalone battery
gas-gauge.</help>
			</entry>
			<entry name="BATTERY_PMU">
				<label>Apple PMU battery</label>
				<help>Say Y here to expose battery information on Apple machines
through the generic battery class.</help>
			</entry>
			<entry name="BATTERY_OLPC">
				<label>One Laptop Per Child battery</label>
				<help>Say Y to enable support for the battery on the OLPC laptop.</help>
			</entry>
			<entry name="BATTERY_TOSA">
				<label>Sharp SL-6000 (tosa) battery</label>
				<help>Say Y to enable support for the battery on the Sharp Zaurus
SL-6000 (tosa) models.</help>
			</entry>
			<entry name="BATTERY_COLLIE">
				<label>Sharp SL-5500 (collie) battery</label>
				<help>Say Y to enable support for the battery on the Sharp Zaurus
SL-5500 (collie) models.</help>
			</entry>
			<entry name="BATTERY_IPAQ_MICRO">
				<label>iPAQ Atmel Micro ASIC battery driver</label>
				<help>Choose this option if you want to monitor battery status on
Compaq/HP iPAQ h3100 and h3600.</help>
			</entry>
			<entry name="BATTERY_WM97XX">
				<label>WM97xx generic battery driver</label>
				<help>Say Y to enable support for battery measured by WM97xx aux port.</help>
			</entry>
			<entry name="BATTERY_SBS">
				<label>SBS Compliant gas gauge</label>
				<help>Say Y to include support for SBS battery driver for SBS-compliant
gas gauges.</help>
			</entry>
			<entry name="BATTERY_BQ27XXX">
				<label>BQ27xxx battery driver</label>
				<help>Say Y here to enable support for batteries with BQ27xxx chips.</help>
			</entry>
			<entry name="BATTERY_BQ27XXX_I2C">
				<label>BQ27xxx I2C support</label>
				<help>Say Y here to enable support for batteries with BQ27xxx chips
connected over an I2C bus.</help>
			</entry>
			<entry name="BATTERY_DA9030">
				<label>DA9030 battery driver</label>
				<help>Say Y here to enable support for batteries charger integrated into
DA9030 PMIC.</help>
			</entry>
			<entry name="BATTERY_DA9052">
				<label>Dialog DA9052 Battery</label>
				<help>Say Y here to enable support for batteries charger integrated into
DA9052 PMIC.</help>
			</entry>
			<entry name="CHARGER_DA9150">
				<label>Dialog Semiconductor DA9150 Charger support</label>
				<help>Say Y here to enable support for charger unit of the DA9150
Integrated Charger &amp; Fuel-Gauge IC.

This driver can also be built as a module. If so, the module will be
called da9150-charger.</help>
			</entry>
			<entry name="BATTERY_DA9150">
				<label>Dialog Semiconductor DA9150 Fuel Gauge support</label>
				<help>Say Y here to enable support for the Fuel-Gauge unit of the DA9150
Integrated Charger &amp; Fuel-Gauge IC

This driver can also be built as a module. If so, the module will be
called da9150-fg.</help>
			</entry>
			<entry name="AXP288_CHARGER">
				<label>X-Powers AXP288 Charger</label>
				<help>Say yes here to have support X-Power AXP288 power management IC (PMIC)
integrated charger.</help>
			</entry>
			<entry name="AXP288_FUEL_GAUGE">
				<label>X-Powers AXP288 Fuel Gauge</label>
				<help>Say yes here to have support for X-Power power management IC (PMIC)
Fuel Gauge. The device provides battery statistics and status
monitoring as well as alerts for battery over/under voltage and
over/under temperature.</help>
			</entry>
			<entry name="BATTERY_MAX17040">
				<label>Maxim MAX17040 Fuel Gauge</label>
				<help>MAX17040 is fuel-gauge systems for lithium-ion (Li+) batteries
in handheld and portable equipment. The MAX17040 is configured
to operate with a single lithium cell</help>
			</entry>
			<entry name="BATTERY_MAX17042">
				<label>Maxim MAX17042/17047/17050/8997/8966 Fuel Gauge</label>
				<help>MAX17042 is fuel-gauge systems for lithium-ion (Li+) batteries
in handheld and portable equipment. The MAX17042 is configured
to operate with a single lithium cell. MAX8997 and MAX8966 are
multi-function devices that include fuel gauages that are compatible
with MAX17042. This driver also supports max17047/50 chips which are
improved version of max17042.</help>
			</entry>
			<entry name="BATTERY_Z2">
				<label>Z2 battery driver</label>
				<help>Say Y to include support for the battery on the Zipit Z2.</help>
			</entry>
			<entry name="BATTERY_S3C_ADC">
				<label>Battery driver for Samsung ADC based monitoring</label>
				<help>Say Y here to enable support for iPAQ h1930/h1940/rx1950 battery</help>
			</entry>
			<entry name="BATTERY_TWL4030_MADC">
				<label>TWL4030 MADC battery driver</label>
				<help>Say Y here to enable this dumb driver for batteries managed
through the TWL4030 MADC.</help>
			</entry>
			<entry name="CHARGER_88PM860X">
				<label>Marvell 88PM860x Charger driver</label>
				<help>Say Y here to enable charger for Marvell 88PM860x chip.</help>
			</entry>
			<entry name="CHARGER_PCF50633">
				<label>NXP PCF50633 MBC</label>
				<help>Say Y to include support for NXP PCF50633 Main Battery Charger.</help>
			</entry>
			<entry name="BATTERY_JZ4740">
				<label>Ingenic JZ4740 battery</label>
				<help>Say Y to enable support for the battery on Ingenic JZ4740 based
boards.

This driver can be build as a module. If so, the module will be
called jz4740-battery.</help>
			</entry>
			<entry name="BATTERY_INTEL_MID">
				<label>Battery driver for Intel MID platforms</label>
				<help>Say Y here to enable the battery driver on Intel MID
platforms.</help>
			</entry>
			<entry name="BATTERY_RX51">
				<label>Nokia RX-51 (N900) battery driver</label>
				<help>Say Y here to enable support for battery information on Nokia
RX-51, also known as N900 tablet.</help>
			</entry>
			<entry name="CHARGER_ISP1704">
				<label>ISP1704 USB Charger Detection</label>
				<help>Say Y to enable support for USB Charger Detection with
ISP1707/ISP1704 USB transceivers.</help>
			</entry>
			<entry name="CHARGER_MAX8903">
				<label>MAX8903 Battery DC-DC Charger for USB and Adapter Power</label>
				<help>Say Y to enable support for the MAX8903 DC-DC charger and sysfs.
The driver supports controlling charger-enable and current-limit
pins based on the status of charger connections with interrupt
handlers.</help>
			</entry>
			<entry name="CHARGER_TWL4030">
				<label>OMAP TWL4030 BCI charger driver</label>
				<help>Say Y here to enable support for TWL4030 Battery Charge Interface.</help>
			</entry>
			<entry name="CHARGER_LP8727">
				<label>TI/National Semiconductor LP8727 charger driver</label>
				<help>Say Y here to enable support for LP8727 Charger Driver.</help>
			</entry>
			<entry name="CHARGER_LP8788">
				<label>TI LP8788 charger driver</label>
				<help>Say Y to enable support for the LP8788 linear charger.</help>
			</entry>
			<entry name="CHARGER_GPIO">
				<label>GPIO charger</label>
				<help>Say Y to include support for chargers which report their online status
through a GPIO pin.

This driver can be build as a module. If so, the module will be
called gpio-charger.</help>
			</entry>
			<entry name="CHARGER_MANAGER">
				<label>Battery charger manager for multiple chargers</label>
				<help>Say Y to enable charger-manager support, which allows multiple
chargers attached to a battery and multiple batteries attached to a
system. The charger-manager also can monitor charging status in
runtime and in suspend-to-RAM by waking up the system periodically
with help of suspend_again support.</help>
			</entry>
			<entry name="CHARGER_MAX14577">
				<label>Maxim MAX14577/77836 battery charger driver</label>
				<help>Say Y to enable support for the battery charger control sysfs and
platform data of MAX14577/77836 MUICs.</help>
			</entry>
			<entry name="CHARGER_MAX77693">
				<label>Maxim MAX77693 battery charger driver</label>
				<help>Say Y to enable support for the Maxim MAX77693 battery charger.</help>
			</entry>
			<entry name="CHARGER_MAX8997">
				<label>Maxim MAX8997/MAX8966 PMIC battery charger driver</label>
				<help>Say Y to enable support for the battery charger control sysfs and
platform data of MAX8997/LP3974 PMICs.</help>
			</entry>
			<entry name="CHARGER_MAX8998">
				<label>Maxim MAX8998/LP3974 PMIC battery charger driver</label>
				<help>Say Y to enable support for the battery charger control sysfs and
platform data of MAX8998/LP3974 PMICs.</help>
			</entry>
			<entry name="CHARGER_QCOM_SMBB">
				<label>Qualcomm Switch-Mode Battery Charger and Boost</label>
				<help>Say Y to include support for the Switch-Mode Battery Charger and
Boost (SMBB) hardware found in Qualcomm PM8941 PMICs.  The charger
is an integrated, single-cell lithium-ion battery charger.  DT
configuration is required for loading, see the devicetree
documentation for more detail.  The base name for this driver is
'pm8941_charger'.</help>
			</entry>
			<entry name="CHARGER_BQ2415X">
				<label>TI BQ2415x battery charger driver</label>
				<help>Say Y to enable support for the TI BQ2415x battery charger
PMICs.

You'll need this driver to charge batteries on e.g. Nokia
RX-51/N900.</help>
			</entry>
			<entry name="CHARGER_BQ24190">
				<label>TI BQ24190 battery charger driver</label>
				<help>Say Y to enable support for the TI BQ24190 battery charger.</help>
			</entry>
			<entry name="CHARGER_BQ24257">
				<label>TI BQ24250/24251/24257 battery charger driver</label>
				<help>Say Y to enable support for the TI BQ24250, BQ24251, and BQ24257 battery
chargers.</help>
			</entry>
			<entry name="CHARGER_BQ24735">
				<label>TI BQ24735 battery charger support</label>
				<help>Say Y to enable support for the TI BQ24735 battery charger.</help>
			</entry>
			<entry name="CHARGER_BQ25890">
				<label>TI BQ25890 battery charger driver</label>
				<help>Say Y to enable support for the TI BQ25890 battery charger.</help>
			</entry>
			<entry name="CHARGER_SMB347">
				<label>Summit Microelectronics SMB347 Battery Charger</label>
				<help>Say Y to include support for Summit Microelectronics SMB347
Battery Charger.</help>
			</entry>
			<entry name="CHARGER_TPS65090">
				<label>TPS65090 battery charger driver</label>
				<help>Say Y here to enable support for battery charging with TPS65090
PMIC chips.</help>
			</entry>
			<entry name="CHARGER_TPS65217">
				<label>TPS65217 battery charger driver</label>
				<help>Say Y here to enable support for battery charging with TPS65217
PMIC chips.</help>
			</entry>
			<entry name="BATTERY_GAUGE_LTC2941">
				<label>LTC2941/LTC2943 Battery Gauge Driver</label>
				<help>Say Y here to include support for LTC2941 and LTC2943 Battery
Gauge IC. The driver reports the charge count continuously, and
measures the voltage and temperature every 10 seconds.</help>
			</entry>
			<entry name="AB8500_BM">
				<label>AB8500 Battery Management Driver</label>
				<help>Say Y to include support for AB8500 battery management.</help>
			</entry>
			<entry name="BATTERY_GOLDFISH">
				<label>Goldfish battery driver</label>
				<help>Say Y to enable support for the battery and AC power in the
Goldfish emulator.</help>
			</entry>
			<entry name="BATTERY_RT5033">
				<label>RT5033 fuel gauge support</label>
				<help>This adds support for battery fuel gauge in Richtek RT5033 PMIC.
The fuelgauge calculates and determines the battery state of charge
according to battery open circuit voltage.</help>
			</entry>
			<entry name="CHARGER_RT9455">
				<label>Richtek RT9455 battery charger driver</label>
				<help>Say Y to enable support for Richtek RT9455 battery charger.</help>
			</entry>
			<entry name="AXP20X_POWER">
				<label>AXP20x power supply driver</label>
				<help>This driver provides support for the power supply features of
AXP20x PMIC.</help>
			</entry>
			<entry name="POWER_RESET">
				<label>Board level reset or power off</label>
				<help>Provides a number of drivers which either reset a complete board
or shut it down, by manipulating the main power supply on the board.

Say Y here to enable board reset and power off</help>
			</entry>
			<entry name="POWER_RESET_AS3722">
				<label>ams AS3722 power-off driver</label>
				<help>This driver supports turning off board via a ams AS3722 power-off.</help>
			</entry>
			<entry name="POWER_RESET_AT91_POWEROFF">
				<label>Atmel AT91 poweroff driver</label>
				<help>This driver supports poweroff for Atmel AT91SAM9 and SAMA5
SoCs</help>
			</entry>
			<entry name="POWER_RESET_AT91_RESET">
				<label>Atmel AT91 reset driver</label>
				<help>This driver supports restart for Atmel AT91SAM9 and SAMA5
SoCs</help>
			</entry>
			<entry name="POWER_RESET_AT91_SAMA5D2_SHDWC">
				<label>Atmel AT91 SAMA5D2-Compatible shutdown controller driver</label>
				<help>This driver supports the alternate shutdown controller for some Atmel
SAMA5 SoCs. It is present for example on SAMA5D2 SoC.</help>
			</entry>
			<entry name="POWER_RESET_AXXIA">
				<label>LSI Axxia reset driver</label>
				<help>This driver supports restart for Axxia SoC.

Say Y if you have an Axxia family SoC.</help>
			</entry>
			<entry name="POWER_RESET_BRCMKONA">
				<label>Broadcom Kona reset driver</label>
				<help>This driver provides restart support for Broadcom Kona chips.

Say Y here if you have a Broadcom Kona-based board and you wish
to have restart support.</help>
			</entry>
			<entry name="POWER_RESET_BRCMSTB">
				<label>Broadcom STB reset driver</label>
				<help>This driver provides restart support for Broadcom STB boards.

Say Y here if you have a Broadcom STB board and you wish
to have restart support.</help>
			</entry>
			<entry name="POWER_RESET_GPIO">
				<label>GPIO power-off driver</label>
				<help>This driver supports turning off your board via a GPIO line.
If your board needs a GPIO high/low to power down, say Y and
create a binding in your devicetree.</help>
			</entry>
			<entry name="POWER_RESET_GPIO_RESTART">
				<label>GPIO restart driver</label>
				<help>This driver supports restarting your board via a GPIO line.
If your board needs a GPIO high/low to restart, say Y and
create a binding in your devicetree.</help>
			</entry>
			<entry name="POWER_RESET_HISI">
				<label>Hisilicon power-off driver</label>
				<help>Reboot support for Hisilicon boards.</help>
			</entry>
			<entry name="POWER_RESET_IMX">
				<label>IMX6 power-off driver</label>
				<help>This driver support power off external PMIC by PMIC_ON_REQ on i.mx6
boards.If you want to use other pin to control external power,please
say N here or disable in dts to make sure pm_power_off never be
overwrote wrongly by this driver.</help>
			</entry>
			<entry name="POWER_RESET_MSM">
				<label>Qualcomm MSM power-off driver</label>
				<help>Power off and restart support for Qualcomm boards.</help>
			</entry>
			<entry name="POWER_RESET_LTC2952">
				<label>LTC2952 PowerPath power-off driver</label>
				<help>This driver supports an external powerdown trigger and board power
down via the LTC2952. Bindings are made in the device tree.</help>
			</entry>
			<entry name="POWER_RESET_QNAP">
				<label>QNAP power-off driver</label>
				<help>This driver supports turning off QNAP NAS devices by sending
commands to the microcontroller which controls the main power.

Say Y if you have a QNAP NAS.</help>
			</entry>
			<entry name="POWER_RESET_RESTART">
				<label>Restart power-off driver</label>
				<help>Some boards don't actually have the ability to power off.
Instead they restart, and u-boot holds the SoC until the
user presses a key. u-boot then boots into Linux.</help>
			</entry>
			<entry name="POWER_RESET_ST">
				<label>ST restart driver</label>
				<help>Reset support for STMicroelectronics boards.</help>
			</entry>
			<entry name="POWER_RESET_VERSATILE">
				<label>ARM Versatile family reboot driver</label>
				<help>Power off and restart support for ARM Versatile family of
reference boards.</help>
			</entry>
			<entry name="POWER_RESET_VEXPRESS">
				<label>ARM Versatile Express power-off and reset driver</label>
				<help>Power off and reset support for the ARM Ltd. Versatile
Express boards.</help>
			</entry>
			<entry name="POWER_RESET_XGENE">
				<label>APM SoC X-Gene reset driver</label>
				<help>Reboot support for the APM SoC X-Gene Eval boards.</help>
			</entry>
			<entry name="POWER_RESET_KEYSTONE">
				<label>Keystone reset driver</label>
				<help>Reboot support for the KEYSTONE SoCs.</help>
			</entry>
			<entry name="POWER_RESET_SYSCON">
				<label>Generic SYSCON regmap reset driver</label>
				<help>Reboot support for generic SYSCON mapped register reset.</help>
			</entry>
			<entry name="POWER_RESET_SYSCON_POWEROFF">
				<label>Generic SYSCON regmap poweroff driver</label>
				<help>Poweroff support for generic SYSCON mapped register poweroff.</help>
			</entry>
			<entry name="POWER_RESET_RMOBILE">
				<label>Renesas R-Mobile reset driver</label>
				<help>Reboot support for Renesas R-Mobile and SH-Mobile SoCs.</help>
			</entry>
			<entry name="POWER_RESET_ZX">
				<label>ZTE SoCs reset driver</label>
				<help>Reboot support for ZTE SoCs.</help>
			</entry>
			<entry name="REBOOT_MODE"/>
			<entry name="SYSCON_REBOOT_MODE">
				<label>Generic SYSCON regmap reboot mode driver</label>
				<help>Say y here will enable reboot mode driver. This will
get reboot mode arguments and store it in SYSCON mapped
register, then the bootloader can read it to take different
action according to the mode.</help>
			</entry>
			<entry name="POWER_AVS">
				<label>Adaptive Voltage Scaling class support</label>
				<help>AVS is a power management technique which finely controls the
operating voltage of a device in order to optimize (i.e. reduce)
its power consumption.
At a given operating point the voltage is adapted depending on
static factors (chip manufacturing process) and dynamic factors
(temperature depending performance).
AVS is also called SmartReflex on OMAP devices.

Say Y here to enable Adaptive Voltage Scaling class support.</help>
			</entry>
			<entry name="ROCKCHIP_IODOMAIN">
				<label>Rockchip IO domain support</label>
				<help>Say y here to enable support io domains on Rockchip SoCs. It is
necessary for the io domain setting of the SoC to match the
voltage supplied by the regulators.
</help>
			</entry>
			<entry name="HWMON">
				<label>Hardware Monitoring support</label>
				<help>Hardware monitoring devices let you monitor the hardware health
of a system. Most modern motherboards include such a device. It
can include temperature sensors, voltage sensors, fan speed
sensors and various additional features such as the ability to
control the speed of the fans.  If you want this support you
should say Y here and also to the specific driver(s) for your
sensors chip(s) below.

To find out which specific driver(s) you need, use the
sensors-detect script from the lm_sensors package.  Read
&lt;file:Documentation/hwmon/userspace-tools&gt; for details.

This support can also be built as a module.  If so, the module
will be called hwmon.</help>
			</entry>
			<entry name="HWMON_VID"/>
			<entry name="HWMON_DEBUG_CHIP">
				<label>Hardware Monitoring Chip debugging messages</label>
				<help>Say Y here if you want the I2C chip drivers to produce a bunch of
debug messages to the system log.  Select this if you are having
a problem with I2C support and want to see more of what is going
on.</help>
			</entry>
			<entry name="SENSORS_AB8500">
				<label>AB8500 thermal monitoring</label>
				<help>If you say yes here you get support for the thermal sensor part
of the AB8500 chip. The driver includes thermal management for
AB8500 die and two GPADC channels. The GPADC channel are preferably
used to access sensors outside the AB8500 chip.

This driver can also be built as a module.  If so, the module
will be called abx500-temp.</help>
			</entry>
			<entry name="SENSORS_ABITUGURU">
				<label>Abit uGuru (rev 1 &amp; 2)</label>
				<help>If you say yes here you get support for the sensor part of the first
and second revision of the Abit uGuru chip. The voltage and frequency
control parts of the Abit uGuru are not supported. The Abit uGuru
chip can be found on Abit uGuru featuring motherboards (most modern
Abit motherboards from before end 2005). For more info and a list
of which motherboards have which revision see
Documentation/hwmon/abituguru

This driver can also be built as a module.  If so, the module
will be called abituguru.</help>
			</entry>
			<entry name="SENSORS_ABITUGURU3">
				<label>Abit uGuru (rev 3)</label>
				<help>If you say yes here you get support for the sensor part of the
third revision of the Abit uGuru chip. Only reading the sensors
and their settings is supported. The third revision of the Abit
uGuru chip can be found on recent Abit motherboards (since end
2005). For more info and a list of which motherboards have which
revision see Documentation/hwmon/abituguru3

This driver can also be built as a module.  If so, the module
will be called abituguru3.</help>
			</entry>
			<entry name="SENSORS_AD7314">
				<label>Analog Devices AD7314 and compatibles</label>
				<help>If you say yes here you get support for the Analog Devices
AD7314, ADT7301 and ADT7302 temperature sensors.

This driver can also be built as a module. If so, the module
will be called ad7314.</help>
			</entry>
			<entry name="SENSORS_AD7414">
				<label>Analog Devices AD7414</label>
				<help>If you say yes here you get support for the Analog Devices
AD7414 temperature monitoring chip.

This driver can also be built as a module. If so, the module
will be called ad7414.</help>
			</entry>
			<entry name="SENSORS_AD7418">
				<label>Analog Devices AD7416, AD7417 and AD7418</label>
				<help>If you say yes here you get support for the Analog Devices
AD7416, AD7417 and AD7418 temperature monitoring chips.

This driver can also be built as a module. If so, the module
will be called ad7418.</help>
			</entry>
			<entry name="SENSORS_ADM1021">
				<label>Analog Devices ADM1021 and compatibles</label>
				<help>If you say yes here you get support for Analog Devices ADM1021
and ADM1023 sensor chips and clones: Maxim MAX1617 and MAX1617A,
Genesys Logic GL523SM, National Semiconductor LM84 and TI THMC10.

This driver can also be built as a module.  If so, the module
will be called adm1021.</help>
			</entry>
			<entry name="SENSORS_ADM1025">
				<label>Analog Devices ADM1025 and compatibles</label>
				<help>If you say yes here you get support for Analog Devices ADM1025
and Philips NE1619 sensor chips.

This driver can also be built as a module.  If so, the module
will be called adm1025.</help>
			</entry>
			<entry name="SENSORS_ADM1026">
				<label>Analog Devices ADM1026 and compatibles</label>
				<help>If you say yes here you get support for Analog Devices ADM1026
sensor chip.

This driver can also be built as a module.  If so, the module
will be called adm1026.</help>
			</entry>
			<entry name="SENSORS_ADM1029">
				<label>Analog Devices ADM1029</label>
				<help>If you say yes here you get support for Analog Devices ADM1029
sensor chip.
Very rare chip, please let us know you use it.

This driver can also be built as a module.  If so, the module
will be called adm1029.</help>
			</entry>
			<entry name="SENSORS_ADM1031">
				<label>Analog Devices ADM1031 and compatibles</label>
				<help>If you say yes here you get support for Analog Devices ADM1031
and ADM1030 sensor chips.

This driver can also be built as a module.  If so, the module
will be called adm1031.</help>
			</entry>
			<entry name="SENSORS_ADM9240">
				<label>Analog Devices ADM9240 and compatibles</label>
				<help>If you say yes here you get support for Analog Devices ADM9240,
Dallas DS1780, National Semiconductor LM81 sensor chips.

This driver can also be built as a module.  If so, the module
will be called adm9240.</help>
			</entry>
			<entry name="SENSORS_ADT7X10">
				<help>This module contains common code shared by the ADT7310/ADT7320 and
ADT7410/ADT7420 temperature monitoring chip drivers.

If build as a module, the module will be called adt7x10.</help>
			</entry>
			<entry name="SENSORS_ADT7310">
				<label>Analog Devices ADT7310/ADT7320</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7310 and ADT7320 temperature monitoring chips.

This driver can also be built as a module. If so, the module
will be called adt7310.</help>
			</entry>
			<entry name="SENSORS_ADT7410">
				<label>Analog Devices ADT7410/ADT7420</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7410 and ADT7420 temperature monitoring chips.

This driver can also be built as a module. If so, the module
will be called adt7410.</help>
			</entry>
			<entry name="SENSORS_ADT7411">
				<label>Analog Devices ADT7411</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7411 voltage and temperature monitoring chip.

This driver can also be built as a module. If so, the module
will be called adt7411.</help>
			</entry>
			<entry name="SENSORS_ADT7462">
				<label>Analog Devices ADT7462</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7462 temperature monitoring chips.

This driver can also be built as a module. If so, the module
will be called adt7462.</help>
			</entry>
			<entry name="SENSORS_ADT7470">
				<label>Analog Devices ADT7470</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7470 temperature monitoring chips.

This driver can also be built as a module. If so, the module
will be called adt7470.</help>
			</entry>
			<entry name="SENSORS_ADT7475">
				<label>Analog Devices ADT7473, ADT7475, ADT7476 and ADT7490</label>
				<help>If you say yes here you get support for the Analog Devices
ADT7473, ADT7475, ADT7476 and ADT7490 hardware monitoring
chips.

This driver can also be build as a module.  If so, the module
will be called adt7475.</help>
			</entry>
			<entry name="SENSORS_ASC7621">
				<label>Andigilog aSC7621</label>
				<help>If you say yes here you get support for the aSC7621
family of SMBus sensors chip found on most Intel X38, X48, X58,
945, 965 and 975 desktop boards.  Currently supported chips:
aSC7621
aSC7621a

This driver can also be built as a module.  If so, the module
will be called asc7621.</help>
			</entry>
			<entry name="SENSORS_K8TEMP">
				<label>AMD Athlon64/FX or Opteron temperature sensor</label>
				<help>If you say yes here you get support for the temperature
sensor(s) inside your CPU. Supported is whole AMD K8
microarchitecture. Please note that you will need at least
lm-sensors 2.10.1 for proper userspace support.

This driver can also be built as a module.  If so, the module
will be called k8temp.</help>
			</entry>
			<entry name="SENSORS_K10TEMP">
				<label>AMD Family 10h+ temperature sensor</label>
				<help>If you say yes here you get support for the temperature
sensor(s) inside your CPU. Supported are later revisions of
the AMD Family 10h and all revisions of the AMD Family 11h,
12h (Llano), 14h (Brazos), 15h (Bulldozer/Trinity/Kaveri/Carrizo)
and 16h (Kabini/Mullins) microarchitectures.

This driver can also be built as a module.  If so, the module
will be called k10temp.</help>
			</entry>
			<entry name="SENSORS_FAM15H_POWER">
				<label>AMD Family 15h processor power</label>
				<help>If you say yes here you get support for processor power
information of your AMD family 15h CPU.

This driver can also be built as a module.  If so, the module
will be called fam15h_power.</help>
			</entry>
			<entry name="SENSORS_APPLESMC">
				<label>Apple SMC (Motion sensor, light sensor, keyboard backlight)</label>
				<help>This driver provides support for the Apple System Management
Controller, which provides an accelerometer (Apple Sudden Motion
Sensor), light sensors, temperature sensors, keyboard backlight
control and fan control.

Only Intel-based Apple's computers are supported (MacBook Pro,
MacBook, MacMini).

Data from the different sensors, keyboard backlight control and fan
control are accessible via sysfs.

This driver also provides an absolute input class device, allowing
the laptop to act as a pinball machine-esque joystick.

Say Y here if you have an applicable laptop and want to experience
the awesome power of applesmc.</help>
			</entry>
			<entry name="SENSORS_ARM_SCPI">
				<label>ARM SCPI Sensors</label>
				<help>This driver provides support for temperature, voltage, current
and power sensors available on ARM Ltd's SCP based platforms. The
actual number and type of sensors exported depend on the platform.</help>
			</entry>
			<entry name="SENSORS_ASB100">
				<label>Asus ASB100 Bach</label>
				<help>If you say yes here you get support for the ASB100 Bach sensor
chip found on some Asus mainboards.

This driver can also be built as a module.  If so, the module
will be called asb100.</help>
			</entry>
			<entry name="SENSORS_ATXP1">
				<label>Attansic ATXP1 VID controller</label>
				<help>If you say yes here you get support for the Attansic ATXP1 VID
controller.

If your board have such a chip, you are able to control your CPU
core and other voltages.

This driver can also be built as a module.  If so, the module
will be called atxp1.</help>
			</entry>
			<entry name="SENSORS_DS620">
				<label>Dallas Semiconductor DS620</label>
				<help>If you say yes here you get support for Dallas Semiconductor
DS620 sensor chip.

This driver can also be built as a module.  If so, the module
will be called ds620.</help>
			</entry>
			<entry name="SENSORS_DS1621">
				<label>Dallas Semiconductor DS1621 and compatibles</label>
				<help>If you say yes here you get support for Dallas Semiconductor/Maxim
Integrated DS1621 sensor chips and compatible models including:

- Dallas Semiconductor DS1625
- Maxim Integrated DS1631
- Maxim Integrated DS1721
- Maxim Integrated DS1731

This driver can also be built as a module.  If so, the module
will be called ds1621.</help>
			</entry>
			<entry name="SENSORS_DELL_SMM">
				<label>Dell laptop SMM BIOS hwmon driver</label>
				<help>This hwmon driver adds support for reporting temperature of different
sensors and controls the fans on Dell laptops via System Management
Mode provided by Dell BIOS.

When option I8K is also enabled this driver provides legacy /proc/i8k
userspace interface for i8kutils package.</help>
			</entry>
			<entry name="SENSORS_DA9052_ADC">
				<label>Dialog DA9052/DA9053 ADC</label>
				<help>Say y here to support the ADC found on Dialog Semiconductor
DA9052-BC and DA9053-AA/Bx PMICs.

This driver can also be built as module. If so, the module
will be called da9052-hwmon.</help>
			</entry>
			<entry name="SENSORS_DA9055">
				<label>Dialog Semiconductor DA9055 ADC</label>
				<help>If you say yes here you get support for ADC on the Dialog
Semiconductor DA9055 PMIC.

This driver can also be built as a module.  If so, the module
will be called da9055-hwmon.</help>
			</entry>
			<entry name="SENSORS_I5K_AMB">
				<label>FB-DIMM AMB temperature sensor on Intel 5000 series chipsets</label>
				<help>If you say yes here you get support for FB-DIMM AMB temperature
monitoring chips on systems with the Intel 5000 series chipset.

This driver can also be built as a module. If so, the module
will be called i5k_amb.</help>
			</entry>
			<entry name="SENSORS_F71805F">
				<label>Fintek F71805F/FG, F71806F/FG and F71872F/FG</label>
				<help>If you say yes here you get support for hardware monitoring
features of the Fintek F71805F/FG, F71806F/FG and F71872F/FG
Super-I/O chips.

This driver can also be built as a module.  If so, the module
will be called f71805f.</help>
			</entry>
			<entry name="SENSORS_F71882FG">
				<label>Fintek F71882FG and compatibles</label>
				<help>If you say yes here you get support for hardware monitoring
features of many Fintek Super-I/O (LPC) chips. The currently
supported chips are:
F71808E/A
F71858FG
F71862FG
F71863FG
F71869F/E/A
F71882FG
F71883FG
F71889FG/ED/A
F8000
F81801U
F81865F

This driver can also be built as a module.  If so, the module
will be called f71882fg.</help>
			</entry>
			<entry name="SENSORS_F75375S">
				<label>Fintek F75375S/SP, F75373 and F75387</label>
				<help>If you say yes here you get support for hardware monitoring
features of the Fintek F75375S/SP, F75373 and F75387

This driver can also be built as a module.  If so, the module
will be called f75375s.</help>
			</entry>
			<entry name="SENSORS_MC13783_ADC">
				<label>Freescale MC13783/MC13892 ADC</label>
				<help>Support for the A/D converter on MC13783 and MC13892 PMIC.</help>
			</entry>
			<entry name="SENSORS_FSCHMD">
				<label>Fujitsu Siemens Computers sensor chips</label>
				<help>If you say yes here you get support for the following Fujitsu
Siemens Computers (FSC) sensor chips: Poseidon, Scylla, Hermes,
Heimdall, Heracles, Hades and Syleus including support for the
integrated watchdog.

This is a merged driver for FSC sensor chips replacing the fscpos,
fscscy and fscher drivers and adding support for several other FSC
sensor chips.

This driver can also be built as a module.  If so, the module
will be called fschmd.</help>
			</entry>
			<entry name="SENSORS_FTSTEUTATES">
				<label>Fujitsu Technology Solutions sensor chip Teutates</label>
				<help>If you say yes here you get support for the Fujitsu Technology
Solutions (FTS) sensor chip &quot;Teutates&quot; including support for
the integrated watchdog.

This driver can also be built as a module. If so, the module
will be called ftsteutates.</help>
			</entry>
			<entry name="SENSORS_GL518SM">
				<label>Genesys Logic GL518SM</label>
				<help>If you say yes here you get support for Genesys Logic GL518SM
sensor chips.

This driver can also be built as a module.  If so, the module
will be called gl518sm.</help>
			</entry>
			<entry name="SENSORS_GL520SM">
				<label>Genesys Logic GL520SM</label>
				<help>If you say yes here you get support for Genesys Logic GL520SM
sensor chips.

This driver can also be built as a module.  If so, the module
will be called gl520sm.</help>
			</entry>
			<entry name="SENSORS_G760A">
				<label>GMT G760A</label>
				<help>If you say yes here you get support for Global Mixed-mode
Technology Inc G760A fan speed PWM controller chips.

This driver can also be built as a module.  If so, the module
will be called g760a.</help>
			</entry>
			<entry name="SENSORS_G762">
				<label>GMT G762 and G763</label>
				<help>If you say yes here you get support for Global Mixed-mode
Technology Inc G762 and G763 fan speed PWM controller chips.

This driver can also be built as a module.  If so, the module
will be called g762.</help>
			</entry>
			<entry name="SENSORS_GPIO_FAN">
				<label>GPIO fan</label>
				<help>If you say yes here you get support for fans connected to GPIO lines.

This driver can also be built as a module.  If so, the module
will be called gpio-fan.</help>
			</entry>
			<entry name="SENSORS_HIH6130">
				<label>Honeywell Humidicon HIH-6130 humidity/temperature sensor</label>
				<help>If you say yes here you get support for Honeywell Humidicon
HIH-6130 and HIH-6131 Humidicon humidity sensors.

This driver can also be built as a module.  If so, the module
will be called hih6130.</help>
			</entry>
			<entry name="SENSORS_IBMAEM">
				<label>IBM Active Energy Manager temperature/power sensors and control</label>
				<help>If you say yes here you get support for the temperature and
power sensors and capping hardware in various IBM System X
servers that support Active Energy Manager.  This includes
the x3350, x3550, x3650, x3655, x3755, x3850 M2, x3950 M2,
and certain HC10/HS2x/LS2x/QS2x blades.

This driver can also be built as a module.  If so, the module
will be called ibmaem.</help>
			</entry>
			<entry name="SENSORS_IBMPEX">
				<label>IBM PowerExecutive temperature/power sensors</label>
				<help>If you say yes here you get support for the temperature and
power sensors in various IBM System X servers that support
PowerExecutive.  So far this includes the x3350, x3550, x3650,
x3655, and x3755; the x3800, x3850, and x3950 models that have
PCI Express; and some of the HS2x, LS2x, and QS2x blades.

This driver can also be built as a module.  If so, the module
will be called ibmpex.</help>
			</entry>
			<entry name="SENSORS_IBMPOWERNV">
				<label>IBM POWERNV platform sensors</label>
				<help>If you say yes here you get support for the temperature/fan/power
sensors on your PowerNV platform.

This driver can also be built as a module. If so, the module
will be called ibmpowernv.</help>
			</entry>
			<entry name="SENSORS_IIO_HWMON">
				<label>Hwmon driver that uses channels specified via iio maps</label>
				<help>This is a platform driver that in combination with a suitable
map allows IIO devices to provide basic hwmon functionality
for those channels specified in the map.  This map can be provided
either via platform data or the device tree bindings.</help>
			</entry>
			<entry name="SENSORS_I5500">
				<label>Intel 5500/5520/X58 temperature sensor</label>
				<help>If you say yes here you get support for the temperature
sensor inside the Intel 5500, 5520 and X58 chipsets.

This driver can also be built as a module. If so, the module
will be called i5500_temp.</help>
			</entry>
			<entry name="SENSORS_CORETEMP">
				<label>Intel Core/Core2/Atom temperature sensor</label>
				<help>If you say yes here you get support for the temperature
sensor inside your CPU. Most of the family 6 CPUs
are supported. Check Documentation/hwmon/coretemp for details.</help>
			</entry>
			<entry name="SENSORS_IT87">
				<label>ITE IT87xx and compatibles</label>
				<help>If you say yes here you get support for ITE IT8705F, IT8712F, IT8716F,
IT8718F, IT8720F, IT8721F, IT8726F, IT8728F, IT8732F, IT8758E,
IT8771E, IT8772E, IT8781F, IT8782F, IT8783E/F, IT8786E, IT8790E,
IT8603E, IT8620E, IT8623E, and IT8628E sensor chips, and the SiS950
clone.

This driver can also be built as a module.  If so, the module
will be called it87.</help>
			</entry>
			<entry name="SENSORS_JZ4740">
				<label>Ingenic JZ4740 SoC ADC driver</label>
				<help>If you say yes here you get support for reading adc values from the ADCIN
pin on Ingenic JZ4740 SoC based boards.

This driver can also be build as a module. If so, the module will be
called jz4740-hwmon.</help>
			</entry>
			<entry name="SENSORS_JC42">
				<label>JEDEC JC42.4 compliant memory module temperature sensors</label>
				<help>If you say yes here, you get support for JEDEC JC42.4 compliant
temperature sensors, which are used on many DDR3 memory modules for
mobile devices and servers.  Support will include, but not be limited
to, ADT7408, AT30TS00, CAT34TS02, CAT6095, MAX6604, MCP9804, MCP9805,
MCP9808, MCP98242, MCP98243, MCP98244, MCP9843, SE97, SE98,
STTS424(E), STTS2002, STTS3000, TSE2002, TSE2004, TS3000, and TS3001.

This driver can also be built as a module.  If so, the module
will be called jc42.</help>
			</entry>
			<entry name="SENSORS_POWR1220">
				<label>Lattice POWR1220 Power Monitoring</label>
				<help>If you say yes here you get access to the hardware monitoring
functions of the Lattice POWR1220 isp Power Supply Monitoring,
Sequencing and Margining Controller.

This driver can also be built as a module.  If so, the module
will be called powr1220.</help>
			</entry>
			<entry name="SENSORS_LINEAGE">
				<label>Lineage Compact Power Line Power Entry Module</label>
				<help>If you say yes here you get support for the Lineage Compact Power Line
series of DC/DC and AC/DC converters such as CP1800, CP2000AC,
CP2000DC, CP2725, and others.

This driver can also be built as a module.  If so, the module
will be called lineage-pem.</help>
			</entry>
			<entry name="SENSORS_LTC2945">
				<label>Linear Technology LTC2945</label>
				<help>If you say yes here you get support for Linear Technology LTC2945
I2C System Monitor.

This driver can also be built as a module. If so, the module will
be called ltc2945.</help>
			</entry>
			<entry name="SENSORS_LTC2990">
				<label>Linear Technology LTC2990 (current monitoring mode only)</label>
				<help>If you say yes here you get support for Linear Technology LTC2990
I2C System Monitor. The LTC2990 supports a combination of voltage,
current and temperature monitoring, but in addition to the Vcc supply
voltage and chip temperature, this driver currently only supports
reading two currents by measuring two differential voltages across
series resistors.

This driver can also be built as a module. If so, the module will
be called ltc2990.</help>
			</entry>
			<entry name="SENSORS_LTC4151">
				<label>Linear Technology LTC4151</label>
				<help>If you say yes here you get support for Linear Technology LTC4151
High Voltage I2C Current and Voltage Monitor interface.

This driver can also be built as a module. If so, the module will
be called ltc4151.</help>
			</entry>
			<entry name="SENSORS_LTC4215">
				<label>Linear Technology LTC4215</label>
				<help>If you say yes here you get support for Linear Technology LTC4215
Hot Swap Controller I2C interface.

This driver can also be built as a module. If so, the module will
be called ltc4215.</help>
			</entry>
			<entry name="SENSORS_LTC4222">
				<label>Linear Technology LTC4222</label>
				<help>If you say yes here you get support for Linear Technology LTC4222
Dual Hot Swap Controller I2C interface.

This driver can also be built as a module. If so, the module will
be called ltc4222.</help>
			</entry>
			<entry name="SENSORS_LTC4245">
				<label>Linear Technology LTC4245</label>
				<help>If you say yes here you get support for Linear Technology LTC4245
Multiple Supply Hot Swap Controller I2C interface.

This driver can also be built as a module. If so, the module will
be called ltc4245.</help>
			</entry>
			<entry name="SENSORS_LTC4260">
				<label>Linear Technology LTC4260</label>
				<help>If you say yes here you get support for Linear Technology LTC4260
Positive Voltage Hot Swap Controller I2C interface.

This driver can also be built as a module. If so, the module will
be called ltc4260.</help>
			</entry>
			<entry name="SENSORS_LTC4261">
				<label>Linear Technology LTC4261</label>
				<help>If you say yes here you get support for Linear Technology LTC4261
Negative Voltage Hot Swap Controller I2C interface.

This driver can also be built as a module. If so, the module will
be called ltc4261.</help>
			</entry>
			<entry name="SENSORS_MAX1111">
				<label>Maxim MAX1111 Serial 8-bit ADC chip and compatibles</label>
				<help>Say y here to support Maxim's MAX1110, MAX1111, MAX1112, and MAX1113
ADC chips.

This driver can also be built as a module.  If so, the module
will be called max1111.</help>
			</entry>
			<entry name="SENSORS_MAX16065">
				<label>Maxim MAX16065 System Manager and compatibles</label>
				<help>If you say yes here you get support for hardware monitoring
capabilities of the following Maxim System Manager chips.
MAX16065
MAX16066
MAX16067
MAX16068
MAX16070
MAX16071

This driver can also be built as a module.  If so, the module
will be called max16065.</help>
			</entry>
			<entry name="SENSORS_MAX1619">
				<label>Maxim MAX1619 sensor chip</label>
				<help>If you say yes here you get support for MAX1619 sensor chip.

This driver can also be built as a module.  If so, the module
will be called max1619.</help>
			</entry>
			<entry name="SENSORS_MAX1668">
				<label>Maxim MAX1668 and compatibles</label>
				<help>If you say yes here you get support for MAX1668, MAX1989 and
MAX1805 chips.

This driver can also be built as a module.  If so, the module
will be called max1668.</help>
			</entry>
			<entry name="SENSORS_MAX197">
				<label>Maxim MAX197 and compatibles</label>
				<help>Support for the Maxim MAX197 A/D converter.
Support will include, but not be limited to, MAX197, and MAX199.

This driver can also be built as a module. If so, the module
will be called max197.</help>
			</entry>
			<entry name="SENSORS_MAX31722">
				<label>MAX31722 temperature sensor</label>
				<help>Support for the Maxim Integrated MAX31722/MAX31723 digital
thermometers/thermostats operating over an SPI interface.

This driver can also be built as a module. If so, the module
will be called max31722.</help>
			</entry>
			<entry name="SENSORS_MAX6639">
				<label>Maxim MAX6639 sensor chip</label>
				<help>If you say yes here you get support for the MAX6639
sensor chips.

This driver can also be built as a module.  If so, the module
will be called max6639.</help>
			</entry>
			<entry name="SENSORS_MAX6642">
				<label>Maxim MAX6642 sensor chip</label>
				<help>If you say yes here you get support for MAX6642 sensor chip.
MAX6642 is a SMBus-Compatible Remote/Local Temperature Sensor
with Overtemperature Alarm from Maxim.

This driver can also be built as a module.  If so, the module
will be called max6642.</help>
			</entry>
			<entry name="SENSORS_MAX6650">
				<label>Maxim MAX6650 sensor chip</label>
				<help>If you say yes here you get support for the MAX6650 / MAX6651
sensor chips.

This driver can also be built as a module.  If so, the module
will be called max6650.</help>
			</entry>
			<entry name="SENSORS_MAX6697">
				<label>Maxim MAX6697 and compatibles</label>
				<help>If you say yes here you get support for MAX6581, MAX6602, MAX6622,
MAX6636, MAX6689, MAX6693, MAX6694, MAX6697, MAX6698, and MAX6699
temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called max6697.</help>
			</entry>
			<entry name="SENSORS_MAX31790">
				<label>Maxim MAX31790 sensor chip</label>
				<help>If you say yes here you get support for 6-Channel PWM-Output
Fan RPM Controller.

This driver can also be built as a module.  If so, the module
will be called max31790.</help>
			</entry>
			<entry name="SENSORS_MCP3021">
				<label>Microchip MCP3021 and compatibles</label>
				<help>If you say yes here you get support for MCP3021 and MCP3221.
The MCP3021 is a A/D converter (ADC) with 10-bit and the MCP3221
with 12-bit resolution.

This driver can also be built as a module.  If so, the module
will be called mcp3021.</help>
			</entry>
			<entry name="SENSORS_MENF21BMC_HWMON">
				<label>MEN 14F021P00 BMC Hardware Monitoring</label>
				<help>Say Y here to include support for the MEN 14F021P00 BMC
hardware monitoring.

This driver can also be built as a module. If so the module
will be called menf21bmc_hwmon.</help>
			</entry>
			<entry name="SENSORS_ADCXX">
				<label>National Semiconductor ADCxxxSxxx</label>
				<help>If you say yes here you get support for the National Semiconductor
ADC&lt;bb&gt;&lt;c&gt;S&lt;sss&gt; chip family, where
* bb  is the resolution in number of bits (8, 10, 12)
* c   is the number of channels (1, 2, 4, 8)
* sss is the maximum conversion speed (021 for 200 kSPS, 051 for 500
kSPS and 101 for 1 MSPS)

Examples : ADC081S101, ADC124S501, ...

This driver can also be built as a module.  If so, the module
will be called adcxx.</help>
			</entry>
			<entry name="SENSORS_LM63">
				<label>National Semiconductor LM63 and compatibles</label>
				<help>If you say yes here you get support for the National
Semiconductor LM63, LM64, and LM96163 remote diode digital temperature
sensors with integrated fan control.  Such chips are found
on the Tyan S4882 (Thunder K8QS Pro) motherboard, among
others.

This driver can also be built as a module.  If so, the module
will be called lm63.</help>
			</entry>
			<entry name="SENSORS_LM70">
				<label>National Semiconductor LM70 and compatibles</label>
				<help>If you say yes here you get support for the National Semiconductor
LM70, LM71, LM74 and Texas Instruments TMP121/TMP123 digital tempera-
ture sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm70.</help>
			</entry>
			<entry name="SENSORS_LM73">
				<label>National Semiconductor LM73</label>
				<help>If you say yes here you get support for National Semiconductor LM73
sensor chips.
This driver can also be built as a module.  If so, the module
will be called lm73.</help>
			</entry>
			<entry name="SENSORS_LM75">
				<label>National Semiconductor LM75 and compatibles</label>
				<help>If you say yes here you get support for one common type of
temperature sensor chip, with models including:

- Analog Devices ADT75
- Dallas Semiconductor DS75, DS1775 and DS7505
- Global Mixed-mode Technology (GMT) G751
- Maxim MAX6625 and MAX6626
- Microchip MCP980x
- National Semiconductor LM75, LM75A
- NXP's LM75A
- ST Microelectronics STDS75
- TelCom (now Microchip) TCN75
- Texas Instruments TMP100, TMP101, TMP105, TMP112, TMP75,
TMP175, TMP275

This driver supports driver model based binding through board
specific I2C device tables.

It also supports the &quot;legacy&quot; style of driver binding.  To use
that with some chips which don't replicate LM75 quirks exactly,
you may need the &quot;force&quot; module parameter.

This driver can also be built as a module.  If so, the module
will be called lm75.</help>
			</entry>
			<entry name="SENSORS_LM77">
				<label>National Semiconductor LM77</label>
				<help>If you say yes here you get support for National Semiconductor LM77
sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm77.</help>
			</entry>
			<entry name="SENSORS_LM78">
				<label>National Semiconductor LM78 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM78,
LM78-J and LM79.

This driver can also be built as a module.  If so, the module
will be called lm78.</help>
			</entry>
			<entry name="SENSORS_LM80">
				<label>National Semiconductor LM80 and LM96080</label>
				<help>If you say yes here you get support for National Semiconductor
LM80 and LM96080 sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm80.</help>
			</entry>
			<entry name="SENSORS_LM83">
				<label>National Semiconductor LM83 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor
LM82 and LM83 sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm83.</help>
			</entry>
			<entry name="SENSORS_LM85">
				<label>National Semiconductor LM85 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM85
sensor chips and clones: ADM1027, ADT7463, ADT7468, EMC6D100,
EMC6D101, EMC6D102, and EMC6D103.

This driver can also be built as a module.  If so, the module
will be called lm85.</help>
			</entry>
			<entry name="SENSORS_LM87">
				<label>National Semiconductor LM87 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM87
and Analog Devices ADM1024 sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm87.</help>
			</entry>
			<entry name="SENSORS_LM90">
				<label>National Semiconductor LM90 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM90,
LM86, LM89 and LM99, Analog Devices ADM1032, ADT7461, and ADT7461A,
Maxim MAX6646, MAX6647, MAX6648, MAX6649, MAX6657, MAX6658, MAX6659,
MAX6680, MAX6681, MAX6692, MAX6695, MAX6696, ON Semiconductor NCT1008,
Winbond/Nuvoton W83L771W/G/AWG/ASG, Philips SA56004, and GMT G781
sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm90.</help>
			</entry>
			<entry name="SENSORS_LM92">
				<label>National Semiconductor LM92 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM92
and Maxim MAX6635 sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm92.</help>
			</entry>
			<entry name="SENSORS_LM93">
				<label>National Semiconductor LM93 and compatibles</label>
				<help>If you say yes here you get support for National Semiconductor LM93,
LM94, and compatible sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm93.</help>
			</entry>
			<entry name="SENSORS_LM95234">
				<label>National Semiconductor LM95234 and compatibles</label>
				<help>If you say yes here you get support for the LM95233 and LM95234
temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm95234.</help>
			</entry>
			<entry name="SENSORS_LM95241">
				<label>National Semiconductor LM95241 and compatibles</label>
				<help>If you say yes here you get support for LM95231 and LM95241 sensor
chips.

This driver can also be built as a module.  If so, the module
will be called lm95241.</help>
			</entry>
			<entry name="SENSORS_LM95245">
				<label>National Semiconductor LM95245 and compatibles</label>
				<help>If you say yes here you get support for LM95235 and LM95245
temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called lm95245.</help>
			</entry>
			<entry name="SENSORS_PC87360">
				<label>National Semiconductor PC87360 family</label>
				<help>If you say yes here you get access to the hardware monitoring
functions of the National Semiconductor PC8736x Super-I/O chips.
The PC87360, PC87363 and PC87364 only have fan monitoring and
control.  The PC87365 and PC87366 additionally have voltage and
temperature monitoring.

This driver can also be built as a module.  If so, the module
will be called pc87360.</help>
			</entry>
			<entry name="SENSORS_PC87427">
				<label>National Semiconductor PC87427</label>
				<help>If you say yes here you get access to the hardware monitoring
functions of the National Semiconductor PC87427 Super-I/O chip.
The chip has two distinct logical devices, one for fan speed
monitoring and control, and one for voltage and temperature
monitoring. Fan speed monitoring and control are supported, as
well as temperature monitoring. Voltages aren't supported yet.

This driver can also be built as a module.  If so, the module
will be called pc87427.</help>
			</entry>
			<entry name="SENSORS_NTC_THERMISTOR">
				<label>NTC thermistor support from Murata</label>
				<help>This driver supports NTC thermistors sensor reading and its
interpretation. The driver can also monitor the temperature and
send notifications about the temperature.

Currently, this driver supports
NCP15WB473, NCP18WB473, NCP21WB473, NCP03WB473, NCP15WL333,
NCP03WF104 and NCP15XH103 from Murata and B57330V2103 from EPCOS.

This driver can also be built as a module.  If so, the module
will be called ntc-thermistor.</help>
			</entry>
			<entry name="SENSORS_NCT6683">
				<label>Nuvoton NCT6683D</label>
				<help>If you say yes here you get support for the hardware monitoring
functionality of the Nuvoton NCT6683D eSIO chip.

This driver can also be built as a module.  If so, the module
will be called nct6683.</help>
			</entry>
			<entry name="SENSORS_NCT6775">
				<label>Nuvoton NCT6775F and compatibles</label>
				<help>If you say yes here you get support for the hardware monitoring
functionality of the Nuvoton NCT6106D, NCT6775F, NCT6776F, NCT6779D,
NCT6791D, NCT6792D, NCT6793D, and compatible Super-I/O chips. This
driver replaces the w83627ehf driver for NCT6775F and NCT6776F.

This driver can also be built as a module.  If so, the module
will be called nct6775.</help>
			</entry>
			<entry name="SENSORS_NCT7802">
				<label>Nuvoton NCT7802Y</label>
				<help>If you say yes here you get support for the Nuvoton NCT7802Y
hardware monitoring chip.

This driver can also be built as a module.  If so, the module
will be called nct7802.</help>
			</entry>
			<entry name="SENSORS_NCT7904">
				<label>Nuvoton NCT7904</label>
				<help>If you say yes here you get support for the Nuvoton NCT7904
hardware monitoring chip, including manual fan speed control.

This driver can also be built as a module.  If so, the module
will be called nct7904.</help>
			</entry>
			<entry name="SENSORS_NSA320">
				<label>ZyXEL NSA320 and compatible fan speed and temperature sensors</label>
				<help>If you say yes here you get support for hardware monitoring
for the ZyXEL NSA320 Media Server and other compatible devices
(probably the NSA325 and some NSA310 variants).

The sensor data is taken from a Holtek HT46R065 microcontroller
connected to GPIO lines.

This driver can also be built as a module. If so, the module
will be called nsa320-hwmon.</help>
			</entry>
			<entry name="SENSORS_PCF8591">
				<label>Philips PCF8591 ADC/DAC</label>
				<help>If you say yes here you get support for Philips PCF8591 4-channel
ADC, 1-channel DAC chips.

This driver can also be built as a module.  If so, the module
will be called pcf8591.

These devices are hard to detect and rarely found on mainstream
hardware.  If unsure, say N.</help>
			</entry>
			<entry name="PMBUS">
				<label>PMBus support</label>
				<help>Say yes here if you want to enable PMBus support.

This driver can also be built as a module. If so, the module will
be called pmbus_core.</help>
			</entry>
			<entry name="SENSORS_PMBUS">
				<label>Generic PMBus devices</label>
				<help>If you say yes here you get hardware monitoring support for generic
PMBus devices, including but not limited to ADP4000, BMR453, BMR454,
MDT040, NCP4200, NCP4208, PDT003, PDT006, PDT012, TPS40400, TPS544B20,
TPS544B25, TPS544C20, TPS544C25, and UDT020.

This driver can also be built as a module. If so, the module will
be called pmbus.</help>
			</entry>
			<entry name="SENSORS_ADM1275">
				<label>Analog Devices ADM1275 and compatibles</label>
				<help>If you say yes here you get hardware monitoring support for Analog
Devices ADM1075, ADM1275, ADM1276, ADM1278, ADM1293, and ADM1294
Hot-Swap Controller and Digital Power Monitors.

This driver can also be built as a module. If so, the module will
be called adm1275.</help>
			</entry>
			<entry name="SENSORS_LM25066">
				<label>National Semiconductor LM25066 and compatibles</label>
				<help>If you say yes here you get hardware monitoring support for National
Semiconductor LM25056, LM25066, LM5064, and LM5066.

This driver can also be built as a module. If so, the module will
be called lm25066.</help>
			</entry>
			<entry name="SENSORS_LTC2978">
				<label>Linear Technologies LTC2978 and compatibles</label>
				<help>If you say yes here you get hardware monitoring support for Linear
Technology LTC2974, LTC2975, LTC2977, LTC2978, LTC2980, LTC3880,
LTC3883, LTC3886, LTC3887, LTCM2987, LTM4675, and LTM4676.

This driver can also be built as a module. If so, the module will
be called ltc2978.</help>
			</entry>
			<entry name="SENSORS_LTC2978_REGULATOR">
				<label>Regulator support for LTC2978 and compatibles</label>
				<help>If you say yes here you get regulator support for Linear
Technology LTC2974, LTC2977, LTC2978, LTC3880, LTC3883, and LTM4676.</help>
			</entry>
			<entry name="SENSORS_LTC3815">
				<label>Linear Technologies LTC3815</label>
				<help>If you say yes here you get hardware monitoring support for Linear
Technology LTC3815.

This driver can also be built as a module. If so, the module will
be called ltc3815.</help>
			</entry>
			<entry name="SENSORS_MAX16064">
				<label>Maxim MAX16064</label>
				<help>If you say yes here you get hardware monitoring support for Maxim
MAX16064.

This driver can also be built as a module. If so, the module will
be called max16064.</help>
			</entry>
			<entry name="SENSORS_MAX20751">
				<label>Maxim MAX20751</label>
				<help>If you say yes here you get hardware monitoring support for Maxim
MAX20751.

This driver can also be built as a module. If so, the module will
be called max20751.</help>
			</entry>
			<entry name="SENSORS_MAX34440">
				<label>Maxim MAX34440 and compatibles</label>
				<help>If you say yes here you get hardware monitoring support for Maxim
MAX34440, MAX34441, MAX34446, MAX34460, and MAX34461.

This driver can also be built as a module. If so, the module will
be called max34440.</help>
			</entry>
			<entry name="SENSORS_MAX8688">
				<label>Maxim MAX8688</label>
				<help>If you say yes here you get hardware monitoring support for Maxim
MAX8688.

This driver can also be built as a module. If so, the module will
be called max8688.</help>
			</entry>
			<entry name="SENSORS_TPS40422">
				<label>TI TPS40422</label>
				<help>If you say yes here you get hardware monitoring support for TI
TPS40422.

This driver can also be built as a module. If so, the module will
be called tps40422.</help>
			</entry>
			<entry name="SENSORS_UCD9000">
				<label>TI UCD90120, UCD90124, UCD9090, UCD90910</label>
				<help>If you say yes here you get hardware monitoring support for TI
UCD90120, UCD90124, UCD9090, UCD90910 Sequencer and System Health
Controllers.

This driver can also be built as a module. If so, the module will
be called ucd9000.</help>
			</entry>
			<entry name="SENSORS_UCD9200">
				<label>TI UCD9220, UCD9222, UCD9224, UCD9240, UCD9244, UCD9246, UCD9248</label>
				<help>If you say yes here you get hardware monitoring support for TI
UCD9220, UCD9222, UCD9224, UCD9240, UCD9244, UCD9246, and UCD9248
Digital PWM System Controllers.

This driver can also be built as a module. If so, the module will
be called ucd9200.</help>
			</entry>
			<entry name="SENSORS_ZL6100">
				<label>Intersil ZL6100 and compatibles</label>
				<help>If you say yes here you get hardware monitoring support for Intersil
ZL2004, ZL2005, ZL2006, ZL2008, ZL2105, ZL2106, ZL6100, ZL6105,
ZL9101M, and ZL9117M Digital DC/DC Controllers, as well as for
Ericsson BMR450, BMR451, BMR462, BMR463, and BMR464.

This driver can also be built as a module. If so, the module will
be called zl6100.</help>
			</entry>
			<entry name="SENSORS_PWM_FAN">
				<label>PWM fan</label>
				<help>If you say yes here you get support for fans connected to PWM lines.
The driver uses the generic PWM interface, thus it will work on a
variety of SoCs.

This driver can also be built as a module.  If so, the module
will be called pwm-fan.</help>
			</entry>
			<entry name="SENSORS_SHT15">
				<label>Sensiron humidity and temperature sensors. SHT15 and compat.</label>
				<help>If you say yes here you get support for the Sensiron SHT10, SHT11,
SHT15, SHT71, SHT75 humidity and temperature sensors.

This driver can also be built as a module.  If so, the module
will be called sht15.</help>
			</entry>
			<entry name="SENSORS_SHT21">
				<label>Sensiron humidity and temperature sensors. SHT21 and compat.</label>
				<help>If you say yes here you get support for the Sensiron SHT21, SHT25
humidity and temperature sensors.

This driver can also be built as a module.  If so, the module
will be called sht21.</help>
			</entry>
			<entry name="SENSORS_SHT3x">
				<label>Sensiron humidity and temperature sensors. SHT3x and compat.</label>
				<help>If you say yes here you get support for the Sensiron SHT30 and SHT31
humidity and temperature sensors.

This driver can also be built as a module.  If so, the module
will be called sht3x.</help>
			</entry>
			<entry name="SENSORS_SHTC1">
				<label>Sensiron humidity and temperature sensors. SHTC1 and compat.</label>
				<help>If you say yes here you get support for the Sensiron SHTC1 and SHTW1
humidity and temperature sensors.

This driver can also be built as a module.  If so, the module
will be called shtc1.</help>
			</entry>
			<entry name="SENSORS_S3C">
				<label>Samsung built-in ADC</label>
				<help>If you say yes here you get support for the on-board ADCs of
the Samsung S3C24XX, S3C64XX and other series of SoC

This driver can also be built as a module. If so, the module
will be called s3c-hwmon.</help>
			</entry>
			<entry name="SENSORS_S3C_RAW">
				<label>Include raw channel attributes in sysfs</label>
				<help>Say Y here if you want to include raw copies of all the ADC
channels in sysfs.</help>
			</entry>
			<entry name="SENSORS_SIS5595">
				<label>Silicon Integrated Systems Corp. SiS5595</label>
				<help>If you say yes here you get support for the integrated sensors in
SiS5595 South Bridges.

This driver can also be built as a module.  If so, the module
will be called sis5595.</help>
			</entry>
			<entry name="SENSORS_DME1737">
				<label>SMSC DME1737, SCH311x and compatibles</label>
				<help>If you say yes here you get support for the hardware monitoring
and fan control features of the SMSC DME1737, SCH311x, SCH5027, and
Asus A8000 Super-I/O chips.

This driver can also be built as a module.  If so, the module
will be called dme1737.</help>
			</entry>
			<entry name="SENSORS_EMC1403">
				<label>SMSC EMC1403/23 thermal sensor</label>
				<help>If you say yes here you get support for the SMSC EMC1403/23
temperature monitoring chip.

Threshold values can be configured using sysfs.
Data from the different diodes are accessible via sysfs.</help>
			</entry>
			<entry name="SENSORS_EMC2103">
				<label>SMSC EMC2103</label>
				<help>If you say yes here you get support for the temperature
and fan sensors of the SMSC EMC2103 chips.

This driver can also be built as a module.  If so, the module
will be called emc2103.</help>
			</entry>
			<entry name="SENSORS_EMC6W201">
				<label>SMSC EMC6W201</label>
				<help>If you say yes here you get support for the SMSC EMC6W201
hardware monitoring chip.

This driver can also be built as a module.  If so, the module
will be called emc6w201.</help>
			</entry>
			<entry name="SENSORS_SMSC47M1">
				<label>SMSC LPC47M10x and compatibles</label>
				<help>If you say yes here you get support for the integrated fan
monitoring and control capabilities of the SMSC LPC47B27x,
LPC47M10x, LPC47M112, LPC47M13x, LPC47M14x, LPC47M15x,
LPC47M192, LPC47M292 and LPC47M997 chips.

The temperature and voltage sensor features of the LPC47M15x,
LPC47M192, LPC47M292 and LPC47M997 are supported by another
driver, select also &quot;SMSC LPC47M192 and compatibles&quot; below for
those.

This driver can also be built as a module.  If so, the module
will be called smsc47m1.</help>
			</entry>
			<entry name="SENSORS_SMSC47M192">
				<label>SMSC LPC47M192 and compatibles</label>
				<help>If you say yes here you get support for the temperature and
voltage sensors of the SMSC LPC47M192, LPC47M15x, LPC47M292
and LPC47M997 chips.

The fan monitoring and control capabilities of these chips
are supported by another driver, select
&quot;SMSC LPC47M10x and compatibles&quot; above. You need both drivers
if you want fan control and voltage/temperature sensor support.

This driver can also be built as a module.  If so, the module
will be called smsc47m192.</help>
			</entry>
			<entry name="SENSORS_SMSC47B397">
				<label>SMSC LPC47B397-NC</label>
				<help>If you say yes here you get support for the SMSC LPC47B397-NC
sensor chip.

This driver can also be built as a module.  If so, the module
will be called smsc47b397.</help>
			</entry>
			<entry name="SENSORS_SCH56XX_COMMON"/>
			<entry name="SENSORS_SCH5627">
				<label>SMSC SCH5627</label>
				<help>If you say yes here you get support for the hardware monitoring
features of the SMSC SCH5627 Super-I/O chip including support for
the integrated watchdog.

This driver can also be built as a module.  If so, the module
will be called sch5627.</help>
			</entry>
			<entry name="SENSORS_SCH5636">
				<label>SMSC SCH5636</label>
				<help>SMSC SCH5636 Super I/O chips include an embedded microcontroller for
hardware monitoring solutions, allowing motherboard manufacturers to
create their own custom hwmon solution based upon the SCH5636.

Currently this driver only supports the Fujitsu Theseus SCH5636 based
hwmon solution. Say yes here if you want support for the Fujitsu
Theseus' hardware monitoring features including support for the
integrated watchdog.

This driver can also be built as a module.  If so, the module
will be called sch5636.</help>
			</entry>
			<entry name="SENSORS_SMM665">
				<label>Summit Microelectronics SMM665</label>
				<help>If you say yes here you get support for the hardware monitoring
features of the Summit Microelectronics SMM665/SMM665B Six-Channel
Active DC Output Controller / Monitor.

Other supported chips are SMM465, SMM665C, SMM764, and SMM766.
Support for those chips is untested.

This driver can also be built as a module. If so, the module will
be called smm665.</help>
			</entry>
			<entry name="SENSORS_ADC128D818">
				<label>Texas Instruments ADC128D818</label>
				<help>If you say yes here you get support for the Texas Instruments
ADC128D818 System Monitor with Temperature Sensor chip.

This driver can also be built as a module. If so, the module
will be called adc128d818.</help>
			</entry>
			<entry name="SENSORS_ADS1015">
				<label>Texas Instruments ADS1015</label>
				<help>If you say yes here you get support for Texas Instruments
ADS1015/ADS1115 12/16-bit 4-input ADC device.

This driver can also be built as a module.  If so, the module
will be called ads1015.</help>
			</entry>
			<entry name="SENSORS_ADS7828">
				<label>Texas Instruments ADS7828 and compatibles</label>
				<help>If you say yes here you get support for Texas Instruments ADS7828 and
ADS7830 8-channel A/D converters. ADS7828 resolution is 12-bit, while
it is 8-bit on ADS7830.

This driver can also be built as a module.  If so, the module
will be called ads7828.</help>
			</entry>
			<entry name="SENSORS_ADS7871">
				<label>Texas Instruments ADS7871 A/D converter</label>
				<help>If you say yes here you get support for TI ADS7871 &amp; ADS7870

This driver can also be built as a module.  If so, the module
will be called ads7871.</help>
			</entry>
			<entry name="SENSORS_AMC6821">
				<label>Texas Instruments AMC6821</label>
				<help>If you say yes here you get support for the Texas Instruments
AMC6821 hardware monitoring chips.

This driver can also be build as a module.  If so, the module
will be called amc6821.</help>
			</entry>
			<entry name="SENSORS_INA209">
				<label>TI / Burr Brown INA209</label>
				<help>If you say yes here you get support for the TI / Burr Brown INA209
voltage / current / power monitor I2C interface.

This driver can also be built as a module. If so, the module will
be called ina209.</help>
			</entry>
			<entry name="SENSORS_INA2XX">
				<label>Texas Instruments INA219 and compatibles</label>
				<help>If you say yes here you get support for INA219, INA220, INA226,
INA230, and INA231 power monitor chips.

The INA2xx driver is configured for the default configuration of
the part as described in the datasheet.
Default value for Rshunt is 10 mOhms.
This driver can also be built as a module.  If so, the module
will be called ina2xx.</help>
			</entry>
			<entry name="SENSORS_INA3221">
				<label>Texas Instruments INA3221 Triple Power Monitor</label>
				<help>If you say yes here you get support for  the TI INA3221 Triple Power
Monitor.

This driver can also be built as a module.  If so, the module
will be called ina3221.</help>
			</entry>
			<entry name="SENSORS_TC74">
				<label>Microchip TC74</label>
				<help>If you say yes here you get support for Microchip TC74 single
input temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called tc74.</help>
			</entry>
			<entry name="SENSORS_THMC50">
				<label>Texas Instruments THMC50 / Analog Devices ADM1022</label>
				<help>If you say yes here you get support for Texas Instruments THMC50
sensor chips and clones: the Analog Devices ADM1022.

This driver can also be built as a module.  If so, the module
will be called thmc50.</help>
			</entry>
			<entry name="SENSORS_TMP102">
				<label>Texas Instruments TMP102</label>
				<help>If you say yes here you get support for Texas Instruments TMP102
sensor chips.

This driver can also be built as a module.  If so, the module
will be called tmp102.</help>
			</entry>
			<entry name="SENSORS_TMP103">
				<label>Texas Instruments TMP103</label>
				<help>If you say yes here you get support for Texas Instruments TMP103
sensor chips.

This driver can also be built as a module.  If so, the module
will be called tmp103.</help>
			</entry>
			<entry name="SENSORS_TMP401">
				<label>Texas Instruments TMP401 and compatibles</label>
				<help>If you say yes here you get support for Texas Instruments TMP401,
TMP411, TMP431, TMP432, TMP435, and TMP461 temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called tmp401.</help>
			</entry>
			<entry name="SENSORS_TMP421">
				<label>Texas Instruments TMP421 and compatible</label>
				<help>If you say yes here you get support for Texas Instruments TMP421,
TMP422, TMP423, TMP441, and TMP442 temperature sensor chips.

This driver can also be built as a module.  If so, the module
will be called tmp421.</help>
			</entry>
			<entry name="SENSORS_TWL4030_MADC">
				<label>Texas Instruments TWL4030 MADC Hwmon</label>
				<help>If you say yes here you get hwmon support for triton
TWL4030-MADC.

This driver can also be built as a module. If so it will be called
twl4030-madc-hwmon.</help>
			</entry>
			<entry name="SENSORS_VEXPRESS">
				<label>Versatile Express</label>
				<help>This driver provides support for hardware sensors available on
the ARM Ltd's Versatile Express platform. It can provide wide
range of information like temperature, power, energy.</help>
			</entry>
			<entry name="SENSORS_VIA_CPUTEMP">
				<label>VIA CPU temperature sensor</label>
				<help>If you say yes here you get support for the temperature
sensor inside your CPU. Supported are all known variants of
the VIA C7 and Nano.</help>
			</entry>
			<entry name="SENSORS_VIA686A">
				<label>VIA686A</label>
				<help>If you say yes here you get support for the integrated sensors in
Via 686A/B South Bridges.

This driver can also be built as a module.  If so, the module
will be called via686a.</help>
			</entry>
			<entry name="SENSORS_VT1211">
				<label>VIA VT1211</label>
				<help>If you say yes here then you get support for hardware monitoring
features of the VIA VT1211 Super-I/O chip.

This driver can also be built as a module.  If so, the module
will be called vt1211.</help>
			</entry>
			<entry name="SENSORS_VT8231">
				<label>VIA VT8231</label>
				<help>If you say yes here then you get support for the integrated sensors
in the VIA VT8231 device.

This driver can also be built as a module.  If so, the module
will be called vt8231.</help>
			</entry>
			<entry name="SENSORS_W83781D">
				<label>Winbond W83781D, W83782D, W83783S, Asus AS99127F</label>
				<help>If you say yes here you get support for the Winbond W8378x series
of sensor chips: the W83781D, W83782D and W83783S, and the similar
Asus AS99127F.

This driver can also be built as a module.  If so, the module
will be called w83781d.</help>
			</entry>
			<entry name="SENSORS_W83791D">
				<label>Winbond W83791D</label>
				<help>If you say yes here you get support for the Winbond W83791D chip.

This driver can also be built as a module.  If so, the module
will be called w83791d.</help>
			</entry>
			<entry name="SENSORS_W83792D">
				<label>Winbond W83792D</label>
				<help>If you say yes here you get support for the Winbond W83792D chip.

This driver can also be built as a module.  If so, the module
will be called w83792d.</help>
			</entry>
			<entry name="SENSORS_W83793">
				<label>Winbond W83793</label>
				<help>If you say yes here you get support for the Winbond W83793
hardware monitoring chip, including support for the integrated
watchdog.

This driver can also be built as a module.  If so, the module
will be called w83793.</help>
			</entry>
			<entry name="SENSORS_W83795">
				<label>Winbond/Nuvoton W83795G/ADG</label>
				<help>If you say yes here you get support for the Winbond W83795G and
W83795ADG hardware monitoring chip, including manual fan speed
control.

This driver can also be built as a module.  If so, the module
will be called w83795.</help>
			</entry>
			<entry name="SENSORS_W83795_FANCTRL">
				<label>Include automatic fan control support (DANGEROUS)</label>
				<help>If you say yes here, support for automatic fan speed control
will be included in the driver.

This part of the code wasn't carefully reviewed and tested yet,
so enabling this option is strongly discouraged on production
servers. Only developers and testers should enable it for the
time being.

Please also note that this option will create sysfs attribute
files which may change in the future, so you shouldn't rely
on them being stable.</help>
			</entry>
			<entry name="SENSORS_W83L785TS">
				<label>Winbond W83L785TS-S</label>
				<help>If you say yes here you get support for the Winbond W83L785TS-S
sensor chip, which is used on the Asus A7N8X, among other
motherboards.

This driver can also be built as a module.  If so, the module
will be called w83l785ts.</help>
			</entry>
			<entry name="SENSORS_W83L786NG">
				<label>Winbond W83L786NG, W83L786NR</label>
				<help>If you say yes here you get support for the Winbond W83L786NG
and W83L786NR sensor chips.

This driver can also be built as a module.  If so, the module
will be called w83l786ng.</help>
			</entry>
			<entry name="SENSORS_W83627HF">
				<label>Winbond W83627HF, W83627THF, W83637HF, W83687THF, W83697HF</label>
				<help>If you say yes here you get support for the Winbond W836X7 series
of sensor chips: the W83627HF, W83627THF, W83637HF, W83687THF and
W83697HF.

This driver can also be built as a module.  If so, the module
will be called w83627hf.</help>
			</entry>
			<entry name="SENSORS_W83627EHF">
				<label>Winbond W83627EHF/EHG/DHG/UHG, W83667HG, NCT6775F, NCT6776F</label>
				<help>If you say yes here you get support for the hardware
monitoring functionality of the Winbond W83627EHF Super-I/O chip.

This driver also supports the W83627EHG, which is the lead-free
version of the W83627EHF, and the W83627DHG, which is a similar
chip suited for specific Intel processors that use PECI such as
the Core 2 Duo. And also the W83627UHG, which is a stripped down
version of the W83627DHG (as far as hardware monitoring goes.)

This driver also supports Nuvoton W83667HG, W83667HG-B, NCT6775F
(also known as W83667HG-I), and NCT6776F.

This driver can also be built as a module.  If so, the module
will be called w83627ehf.</help>
			</entry>
			<entry name="SENSORS_WM831X">
				<label>WM831x PMICs</label>
				<help>If you say yes here you get support for the hardware
monitoring functionality of the Wolfson Microelectronics
WM831x series of PMICs.

This driver can also be built as a module.  If so, the module
will be called wm831x-hwmon.</help>
			</entry>
			<entry name="SENSORS_WM8350">
				<label>Wolfson Microelectronics WM835x</label>
				<help>If you say yes here you get support for the hardware
monitoring features of the WM835x series of PMICs.

This driver can also be built as a module.  If so, the module
will be called wm8350-hwmon.</help>
			</entry>
			<entry name="SENSORS_ULTRA45">
				<label>Sun Ultra45 PIC16F747</label>
				<help>This driver provides support for the Ultra45 workstation environmental
sensors.</help>
			</entry>
			<entry name="SENSORS_ACPI_POWER">
				<label>ACPI 4.0 power meter</label>
				<help>This driver exposes ACPI 4.0 power meters as hardware monitoring
devices.  Say Y (or M) if you have a computer with ACPI 4.0 firmware
and a power meter.

To compile this driver as a module, choose M here:
the module will be called acpi_power_meter.</help>
			</entry>
			<entry name="SENSORS_ATK0110">
				<label>ASUS ATK0110</label>
				<help>If you say yes here you get support for the ACPI hardware
monitoring interface found in many ASUS motherboards. This
driver will provide readings of fans, voltages and temperatures
through the system firmware.

This driver can also be built as a module. If so, the module
will be called asus_atk0110.</help>
			</entry>
			<entry name="THERMAL">
				<label>Generic Thermal sysfs driver</label>
				<help>Generic Thermal Sysfs driver offers a generic mechanism for
thermal management. Usually it's made up of one or more thermal
zone and cooling device.
Each thermal zone contains its own temperature, trip points,
cooling devices.
All platforms with ACPI thermal support can use this driver.
If you want this support, you should say Y or M here.</help>
			</entry>
			<entry name="THERMAL_HWMON">
				<label>Expose thermal sensors as hwmon device</label>
				<help>In case a sensor is registered with the thermal
framework, this option will also register it
as a hwmon. The sensor will then have the common
hwmon sysfs interface.

Say 'Y' here if you want all thermal sensors to
have hwmon sysfs interface too.</help>
			</entry>
			<entry name="THERMAL_OF">
				<label>APIs to parse thermal data out of device tree</label>
				<help>This options provides helpers to add the support to
read and parse thermal data definitions out of the
device tree blob.

Say 'Y' here if you need to build thermal infrastructure
based on device tree.</help>
			</entry>
			<entry name="THERMAL_WRITABLE_TRIPS">
				<label>Enable writable trip points</label>
				<help>This option allows the system integrator to choose whether
trip temperatures can be changed from userspace. The
writable trips need to be specified when setting up the
thermal zone but the choice here takes precedence.

Say 'Y' here if you would like to allow userspace tools to
change trip temperatures.</help>
			</entry>
			<entry name="THERMAL_DEFAULT_GOV_STEP_WISE">
				<label>step_wise</label>
				<help>Use the step_wise governor as default. This throttles the
devices one step at a time.</help>
			</entry>
			<entry name="THERMAL_DEFAULT_GOV_FAIR_SHARE">
				<label>fair_share</label>
				<help>Use the fair_share governor as default. This throttles the
devices based on their 'contribution' to a zone. The
contribution should be provided through platform data.</help>
			</entry>
			<entry name="THERMAL_DEFAULT_GOV_USER_SPACE">
				<label>user_space</label>
				<help>Select this if you want to let the user space manage the
platform thermals.</help>
			</entry>
			<entry name="THERMAL_DEFAULT_GOV_POWER_ALLOCATOR">
				<label>power_allocator</label>
				<help>Select this if you want to control temperature based on
system and device power allocation. This governor can only
operate on cooling devices that implement the power API.</help>
			</entry>
			<entry name="THERMAL_GOV_FAIR_SHARE">
				<label>Fair-share thermal governor</label>
				<help>Enable this to manage platform thermals using fair-share governor.</help>
			</entry>
			<entry name="THERMAL_GOV_STEP_WISE">
				<label>Step_wise thermal governor</label>
				<help>Enable this to manage platform thermals using a simple linear
governor.</help>
			</entry>
			<entry name="THERMAL_GOV_BANG_BANG">
				<label>Bang Bang thermal governor</label>
				<help>Enable this to manage platform thermals using bang bang governor.

Say 'Y' here if you want to use two point temperature regulation
used for fans without throttling.  Some fan drivers depend on this
governor to be enabled (e.g. acerhdf).</help>
			</entry>
			<entry name="THERMAL_GOV_USER_SPACE">
				<label>User_space thermal governor</label>
				<help>Enable this to let the user space manage the platform thermals.</help>
			</entry>
			<entry name="THERMAL_GOV_POWER_ALLOCATOR">
				<label>Power allocator thermal governor</label>
				<help>Enable this to manage platform thermals by dynamically
allocating and limiting power to devices.</help>
			</entry>
			<entry name="CPU_THERMAL">
				<label>generic cpu cooling support</label>
				<help>This implements the generic cpu cooling mechanism through frequency
reduction. An ACPI version of this already exists
(drivers/acpi/processor_thermal.c).
This will be useful for platforms using the generic thermal interface
and not the ACPI interface.

If you want this support, you should say Y here.</help>
			</entry>
			<entry name="CLOCK_THERMAL">
				<label>Generic clock cooling support</label>
				<help>This entry implements the generic clock cooling mechanism through
frequency clipping. Typically used to cool off co-processors. The
device that is configured to use this cooling mechanism will be
controlled to reduce clock frequency whenever temperature is high.</help>
			</entry>
			<entry name="DEVFREQ_THERMAL">
				<label>Generic device cooling support</label>
				<help>This implements the generic devfreq cooling mechanism through
frequency reduction for devices using devfreq.

This will throttle the device by limiting the maximum allowed DVFS
frequency corresponding to the cooling level.

In order to use the power extensions of the cooling device,
devfreq should use the simple_ondemand governor.

If you want this support, you should say Y here.</help>
			</entry>
			<entry name="THERMAL_EMULATION">
				<label>Thermal emulation mode support</label>
				<help>Enable this option to make a emul_temp sysfs node in thermal zone
directory to support temperature emulation. With emulation sysfs node,
user can manually input temperature and test the different trip
threshold behaviour for simulation purpose.

WARNING: Be careful while enabling this option on production systems,
because userland can easily disable the thermal policy by simply
flooding this sysfs node with low temperature values.</help>
			</entry>
			<entry name="HISI_THERMAL">
				<label>Hisilicon thermal driver</label>
				<help>Enable this to plug hisilicon's thermal sensor driver into the Linux
thermal framework. cpufreq is used as the cooling device to throttle
CPUs when the passive trip is crossed.</help>
			</entry>
			<entry name="IMX_THERMAL">
				<label>Temperature sensor driver for Freescale i.MX SoCs</label>
				<help>Support for Temperature Monitor (TEMPMON) found on Freescale i.MX SoCs.
It supports one critical trip point and one passive trip point.  The
cpufreq is used as the cooling device to throttle CPUs when the
passive trip is crossed.</help>
			</entry>
			<entry name="SPEAR_THERMAL">
				<label>SPEAr thermal sensor driver</label>
				<help>Enable this to plug the SPEAr thermal sensor driver into the Linux
thermal framework.</help>
			</entry>
			<entry name="ROCKCHIP_THERMAL">
				<label>Rockchip thermal driver</label>
				<help>Rockchip thermal driver provides support for Temperature sensor
ADC (TS-ADC) found on Rockchip SoCs. It supports one critical
trip point. Cpufreq is used as the cooling device and will throttle
CPUs when the Temperature crosses the passive trip point.</help>
			</entry>
			<entry name="RCAR_THERMAL">
				<label>Renesas R-Car thermal driver</label>
				<help>Enable this to plug the R-Car thermal sensor driver into the Linux
thermal framework.</help>
			</entry>
			<entry name="KIRKWOOD_THERMAL">
				<label>Temperature sensor on Marvell Kirkwood SoCs</label>
				<help>Support for the Kirkwood thermal sensor driver into the Linux thermal
framework. Only kirkwood 88F6282 and 88F6283 have this sensor.</help>
			</entry>
			<entry name="DOVE_THERMAL">
				<label>Temperature sensor on Marvell Dove SoCs</label>
				<help>Support for the Dove thermal sensor driver in the Linux thermal
framework.</help>
			</entry>
			<entry name="DB8500_THERMAL">
				<label>DB8500 thermal management</label>
				<help>Adds DB8500 thermal management implementation according to the thermal
management framework. A thermal zone with several trip points will be
created. Cooling devices can be bound to the trip points to cool this
thermal zone if trip points reached.</help>
			</entry>
			<entry name="ARMADA_THERMAL">
				<label>Armada 370/XP thermal management</label>
				<help>Enable this option if you want to have support for thermal management
controller present in Armada 370 and Armada XP SoC.</help>
			</entry>
			<entry name="DB8500_CPUFREQ_COOLING">
				<label>DB8500 cpufreq cooling</label>
				<help>Adds DB8500 cpufreq cooling devices, and these cooling devices can be
bound to thermal zone trip points. When a trip point reached, the
bound cpufreq cooling device turns active to set CPU frequency low to
cool down the CPU.</help>
			</entry>
			<entry name="INTEL_POWERCLAMP">
				<label>Intel PowerClamp idle injection driver</label>
				<help>Enable this to enable Intel PowerClamp idle injection driver. This
enforce idle time which results in more package C-state residency. The
user interface is exposed via generic thermal framework.</help>
			</entry>
			<entry name="X86_PKG_TEMP_THERMAL">
				<label>X86 package temperature thermal driver</label>
				<help>Enable this to register CPU digital sensor for package temperature as
thermal zone. Each package will have its own thermal zone. There are
two trip points which can be set by user to get notifications via thermal
notification methods.</help>
			</entry>
			<entry name="INTEL_SOC_DTS_IOSF_CORE">
				<help>This is becoming a common feature for Intel SoCs to expose the additional
digital temperature sensors (DTSs) using side band interface (IOSF). This
implements the common set of helper functions to register, get temperature
and get/set thresholds on DTSs.</help>
			</entry>
			<entry name="INTEL_SOC_DTS_THERMAL">
				<label>Intel SoCs DTS thermal driver</label>
				<help>Enable this to register Intel SoCs (e.g. Bay Trail) platform digital
temperature sensor (DTS). These SoCs have two additional DTSs in
addition to DTSs on CPU cores. Each DTS will be registered as a
thermal zone. There are two trip points. One of the trip point can
be set by user mode programs to get notifications via Linux thermal
notification methods.The other trip is a critical trip point, which
was set by the driver based on the TJ MAX temperature.</help>
			</entry>
			<entry name="INTEL_QUARK_DTS_THERMAL">
				<label>Intel Quark DTS thermal driver</label>
				<help>Enable this to register Intel Quark SoC (e.g. X1000) platform digital
temperature sensor (DTS). For X1000 SoC, it has one on-die DTS.
The DTS will be registered as a thermal zone. There are two trip points:
hot &amp; critical. The critical trip point default value is set by
underlying BIOS/Firmware.</help>
			</entry>
			<container name="ACPI_INT340X_thermal_drivers">
				<label>ACPI INT340X thermal drivers</label>
				<entry name="INT340X_THERMAL">
					<label>ACPI INT340X thermal drivers</label>
					<help>Newer laptops and tablets that use ACPI may have thermal sensors and
other devices with thermal control capabilities outside the core
CPU/SOC, for thermal safety reasons.
They are exposed for the OS to use via the INT3400 ACPI device object
as the master, and INT3401~INT340B ACPI device objects as the slaves.
Enable this to expose the temperature information and cooling ability
from these objects to userspace via the normal thermal framework.
This means that a wide range of applications and GUI widgets can show
the information to the user or use this information for making
decisions. For example, the Intel Thermal Daemon can use this
information to allow the user to select his laptop to run without
turning on the fans.</help>
				</entry>
				<entry name="ACPI_THERMAL_REL"/>
				<entry name="INT3406_THERMAL">
					<label>ACPI INT3406 display thermal driver</label>
					<help>The display thermal device represents the LED/LCD display panel
that may or may not include touch support. The main function of
the display thermal device is to allow control of the display
brightness in order to address a thermal condition or to reduce
power consumed by display device.</help>
				</entry>
			</container>
			<entry name="INTEL_PCH_THERMAL">
				<label>Intel PCH Thermal Reporting Driver</label>
				<help>Enable this to support thermal reporting on certain intel PCHs.
Thermal reporting device will provide temperature reading,
programmable trip points and other information.</help>
			</entry>
			<entry name="MTK_THERMAL">
				<label>Temperature sensor driver for mediatek SoCs</label>
				<help>Enable this option if you want to have support for thermal management
controller present in Mediatek SoCs</help>
			</entry>
			<container name="Texas_Instruments_thermal_drivers">
				<label>Texas Instruments thermal drivers</label>
				<entry name="TI_SOC_THERMAL">
					<label>Texas Instruments SoCs temperature sensor driver</label>
					<help>If you say yes here you get support for the Texas Instruments
OMAP4460+ on die bandgap temperature sensor support. The register
set is part of system control module.

This includes alert interrupts generation and also the TSHUT
support.</help>
				</entry>
				<entry name="TI_THERMAL">
					<label>Texas Instruments SoCs thermal framework support</label>
					<help>If you say yes here you want to get support for generic thermal
framework for the Texas Instruments on die bandgap temperature sensor.

This includes trip points definitions, extrapolation rules and
CPU cooling device bindings.</help>
				</entry>
				<entry name="OMAP3_THERMAL">
					<label>Texas Instruments OMAP3 thermal support</label>
					<help>If you say yes here you get thermal support for the Texas Instruments
OMAP3 SoC family. The current chips supported are:
- OMAP3430

OMAP3 chips normally don't need thermal management, and sensors in
this generation are not accurate, nor they are very close to
the important hotspots.

Say 'N' here.</help>
				</entry>
				<entry name="OMAP4_THERMAL">
					<label>Texas Instruments OMAP4 thermal support</label>
					<help>If you say yes here you get thermal support for the Texas Instruments
OMAP4 SoC family. The current chip supported are:
- OMAP4430
- OMAP4460
- OMAP4470

This includes alert interrupts generation and also the TSHUT
support.</help>
				</entry>
				<entry name="OMAP5_THERMAL">
					<label>Texas Instruments OMAP5 thermal support</label>
					<help>If you say yes here you get thermal support for the Texas Instruments
OMAP5 SoC family. The current chip supported are:
- OMAP5430

This includes alert interrupts generation and also the TSHUT
support.</help>
				</entry>
				<entry name="DRA752_THERMAL">
					<label>Texas Instruments DRA752 thermal support</label>
					<help>If you say yes here you get thermal support for the Texas Instruments
DRA752 SoC family. The current chip supported are:
- DRA752

This includes alert interrupts generation and also the TSHUT
support.
</help>
				</entry>
			</container>
			<container name="Samsung_thermal_drivers">
				<label>Samsung thermal drivers</label>
				<entry name="EXYNOS_THERMAL">
					<label>Exynos thermal management unit driver</label>
					<help>If you say yes here you get support for the TMU (Thermal Management
Unit) driver for SAMSUNG EXYNOS series of SoCs. This driver initialises
the TMU, reports temperature and handles cooling action if defined.
This driver uses the Exynos core thermal APIs and TMU configuration
data from the supported SoCs.
</help>
				</entry>
			</container>
			<container name="STMicroelectronics_thermal_drivers">
				<label>STMicroelectronics thermal drivers</label>
				<entry name="ST_THERMAL">
					<label>Thermal sensors on STMicroelectronics STi series of SoCs</label>
					<help>Support for thermal sensors on STMicroelectronics STi series of SoCs.</help>
				</entry>
				<entry name="ST_THERMAL_SYSCFG">
					<label>STi series syscfg register access based thermal sensors</label>
				</entry>
				<entry name="ST_THERMAL_MEMMAP">
					<label>STi series memory mapped access based thermal sensors</label>
				</entry>
			</container>
			<entry name="TANGO_THERMAL">
				<label>Tango thermal management</label>
				<help>Enable the Tango thermal driver, which supports the primitive
temperature sensor embedded in Tango chips since the SMP8758.
This sensor only generates a 1-bit signal to indicate whether
the die temperature exceeds a programmable threshold.</help>
			</entry>
			<container name="NVIDIA_Tegra_thermal_drivers">
				<label>NVIDIA Tegra thermal drivers</label>
				<entry name="TEGRA_SOCTHERM">
					<label>Tegra SOCTHERM thermal management</label>
					<help>Enable this option for integrated thermal management support on NVIDIA
Tegra systems-on-chip. The driver supports four thermal zones
(CPU, GPU, MEM, PLLX). Cooling devices can be bound to the thermal
zones to manage temperatures. This option is also required for the
emergency thermal reset (thermtrip) feature to function.</help>
				</entry>
			</container>
			<entry name="QCOM_SPMI_TEMP_ALARM">
				<label>Qualcomm SPMI PMIC Temperature Alarm</label>
				<help>This enables a thermal sysfs driver for Qualcomm plug-and-play (QPNP)
PMIC devices. It shows up in sysfs as a thermal sensor with multiple
trip points. The temperature reported by the thermal sensor reflects the
real time die temperature if an ADC is present or an estimate of the
temperature based upon the over temperature stage value.</help>
			</entry>
			<entry name="GENERIC_ADC_THERMAL">
				<label>Generic ADC based thermal sensor</label>
				<help>This enabled a thermal sysfs driver for the temperature sensor
which is connected to the General Purpose ADC. The ADC channel
is read via IIO framework and the channel information is provided
to this driver. This driver reports the temperature by reading ADC
channel and converts it to temperature based on lookup table.</help>
			</entry>
			<entry name="WATCHDOG">
				<label>Watchdog Timer Support</label>
				<help>If you say Y here (and to one of the following options) and create a
character special file /dev/watchdog with major number 10 and minor
number 130 using mknod (&quot;man mknod&quot;), you will get a watchdog, i.e.:
subsequently opening the file and then failing to write to it for
longer than 1 minute will result in rebooting the machine. This
could be useful for a networked machine that needs to come back
on-line as fast as possible after a lock-up. There's both a watchdog
implementation entirely in software (which can sometimes fail to
reboot the machine) and a driver for hardware watchdog boards, which
are more robust and can also keep track of the temperature inside
your computer. For details, read
&lt;file:Documentation/watchdog/watchdog-api.txt&gt; in the kernel source.

The watchdog is usually used together with the watchdog daemon
which is available from
&lt;ftp://ibiblio.org/pub/Linux/system/daemons/watchdog/&gt;. This daemon can
also monitor NFS connections and can reboot the machine when the process
table is full.

If unsure, say N.</help>
			</entry>
			<entry name="WATCHDOG_CORE">
				<label>WatchDog Timer Driver Core</label>
				<help>Say Y here if you want to use the new watchdog timer driver core.
This driver provides a framework for all watchdog timer drivers
and gives them the /dev/watchdog interface (and later also the
sysfs interface).</help>
			</entry>
			<entry name="WATCHDOG_NOWAYOUT">
				<label>Disable watchdog shutdown on close</label>
				<help>The default watchdog behaviour (which you get if you say N here) is
to stop the timer if the process managing it closes the file
/dev/watchdog. It's always remotely possible that this process might
get killed. If you say Y here, the watchdog cannot be stopped once
it has been started.</help>
			</entry>
			<entry name="WATCHDOG_SYSFS">
				<label>Read different watchdog information through sysfs</label>
				<help>Say Y here if you want to enable watchdog device status read through
sysfs attributes.</help>
			</entry>
			<entry name="SOFT_WATCHDOG">
				<label>Software watchdog</label>
				<help>A software monitoring watchdog. This will fail to reboot your system
from some situations that the hardware watchdog will recover
from. Equally it's a lot cheaper to install.

To compile this driver as a module, choose M here: the
module will be called softdog.</help>
			</entry>
			<entry name="DA9052_WATCHDOG">
				<label>Dialog DA9052 Watchdog</label>
				<help>Support for the watchdog in the DA9052 PMIC. Watchdog trigger
cause system reset.

Say Y here to include support for the DA9052 watchdog.
Alternatively say M to compile the driver as a module,
which will be called da9052_wdt.</help>
			</entry>
			<entry name="DA9055_WATCHDOG">
				<label>Dialog Semiconductor DA9055 Watchdog</label>
				<help>If you say yes here you get support for watchdog on the Dialog
Semiconductor DA9055 PMIC.

This driver can also be built as a module.  If so, the module
will be called da9055_wdt.</help>
			</entry>
			<entry name="DA9063_WATCHDOG">
				<label>Dialog DA9063 Watchdog</label>
				<help>Support for the watchdog in the DA9063 PMIC.

This driver can be built as a module. The module name is da9063_wdt.</help>
			</entry>
			<entry name="DA9062_WATCHDOG">
				<label>Dialog DA9062 Watchdog</label>
				<help>Support for the watchdog in the DA9062 PMIC.

This driver can be built as a module. The module name is da9062_wdt.</help>
			</entry>
			<entry name="GPIO_WATCHDOG">
				<label>Watchdog device controlled through GPIO-line</label>
				<help>If you say yes here you get support for watchdog device
controlled through GPIO-line.</help>
			</entry>
			<entry name="GPIO_WATCHDOG_ARCH_INITCALL">
				<label>Register the watchdog as early as possible</label>
				<help>In some situations, the default initcall level (module_init)
in not early enough in the boot process to avoid the watchdog
to be triggered.
If you say yes here, the initcall level would be raised to
arch_initcall.
If in doubt, say N.</help>
			</entry>
			<entry name="MENF21BMC_WATCHDOG">
				<label>MEN 14F021P00 BMC Watchdog</label>
				<help>Say Y here to include support for the MEN 14F021P00 BMC Watchdog.

This driver can also be built as a module. If so the module
will be called menf21bmc_wdt.</help>
			</entry>
			<entry name="TANGOX_WATCHDOG">
				<label>Sigma Designs SMP86xx/SMP87xx watchdog</label>
				<help>Support for the watchdog in Sigma Designs SMP86xx (tango3)
and SMP87xx (tango4) family chips.

This driver can be built as a module. The module name is tangox_wdt.</help>
			</entry>
			<entry name="WM831X_WATCHDOG">
				<label>WM831x watchdog</label>
				<help>Support for the watchdog in the WM831x AudioPlus PMICs.  When
the watchdog triggers the system will be reset.</help>
			</entry>
			<entry name="WM8350_WATCHDOG">
				<label>WM8350 watchdog</label>
				<help>Support for the watchdog in the WM8350 AudioPlus PMIC.  When
the watchdog triggers the system will be reset.</help>
			</entry>
			<entry name="XILINX_WATCHDOG">
				<label>Xilinx Watchdog timer</label>
				<help>Watchdog driver for the xps_timebase_wdt ip core.

To compile this driver as a module, choose M here: the
module will be called of_xilinx_wdt.</help>
			</entry>
			<entry name="ZIIRAVE_WATCHDOG">
				<label>Zodiac RAVE Watchdog Timer</label>
				<help>Watchdog driver for the Zodiac Aerospace RAVE Switch Watchdog
Processor.

To compile this driver as a module, choose M here: the
module will be called ziirave_wdt.</help>
			</entry>
			<entry name="ARM_SP805_WATCHDOG">
				<label>ARM SP805 Watchdog</label>
				<help>ARM Primecell SP805 Watchdog timer. This will reboot your system when
the timeout is reached.</help>
			</entry>
			<entry name="ARM_SBSA_WATCHDOG">
				<label>ARM SBSA Generic Watchdog</label>
				<help>ARM SBSA Generic Watchdog has two stage timeouts:
the first signal (WS0) is for alerting the system by interrupt,
the second one (WS1) is a real hardware reset.
More details: ARM DEN0029B - Server Base System Architecture (SBSA)

This driver can operate ARM SBSA Generic Watchdog as a single stage
or a two stages watchdog, it depends on the module parameter &quot;action&quot;.

Note: the maximum timeout in the two stages mode is half of that in
the single stage mode.

To compile this driver as module, choose M here: The module
will be called sbsa_gwdt.</help>
			</entry>
			<entry name="ASM9260_WATCHDOG">
				<label>Alphascale ASM9260 watchdog</label>
				<help>Watchdog timer embedded into Alphascale asm9260 chips. This will reboot your
system when the timeout is reached.</help>
			</entry>
			<entry name="AT91RM9200_WATCHDOG">
				<label>AT91RM9200 watchdog</label>
				<help>Watchdog timer embedded into AT91RM9200 chips. This will reboot your
system when the timeout is reached.</help>
			</entry>
			<entry name="AT91SAM9X_WATCHDOG">
				<label>AT91SAM9X / AT91CAP9 watchdog</label>
				<help>Watchdog timer embedded into AT91SAM9X and AT91CAP9 chips. This will
reboot your system when the timeout is reached.</help>
			</entry>
			<entry name="SAMA5D4_WATCHDOG">
				<label>Atmel SAMA5D4 Watchdog Timer</label>
				<help>Atmel SAMA5D4 watchdog timer is embedded into SAMA5D4 chips.
Its Watchdog Timer Mode Register can be written more than once.
This will reboot your system when the timeout is reached.</help>
			</entry>
			<entry name="CADENCE_WATCHDOG">
				<label>Cadence Watchdog Timer</label>
				<help>Say Y here if you want to include support for the watchdog
timer in the Xilinx Zynq.</help>
			</entry>
			<entry name="_21285_WATCHDOG">
				<label>DC21285 watchdog</label>
				<help>The Intel Footbridge chip contains a built-in watchdog circuit. Say Y
here if you wish to use this. Alternatively say M to compile the
driver as a module, which will be called wdt285.

This driver does not work on all machines. In particular, early CATS
boards have hardware problems that will cause the machine to simply
lock up if the watchdog fires.

&quot;If in doubt, leave it out&quot; - say N.</help>
			</entry>
			<entry name="_977_WATCHDOG">
				<label>NetWinder WB83C977 watchdog</label>
				<help>Say Y here to include support for the WB977 watchdog included in
NetWinder machines. Alternatively say M to compile the driver as
a module, which will be called wdt977.

Not sure? It's safe to say N.</help>
			</entry>
			<entry name="IXP4XX_WATCHDOG">
				<label>IXP4xx Watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in the Intel IXP4xx network processors. This driver can
be built as a module by choosing M. The module will
be called ixp4xx_wdt.

Note: The internal IXP4xx watchdog does a soft CPU reset
which doesn't reset any peripherals. There are circumstances
where the watchdog will fail to reset the board correctly
(e.g., if the boot ROM is in an unreadable state).

Say N if you are unsure.</help>
			</entry>
			<entry name="KS8695_WATCHDOG">
				<label>KS8695 watchdog</label>
				<help>Watchdog timer embedded into KS8695 processor. This will reboot your
system when the timeout is reached.</help>
			</entry>
			<entry name="HAVE_S3C2410_WATCHDOG">
				<help>This will include watchdog timer support for Samsung SoCs. If
you want to include watchdog support for any machine, kindly
select this in the respective mach-XXXX/Kconfig file.</help>
			</entry>
			<entry name="S3C2410_WATCHDOG">
				<label>S3C2410 Watchdog</label>
				<help>Watchdog timer block in the Samsung SoCs. This will reboot
the system when the timer expires with the watchdog enabled.

The driver is limited by the speed of the system's PCLK
signal, so with reasonably fast systems (PCLK around 50-66MHz)
then watchdog intervals of over approximately 20seconds are
unavailable.

The driver can be built as a module by choosing M, and will
be called s3c2410_wdt</help>
			</entry>
			<entry name="SA1100_WATCHDOG">
				<label>SA1100/PXA2xx watchdog</label>
				<help>Watchdog timer embedded into SA11x0 and PXA2xx chips. This will
reboot your system when timeout is reached.

NOTE: once enabled, this timer cannot be disabled.

To compile this driver as a module, choose M here: the
module will be called sa1100_wdt.</help>
			</entry>
			<entry name="DW_WATCHDOG">
				<label>Synopsys DesignWare watchdog</label>
				<help>Say Y here if to include support for the Synopsys DesignWare
watchdog timer found in many chips.
To compile this driver as a module, choose M here: the
module will be called dw_wdt.</help>
			</entry>
			<entry name="EP93XX_WATCHDOG">
				<label>EP93xx Watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
embedded in the Cirrus Logic EP93xx family of devices.

To compile this driver as a module, choose M here: the
module will be called ep93xx_wdt.</help>
			</entry>
			<entry name="OMAP_WATCHDOG">
				<label>OMAP Watchdog</label>
				<help>Support for TI OMAP1610/OMAP1710/OMAP2420/OMAP3430/OMAP4430 watchdog.  Say 'Y'
here to enable the OMAP1610/OMAP1710/OMAP2420/OMAP3430/OMAP4430 watchdog timer.</help>
			</entry>
			<entry name="PNX4008_WATCHDOG">
				<label>LPC32XX Watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in the LPC32XX processor.
This driver can be built as a module by choosing M. The module
will be called pnx4008_wdt.

Say N if you are unsure.</help>
			</entry>
			<entry name="IOP_WATCHDOG">
				<label>IOP Watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in the Intel IOP3XX &amp; IOP13XX I/O Processors.  This driver can
be built as a module by choosing M. The module will
be called iop_wdt.

Note: The IOP13XX watchdog does an Internal Bus Reset which will
affect both cores and the peripherals of the IOP.  The ATU-X
and/or ATUe configuration registers will remain intact, but if
operating as an Root Complex and/or Central Resource, the PCI-X
and/or PCIe busses will also be reset.  THIS IS A VERY BIG HAMMER.</help>
			</entry>
			<entry name="DAVINCI_WATCHDOG">
				<label>DaVinci watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in the DaVinci DM644x/DM646x or Keystone processors.
To compile this driver as a module, choose M here: the
module will be called davinci_wdt.

NOTE: once enabled, this timer cannot be disabled.
Say N if you are unsure.</help>
			</entry>
			<entry name="ORION_WATCHDOG">
				<label>Orion watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in the Marvell Orion5x and Kirkwood ARM SoCs.
To compile this driver as a module, choose M here: the
module will be called orion_wdt.</help>
			</entry>
			<entry name="RN5T618_WATCHDOG">
				<label>Ricoh RN5T618 watchdog</label>
				<help>If you say yes here you get support for watchdog on the Ricoh
RN5T618 PMIC.

This driver can also be built as a module.  If so, the module
will be called rn5t618_wdt.</help>
			</entry>
			<entry name="SUNXI_WATCHDOG">
				<label>Allwinner SoCs watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Allwinner SoCs.
To compile this driver as a module, choose M here: the
module will be called sunxi_wdt.</help>
			</entry>
			<entry name="COH901327_WATCHDOG">
				<label>ST-Ericsson COH 901 327 watchdog</label>
				<help>Say Y here to include Watchdog timer support for the
watchdog embedded into the ST-Ericsson U300 series platforms.
This watchdog is used to reset the system and thus cannot be
compiled as a module.</help>
			</entry>
			<entry name="TWL4030_WATCHDOG">
				<label>TWL4030 Watchdog</label>
				<help>Support for TI TWL4030 watchdog.  Say 'Y' here to enable the
watchdog timer support for TWL4030 chips.</help>
			</entry>
			<entry name="STMP3XXX_RTC_WATCHDOG">
				<label>Freescale STMP3XXX &amp; i.MX23/28 watchdog</label>
				<help>Say Y here to include support for the watchdog timer inside
the RTC for the STMP37XX/378X or i.MX23/28 SoC.
To compile this driver as a module, choose M here: the
module will be called stmp3xxx_rtc_wdt.</help>
			</entry>
			<entry name="NUC900_WATCHDOG">
				<label>Nuvoton NUC900 watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
for the Nuvoton NUC900 series SoCs.
To compile this driver as a module, choose M here: the
module will be called nuc900_wdt.</help>
			</entry>
			<entry name="TS4800_WATCHDOG">
				<label>TS-4800 Watchdog</label>
				<help>Technologic Systems TS-4800 has watchdog timer implemented in
an external FPGA. Say Y here if you want to support for the
watchdog timer on TS-4800 board.</help>
			</entry>
			<entry name="TS72XX_WATCHDOG">
				<label>TS-72XX SBC Watchdog</label>
				<help>Technologic Systems TS-7200, TS-7250 and TS-7260 boards have
watchdog timer implemented in a external CPLD chip. Say Y here
if you want to support for the watchdog timer on TS-72XX boards.

To compile this driver as a module, choose M here: the
module will be called ts72xx_wdt.</help>
			</entry>
			<entry name="MAX63XX_WATCHDOG">
				<label>Max63xx watchdog</label>
				<help>Support for memory mapped max63{69,70,71,72,73,74} watchdog timer.</help>
			</entry>
			<entry name="MAX77620_WATCHDOG">
				<label>Maxim Max77620 Watchdog Timer</label>
				<help>This is the driver for the Max77620 watchdog timer.
Say 'Y' here to enable the watchdog timer support for
MAX77620 chips. To compile this driver as a module,
choose M here: the module will be called max77620_wdt.</help>
			</entry>
			<entry name="IMX2_WDT">
				<label>IMX2+ Watchdog</label>
				<help>This is the driver for the hardware watchdog
on the Freescale IMX2 and later processors.
If you have one of these processors and wish to have
watchdog support enabled, say Y, otherwise say N.

To compile this driver as a module, choose M here: the
module will be called imx2_wdt.</help>
			</entry>
			<entry name="UX500_WATCHDOG">
				<label>ST-Ericsson Ux500 watchdog</label>
				<help>Say Y here to include Watchdog timer support for the watchdog
existing in the prcmu of ST-Ericsson Ux500 series platforms.

To compile this driver as a module, choose M here: the
module will be called ux500_wdt.</help>
			</entry>
			<entry name="RETU_WATCHDOG">
				<label>Retu watchdog</label>
				<help>Retu watchdog driver for Nokia Internet Tablets (770, N800,
N810). At least on N800 the watchdog cannot be disabled, so
this driver is essential and you should enable it.

To compile this driver as a module, choose M here: the
module will be called retu_wdt.</help>
			</entry>
			<entry name="MOXART_WDT">
				<label>MOXART watchdog</label>
				<help>Say Y here to include Watchdog timer support for the watchdog
existing on the MOXA ART SoC series platforms.

To compile this driver as a module, choose M here: the
module will be called moxart_wdt.</help>
			</entry>
			<entry name="SIRFSOC_WATCHDOG">
				<label>SiRFSOC watchdog</label>
				<help>Support for CSR SiRFprimaII and SiRFatlasVI watchdog. When
the watchdog triggers the system will be reset.</help>
			</entry>
			<entry name="ST_LPC_WATCHDOG">
				<label>STMicroelectronics LPC Watchdog</label>
				<help>Say Y here to include STMicroelectronics Low Power Controller
(LPC) based Watchdog timer support.

To compile this driver as a module, choose M here: the
module will be called st_lpc_wdt.</help>
			</entry>
			<entry name="TEGRA_WATCHDOG">
				<label>Tegra watchdog</label>
				<help>Say Y here to include support for the watchdog timer
embedded in NVIDIA Tegra SoCs.

To compile this driver as a module, choose M here: the
module will be called tegra_wdt.</help>
			</entry>
			<entry name="QCOM_WDT">
				<label>QCOM watchdog</label>
				<help>Say Y here to include Watchdog timer support for the watchdog found
on QCOM chipsets.  Currently supported targets are the MSM8960,
APQ8064, and IPQ8064.

To compile this driver as a module, choose M here: the
module will be called qcom_wdt.</help>
			</entry>
			<entry name="MESON_GXBB_WATCHDOG">
				<label>Amlogic Meson GXBB SoCs watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Amlogic Meson GXBB SoCs.
To compile this driver as a module, choose M here: the
module will be called meson_gxbb_wdt.</help>
			</entry>
			<entry name="MESON_WATCHDOG">
				<label>Amlogic Meson SoCs watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Amlogic Meson SoCs.
To compile this driver as a module, choose M here: the
module will be called meson_wdt.</help>
			</entry>
			<entry name="MEDIATEK_WATCHDOG">
				<label>Mediatek SoCs watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Mediatek SoCs.
To compile this driver as a module, choose M here: the
module will be called mtk_wdt.</help>
			</entry>
			<entry name="DIGICOLOR_WATCHDOG">
				<label>Conexant Digicolor SoCs watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Conexant Digicolor SoCs.
To compile this driver as a module, choose M here: the
module will be called digicolor_wdt.</help>
			</entry>
			<entry name="LPC18XX_WATCHDOG">
				<label>LPC18xx/43xx Watchdog</label>
				<help>Say Y here if to include support for the watchdog timer
in NXP LPC SoCs family, which includes LPC18xx/LPC43xx
processors.
To compile this driver as a module, choose M here: the
module will be called lpc18xx_wdt.</help>
			</entry>
			<entry name="ATLAS7_WATCHDOG">
				<label>CSRatlas7 watchdog</label>
				<help>Say Y here to include Watchdog timer support for the watchdog
existing on the CSRatlas7 series platforms.

To compile this driver as a module, choose M here: the
module will be called atlas7_wdt.</help>
			</entry>
			<entry name="RENESAS_WDT">
				<label>Renesas WDT Watchdog</label>
				<help>This driver adds watchdog support for the integrated watchdogs in the
Renesas R-Car and other SH-Mobile SoCs (usually named RWDT or SWDT).</help>
			</entry>
			<entry name="ASPEED_WATCHDOG">
				<label>Aspeed 2400 watchdog support</label>
				<help>Say Y here to include support for the watchdog timer
in Apseed BMC SoCs.

This driver is required to reboot the SoC.

To compile this driver as a module, choose M here: the
module will be called aspeed_wdt.</help>
			</entry>
			<entry name="AT32AP700X_WDT">
				<label>AT32AP700x watchdog</label>
				<help>Watchdog timer embedded into AT32AP700x devices. This will reboot
your system when the timeout is reached.</help>
			</entry>
			<entry name="BFIN_WDT">
				<label>Blackfin On-Chip Watchdog Timer</label>
				<help>If you say yes here you will get support for the Blackfin On-Chip
Watchdog Timer. If you have one of these processors and wish to
have watchdog support enabled, say Y, otherwise say N.

To compile this driver as a module, choose M here: the
module will be called bfin_wdt.</help>
			</entry>
			<entry name="ACQUIRE_WDT">
				<label>Acquire SBC Watchdog Timer</label>
				<help>This is the driver for the hardware watchdog on Single Board
Computers produced by Acquire Inc (and others). This watchdog
simply watches your kernel to make sure it doesn't freeze, and if
it does, it reboots your computer after a certain amount of time.

To compile this driver as a module, choose M here: the
module will be called acquirewdt.

Most people will say N.</help>
			</entry>
			<entry name="ADVANTECH_WDT">
				<label>Advantech SBC Watchdog Timer</label>
				<help>If you are configuring a Linux kernel for the Advantech single-board
computer, say `Y' here to support its built-in watchdog timer
feature. More information can be found at
&lt;http://www.advantech.com.tw/products/&gt;</help>
			</entry>
			<entry name="ALIM1535_WDT">
				<label>ALi M1535 PMU Watchdog Timer</label>
				<help>This is the driver for the hardware watchdog on the ALi M1535 PMU.

To compile this driver as a module, choose M here: the
module will be called alim1535_wdt.

Most people will say N.</help>
			</entry>
			<entry name="ALIM7101_WDT">
				<label>ALi M7101 PMU Computer Watchdog</label>
				<help>This is the driver for the hardware watchdog on the ALi M7101 PMU
as used in the x86 Cobalt servers and also found in some
SPARC Netra servers too.

To compile this driver as a module, choose M here: the
module will be called alim7101_wdt.

Most people will say N.</help>
			</entry>
			<entry name="EBC_C384_WDT">
				<label>WinSystems EBC-C384 Watchdog Timer</label>
				<help>Enables watchdog timer support for the watchdog timer on the
WinSystems EBC-C384 motherboard. The timeout may be configured via
the timeout module parameter.</help>
			</entry>
			<entry name="F71808E_WDT">
				<label>Fintek F71808E, F71862FG, F71869, F71882FG and F71889FG Watchdog</label>
				<help>This is the driver for the hardware watchdog on the Fintek
F71808E, F71862FG, F71869, F71882FG and F71889FG Super I/O controllers.

You can compile this driver directly into the kernel, or use
it as a module.  The module will be called f71808e_wdt.</help>
			</entry>
			<entry name="SP5100_TCO">
				<label>AMD/ATI SP5100 TCO Timer/Watchdog</label>
				<help>Hardware watchdog driver for the AMD/ATI SP5100 chipset. The TCO
(Total Cost of Ownership) timer is a watchdog timer that will reboot
the machine after its expiration. The expiration time can be
configured with the &quot;heartbeat&quot; parameter.

To compile this driver as a module, choose M here: the
module will be called sp5100_tco.</help>
			</entry>
			<entry name="GEODE_WDT">
				<label>AMD Geode CS5535/CS5536 Watchdog</label>
				<help>This driver enables a watchdog capability built into the
CS5535/CS5536 companion chips for the AMD Geode GX and LX
processors.  This watchdog watches your kernel to make sure
it doesn't freeze, and if it does, it reboots your computer after
a certain amount of time.

You can compile this driver directly into the kernel, or use
it as a module.  The module will be called geodewdt.</help>
			</entry>
			<entry name="SC520_WDT">
				<label>AMD Elan SC520 processor Watchdog</label>
				<help>This is the driver for the hardware watchdog built in to the
AMD &quot;Elan&quot; SC520 microcomputer commonly used in embedded systems.
This watchdog simply watches your kernel to make sure it doesn't
freeze, and if it does, it reboots your computer after a certain
amount of time.

You can compile this driver directly into the kernel, or use
it as a module.  The module will be called sc520_wdt.</help>
			</entry>
			<entry name="SBC_FITPC2_WATCHDOG">
				<label>Compulab SBC-FITPC2 watchdog</label>
				<help>This is the driver for the built-in watchdog timer on the fit-PC2,
fit-PC2i, CM-iAM single-board computers made by Compulab.

It`s possible to enable watchdog timer either from BIOS (F2) or from booted Linux.
When &quot;Watchdog Timer Value&quot; enabled one can set 31-255 s operational range.

Entering BIOS setup temporary disables watchdog operation regardless to current state,
so system will not be restarted while user in BIOS setup.

Once watchdog was enabled the system will be restarted every
&quot;Watchdog Timer Value&quot; period, so to prevent it user can restart or
disable the watchdog.

To compile this driver as a module, choose M here: the
module will be called sbc_fitpc2_wdt.

Most people will say N.</help>
			</entry>
			<entry name="EUROTECH_WDT">
				<label>Eurotech CPU-1220/1410 Watchdog Timer</label>
				<help>Enable support for the watchdog timer on the Eurotech CPU-1220 and
CPU-1410 cards.  These are PC/104 SBCs. Spec sheets and product
information are at &lt;http://www.eurotech.it/&gt;.</help>
			</entry>
			<entry name="IB700_WDT">
				<label>IB700 SBC Watchdog Timer</label>
				<help>This is the driver for the hardware watchdog on the IB700 Single
Board Computer produced by TMC Technology (www.tmc-uk.com). This watchdog
simply watches your kernel to make sure it doesn't freeze, and if
it does, it reboots your computer after a certain amount of time.

This driver is like the WDT501 driver but for slightly different hardware.

To compile this driver as a module, choose M here: the
module will be called ib700wdt.

Most people will say N.</help>
			</entry>
			<entry name="IBMASR">
				<label>IBM Automatic Server Restart</label>
				<help>This is the driver for the IBM Automatic Server Restart watchdog
timer built-in into some eServer xSeries machines.

To compile this driver as a module, choose M here: the
module will be called ibmasr.</help>
			</entry>
			<entry name="WAFER_WDT">
				<label>ICP Single Board Computer Watchdog Timer</label>
				<help>This is a driver for the hardware watchdog on the ICP Single
Board Computer. This driver is working on (at least) the following
IPC SBC's: Wafer 5823, Rocky 4783, Rocky 3703 and Rocky 3782.

To compile this driver as a module, choose M here: the
module will be called wafer5823wdt.</help>
			</entry>
			<entry name="I6300ESB_WDT">
				<label>Intel 6300ESB Timer/Watchdog</label>
				<help>Hardware driver for the watchdog timer built into the Intel
6300ESB controller hub.

To compile this driver as a module, choose M here: the
module will be called i6300esb.</help>
			</entry>
			<entry name="IE6XX_WDT">
				<label>Intel Atom E6xx Watchdog</label>
				<help>Hardware driver for the watchdog timer built into the Intel
Atom E6XX (TunnelCreek) processor.

To compile this driver as a module, choose M here: the
module will be called ie6xx_wdt.</help>
			</entry>
			<entry name="INTEL_SCU_WATCHDOG">
				<label>Intel SCU Watchdog for Mobile Platforms</label>
				<help>Hardware driver for the watchdog time built into the Intel SCU
for Intel Mobile Platforms.

To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="INTEL_MID_WATCHDOG">
				<label>Intel MID Watchdog Timer</label>
				<help>Watchdog timer driver built into the Intel SCU for Intel MID
Platforms.

This driver currently supports only the watchdog evolution
implementation in SCU, available for Merrifield generation.

To compile this driver as a module, choose M here.</help>
			</entry>
			<entry name="ITCO_WDT">
				<label>Intel TCO Timer/Watchdog</label>
				<help>Hardware driver for the intel TCO timer based watchdog devices.
These drivers are included in the Intel 82801 I/O Controller
Hub family (from ICH0 up to ICH10) and in the Intel 63xxESB
controller hub.

The TCO (Total Cost of Ownership) timer is a watchdog timer
that will reboot the machine after its second expiration. The
expiration time can be configured with the &quot;heartbeat&quot; parameter.

On some motherboards the driver may fail to reset the chipset's
NO_REBOOT flag which prevents the watchdog from rebooting the
machine. If this is the case you will get a kernel message like
&quot;failed to reset NO_REBOOT flag, reboot disabled by hardware&quot;.

To compile this driver as a module, choose M here: the
module will be called iTCO_wdt.</help>
			</entry>
			<entry name="ITCO_VENDOR_SUPPORT">
				<label>Intel TCO Timer/Watchdog Specific Vendor Support</label>
				<help>Add vendor specific support to the intel TCO timer based watchdog
devices. At this moment we only have additional support for some
SuperMicro Inc. motherboards.</help>
			</entry>
			<entry name="IT8712F_WDT">
				<label>IT8712F (Smart Guardian) Watchdog Timer</label>
				<help>This is the driver for the built-in watchdog timer on the IT8712F
Super I/0 chipset used on many motherboards.

If the driver does not work, then make sure that the game port in
the BIOS is enabled.

To compile this driver as a module, choose M here: the
module will be called it8712f_wdt.</help>
			</entry>
			<entry name="IT87_WDT">
				<label>IT87 Watchdog Timer</label>
				<help>This is the driver for the hardware watchdog on the ITE IT8702,
IT8712, IT8716, IT8718, IT8720, IT8721, IT8726 and IT8728
Super I/O chips.

If the driver does not work, then make sure that the game port in
the BIOS is enabled.

This watchdog simply watches your kernel to make sure it doesn't
freeze, and if it does, it reboots your computer after a certain
amount of time.

To compile this driver as a module, choose M here: the module will
be called it87_wdt.</help>
			</entry>
			<entry name="HP_WATCHDOG">
				<label>HP ProLiant iLO2+ Hardware Watchdog Timer</label>
				<help>A software monitoring watchdog and NMI sourcing driver. This driver
will detect lockups and provide a stack trace. This is a driver that
will only load on an HP ProLiant system with a minimum of iLO2 support.
To compile this driver as a module, choose M here: the module will be
called hpwdt.</help>
			</entry>
			<entry name="KEMPLD_WDT">
				<label>Kontron COM Watchdog Timer</label>
				<help>Support for the PLD watchdog on some Kontron ETX and COMexpress
(ETXexpress) modules

This driver can also be built as a module. If so, the module will be
called kempld_wdt.</help>
			</entry>
			<entry name="HPWDT_NMI_DECODING">
				<label>NMI decoding support for the HP ProLiant iLO2+ Hardware Watchdog Timer</label>
				<help>When an NMI occurs this feature will make the necessary BIOS calls to
log the cause of the NMI.</help>
			</entry>
			<entry name="SC1200_WDT">
				<label>National Semiconductor PC87307/PC97307 (ala SC1200) Watchdog</label>
				<help>This is a driver for National Semiconductor PC87307/PC97307 hardware
watchdog cards as found on the SC1200. This watchdog is mainly used
for power management purposes and can be used to power down the device
during inactivity periods (includes interrupt activity monitoring).

To compile this driver as a module, choose M here: the
module will be called sc1200wdt.

Most people will say N.</help>
			</entry>
			<entry name="SCx200_WDT">
				<label>National Semiconductor SCx200 Watchdog</label>
				<help>Enable the built-in watchdog timer support on the National
Semiconductor SCx200 processors.

If compiled as a module, it will be called scx200_wdt.</help>
			</entry>
			<entry name="PC87413_WDT">
				<label>NS PC87413 watchdog</label>
				<help>This is the driver for the hardware watchdog on the PC87413 chipset
This watchdog simply watches your kernel to make sure it doesn't
freeze, and if it does, it reboots your computer after a certain
amount of time.

To compile this driver as a module, choose M here: the
module will be called pc87413_wdt.

Most people will say N.</help>
			</entry>
			<entry name="NV_TCO">
				<label>nVidia TCO Timer/Watchdog</label>
				<help>Hardware driver for the TCO timer built into the nVidia Hub family
(such as the MCP51).  The TCO (Total Cost of Ownership) timer is a
watchdog timer that will reboot the machine after its second
expiration. The expiration time can be configured with the
&quot;heartbeat&quot; parameter.

On some motherboards the driver may fail to reset the chipset's
NO_REBOOT flag which prevents the watchdog from rebooting the
machine. If this is the case you will get a kernel message like
&quot;failed to reset NO_REBOOT flag, reboot disabled by hardware&quot;.

To compile this driver as a module, choose M here: the
module will be called nv_tco.</help>
			</entry>
			<entry name="RDC321X_WDT">
				<label>RDC R-321x SoC watchdog</label>
				<help>This is the driver for the built in hardware watchdog
in the RDC R-321x SoC.

To compile this driver as a module, choose M here: the
module will be called rdc321x_wdt.</help>
			</entry>
			<entry name="_60XX_WDT">
				<label>SBC-60XX Watchdog Timer</label>
				<help>This driver can be used with the watchdog timer found on some
single board computers, namely the 6010 PII based computer.
It may well work with other cards.  It reads port 0x443 to enable
and re-set the watchdog timer, and reads port 0x45 to disable
the watchdog.  If you have a card that behave in similar ways,
you can probably make this driver work with your card as well.

You can compile this driver directly into the kernel, or use
it as a module.  The module will be called sbc60xxwdt.</help>
			</entry>
			<entry name="SBC8360_WDT">
				<label>SBC8360 Watchdog Timer</label>
				<help>
This is the driver for the hardware watchdog on the SBC8360 Single
Board Computer produced by Axiomtek Co., Ltd. (www.axiomtek.com).

To compile this driver as a module, choose M here: the
module will be called sbc8360.

Most people will say N.

config SBC7240_WDT
tristate &quot;SBC Nano 7240 Watchdog Timer&quot;
depends on X86_32 &amp;&amp; !UML
---help---
This is the driver for the hardware watchdog found on the IEI
single board computers EPIC Nano 7240 (and likely others). This
watchdog simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time.

To compile this driver as a module, choose M here: the
module will be called sbc7240_wdt.

config CPU5_WDT
tristate &quot;SMA CPU5 Watchdog&quot;
depends on X86
---help---
TBD.
To compile this driver as a module, choose M here: the
module will be called cpu5wdt.

config SMSC_SCH311X_WDT
tristate &quot;SMSC SCH311X Watchdog Timer&quot;
depends on X86
---help---
This is the driver for the hardware watchdog timer on the
SMSC SCH3112, SCH3114 and SCH3116 Super IO chipset
(LPC IO with 8042 KBC, Reset Generation, HWM and multiple
serial ports).

To compile this driver as a module, choose M here: the
module will be called sch311x_wdt.

config SMSC37B787_WDT
tristate &quot;Winbond SMsC37B787 Watchdog Timer&quot;
depends on X86
---help---
This is the driver for the hardware watchdog component on the
Winbond SMsC37B787 chipset as used on the NetRunner Mainboard
from Vision Systems and maybe others.

This watchdog simply watches your kernel to make sure it doesn't
freeze, and if it does, it reboots your computer after a certain
amount of time.

Usually a userspace daemon will notify the kernel WDT driver that
userspace is still alive, at regular intervals.

To compile this driver as a module, choose M here: the
module will be called smsc37b787_wdt.

Most people will say N.

config VIA_WDT
tristate &quot;VIA Watchdog Timer&quot;
depends on X86 &amp;&amp; PCI
select WATCHDOG_CORE
---help---
This is the driver for the hardware watchdog timer on VIA
southbridge chipset CX700, VX800/VX820 or VX855/VX875.

To compile this driver as a module, choose M here; the module
will be called via_wdt.

Most people will say N.

config W83627HF_WDT
tristate &quot;Watchdog timer for W83627HF/W83627DHG and compatibles&quot;
depends on X86
select WATCHDOG_CORE
---help---
This is the driver for the hardware watchdog on the following
Super I/O chips.
W83627DHG/DHG-P/EHF/EHG/F/G/HF/S/SF/THF/UHG/UG
W83637HF
W83667HG/HG-B
W83687THF
W83697HF
W83697UG
NCT6775
NCT6776
NCT6779
NCT6791
NCT6792
NCT6102D/04D/06D

This watchdog simply watches your kernel to make sure it doesn't
freeze, and if it does, it reboots your computer after a certain
amount of time.

To compile this driver as a module, choose M here: the
module will be called w83627hf_wdt.

Most people will say N.

config W83877F_WDT
tristate &quot;W83877F (EMACS) Watchdog Timer&quot;
depends on X86
---help---
This is the driver for the hardware watchdog on the W83877F chipset
as used in EMACS PC-104 motherboards (and likely others).  This
watchdog simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time.

To compile this driver as a module, choose M here: the
module will be called w83877f_wdt.

Most people will say N.

config W83977F_WDT
tristate &quot;W83977F (PCM-5335) Watchdog Timer&quot;
depends on X86
---help---
This is the driver for the hardware watchdog on the W83977F I/O chip
as used in AAEON's PCM-5335 SBC (and likely others).  This
watchdog simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time.

To compile this driver as a module, choose M here: the
module will be called w83977f_wdt.

config MACHZ_WDT
tristate &quot;ZF MachZ Watchdog&quot;
depends on X86
---help---
If you are using a ZF Micro MachZ processor, say Y here, otherwise
N.  This is the driver for the watchdog timer built-in on that
processor using ZF-Logic interface.  This watchdog simply watches
your kernel to make sure it doesn't freeze, and if it does, it
reboots your computer after a certain amount of time.

To compile this driver as a module, choose M here: the
module will be called machzwd.

config SBC_EPX_C3_WATCHDOG
tristate &quot;Winsystems SBC EPX-C3 watchdog&quot;
depends on X86
---help---
This is the driver for the built-in watchdog timer on the EPX-C3
Single-board computer made by Winsystems, Inc.

*Note*: This hardware watchdog is not probeable and thus there
is no way to know if writing to its IO address will corrupt
your system or have any real effect.  The only way to be sure
that this driver does what you want is to make sure you
are running it on an EPX-C3 from Winsystems with the watchdog
timer at IO address 0x1ee and 0x1ef.  It will write to both those
IO ports.  Basically, the assumption is made that if you compile
this driver into your kernel and/or load it as a module, that you
know what you are doing and that you are in fact running on an
EPX-C3 board!

To compile this driver as a module, choose M here: the
module will be called sbc_epx_c3.

config INTEL_MEI_WDT
tristate &quot;Intel MEI iAMT Watchdog&quot;
depends on INTEL_MEI &amp;&amp; X86
select WATCHDOG_CORE
---help---
A device driver for the Intel MEI iAMT watchdog.

The Intel AMT Watchdog is an OS Health (Hang/Crash) watchdog.
Whenever the OS hangs or crashes, iAMT will send an event
to any subscriber to this event. The watchdog doesn't reset the
the platform.

To compile this driver as a module, choose M here:
the module will be called mei_wdt.

config NI903X_WDT
tristate &quot;NI 903x/913x Watchdog&quot;
depends on X86 &amp;&amp; ACPI
select WATCHDOG_CORE
---help---
This is the driver for the watchdog timer on the National Instruments
903x/913x real-time controllers.

To compile this driver as a module, choose M here: the module will be
called ni903x_wdt.

# M32R Architecture

# M68K Architecture

config M54xx_WATCHDOG
tristate &quot;MCF54xx watchdog support&quot;
depends on M548x
help
To compile this driver as a module, choose M here: the
module will be called m54xx_wdt.

# MicroBlaze Architecture

# MIPS Architecture

config ATH79_WDT
tristate &quot;Atheros AR71XX/AR724X/AR913X hardware watchdog&quot;
depends on ATH79
help
Hardware driver for the built-in watchdog timer on the Atheros
AR71XX/AR724X/AR913X SoCs.

config BCM47XX_WDT
tristate &quot;Broadcom BCM47xx Watchdog Timer&quot;
depends on BCM47XX || ARCH_BCM_5301X
select WATCHDOG_CORE
help
Hardware driver for the Broadcom BCM47xx Watchdog Timer.

config RC32434_WDT
tristate &quot;IDT RC32434 SoC Watchdog Timer&quot;
depends on MIKROTIK_RB532
help
Hardware driver for the IDT RC32434 SoC built-in
watchdog timer.

To compile this driver as a module, choose M here: the
module will be called rc32434_wdt.

config INDYDOG
tristate &quot;Indy/I2 Hardware Watchdog&quot;
depends on SGI_HAS_INDYDOG
help
Hardware driver for the Indy's/I2's watchdog. This is a
watchdog timer that will reboot the machine after a 60 second
timer expired and no process has written to /dev/watchdog during
that time.

config JZ4740_WDT
tristate &quot;Ingenic jz4740 SoC hardware watchdog&quot;
depends on MACH_JZ4740
select WATCHDOG_CORE
help
Hardware driver for the built-in watchdog timer on Ingenic jz4740 SoCs.

config WDT_MTX1
tristate &quot;MTX-1 Hardware Watchdog&quot;
depends on MIPS_MTX1
help
Hardware driver for the MTX-1 boards. This is a watchdog timer that
will reboot the machine after a 100 seconds timer expired.

config PNX833X_WDT
tristate &quot;PNX833x Hardware Watchdog&quot;
depends on SOC_PNX8335
help
Hardware driver for the PNX833x's watchdog. This is a
watchdog timer that will reboot the machine after a programmable
timer has expired and no process has written to /dev/watchdog during
that time.

config SIBYTE_WDOG
tristate &quot;Sibyte SoC hardware watchdog&quot;
depends on CPU_SB1
help
Watchdog driver for the built in watchdog hardware in Sibyte
SoC processors.  There are apparently two watchdog timers
on such processors; this driver supports only the first one,
because currently Linux only supports exporting one watchdog
to userspace.

To compile this driver as a loadable module, choose M here.
The module will be called sb_wdog.

config AR7_WDT
tristate &quot;TI AR7 Watchdog Timer&quot;
depends on AR7
help
Hardware driver for the TI AR7 Watchdog Timer.

config TXX9_WDT
tristate &quot;Toshiba TXx9 Watchdog Timer&quot;
depends on CPU_TX39XX || CPU_TX49XX
select WATCHDOG_CORE
help
Hardware driver for the built-in watchdog timer on TXx9 MIPS SoCs.

config OCTEON_WDT
tristate &quot;Cavium OCTEON SOC family Watchdog Timer&quot;
depends on CAVIUM_OCTEON_SOC
default y
select WATCHDOG_CORE
select EXPORT_UASM if OCTEON_WDT = m
help
Hardware driver for OCTEON's on chip watchdog timer.
Enables the watchdog for all cores running Linux. It
installs a NMI handler and pokes the watchdog based on an
interrupt.  On first expiration of the watchdog, the
interrupt handler pokes it.  The second expiration causes an
NMI that prints a message. The third expiration causes a
global soft reset.

When userspace has /dev/watchdog open, no poking is done
from the first interrupt, it is then only poked when the
device is written.

config BCM63XX_WDT
tristate &quot;Broadcom BCM63xx hardware watchdog&quot;
depends on BCM63XX
help
Watchdog driver for the built in watchdog hardware in Broadcom
BCM63xx SoC.

To compile this driver as a loadable module, choose M here.
The module will be called bcm63xx_wdt.

config BCM2835_WDT
tristate &quot;Broadcom BCM2835 hardware watchdog&quot;
depends on ARCH_BCM2835
select WATCHDOG_CORE
help
Watchdog driver for the built in watchdog hardware in Broadcom
BCM2835 SoC.

To compile this driver as a loadable module, choose M here.
The module will be called bcm2835_wdt.

config BCM_KONA_WDT
tristate &quot;BCM Kona Watchdog&quot;
depends on ARCH_BCM_MOBILE
select WATCHDOG_CORE
help
Support for the watchdog timer on the following Broadcom BCM281xx
family, which includes BCM11130, BCM11140, BCM11351, BCM28145 and
BCM28155 variants.

Say 'Y' or 'M' here to enable the driver. The module will be called
bcm_kona_wdt.

config BCM_KONA_WDT_DEBUG
bool &quot;DEBUGFS support for BCM Kona Watchdog&quot;
depends on BCM_KONA_WDT
help
If enabled, adds /sys/kernel/debug/bcm_kona_wdt/info which provides
access to the driver's internal data structures as well as watchdog
timer hardware registres.

If in doubt, say 'N'.

config BCM7038_WDT
tristate &quot;BCM7038 Watchdog&quot;
select WATCHDOG_CORE
depends on HAS_IOMEM
depends on ARCH_BRCMSTB || BMIPS_GENERIC || COMPILE_TEST
help
Watchdog driver for the built-in hardware in Broadcom 7038 and
later SoCs used in set-top boxes.  BCM7038 was made public
during the 2004 CES, and since then, many Broadcom chips use this
watchdog block, including some cable modem chips.

config IMGPDC_WDT
tristate &quot;Imagination Technologies PDC Watchdog Timer&quot;
depends on HAS_IOMEM
depends on METAG || MIPS || COMPILE_TEST
select WATCHDOG_CORE
help
Driver for Imagination Technologies PowerDown Controller
Watchdog Timer.

To compile this driver as a loadable module, choose M here.
The module will be called imgpdc_wdt.

config LANTIQ_WDT
tristate &quot;Lantiq SoC watchdog&quot;
depends on LANTIQ
help
Hardware driver for the Lantiq SoC Watchdog Timer.

config RALINK_WDT
tristate &quot;Ralink SoC watchdog&quot;
select WATCHDOG_CORE
depends on RALINK
help
Hardware driver for the Ralink SoC Watchdog Timer.

config MT7621_WDT
tristate &quot;Mediatek SoC watchdog&quot;
select WATCHDOG_CORE
depends on SOC_MT7620 || SOC_MT7621
help
Hardware driver for the Mediatek/Ralink MT7621/8 SoC Watchdog Timer.

config PIC32_WDT
tristate &quot;Microchip PIC32 hardware watchdog&quot;
select WATCHDOG_CORE
depends on MACH_PIC32
help
Watchdog driver for the built in watchdog hardware in a PIC32.

Configuration bits must be set appropriately for the watchdog to be
controlled by this driver.

To compile this driver as a loadable module, choose M here.
The module will be called pic32-wdt.

config PIC32_DMT
tristate &quot;Microchip PIC32 Deadman Timer&quot;
select WATCHDOG_CORE
depends on MACH_PIC32
help
Watchdog driver for PIC32 instruction fetch counting timer. This specific
timer is typically be used in misson critical and safety critical
applications, where any single failure of the software functionality
and sequencing must be detected.

To compile this driver as a loadable module, choose M here.
The module will be called pic32-dmt.

# PARISC Architecture

# POWERPC Architecture

config GEF_WDT
tristate &quot;GE Watchdog Timer&quot;
depends on GE_FPGA
---help---
Watchdog timer found in a number of GE single board computers.

config MPC5200_WDT
bool &quot;MPC52xx Watchdog Timer&quot;
depends on PPC_MPC52xx
help
Use General Purpose Timer (GPT) 0 on the MPC5200 as Watchdog.

config 8xxx_WDT
tristate &quot;MPC8xxx Platform Watchdog Timer&quot;
depends on PPC_8xx || PPC_83xx || PPC_86xx || PPC_MPC512x
select WATCHDOG_CORE
help
This driver is for a SoC level watchdog that exists on some
Freescale PowerPC processors. So far this driver supports:
- MPC8xx watchdogs
- MPC83xx watchdogs
- MPC86xx watchdogs

For BookE processors (MPC85xx) use the BOOKE_WDT driver instead.

config MV64X60_WDT
tristate &quot;MV64X60 (Marvell Discovery) Watchdog Timer&quot;
depends on MV64X60

config PIKA_WDT
tristate &quot;PIKA FPGA Watchdog&quot;
depends on WARP
default y
help
This enables the watchdog in the PIKA FPGA. Currently used on
the Warp platform.

config BOOKE_WDT
tristate &quot;PowerPC Book-E Watchdog Timer&quot;
depends on BOOKE || 4xx
select WATCHDOG_CORE
---help---
Watchdog driver for PowerPC Book-E chips, such as the Freescale
MPC85xx SOCs and the IBM PowerPC 440.

Please see Documentation/watchdog/watchdog-api.txt for
more information.

config BOOKE_WDT_DEFAULT_TIMEOUT
int &quot;PowerPC Book-E Watchdog Timer Default Timeout&quot;
depends on BOOKE_WDT
default 38 if PPC_FSL_BOOK3E
range 0 63 if PPC_FSL_BOOK3E
default 3 if !PPC_FSL_BOOK3E
range 0 3 if !PPC_FSL_BOOK3E
help
Select the default watchdog timer period to be used by the PowerPC
Book-E watchdog driver.  A watchdog &quot;event&quot; occurs when the bit
position represented by this number transitions from zero to one.

For Freescale Book-E processors, this is a number between 0 and 63.
For other Book-E processors, this is a number between 0 and 3.

The value can be overridden by the wdt_period command-line parameter.

config MEN_A21_WDT
tristate &quot;MEN A21 VME CPU Carrier Board Watchdog Timer&quot;
select WATCHDOG_CORE
depends on GPIOLIB || COMPILE_TEST
help
Watchdog driver for MEN A21 VMEbus CPU Carrier Boards.

The driver can also be built as a module. If so, the module will be
called mena21_wdt.

If unsure select N here.

# PPC64 Architecture

config WATCHDOG_RTAS
tristate &quot;RTAS watchdog&quot;
depends on PPC_RTAS
help
This driver adds watchdog support for the RTAS watchdog.

To compile this driver as a module, choose M here. The module
will be called wdrtas.

# S390 Architecture

config DIAG288_WATCHDOG
tristate &quot;System z diag288 Watchdog&quot;
depends on S390
select WATCHDOG_CORE
help
IBM s/390 and zSeries machines running under z/VM 5.1 or later
provide a virtual watchdog timer to their guest that cause a
user define Control Program command to be executed after a
timeout.
LPAR provides a very similar interface. This driver handles
both.

To compile this driver as a module, choose M here. The module
will be called diag288_wdt.

# SUPERH (sh + sh64) Architecture

config SH_WDT
tristate &quot;SuperH Watchdog&quot;
depends on SUPERH &amp;&amp; (CPU_SH3 || CPU_SH4)
select WATCHDOG_CORE
help
This driver adds watchdog support for the integrated watchdog in the
SuperH processors. If you have one of these processors and wish
to have watchdog support enabled, say Y, otherwise say N.

As a side note, saying Y here will automatically boost HZ to 1000
so that the timer has a chance to clear the overflow counter. On
slower systems (such as the SH-2 and SH-3) this will likely yield
some performance issues. As such, the WDT should be avoided here
unless it is absolutely necessary.

To compile this driver as a module, choose M here: the
module will be called shwdt.

# SPARC Architecture

# SPARC64 Architecture

config WATCHDOG_CP1XXX
tristate &quot;CP1XXX Hardware Watchdog support&quot;
depends on SPARC64 &amp;&amp; PCI
---help---
This is the driver for the hardware watchdog timers present on
Sun Microsystems CompactPCI models CP1400 and CP1500.

To compile this driver as a module, choose M here: the
module will be called cpwatchdog.

If you do not have a CompactPCI model CP1400 or CP1500, or
another UltraSPARC-IIi-cEngine boardset with hardware watchdog,
you should say N to this option.

config WATCHDOG_RIO
tristate &quot;RIO Hardware Watchdog support&quot;
depends on SPARC64 &amp;&amp; PCI
help
Say Y here to support the hardware watchdog capability on Sun RIO
machines.  The watchdog timeout period is normally one minute but
can be changed with a boot-time parameter.

config WATCHDOG_SUN4V
tristate &quot;Sun4v Watchdog support&quot;
select WATCHDOG_CORE
depends on SPARC64
help
Say Y here to support the hypervisor watchdog capability embedded
in the SPARC sun4v architecture.

To compile this driver as a module, choose M here. The module will
be called sun4v_wdt.

# XTENSA Architecture

# Xen Architecture

config XEN_WDT
tristate &quot;Xen Watchdog support&quot;
depends on XEN
help
Say Y here to support the hypervisor watchdog capability provided
by Xen 4.0 and newer.  The watchdog timeout period is normally one
minute but can be changed with a boot-time parameter.

config UML_WATCHDOG
tristate &quot;UML watchdog&quot;
depends on UML

#
# ISA-based Watchdog Cards
#

comment &quot;ISA-based Watchdog Cards&quot;
depends on ISA

config PCWATCHDOG
tristate &quot;Berkshire Products ISA-PC Watchdog&quot;
depends on ISA
---help---
This is the driver for the Berkshire Products ISA-PC Watchdog card.
This card simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time. This driver is like the WDT501 driver but for different
hardware. Please read &lt;file:Documentation/watchdog/pcwd-watchdog.txt&gt;. The PC
watchdog cards can be ordered from &lt;http://www.berkprod.com/&gt;.

To compile this driver as a module, choose M here: the
module will be called pcwd.

Most people will say N.

config MIXCOMWD
tristate &quot;Mixcom Watchdog&quot;
depends on ISA
---help---
This is a driver for the Mixcom hardware watchdog cards.  This
watchdog simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time.

To compile this driver as a module, choose M here: the
module will be called mixcomwd.

Most people will say N.

config WDT
tristate &quot;WDT Watchdog timer&quot;
depends on ISA
---help---
If you have a WDT500P or WDT501P watchdog board, say Y here,
otherwise N. It is not possible to probe for this board, which means
that you have to inform the kernel about the IO port and IRQ that
is needed (you can do this via the io and irq parameters)

To compile this driver as a module, choose M here: the
module will be called wdt.

#
# PCI-based Watchdog Cards
#

comment &quot;PCI-based Watchdog Cards&quot;
depends on PCI

config PCIPCWATCHDOG
tristate &quot;Berkshire Products PCI-PC Watchdog&quot;
depends on PCI
---help---
This is the driver for the Berkshire Products PCI-PC Watchdog card.
This card simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time. The card can also monitor the internal temperature of the PC.
More info is available at &lt;http://www.berkprod.com/pci_pc_watchdog.htm&gt;.

To compile this driver as a module, choose M here: the
module will be called pcwd_pci.

Most people will say N.

config WDTPCI
tristate &quot;PCI-WDT500/501 Watchdog timer&quot;
depends on PCI
---help---
If you have a PCI-WDT500/501 watchdog board, say Y here, otherwise N.

If you have a PCI-WDT501 watchdog board then you can enable the
temperature sensor by setting the type parameter to 501.

If you want to enable the Fan Tachometer on the PCI-WDT501, then you
can do this via the tachometer parameter. Only do this if you have a
fan tachometer actually set up.

To compile this driver as a module, choose M here: the
module will be called wdt_pci.

#
# USB-based Watchdog Cards
#

comment &quot;USB-based Watchdog Cards&quot;
depends on USB

config USBPCWATCHDOG
tristate &quot;Berkshire Products USB-PC Watchdog&quot;
depends on USB
---help---
This is the driver for the Berkshire Products USB-PC Watchdog card.
This card simply watches your kernel to make sure it doesn't freeze,
and if it does, it reboots your computer after a certain amount of
time. The card can also monitor the internal temperature of the PC.
More info is available at &lt;http://www.berkprod.com/usb_pc_watchdog.htm&gt;.

To compile this driver as a module, choose M here: the
module will be called pcwd_usb.

Most people will say N.

endif # WATCHDOG
</help>
			</entry>
			<entry name="SSB_POSSIBLE"/>
			<container name="Sonics_Silicon_Backplane">
				<label>Sonics Silicon Backplane</label>
				<entry name="SSB">
					<label>Sonics Silicon Backplane support</label>
					<help>Support for the Sonics Silicon Backplane bus.
You only need to enable this option, if you are
configuring a kernel for an embedded system with
this bus.
It will be auto-selected if needed in other
environments.

The module will be called ssb.

If unsure, say N.</help>
				</entry>
				<entry name="SSB_SPROM"/>
				<entry name="SSB_BLOCKIO"/>
				<entry name="SSB_PCIHOST_POSSIBLE"/>
				<entry name="SSB_PCIHOST">
					<label>Support for SSB on PCI-bus host</label>
					<help>Support for a Sonics Silicon Backplane on top
of a PCI device.

If unsure, say Y</help>
				</entry>
				<entry name="SSB_B43_PCI_BRIDGE"/>
				<entry name="SSB_PCMCIAHOST_POSSIBLE"/>
				<entry name="SSB_PCMCIAHOST">
					<label>Support for SSB on PCMCIA-bus host</label>
					<help>Support for a Sonics Silicon Backplane on top
of a PCMCIA device.

If unsure, say N</help>
				</entry>
				<entry name="SSB_SDIOHOST_POSSIBLE"/>
				<entry name="SSB_SDIOHOST">
					<label>Support for SSB on SDIO-bus host</label>
					<help>Support for a Sonics Silicon Backplane on top
of a SDIO device.

If unsure, say N</help>
				</entry>
				<entry name="SSB_HOST_SOC">
					<label>Support for SSB bus on SoC</label>
					<help>Host interface for a SSB directly mapped into memory. This is
for some Broadcom SoCs from the BCM47xx and BCM53xx lines.

If unsure, say N</help>
				</entry>
				<entry name="SSB_SILENT">
					<label>No SSB kernel messages</label>
					<help>This option turns off all Sonics Silicon Backplane printks.
Note that you won't be able to identify problems, once
messages are turned off.
This might only be desired for production kernels on
embedded devices to reduce the kernel size.

Say N</help>
				</entry>
				<entry name="SSB_DEBUG">
					<label>SSB debugging</label>
					<help>This turns on additional runtime checks and debugging
messages. Turn this on for SSB troubleshooting.

If unsure, say N</help>
				</entry>
				<entry name="SSB_SERIAL"/>
				<entry name="SSB_DRIVER_PCICORE_POSSIBLE"/>
				<entry name="SSB_DRIVER_PCICORE">
					<label>SSB PCI core driver</label>
					<help>Driver for the Sonics Silicon Backplane attached
Broadcom PCI core.

If unsure, say Y</help>
				</entry>
				<entry name="SSB_PCICORE_HOSTMODE">
					<label>Hostmode support for SSB PCI core</label>
					<help>PCIcore hostmode operation (external PCI bus).</help>
				</entry>
				<entry name="SSB_DRIVER_MIPS">
					<label>SSB Broadcom MIPS core driver</label>
					<help>Driver for the Sonics Silicon Backplane attached
Broadcom MIPS core.

If unsure, say N</help>
				</entry>
				<entry name="SSB_SFLASH">
					<label>SSB serial flash support</label>
				</entry>
				<entry name="SSB_EMBEDDED"/>
				<entry name="SSB_DRIVER_EXTIF">
					<label>SSB Broadcom EXTIF core driver</label>
					<help>Driver for the Sonics Silicon Backplane attached
Broadcom EXTIF core.

If unsure, say N</help>
				</entry>
				<entry name="SSB_DRIVER_GIGE">
					<label>SSB Broadcom Gigabit Ethernet driver</label>
					<help>Driver for the Sonics Silicon Backplane attached
Broadcom Gigabit Ethernet.

If unsure, say N</help>
				</entry>
				<entry name="SSB_DRIVER_GPIO">
					<label>SSB GPIO driver</label>
					<help>Driver to provide access to the GPIO pins on the bus.

If unsure, say N</help>
				</entry>
			</container>
			<entry name="BCMA_POSSIBLE"/>
			<container name="Broadcom_specific_AMBA">
				<label>Broadcom specific AMBA</label>
				<entry name="BCMA">
					<label>BCMA support</label>
					<help>Bus driver for Broadcom specific Advanced Microcontroller Bus
Architecture.</help>
				</entry>
				<entry name="BCMA_BLOCKIO"/>
				<entry name="BCMA_HOST_PCI_POSSIBLE"/>
				<entry name="BCMA_HOST_PCI">
					<label>Support for BCMA on PCI-host bus</label>
				</entry>
				<entry name="BCMA_HOST_SOC">
					<label>Support for BCMA in a SoC</label>
					<help>Host interface for a Broadcom AIX bus directly mapped into
the memory. This only works with the Broadcom SoCs from the
BCM47XX line.

If unsure, say N</help>
				</entry>
				<entry name="BCMA_DRIVER_PCI">
					<label>BCMA Broadcom PCI core driver</label>
					<help>BCMA bus may have many versions of PCIe core. This driver
supports:
1) PCIe core working in clientmode
2) PCIe Gen 2 clientmode core

In general PCIe (Gen 2) clientmode core is required on PCIe
hosted buses. It's responsible for initialization and basic
hardware management.
This driver is also prerequisite for a hostmode PCIe core
support.</help>
				</entry>
				<entry name="BCMA_DRIVER_PCI_HOSTMODE">
					<label>Driver for PCI core working in hostmode</label>
					<help>PCI core hostmode operation (external PCI bus).</help>
				</entry>
				<entry name="BCMA_DRIVER_MIPS">
					<label>BCMA Broadcom MIPS core driver</label>
					<help>Driver for the Broadcom MIPS core attached to Broadcom specific
Advanced Microcontroller Bus.

If unsure, say N</help>
				</entry>
				<entry name="BCMA_PFLASH"/>
				<entry name="BCMA_SFLASH">
					<label>ChipCommon-attached serial flash support</label>
					<help>Some cheap devices have serial flash connected to the ChipCommon
instead of independent SPI controller. It requires using a separated
driver that implements ChipCommon specific interface communication.

Enabling this symbol will let bcma recognize serial flash and register
it as platform device.</help>
				</entry>
				<entry name="BCMA_NFLASH"/>
				<entry name="BCMA_DRIVER_GMAC_CMN">
					<label>BCMA Broadcom GBIT MAC COMMON core driver</label>
					<help>Driver for the Broadcom GBIT MAC COMMON core attached to Broadcom
specific Advanced Microcontroller Bus.

If unsure, say N</help>
				</entry>
				<entry name="BCMA_DRIVER_GPIO">
					<label>BCMA GPIO driver</label>
					<help>Driver to provide access to the GPIO pins of the bcma bus.

If unsure, say N</help>
				</entry>
				<entry name="BCMA_DEBUG">
					<label>BCMA debugging</label>
					<help>This turns on additional debugging messages.

If unsure, say N</help>
				</entry>
			</container>
			<container name="Multifunction_device_drivers">
				<label>Multifunction device drivers</label>
				<entry name="MFD_CORE"/>
				<entry name="MFD_CS5535">
					<label>AMD CS5535 and CS5536 southbridge core functions</label>
					<help>This is the core driver for CS5535/CS5536 MFD functions.  This is
necessary for using the board's GPIO and MFGPT functionality.</help>
				</entry>
				<entry name="MFD_ALTERA_A10SR">
					<label>Altera Arria10 DevKit System Resource chip</label>
					<help>Support for the Altera Arria10 DevKit MAX5 System Resource chip
using the SPI interface. This driver provides common support for
accessing the external gpio extender (LEDs &amp; buttons) and
power supply alarms (hwmon).</help>
				</entry>
				<entry name="MFD_ACT8945A">
					<label>Active-semi ACT8945A</label>
					<help>Support for the ACT8945A PMIC from Active-semi. This device
features three step-down DC/DC converters and four low-dropout
linear regulators, along with a complete ActivePath battery
charger.</help>
				</entry>
				<entry name="MFD_AS3711">
					<label>AMS AS3711</label>
					<help>Support for the AS3711 PMIC from AMS</help>
				</entry>
				<entry name="MFD_AS3722">
					<label>ams AS3722 Power Management IC</label>
					<help>The ams AS3722 is a compact system PMU suitable for mobile phones,
tablets etc. It has 4 DC/DC step-down regulators, 3 DC/DC step-down
controllers, 11 LDOs, RTC, automatic battery, temperature and
over current monitoring, GPIOs, ADC and a watchdog.</help>
				</entry>
				<entry name="PMIC_ADP5520">
					<label>Analog Devices ADP5520/01 MFD PMIC Core Support</label>
					<help>Say yes here to add support for Analog Devices AD5520 and ADP5501,
Multifunction Power Management IC. This includes
the I2C driver and the core APIs _only_, you have to select
individual components like LCD backlight, LEDs, GPIOs and Kepad
under the corresponding menus.</help>
				</entry>
				<entry name="MFD_AAT2870_CORE">
					<label>AnalogicTech AAT2870</label>
					<help>If you say yes here you get support for the AAT2870.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_ATMEL_FLEXCOM">
					<label>Atmel Flexcom (Flexible Serial Communication Unit)</label>
					<help>Select this to get support for Atmel Flexcom. This is a wrapper
which embeds a SPI controller, a I2C controller and a USART. Only
one function can be used at a time. The choice is done at boot time
by the probe function of this MFD driver according to a device tree
property.</help>
				</entry>
				<entry name="MFD_ATMEL_HLCDC">
					<label>Atmel HLCDC (High-end LCD Controller)</label>
					<help>If you say yes here you get support for the HLCDC block.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_BCM590XX">
					<label>Broadcom BCM590xx PMUs</label>
					<help>Support for the BCM590xx PMUs from Broadcom</help>
				</entry>
				<entry name="MFD_AXP20X"/>
				<entry name="MFD_AXP20X_I2C">
					<label>X-Powers AXP series PMICs with I2C</label>
					<help>If you say Y here you get support for the X-Powers AXP series power
management ICs (PMICs) controlled with I2C.
This driver include only the core APIs. You have to select individual
components like regulators or the PEK (Power Enable Key) under the
corresponding menus.</help>
				</entry>
				<entry name="MFD_AXP20X_RSB">
					<label>X-Powers AXP series PMICs with RSB</label>
					<help>If you say Y here you get support for the X-Powers AXP series power
management ICs (PMICs) controlled with RSB.
This driver include only the core APIs. You have to select individual
components like regulators or the PEK (Power Enable Key) under the
corresponding menus.</help>
				</entry>
				<entry name="MFD_CROS_EC">
					<label>ChromeOS Embedded Controller</label>
					<help>If you say Y here you get support for the ChromeOS Embedded
Controller (EC) providing keyboard, battery and power services.
You also need to enable the driver for the bus you are using. The
protocol for talking to the EC is defined by the bus driver.</help>
				</entry>
				<entry name="MFD_CROS_EC_I2C">
					<label>ChromeOS Embedded Controller (I2C)</label>
					<help>If you say Y here, you get support for talking to the ChromeOS
EC through an I2C bus. This uses a simple byte-level protocol with
a checksum. Failing accesses will be retried three times to
improve reliability.</help>
				</entry>
				<entry name="MFD_CROS_EC_SPI">
					<label>ChromeOS Embedded Controller (SPI)</label>
					<help>If you say Y here, you get support for talking to the ChromeOS EC
through a SPI bus, using a byte-level protocol. Since the EC's
response time cannot be guaranteed, we support ignoring
'pre-amble' bytes before the response actually starts.</help>
				</entry>
				<entry name="MFD_ASIC3">
					<label>Compaq ASIC3</label>
					<help>This driver supports the ASIC3 multifunction chip found on many
PDAs (mainly iPAQ and HTC based ones)</help>
				</entry>
				<entry name="PMIC_DA903X">
					<label>Dialog Semiconductor DA9030/DA9034 PMIC Support</label>
					<help>Say yes here to add support for Dialog Semiconductor DA9030 (a.k.a
ARAVA) and DA9034 (a.k.a MICCO), these are Power Management IC
usually found on PXA processors-based platforms. This includes
the I2C driver and the core APIs _only_, you have to select
individual components like LCD backlight, voltage regulators,
LEDs and battery-charger under the corresponding menus.</help>
				</entry>
				<entry name="PMIC_DA9052"/>
				<entry name="MFD_DA9052_SPI">
					<label>Dialog Semiconductor DA9052/53 PMIC variants with SPI</label>
					<help>Support for the Dialog Semiconductor DA9052 PMIC
when controlled using SPI. This driver provides common support
for accessing the device, additional drivers must be enabled in
order to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_DA9052_I2C">
					<label>Dialog Semiconductor DA9052/53 PMIC variants with I2C</label>
					<help>Support for the Dialog Semiconductor DA9052 PMIC
when controlled using I2C. This driver provides common support
for accessing the device, additional drivers must be enabled in
order to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_DA9055">
					<label>Dialog Semiconductor DA9055 PMIC Support</label>
					<help>Say yes here for support of Dialog Semiconductor DA9055. This is
a Power Management IC. This driver provides common support for
accessing the device as well as the I2C interface to the chip itself.
Additional drivers must be enabled in order to use the functionality
of the device.

This driver can be built as a module. If built as a module it will be
called &quot;da9055&quot;</help>
				</entry>
				<entry name="MFD_DA9062">
					<label>Dialog Semiconductor DA9062 PMIC Support</label>
					<help>Say yes here for support for the Dialog Semiconductor DA9062 PMIC.
This includes the I2C driver and core APIs.
Additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_DA9063">
					<label>Dialog Semiconductor DA9063 PMIC Support</label>
					<help>Say yes here for support for the Dialog Semiconductor DA9063 PMIC.
This includes the I2C driver and core APIs.
Additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_DA9150">
					<label>Dialog Semiconductor DA9150 Charger Fuel-Gauge chip</label>
					<help>This adds support for the DA9150 integrated charger and fuel-gauge
chip. This driver provides common support for accessing the device.
Additional drivers must be enabled in order to use the specific
features of the device.</help>
				</entry>
				<entry name="MFD_DLN2">
					<label>Diolan DLN2 support</label>
					<help>This adds support for Diolan USB-I2C/SPI/GPIO Master Adapter
DLN-2. Additional drivers such as I2C_DLN2, GPIO_DLN2,
etc. must be enabled in order to use the functionality of
the device.</help>
				</entry>
				<entry name="MFD_MC13XXX">
					<help>Enable support for the Freescale MC13783 and MC13892 PMICs.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_MC13XXX_SPI">
					<label>Freescale MC13783 and MC13892 SPI interface</label>
					<help>Select this if your MC13xxx is connected via an SPI bus.</help>
				</entry>
				<entry name="MFD_MC13XXX_I2C">
					<label>Freescale MC13892 I2C interface</label>
					<help>Select this if your MC13xxx is connected via an I2C bus.</help>
				</entry>
				<entry name="MFD_MX25_TSADC">
					<label>Freescale i.MX25 integrated Touchscreen and ADC unit</label>
					<help>Enable support for the integrated Touchscreen and ADC unit of the
i.MX25 processors. They consist of a conversion queue for general
purpose ADC and a queue for Touchscreens.</help>
				</entry>
				<entry name="MFD_HI6421_PMIC">
					<label>HiSilicon Hi6421 PMU/Codec IC</label>
					<help>Add support for HiSilicon Hi6421 PMIC. Hi6421 includes multi-
functions, such as regulators, RTC, codec, Coulomb counter, etc.
This driver includes core APIs _only_. You have to select
individul components like voltage regulators under corresponding
menus in order to enable them.
We communicate with the Hi6421 via memory-mapped I/O.</help>
				</entry>
				<entry name="MFD_HI655X_PMIC">
					<label>HiSilicon Hi655X series PMU/Codec IC</label>
					<help>Select this option to enable Hisilicon hi655x series pmic driver.</help>
				</entry>
				<entry name="HTC_EGPIO">
					<label>HTC EGPIO support</label>
					<help>This driver supports the CPLD egpio chip present on
several HTC phones.  It provides basic support for input
pins, output pins, and irqs.</help>
				</entry>
				<entry name="HTC_PASIC3">
					<label>HTC PASIC3 LED/DS1WM chip support</label>
					<help>This core driver provides register access for the LED/DS1WM
chips labeled &quot;AIC2&quot; and &quot;AIC3&quot;, found on HTC Blueangel and
HTC Magician devices, respectively. Actual functionality is
handled by the leds-pasic3 and ds1wm drivers.</help>
				</entry>
				<entry name="HTC_I2CPLD">
					<label>HTC I2C PLD chip support</label>
					<help>If you say yes here you get support for the supposed CPLD
found on omap850 HTC devices like the HTC Wizard and HTC Herald.
This device provides input and output GPIOs through an I2C
interface to one or more sub-chips.</help>
				</entry>
				<entry name="MFD_INTEL_QUARK_I2C_GPIO">
					<label>Intel Quark MFD I2C GPIO</label>
					<help>This MFD provides support for I2C and GPIO that exist only
in a single PCI device. It splits the 2 IO devices to
their respective IO driver.
The GPIO exports a total amount of 8 interrupt-capable GPIOs.</help>
				</entry>
				<entry name="LPC_ICH">
					<label>Intel ICH LPC</label>
					<help>The LPC bridge function of the Intel ICH provides support for
many functional units. This driver provides needed support for
other drivers to control these functions, currently GPIO and
watchdog.</help>
				</entry>
				<entry name="LPC_SCH">
					<label>Intel SCH LPC</label>
					<help>LPC bridge function of the Intel SCH provides support for
System Management Bus and General Purpose I/O.</help>
				</entry>
				<entry name="INTEL_SOC_PMIC">
					<label>Support for Intel Atom SoC PMIC</label>
					<help>Select this option to enable support for the PMIC device
on some Intel SoC systems. The PMIC provides ADC, GPIO,
thermal, charger and related power management functions
on these systems.</help>
				</entry>
				<entry name="MFD_INTEL_LPSS"/>
				<entry name="MFD_INTEL_LPSS_ACPI">
					<label>Intel Low Power Subsystem support in ACPI mode</label>
					<help>This driver supports Intel Low Power Subsystem (LPSS) devices such as
I2C, SPI and HS-UART starting from Intel Sunrisepoint (Intel Skylake
PCH) in ACPI mode.</help>
				</entry>
				<entry name="MFD_INTEL_LPSS_PCI">
					<label>Intel Low Power Subsystem support in PCI mode</label>
					<help>This driver supports Intel Low Power Subsystem (LPSS) devices such as
I2C, SPI and HS-UART starting from Intel Sunrisepoint (Intel Skylake
PCH) in PCI mode.</help>
				</entry>
				<entry name="MFD_INTEL_MSIC">
					<label>Intel MSIC</label>
					<help>Select this option to enable access to Intel MSIC (Avatele
Passage) chip. This chip embeds audio, battery, GPIO, etc.
devices used in Intel Medfield platforms.</help>
				</entry>
				<entry name="MFD_IPAQ_MICRO">
					<label>Atmel Micro ASIC (iPAQ h3100/h3600/h3700) Support</label>
					<help>Select this to get support for the Microcontroller found in
the Compaq iPAQ handheld computers. This is an Atmel
AT90LS8535 microcontroller flashed with a special iPAQ
firmware using the custom protocol implemented in this driver.</help>
				</entry>
				<entry name="MFD_JANZ_CMODIO">
					<label>Janz CMOD-IO PCI MODULbus Carrier Board</label>
					<help>This is the core driver for the Janz CMOD-IO PCI MODULbus
carrier board. This device is a PCI to MODULbus bridge which may
host many different types of MODULbus daughterboards, including
CAN and GPIO controllers.</help>
				</entry>
				<entry name="MFD_JZ4740_ADC">
					<label>Janz JZ4740 ADC core</label>
					<help>Say yes here if you want support for the ADC unit in the JZ4740 SoC.
This driver is necessary for jz4740-battery and jz4740-hwmon driver.</help>
				</entry>
				<entry name="MFD_KEMPLD">
					<label>Kontron module PLD device</label>
					<help>This is the core driver for the PLD (Programmable Logic Device) found
on some Kontron ETX and COMexpress (ETXexpress) modules. The PLD
device may provide functions like watchdog, GPIO, UART and I2C bus.

The following modules are supported:
* COMe-bBL6
* COMe-bHL6
* COMe-bIP#
* COMe-bPC2 (ETXexpress-PC)
* COMe-bSC# (ETXexpress-SC T#)
* COMe-cBL6
* COMe-cBT6
* COMe-cBW6
* COMe-cCT6
* COMe-cDC2 (microETXexpress-DC)
* COMe-cHL6
* COMe-cPC2 (microETXexpress-PC)
* COMe-cSL6
* COMe-mAL10
* COMe-mBT10
* COMe-mCT10
* COMe-mTT10 (nanoETXexpress-TT)
* ETX-OH

This driver can also be built as a module. If so, the module
will be called kempld-core.</help>
				</entry>
				<entry name="MFD_88PM800">
					<label>Marvell 88PM800</label>
					<help>This supports for Marvell 88PM800 Power Management IC.
This includes the I2C driver and the core APIs _only_, you have to
select individual components like voltage regulators, RTC and
battery-charger under the corresponding menus.</help>
				</entry>
				<entry name="MFD_88PM805">
					<label>Marvell 88PM805</label>
					<help>This supports for Marvell 88PM805 Power Management IC. This includes
the I2C driver and the core APIs _only_, you have to select individual
components like codec device, headset/Mic device under the
corresponding menus.</help>
				</entry>
				<entry name="MFD_88PM860X">
					<label>Marvell 88PM8606/88PM8607</label>
					<help>This supports for Marvell 88PM8606/88PM8607 Power Management IC.
This includes the I2C driver and the core APIs _only_, you have to
select individual components like voltage regulators, RTC and
battery-charger under the corresponding menus.</help>
				</entry>
				<entry name="MFD_MAX14577">
					<label>Maxim Semiconductor MAX14577/77836 MUIC + Charger Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX14577 and
MAX77836 Micro-USB ICs with battery charger.
This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MAX77620">
					<label>Maxim Semiconductor MAX77620 and MAX20024 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX77620 and
MAX20024 which are Power Management IC with General purpose pins,
RTC, regulators, clock generator, watchdog etc. This driver
provides common support for accessing the device; additional drivers
must be enabled in order to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_MAX77686">
					<label>Maxim Semiconductor MAX77686/802 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX77686 and
MAX77802 which are Power Management IC with an RTC on chip.
This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MAX77693">
					<label>Maxim Semiconductor MAX77693 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX77693.
This is a companion Power Management IC with Flash, Haptic, Charger,
and MUIC(Micro USB Interface Controller) controls on chip.
This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MAX77843">
					<label>Maxim Semiconductor MAX77843 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX77843.
This is companion Power Management IC with LEDs, Haptic, Charger,
Fuel Gauge, MUIC(Micro USB Interface Controller) controls on chip.
This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MAX8907">
					<label>Maxim Semiconductor MAX8907 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX8907. This is
a Power Management IC. This driver provides common support for
accessing the device; additional drivers must be enabled in order
to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_MAX8925">
					<label>Maxim Semiconductor MAX8925 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX8925. This is
a Power Management IC. This driver provides common support for
accessing the device, additional drivers must be enabled in order
to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_MAX8997">
					<label>Maxim Semiconductor MAX8997/8966 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX8997/8966.
This is a Power Management IC with RTC, Flash, Fuel Gauge, Haptic,
MUIC controls on chip.
This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MAX8998">
					<label>Maxim Semiconductor MAX8998/National LP3974 PMIC Support</label>
					<help>Say yes here to add support for Maxim Semiconductor MAX8998 and
National Semiconductor LP3974. This is a Power Management IC.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the functionality
of the device.</help>
				</entry>
				<entry name="MFD_MT6397">
					<label>MediaTek MT6397 PMIC Support</label>
					<help>Say yes here to add support for MediaTek MT6397 PMIC. This is
a Power Management IC. This driver provides common support for
accessing the device; additional drivers must be enabled in order
to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_MENF21BMC">
					<label>MEN 14F021P00 Board Management Controller Support</label>
					<help>Say yes here to add support for the MEN 14F021P00 BMC
which is a Board Management Controller connected to the I2C bus.
The device supports multiple sub-devices like LED, HWMON and WDT.
This driver provides common support for accessing the devices;
additional drivers must be enabled in order to use the
functionality of the BMC device.

This driver can also be built as a module. If so the module
will be called menf21bmc.</help>
				</entry>
				<entry name="EZX_PCAP">
					<label>Motorola EZXPCAP Support</label>
					<help>This enables the PCAP ASIC present on EZX Phones. This is
needed for MMC, TouchScreen, Sound, USB, etc..</help>
				</entry>
				<entry name="MFD_VIPERBOARD">
					<label>Nano River Technologies Viperboard</label>
					<help>Say yes here if you want support for Nano River Technologies
Viperboard.
There are mfd cell drivers available for i2c master, adc and
both gpios found on the board. The spi part does not yet
have a driver.
You need to select the mfd cell drivers separately.
The drivers do not support all features the board exposes.</help>
				</entry>
				<entry name="MFD_RETU">
					<label>Nokia Retu and Tahvo multi-function device</label>
					<help>Retu and Tahvo are a multi-function devices found on Nokia
Internet Tablets (770, N800 and N810).</help>
				</entry>
				<entry name="MFD_PCF50633">
					<label>NXP PCF50633</label>
					<help>Say yes here if you have NXP PCF50633 chip on your board.
This core driver provides register access and IRQ handling
facilities, and registers devices for the various functions
so that function-specific drivers can bind to them.</help>
				</entry>
				<entry name="PCF50633_ADC">
					<label>NXP PCF50633 ADC</label>
					<help>Say yes here if you want to include support for ADC in the
NXP PCF50633 chip.</help>
				</entry>
				<entry name="PCF50633_GPIO">
					<label>NXP PCF50633 GPIO</label>
					<help>Say yes here if you want to include support GPIO for pins on
the PCF50633 chip.</help>
				</entry>
				<entry name="UCB1400_CORE">
					<label>Philips UCB1400 Core driver</label>
					<help>This enables support for the Philips UCB1400 core functions.
The UCB1400 is an AC97 audio codec.

To compile this driver as a module, choose M here: the
module will be called ucb1400_core.</help>
				</entry>
				<entry name="MFD_PM8XXX"/>
				<entry name="MFD_PM8921_CORE">
					<label>Qualcomm PM8921 PMIC chip</label>
					<help>If you say yes to this option, support will be included for the
built-in PM8921 PMIC chip.

This is required if your board has a PM8921 and uses its features,
such as: MPPs, GPIOs, regulators, interrupts, and PWM.

Say M here if you want to include support for PM8921 chip as a module.
This will build a module called &quot;pm8921-core&quot;.</help>
				</entry>
				<entry name="MFD_QCOM_RPM">
					<label>Qualcomm Resource Power Manager (RPM)</label>
					<help>If you say yes to this option, support will be included for the
Resource Power Manager system found in the Qualcomm 8660, 8960 and
8064 based devices.

This is required to access many regulators, clocks and bus
frequencies controlled by the RPM on these devices.

Say M here if you want to include support for the Qualcomm RPM as a
module. This will build a module called &quot;qcom_rpm&quot;.</help>
				</entry>
				<entry name="MFD_SPMI_PMIC">
					<label>Qualcomm SPMI PMICs</label>
					<help>This enables support for the Qualcomm SPMI PMICs.
These PMICs are currently used with the Snapdragon 800 series of
SoCs.  Note, that this will only be useful paired with descriptions
of the independent functions as children nodes in the device tree.

Say M here if you want to include support for the SPMI PMIC
series as a module.  The module will be called &quot;qcom-spmi-pmic&quot;.</help>
				</entry>
				<entry name="MFD_RDC321X">
					<label>RDC R-321x southbridge</label>
					<help>Say yes here if you want to have support for the RDC R-321x SoC
southbridge which provides access to GPIOs and Watchdog using the
southbridge PCI device configuration space.</help>
				</entry>
				<entry name="MFD_RTSX_PCI">
					<label>Realtek PCI-E card reader</label>
					<help>This supports for Realtek PCI-Express card reader including rts5209,
rts5227, rts522A, rts5229, rts5249, rts524A, rts525A, rtl8411, etc.
Realtek card reader supports access to many types of memory cards,
such as Memory Stick, Memory Stick Pro, Secure Digital and
MultiMediaCard.</help>
				</entry>
				<entry name="MFD_RT5033">
					<label>Richtek RT5033 Power Management IC</label>
					<help>This driver provides for the Richtek RT5033 Power Management IC,
which includes the I2C driver and the Core APIs. This driver provides
common support for accessing the device. The device supports multiple
sub-devices like charger, fuel gauge, flash LED, current source,
LDO and Buck.</help>
				</entry>
				<entry name="MFD_RTSX_USB">
					<label>Realtek USB card reader</label>
					<help>Select this option to get support for Realtek USB 2.0 card readers
including RTS5129, RTS5139, RTS5179 and RTS5170.
Realtek card reader supports access to many types of memory cards,
such as Memory Stick Pro, Secure Digital and MultiMediaCard.</help>
				</entry>
				<entry name="MFD_RC5T583">
					<label>Ricoh RC5T583 Power Management system device</label>
					<help>Select this option to get support for the RICOH583 Power
Management system device.
This driver provides common support for accessing the device
through i2c interface. The device supports multiple sub-devices
like GPIO, interrupts, RTC, LDO and DCDC regulators, onkey.
Additional drivers must be enabled in order to use the
different functionality of the device.</help>
				</entry>
				<entry name="MFD_RK808">
					<label>Rockchip RK808 Power Management chip</label>
					<help>If you say yes here you get support for the RK808
Power Management chips.
This driver provides common support for accessing the device
through I2C interface. The device supports multiple sub-devices
including interrupts, RTC, LDO &amp; DCDC regulators, and onkey.</help>
				</entry>
				<entry name="MFD_RN5T618">
					<label>Ricoh RN5T567/618 PMIC</label>
					<help>Say yes here to add support for the Ricoh RN5T567 or R5T618 PMIC.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_SEC_CORE">
					<label>SAMSUNG Electronics PMIC Series Support</label>
					<help>Support for the Samsung Electronics MFD series.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the functionality
of the device</help>
				</entry>
				<entry name="MFD_SI476X_CORE">
					<label>Silicon Laboratories 4761/64/68 AM/FM radio.</label>
					<help>This is the core driver for the SI476x series of AM/FM
radio. This MFD driver connects the radio-si476x V4L2 module
and the si476x audio codec.

To compile this driver as a module, choose M here: the
module will be called si476x-core.</help>
				</entry>
				<entry name="MFD_SM501">
					<label>Silicon Motion SM501</label>
					<help>This is the core driver for the Silicon Motion SM501 multimedia
companion chip. This device is a multifunction device which may
provide numerous interfaces including USB host controller, USB gadget,
asynchronous serial ports, audio functions, and a dual display video
interface. The device may be connected by PCI or local bus with
varying functions enabled.</help>
				</entry>
				<entry name="MFD_SM501_GPIO">
					<label>Export GPIO via GPIO layer</label>
					<help>This option uses the gpio library layer to export the 64 GPIO
lines on the SM501. The platform data is used to supply the
base number for the first GPIO line to register.</help>
				</entry>
				<entry name="MFD_SKY81452">
					<label>Skyworks Solutions SKY81452</label>
					<help>This is the core driver for the Skyworks SKY81452 backlight and
voltage regulator device.

This driver can also be built as a module.  If so, the module
will be called sky81452.</help>
				</entry>
				<entry name="MFD_SMSC">
					<label>SMSC ECE1099 series chips</label>
					<help>If you say yes here you get support for the
ece1099 chips from SMSC.

To compile this driver as a module, choose M here: the
module will be called smsc.</help>
				</entry>
				<entry name="ABX500_CORE">
					<label>ST-Ericsson ABX500 Mixed Signal Circuit register functions</label>
					<help>Say yes here if you have the ABX500 Mixed Signal IC family
chips. This core driver expose register access functions.
Functionality specific drivers using these functions can
remain unchanged when IC changes. Binding of the functions to
actual register access is done by the IC core driver.</help>
				</entry>
				<entry name="AB3100_CORE">
					<label>ST-Ericsson AB3100 Mixed Signal Circuit core functions</label>
					<help>Select this to enable the AB3100 Mixed Signal IC core
functionality. This connects to a AB3100 on the I2C bus
and expose a number of symbols needed for dependent devices
to read and write registers and subscribe to events from
this multi-functional IC. This is needed to use other features
of the AB3100 such as battery-backed RTC, charging control,
LEDs, vibrator, system power and temperature, power management
and ALSA sound.</help>
				</entry>
				<entry name="AB3100_OTP">
					<label>ST-Ericsson AB3100 OTP functions</label>
					<help>Select this to enable the AB3100 Mixed Signal IC OTP (one-time
programmable memory) support. This exposes a sysfs file to read
out OTP values.</help>
				</entry>
				<entry name="AB8500_CORE">
					<label>ST-Ericsson AB8500 Mixed Signal Power Management chip</label>
					<help>Select this option to enable access to AB8500 power management
chip. This connects to U8500 either on the SSP/SPI bus (deprecated
since hardware version v1.0) or the I2C bus via PRCMU. It also adds
the irq_chip parts for handling the Mixed Signal chip events.
This chip embeds various other multimedia funtionalities as well.</help>
				</entry>
				<entry name="AB8500_DEBUG">
					<label>Enable debug info via debugfs</label>
					<help>Select this option if you want debug information using the debug
filesystem, debugfs.</help>
				</entry>
				<entry name="AB8500_GPADC">
					<label>ST-Ericsson AB8500 GPADC driver</label>
					<help>AB8500 GPADC driver used to convert Acc and battery/ac/usb voltage</help>
				</entry>
				<entry name="MFD_DB8500_PRCMU">
					<label>ST-Ericsson DB8500 Power Reset Control Management Unit</label>
					<help>Select this option to enable support for the DB8500 Power Reset
and Control Management Unit. This is basically an autonomous
system controller running an XP70 microprocessor, which is accessed
through a register map.</help>
				</entry>
				<entry name="MFD_STMPE">
					<label>STMicroelectronics STMPE</label>
					<help>Support for the STMPE family of I/O Expanders from
STMicroelectronics.

Currently supported devices are:

STMPE811: GPIO, Touchscreen
STMPE1601: GPIO, Keypad
STMPE1801: GPIO, Keypad
STMPE2401: GPIO, Keypad
STMPE2403: GPIO, Keypad

This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the functionality
of the device.  Currently available sub drivers are:

GPIO: stmpe-gpio
Keypad: stmpe-keypad
Touchscreen: stmpe-ts</help>
				</entry>
				<container name="STMicroelectronics_STMPE_Interface_Drivers">
					<label>STMicroelectronics STMPE Interface Drivers</label>
					<entry name="STMPE_I2C">
						<label>STMicroelectronics STMPE I2C Interface</label>
						<help>This is used to enable I2C interface of STMPE</help>
					</entry>
					<entry name="STMPE_SPI">
						<label>STMicroelectronics STMPE SPI Interface</label>
						<help>This is used to enable SPI interface of STMPE</help>
					</entry>
				</container>
				<entry name="MFD_STA2X11">
					<label>STMicroelectronics STA2X11</label>
				</entry>
				<entry name="MFD_SUN6I_PRCM">
					<label>Allwinner A31 PRCM controller</label>
					<help>Support for the PRCM (Power/Reset/Clock Management) unit available
in A31 SoC.</help>
				</entry>
				<entry name="MFD_SYSCON">
					<label>System Controller Register R/W Based on Regmap</label>
					<help>Select this option to enable accessing system control registers
via regmap.</help>
				</entry>
				<entry name="MFD_DAVINCI_VOICECODEC"/>
				<entry name="MFD_TI_AM335X_TSCADC">
					<label>TI ADC / Touch Screen chip support</label>
					<help>If you say yes here you get support for Texas Instruments series
of Touch Screen /ADC chips.
To compile this driver as a module, choose M here: the
module will be called ti_am335x_tscadc.</help>
				</entry>
				<entry name="MFD_DM355EVM_MSP">
					<label>TI DaVinci DM355 EVM microcontroller</label>
					<help>This driver supports the MSP430 microcontroller used on these
boards.  MSP430 firmware manages resets and power sequencing,
inputs from buttons and the IR remote, LEDs, an RTC, and more.</help>
				</entry>
				<entry name="MFD_LP3943">
					<label>TI/National Semiconductor LP3943 MFD Driver</label>
					<help>Support for the TI/National Semiconductor LP3943.
This driver consists of GPIO and PWM drivers.
With these functionalities, it can be used for LED string control or
general usage such like a GPIO controller and a PWM controller.</help>
				</entry>
				<entry name="MFD_LP8788">
					<label>TI LP8788 Power Management Unit Driver</label>
					<help>TI LP8788 PMU supports regulators, battery charger, RTC,
ADC, backlight driver and current sinks.</help>
				</entry>
				<entry name="MFD_OMAP_USB_HOST">
					<label>TI OMAP USBHS core and TLL driver</label>
					<help>This is the core driver for the OAMP EHCI and OHCI drivers.
This MFD driver does the required setup functionalities for
OMAP USB Host drivers.</help>
				</entry>
				<entry name="MFD_PALMAS">
					<label>TI Palmas series chips</label>
					<help>If you say yes here you get support for the Palmas
series of PMIC chips from Texas Instruments.</help>
				</entry>
				<entry name="TPS6105X">
					<label>TI TPS61050/61052 Boost Converters</label>
					<help>This option enables a driver for the TP61050/TPS61052
high-power &quot;white LED driver&quot;. This boost converter is
sometimes used for other things than white LEDs, and
also contains a GPIO pin.</help>
				</entry>
				<entry name="TPS65010">
					<label>TI TPS6501x Power Management chips</label>
					<help>If you say yes here you get support for the TPS6501x series of
Power Management chips.  These include voltage regulators,
lithium ion/polymer battery charging, and other features that
are often used in portable devices like cell phones and cameras.

This driver can also be built as a module.  If so, the module
will be called tps65010.</help>
				</entry>
				<entry name="TPS6507X">
					<label>TI TPS6507x Power Management / Touch Screen chips</label>
					<help>If you say yes here you get support for the TPS6507x series of
Power Management / Touch Screen chips.  These include voltage
regulators, lithium ion/polymer battery charging, touch screen
and other features that are often used in portable devices.
This driver can also be built as a module.  If so, the module
will be called tps6507x.</help>
				</entry>
				<entry name="MFD_TPS65086">
					<label>TI TPS65086 Power Management Integrated Chips (PMICs)</label>
					<help>If you say yes here you get support for the TPS65086 series of
Power Management chips.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="TPS65911_COMPARATOR"/>
				<entry name="MFD_TPS65090">
					<label>TI TPS65090 Power Management chips</label>
					<help>If you say yes here you get support for the TPS65090 series of
Power Management chips.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_TPS65217">
					<label>TI TPS65217 Power Management / White LED chips</label>
					<help>If you say yes here you get support for the TPS65217 series of
Power Management / White LED chips.
These include voltage regulators, lithium ion/polymer battery
charger, wled and other features that are often used in portable
devices.

This driver can also be built as a module.  If so, the module
will be called tps65217.</help>
				</entry>
				<entry name="MFD_TPS65218">
					<label>TI TPS65218 Power Management chips</label>
					<help>If you say yes here you get support for the TPS65218 series of
Power Management chips.
These include voltage regulators, gpio and other features
that are often used in portable devices. Only regulator
component is currently supported.

This driver can also be built as a module.  If so, the module
will be called tps65218.</help>
				</entry>
				<entry name="MFD_TPS6586X">
					<label>TI TPS6586x Power Management chips</label>
					<help>If you say yes here you get support for the TPS6586X series of
Power Management chips.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.

This driver can also be built as a module.  If so, the module
will be called tps6586x.</help>
				</entry>
				<entry name="MFD_TPS65910">
					<label>TI TPS65910 Power Management chip</label>
					<help>if you say yes here you get support for the TPS65910 series of
Power Management chips.</help>
				</entry>
				<entry name="MFD_TPS65912"/>
				<entry name="MFD_TPS65912_I2C">
					<label>TI TPS65912 Power Management chip with I2C</label>
					<help>If you say yes here you get support for the TPS65912 series of
PM chips with I2C interface.</help>
				</entry>
				<entry name="MFD_TPS65912_SPI">
					<label>TI TPS65912 Power Management chip with SPI</label>
					<help>If you say yes here you get support for the TPS65912 series of
PM chips with SPI interface.</help>
				</entry>
				<entry name="MFD_TPS80031">
					<label>TI TPS80031/TPS80032 Power Management chips</label>
					<help>If you say yes here you get support for the Texas Instruments
TPS80031/ TPS80032 Fully Integrated Power Management with Power
Path and Battery Charger. The device provides five configurable
step-down converters, 11 general purpose LDOs, USB OTG Module,
ADC, RTC, 2 PWM, System Voltage Regulator/Battery Charger with
Power Path from USB, 32K clock generator.</help>
				</entry>
				<entry name="TWL4030_CORE">
					<label>TI TWL4030/TWL5030/TWL6030/TPS659x0 Support</label>
					<help>Say yes here if you have TWL4030 / TWL6030 family chip on your board.
This core driver provides register access and IRQ handling
facilities, and registers devices for the various functions
so that function-specific drivers can bind to them.

These multi-function chips are found on many OMAP2 and OMAP3
boards, providing power management, RTC, GPIO, keypad, a
high speed USB OTG transceiver, an audio codec (on most
versions) and many other features.</help>
				</entry>
				<entry name="TWL4030_POWER">
					<label>TI TWL4030 power resources</label>
					<help>Say yes here if you want to use the power resources on the
TWL4030 family chips.  Most of these resources are regulators,
which have a separate driver; some are control signals, such
as clock request handshaking.

This driver uses board-specific data to initialize the resources
and load scripts controlling which resources are switched off/on
or reset when a sleep, wakeup or warm reset event occurs.</help>
				</entry>
				<entry name="MFD_TWL4030_AUDIO">
					<label>TI TWL4030 Audio</label>
				</entry>
				<entry name="TWL6040_CORE">
					<label>TI TWL6040 audio codec</label>
					<help>Say yes here if you want support for Texas Instruments TWL6040 audio
codec.
This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device (audio, vibra).</help>
				</entry>
				<entry name="MENELAUS">
					<label>TI TWL92330/Menelaus PM chip</label>
					<help>If you say yes here you get support for the Texas Instruments
TWL92330/Menelaus Power Management chip. This include voltage
regulators, Dual slot memory card transceivers, real-time clock
and other features that are often used in portable devices like
cell phones and PDAs.</help>
				</entry>
				<entry name="MFD_WL1273_CORE">
					<label>TI WL1273 FM radio</label>
					<help>This is the core driver for the TI WL1273 FM radio. This MFD
driver connects the radio-wl1273 V4L2 module and the wl1273
audio codec.</help>
				</entry>
				<entry name="MFD_LM3533">
					<label>TI/National Semiconductor LM3533 Lighting Power chip</label>
					<help>Say yes here to enable support for National Semiconductor / TI
LM3533 Lighting Power chips.

This driver provides common support for accessing the device;
additional drivers must be enabled in order to use the LED,
backlight or ambient-light-sensor functionality of the device.</help>
				</entry>
				<entry name="MFD_TIMBERDALE">
					<label>Timberdale FPGA</label>
					<help>This is the core driver for the timberdale FPGA. This device is a
multifunction device which exposes numerous platform devices.

The timberdale FPGA can be found on the Intel Atom development board
for in-vehicle infontainment, called Russellville.</help>
				</entry>
				<entry name="MFD_TC3589X">
					<label>Toshiba TC35892 and variants</label>
					<help>Support for the Toshiba TC35892 and variants I/O Expander.

This driver provides common support for accessing the device,
additional drivers must be enabled in order to use the
functionality of the device.</help>
				</entry>
				<entry name="MFD_TMIO"/>
				<entry name="MFD_T7L66XB">
					<label>Toshiba T7L66XB</label>
					<help>Support for Toshiba Mobile IO Controller T7L66XB</help>
				</entry>
				<entry name="MFD_TC6387XB">
					<label>Toshiba TC6387XB</label>
					<help>Support for Toshiba Mobile IO Controller TC6387XB</help>
				</entry>
				<entry name="MFD_TC6393XB">
					<label>Toshiba TC6393XB</label>
					<help>Support for Toshiba Mobile IO Controller TC6393XB</help>
				</entry>
				<entry name="MFD_VX855">
					<label>VIA VX855/VX875 integrated south bridge</label>
					<help>Say yes here to enable support for various functions of the
VIA VX855/VX875 south bridge. You will need to enable the vx855_spi
and/or vx855_gpio drivers for this to do anything useful.</help>
				</entry>
				<entry name="MFD_ARIZONA"/>
				<entry name="MFD_ARIZONA_I2C">
					<label>Cirrus Logic/Wolfson Microelectronics Arizona platform with I2C</label>
					<help>Support for the Cirrus Logic/Wolfson Microelectronics Arizona platform
audio SoC core functionality controlled via I2C.</help>
				</entry>
				<entry name="MFD_ARIZONA_SPI">
					<label>Cirrus Logic/Wolfson Microelectronics Arizona platform with SPI</label>
					<help>Support for the Cirrus Logic/Wolfson Microelectronics Arizona platform
audio SoC core functionality controlled via SPI.</help>
				</entry>
				<entry name="MFD_CS47L24">
					<label>Cirrus Logic CS47L24 and WM1831</label>
					<help>Support for Cirrus Logic CS47L24 and WM1831 low power audio SoC</help>
				</entry>
				<entry name="MFD_WM5102">
					<label>Wolfson Microelectronics WM5102</label>
					<help>Support for Wolfson Microelectronics WM5102 low power audio SoC</help>
				</entry>
				<entry name="MFD_WM5110">
					<label>Wolfson Microelectronics WM5110 and WM8280/WM8281</label>
					<help>Support for Wolfson Microelectronics WM5110 and WM8280/WM8281
low power audio SoC</help>
				</entry>
				<entry name="MFD_WM8997">
					<label>Wolfson Microelectronics WM8997</label>
					<help>Support for Wolfson Microelectronics WM8997 low power audio SoC</help>
				</entry>
				<entry name="MFD_WM8998">
					<label>Wolfson Microelectronics WM8998</label>
					<help>Support for Wolfson Microelectronics WM8998 low power audio SoC</help>
				</entry>
				<entry name="MFD_WM8400">
					<label>Wolfson Microelectronics WM8400</label>
					<help>Support for the Wolfson Microelecronics WM8400 PMIC and audio
CODEC.  This driver provides common support for accessing
the device, additional drivers must be enabled in order to use
the functionality of the device.</help>
				</entry>
				<entry name="MFD_WM831X"/>
				<entry name="MFD_WM831X_I2C">
					<label>Wolfson Microelectronics WM831x/2x PMICs with I2C</label>
					<help>Support for the Wolfson Microelecronics WM831x and WM832x PMICs
when controlled using I2C.  This driver provides common support
for accessing the device, additional drivers must be enabled in
order to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_WM831X_SPI">
					<label>Wolfson Microelectronics WM831x/2x PMICs with SPI</label>
					<help>Support for the Wolfson Microelecronics WM831x and WM832x PMICs
when controlled using SPI.  This driver provides common support
for accessing the device, additional drivers must be enabled in
order to use the functionality of the device.</help>
				</entry>
				<entry name="MFD_WM8350"/>
				<entry name="MFD_WM8350_I2C">
					<label>Wolfson Microelectronics WM8350 with I2C</label>
					<help>The WM8350 is an integrated audio and power management
subsystem with watchdog and RTC functionality for embedded
systems.  This option enables core support for the WM8350 with
I2C as the control interface.  Additional options must be
selected to enable support for the functionality of the chip.</help>
				</entry>
				<entry name="MFD_WM8994">
					<label>Wolfson Microelectronics WM8994</label>
					<help>The WM8994 is a highly integrated hi-fi CODEC designed for
smartphone applications.  As well as audio functionality it
has on board GPIO and regulator functionality which is
supported via the relevant subsystems.  This driver provides
core support for the WM8994, in order to use the actual
functionaltiy of the device other drivers must be enabled.</help>
				</entry>
				<entry name="MFD_STW481X">
					<label>Support for ST Microelectronics STw481x</label>
					<help>Select this option to enable the STw481x chip driver used
in various ST Microelectronics and ST-Ericsson embedded
Nomadik series.</help>
				</entry>
				<container name="Multimedia_Capabilities_Port_drivers">
					<label>Multimedia Capabilities Port drivers</label>
					<entry name="MCP"/>
					<entry name="MCP_SA11X0">
						<label>Support SA11x0 MCP interface</label>
					</entry>
					<entry name="MCP_UCB1200">
						<label>Support for UCB1200 / UCB1300</label>
					</entry>
					<entry name="MCP_UCB1200_TS">
						<label>Touchscreen interface support</label>
					</entry>
				</container>
				<entry name="MFD_VEXPRESS_SYSREG">
					<label>Versatile Express System Registers</label>
					<help>System Registers are the platform configuration block
on the ARM Ltd. Versatile Express board.</help>
				</entry>
			</container>
			<entry name="REGULATOR">
				<label>Voltage and Current Regulator Support</label>
				<help>Generic Voltage and Current Regulator support.

This framework is designed to provide a generic interface to voltage
and current regulators within the Linux kernel. It's intended to
provide voltage and current control to client or consumer drivers and
also provide status information to user space applications through a
sysfs interface.

The intention is to allow systems to dynamically control regulator
output in order to save power and prolong battery life. This applies
to both voltage regulators (where voltage output is controllable) and
current sinks (where current output is controllable).

This framework safely compiles out if not selected so that client
drivers can still be used in systems with no software controllable
regulators.

If unsure, say no.</help>
			</entry>
			<entry name="REGULATOR_DEBUG">
				<label>Regulator debug support</label>
				<help>Say yes here to enable debugging support.</help>
			</entry>
			<entry name="REGULATOR_FIXED_VOLTAGE">
				<label>Fixed voltage regulator support</label>
				<help>This driver provides support for fixed voltage regulators,
useful for systems which use a combination of software
managed regulators and simple non-configurable regulators.</help>
			</entry>
			<entry name="REGULATOR_VIRTUAL_CONSUMER">
				<label>Virtual regulator consumer support</label>
				<help>This driver provides a virtual consumer for the voltage and
current regulator API which provides sysfs controls for
configuring the supplies requested.  This is mainly useful
for test purposes.

If unsure, say no.</help>
			</entry>
			<entry name="REGULATOR_USERSPACE_CONSUMER">
				<label>Userspace regulator consumer support</label>
				<help>There are some classes of devices that are controlled entirely
from user space. Userspace consumer driver provides ability to
control power supplies for such devices.

If unsure, say no.</help>
			</entry>
			<entry name="REGULATOR_88PM800">
				<label>Marvell 88PM800 Power regulators</label>
				<help>This driver supports Marvell 88PM800 voltage regulator chips.
It delivers digitally programmable output,
the voltage is programmed via I2C interface.
It's suitable to support PXA988 chips to control VCC_MAIN and
various voltages.</help>
			</entry>
			<entry name="REGULATOR_88PM8607">
				<label>Marvell 88PM8607 Power regulators</label>
				<help>This driver supports 88PM8607 voltage regulator chips.</help>
			</entry>
			<entry name="REGULATOR_ACT8865">
				<label>Active-semi act8865 voltage regulator</label>
				<help>This driver controls a active-semi act8865 voltage output
regulator via I2C bus.</help>
			</entry>
			<entry name="REGULATOR_ACT8945A">
				<label>Active-semi ACT8945A voltage regulator</label>
				<help>This driver controls a active-semi ACT8945A voltage regulator
via I2C bus. The ACT8945A features three step-down DC/DC converters
and four low-dropout linear regulators, along with a ActivePath
battery charger.</help>
			</entry>
			<entry name="REGULATOR_AD5398">
				<label>Analog Devices AD5398/AD5821 regulators</label>
				<help>This driver supports AD5398 and AD5821 current regulator chips.
If building into module, its name is ad5398.ko.</help>
			</entry>
			<entry name="REGULATOR_ANATOP">
				<label>Freescale i.MX on-chip ANATOP LDO regulators</label>
				<help>Say y here to support Freescale i.MX on-chip ANATOP LDOs
regulators. It is recommended that this option be
enabled on i.MX6 platform.</help>
			</entry>
			<entry name="REGULATOR_AAT2870">
				<label>AnalogicTech AAT2870 Regulators</label>
				<help>If you have a AnalogicTech AAT2870 say Y to enable the
regulator driver.</help>
			</entry>
			<entry name="REGULATOR_AB3100">
				<label>ST-Ericsson AB3100 Regulator functions</label>
				<help>These regulators correspond to functionality in the
AB3100 analog baseband dealing with power regulators
for the system.</help>
			</entry>
			<entry name="REGULATOR_AB8500">
				<label>ST-Ericsson AB8500 Power Regulators</label>
				<help>This driver supports the regulators found on the ST-Ericsson mixed
signal AB8500 PMIC</help>
			</entry>
			<entry name="REGULATOR_ARIZONA">
				<label>Wolfson Arizona class devices</label>
				<help>Support for the regulators found on Wolfson Arizona class
devices.</help>
			</entry>
			<entry name="REGULATOR_AS3711">
				<label>AS3711 PMIC</label>
				<help>This driver provides support for the voltage regulators on the
AS3711 PMIC</help>
			</entry>
			<entry name="REGULATOR_AS3722">
				<label>AMS AS3722 PMIC Regulators</label>
				<help>This driver provides support for the voltage regulators on the
AS3722 PMIC. This will enable support for all the software
controllable DCDC/LDO regulators.</help>
			</entry>
			<entry name="REGULATOR_AXP20X">
				<label>X-POWERS AXP20X PMIC Regulators</label>
				<help>This driver provides support for the voltage regulators on the
AXP20X PMIC.</help>
			</entry>
			<entry name="REGULATOR_BCM590XX">
				<label>Broadcom BCM590xx PMU Regulators</label>
				<help>This driver provides support for the voltage regulators on the
BCM590xx PMUs. This will enable support for the software
controllable LDO/Switching regulators.</help>
			</entry>
			<entry name="REGULATOR_DA903X">
				<label>Dialog Semiconductor DA9030/DA9034 regulators</label>
				<help>Say y here to support the BUCKs and LDOs regulators found on
Dialog Semiconductor DA9030/DA9034 PMIC.</help>
			</entry>
			<entry name="REGULATOR_DA9052">
				<label>Dialog Semiconductor DA9052/DA9053 regulators</label>
				<help>This driver supports the voltage regulators of DA9052-BC and
DA9053-AA/Bx PMIC.</help>
			</entry>
			<entry name="REGULATOR_DA9055">
				<label>Dialog Semiconductor DA9055 regulators</label>
				<help>Say y here to support the BUCKs and LDOs regulators found on
Dialog Semiconductor DA9055 PMIC.

This driver can also be built as a module. If so, the module
will be called da9055-regulator.</help>
			</entry>
			<entry name="REGULATOR_DA9062">
				<label>Dialog Semiconductor DA9062 regulators</label>
				<help>Say y here to support the BUCKs and LDOs regulators found on
DA9062 PMICs.

This driver can also be built as a module. If so, the module
will be called da9062-regulator.</help>
			</entry>
			<entry name="REGULATOR_DA9063">
				<label>Dialog Semiconductor DA9063 regulators</label>
				<help>Say y here to support the BUCKs and LDOs regulators found on
DA9063 PMICs.

This driver can also be built as a module. If so, the module
will be called da9063-regulator.</help>
			</entry>
			<entry name="REGULATOR_DA9210">
				<label>Dialog Semiconductor DA9210 regulator</label>
				<help>Say y here to support for the Dialog Semiconductor DA9210.
The DA9210 is a multi-phase synchronous step down
converter 12A DC-DC Buck controlled through an I2C
interface.</help>
			</entry>
			<entry name="REGULATOR_DA9211">
				<label>Dialog Semiconductor DA9211/DA9212/DA9213/DA9214/DA9215 regulator</label>
				<help>Say y here to support for the Dialog Semiconductor DA9211/DA9212
/DA9213/DA9214/DA9215.
The DA9211/DA9212/DA9213/DA9214/DA9215 is a multi-phase synchronous
step down converter 12A or 16A DC-DC Buck controlled through an I2C
interface.</help>
			</entry>
			<entry name="REGULATOR_DBX500_PRCMU"/>
			<entry name="REGULATOR_DB8500_PRCMU">
				<label>ST-Ericsson DB8500 Voltage Domain Regulators</label>
				<help>This driver supports the voltage domain regulators controlled by the
DB8500 PRCMU</help>
			</entry>
			<entry name="REGULATOR_FAN53555">
				<label>Fairchild FAN53555 Regulator</label>
				<help>This driver supports Fairchild FAN53555 Digitally Programmable
TinyBuck Regulator. The FAN53555 is a step-down switching voltage
regulator that delivers a digitally programmable output from an
input voltage supply of 2.5V to 5.5V. The output voltage is
programmed through an I2C interface.</help>
			</entry>
			<entry name="REGULATOR_GPIO">
				<label>GPIO regulator support</label>
				<help>This driver provides support for regulators that can be
controlled via gpios.
It is capable of supporting current and voltage regulators
and the platform has to provide a mapping of GPIO-states
to target volts/amps.</help>
			</entry>
			<entry name="REGULATOR_HI6421">
				<label>HiSilicon Hi6421 PMIC voltage regulator support</label>
				<help>This driver provides support for the voltage regulators on the
HiSilicon Hi6421 PMU / Codec IC.
Hi6421 is a multi-function device which, on regulator part, provides
21 general purpose LDOs, 3 dedicated LDOs, and 5 BUCKs. All
of them come with support to either ECO (idle) or sleep mode.</help>
			</entry>
			<entry name="REGULATOR_HI655X">
				<label>Hisilicon HI655X PMIC regulators support</label>
				<help>This driver provides support for the voltage regulators of the
Hisilicon Hi655x PMIC device.</help>
			</entry>
			<entry name="REGULATOR_ISL9305">
				<label>Intersil ISL9305 regulator</label>
				<help>This driver supports ISL9305 voltage regulator chip.</help>
			</entry>
			<entry name="REGULATOR_ISL6271A">
				<label>Intersil ISL6271A Power regulator</label>
				<help>This driver supports ISL6271A voltage regulator chip.</help>
			</entry>
			<entry name="REGULATOR_LM363X">
				<label>TI LM363X voltage regulators</label>
				<help>This driver supports LM3631 and LM3632 voltage regulators for
the LCD bias.
One boost output voltage is configurable and always on.
Other LDOs are used for the display module.</help>
			</entry>
			<entry name="REGULATOR_LP3971">
				<label>National Semiconductors LP3971 PMIC regulator driver</label>
				<help>Say Y here to support the voltage regulators and convertors
on National Semiconductors LP3971 PMIC</help>
			</entry>
			<entry name="REGULATOR_LP3972">
				<label>National Semiconductors LP3972 PMIC regulator driver</label>
				<help>Say Y here to support the voltage regulators and convertors
on National Semiconductors LP3972 PMIC</help>
			</entry>
			<entry name="REGULATOR_LP872X">
				<label>TI/National Semiconductor LP8720/LP8725 voltage regulators</label>
				<help>This driver supports LP8720/LP8725 PMIC</help>
			</entry>
			<entry name="REGULATOR_LP873X">
				<label>TI LP873X Power regulators</label>
				<help>This driver supports LP873X voltage regulator chips. LP873X
provides two step-down converters and two general-purpose LDO
voltage regulators. It supports software based voltage control
for different voltage domains</help>
			</entry>
			<entry name="REGULATOR_LP8755">
				<label>TI LP8755 High Performance PMU driver</label>
				<help>This driver supports LP8755 High Performance PMU driver. This
chip contains six step-down DC/DC converters which can support
9 mode multiphase configuration.</help>
			</entry>
			<entry name="REGULATOR_LP8788">
				<label>TI LP8788 Power Regulators</label>
				<help>This driver supports LP8788 voltage regulator chip.</help>
			</entry>
			<entry name="REGULATOR_LTC3589">
				<label>LTC3589 8-output voltage regulator</label>
				<help>This enables support for the LTC3589, LTC3589-1, and LTC3589-2
8-output regulators controlled via I2C.</help>
			</entry>
			<entry name="REGULATOR_MAX14577">
				<label>Maxim 14577/77836 regulator</label>
				<help>This driver controls a Maxim MAX14577/77836 regulator via I2C bus.
The MAX14577 regulators include safeout LDO and charger current
regulator. The MAX77836 has two additional LDOs.</help>
			</entry>
			<entry name="REGULATOR_MAX1586">
				<label>Maxim 1586/1587 voltage regulator</label>
				<help>This driver controls a Maxim 1586 or 1587 voltage output
regulator via I2C bus. The provided regulator is suitable
for PXA27x chips to control VCC_CORE and VCC_USIM voltages.</help>
			</entry>
			<entry name="REGULATOR_MAX77620">
				<label>Maxim 77620/MAX20024 voltage regulator</label>
				<help>This driver controls Maxim MAX77620 voltage output regulator
via I2C bus. The provided regulator is suitable for Tegra
chip to control Step-Down DC-DC and LDOs. Say Y here to
enable the regulator driver.</help>
			</entry>
			<entry name="REGULATOR_MAX8649">
				<label>Maxim 8649 voltage regulator</label>
				<help>This driver controls a Maxim 8649 voltage output regulator via
I2C bus.</help>
			</entry>
			<entry name="REGULATOR_MAX8660">
				<label>Maxim 8660/8661 voltage regulator</label>
				<help>This driver controls a Maxim 8660/8661 voltage output
regulator via I2C bus.</help>
			</entry>
			<entry name="REGULATOR_MAX8907">
				<label>Maxim 8907 voltage regulator</label>
				<help>This driver controls a Maxim 8907 voltage output regulator
via I2C bus. The provided regulator is suitable for Tegra
chip to control Step-Down DC-DC and LDOs.</help>
			</entry>
			<entry name="REGULATOR_MAX8925">
				<label>Maxim MAX8925 Power Management IC</label>
				<help>Say y here to support the voltage regulaltor of Maxim MAX8925 PMIC.</help>
			</entry>
			<entry name="REGULATOR_MAX8952">
				<label>Maxim MAX8952 Power Management IC</label>
				<help>This driver controls a Maxim 8952 voltage output regulator
via I2C bus. Maxim 8952 has one voltage output and supports 4 DVS
modes ranging from 0.77V to 1.40V by 0.01V steps.</help>
			</entry>
			<entry name="REGULATOR_MAX8973">
				<label>Maxim MAX8973 voltage regulator </label>
				<help>The MAXIM MAX8973 high-efficiency. three phase, DC-DC step-down
switching regulator delievers up to 9A of output current. Each
phase operates at a 2MHz fixed frequency with a 120 deg shift
from the adjacent phase, allowing the use of small magnetic component.</help>
			</entry>
			<entry name="REGULATOR_MAX8997">
				<label>Maxim 8997/8966 regulator</label>
				<help>This driver controls a Maxim 8997/8966 regulator
via I2C bus. The provided regulator is suitable for S5PC110,
S5PV210, and Exynos-4 chips to control VCC_CORE and
VCC_USIM voltages.</help>
			</entry>
			<entry name="REGULATOR_MAX8998">
				<label>Maxim 8998 voltage regulator</label>
				<help>This driver controls a Maxim 8998 voltage output regulator
via I2C bus. The provided regulator is suitable for S3C6410
and S5PC1XX chips to control VCC_CORE and VCC_USIM voltages.</help>
			</entry>
			<entry name="REGULATOR_MAX77686">
				<label>Maxim 77686 regulator</label>
				<help>This driver controls a Maxim 77686 regulator
via I2C bus. The provided regulator is suitable for
Exynos-4 chips to control VARM and VINT voltages.</help>
			</entry>
			<entry name="REGULATOR_MAX77693">
				<label>Maxim 77693/77843 regulator</label>
				<help>This driver controls a Maxim 77693/77843 regulators via I2C bus.
The regulators include two LDOs, 'SAFEOUT1', 'SAFEOUT2'
and one current regulator 'CHARGER'. This is suitable for
Exynos-4x12 (MAX77693) or Exynos5433 (MAX77843) SoC chips.</help>
			</entry>
			<entry name="REGULATOR_MAX77802">
				<label>Maxim 77802 regulator</label>
				<help>This driver controls a Maxim 77802 regulator
via I2C bus. The provided regulator is suitable for
Exynos5420/Exynos5800 SoCs to control various voltages.
It includes support for control of voltage and ramp speed.</help>
			</entry>
			<entry name="REGULATOR_MC13XXX_CORE"/>
			<entry name="REGULATOR_MC13783">
				<label>Freescale MC13783 regulator driver</label>
				<help>Say y here to support the regulators found on the Freescale MC13783
PMIC.</help>
			</entry>
			<entry name="REGULATOR_MC13892">
				<label>Freescale MC13892 regulator driver</label>
				<help>Say y here to support the regulators found on the Freescale MC13892
PMIC.</help>
			</entry>
			<entry name="REGULATOR_MT6311">
				<label>MediaTek MT6311 PMIC</label>
				<help>Say y here to select this option to enable the power regulator of
MediaTek MT6311 PMIC.
This driver supports the control of different power rails of device
through regulator interface.</help>
			</entry>
			<entry name="REGULATOR_MT6323">
				<label>MediaTek MT6323 PMIC</label>
				<help>Say y here to select this option to enable the power regulator of
MediaTek MT6323 PMIC.
This driver supports the control of different power rails of device
through regulator interface.</help>
			</entry>
			<entry name="REGULATOR_MT6397">
				<label>MediaTek MT6397 PMIC</label>
				<help>Say y here to select this option to enable the power regulator of
MediaTek MT6397 PMIC.
This driver supports the control of different power rails of device
through regulator interface.</help>
			</entry>
			<entry name="REGULATOR_PALMAS">
				<label>TI Palmas PMIC Regulators</label>
				<help>If you wish to control the regulators on the Palmas series of
chips say Y here. This will enable support for all the software
controllable SMPS/LDO regulators.

The regulators available on Palmas series chips vary depending
on the muxing. This is handled automatically in the driver by
reading the mux info from OTP.</help>
			</entry>
			<entry name="REGULATOR_PBIAS">
				<label>PBIAS OMAP regulator driver</label>
				<help>Say y here to support pbias regulator for mmc1:SD card i/o
on OMAP SoCs.
This driver provides support for OMAP pbias modelled
regulators.</help>
			</entry>
			<entry name="REGULATOR_PCAP">
				<label>Motorola PCAP2 regulator driver</label>
				<help>This driver provides support for the voltage regulators of the
PCAP2 PMIC.</help>
			</entry>
			<entry name="REGULATOR_PCF50633">
				<label>NXP PCF50633 regulator driver</label>
				<help>Say Y here to support the voltage regulators and convertors
on PCF50633</help>
			</entry>
			<entry name="REGULATOR_PFUZE100">
				<label>Freescale PFUZE100/200/3000 regulator driver</label>
				<help>Say y here to support the regulators found on the Freescale
PFUZE100/200/3000 PMIC.</help>
			</entry>
			<entry name="REGULATOR_PV88060">
				<label>Powerventure Semiconductor PV88060 regulator</label>
				<help>Say y here to support the voltage regulators and convertors
PV88060</help>
			</entry>
			<entry name="REGULATOR_PV88080">
				<label>Powerventure Semiconductor PV88080 regulator</label>
				<help>Say y here to support the buck convertors on PV88080</help>
			</entry>
			<entry name="REGULATOR_PV88090">
				<label>Powerventure Semiconductor PV88090 regulator</label>
				<help>Say y here to support the voltage regulators and convertors
on PV88090</help>
			</entry>
			<entry name="REGULATOR_PWM">
				<label>PWM voltage regulator</label>
				<help>This driver supports PWM controlled voltage regulators. PWM
duty cycle can increase or decrease the voltage.</help>
			</entry>
			<entry name="REGULATOR_QCOM_RPM">
				<label>Qualcomm RPM regulator driver</label>
				<help>If you say yes to this option, support will be included for the
regulators exposed by the Resource Power Manager found in Qualcomm
8660, 8960 and 8064 based devices.

Say M here if you want to include support for the regulators on the
Qualcomm RPM as a module. The module will be named
&quot;qcom_rpm-regulator&quot;.</help>
			</entry>
			<entry name="REGULATOR_QCOM_SMD_RPM">
				<label>Qualcomm SMD based RPM regulator driver</label>
				<help>If you say yes to this option, support will be included for the
regulators exposed by the Resource Power Manager found in Qualcomm
8974 based devices.

Say M here if you want to include support for the regulators on the
Qualcomm RPM as a module. The module will be named
&quot;qcom_smd-regulator&quot;.</help>
			</entry>
			<entry name="REGULATOR_QCOM_SPMI">
				<label>Qualcomm SPMI regulator driver</label>
				<help>If you say yes to this option, support will be included for the
regulators found in Qualcomm SPMI PMICs.

Say M here if you want to include support for the regulators on the
Qualcomm SPMI PMICs as a module. The module will be named
&quot;qcom_spmi-regulator&quot;.</help>
			</entry>
			<entry name="REGULATOR_RC5T583">
				<label>RICOH RC5T583 Power regulators</label>
				<help>Select this option to enable the power regulator of RICOH
PMIC RC5T583.
This driver supports the control of different power rails of device
through regulator interface. The device supports multiple DCDC/LDO
outputs which can be controlled by i2c communication.</help>
			</entry>
			<entry name="REGULATOR_RK808">
				<label>Rockchip RK808 Power regulators</label>
				<help>Select this option to enable the power regulator of ROCKCHIP
PMIC RK808.
This driver supports the control of different power rails of device
through regulator interface. The device supports multiple DCDC/LDO
outputs which can be controlled by i2c communication.</help>
			</entry>
			<entry name="REGULATOR_RN5T618">
				<label>Ricoh RN5T567/618 voltage regulators</label>
				<help>Say y here to support the regulators found on Ricoh RN5T567 or
RN5T618 PMIC.</help>
			</entry>
			<entry name="REGULATOR_RT5033">
				<label>Richtek RT5033 Regulators</label>
				<help>This adds support for voltage and current regulators in Richtek
RT5033 PMIC. The device supports multiple regulators like
current source, LDO and Buck.</help>
			</entry>
			<entry name="REGULATOR_S2MPA01">
				<label>Samsung S2MPA01 voltage regulator</label>
				<help>This driver controls Samsung S2MPA01 voltage output regulator
via I2C bus. S2MPA01 has 10 Bucks and 26 LDO outputs.</help>
			</entry>
			<entry name="REGULATOR_S2MPS11">
				<label>Samsung S2MPS11/13/14/15/S2MPU02 voltage regulator</label>
				<help>This driver supports a Samsung S2MPS11/13/14/15/S2MPU02 voltage
output regulator via I2C bus. The chip is comprised of high efficient
Buck converters including Dual-Phase Buck converter, Buck-Boost
converter, various LDOs.</help>
			</entry>
			<entry name="REGULATOR_S5M8767">
				<label>Samsung S5M8767A voltage regulator</label>
				<help>This driver supports a Samsung S5M8767A voltage output regulator
via I2C bus. S5M8767A have 9 Bucks and 28 LDOs output and
supports DVS mode with 8bits of output voltage control.</help>
			</entry>
			<entry name="REGULATOR_SKY81452">
				<label>Skyworks Solutions SKY81452 voltage regulator</label>
				<help>This driver supports Skyworks SKY81452 voltage output regulator
via I2C bus. SKY81452 has one voltage linear regulator can be
programmed from 4.5V to 20V.

This driver can also be built as a module. If so, the module
will be called sky81452-regulator.</help>
			</entry>
			<entry name="REGULATOR_TI_ABB">
				<label>TI Adaptive Body Bias on-chip LDO</label>
				<help>Select this option to support Texas Instruments' on-chip Adaptive Body
Bias (ABB) LDO regulators. It is recommended that this option be
enabled on required TI SoC. Certain Operating Performance Points
on TI SoCs may be unstable without enabling this as it provides
device specific optimized bias to allow/optimize functionality.</help>
			</entry>
			<entry name="REGULATOR_STW481X_VMMC">
				<label>ST Microelectronics STW481X VMMC regulator</label>
				<help>This driver supports the internal VMMC regulator in the STw481x
PMIC chips.</help>
			</entry>
			<entry name="REGULATOR_TPS51632">
				<label>TI TPS51632 Power Regulator</label>
				<help>This driver supports TPS51632 voltage regulator chip.
The TPS51632 is 3-2-1 Phase D-Cap+ Step Down Driverless Controller
with Serial VID control and DVFS.
The voltage output can be configure through I2C interface or PWM
interface.</help>
			</entry>
			<entry name="REGULATOR_TPS6105X">
				<label>TI TPS6105X Power regulators</label>
				<help>This driver supports TPS61050/TPS61052 voltage regulator chips.
It is a single boost converter primarily for white LEDs and
audio amplifiers.</help>
			</entry>
			<entry name="REGULATOR_TPS62360">
				<label>TI TPS6236x Power Regulator</label>
				<help>This driver supports TPS6236x voltage regulator chip. This
regulator is meant for processor core supply. This chip is
high-frequency synchronous step down dc-dc converter optimized
for battery-powered portable applications.</help>
			</entry>
			<entry name="REGULATOR_TPS65023">
				<label>TI TPS65023 Power regulators</label>
				<help>This driver supports TPS65023 voltage regulator chips. TPS65023 provides
three step-down converters and two general-purpose LDO voltage regulators.
It supports TI's software based Class-2 SmartReflex implementation.</help>
			</entry>
			<entry name="REGULATOR_TPS6507X">
				<label>TI TPS6507X Power regulators</label>
				<help>This driver supports TPS6507X voltage regulator chips. TPS6507X provides
three step-down converters and two general-purpose LDO voltage regulators.
It supports TI's software based Class-2 SmartReflex implementation.</help>
			</entry>
			<entry name="REGULATOR_TPS65086">
				<label>TI TPS65086 Power regulators</label>
				<help>This driver provides support for the voltage regulators on
TI TPS65086 PMICs.</help>
			</entry>
			<entry name="REGULATOR_TPS65090">
				<label>TI TPS65090 Power regulator</label>
				<help>This driver provides support for the voltage regulators on the
TI TPS65090 PMIC.</help>
			</entry>
			<entry name="REGULATOR_TPS65217">
				<label>TI TPS65217 Power regulators</label>
				<help>This driver supports TPS65217 voltage regulator chips. TPS65217
provides three step-down converters and four general-purpose LDO
voltage regulators. It supports software based voltage control
for different voltage domains</help>
			</entry>
			<entry name="REGULATOR_TPS65218">
				<label>TI TPS65218 Power regulators</label>
				<help>This driver supports TPS65218 voltage regulator chips. TPS65218
provides six step-down converters and one general-purpose LDO
voltage regulators. It supports software based voltage control
for different voltage domains</help>
			</entry>
			<entry name="REGULATOR_TPS6524X">
				<label>TI TPS6524X Power regulators</label>
				<help>This driver supports TPS6524X voltage regulator chips. TPS6524X
provides three step-down converters and two general-purpose LDO
voltage regulators.  This device is interfaced using a customized
serial interface currently supported on the sequencer serial
port controller.</help>
			</entry>
			<entry name="REGULATOR_TPS6586X">
				<label>TI TPS6586X Power regulators</label>
				<help>This driver supports TPS6586X voltage regulator chips.</help>
			</entry>
			<entry name="REGULATOR_TPS65910">
				<label>TI TPS65910/TPS65911 Power Regulators</label>
				<help>This driver supports TPS65910/TPS65911 voltage regulator chips.</help>
			</entry>
			<entry name="REGULATOR_TPS65912">
				<label>TI TPS65912 Power regulator</label>
				<help>This driver supports TPS65912 voltage regulator chip.</help>
			</entry>
			<entry name="REGULATOR_TPS80031">
				<label>TI TPS80031/TPS80032 power regualtor driver</label>
				<help>TPS80031/ TPS80032 Fully Integrated Power Management with Power
Path and Battery Charger. It has 5 configurable step-down
converters, 11 general purpose LDOs, VBUS generator and digital
output to control regulators.</help>
			</entry>
			<entry name="REGULATOR_TWL4030">
				<label>TI TWL4030/TWL5030/TWL6030/TPS659x0 PMIC</label>
				<help>This driver supports the voltage regulators provided by
this family of companion chips.</help>
			</entry>
			<entry name="REGULATOR_VEXPRESS">
				<label>Versatile Express regulators</label>
				<help>This driver provides support for voltage regulators available
on the ARM Ltd's Versatile Express platform.</help>
			</entry>
			<entry name="REGULATOR_WM831X">
				<label>Wolfson Microelectronics WM831x PMIC regulators</label>
				<help>Support the voltage and current regulators of the WM831x series
of PMIC devices.</help>
			</entry>
			<entry name="REGULATOR_WM8350">
				<label>Wolfson Microelectronics WM8350 AudioPlus PMIC</label>
				<help>This driver provides support for the voltage and current regulators
of the WM8350 AudioPlus PMIC.</help>
			</entry>
			<entry name="REGULATOR_WM8400">
				<label>Wolfson Microelectronics WM8400 AudioPlus PMIC</label>
				<help>This driver provides support for the voltage regulators of the
WM8400 AudioPlus PMIC.</help>
			</entry>
			<entry name="REGULATOR_WM8994">
				<label>Wolfson Microelectronics WM8994 CODEC</label>
				<help>This driver provides support for the voltage regulators on the
WM8994 CODEC.</help>
			</entry>
			<entry name="MEDIA_SUPPORT">
				<label>Multimedia support</label>
				<help>If you want to use Webcams, Video grabber devices and/or TV devices
enable this option and other options below.
Additional info and docs are available on the web at
&lt;https://linuxtv.org&gt;</help>
			</entry>
			<entry name="MEDIA_CAMERA_SUPPORT">
				<label>Cameras/video grabbers support</label>
				<help>Enable support for webcams and video grabbers.

Say Y when you have a webcam or a video capture grabber board.</help>
			</entry>
			<entry name="MEDIA_ANALOG_TV_SUPPORT">
				<label>Analog TV support</label>
				<help>Enable analog TV support.

Say Y when you have a TV board with analog support or with a
hybrid analog/digital TV chipset.

Note: There are several DVB cards that are based on chips that
support both analog and digital TV. Disabling this option
will disable support for them.</help>
			</entry>
			<entry name="MEDIA_DIGITAL_TV_SUPPORT">
				<label>Digital TV support</label>
				<help>Enable digital TV support.

Say Y when you have a board with digital support or a board with
hybrid digital TV and analog TV.</help>
			</entry>
			<entry name="MEDIA_RADIO_SUPPORT">
				<label>AM/FM radio receivers/transmitters support</label>
				<help>Enable AM/FM radio support.

Additional info and docs are available on the web at
&lt;https://linuxtv.org&gt;

Say Y when you have a board with radio support.

Note: There are several TV cards that are based on chips that
support radio reception. Disabling this option will
disable support for them.</help>
			</entry>
			<entry name="MEDIA_SDR_SUPPORT">
				<label>Software defined radio support</label>
				<help>Enable software defined radio support.

Say Y when you have a software defined radio device.</help>
			</entry>
			<entry name="MEDIA_RC_SUPPORT">
				<label>Remote Controller support</label>
				<help>Enable support for Remote Controllers on Linux. This is
needed in order to support several video capture adapters,
standalone IR receivers/transmitters, and RF receivers.

Enable this option if you have a video capture board even
if you don't need IR, as otherwise, you may not be able to
compile the driver for your adapter.

Say Y when you have a TV or an IR device.</help>
			</entry>
			<entry name="MEDIA_CEC_EDID"/>
			<entry name="MEDIA_CONTROLLER">
				<label>Media Controller API</label>
				<help>Enable the media controller API used to query media devices internal
topology and configure it dynamically.

This API is mostly used by camera interfaces in embedded platforms.</help>
			</entry>
			<entry name="MEDIA_CONTROLLER_DVB">
				<label>Enable Media controller for DVB (EXPERIMENTAL)</label>
				<help>Enable the media controller API support for DVB.

This is currently experimental.</help>
			</entry>
			<entry name="VIDEO_DEV"/>
			<entry name="VIDEO_V4L2_SUBDEV_API">
				<label>V4L2 sub-device userspace API</label>
				<help>Enables the V4L2 sub-device pad-level userspace API used to configure
video format, size and frame rate between hardware blocks.

This API is mostly used by camera interfaces in embedded platforms.</help>
			</entry>
			<entry name="VIDEO_V4L2"/>
			<entry name="VIDEO_ADV_DEBUG">
				<label>Enable advanced debug functionality on V4L2 drivers</label>
				<help>Say Y here to enable advanced debugging functionality on some
V4L devices.
In doubt, say N.</help>
			</entry>
			<entry name="VIDEO_FIXED_MINOR_RANGES">
				<label>Enable old-style fixed minor ranges on drivers/video devices</label>
				<help>Say Y here to enable the old-style fixed-range minor assignments.
Only useful if you rely on the old behavior and use mknod instead of udev.

When in doubt, say N.</help>
			</entry>
			<entry name="VIDEO_PCI_SKELETON">
				<label>Skeleton PCI V4L2 driver</label>
				<help>Enable build of the skeleton PCI driver, used as a reference
when developing new drivers.</help>
			</entry>
			<entry name="VIDEO_TUNER"/>
			<entry name="V4L2_MEM2MEM_DEV"/>
			<entry name="V4L2_FLASH_LED_CLASS">
				<label>V4L2 flash API for LED flash class devices</label>
				<help>Say Y here to enable V4L2 flash API support for LED flash
class drivers.

When in doubt, say N.</help>
			</entry>
			<entry name="VIDEOBUF_GEN"/>
			<entry name="VIDEOBUF_DMA_SG"/>
			<entry name="VIDEOBUF_VMALLOC"/>
			<entry name="VIDEOBUF_DMA_CONTIG"/>
			<entry name="VIDEOBUF_DVB"/>
			<entry name="VIDEOBUF2_CORE"/>
			<entry name="VIDEOBUF2_MEMOPS"/>
			<entry name="VIDEOBUF2_DMA_CONTIG"/>
			<entry name="VIDEOBUF2_VMALLOC"/>
			<entry name="VIDEOBUF2_DMA_SG"/>
			<entry name="VIDEOBUF2_DVB"/>
			<entry name="DVB_CORE"/>
			<entry name="DVB_NET">
				<label>DVB Network Support</label>
				<help>This option enables DVB Network Support which is a part of the DVB
standard. It is used, for example, by automatic firmware updates used
on Set-Top-Boxes. It can also be used to access the Internet via the
DVB card, if the network provider supports it.

You may want to disable the network support on embedded devices. If
unsure say Y.</help>
			</entry>
			<entry name="TTPCI_EEPROM"/>
			<entry name="DVB_MAX_ADAPTERS">
				<label>maximum number of DVB/ATSC adapters</label>
				<help>Maximum number of DVB/ATSC adapters. Increasing this number
increases the memory consumption of the DVB subsystem even
if a much lower number of DVB/ATSC adapters is present.
Only values in the range 4-32 are tested.

If you are unsure about this, use the default value 8</help>
			</entry>
			<entry name="DVB_DYNAMIC_MINORS">
				<label>Dynamic DVB minor allocation</label>
				<help>If you say Y here, the DVB subsystem will use dynamic minor
allocation for any device that uses the DVB major number.
This means that you can have more than 4 of a single type
of device (like demuxes and frontends) per adapter, but udev
will be required to manage the device nodes.

If you are unsure about this, say N here.
</help>
			</entry>
			<entry name="RC_CORE"/>
			<entry name="RC_MAP">
				<label>Compile Remote Controller keymap modules</label>
				<help>This option enables the compilation of lots of Remote
Controller tables. They are short tables, but if you
don't use a remote controller, or prefer to load the
tables on userspace, you should disable it.

The ir-keytable program, available at v4l-utils package
provide the tool and the same RC maps for load from
userspace. Its available at
http://git.linuxtv.org/cgit.cgi/v4l-utils.git/
</help>
			</entry>
			<entry name="RC_DECODERS">
				<label>Remote controller decoders</label>
			</entry>
			<entry name="LIRC">
				<label>LIRC interface driver</label>
				<help>Enable this option to build the Linux Infrared Remote
Control (LIRC) core device interface driver. The LIRC
interface passes raw IR to and from userspace, where the
LIRC daemon handles protocol decoding for IR reception and
encoding for IR transmitting (aka &quot;blasting&quot;).</help>
			</entry>
			<entry name="IR_LIRC_CODEC">
				<label>Enable IR to LIRC bridge</label>
				<help>Enable this option to pass raw IR to and from userspace via
the LIRC interface.</help>
			</entry>
			<entry name="IR_NEC_DECODER">
				<label>Enable IR raw decoder for the NEC protocol</label>
				<help>Enable this option if you have IR with NEC protocol, and
if the IR is decoded in software</help>
			</entry>
			<entry name="IR_RC5_DECODER">
				<label>Enable IR raw decoder for the RC-5 protocol</label>
				<help>Enable this option if you have IR with RC-5 protocol, and
if the IR is decoded in software</help>
			</entry>
			<entry name="IR_RC6_DECODER">
				<label>Enable IR raw decoder for the RC6 protocol</label>
				<help>Enable this option if you have an infrared remote control which
uses the RC6 protocol, and you need software decoding support.</help>
			</entry>
			<entry name="IR_JVC_DECODER">
				<label>Enable IR raw decoder for the JVC protocol</label>
				<help>Enable this option if you have an infrared remote control which
uses the JVC protocol, and you need software decoding support.</help>
			</entry>
			<entry name="IR_SONY_DECODER">
				<label>Enable IR raw decoder for the Sony protocol</label>
				<help>Enable this option if you have an infrared remote control which
uses the Sony protocol, and you need software decoding support.</help>
			</entry>
			<entry name="IR_SANYO_DECODER">
				<label>Enable IR raw decoder for the Sanyo protocol</label>
				<help>Enable this option if you have an infrared remote control which
uses the Sanyo protocol (Sanyo, Aiwa, Chinon remotes),
and you need software decoding support.</help>
			</entry>
			<entry name="IR_SHARP_DECODER">
				<label>Enable IR raw decoder for the Sharp protocol</label>
				<help>Enable this option if you have an infrared remote control which
uses the Sharp protocol (Sharp, Denon), and you need software
decoding support.</help>
			</entry>
			<entry name="IR_MCE_KBD_DECODER">
				<label>Enable IR raw decoder for the MCE keyboard/mouse protocol</label>
				<help>Enable this option if you have a Microsoft Remote Keyboard for
Windows Media Center Edition, which you would like to use with
a raw IR receiver in your system.</help>
			</entry>
			<entry name="IR_XMP_DECODER">
				<label>Enable IR raw decoder for the XMP protocol</label>
				<help>Enable this option if you have IR with XMP protocol, and
if the IR is decoded in software</help>
			</entry>
			<entry name="RC_DEVICES">
				<label>Remote Controller devices</label>
			</entry>
			<entry name="RC_ATI_REMOTE">
				<label>ATI / X10 based USB RF remote controls</label>
				<help>Say Y here if you want to use an X10 based USB remote control.
These are RF remotes with USB receivers.

Such devices include the ATI remote that comes with many of ATI's
All-In-Wonder video cards, the X10 &quot;Lola&quot; remote, NVIDIA RF remote,
Medion RF remote, and SnapStream FireFly remote.

This driver provides mouse pointer, left and right mouse buttons,
and maps all the other remote buttons to keypress events.

To compile this driver as a module, choose M here: the module will be
called ati_remote.</help>
			</entry>
			<entry name="IR_ENE">
				<label>ENE eHome Receiver/Transceiver (pnp id: ENE0100/ENE02xxx)</label>
				<help>Say Y here to enable support for integrated infrared receiver
/transceiver made by ENE.

You can see if you have it by looking at lspnp output.
Output should include ENE0100 ENE0200 or something similar.

To compile this driver as a module, choose M here: the
module will be called ene_ir.</help>
			</entry>
			<entry name="IR_HIX5HD2">
				<label>Hisilicon hix5hd2 IR remote control</label>
				<help>Say Y here if you want to use hisilicon hix5hd2 remote control.
To compile this driver as a module, choose M here: the module will be
called ir-hix5hd2.

If you're not sure, select N here</help>
			</entry>
			<entry name="IR_IMON">
				<label>SoundGraph iMON Receiver and Display</label>
				<help>Say Y here if you want to use a SoundGraph iMON (aka Antec Veris)
IR Receiver and/or LCD/VFD/VGA display.

To compile this driver as a module, choose M here: the
module will be called imon.</help>
			</entry>
			<entry name="IR_MCEUSB">
				<label>Windows Media Center Ed. eHome Infrared Transceiver</label>
				<help>Say Y here if you want to use a Windows Media Center Edition
eHome Infrared Transceiver.

To compile this driver as a module, choose M here: the
module will be called mceusb.</help>
			</entry>
			<entry name="IR_ITE_CIR">
				<label>ITE Tech Inc. IT8712/IT8512 Consumer Infrared Transceiver</label>
				<help>Say Y here to enable support for integrated infrared receivers
/transceivers made by ITE Tech Inc. These are found in
several ASUS devices, like the ASUS Digimatrix or the ASUS
EEEBox 1501U.

To compile this driver as a module, choose M here: the
module will be called ite-cir.</help>
			</entry>
			<entry name="IR_FINTEK">
				<label>Fintek Consumer Infrared Transceiver</label>
				<help>Say Y here to enable support for integrated infrared receiver
/transciever made by Fintek. This chip is found on assorted
Jetway motherboards (and of course, possibly others).

To compile this driver as a module, choose M here: the
module will be called fintek-cir.</help>
			</entry>
			<entry name="IR_MESON">
				<label>Amlogic Meson IR remote receiver</label>
				<help>Say Y if you want to use the IR remote receiver available
on Amlogic Meson SoCs.

To compile this driver as a module, choose M here: the
module will be called meson-ir.</help>
			</entry>
			<entry name="IR_NUVOTON">
				<label>Nuvoton w836x7hg Consumer Infrared Transceiver</label>
				<help>Say Y here to enable support for integrated infrared receiver
/transciever made by Nuvoton (formerly Winbond). This chip is
found in the ASRock ION 330HT, as well as assorted Intel
DP55-series motherboards (and of course, possibly others).

To compile this driver as a module, choose M here: the
module will be called nuvoton-cir.</help>
			</entry>
			<entry name="IR_REDRAT3">
				<label>RedRat3 IR Transceiver</label>
				<help>Say Y here if you want to use a RedRat3 Infrared Transceiver.

To compile this driver as a module, choose M here: the
module will be called redrat3.</help>
			</entry>
			<entry name="IR_STREAMZAP">
				<label>Streamzap PC Remote IR Receiver</label>
				<help>Say Y here if you want to use a Streamzap PC Remote
Infrared Receiver.

To compile this driver as a module, choose M here: the
module will be called streamzap.</help>
			</entry>
			<entry name="IR_WINBOND_CIR">
				<label>Winbond IR remote control</label>
				<help>Say Y here if you want to use the IR remote functionality found
in some Winbond SuperI/O chips. Currently only the WPCD376I
chip is supported (included in some Intel Media series
motherboards).

To compile this driver as a module, choose M here: the module will
be called winbond_cir.</help>
			</entry>
			<entry name="IR_IGORPLUGUSB">
				<label>IgorPlug-USB IR Receiver</label>
				<help>Say Y here if you want to use the IgorPlug-USB IR Receiver by
Igor Cesko. This device is included on the Fit-PC2.

Note that this device can only record bursts of 36 IR pulses and
spaces, which is not enough for the NEC, Sanyo and RC-6 protocol.

To compile this driver as a module, choose M here: the module will
be called igorplugusb.</help>
			</entry>
			<entry name="IR_IGUANA">
				<label>IguanaWorks USB IR Transceiver</label>
				<help>Say Y here if you want to use the IguanaWorks USB IR Transceiver.
Both infrared receive and send are supported. If you want to
change the ID or the pin config, use the user space driver from
IguanaWorks.

Only firmware 0x0205 and later is supported.

To compile this driver as a module, choose M here: the module will
be called iguanair.</help>
			</entry>
			<entry name="IR_TTUSBIR">
				<label>TechnoTrend USB IR Receiver</label>
				<help>Say Y here if you want to use the TechnoTrend USB IR Receiver. The
driver can control the led.

To compile this driver as a module, choose M here: the module will
be called ttusbir.</help>
			</entry>
			<entry name="IR_RX51">
				<label>Nokia N900 IR transmitter diode</label>
				<help>Say Y or M here if you want to enable support for the IR
transmitter diode built in the Nokia N900 (RX51) device.

The driver uses omap DM timers for generating the carrier
wave and pulses.</help>
			</entry>
			<entry name="IR_IMG">
				<label>ImgTec IR Decoder</label>
				<help>Say Y or M here if you want to use the ImgTec infrared decoder
functionality found in SoCs such as TZ1090.</help>
			</entry>
			<entry name="IR_IMG_RAW">
				<label>Raw decoder</label>
				<help>Say Y here to enable the raw mode driver which passes raw IR signal
changes to the IR raw decoders for software decoding. This is much
less reliable (due to lack of timestamps) and consumes more
processing power than using hardware decode, but can be useful for
testing, debug, and to make more protocols available.</help>
			</entry>
			<entry name="IR_IMG_HW">
				<label>Hardware decoder</label>
				<help>Say Y here to enable the hardware decode driver which decodes the IR
signals in hardware. This is more reliable, consumes less processing
power since only a single interrupt is received for each scancode,
and allows an IR scancode to be used as a wake event.</help>
			</entry>
			<entry name="IR_IMG_NEC">
				<label>NEC protocol support</label>
				<help>Say Y here to enable support for the NEC, extended NEC, and 32-bit
NEC protocols in the ImgTec infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_JVC">
				<label>JVC protocol support</label>
				<help>Say Y here to enable support for the JVC protocol in the ImgTec
infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_SONY">
				<label>Sony protocol support</label>
				<help>Say Y here to enable support for the Sony protocol in the ImgTec
infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_SHARP">
				<label>Sharp protocol support</label>
				<help>Say Y here to enable support for the Sharp protocol in the ImgTec
infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_SANYO">
				<label>Sanyo protocol support</label>
				<help>Say Y here to enable support for the Sanyo protocol (used by Sanyo,
Aiwa, Chinon remotes) in the ImgTec infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_RC5">
				<label>Philips RC5 protocol support</label>
				<help>Say Y here to enable support for the RC5 protocol in the ImgTec
infrared decoder block.</help>
			</entry>
			<entry name="IR_IMG_RC6">
				<label>Philips RC6 protocol support</label>
				<help>Say Y here to enable support for the RC6 protocol in the ImgTec
infrared decoder block.
Note: This version only supports mode 0.
</help>
			</entry>
			<entry name="RC_LOOPBACK">
				<label>Remote Control Loopback Driver</label>
				<help>Say Y here if you want support for the remote control loopback
driver which allows TX data to be sent back as RX data.
This is mostly useful for debugging purposes.

If you're not sure, select N here.

To compile this driver as a module, choose M here: the module will
be called rc_loopback.</help>
			</entry>
			<entry name="IR_GPIO_CIR">
				<label>GPIO IR remote control</label>
				<help>Say Y if you want to use GPIO based IR Receiver.

To compile this driver as a module, choose M here: the module will
be called gpio-ir-recv.</help>
			</entry>
			<entry name="RC_ST">
				<label>ST remote control receiver</label>
				<help>Say Y here if you want support for ST remote control driver
which allows both IR and UHF RX.
The driver passes raw pulse and space information to the LIRC decoder.

If you're not sure, select N here.</help>
			</entry>
			<entry name="IR_SUNXI">
				<label>SUNXI IR remote control</label>
				<help>Say Y if you want to use sunXi internal IR Controller

To compile this driver as a module, choose M here: the module will
be called sunxi-ir.</help>
			</entry>
			<entry name="MEDIA_USB_SUPPORT">
				<label>Media USB Adapters</label>
				<help>Enable media drivers for USB bus.
If you have such devices, say Y.</help>
			</entry>
			<entry name="USB_VIDEO_CLASS">
				<label>USB Video Class (UVC)</label>
				<help>Support for the USB Video Class (UVC).  Currently only video
input devices, such as webcams, are supported.

For more information see: &lt;http://linux-uvc.berlios.de/&gt;</help>
			</entry>
			<entry name="USB_VIDEO_CLASS_INPUT_EVDEV">
				<label>UVC input events device support</label>
				<help>This option makes USB Video Class devices register an input device
to report button events.

If you are in doubt, say Y.
</help>
			</entry>
			<entry name="USB_GSPCA">
				<label>GSPCA based webcams</label>
				<help>Say Y here if you want to enable selecting webcams based
on the GSPCA framework.

See &lt;file:Documentation/video4linux/gspca.txt&gt; for more info.

This driver uses the Video For Linux API. You must say Y or M to
&quot;Video For Linux&quot; to use this driver.

To compile this driver as modules, choose M here: the
module will be called gspca_main.</help>
			</entry>
			<entry name="USB_M5602">
				<label>ALi USB m5602 Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the
ALi m5602 connected to various image sensors.

See &lt;file:Documentation/video4linux/m5602.txt&gt; for more info.

To compile this driver as a module, choose M here: the
module will be called gspca_m5602.
</help>
			</entry>
			<entry name="USB_STV06XX">
				<label>STV06XX USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on
the ST STV06XX chip.

To compile this driver as a module, choose M here: the
module will be called gspca_stv06xx.
</help>
			</entry>
			<entry name="USB_GL860">
				<label>GL860 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the GL860 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_gl860.
</help>
			</entry>
			<entry name="USB_GSPCA_BENQ">
				<label>Benq USB Camera Driver</label>
				<help>Say Y here if you want support for the Benq DC E300 camera.

To compile this driver as a module, choose M here: the
module will be called gspca_benq.</help>
			</entry>
			<entry name="USB_GSPCA_CONEX">
				<label>Conexant Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Conexant chip.

To compile this driver as a module, choose M here: the
module will be called gspca_conex.</help>
			</entry>
			<entry name="USB_GSPCA_CPIA1">
				<label>cpia CPiA (version 1) Camera Driver</label>
				<help>Say Y here if you want support for USB cameras based on the cpia
CPiA chip. Note that you need atleast version 0.6.4 of libv4l for
applications to understand the videoformat generated by this driver.

To compile this driver as a module, choose M here: the
module will be called gspca_cpia1.</help>
			</entry>
			<entry name="USB_GSPCA_DTCS033">
				<label>DTCS033 (Scopium) USB Astro-Camera Driver</label>
				<help>Say Y here if you want support for the Scopium camera
for planetary astrophotography.

To compile this driver as a module, choose M here: the
module will be called gspca_dtcs033.</help>
			</entry>
			<entry name="USB_GSPCA_ETOMS">
				<label>Etoms USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Etoms chip.

To compile this driver as a module, choose M here: the
module will be called gspca_etoms.</help>
			</entry>
			<entry name="USB_GSPCA_FINEPIX">
				<label>Fujifilm FinePix USB V4L2 driver</label>
				<help>Say Y here if you want support for cameras based on the FinePix chip.

To compile this driver as a module, choose M here: the
module will be called gspca_finepix.</help>
			</entry>
			<entry name="USB_GSPCA_JEILINJ">
				<label>Jeilin JPEG USB V4L2 driver</label>
				<help>Say Y here if you want support for cameras based on this Jeilin chip.

To compile this driver as a module, choose M here: the
module will be called gspca_jeilinj.</help>
			</entry>
			<entry name="USB_GSPCA_JL2005BCD">
				<label>JL2005B/C/D USB V4L2 driver</label>
				<help>Say Y here if you want support for cameras based the
JL2005B, JL2005C, or JL2005D chip.

To compile this driver as a module, choose M here: the
module will be called gspca_jl2005bcd.</help>
			</entry>
			<entry name="USB_GSPCA_KINECT">
				<label>Kinect sensor device USB Camera Driver</label>
				<help>Say Y here if you want support for the Microsoft Kinect sensor device.

To compile this driver as a module, choose M here: the
module will be called gspca_kinect.</help>
			</entry>
			<entry name="USB_GSPCA_KONICA">
				<label>Konica USB Camera V4L2 driver</label>
				<help>Say Y here if you want support for cameras based on the Konica chip.

To compile this driver as a module, choose M here: the
module will be called gspca_konica.</help>
			</entry>
			<entry name="USB_GSPCA_MARS">
				<label>Mars USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Mars chip.

To compile this driver as a module, choose M here: the
module will be called gspca_mars.</help>
			</entry>
			<entry name="USB_GSPCA_MR97310A">
				<label>Mars-Semi MR97310A USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the MR97310A chip.

To compile this driver as a module, choose M here: the
module will be called gspca_mr97310a.</help>
			</entry>
			<entry name="USB_GSPCA_NW80X">
				<label>Divio based (NW80x) USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the NW80x chips.

To compile this driver as a module, choose M here: the
module will be called gspca_nw80x.</help>
			</entry>
			<entry name="USB_GSPCA_OV519">
				<label>OV51x / OVFX2 / W996xCF USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on one of these:
OV511(+), OV518(+), OV519, OVFX2, W9967CF, W9968CF

To compile this driver as a module, choose M here: the
module will be called gspca_ov519.</help>
			</entry>
			<entry name="USB_GSPCA_OV534">
				<label>OV534 OV772x USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the OV534 chip
and sensor OV772x (e.g. Sony Playstation EYE)

To compile this driver as a module, choose M here: the
module will be called gspca_ov534.</help>
			</entry>
			<entry name="USB_GSPCA_OV534_9">
				<label>OV534 OV965x USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the OV534 chip
and sensor OV965x (e.g. Hercules Dualpix)

To compile this driver as a module, choose M here: the
module will be called gspca_ov534_9.</help>
			</entry>
			<entry name="USB_GSPCA_PAC207">
				<label>Pixart PAC207 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the PAC207 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_pac207.</help>
			</entry>
			<entry name="USB_GSPCA_PAC7302">
				<label>Pixart PAC7302 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the PAC7302 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_pac7302.</help>
			</entry>
			<entry name="USB_GSPCA_PAC7311">
				<label>Pixart PAC7311 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the PAC7311 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_pac7311.</help>
			</entry>
			<entry name="USB_GSPCA_SE401">
				<label>SE401 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the
Endpoints (formerly known as AOX) se401 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_se401.</help>
			</entry>
			<entry name="USB_GSPCA_SN9C2028">
				<label>SONIX Dual-Mode USB Camera Driver</label>
				<help>Say Y here if you want streaming support for Sonix SN9C2028 cameras.
These are supported as stillcams in libgphoto2/camlibs/sonix.

To compile this driver as a module, choose M here: the
module will be called gspca_sn9c2028.</help>
			</entry>
			<entry name="USB_GSPCA_SN9C20X">
				<label>SN9C20X USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the
sn9c20x chips (SN9C201 and SN9C202).

To compile this driver as a module, choose M here: the
module will be called gspca_sn9c20x.</help>
			</entry>
			<entry name="USB_GSPCA_SONIXB">
				<label>SONIX Bayer USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Sonix
chips with Bayer format (SN9C101, SN9C102 and SN9C103).

To compile this driver as a module, choose M here: the
module will be called gspca_sonixb.</help>
			</entry>
			<entry name="USB_GSPCA_SONIXJ">
				<label>SONIX JPEG USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Sonix
chips with JPEG format (SN9C102P, SN9C105 and &gt;= SN9C110).

To compile this driver as a module, choose M here: the
module will be called gspca_sonixj</help>
			</entry>
			<entry name="USB_GSPCA_SPCA500">
				<label>SPCA500 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA500 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca500.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA501">
				<label>SPCA501 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA501 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca501.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA505">
				<label>SPCA505 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA505 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca505.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA506">
				<label>SPCA506 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA506 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca506.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA508">
				<label>SPCA508 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA508 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca508.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA561">
				<label>SPCA561 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA561 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca561.</help>
			</entry>
			<entry name="USB_GSPCA_SPCA1528">
				<label>SPCA1528 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SPCA1528 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_spca1528.</help>
			</entry>
			<entry name="USB_GSPCA_SQ905">
				<label>SQ Technologies SQ905 based USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SQ905 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_sq905.</help>
			</entry>
			<entry name="USB_GSPCA_SQ905C">
				<label>SQ Technologies SQ905C based USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SQ905C chip.

To compile this driver as a module, choose M here: the
module will be called gspca_sq905c.</help>
			</entry>
			<entry name="USB_GSPCA_SQ930X">
				<label>SQ Technologies SQ930X based USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the SQ930X chip.

To compile this driver as a module, choose M here: the
module will be called gspca_sq930x.</help>
			</entry>
			<entry name="USB_GSPCA_STK014">
				<label>Syntek DV4000 (STK014) USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the STK014 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_stk014.</help>
			</entry>
			<entry name="USB_GSPCA_STK1135">
				<label>Syntek STK1135 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the STK1135 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_stk1135.</help>
			</entry>
			<entry name="USB_GSPCA_STV0680">
				<label>STV0680 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the STV0680 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_stv0680.</help>
			</entry>
			<entry name="USB_GSPCA_SUNPLUS">
				<label>SUNPLUS USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the Sunplus
SPCA504(abc) SPCA533 SPCA536 chips.

To compile this driver as a module, choose M here: the
module will be called gspca_sunplus.</help>
			</entry>
			<entry name="USB_GSPCA_T613">
				<label>T613 (JPEG Compliance) USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the T613 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_t613.</help>
			</entry>
			<entry name="USB_GSPCA_TOPRO">
				<label>TOPRO USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the
TP6800 and TP6810 Topro chips.

To compile this driver as a module, choose M here: the
module will be called gspca_topro.</help>
			</entry>
			<entry name="USB_GSPCA_TOUPTEK">
				<label>Touptek USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the ToupTek UCMOS
/ AmScope MU series camera.

To compile this driver as a module, choose M here: the
module will be called gspca_touptek.</help>
			</entry>
			<entry name="USB_GSPCA_TV8532">
				<label>TV8532 USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the TV8531 chip.

To compile this driver as a module, choose M here: the
module will be called gspca_tv8532.</help>
			</entry>
			<entry name="USB_GSPCA_VC032X">
				<label>VC032X USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the VC032X chip.

To compile this driver as a module, choose M here: the
module will be called gspca_vc032x.</help>
			</entry>
			<entry name="USB_GSPCA_VICAM">
				<label>ViCam USB Camera Driver</label>
				<help>Say Y here if you want support for the 3com homeconnect camera
(vicam).

To compile this driver as a module, choose M here: the
module will be called gspca_vicam.</help>
			</entry>
			<entry name="USB_GSPCA_XIRLINK_CIT">
				<label>Xirlink C-It USB Camera Driver</label>
				<help>Say Y here if you want support for Xirlink C-It bases cameras.

To compile this driver as a module, choose M here: the
module will be called gspca_xirlink_cit.</help>
			</entry>
			<entry name="USB_GSPCA_ZC3XX">
				<label>ZC3XX USB Camera Driver</label>
				<help>Say Y here if you want support for cameras based on the ZC3XX chip.

To compile this driver as a module, choose M here: the
module will be called gspca_zc3xx.</help>
			</entry>
			<entry name="USB_PWC">
				<label>USB Philips Cameras</label>
				<help>Say Y or M here if you want to use one of these Philips &amp; OEM
webcams:
* Philips PCA645, PCA646
* Philips PCVC675, PCVC680, PCVC690
* Philips PCVC720/40, PCVC730, PCVC740, PCVC750
* Philips SPC900NC
* Askey VC010
* Logitech QuickCam Pro 3000, 4000, 'Zoom', 'Notebook Pro'
and 'Orbit'/'Sphere'
* Samsung MPC-C10, MPC-C30
* Creative Webcam 5, Pro Ex
* SOTEC Afina Eye
* Visionite VCS-UC300, VCS-UM100

The PCA635, PCVC665 and PCVC720/20 are not supported by this driver
and never will be, but the 665 and 720/20 are supported by other
drivers.

Some newer logitech webcams are not handled by this driver but by the
Usb Video Class driver (linux-uvc).

The built-in microphone is enabled by selecting USB Audio support.

To compile this driver as a module, choose M here: the
module will be called pwc.</help>
			</entry>
			<entry name="USB_PWC_DEBUG">
				<label>USB Philips Cameras verbose debug</label>
				<help>Say Y here in order to have the pwc driver generate verbose debugging
messages.
A special module options 'trace' is used to control the verbosity.</help>
			</entry>
			<entry name="USB_PWC_INPUT_EVDEV">
				<label>USB Philips Cameras input events device support</label>
				<help>This option makes USB Philips cameras register the snapshot button as
an input device to report button events.

If you are in doubt, say Y.
</help>
			</entry>
			<entry name="VIDEO_CPIA2">
				<label>CPiA2 Video For Linux</label>
				<help>This is the video4linux driver for cameras based on Vision's CPiA2
(Colour Processor Interface ASIC), such as the Digital Blue QX5
Microscope. If you have one of these cameras, say Y here

This driver is also available as a module (cpia2).
</help>
			</entry>
			<entry name="USB_ZR364XX">
				<label>USB ZR364XX Camera support</label>
				<help>Say Y here if you want to connect this type of camera to your
computer's USB port.
See &lt;file:Documentation/video4linux/zr364xx.txt&gt; for more info
and list of supported cameras.

To compile this driver as a module, choose M here: the
module will be called zr364xx.

</help>
			</entry>
			<entry name="USB_STKWEBCAM">
				<label>USB Syntek DC1125 Camera support</label>
				<help>Say Y here if you want to use this type of camera.
Supported devices are typically found in some Asus laptops,
with USB id 174f:a311 and 05e1:0501. Other Syntek cameras
may be supported by the stk11xx driver, from which this is
derived, see &lt;http://sourceforge.net/projects/syntekdriver/&gt;

To compile this driver as a module, choose M here: the
module will be called stkwebcam.

</help>
			</entry>
			<entry name="USB_S2255">
				<label>USB Sensoray 2255 video capture device</label>
				<help>Say Y here if you want support for the Sensoray 2255 USB device.
This driver can be compiled as a module, called s2255drv.

</help>
			</entry>
			<entry name="VIDEO_USBTV">
				<label>USBTV007 video capture support</label>
				<help>This is a video4linux2 driver for USBTV007 based video capture devices.

To compile this driver as a module, choose M here: the
module will be called usbtv
</help>
			</entry>
			<entry name="VIDEO_PVRUSB2">
				<label>Hauppauge WinTV-PVR USB2 support</label>
				<help>This is a video4linux driver for Conexant 23416 based
usb2 personal video recorder devices.

To compile this driver as a module, choose M here: the
module will be called pvrusb2</help>
			</entry>
			<entry name="VIDEO_PVRUSB2_SYSFS">
				<label>pvrusb2 sysfs support</label>
				<help>This option enables the operation of a sysfs based
interface for query and control of the pvrusb2 driver.

This is not generally needed for v4l applications,
although certain applications are optimized to take
advantage of this feature.

If you are in doubt, say Y.

Note: This feature is experimental and subject to change.</help>
			</entry>
			<entry name="VIDEO_PVRUSB2_DVB">
				<label>pvrusb2 ATSC/DVB support</label>
				<help>
This option enables a DVB interface for the pvrusb2 driver.
If your device does not support digital television, this
feature will have no affect on the driver's operation.

If you are in doubt, say Y.

config VIDEO_PVRUSB2_DEBUGIFC
bool &quot;pvrusb2 debug interface&quot;
depends on VIDEO_PVRUSB2_SYSFS
---help---
This option enables the inclusion of a debug interface
in the pvrusb2 driver, hosted through sysfs.

You do not need to select this option unless you plan
on debugging the driver or performing a manual firmware
extraction.

If you are in doubt, say N.
</help>
			</entry>
			<entry name="VIDEO_HDPVR">
				<label>Hauppauge HD PVR support</label>
				<help>This is a video4linux driver for Hauppauge's HD PVR USB device.

To compile this driver as a module, choose M here: the
module will be called hdpvr

</help>
			</entry>
			<entry name="VIDEO_USBVISION">
				<label>USB video devices based on Nogatech NT1003/1004/1005</label>
				<help>There are more than 50 different USB video devices based on
NT1003/1004/1005 USB Bridges. This driver enables using those
devices.

To compile this driver as a module, choose M here: the
module will be called usbvision.
</help>
			</entry>
			<entry name="VIDEO_STK1160_COMMON">
				<label>STK1160 USB video capture support</label>
				<help>This is a video4linux driver for STK1160 based video capture devices.

To compile this driver as a module, choose M here: the
module will be called stk1160</help>
			</entry>
			<entry name="VIDEO_STK1160_AC97">
				<label>STK1160 AC97 codec support</label>
				<help>Enables AC97 codec support for stk1160 driver.</help>
			</entry>
			<entry name="VIDEO_STK1160"/>
			<entry name="VIDEO_GO7007">
				<label>WIS GO7007 MPEG encoder support</label>
				<help>This is a video4linux driver for the WIS GO7007 MPEG
encoder chip.

To compile this driver as a module, choose M here: the
module will be called go7007.</help>
			</entry>
			<entry name="VIDEO_GO7007_USB">
				<label>WIS GO7007 USB support</label>
				<help>This is a video4linux driver for the WIS GO7007 MPEG
encoder chip over USB.

To compile this driver as a module, choose M here: the
module will be called go7007-usb.</help>
			</entry>
			<entry name="VIDEO_GO7007_LOADER">
				<label>WIS GO7007 Loader support</label>
				<help>This is a go7007 firmware loader driver for the WIS GO7007
MPEG encoder chip over USB.

To compile this driver as a module, choose M here: the
module will be called go7007-loader.</help>
			</entry>
			<entry name="VIDEO_GO7007_USB_S2250_BOARD">
				<label>Sensoray 2250/2251 support</label>
				<help>This is a video4linux driver for the Sensoray 2250/2251 device.

To compile this driver as a module, choose M here: the
module will be called s2250.
</help>
			</entry>
			<entry name="VIDEO_AU0828">
				<label>Auvitek AU0828 support</label>
				<help>This is a hybrid analog/digital tv capture driver for
Auvitek's AU0828 USB device.

To compile this driver as a module, choose M here: the
module will be called au0828</help>
			</entry>
			<entry name="VIDEO_AU0828_V4L2">
				<label>Auvitek AU0828 v4l2 analog video support</label>
				<help>This is a video4linux driver for Auvitek's USB device.

Choose Y here to include support for v4l2 analog video
capture within the au0828 driver.</help>
			</entry>
			<entry name="VIDEO_AU0828_RC">
				<label>AU0828 Remote Controller support</label>
				<help>Enables Remote Controller support on au0828 driver.
</help>
			</entry>
			<entry name="VIDEO_CX231XX">
				<label>Conexant cx231xx USB video capture support</label>
				<help>This is a video4linux driver for Conexant 231xx USB based TV cards.

To compile this driver as a module, choose M here: the
module will be called cx231xx</help>
			</entry>
			<entry name="VIDEO_CX231XX_RC">
				<label>Conexant cx231xx Remote Controller additional support</label>
				<help>cx231xx hardware has a builtin RX/TX support. However, a few
designs opted to not use it, but, instead, some other hardware.
This module enables the usage of those other hardware, like the
ones used with ISDB-T boards.

On most cases, all you need for IR is mceusb module.</help>
			</entry>
			<entry name="VIDEO_CX231XX_ALSA">
				<label>Conexant Cx231xx ALSA audio module</label>
				<help>This is an ALSA driver for Cx231xx USB based TV cards.

To compile this driver as a module, choose M here: the
module will be called cx231xx-alsa</help>
			</entry>
			<entry name="VIDEO_CX231XX_DVB">
				<label>DVB/ATSC Support for Cx231xx based TV cards</label>
				<help>This adds support for DVB cards based on the
Conexant cx231xx chips.
</help>
			</entry>
			<entry name="VIDEO_TM6000">
				<label>TV Master TM5600/6000/6010 driver</label>
				<help>Support for TM5600/TM6000/TM6010 USB Device

Since these cards have no MPEG decoder onboard, they transmit
only compressed MPEG data over the usb bus, so you need
an external software decoder to watch TV on your computer.

Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="VIDEO_TM6000_ALSA">
				<label>TV Master TM5600/6000/6010 audio support</label>
				<help>This is a video4linux driver for direct (DMA) audio for
TM5600/TM6000/TM6010 USB Devices.

To compile this driver as a module, choose M here: the
module will be called tm6000-alsa.</help>
			</entry>
			<entry name="VIDEO_TM6000_DVB">
				<label>DVB Support for tm6000 based TV cards</label>
				<help>This adds support for DVB cards based on the tm5600/tm6000 chip.
</help>
			</entry>
			<entry name="DVB_USB">
				<label>Support for various USB DVB devices</label>
				<help>By enabling this you will be able to choose the various supported
USB1.1 and USB2.0 DVB devices.

Almost every USB device needs a firmware, please look into
&lt;file:Documentation/dvb/README.dvb-usb&gt;.

For a complete list of supported USB devices see the LinuxTV DVB Wiki:
&lt;https://linuxtv.org/wiki/index.php/DVB_USB&gt;

Say Y if you own a USB DVB device.</help>
			</entry>
			<entry name="DVB_USB_DEBUG">
				<label>Enable extended debug support for all DVB-USB devices</label>
				<help>Say Y if you want to enable debugging. See modinfo dvb-usb (and the
appropriate drivers) for debug levels.</help>
			</entry>
			<entry name="DVB_USB_A800">
				<label>AVerMedia AverTV DVB-T USB 2.0 (A800)</label>
				<help>Say Y here to support the AVerMedia AverTV DVB-T USB 2.0 (A800) receiver.</help>
			</entry>
			<entry name="DVB_USB_DIBUSB_MB">
				<label>DiBcom USB DVB-T devices (based on the DiB3000M-B) (see help for device list)</label>
				<help>Support for USB 1.1 and 2.0 DVB-T receivers based on reference designs made by
DiBcom (&lt;http://www.dibcom.fr&gt;) equipped with a DiB3000M-B demodulator.

For an up-to-date list of devices supported by this driver, have a look
on the Linux-DVB Wiki at www.linuxtv.org.

Say Y if you own such a device and want to use it. You should build it as
a module.</help>
			</entry>
			<entry name="DVB_USB_DIBUSB_MB_FAULTY">
				<label>Support faulty USB IDs</label>
				<help>Support for faulty USB IDs due to an invalid EEPROM on some Artec devices.</help>
			</entry>
			<entry name="DVB_USB_DIBUSB_MC">
				<label>DiBcom USB DVB-T devices (based on the DiB3000M-C/P) (see help for device list)</label>
				<help>Support for USB2.0 DVB-T receivers based on reference designs made by
DiBcom (&lt;http://www.dibcom.fr&gt;) equipped with a DiB3000M-C/P demodulator.

For an up-to-date list of devices supported by this driver, have a look
on the Linux-DVB Wiki at www.linuxtv.org.

Say Y if you own such a device and want to use it. You should build it as
a module.</help>
			</entry>
			<entry name="DVB_USB_DIB0700">
				<label>DiBcom DiB0700 USB DVB devices (see help for supported devices)</label>
				<help>Support for USB2.0/1.1 DVB receivers based on the DiB0700 USB bridge. The
USB bridge is also present in devices having the DiB7700 DVB-T-USB
silicon. This chip can be found in devices offered by Hauppauge,
Avermedia and other big and small companies.

For an up-to-date list of devices supported by this driver, have a look
on the LinuxTV Wiki at www.linuxtv.org.

Say Y if you own such a device and want to use it. You should build it as
a module.</help>
			</entry>
			<entry name="DVB_USB_UMT_010">
				<label>HanfTek UMT-010 DVB-T USB2.0 support</label>
				<help>Say Y here to support the HanfTek UMT-010 USB2.0 stick-sized DVB-T receiver.</help>
			</entry>
			<entry name="DVB_USB_CXUSB">
				<label>Conexant USB2.0 hybrid reference design support</label>
				<help>Say Y here to support the Conexant USB2.0 hybrid reference design.
Currently, only DVB and ATSC modes are supported, analog mode
shall be added in the future. Devices that require this module:

Medion MD95700 hybrid USB2.0 device.
DViCO FusionHDTV (Bluebird) USB2.0 devices</help>
			</entry>
			<entry name="DVB_USB_M920X">
				<label>Uli m920x DVB-T USB2.0 support</label>
				<help>Say Y here to support the MSI Mega Sky 580 USB2.0 DVB-T receiver.
Currently, only devices with a product id of
&quot;DTV USB MINI&quot; (in cold state) are supported.
Firmware required.</help>
			</entry>
			<entry name="DVB_USB_DIGITV">
				<label>Nebula Electronics uDigiTV DVB-T USB2.0 support</label>
				<help>Say Y here to support the Nebula Electronics uDigitV USB2.0 DVB-T receiver.</help>
			</entry>
			<entry name="DVB_USB_VP7045">
				<label>TwinhanDTV Alpha/MagicBoxII, DNTV tinyUSB2, Beetle USB2.0 support</label>
				<help>Say Y here to support the

TwinhanDTV Alpha (stick) (VP-7045),
TwinhanDTV MagicBox II (VP-7046),
DigitalNow TinyUSB 2 DVB-t,
DigitalRise USB 2.0 Ter (Beetle) and
TYPHOON DVB-T USB DRIVE

DVB-T USB2.0 receivers.</help>
			</entry>
			<entry name="DVB_USB_VP702X">
				<label>TwinhanDTV StarBox and clones DVB-S USB2.0 support</label>
				<help>Say Y here to support the

TwinhanDTV StarBox,
DigitalRise USB Starbox and
TYPHOON DVB-S USB 2.0 BOX

DVB-S USB2.0 receivers.</help>
			</entry>
			<entry name="DVB_USB_GP8PSK">
				<label>GENPIX 8PSK-&gt;USB module support</label>
				<help>Say Y here to support the
GENPIX 8psk module

DVB-S USB2.0 receivers.</help>
			</entry>
			<entry name="DVB_USB_NOVA_T_USB2">
				<label>Hauppauge WinTV-NOVA-T usb2 DVB-T USB2.0 support</label>
				<help>Say Y here to support the Hauppauge WinTV-NOVA-T usb2 DVB-T USB2.0 receiver.</help>
			</entry>
			<entry name="DVB_USB_TTUSB2">
				<label>Pinnacle 400e DVB-S USB2.0 support</label>
				<help>Say Y here to support the Pinnacle 400e DVB-S USB2.0 receiver and
the TechnoTrend CT-3650 CI DVB-C/T USB2.0 receiver. The
firmware protocol used by this module is similar to the one used by the
old ttusb-driver - that's why the module is called dvb-usb-ttusb2.</help>
			</entry>
			<entry name="DVB_USB_DTT200U">
				<label>WideView WT-200U and WT-220U (pen) DVB-T USB2.0 support (Yakumo/Hama/Typhoon/Yuan)</label>
				<help>Say Y here to support the WideView/Yakumo/Hama/Typhoon/Yuan DVB-T USB2.0 receiver.

The receivers are also known as DTT200U (Yakumo) and UB300 (Yuan).

The WT-220U and its clones are pen-sized.</help>
			</entry>
			<entry name="DVB_USB_OPERA1">
				<label>Opera1 DVB-S USB2.0 receiver</label>
				<help>Say Y here to support the Opera DVB-S USB2.0 receiver.</help>
			</entry>
			<entry name="DVB_USB_AF9005">
				<label>Afatech AF9005 DVB-T USB1.1 support</label>
				<help>Say Y here to support the Afatech AF9005 based DVB-T USB1.1 receiver
and the TerraTec Cinergy T USB XE (Rev.1)</help>
			</entry>
			<entry name="DVB_USB_AF9005_REMOTE">
				<label>Afatech AF9005 default remote control support</label>
				<help>Say Y here to support the default remote control decoding for the
Afatech AF9005 based receiver.</help>
			</entry>
			<entry name="DVB_USB_PCTV452E">
				<label>Pinnacle PCTV HDTV Pro USB device/TT Connect S2-3600</label>
				<help>Support for external USB adapter designed by Pinnacle,
shipped under the brand name 'PCTV HDTV Pro USB'.
Also supports TT Connect S2-3600/3650 cards.
Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="DVB_USB_DW2102">
				<label>DvbWorld &amp; TeVii DVB-S/S2 USB2.0 support</label>
				<help>Say Y here to support the DvbWorld, TeVii, Prof, TechnoTrend
DVB-S/S2 USB2.0 receivers.</help>
			</entry>
			<entry name="DVB_USB_CINERGY_T2">
				<label>Terratec CinergyT2/qanu USB 2.0 DVB-T receiver</label>
				<help>Support for &quot;TerraTec CinergyT2&quot; USB2.0 Highspeed DVB Receivers

Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="DVB_USB_DTV5100">
				<label>AME DTV-5100 USB2.0 DVB-T support</label>
				<help>Say Y here to support the AME DTV-5100 USB2.0 DVB-T receiver.</help>
			</entry>
			<entry name="DVB_USB_FRIIO">
				<label>Friio ISDB-T USB2.0 Receiver support</label>
				<help>Say Y here to support the Japanese DTV receiver Friio.</help>
			</entry>
			<entry name="DVB_USB_AZ6027">
				<label>Azurewave DVB-S/S2 USB2.0 AZ6027 support</label>
				<help>Say Y here to support the AZ6027 device</help>
			</entry>
			<entry name="DVB_USB_TECHNISAT_USB2">
				<label>Technisat DVB-S/S2 USB2.0 support</label>
				<help>Say Y here to support the Technisat USB2 DVB-S/S2 device
</help>
			</entry>
			<entry name="DVB_USB_V2">
				<label>Support for various USB DVB devices v2</label>
				<help>By enabling this you will be able to choose the various supported
USB1.1 and USB2.0 DVB devices.

Almost every USB device needs a firmware, please look into
&lt;file:Documentation/dvb/README.dvb-usb&gt;.

For a complete list of supported USB devices see the LinuxTV DVB Wiki:
&lt;https://linuxtv.org/wiki/index.php/DVB_USB&gt;

Say Y if you own a USB DVB device.</help>
			</entry>
			<entry name="DVB_USB_AF9015">
				<label>Afatech AF9015 DVB-T USB2.0 support</label>
				<help>Say Y here to support the Afatech AF9015 based DVB-T USB2.0 receiver</help>
			</entry>
			<entry name="DVB_USB_AF9035">
				<label>Afatech AF9035 DVB-T USB2.0 support</label>
				<help>Say Y here to support the Afatech AF9035 based DVB USB receiver.</help>
			</entry>
			<entry name="DVB_USB_ANYSEE">
				<label>Anysee DVB-T/C USB2.0 support</label>
				<help>Say Y here to support the Anysee E30, Anysee E30 Plus or
Anysee E30 C Plus DVB USB2.0 receiver.</help>
			</entry>
			<entry name="DVB_USB_AU6610">
				<label>Alcor Micro AU6610 USB2.0 support</label>
				<help>Say Y here to support the Sigmatek DVB-110 DVB-T USB2.0 receiver.</help>
			</entry>
			<entry name="DVB_USB_AZ6007">
				<label>AzureWave 6007 and clones DVB-T/C USB2.0 support</label>
				<help>Say Y here to support the AZ6007 receivers like Terratec H7.</help>
			</entry>
			<entry name="DVB_USB_CE6230">
				<label>Intel CE6230 DVB-T USB2.0 support</label>
				<help>Say Y here to support the Intel CE6230 DVB-T USB2.0 receiver</help>
			</entry>
			<entry name="DVB_USB_EC168">
				<label>E3C EC168 DVB-T USB2.0 support</label>
				<help>Say Y here to support the E3C EC168 DVB-T USB2.0 receiver.</help>
			</entry>
			<entry name="DVB_USB_GL861">
				<label>Genesys Logic GL861 USB2.0 support</label>
				<help>Say Y here to support the MSI Megasky 580 (55801) DVB-T USB2.0
receiver with USB ID 0db0:5581.</help>
			</entry>
			<entry name="DVB_USB_LME2510">
				<label>LME DM04/QQBOX DVB-S USB2.0 support</label>
				<help>Say Y here to support the LME DM04/QQBOX DVB-S USB2.0</help>
			</entry>
			<entry name="DVB_USB_MXL111SF">
				<label>MxL111SF DTV USB2.0 support</label>
				<help>Say Y here to support the MxL111SF USB2.0 DTV receiver.</help>
			</entry>
			<entry name="DVB_USB_RTL28XXU">
				<label>Realtek RTL28xxU DVB USB support</label>
				<help>Say Y here to support the Realtek RTL28xxU DVB USB receiver.</help>
			</entry>
			<entry name="DVB_USB_DVBSKY">
				<label>DVBSky USB support</label>
				<help>Say Y here to support the USB receivers from DVBSky.
</help>
			</entry>
			<entry name="DVB_TTUSB_BUDGET">
				<label>Technotrend/Hauppauge Nova-USB devices</label>
				<help>Support for external USB adapters designed by Technotrend and
produced by Hauppauge, shipped under the brand name 'Nova-USB'.

These devices don't have a MPEG decoder built in, so you need
an external software decoder to watch TV.

Say Y if you own such a device and want to use it.
</help>
			</entry>
			<entry name="DVB_TTUSB_DEC">
				<label>Technotrend/Hauppauge USB DEC devices</label>
				<help>Support for external USB adapters designed by Technotrend and
produced by Hauppauge, shipped under the brand name 'DEC2000-t'
and 'DEC3000-s'.

Even if these devices have a MPEG decoder built in, they transmit
only compressed MPEG data over the USB bus, so you need
an external software decoder to watch TV on your computer.

This driver needs external firmware. Please use the commands
&quot;&lt;kerneldir&gt;/Documentation/dvb/get_dvb_firmware dec2000t&quot;,
&quot;&lt;kerneldir&gt;/Documentation/dvb/get_dvb_firmware dec2540t&quot;,
&quot;&lt;kerneldir&gt;/Documentation/dvb/get_dvb_firmware dec3000s&quot;,
download/extract them, and then copy them to /usr/lib/hotplug/firmware
or /lib/firmware (depending on configuration of firmware hotplug).

Say Y if you own such a device and want to use it.
</help>
			</entry>
			<entry name="SMS_USB_DRV">
				<label>Siano SMS1xxx based MDTV receiver</label>
				<help>Choose if you would like to have Siano's support for USB interface

</help>
			</entry>
			<entry name="DVB_B2C2_FLEXCOP_USB">
				<label>Technisat/B2C2 Air/Sky/Cable2PC USB</label>
				<help>Support for the Air/Sky/Cable2PC USB1.1 box (DVB/ATSC) by Technisat/B2C2,

Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="DVB_B2C2_FLEXCOP_USB_DEBUG">
				<label>Enable debug for the B2C2 FlexCop drivers</label>
				<help>Say Y if you want to enable the module option to control debug messages
of all B2C2 FlexCop drivers.
</help>
			</entry>
			<entry name="DVB_AS102">
				<label>Abilis AS102 DVB receiver</label>
				<help>Choose Y or M here if you have a device containing an AS102

To compile this driver as a module, choose M here
</help>
			</entry>
			<entry name="VIDEO_EM28XX">
				<label>Empia EM28xx USB devices support</label>
			</entry>
			<entry name="VIDEO_EM28XX_V4L2">
				<label>Empia EM28xx analog TV, video capture and/or webcam support</label>
				<help>This is a video4linux driver for Empia 28xx based TV cards.

To compile this driver as a module, choose M here: the
module will be called em28xx</help>
			</entry>
			<entry name="VIDEO_EM28XX_ALSA">
				<label>Empia EM28xx ALSA audio module</label>
				<help>This is an ALSA driver for some Empia 28xx based TV cards.

This is not required for em2800/em2820/em2821 boards. However,
newer em28xx devices uses Vendor Class for audio, instead of
implementing the USB Audio Class. For those chips, this module
will enable digital audio.

To compile this driver as a module, choose M here: the
module will be called em28xx-alsa</help>
			</entry>
			<entry name="VIDEO_EM28XX_DVB">
				<label>DVB/ATSC Support for em28xx based TV cards</label>
				<help>This adds support for DVB cards based on the
Empiatech em28xx chips.</help>
			</entry>
			<entry name="VIDEO_EM28XX_RC">
				<label>EM28XX Remote Controller support</label>
				<help>Enables Remote Controller support on em28xx driver.
</help>
			</entry>
			<entry name="USB_AIRSPY">
				<label>AirSpy</label>
				<help>This is a video4linux2 driver for AirSpy SDR device.

To compile this driver as a module, choose M here: the
module will be called airspy

</help>
			</entry>
			<entry name="USB_HACKRF">
				<label>HackRF</label>
				<help>This is a video4linux2 driver for HackRF SDR device.

To compile this driver as a module, choose M here: the
module will be called hackrf

</help>
			</entry>
			<entry name="USB_MSI2500">
				<label>Mirics MSi2500</label>
			</entry>
			<entry name="MEDIA_PCI_SUPPORT">
				<label>Media PCI Adapters</label>
				<help>Enable media drivers for PCI/PCIe bus.
If you have such devices, say Y.</help>
			</entry>
			<entry name="VIDEO_MEYE">
				<label>Sony Vaio Picturebook Motion Eye Video For Linux</label>
				<help>This is the video4linux driver for the Motion Eye camera found
in the Vaio Picturebook laptops. Please read the material in
&lt;file:Documentation/video4linux/meye.txt&gt; for more information.

If you say Y or M here, you need to say Y or M to &quot;Sony Laptop
Extras&quot; in the misc device section.

To compile this driver as a module, choose M here: the
module will be called meye.
</help>
			</entry>
			<entry name="VIDEO_SOLO6X10">
				<label>Bluecherry / Softlogic 6x10 capture cards (MPEG-4/H.264)</label>
				<help>This driver supports the Bluecherry H.264 and MPEG-4 hardware
compression capture cards and other Softlogic-based ones.

Following cards have been tested:
* Bluecherry BC-H16480A (PCIe, 16 port, H.264)
* Bluecherry BC-H04120A (PCIe, 4 port, H.264)
* Bluecherry BC-H04120A-MPCI (Mini-PCI, 4 port, H.264)
* Bluecherry BC-04120A (PCIe, 4 port, MPEG-4)
</help>
			</entry>
			<entry name="STA2X11_VIP">
				<label>STA2X11 VIP Video For Linux</label>
				<help>Say Y for support for STA2X11 VIP (Video Input Port) capture
device.

To compile this driver as a module, choose M here: the
module will be called sta2x11_vip.
</help>
			</entry>
			<entry name="VIDEO_TW68">
				<label>Techwell tw68x Video For Linux</label>
				<help>Support for Techwell tw68xx based frame grabber boards.

To compile this driver as a module, choose M here: the
module will be called tw68.
</help>
			</entry>
			<entry name="VIDEO_TW686X">
				<label>Intersil/Techwell TW686x video capture cards</label>
				<help>Support for Intersil/Techwell TW686x-based frame grabber cards.

Currently supported chips:
- TW6864 (4 video channels),
- TW6865 (4 video channels, not tested, second generation chip),
- TW6868 (8 video channels but only 4 first channels using
built-in video decoder are supported, not tested),
- TW6869 (8 video channels, second generation chip).

To compile this driver as a module, choose M here: the module
will be named tw686x.
</help>
			</entry>
			<entry name="VIDEO_ZORAN">
				<label>Zoran ZR36057/36067 Video For Linux</label>
				<help>Say Y for support for MJPEG capture cards based on the Zoran
36057/36067 PCI controller chipset. This includes the Iomega
Buz, Pinnacle DC10+ and the Linux Media Labs LML33. There is
a driver homepage at &lt;http://mjpeg.sf.net/driver-zoran/&gt;. For
more information, check &lt;file:Documentation/video4linux/Zoran&gt;.

To compile this driver as a module, choose M here: the
module will be called zr36067.</help>
			</entry>
			<entry name="VIDEO_ZORAN_DC30">
				<label>Pinnacle/Miro DC30(+) support</label>
				<help>Support for the Pinnacle/Miro DC30(+) MJPEG capture/playback
card. This also supports really old DC10 cards based on the
zr36050 MJPEG codec and zr36016 VFE.</help>
			</entry>
			<entry name="VIDEO_ZORAN_ZR36060">
				<label>Zoran ZR36060</label>
				<help>Say Y to support Zoran boards based on 36060 chips.
This includes Iomega Buz, Pinnacle DC10, Linux media Labs 33
and 33 R10 and AverMedia 6 boards.</help>
			</entry>
			<entry name="VIDEO_ZORAN_BUZ">
				<label>Iomega Buz support</label>
				<help>Support for the Iomega Buz MJPEG capture/playback card.</help>
			</entry>
			<entry name="VIDEO_ZORAN_DC10">
				<label>Pinnacle/Miro DC10(+) support</label>
				<help>Support for the Pinnacle/Miro DC10(+) MJPEG capture/playback
card.</help>
			</entry>
			<entry name="VIDEO_ZORAN_LML33">
				<label>Linux Media Labs LML33 support</label>
				<help>Support for the Linux Media Labs LML33 MJPEG capture/playback
card.</help>
			</entry>
			<entry name="VIDEO_ZORAN_LML33R10">
				<label>Linux Media Labs LML33R10 support</label>
				<help>support for the Linux Media Labs LML33R10 MJPEG capture/playback
card.</help>
			</entry>
			<entry name="VIDEO_ZORAN_AVS6EYES">
				<label>AverMedia 6 Eyes support</label>
				<help>Support for the AverMedia 6 Eyes video surveillance card.
</help>
			</entry>
			<entry name="VIDEO_IVTV">
				<label>Conexant cx23416/cx23415 MPEG encoder/decoder support</label>
				<help>This is a video4linux driver for Conexant cx23416 or cx23415 based
PCI personal video recorder devices.

This is used in devices such as the Hauppauge PVR-150/250/350/500
cards. There is a driver homepage at &lt;http://www.ivtvdriver.org&gt;.

To compile this driver as a module, choose M here: the
module will be called ivtv.</help>
			</entry>
			<entry name="VIDEO_IVTV_ALSA">
				<label>Conexant cx23415/cx23416 ALSA interface for PCM audio capture</label>
				<help>This driver provides an ALSA interface as another method for user
applications to obtain PCM audio data from Conexant cx23415/cx23416
based PCI TV cards supported by the ivtv driver.

The ALSA interface has much wider use in user applications performing
PCM audio capture, than the V4L2 &quot;/dev/video24&quot; PCM audio interface
provided by the main ivtv driver.

To compile this driver as a module, choose M here: the
module will be called ivtv-alsa.</help>
			</entry>
			<entry name="VIDEO_FB_IVTV">
				<label>Conexant cx23415 framebuffer support</label>
				<help>This is a framebuffer driver for the Conexant cx23415 MPEG
encoder/decoder.

This is used in the Hauppauge PVR-350 card. There is a driver
homepage at &lt;http://www.ivtvdriver.org&gt;.

In order to use this module, you will need to boot with PAT disabled
on x86 systems, using the nopat kernel parameter.

To compile this driver as a module, choose M here: the
module will be called ivtvfb.
</help>
			</entry>
			<entry name="VIDEO_HEXIUM_GEMINI">
				<label>Hexium Gemini frame grabber</label>
				<help>This is a video4linux driver for the Hexium Gemini frame
grabber card by Hexium. Please note that the Gemini Dual
card is *not* fully supported.

To compile this driver as a module, choose M here: the
module will be called hexium_gemini.</help>
			</entry>
			<entry name="VIDEO_HEXIUM_ORION">
				<label>Hexium HV-PCI6 and Orion frame grabber</label>
				<help>This is a video4linux driver for the Hexium HV-PCI6 and
Orion frame grabber cards by Hexium.

To compile this driver as a module, choose M here: the
module will be called hexium_orion.</help>
			</entry>
			<entry name="VIDEO_MXB">
				<label>Siemens-Nixdorf 'Multimedia eXtension Board'</label>
				<help>This is a video4linux driver for the 'Multimedia eXtension Board'
TV card by Siemens-Nixdorf.

To compile this driver as a module, choose M here: the
module will be called mxb.
</help>
			</entry>
			<entry name="VIDEO_DT3155">
				<label>DT3155 frame grabber</label>
				<help>Enables dt3155 device driver for the DataTranslation DT3155 frame grabber.
Say Y here if you have this hardware.
In doubt, say N.

To compile this driver as a module, choose M here: the
module will be called dt3155.
</help>
			</entry>
			<entry name="VIDEO_CX18">
				<label>Conexant cx23418 MPEG encoder support</label>
				<help>This is a video4linux driver for Conexant cx23418 based
PCI combo video recorder devices.

This is used in devices such as the Hauppauge HVR-1600
cards.

To compile this driver as a module, choose M here: the
module will be called cx18.</help>
			</entry>
			<entry name="VIDEO_CX18_ALSA">
				<label>Conexant 23418 DMA audio support</label>
				<help>This is a video4linux driver for direct (DMA) audio on
Conexant 23418 based TV cards using ALSA.

To compile this driver as a module, choose M here: the
module will be called cx18-alsa.
</help>
			</entry>
			<entry name="VIDEO_CX23885">
				<label>Conexant cx23885 (2388x successor) support</label>
				<help>This is a video4linux driver for Conexant 23885 based
TV cards.

To compile this driver as a module, choose M here: the
module will be called cx23885</help>
			</entry>
			<entry name="MEDIA_ALTERA_CI">
				<label>Altera FPGA based CI module</label>
				<help>An Altera FPGA CI module for NetUP Dual DVB-T/C RF CI card.

To compile this driver as a module, choose M here: the
module will be called altera-ci
</help>
			</entry>
			<entry name="VIDEO_CX25821">
				<label>Conexant cx25821 support</label>
				<help>This is a video4linux driver for Conexant 25821 based
TV cards.

To compile this driver as a module, choose M here: the
module will be called cx25821</help>
			</entry>
			<entry name="VIDEO_CX25821_ALSA">
				<label>Conexant 25821 DMA audio support</label>
				<help>This is a video4linux driver for direct (DMA) audio on
Conexant 25821 based capture cards using ALSA.

It only works with boards with function 01 enabled.
To check if your board supports, use lspci -n.
If supported, you should see 14f1:8801 or 14f1:8811
PCI device.

To compile this driver as a module, choose M here: the
module will be called cx25821-alsa.

</help>
			</entry>
			<entry name="VIDEO_CX88">
				<label>Conexant 2388x (bt878 successor) support</label>
				<help>This is a video4linux driver for Conexant 2388x based
TV cards.

To compile this driver as a module, choose M here: the
module will be called cx8800</help>
			</entry>
			<entry name="VIDEO_CX88_ALSA">
				<label>Conexant 2388x DMA audio support</label>
				<help>This is a video4linux driver for direct (DMA) audio on
Conexant 2388x based TV cards using ALSA.

It only works with boards with function 01 enabled.
To check if your board supports, use lspci -n.
If supported, you should see 14f1:8801 or 14f1:8811
PCI device.

To compile this driver as a module, choose M here: the
module will be called cx88-alsa.</help>
			</entry>
			<entry name="VIDEO_CX88_BLACKBIRD">
				<label>Blackbird MPEG encoder support (cx2388x + cx23416)</label>
				<help>This adds support for MPEG encoder cards based on the
Blackbird reference design, using the Conexant 2388x
and 23416 chips.

To compile this driver as a module, choose M here: the
module will be called cx88-blackbird.</help>
			</entry>
			<entry name="VIDEO_CX88_DVB">
				<label>DVB/ATSC Support for cx2388x based TV cards</label>
				<help>This adds support for DVB/ATSC cards based on the
Conexant 2388x chip.

To compile this driver as a module, choose M here: the
module will be called cx88-dvb.</help>
			</entry>
			<entry name="VIDEO_CX88_ENABLE_VP3054">
				<label>VP-3054 Secondary I2C Bus Support</label>
				<help>This adds DVB-T support for cards based on the
Conexant 2388x chip and the MT352 demodulator,
which also require support for the VP-3054
Secondary I2C bus, such at DNTV Live! DVB-T Pro.</help>
			</entry>
			<entry name="VIDEO_CX88_VP3054"/>
			<entry name="VIDEO_CX88_MPEG"/>
			<entry name="VIDEO_BT848">
				<label>BT848 Video For Linux</label>
				<help>Support for BT848 based frame grabber/overlay boards. This includes
the Miro, Hauppauge and STB boards. Please read the material in
&lt;file:Documentation/video4linux/bttv/&gt; for more information.

To compile this driver as a module, choose M here: the
module will be called bttv.</help>
			</entry>
			<entry name="DVB_BT8XX">
				<label>DVB/ATSC Support for bt878 based TV cards</label>
				<help>Support for PCI cards based on the Bt8xx PCI bridge. Examples are
the Nebula cards, the Pinnacle PCTV cards, the Twinhan DST cards,
the pcHDTV HD2000 cards, the DViCO FusionHDTV Lite cards, and
some AVerMedia cards.

Since these cards have no MPEG decoder onboard, they transmit
only compressed MPEG data over the PCI bus, so you need
an external software decoder to watch TV on your computer.

Say Y if you own such a device and want to use it.
</help>
			</entry>
			<entry name="VIDEO_SAA7134">
				<label>Philips SAA7134 support</label>
				<help>This is a video4linux driver for Philips SAA713x based
TV cards.

To compile this driver as a module, choose M here: the
module will be called saa7134.</help>
			</entry>
			<entry name="VIDEO_SAA7134_ALSA">
				<label>Philips SAA7134 DMA audio support</label>
				<help>This is a video4linux driver for direct (DMA) audio in
Philips SAA713x based TV cards using ALSA

To compile this driver as a module, choose M here: the
module will be called saa7134-alsa.</help>
			</entry>
			<entry name="VIDEO_SAA7134_RC">
				<label>Philips SAA7134 Remote Controller support</label>
				<help>Enables Remote Controller support on saa7134 driver.</help>
			</entry>
			<entry name="VIDEO_SAA7134_DVB">
				<label>DVB/ATSC Support for saa7134 based TV cards</label>
				<help>This adds support for DVB cards based on the
Philips saa7134 chip.

To compile this driver as a module, choose M here: the
module will be called saa7134-dvb.</help>
			</entry>
			<entry name="VIDEO_SAA7134_GO7007">
				<label>go7007 support for saa7134 based TV cards</label>
				<help>Enables saa7134 driver support for boards with go7007
MPEG encoder (WIS Voyager or compatible).
</help>
			</entry>
			<entry name="VIDEO_SAA7164">
				<label>NXP SAA7164 support</label>
				<help>This is a video4linux driver for NXP SAA7164 based
TV cards.

To compile this driver as a module, choose M here: the
module will be called saa7164

</help>
			</entry>
			<entry name="VIDEO_COBALT">
				<label>Cisco Cobalt support</label>
				<help>This is a video4linux driver for the Cisco PCIe Cobalt card.

This board is sadly not available outside of Cisco, but it is
very useful as an example of a real driver that uses all the
latest frameworks and APIs.

To compile this driver as a module, choose M here: the
module will be called cobalt.
</help>
			</entry>
			<entry name="DVB_AV7110_IR"/>
			<entry name="DVB_AV7110">
				<label>AV7110 cards</label>
				<help>Support for SAA7146 and AV7110 based DVB cards as produced
by Fujitsu-Siemens, Technotrend, Hauppauge and others.

This driver only supports the fullfeatured cards with
onboard MPEG2 decoder.

This driver needs an external firmware. Please use the script
&quot;&lt;kerneldir&gt;/Documentation/dvb/get_dvb_firmware av7110&quot; to
download/extract it, and then copy it to /usr/lib/hotplug/firmware
or /lib/firmware (depending on configuration of firmware hotplug).

Alternatively, you can download the file and use the kernel's
EXTRA_FIRMWARE configuration option to build it into your
kernel image by adding the filename to the EXTRA_FIRMWARE
configuration option string.

Say Y if you own such a card and want to use it.</help>
			</entry>
			<entry name="DVB_AV7110_OSD">
				<label>AV7110 OSD support</label>
				<help>The AV7110 firmware provides some code to generate an OnScreenDisplay
on the video output. This is kind of nonstandard and not guaranteed to
be maintained.

Anyway, some popular DVB software like VDR uses this OSD to render
its menus, so say Y if you want to use this software.

All other people say N.</help>
			</entry>
			<entry name="DVB_BUDGET_CORE">
				<label>SAA7146 DVB cards (aka Budget, Nova-PCI)</label>
				<help>Support for simple SAA7146 based DVB cards
(so called Budget- or Nova-PCI cards) without onboard
MPEG2 decoder.</help>
			</entry>
			<entry name="DVB_BUDGET">
				<label>Budget cards</label>
				<help>Support for simple SAA7146 based DVB cards (so called Budget-
or Nova-PCI cards) without onboard MPEG2 decoder, and without
analog inputs or an onboard Common Interface connector.

Say Y if you own such a card and want to use it.

To compile this driver as a module, choose M here: the
module will be called budget.</help>
			</entry>
			<entry name="DVB_BUDGET_CI">
				<label>Budget cards with onboard CI connector</label>
				<help>Support for simple SAA7146 based DVB cards
(so called Budget- or Nova-PCI cards) without onboard
MPEG2 decoder, but with onboard Common Interface connector.

Note: The Common Interface is not yet supported by this driver
due to lack of information from the vendor.

Say Y if you own such a card and want to use it.

To compile this driver as a module, choose M here: the
module will be called budget-ci.</help>
			</entry>
			<entry name="DVB_BUDGET_AV">
				<label>Budget cards with analog video inputs</label>
				<help>Support for simple SAA7146 based DVB cards
(so called Budget- or Nova-PCI cards) without onboard
MPEG2 decoder, but with one or more analog video inputs.

Say Y if you own such a card and want to use it.

To compile this driver as a module, choose M here: the
module will be called budget-av.</help>
			</entry>
			<entry name="DVB_BUDGET_PATCH">
				<label>AV7110 cards with Budget Patch</label>
				<help>Support for Budget Patch (full TS) modification on
SAA7146+AV7110 based cards (DVB-S cards). This
driver doesn't use onboard MPEG2 decoder. The
card is driven in Budget-only mode. Card is
required to have loaded firmware to tune properly.
Firmware can be loaded by insertion and removal of
standard AV7110 driver prior to loading this
driver.

Say Y if you own such a card and want to use it.

To compile this driver as a module, choose M here: the
module will be called budget-patch.
</help>
			</entry>
			<entry name="DVB_B2C2_FLEXCOP_PCI">
				<label>Technisat/B2C2 Air/Sky/Cable2PC PCI</label>
				<help>Support for the Air/Sky/CableStar2 PCI card (DVB/ATSC) by Technisat/B2C2.

Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="DVB_B2C2_FLEXCOP_PCI_DEBUG">
				<label>Enable debug for the B2C2 FlexCop drivers</label>
				<help>Say Y if you want to enable the module option to control debug messages
of all B2C2 FlexCop drivers.
</help>
			</entry>
			<entry name="DVB_PLUTO2">
				<label>Pluto2 cards</label>
				<help>Support for PCI cards based on the Pluto2 FPGA like the Satelco
Easywatch Mobile Terrestrial DVB-T Receiver.

Since these cards have no MPEG decoder onboard, they transmit
only compressed MPEG data over the PCI bus, so you need
an external software decoder to watch TV on your computer.

Say Y or M if you own such a device and want to use it.

</help>
			</entry>
			<entry name="DVB_DM1105">
				<label>SDMC DM1105 based PCI cards</label>
				<help>Support for cards based on the SDMC DM1105 PCI chip like
DvbWorld 2002

Since these cards have no MPEG decoder onboard, they transmit
only compressed MPEG data over the PCI bus, so you need
an external software decoder to watch TV on your computer.

Say Y or M if you own such a device and want to use it.
</help>
			</entry>
			<entry name="DVB_PT1">
				<label>PT1 cards</label>
				<help>Support for Earthsoft PT1 PCI cards.

Since these cards have no MPEG decoder onboard, they transmit
only compressed MPEG data over the PCI bus, so you need
an external software decoder to watch TV on your computer.

Say Y or M if you own such a device and want to use it.

</help>
			</entry>
			<entry name="DVB_PT3">
				<label>Earthsoft PT3 cards</label>
				<help>Support for Earthsoft PT3 PCIe cards.

Say Y or M if you own such a device and want to use it.
</help>
			</entry>
			<entry name="MANTIS_CORE">
				<label>Mantis/Hopper PCI bridge based devices</label>
				<help>Support for PCI cards based on the Mantis and Hopper PCi bridge.

Say Y if you own such a device and want to use it.</help>
			</entry>
			<entry name="DVB_MANTIS">
				<label>MANTIS based cards</label>
				<help>Support for PCI cards based on the Mantis PCI bridge.
Say Y when you have a Mantis based DVB card and want to use it.

If unsure say N.</help>
			</entry>
			<entry name="DVB_HOPPER">
				<label>HOPPER based cards</label>
				<help>Support for PCI cards based on the Hopper  PCI bridge.
Say Y when you have a Hopper based DVB card and want to use it.

If unsure say N
</help>
			</entry>
			<entry name="DVB_NGENE">
				<label>Micronas nGene support</label>
				<help>Support for Micronas PCI express cards with nGene bridge.

</help>
			</entry>
			<entry name="DVB_DDBRIDGE">
				<label>Digital Devices bridge support</label>
				<help>Support for cards with the Digital Devices PCI express bridge:
- Octopus PCIe Bridge
- Octopus mini PCIe Bridge
- Octopus LE
- DuoFlex S2 Octopus
- DuoFlex CT Octopus
- cineS2(v6)

Say Y if you own such a card and want to use it.
</help>
			</entry>
			<entry name="DVB_SMIPCIE">
				<label>SMI PCIe DVBSky cards</label>
				<help>Support for cards with SMI PCIe bridge:
- DVBSky S950 V3
- DVBSky S952 V3
- DVBSky T9580 V3

Say Y or M if you own such a device and want to use it.
If unsure say N.
</help>
			</entry>
			<entry name="DVB_NETUP_UNIDVB">
				<label>NetUP Universal DVB card support</label>
				<help>Say Y when you want to support NetUP Dual Universal DVB card
Card can receive two independent streams in following standards:
DVB-S/S2, T/T2, C/C2
Two CI slots available for CAM modules.
</help>
			</entry>
			<entry name="V4L_PLATFORM_DRIVERS">
				<label>V4L platform devices</label>
				<help>Say Y here to enable support for platform-specific V4L drivers.</help>
			</entry>
			<entry name="VIDEO_CAFE_CCIC">
				<label>Marvell 88ALP01 (Cafe) CMOS Camera Controller support</label>
				<help>This is a video4linux2 driver for the Marvell 88ALP01 integrated
CMOS camera controller.  This is the controller found on first-
generation OLPC systems.</help>
			</entry>
			<entry name="VIDEO_MMP_CAMERA">
				<label>Marvell Armada 610 integrated camera controller support</label>
				<help>This is a Video4Linux2 driver for the integrated camera
controller found on Marvell Armada 610 application
processors (and likely beyond).  This is the controller found
in OLPC XO 1.75 systems.

</help>
			</entry>
			<entry name="VIDEO_VIA_CAMERA">
				<label>VIAFB camera controller support</label>
				<help>Driver support for the integrated camera controller in VIA
Chrome9 chipsets.  Currently only tested on OLPC xo-1.5 systems
with ov7670 sensors.</help>
			</entry>
			<entry name="VIDEO_DAVINCI_VPIF_DISPLAY">
				<label>TI DaVinci VPIF V4L2-Display driver</label>
				<help>Enables Davinci VPIF module used for display devices.
This module is used for display on TI DM6467/DA850/OMAPL138
SoCs.

To compile this driver as a module, choose M here. There will
be two modules called vpif.ko and vpif_display.ko</help>
			</entry>
			<entry name="VIDEO_DAVINCI_VPIF_CAPTURE">
				<label>TI DaVinci VPIF video capture driver</label>
				<help>Enables Davinci VPIF module used for capture devices.
This module is used for capture on TI DM6467/DA850/OMAPL138
SoCs.

To compile this driver as a module, choose M here. There will
be two modules called vpif.ko and vpif_capture.ko</help>
			</entry>
			<entry name="VIDEO_DM6446_CCDC">
				<label>TI DM6446 CCDC video capture driver</label>
				<help>Enables DaVinci CCD hw module. DaVinci CCDC hw interfaces
with decoder modules such as TVP5146 over BT656 or
sensor module such as MT9T001 over a raw interface. This
module configures the interface and CCDC/ISIF to do
video frame capture from slave decoders.

To compile this driver as a module, choose M here. There will
be three modules called vpfe_capture.ko, vpss.ko and dm644x_ccdc.ko</help>
			</entry>
			<entry name="VIDEO_DM355_CCDC">
				<label>TI DM355 CCDC video capture driver</label>
				<help>Enables DM355 CCD hw module. DM355 CCDC hw interfaces
with decoder modules such as TVP5146 over BT656 or
sensor module such as MT9T001 over a raw interface. This
module configures the interface and CCDC/ISIF to do
video frame capture from a slave decoders

To compile this driver as a module, choose M here. There will
be three modules called vpfe_capture.ko, vpss.ko and dm355_ccdc.ko</help>
			</entry>
			<entry name="VIDEO_DM365_ISIF">
				<label>TI DM365 ISIF video capture driver</label>
				<help>Enables ISIF hw module. This is the hardware module for
configuring ISIF in VPFE to capture Raw Bayer RGB data from
a image sensor or YUV data from a YUV source.

To compile this driver as a module, choose M here. There will
be three modules called vpfe_capture.ko, vpss.ko and isif.ko</help>
			</entry>
			<entry name="VIDEO_DAVINCI_VPBE_DISPLAY">
				<label>TI DaVinci VPBE V4L2-Display driver</label>
				<help>Enables Davinci VPBE module used for display devices.
This module is used for display on TI DM644x/DM365/DM355
based display devices.

To compile this driver as a module, choose M here. There will
be five modules created called vpss.ko, vpbe.ko, vpbe_osd.ko,
vpbe_venc.ko and vpbe_display.ko
</help>
			</entry>
			<entry name="VIDEO_OMAP2_VOUT_VRFB"/>
			<entry name="VIDEO_OMAP2_VOUT">
				<label>OMAP2/OMAP3 V4L2-Display driver</label>
				<help>V4L2 Display driver support for OMAP2/3 based boards.
</help>
			</entry>
			<entry name="VIDEO_BLACKFIN_CAPTURE">
				<label>Blackfin Video Capture Driver</label>
				<help>V4L2 bridge driver for Blackfin video capture device.
Choose PPI or EPPI as its interface.

To compile this driver as a module, choose M here: the
module will be called bfin_capture.</help>
			</entry>
			<entry name="VIDEO_BLACKFIN_PPI"/>
			<entry name="VIDEO_SH_VOU">
				<label>SuperH VOU video output driver</label>
				<help>Support for the Video Output Unit (VOU) on SuperH SoCs.</help>
			</entry>
			<entry name="VIDEO_VIU">
				<label>Freescale VIU Video Driver</label>
				<help>Support for Freescale VIU video driver. This device captures
video data, or overlays video on DIU frame buffer.

Say Y here if you want to enable VIU device on MPC5121e Rev2+.
In doubt, say N.</help>
			</entry>
			<entry name="VIDEO_M32R_AR">
				<label>AR devices</label>
				<help>This is a video4linux driver for the Renesas AR (Artificial Retina)
camera module.</help>
			</entry>
			<entry name="VIDEO_M32R_AR_M64278">
				<label>AR device with color module M64278(VGA)</label>
				<help>This is a video4linux driver for the Renesas AR (Artificial
Retina) with M64278E-800 camera module.
This module supports VGA(640x480 pixels) resolutions.

To compile this driver as a module, choose M here: the
module will be called arv.</help>
			</entry>
			<entry name="VIDEO_OMAP3">
				<label>OMAP 3 Camera support</label>
				<help>Driver for an OMAP 3 camera controller.</help>
			</entry>
			<entry name="VIDEO_OMAP3_DEBUG">
				<label>OMAP 3 Camera debug messages</label>
				<help>Enable debug messages on OMAP 3 camera controller driver.</help>
			</entry>
			<entry name="VIDEO_S3C_CAMIF">
				<label>Samsung S3C24XX/S3C64XX SoC Camera Interface driver</label>
				<help>This is a v4l2 driver for s3c24xx and s3c64xx SoC series camera
host interface (CAMIF).

To compile this driver as a module, choose M here: the module
will be called s3c-camif.</help>
			</entry>
			<entry name="SOC_CAMERA">
				<label>SoC camera support</label>
				<help>SoC Camera is a common API to several cameras, not connecting
over a bus like PCI or USB. For example some i2c camera connected
directly to the data bus of an SoC.</help>
			</entry>
			<entry name="SOC_CAMERA_SCALE_CROP"/>
			<entry name="SOC_CAMERA_PLATFORM">
				<label>platform camera support</label>
				<help>This is a generic SoC camera platform driver, useful for testing</help>
			</entry>
			<entry name="VIDEO_PXA27x">
				<label>PXA27x Quick Capture Interface driver</label>
				<help>This is a v4l2 driver for the PXA27x Quick Capture Interface</help>
			</entry>
			<entry name="VIDEO_RCAR_VIN_OLD">
				<label>R-Car Video Input (VIN) support (DEPRECATED)</label>
				<help>This is a v4l2 driver for the R-Car VIN Interface</help>
			</entry>
			<entry name="VIDEO_SH_MOBILE_CSI2">
				<label>SuperH Mobile MIPI CSI-2 Interface driver</label>
				<help>This is a v4l2 driver for the SuperH MIPI CSI-2 Interface</help>
			</entry>
			<entry name="VIDEO_SH_MOBILE_CEU">
				<label>SuperH Mobile CEU Interface driver</label>
				<help>This is a v4l2 driver for the SuperH Mobile CEU Interface</help>
			</entry>
			<entry name="VIDEO_ATMEL_ISI">
				<label>ATMEL Image Sensor Interface (ISI) support</label>
				<help>This module makes the ATMEL Image Sensor Interface available
as a v4l2 device.

</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_EXYNOS4_IS">
				<label>Samsung S5P/EXYNOS4 SoC series Camera Subsystem driver</label>
				<help>Say Y here to enable camera host interface devices for
Samsung S5P and EXYNOS SoC series.</help>
			</entry>
			<entry name="VIDEO_EXYNOS4_IS_COMMON"/>
			<entry name="VIDEO_S5P_FIMC">
				<label>S5P/EXYNOS4 FIMC/CAMIF camera interface driver</label>
				<help>This is a V4L2 driver for Samsung S5P and EXYNOS4 SoC camera host
interface and video postprocessor (FIMC) devices.

To compile this driver as a module, choose M here: the
module will be called s5p-fimc.</help>
			</entry>
			<entry name="VIDEO_S5P_MIPI_CSIS">
				<label>S5P/EXYNOS MIPI-CSI2 receiver (MIPI-CSIS) driver</label>
				<help>This is a V4L2 driver for Samsung S5P and EXYNOS4 SoC MIPI-CSI2
receiver (MIPI-CSIS) devices.

To compile this driver as a module, choose M here: the
module will be called s5p-csis.</help>
			</entry>
			<entry name="VIDEO_EXYNOS_FIMC_LITE">
				<label>EXYNOS FIMC-LITE camera interface driver</label>
				<help>This is a V4L2 driver for Samsung EXYNOS4/5 SoC FIMC-LITE camera
host interface.

To compile this driver as a module, choose M here: the
module will be called exynos-fimc-lite.</help>
			</entry>
			<entry name="VIDEO_EXYNOS4_FIMC_IS">
				<label>EXYNOS4x12 FIMC-IS (Imaging Subsystem) driver</label>
				<help>This is a V4L2 driver for Samsung EXYNOS4x12 SoC series
FIMC-IS (Imaging Subsystem).

To compile this driver as a module, choose M here: the
module will be called exynos4-fimc-is.</help>
			</entry>
			<entry name="VIDEO_EXYNOS4_ISP_DMA_CAPTURE">
				<label>EXYNOS4x12 FIMC-IS ISP Direct DMA capture support</label>
				<help>This option enables an additional video device node exposing a V4L2
video capture interface for the FIMC-IS ISP raw (Bayer) capture DMA.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_TV">
				<label>Samsung TV driver for S5P platform</label>
				<help>Say Y here to enable selecting the TV output devices for
Samsung S5P platform.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_HDMI">
				<label>Samsung HDMI Driver</label>
				<help>Say Y here if you want support for the HDMI output
interface in S5P Samsung SoC. The driver can be compiled
as module. It is an auxiliary driver, that exposes a V4L2
subdev for use by other drivers. This driver requires
hdmiphy driver to work correctly.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_HDMI_DEBUG">
				<label>Enable debug for HDMI Driver</label>
				<help>Enables debugging for HDMI driver.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_HDMIPHY">
				<label>Samsung HDMIPHY Driver</label>
				<help>Say Y here if you want support for the physical HDMI
interface in S5P Samsung SoC. The driver can be compiled
as module. It is an I2C driver, that exposes a V4L2
subdev for use by other drivers.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_SII9234">
				<label>Samsung SII9234 Driver</label>
				<help>Say Y here if you want support for the MHL interface
in S5P Samsung SoC. The driver can be compiled
as module. It is an I2C driver, that exposes a V4L2
subdev for use by other drivers.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_SDO">
				<label>Samsung Analog TV Driver</label>
				<help>Say Y here if you want support for the analog TV output
interface in S5P Samsung SoC. The driver can be compiled
as module. It is an auxiliary driver, that exposes a V4L2
subdev for use by other drivers. This driver requires
hdmiphy driver to work correctly.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_MIXER">
				<label>Samsung Mixer and Video Processor Driver</label>
				<help>Say Y here if you want support for the Mixer in Samsung S5P SoCs.
This device produce image data to one of output interfaces.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_MIXER_DEBUG">
				<label>Enable debug for Mixer Driver</label>
				<help>Enables debugging for Mixer driver.</help>
			</entry>
			<entry name="VIDEO_AM437X_VPFE">
				<label>TI AM437x VPFE video capture driver</label>
				<help>Support for AM437x Video Processing Front End based Video
Capture Driver.

To compile this driver as a module, choose M here. The module
will be called am437x-vpfe.
</help>
			</entry>
			<entry name="VIDEO_XILINX">
				<label>Xilinx Video IP (EXPERIMENTAL)</label>
				<help>Driver for Xilinx Video IP Pipelines</help>
			</entry>
			<entry name="VIDEO_XILINX_TPG">
				<label>Xilinx Video Test Pattern Generator</label>
				<help>Driver for the Xilinx Video Test Pattern Generator</help>
			</entry>
			<entry name="VIDEO_XILINX_VTC">
				<label>Xilinx Video Timing Controller</label>
				<help>Driver for the Xilinx Video Timing Controller</help>
			</entry>
			<entry name="VIDEO_RCAR_VIN">
				<label>R-Car Video Input (VIN) Driver</label>
				<help>Support for Renesas R-Car Video Input (VIN) driver.
Supports R-Car Gen2 SoCs.

To compile this driver as a module, choose M here: the
module will be called rcar-vin.
</help>
			</entry>
			<entry name="VIDEO_TI_CAL">
				<label>TI CAL (Camera Adaptation Layer) driver</label>
				<help>Support for the TI CAL (Camera Adaptation Layer) block
found on DRA72X SoC.
In TI Technical Reference Manual this module is referred as
Camera Interface Subsystem (CAMSS).</help>
			</entry>
			<entry name="V4L_MEM2MEM_DRIVERS">
				<label>Memory-to-memory multimedia devices</label>
				<help>Say Y here to enable selecting drivers for V4L devices that
use system memory for both source and destination buffers, as opposed
to capture and output drivers, which use memory buffers for just
one of those.</help>
			</entry>
			<entry name="VIDEO_CODA">
				<label>Chips&amp;Media Coda multi-standard codec IP</label>
				<help>Coda is a range of video codec IPs that supports
H.264, MPEG-4, and other video formats.</help>
			</entry>
			<entry name="VIDEO_MEDIATEK_VPU">
				<label>Mediatek Video Processor Unit</label>
				<help>This driver provides downloading VPU firmware and
communicating with VPU. This driver for hw video
codec embedded in Mediatek's MT8173 SOCs. It is able
to handle video decoding/encoding in a range of formats.

To compile this driver as a module, choose M here: the
module will be called mtk-vpu.</help>
			</entry>
			<entry name="VIDEO_MEDIATEK_VCODEC">
				<label>Mediatek Video Codec driver</label>
				<help>Mediatek video codec driver provides HW capability to
encode and decode in a range of video formats
This driver rely on VPU driver to communicate with VPU.

To compile this driver as a module, choose M here: the
module will be called mtk-vcodec</help>
			</entry>
			<entry name="VIDEO_MEM2MEM_DEINTERLACE">
				<label>Deinterlace support</label>
				<help>Generic deinterlacing V4L2 driver.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_G2D">
				<label>Samsung S5P and EXYNOS4 G2D 2d graphics accelerator driver</label>
				<help>This is a v4l2 driver for Samsung S5P and EXYNOS4 G2D
2d graphics accelerator.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_JPEG">
				<label>Samsung S5P/Exynos3250/Exynos4 JPEG codec driver</label>
				<help>This is a v4l2 driver for Samsung S5P, EXYNOS3250
and EXYNOS4 JPEG codec</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_MFC">
				<label>Samsung S5P MFC Video Codec</label>
				<help>MFC 5.1 and 6.x driver for V4L2</help>
			</entry>
			<entry name="VIDEO_MX2_EMMAPRP">
				<label>MX2 eMMa-PrP support</label>
				<help>MX2X chips have a PrP that can be used to process buffers from
memory to memory. Operations include resizing and format
conversion.</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_EXYNOS_GSC">
				<label>Samsung Exynos G-Scaler driver</label>
				<help>This is a v4l2 driver for Samsung EXYNOS5 SoC G-Scaler.</help>
			</entry>
			<entry name="VIDEO_STI_BDISP">
				<label>STMicroelectronics BDISP 2D blitter driver</label>
				<help>This v4l2 mem2mem driver is a 2D blitter for STMicroelectronics SoC.</help>
			</entry>
			<entry name="VIDEO_SH_VEU">
				<label>SuperH VEU mem2mem video processing driver</label>
				<help>Support for the Video Engine Unit (VEU) on SuperH and
SH-Mobile SoCs.</help>
			</entry>
			<entry name="VIDEO_RENESAS_JPU">
				<label>Renesas JPEG Processing Unit</label>
				<help>This is a V4L2 driver for the Renesas JPEG Processing Unit.

To compile this driver as a module, choose M here: the module
will be called rcar_jpu.</help>
			</entry>
			<entry name="VIDEO_RENESAS_FCP">
				<label>Renesas Frame Compression Processor</label>
				<help>This is a driver for the Renesas Frame Compression Processor (FCP).
The FCP is a companion module of video processing modules in the
Renesas R-Car Gen3 SoCs. It handles memory access for the codec,
VSP and FDP modules.

To compile this driver as a module, choose M here: the module
will be called rcar-fcp.</help>
			</entry>
			<entry name="VIDEO_RENESAS_VSP1">
				<label>Renesas VSP1 Video Processing Engine</label>
				<help>This is a V4L2 driver for the Renesas VSP1 video processing engine.

To compile this driver as a module, choose M here: the module
will be called vsp1.</help>
			</entry>
			<entry name="VIDEO_TI_VPE">
				<label>TI VPE (Video Processing Engine) driver</label>
				<help>Support for the TI VPE(Video Processing Engine) block
found on DRA7XX SoC.</help>
			</entry>
			<entry name="VIDEO_TI_VPE_DEBUG">
				<label>VPE debug messages</label>
				<help>Enable debug messages on VPE driver.</help>
			</entry>
			<entry name="V4L_TEST_DRIVERS">
				<label>Media test drivers</label>
			</entry>
			<entry name="VIDEO_VIVID">
				<label>Virtual Video Test Driver</label>
				<help>Enables a virtual video driver. This driver emulates a webcam,
TV, S-Video and HDMI capture hardware, including VBI support for
the SDTV inputs. Also video output, VBI output, radio receivers,
transmitters and software defined radio capture is emulated.

It is highly configurable and is ideal for testing applications.
Error injection is supported to test rare errors that are hard
to reproduce in real hardware.

Say Y here if you want to test video apps or debug V4L devices.
When in doubt, say N.</help>
			</entry>
			<entry name="VIDEO_VIVID_CEC">
				<label>Enable CEC emulation support</label>
				<help>When selected the vivid module will emulate the optional
HDMI CEC feature.</help>
			</entry>
			<entry name="VIDEO_VIVID_MAX_DEVS">
				<label>Maximum number of devices</label>
				<help>This allows you to specify the maximum number of devices supported
by the vivid driver.
</help>
			</entry>
			<entry name="VIDEO_VIM2M">
				<label>Virtual Memory-to-Memory Driver</label>
				<help>This is a virtual test device for the memory-to-memory driver
framework.</help>
			</entry>
			<entry name="DVB_PLATFORM_DRIVERS">
				<label>DVB platform devices</label>
				<help>Say Y here to enable support for platform-specific Digital TV drivers.</help>
			</entry>
			<entry name="DVB_C8SECTPFE">
				<label>STMicroelectronics C8SECTPFE DVB support</label>
				<help>This adds support for DVB front-end cards connected
to TS inputs of STiH407/410 SoC.

The driver currently supports C8SECTPFE's TS input block,
memdma engine, and HW PID filtering.

Supported DVB front-end cards are:
- STMicroelectronics DVB-T B2100A (STV0367 + TDA18212)
- STMicroelectronics DVB-S/S2 STV0903 + STV6110 + LNBP24 board

To compile this driver as a module, choose M here: the
module will be called c8sectpfe.
</help>
			</entry>
			<entry name="SMS_SDIO_DRV">
				<label>Siano SMS1xxx based MDTV via SDIO interface</label>
				<help>Choose if you would like to have Siano's support for SDIO interface
</help>
			</entry>
			<entry name="RADIO_ADAPTERS">
				<label>Radio Adapters</label>
				<help>Say Y here to enable selecting AM/FM radio adapters.</help>
			</entry>
			<entry name="RADIO_TEA575X"/>
			<entry name="RADIO_SI470X">
				<label>Silicon Labs Si470x FM Radio Receiver support</label>
			</entry>
			<entry name="USB_SI470X">
				<label>Silicon Labs Si470x FM Radio Receiver support with USB</label>
				<help>This is a driver for USB devices with the Silicon Labs SI470x
chip. Currently these devices are known to work:
- 10c4:818a: Silicon Labs USB FM Radio Reference Design
- 06e1:a155: ADS/Tech FM Radio Receiver (formerly Instant FM Music)
- 1b80:d700: KWorld USB FM Radio SnapMusic Mobile 700 (FM700)
- 10c5:819a: Sanei Electric FM USB Radio (aka DealExtreme.com PCear)

Sound is provided by the ALSA USB Audio/MIDI driver. Therefore
if you don't want to use the device solely for RDS receiving,
it is recommended to also select SND_USB_AUDIO.

Please have a look at the documentation, especially on how
to redirect the audio stream from the radio to your sound device:
Documentation/video4linux/si470x.txt

Say Y here if you want to connect this type of radio to your
computer's USB port.

To compile this driver as a module, choose M here: the
module will be called radio-usb-si470x.</help>
			</entry>
			<entry name="I2C_SI470X">
				<label>Silicon Labs Si470x FM Radio Receiver support with I2C</label>
				<help>This is a driver for I2C devices with the Silicon Labs SI470x
chip.

Say Y here if you want to connect this type of radio to your
computer's I2C port.

To compile this driver as a module, choose M here: the
module will be called radio-i2c-si470x.
</help>
			</entry>
			<entry name="RADIO_SI4713">
				<label>Silicon Labs Si4713 FM Radio with RDS Transmitter support</label>
			</entry>
			<entry name="USB_SI4713">
				<label>Silicon Labs Si4713 FM Radio Transmitter support with USB</label>
				<help>This is a driver for USB devices with the Silicon Labs SI4713
chip. Currently these devices are known to work.
- 10c4:8244: Silicon Labs FM Transmitter USB device.

Say Y here if you want to connect this type of radio to your
computer's USB port.

To compile this driver as a module, choose M here: the
module will be called radio-usb-si4713.</help>
			</entry>
			<entry name="PLATFORM_SI4713">
				<label>Silicon Labs Si4713 FM Radio Transmitter support with I2C</label>
				<help>This is a driver for I2C devices with the Silicon Labs SI4713
chip.

Say Y here if you want to connect this type of radio to your
computer's I2C port.

To compile this driver as a module, choose M here: the
module will be called radio-platform-si4713.</help>
			</entry>
			<entry name="I2C_SI4713">
				<label>Silicon Labs Si4713 FM Radio Transmitter support</label>
				<help>Say Y here if you want support to Si4713 FM Radio Transmitter.
This device can transmit audio through FM. It can transmit
RDS and RBDS signals as well. This module is the v4l2 radio
interface for the i2c driver of this device.

To compile this driver as a module, choose M here: the
module will be called si4713.
</help>
			</entry>
			<entry name="RADIO_SI476X">
				<label>Silicon Laboratories Si476x I2C FM Radio</label>
				<help>Choose Y here if you have this FM radio chip.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux 2 API.  Information on
this API and pointers to &quot;v4l2&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-si476x.</help>
			</entry>
			<entry name="USB_MR800">
				<label>AverMedia MR 800 USB FM radio support</label>
				<help>Say Y here if you want to connect this type of radio to your
computer's USB port. Note that the audio is not digital, and
you must connect the line out connector to a sound card or a
set of speakers.

To compile this driver as a module, choose M here: the
module will be called radio-mr800.</help>
			</entry>
			<entry name="USB_DSBR">
				<label>D-Link/GemTek USB FM radio support</label>
				<help>Say Y here if you want to connect this type of radio to your
computer's USB port. Note that the audio is not digital, and
you must connect the line out connector to a sound card or a
set of speakers.

To compile this driver as a module, choose M here: the
module will be called dsbr100.</help>
			</entry>
			<entry name="RADIO_MAXIRADIO">
				<label>Guillemot MAXI Radio FM 2000 radio</label>
				<help>Choose Y here if you have this radio card.  This card may also be
found as Gemtek PCI FM.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux API.  Information on
this API and pointers to &quot;v4l&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-maxiradio.</help>
			</entry>
			<entry name="RADIO_SHARK">
				<label>Griffin radioSHARK USB radio receiver</label>
				<help>Choose Y here if you have this radio receiver.

There are 2 versions of this device, this driver is for version 1,
which is white.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux API.  Information on
this API and pointers to &quot;v4l&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-shark.</help>
			</entry>
			<entry name="RADIO_SHARK2">
				<label>Griffin radioSHARK2 USB radio receiver</label>
				<help>Choose Y here if you have this radio receiver.

There are 2 versions of this device, this driver is for version 2,
which is black.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux API.  Information on
this API and pointers to &quot;v4l&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-shark2.</help>
			</entry>
			<entry name="USB_KEENE">
				<label>Keene FM Transmitter USB support</label>
				<help>Say Y here if you want to connect this type of FM transmitter
to your computer's USB port.

To compile this driver as a module, choose M here: the
module will be called radio-keene.</help>
			</entry>
			<entry name="USB_RAREMONO">
				<label>Thanko's Raremono AM/FM/SW radio support</label>
				<help>The 'Thanko's Raremono' device contains the Si4734 chip from Silicon Labs Inc.
It is one of the very few or perhaps the only consumer USB radio device
to receive the AM/FM/SW bands.

Say Y here if you want to connect this type of AM/FM/SW receiver
to your computer's USB port.

To compile this driver as a module, choose M here: the
module will be called radio-raremono.</help>
			</entry>
			<entry name="USB_MA901">
				<label>Masterkit MA901 USB FM radio support</label>
				<help>Say Y here if you want to connect this type of radio to your
computer's USB port. Note that the audio is not digital, and
you must connect the line out connector to a sound card or a
set of speakers or headphones.

To compile this driver as a module, choose M here: the
module will be called radio-ma901.</help>
			</entry>
			<entry name="RADIO_TEA5764">
				<label>TEA5764 I2C FM radio support</label>
				<help>Say Y here if you want to use the TEA5764 FM chip found in
EZX phones. This FM chip is present in EZX phones from Motorola,
connected to internal pxa I2C bus.

To compile this driver as a module, choose M here: the
module will be called radio-tea5764.</help>
			</entry>
			<entry name="RADIO_TEA5764_XTAL">
				<label>TEA5764 crystal reference</label>
				<help>Say Y here if TEA5764 have a 32768 Hz crystal in circuit, say N
here if TEA5764 reference frequency is connected in FREQIN.</help>
			</entry>
			<entry name="RADIO_SAA7706H">
				<label>SAA7706H Car Radio DSP</label>
				<help>Say Y here if you want to use the SAA7706H Car radio Digital
Signal Processor, found for instance on the Russellville development
board. On the russellville the device is connected to internal
timberdale I2C bus.

To compile this driver as a module, choose M here: the
module will be called SAA7706H.</help>
			</entry>
			<entry name="RADIO_TEF6862">
				<label>TEF6862 Car Radio Enhanced Selectivity Tuner</label>
				<help>Say Y here if you want to use the TEF6862 Car Radio Enhanced
Selectivity Tuner, found for instance on the Russellville development
board. On the russellville the device is connected to internal
timberdale I2C bus.

To compile this driver as a module, choose M here: the
module will be called TEF6862.</help>
			</entry>
			<entry name="RADIO_TIMBERDALE">
				<label>Enable the Timberdale radio driver</label>
				<help>This is a kind of umbrella driver for the Radio Tuner and DSP
found behind the Timberdale FPGA on the Russellville board.
Enabling this driver will automatically select the DSP and tuner.</help>
			</entry>
			<entry name="RADIO_WL1273">
				<label>Texas Instruments WL1273 I2C FM Radio</label>
				<help>Choose Y here if you have this FM radio chip.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux 2 API.  Information on
this API and pointers to &quot;v4l2&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-wl1273.</help>
			</entry>
			<container name="Texas_Instruments_WL128x_FM_driver_ST_based_">
				<label>Texas Instruments WL128x FM driver (ST based)</label>
				<entry name="RADIO_WL128X">
					<label>Texas Instruments WL128x FM Radio</label>
					<help>Choose Y here if you have this FM radio chip.

In order to control your radio card, you will need to use programs
that are compatible with the Video For Linux 2 API.  Information on
this API and pointers to &quot;v4l2&quot; programs may be found at
&lt;file:Documentation/video4linux/API.html&gt;.</help>
				</entry>
			</container>
			<entry name="V4L_RADIO_ISA_DRIVERS">
				<label>ISA radio devices</label>
				<help>Say Y here to enable support for these ISA drivers.</help>
			</entry>
			<entry name="RADIO_ISA"/>
			<entry name="RADIO_CADET">
				<label>ADS Cadet AM/FM Tuner</label>
				<help>Choose Y here if you have one of these AM/FM radio cards, and then
fill in the port address below.

To compile this driver as a module, choose M here: the
module will be called radio-cadet.</help>
			</entry>
			<entry name="RADIO_RTRACK">
				<label>AIMSlab RadioTrack (aka RadioReveal) support</label>
				<help>Choose Y here if you have one of these FM radio cards, and then fill
in the port address below.

Note that newer AIMSlab RadioTrack cards have a different chipset
and are not supported by this driver.  For these cards, use the
RadioTrack II driver below.

If you have a GemTeks combined (PnP) sound- and radio card you must
use this driver as a module and setup the card with isapnptools.
You must also pass the module a suitable io parameter, 0x248 has
been reported to be used by these cards.

More information is contained in the file
&lt;file:Documentation/video4linux/radiotrack.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called radio-aimslab.</help>
			</entry>
			<entry name="RADIO_RTRACK2">
				<label>AIMSlab RadioTrack II support</label>
				<help>Choose Y here if you have this FM radio card, and then fill in the
port address below.

Note: this driver hasn't been tested since a long time due to lack
of hardware. If you have this hardware, then please contact the
linux-media mailinglist.

To compile this driver as a module, choose M here: the
module will be called radio-rtrack2.</help>
			</entry>
			<entry name="RADIO_AZTECH">
				<label>Aztech/Packard Bell Radio</label>
				<help>Choose Y here if you have one of these FM radio cards, and then fill
in the port address below.

To compile this driver as a module, choose M here: the
module will be called radio-aztech.</help>
			</entry>
			<entry name="RADIO_GEMTEK">
				<label>GemTek Radio card (or compatible) support</label>
				<help>Choose Y here if you have this FM radio card, and then fill in the
I/O port address and settings below. The following cards either have
GemTek Radio tuner or are rebranded GemTek Radio cards:

- Sound Vision 16 Gold with FM Radio
- Typhoon Radio card (some models)
- Hama Radio card

To compile this driver as a module, choose M here: the
module will be called radio-gemtek.</help>
			</entry>
			<entry name="RADIO_GEMTEK_PROBE">
				<label>Automatic I/O port probing</label>
				<help>Say Y here to enable automatic probing for GemTek Radio card. The
following ports will be probed: 0x20c, 0x30c, 0x24c, 0x34c, 0x248 and
0x28c.</help>
			</entry>
			<entry name="RADIO_MIROPCM20">
				<label>miroSOUND PCM20 radio</label>
				<help>Choose Y here if you have this FM radio card. You also need to enable
the ALSA sound system. This choice automatically selects the ALSA
sound card driver &quot;Miro miroSOUND PCM1pro/PCM12/PCM20radio&quot; as this
is required for the radio-miropcm20.

To compile this driver as a module, choose M here: the
module will be called radio-miropcm20.</help>
			</entry>
			<entry name="RADIO_SF16FMI">
				<label>SF16-FMI/SF16-FMP/SF16-FMD Radio</label>
				<help>Choose Y here if you have one of these FM radio cards.

To compile this driver as a module, choose M here: the
module will be called radio-sf16fmi.</help>
			</entry>
			<entry name="RADIO_SF16FMR2">
				<label>SF16-FMR2/SF16-FMD2 Radio</label>
				<help>Choose Y here if you have one of these FM radio cards.

To compile this driver as a module, choose M here: the
module will be called radio-sf16fmr2.</help>
			</entry>
			<entry name="RADIO_TERRATEC">
				<label>TerraTec ActiveRadio ISA Standalone</label>
				<help>Choose Y here if you have this FM radio card.

Note: this driver hasn't been tested since a long time due to lack
of hardware. If you have this hardware, then please contact the
linux-media mailinglist.

To compile this driver as a module, choose M here: the
module will be called radio-terratec.</help>
			</entry>
			<entry name="RADIO_TRUST">
				<label>Trust FM radio card</label>
				<help>This is a driver for the Trust FM radio cards. Say Y if you have
such a card and want to use it under Linux.

Note: this driver hasn't been tested since a long time due to lack
of hardware. If you have this hardware, then please contact the
linux-media mailinglist.

To compile this driver as a module, choose M here: the
module will be called radio-trust.</help>
			</entry>
			<entry name="RADIO_TYPHOON">
				<label>Typhoon Radio (a.k.a. EcoRadio)</label>
				<help>Choose Y here if you have one of these FM radio cards, and then fill
in the port address and the frequency used for muting below.

Note: this driver hasn't been tested since a long time due to lack
of hardware. If you have this hardware, then please contact the
linux-media mailinglist.

To compile this driver as a module, choose M here: the
module will be called radio-typhoon.</help>
			</entry>
			<entry name="RADIO_TYPHOON_MUTEFREQ">
				<label>Typhoon frequency set when muting the device (kHz)</label>
				<help>Enter the frequency used for muting the radio. The device is never
completely silent. If the volume is just turned down, you can still
hear silent voices and music. For that reason, the frequency of the
radio device is set to the frequency you can enter here whenever
the device is muted. There should be no local radio station at that
frequency.</help>
			</entry>
			<entry name="RADIO_ZOLTRIX">
				<label>Zoltrix Radio</label>
				<help>Choose Y here if you have one of these FM radio cards, and then fill
in the port address below.

Note: this driver hasn't been tested since a long time due to lack
of hardware. If you have this hardware, then please contact the
linux-media mailinglist.

To compile this driver as a module, choose M here: the
module will be called radio-zoltrix.</help>
			</entry>
			<entry name="DVB_FIREDTV">
				<label>FireDTV and FloppyDTV</label>
				<help>Support for DVB receivers from Digital Everywhere
which are connected via IEEE 1394 (FireWire).

These devices don't have an MPEG decoder built in,
so you need an external software decoder to watch TV.

To compile this driver as a module, say M here:
the module will be called firedtv.</help>
			</entry>
			<entry name="DVB_FIREDTV_INPUT"/>
			<entry name="MEDIA_COMMON_OPTIONS"/>
			<entry name="VIDEO_CX2341X"/>
			<entry name="VIDEO_TVEEPROM"/>
			<entry name="CYPRESS_FIRMWARE">
				<label>Cypress firmware helper routines</label>
			</entry>
			<entry name="DVB_B2C2_FLEXCOP"/>
			<entry name="DVB_B2C2_FLEXCOP_DEBUG"/>
			<entry name="VIDEO_SAA7146"/>
			<entry name="VIDEO_SAA7146_VV"/>
			<entry name="SMS_SIANO_MDTV"/>
			<entry name="SMS_SIANO_RC">
				<label>Enable Remote Controller support for Siano devices</label>
				<help>Choose Y to select Remote Controller support for Siano driver.</help>
			</entry>
			<entry name="SMS_SIANO_DEBUGFS">
				<label>Enable debugfs for smsdvb</label>
				<help>Choose Y to enable visualizing a dump of the frontend
statistics response packets via debugfs. Currently, works
only with Siano USB devices.

Useful only for developers. In doubt, say N.
</help>
			</entry>
			<entry name="VIDEO_V4L2_TPG"/>
			<entry name="MEDIA_SUBDRV_AUTOSELECT">
				<label>Autoselect ancillary drivers (tuners, sensors, i2c, frontends)</label>
				<help>By default, a media driver auto-selects all possible ancillary
devices such as tuners, sensors, video encoders/decoders and
frontends, that are used by any of the supported devices.

This is generally the right thing to do, except when there
are strict constraints with regards to the kernel size,
like on embedded systems.

Use this option with care, as deselecting ancillary drivers which
are, in fact, necessary will result in the lack of the needed
functionality for your device (it may not tune or may not have
the needed demodulators).

If unsure say Y.</help>
			</entry>
			<entry name="MEDIA_ATTACH"/>
			<entry name="VIDEO_IR_I2C">
				<label>I2C module for IR&quot; if !MEDIA_SUBDRV_AUTOSELECT</label>
				<help>Most boards have an IR chip directly connected via GPIO. However,
some video boards have the IR connected via I2C bus.

If your board doesn't have an I2C IR chip, you may disable this
option.

In doubt, say Y.</help>
			</entry>
			<container name="Encoders_decoders_sensors_and_other_helper_chips">
				<label>Encoders, decoders, sensors and other helper chips</label>
			</container>
			<entry name="MEDIA_TUNER"/>
			<container name="Customize_TV_tuners">
				<label>Customize TV tuners</label>
			</container>
			<container name="Customise_DVB_Frontends">
				<label>Customise DVB Frontends</label>
			</container>
			<container name="Graphics_support">
				<label>Graphics support</label>
				<entry name="HAVE_FB_ATMEL"/>
				<entry name="SH_LCD_MIPI_DSI"/>
				<entry name="AGP">
					<label>/dev/agpgart (AGP Support)</label>
					<help>AGP (Accelerated Graphics Port) is a bus system mainly used to
connect graphics cards to the rest of the system.

If you have an AGP system and you say Y here, it will be possible to
use the AGP features of your 3D rendering video card. This code acts
as a sort of &quot;AGP driver&quot; for the motherboard's chipset.

If you need more texture memory than you can get with the AGP GART
(theoretically up to 256 MB, but in practice usually 64 or 128 MB
due to kernel allocation issues), you could use PCI accesses
and have up to a couple gigs of texture space.

Note that this is the only means to have X/GLX use
write-combining with MTRR support on the AGP bus. Without it, OpenGL
direct rendering will be a lot slower but still faster than PIO.

To compile this driver as a module, choose M here: the
module will be called agpgart.

You should say Y here if you want to use GLX or DRI.

If unsure, say N.</help>
				</entry>
				<entry name="AGP_ALI">
					<label>ALI chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on the following ALi chipsets.  The supported chipsets
include M1541, M1621, M1631, M1632, M1641,M1647,and M1651.
For the ALi-chipset question, ALi suggests you refer to
&lt;http://www.ali.com.tw/&gt;.

The M1541 chipset can do AGP 1x and 2x, but note that there is an
acknowledged incompatibility with Matrox G200 cards. Due to
timing issues, this chipset cannot do AGP 2x with the G200.
This is a hardware limitation. AGP 1x seems to be fine, though.</help>
				</entry>
				<entry name="AGP_ATI">
					<label>ATI chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on the ATI RadeonIGP family of chipsets.</help>
				</entry>
				<entry name="AGP_AMD">
					<label>AMD Irongate, 761, and 762 chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on AMD Irongate, 761, and 762 chipsets.</help>
				</entry>
				<entry name="AGP_AMD64">
					<label>AMD Opteron/Athlon64 on-CPU GART support</label>
					<help>This option gives you AGP support for the GLX component of
X using the on-CPU northbridge of the AMD Athlon64/Opteron CPUs.
You still need an external AGP bridge like the AMD 8151, VIA
K8T400M, SiS755. It may also support other AGP bridges when loaded
with agp_try_unsupported=1.</help>
				</entry>
				<entry name="AGP_INTEL">
					<label>Intel 440LX/BX/GX, I8xx and E7x05 chipset support</label>
					<help>This option gives you AGP support for the GLX component of X
on Intel 440LX/BX/GX, 815, 820, 830, 840, 845, 850, 860, 875,
E7205 and E7505 chipsets and full support for the 810, 815, 830M,
845G, 852GM, 855GM, 865G and I915 integrated graphics chipsets.</help>
				</entry>
				<entry name="AGP_NVIDIA">
					<label>NVIDIA nForce/nForce2 chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on NVIDIA chipsets including nForce and nForce2</help>
				</entry>
				<entry name="AGP_SIS">
					<label>SiS chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on Silicon Integrated Systems [SiS] chipsets.

Note that 5591/5592 AGP chipsets are NOT supported.</help>
				</entry>
				<entry name="AGP_SWORKS">
					<label>Serverworks LE/HE chipset support</label>
					<help>Say Y here to support the Serverworks AGP card.  See
&lt;http://www.serverworks.com/&gt; for product descriptions and images.</help>
				</entry>
				<entry name="AGP_VIA">
					<label>VIA chipset support</label>
					<help>This option gives you AGP support for the GLX component of
X on VIA MVP3/Apollo Pro chipsets.</help>
				</entry>
				<entry name="AGP_I460">
					<label>Intel 460GX chipset support</label>
					<help>This option gives you AGP GART support for the Intel 460GX chipset
for IA64 processors.</help>
				</entry>
				<entry name="AGP_HP_ZX1">
					<label>HP ZX1 chipset AGP support</label>
					<help>This option gives you AGP GART support for the HP ZX1 chipset
for IA64 processors.</help>
				</entry>
				<entry name="AGP_PARISC">
					<label>HP Quicksilver AGP support</label>
					<help>This option gives you AGP GART support for the HP Quicksilver
AGP bus adapter on HP PA-RISC machines (Ok, just on the C8000
workstation...)</help>
				</entry>
				<entry name="AGP_ALPHA_CORE">
					<label>Alpha AGP support</label>
				</entry>
				<entry name="AGP_UNINORTH">
					<label>Apple UniNorth &amp; U3 AGP support</label>
					<help>This option gives you AGP support for Apple machines with a
UniNorth or U3 (Apple G5) bridge.</help>
				</entry>
				<entry name="AGP_EFFICEON">
					<label>Transmeta Efficeon support</label>
					<help>This option gives you AGP support for the Transmeta Efficeon
series processors with integrated northbridges.</help>
				</entry>
				<entry name="AGP_SGI_TIOCA">
					<label>SGI TIO chipset AGP support</label>
					<help>This option gives you AGP GART support for the SGI TIO chipset
for IA64 processors.</help>
				</entry>
				<entry name="INTEL_GTT"/>
				<entry name="VGA_ARB">
					<label>VGA Arbitration&quot; if EXPERT</label>
					<help>Some &quot;legacy&quot; VGA devices implemented on PCI typically have the same
hard-decoded addresses as they did on ISA. When multiple PCI devices
are accessed at same time they need some kind of coordination. Please
see Documentation/vgaarbiter.txt for more details. Select this to
enable VGA arbiter.</help>
				</entry>
				<entry name="VGA_ARB_MAX_GPUS">
					<label>Maximum number of GPUs</label>
					<help>Reserves space in the kernel to maintain resource locking for
multiple GPUS.  The overhead for each GPU is very small.</help>
				</entry>
				<entry name="VGA_SWITCHEROO">
					<label>Laptop Hybrid Graphics - GPU switching support</label>
					<help>Many laptops released in 2008/9/10 have two GPUs with a multiplexer
to switch between them. This adds support for dynamic switching when
X isn't running and delayed switching until the next logoff. This
feature is called hybrid graphics, ATI PowerXpress, and Nvidia
HybridPower.
</help>
				</entry>
				<entry name="TEGRA_HOST1X">
					<label>NVIDIA Tegra host1x driver</label>
					<help>Driver for the NVIDIA Tegra host1x hardware.

The Tegra host1x module is the DMA engine for register access to
Tegra's graphics- and multimedia-related modules. The modules served
by host1x are referred to as clients. host1x includes some other
functionality, such as synchronization.</help>
				</entry>
				<entry name="TEGRA_HOST1X_FIREWALL">
					<label>Enable HOST1X security firewall</label>
					<help>Say yes if kernel should protect command streams from tampering.

If unsure, choose Y.</help>
				</entry>
				<entry name="IMX_IPUV3_CORE">
					<label>IPUv3 core support</label>
					<help>Choose this if you have a i.MX5/6 system and want to use the Image
Processing Unit. This option only enables IPU base support.
</help>
				</entry>
				<entry name="DRM">
					<label>Direct Rendering Manager (XFree86 4.1.0 and higher DRI support)</label>
					<help>Kernel-level support for the Direct Rendering Infrastructure (DRI)
introduced in XFree86 4.0. If you say Y here, you need to select
the module that's right for your graphics card from the list below.
These modules provide support for synchronization, security, and
DMA transfers. Please see &lt;http://dri.sourceforge.net/&gt; for more
details.  You should also select and configure AGP
(/dev/agpgart) support if it is available for your platform.</help>
				</entry>
				<entry name="DRM_MIPI_DSI"/>
				<entry name="DRM_DP_AUX_CHARDEV">
					<label>DRM DP AUX Interface</label>
					<help>Choose this option to enable a /dev/drm_dp_auxN node that allows to
read and write values to arbitrary DPCD registers on the DP aux
channel.</help>
				</entry>
				<entry name="DRM_KMS_HELPER">
					<help>CRTC helpers for KMS drivers.</help>
				</entry>
				<entry name="DRM_KMS_FB_HELPER">
					<help>FBDEV helpers for KMS drivers.</help>
				</entry>
				<entry name="DRM_FBDEV_EMULATION">
					<label>Enable legacy fbdev support for your modesetting driver</label>
					<help>Choose this option if you have a need for the legacy fbdev
support. Note that this support also provides the linux console
support on top of your modesetting driver.

If in doubt, say &quot;Y&quot;.</help>
				</entry>
				<entry name="DRM_LOAD_EDID_FIRMWARE">
					<label>Allow to specify an EDID data set instead of probing for it</label>
					<help>Say Y here, if you want to use EDID data to be loaded from the
/lib/firmware directory or one of the provided built-in
data sets. This may be necessary, if the graphics adapter or
monitor are unable to provide appropriate EDID data. Since this
feature is provided as a workaround for broken hardware, the
default case is N. Details and instructions how to build your own
EDID data are given in Documentation/EDID/HOWTO.txt.</help>
				</entry>
				<entry name="DRM_TTM">
					<help>GPU memory management subsystem for devices with multiple
GPU memory types. Will be enabled automatically if a device driver
uses it.</help>
				</entry>
				<entry name="DRM_GEM_CMA_HELPER">
					<help>Choose this if you need the GEM CMA helper functions</help>
				</entry>
				<entry name="DRM_KMS_CMA_HELPER">
					<help>Choose this if you need the KMS CMA helper functions</help>
				</entry>
				<container name="I2C_encoder_or_helper_chips">
					<label>I2C encoder or helper chips</label>
					<entry name="DRM_I2C_CH7006">
						<label>Chrontel ch7006 TV encoder</label>
						<help>Support for Chrontel ch7006 and similar TV encoders, found
on some nVidia video cards.

This driver is currently only useful if you're also using
the nouveau driver.</help>
					</entry>
					<entry name="DRM_I2C_SIL164">
						<label>Silicon Image sil164 TMDS transmitter</label>
						<help>Support for sil164 and similar single-link (or dual-link
when used in pairs) TMDS transmitters, used in some nVidia
video cards.</help>
					</entry>
					<entry name="DRM_I2C_NXP_TDA998X">
						<label>NXP Semiconductors TDA998X HDMI encoder</label>
						<help>Support for NXP Semiconductors TDA998X HDMI encoders.</help>
					</entry>
				</container>
				<entry name="DRM_TDFX">
					<label>3dfx Banshee/Voodoo3+</label>
					<help>Choose this option if you have a 3dfx Banshee or Voodoo3 (or later),
graphics card.  If M is selected, the module will be called tdfx.</help>
				</entry>
				<entry name="DRM_ARM">
					<help>Choose this option to select drivers for ARM's devices</help>
				</entry>
				<entry name="DRM_HDLCD">
					<label>ARM HDLCD</label>
					<help>Choose this option if you have an ARM High Definition Colour LCD
controller.

If M is selected the module will be called hdlcd.</help>
				</entry>
				<entry name="DRM_HDLCD_SHOW_UNDERRUN">
					<label>Show underrun conditions</label>
					<help>Enable this option to show in red colour the pixels that the
HDLCD device did not fetch from framebuffer due to underrun
conditions.</help>
				</entry>
				<entry name="DRM_MALI_DISPLAY">
					<label>ARM Mali Display Processor</label>
					<help>Choose this option if you want to compile the ARM Mali Display
Processor driver. It supports the DP500, DP550 and DP650 variants
of the hardware.

If compiled as a module it will be called mali-dp.
</help>
				</entry>
				<entry name="DRM_R128">
					<label>ATI Rage 128</label>
					<help>Choose this option if you have an ATI Rage 128 graphics card.  If M
is selected, the module will be called r128.  AGP support for
this card is strongly suggested (unless you have a PCI version).</help>
				</entry>
				<entry name="DRM_RADEON">
					<label>ATI Radeon</label>
					<help>Choose this option if you have an ATI Radeon graphics card.  There
are both PCI and AGP versions.  You don't need to choose this to
run the Radeon in plain VGA mode.

If M is selected, the module will be called radeon.</help>
				</entry>
				<entry name="DRM_RADEON_USERPTR">
					<label>Always enable userptr support</label>
					<help>This option selects CONFIG_MMU_NOTIFIER if it isn't already
selected to enabled full userptr support.
</help>
				</entry>
				<entry name="DRM_AMDGPU">
					<label>AMD GPU</label>
					<help>Choose this option if you have a recent AMD Radeon graphics card.

If M is selected, the module will be called amdgpu.</help>
				</entry>
				<entry name="DRM_AMDGPU_CIK">
					<label>Enable amdgpu support for CIK parts</label>
					<help>Choose this option if you want to enable experimental support
for CIK asics.

CIK is already supported in radeon.  CIK support in amdgpu
is for experimentation and testing.</help>
				</entry>
				<entry name="DRM_AMDGPU_USERPTR">
					<label>Always enable userptr write support</label>
					<help>This option selects CONFIG_MMU_NOTIFIER if it isn't already
selected to enabled full userptr support.</help>
				</entry>
				<entry name="DRM_AMDGPU_GART_DEBUGFS">
					<label>Allow GART access through debugfs</label>
					<help>Selecting this option creates a debugfs file to inspect the mapped
pages. Uses more memory for housekeeping, enable only for debugging.

</help>
				</entry>
				<entry name="DRM_AMD_POWERPLAY">
					<label>Enable AMD powerplay component</label>
					<help>select this option will enable AMD powerplay component.
</help>
				</entry>
				<container name="ACP_Audio_CoProcessor_Configuration">
					<label>ACP (Audio CoProcessor) Configuration</label>
					<entry name="DRM_AMD_ACP">
						<label>Enable AMD Audio CoProcessor IP support</label>
						<help>Choose this option to enable ACP IP support for AMD SOCs.
This adds the ACP (Audio CoProcessor) IP driver and wires
it up into the amdgpu driver.  The ACP block provides the DMA
engine for the i2s-based ALSA driver. It is required for audio
on APUs which utilize an i2s codec.</help>
					</entry>
				</container>
				<entry name="DRM_NOUVEAU">
					<label>Nouveau (NVIDIA) cards</label>
					<help>Choose this option for open-source NVIDIA support.</help>
				</entry>
				<entry name="NOUVEAU_PLATFORM_DRIVER">
					<label>Nouveau (NVIDIA) SoC GPUs</label>
					<help>Support for Nouveau platform driver, used for SoC GPUs as found
on NVIDIA Tegra K1.</help>
				</entry>
				<entry name="NOUVEAU_DEBUG">
					<label>Maximum debug level</label>
					<help>Selects the maximum debug level to compile support for.

0 - fatal
1 - error
2 - warning
3 - info
4 - debug
5 - trace (recommended)
6 - paranoia
7 - spam

The paranoia and spam levels will add a lot of extra checks which
may potentially slow down driver operation.</help>
				</entry>
				<entry name="NOUVEAU_DEBUG_DEFAULT">
					<label>Default debug level</label>
					<help>Selects the default debug level</help>
				</entry>
				<entry name="DRM_NOUVEAU_BACKLIGHT">
					<label>Support for backlight control</label>
					<help>Say Y here if you want to control the backlight of your display
(e.g. a laptop panel).
</help>
				</entry>
				<entry name="DRM_I810">
					<label>Intel I810</label>
					<help>Choose this option if you have an Intel I810 graphics card.  If M is
selected, the module will be called i810.  AGP support is required
for this driver to work.</help>
				</entry>
				<entry name="DRM_I915">
					<label>Intel 8xx/9xx/G3x/G4x/HD Graphics</label>
					<help>Choose this option if you have a system that has &quot;Intel Graphics
Media Accelerator&quot; or &quot;HD Graphics&quot; integrated graphics,
including 830M, 845G, 852GM, 855GM, 865G, 915G, 945G, 965G,
G35, G41, G43, G45 chipsets and Celeron, Pentium, Core i3,
Core i5, Core i7 as well as Atom CPUs with integrated graphics.
If M is selected, the module will be called i915.  AGP support
is required for this driver to work. This driver is used by
the Intel driver in X.org 6.8 and XFree86 4.4 and above. It
replaces the older i830 module that supported a subset of the
hardware in older X.org releases.

Note that the older i810/i815 chipsets require the use of the
i810 driver instead, and the Atom z5xx series has an entirely
different implementation.</help>
				</entry>
				<entry name="DRM_I915_PRELIMINARY_HW_SUPPORT">
					<label>Enable preliminary support for prerelease Intel hardware by default</label>
					<help>Choose this option if you have prerelease Intel hardware and want the
i915 driver to support it by default.  You can enable such support at
runtime with the module option i915.preliminary_hw_support=1; this
option changes the default for that module option.

If in doubt, say &quot;N&quot;.</help>
				</entry>
				<entry name="DRM_I915_USERPTR">
					<label>Always enable userptr support</label>
					<help>This option selects CONFIG_MMU_NOTIFIER if it isn't already
selected to enabled full userptr support.

If in doubt, say &quot;Y&quot;.</help>
				</entry>
				<entry name="DRM_I915_GVT">
					<label>Enable Intel GVT-g graphics virtualization host support</label>
					<help>Choose this option if you want to enable Intel GVT-g graphics
virtualization technology host support with integrated graphics.
With GVT-g, it's possible to have one integrated graphics
device shared by multiple VMs under different hypervisors.

Note that at least one hypervisor like Xen or KVM is required for
this driver to work, and it only supports newer device from
Broadwell+. For further information and setup guide, you can
visit: http://01.org/igvt-g.

Now it's just a stub to support the modifications of i915 for
GVT device model. It requires at least one MPT modules for Xen/KVM
and other components of GVT device model to work. Use it under
you own risk.

If in doubt, say &quot;N&quot;.</help>
				</entry>
				<container name="drm_i915_Debugging">
					<label>drm/i915 Debugging</label>
					<entry name="DRM_I915_WERROR">
						<label>Force GCC to throw an error instead of a warning when compiling</label>
						<help>Add -Werror to the build flags for (and only for) i915.ko.
Do not enable this unless you are writing code for the i915.ko module.

Recommended for driver developers only.

If in doubt, say &quot;N&quot;.</help>
					</entry>
					<entry name="DRM_I915_DEBUG">
						<label>Enable additional driver debugging</label>
						<help>Choose this option to turn on extra driver debugging that may affect
performance but will catch some internal issues.

Recommended for driver developers only.

If in doubt, say &quot;N&quot;.</help>
					</entry>
					<entry name="DRM_I915_DEBUG_GEM">
						<label>Insert extra checks into the GEM internals</label>
						<help>Enable extra sanity checks (including BUGs) along the GEM driver
paths that may slow the system down and if hit hang the machine.

Recommended for driver developers only.

If in doubt, say &quot;N&quot;.

</help>
					</entry>
				</container>
				<entry name="DRM_MGA">
					<label>Matrox g200/g400</label>
					<help>Choose this option if you have a Matrox G200, G400 or G450 graphics
card.  If M is selected, the module will be called mga.  AGP
support is required for this driver to work.</help>
				</entry>
				<entry name="DRM_SIS">
					<label>SiS video cards</label>
					<help>Choose this option if you have a SiS 630 or compatible video
chipset. If M is selected the module will be called sis. AGP
support is required for this driver to work.</help>
				</entry>
				<entry name="DRM_VIA">
					<label>Via unichrome video cards</label>
					<help>Choose this option if you have a Via unichrome or compatible video
chipset. If M is selected the module will be called via.</help>
				</entry>
				<entry name="DRM_SAVAGE">
					<label>Savage video cards</label>
					<help>Choose this option if you have a Savage3D/4/SuperSavage/Pro/Twister
chipset. If M is selected the module will be called savage.</help>
				</entry>
				<entry name="DRM_VGEM">
					<label>Virtual GEM provider</label>
					<help>Choose this option to get a virtual graphics memory manager,
as used by Mesa's software renderer for enhanced performance.
If M is selected the module will be called vgem.</help>
				</entry>
				<entry name="DRM_EXYNOS">
					<label>DRM Support for Samsung SoC EXYNOS Series</label>
					<help>Choose this option if you have a Samsung SoC EXYNOS chipset.
If M is selected the module will be called exynosdrm.</help>
				</entry>
				<entry name="DRM_EXYNOS_IOMMU"/>
				<entry name="DRM_EXYNOS_FIMD">
					<label>FIMD</label>
					<help>Choose this option if you want to use Exynos FIMD for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS5433_DECON">
					<label>DECON on Exynos5433</label>
					<help>Choose this option if you want to use Exynos5433 DECON for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS7_DECON">
					<label>DECON on Exynos7</label>
					<help>Choose this option if you want to use Exynos DECON for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_MIXER">
					<label>Mixer</label>
					<help>Choose this option if you want to use Exynos Mixer for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_VIDI">
					<label>Virtual Display</label>
					<help>Choose this option if you want to use Exynos VIDI for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_DPI">
					<label>Parallel output</label>
					<help>This enables support for Exynos parallel output.</help>
				</entry>
				<entry name="DRM_EXYNOS_DSI">
					<label>MIPI-DSI host</label>
					<help>This enables support for Exynos MIPI-DSI device.</help>
				</entry>
				<entry name="DRM_EXYNOS_DP">
					<label>EXYNOS specific extensions for Analogix DP driver</label>
					<help>This enables support for DP device.</help>
				</entry>
				<entry name="DRM_EXYNOS_HDMI">
					<label>HDMI</label>
					<help>Choose this option if you want to use Exynos HDMI for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_MIC">
					<label>Mobile Image Compressor</label>
					<help>Choose this option if you want to use Exynos MIC for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_G2D">
					<label>G2D</label>
					<help>Choose this option if you want to use Exynos G2D for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_IPP">
					<label>Image Post Processor</label>
					<help>Choose this option if you want to use IPP feature for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_FIMC">
					<label>FIMC</label>
					<help>Choose this option if you want to use Exynos FIMC for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_ROTATOR">
					<label>Rotator</label>
					<help>Choose this option if you want to use Exynos Rotator for DRM.</help>
				</entry>
				<entry name="DRM_EXYNOS_GSC">
					<label>GScaler</label>
					<help>Choose this option if you want to use Exynos GSC for DRM.</help>
				</entry>
				<entry name="DRM_ROCKCHIP">
					<label>DRM Support for Rockchip</label>
					<help>Choose this option if you have a Rockchip soc chipset.
This driver provides kernel mode setting and buffer
management to userspace. This driver does not provide
2D or 3D acceleration; acceleration is performed by other
IP found on the SoC.</help>
				</entry>
				<entry name="ROCKCHIP_ANALOGIX_DP">
					<label>Rockchip specific extensions for Analogix DP driver</label>
					<help>This selects support for Rockchip SoC specific extensions
for the Analogix Core DP driver. If you want to enable DP
on RK3288 based SoC, you should selet this option.</help>
				</entry>
				<entry name="ROCKCHIP_DW_HDMI">
					<label>Rockchip specific extensions for Synopsys DW HDMI</label>
					<help>This selects support for Rockchip SoC specific extensions
for the Synopsys DesignWare HDMI driver. If you want to
enable HDMI on RK3288 based SoC, you should selet this
option.</help>
				</entry>
				<entry name="ROCKCHIP_DW_MIPI_DSI">
					<label>Rockchip specific extensions for Synopsys DW MIPI DSI</label>
					<help>This selects support for Rockchip SoC specific extensions
for the Synopsys DesignWare HDMI driver. If you want to
enable MIPI DSI on RK3288 based SoC, you should selet this
option.</help>
				</entry>
				<entry name="ROCKCHIP_INNO_HDMI">
					<label>Rockchip specific extensions for Innosilicon HDMI</label>
					<help>This selects support for Rockchip SoC specific extensions
for the Innosilicon HDMI driver. If you want to enable
HDMI on RK3036 based SoC, you should select this option.
</help>
				</entry>
				<entry name="DRM_VMWGFX">
					<label>DRM driver for VMware Virtual GPU</label>
					<help>Choose this option if you would like to run 3D acceleration
in a VMware virtual machine.
This is a KMS enabled DRM driver for the VMware SVGA2
virtual hardware.
The compiled module will be called &quot;vmwgfx.ko&quot;.</help>
				</entry>
				<entry name="DRM_VMWGFX_FBCON">
					<label>Enable framebuffer console under vmwgfx by default</label>
					<help>Choose this option if you are shipping a new vmwgfx
userspace driver that supports using the kernel driver.

</help>
				</entry>
				<entry name="DRM_GMA500">
					<label>Intel GMA5/600 KMS Framebuffer</label>
					<help>Say yes for an experimental 2D KMS framebuffer driver for the
Intel GMA500 ('Poulsbo') and other Intel IMG based graphics
devices.</help>
				</entry>
				<entry name="DRM_GMA600">
					<label>Intel GMA600 support (Experimental)</label>
					<help>Say yes to include support for GMA600 (Intel Moorestown/Oaktrail)
platforms with LVDS ports. MIPI is not currently supported.</help>
				</entry>
				<entry name="DRM_GMA3600">
					<label>Intel GMA3600/3650 support (Experimental)</label>
					<help>Say yes to include basic support for Intel GMA3600/3650 (Intel
Cedar Trail) platforms.</help>
				</entry>
				<entry name="DRM_MEDFIELD">
					<label>Intel Medfield support (Experimental)</label>
					<help>Say yes to include support for the Intel Medfield platform.

</help>
				</entry>
				<entry name="DRM_UDL">
					<label>DisplayLink</label>
					<help>This is a KMS driver for the USB displaylink video adapters.
Say M/Y to add support for these devices via drm/kms interfaces.
</help>
				</entry>
				<entry name="DRM_AST">
					<label>AST server chips</label>
					<help>Say yes for experimental AST GPU driver. Do not enable
this driver without having a working -modesetting,
and a version of AST that knows to fail if KMS
is bound to the driver. These GPUs are commonly found
in server chipsets.

</help>
				</entry>
				<entry name="DRM_MGAG200">
					<label>Kernel modesetting driver for MGA G200 server engines</label>
					<help>This is a KMS driver for the MGA G200 server chips, it
does not support the original MGA G200 or any of the desktop
chips. It requires 0.3.0 of the modesetting userspace driver,
and a version of mga driver that will fail on KMS enabled
devices.

</help>
				</entry>
				<entry name="DRM_CIRRUS_QEMU">
					<label>Cirrus driver for QEMU emulated device</label>
					<help>This is a KMS driver for emulated cirrus device in qemu.
It is *NOT* intended for real cirrus devices. This requires
the modesetting userspace X.org driver.
</help>
				</entry>
				<entry name="DRM_ARMADA">
					<label>DRM support for Marvell Armada SoCs</label>
					<help>Support the &quot;LCD&quot; controllers found on the Marvell Armada 510
devices.  There are two controllers on the device, each controller
supports graphics and video overlays.

This driver provides no built-in acceleration; acceleration is
performed by other IP found on the SoC.  This driver provides
kernel mode setting and buffer management to userspace.
</help>
				</entry>
				<entry name="DRM_ATMEL_HLCDC">
					<label>DRM Support for ATMEL HLCDC Display Controller</label>
					<help>Choose this option if you have an ATMEL SoC with an HLCDC display
controller (i.e. at91sam9n12, at91sam9x5 family or sama5d3 family).
</help>
				</entry>
				<entry name="DRM_RCAR_DU">
					<label>DRM Support for R-Car Display Unit</label>
					<help>Choose this option if you have an R-Car chipset.
If M is selected the module will be called rcar-du-drm.</help>
				</entry>
				<entry name="DRM_RCAR_HDMI">
					<label>R-Car DU HDMI Encoder Support</label>
					<help>Enable support for external HDMI encoders.</help>
				</entry>
				<entry name="DRM_RCAR_LVDS">
					<label>R-Car DU LVDS Encoder Support</label>
					<help>Enable support for the R-Car Display Unit embedded LVDS encoders.</help>
				</entry>
				<entry name="DRM_RCAR_VSP">
					<label>R-Car DU VSP Compositor Support</label>
					<help>Enable support to expose the R-Car VSP Compositor as KMS planes.
</help>
				</entry>
				<entry name="DRM_SHMOBILE">
					<label>DRM Support for SH Mobile</label>
					<help>Choose this option if you have an SH Mobile chipset.
If M is selected the module will be called shmob-drm.

</help>
				</entry>
				<entry name="DRM_SUN4I">
					<label>DRM Support for Allwinner A10 Display Engine</label>
					<help>Choose this option if you have an Allwinner SoC with a
Display Engine. If M is selected the module will be called
sun4i-drm.
</help>
				</entry>
				<entry name="DRM_OMAP">
					<label>OMAP DRM</label>
					<help>DRM display driver for OMAP2/3/4 based boards.</help>
				</entry>
				<entry name="DRM_OMAP_NUM_CRTCS">
					<label>Number of CRTCs</label>
					<help>Select the number of video overlays which can be used as framebuffers.
The remaining overlays are reserved for video.</help>
				</entry>
				<entry name="OMAP2_DSS_INIT"/>
				<entry name="OMAP2_DSS">
					<label>OMAP2+ Display Subsystem support</label>
					<help>OMAP2+ Display Subsystem support.</help>
				</entry>
				<entry name="OMAP2_DSS_DEBUG">
					<label>Debug support</label>
					<help>This enables printing of debug messages. Alternatively, debug messages
can also be enabled by setting CONFIG_DYNAMIC_DEBUG and then setting
appropriate flags in &lt;debugfs&gt;/dynamic_debug/control.</help>
				</entry>
				<entry name="OMAP2_DSS_DEBUGFS">
					<label>Debugfs filesystem support</label>
					<help>This enables debugfs for OMAPDSS at &lt;debugfs&gt;/omapdss. This enables
querying about clock configuration and register configuration of dss,
dispc, dsi, hdmi and rfbi.</help>
				</entry>
				<entry name="OMAP2_DSS_COLLECT_IRQ_STATS">
					<label>Collect DSS IRQ statistics</label>
					<help>Collect DSS IRQ statistics, printable via debugfs.

The statistics can be found from
&lt;debugfs&gt;/omapdss/dispc_irq for DISPC interrupts, and
&lt;debugfs&gt;/omapdss/dsi_irq for DSI interrupts.</help>
				</entry>
				<entry name="OMAP2_DSS_DPI">
					<label>DPI support</label>
					<help>DPI Interface. This is the Parallel Display Interface.</help>
				</entry>
				<entry name="OMAP2_DSS_RFBI">
					<label>RFBI support</label>
					<help>MIPI DBI support (RFBI, Remote Framebuffer Interface, in Texas
Instrument's terminology).

DBI is a bus between the host processor and a peripheral,
such as a display or a framebuffer chip.

See http://www.mipi.org/ for DBI specifications.</help>
				</entry>
				<entry name="OMAP2_DSS_VENC">
					<label>VENC support</label>
					<help>OMAP Video Encoder support for S-Video and composite TV-out.</help>
				</entry>
				<entry name="OMAP2_DSS_HDMI_COMMON"/>
				<entry name="OMAP4_DSS_HDMI">
					<label>HDMI support for OMAP4</label>
					<help>HDMI support for OMAP4 based SoCs.</help>
				</entry>
				<entry name="OMAP5_DSS_HDMI">
					<label>HDMI support for OMAP5</label>
					<help>HDMI Interface for OMAP5 and similar cores. This adds the High
Definition Multimedia Interface. See http://www.hdmi.org/ for HDMI
specification.</help>
				</entry>
				<entry name="OMAP2_DSS_SDI">
					<label>SDI support</label>
					<help>SDI (Serial Display Interface) support.

SDI is a high speed one-way display serial bus between the host
processor and a display.</help>
				</entry>
				<entry name="OMAP2_DSS_DSI">
					<label>DSI support</label>
					<help>MIPI DSI (Display Serial Interface) support.

DSI is a high speed half-duplex serial interface between the host
processor and a peripheral, such as a display or a framebuffer chip.

See http://www.mipi.org/ for DSI specifications.</help>
				</entry>
				<entry name="OMAP2_DSS_MIN_FCK_PER_PCK">
					<label>Minimum FCK/PCK ratio (for scaling)</label>
					<help>This can be used to adjust the minimum FCK/PCK ratio.

With this you can make sure that DISPC FCK is at least
n x PCK. Video plane scaling requires higher FCK than
normally.

If this is set to 0, there's no extra constraint on the
DISPC FCK. However, the FCK will at minimum be
2xPCK (if active matrix) or 3xPCK (if passive matrix).

Max FCK is 173MHz, so this doesn't work if your PCK
is very high.</help>
				</entry>
				<entry name="OMAP2_DSS_SLEEP_AFTER_VENC_RESET">
					<label>Sleep 20ms after VENC reset</label>
					<help>There is a 20ms sleep after VENC reset which seemed to fix the
reset. The reason for the bug is unclear, and it's also unclear
on what platforms this happens.

This option enables the sleep, and is enabled by default. You can
disable the sleep if it doesn't cause problems on your platform.</help>
				</entry>
				<container name="OMAPDRM_External_Display_Device_Drivers">
					<label>OMAPDRM External Display Device Drivers</label>
					<entry name="DRM_OMAP_ENCODER_OPA362">
						<label>OPA362 external analog amplifier</label>
						<help>Driver for OPA362 external analog TV amplifier controlled
through a GPIO.</help>
					</entry>
					<entry name="DRM_OMAP_ENCODER_TFP410">
						<label>TFP410 DPI to DVI Encoder</label>
						<help>Driver for TFP410 DPI to DVI encoder.</help>
					</entry>
					<entry name="DRM_OMAP_ENCODER_TPD12S015">
						<label>TPD12S015 HDMI ESD protection and level shifter</label>
						<help>Driver for TPD12S015, which offers HDMI ESD protection and level
shifting.</help>
					</entry>
					<entry name="DRM_OMAP_CONNECTOR_DVI">
						<label>DVI Connector</label>
						<help>Driver for a generic DVI connector.</help>
					</entry>
					<entry name="DRM_OMAP_CONNECTOR_HDMI">
						<label>HDMI Connector</label>
						<help>Driver for a generic HDMI connector.</help>
					</entry>
					<entry name="DRM_OMAP_CONNECTOR_ANALOG_TV">
						<label>Analog TV Connector</label>
						<help>Driver for a generic analog TV connector.</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_DPI">
						<label>Generic DPI panel</label>
						<help>Driver for generic DPI panels.</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_DSI_CM">
						<label>Generic DSI Command Mode Panel</label>
						<help>Driver for generic DSI command mode panels.</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_SONY_ACX565AKM">
						<label>ACX565AKM Panel</label>
						<help>This is the LCD panel used on Nokia N900</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_LGPHILIPS_LB035Q02">
						<label>LG.Philips LB035Q02 LCD Panel</label>
						<help>LCD Panel used on the Gumstix Overo Palo35</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_SHARP_LS037V7DW01">
						<label>Sharp LS037V7DW01 LCD Panel</label>
						<help>LCD Panel used in TI's SDP3430 and EVM boards</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_TPO_TD028TTEC1">
						<label>TPO TD028TTEC1 LCD Panel</label>
						<help>LCD panel used in Openmoko.</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_TPO_TD043MTEA1">
						<label>TPO TD043MTEA1 LCD Panel</label>
						<help>LCD Panel used in OMAP3 Pandora</help>
					</entry>
					<entry name="DRM_OMAP_PANEL_NEC_NL8048HL11">
						<label>NEC NL8048HL11 Panel</label>
						<help>This NEC NL8048HL11 panel is TFT LCD used in the
Zoom2/3/3630 sdp boards.</help>
					</entry>
				</container>
				<entry name="DRM_TILCDC">
					<label>DRM Support for TI LCDC Display Controller</label>
					<help>Choose this option if you have an TI SoC with LCDC display
controller, for example AM33xx in beagle-bone, DA8xx, or
OMAP-L1xx.  This driver replaces the FB_DA8XX fbdev driver.</help>
				</entry>
				<entry name="DRM_TILCDC_SLAVE_COMPAT">
					<label>Support device tree blobs using TI LCDC Slave binding</label>
					<help>Choose this option if you need a kernel that is compatible
with device tree blobs using the obsolete &quot;ti,tilcdc,slave&quot;
binding. If you find &quot;ti,tilcdc,slave&quot;-string from your DTB,
you probably need this. Otherwise you do not.
</help>
				</entry>
				<entry name="DRM_QXL">
					<label>QXL virtual GPU</label>
					<help>QXL virtual GPU for Spice virtualization desktop integration.
Do not enable this driver unless your distro ships a corresponding
X.org QXL driver that can handle kernel modesetting.
</help>
				</entry>
				<entry name="DRM_BOCHS">
					<label>DRM Support for bochs dispi vga interface (qemu stdvga)</label>
					<help>Choose this option for qemu.
If M is selected the module will be called bochs-drm.
</help>
				</entry>
				<entry name="DRM_VIRTIO_GPU">
					<label>Virtio GPU driver</label>
					<help>This is the virtual GPU driver for virtio.  It can be used with
QEMU based VMMs (like KVM or Xen).

If unsure say M.
</help>
				</entry>
				<entry name="DRM_MSM">
					<label>MSM DRM</label>
					<help>DRM/KMS driver for MSM/snapdragon.</help>
				</entry>
				<entry name="DRM_MSM_REGISTER_LOGGING">
					<label>MSM DRM register logging</label>
					<help>Compile in support for logging register reads/writes in a format
that can be parsed by envytools demsm tool.  If enabled, register
logging can be switched on via msm.reglog=y module param.</help>
				</entry>
				<entry name="DRM_MSM_HDMI_HDCP">
					<label>Enable HDMI HDCP support in MSM DRM driver</label>
					<help>Choose this option to enable HDCP state machine</help>
				</entry>
				<entry name="DRM_MSM_DSI">
					<label>Enable DSI support in MSM DRM driver</label>
					<help>Choose this option if you have a need for MIPI DSI connector
support.</help>
				</entry>
				<entry name="DRM_MSM_DSI_PLL">
					<label>Enable DSI PLL driver in MSM DRM</label>
					<help>Choose this option to enable DSI PLL driver which provides DSI
source clocks under common clock framework.</help>
				</entry>
				<entry name="DRM_MSM_DSI_28NM_PHY">
					<label>Enable DSI 28nm PHY driver in MSM DRM</label>
					<help>Choose this option if the 28nm DSI PHY is used on the platform.</help>
				</entry>
				<entry name="DRM_MSM_DSI_20NM_PHY">
					<label>Enable DSI 20nm PHY driver in MSM DRM</label>
					<help>Choose this option if the 20nm DSI PHY is used on the platform.</help>
				</entry>
				<entry name="DRM_MSM_DSI_28NM_8960_PHY">
					<label>Enable DSI 28nm 8960 PHY driver in MSM DRM</label>
					<help>Choose this option if the 28nm DSI PHY 8960 variant is used on the
platform.
</help>
				</entry>
				<entry name="DRM_FSL_DCU">
					<label>DRM Support for Freescale DCU</label>
					<help>Choose this option if you have an Freescale DCU chipset.
If M is selected the module will be called fsl-dcu-drm.
</help>
				</entry>
				<entry name="DRM_TEGRA">
					<label>NVIDIA Tegra DRM</label>
					<help>Choose this option if you have an NVIDIA Tegra SoC.

To compile this driver as a module, choose M here: the module
will be called tegra-drm.</help>
				</entry>
				<entry name="DRM_TEGRA_DEBUG">
					<label>NVIDIA Tegra DRM debug support</label>
					<help>Say yes here to enable debugging support.</help>
				</entry>
				<entry name="DRM_TEGRA_STAGING">
					<label>Enable HOST1X interface</label>
					<help>Say yes if HOST1X should be available for userspace DRM users.

If unsure, choose N.</help>
				</entry>
				<entry name="DRM_PANEL">
					<help>Panel registration and lookup framework.</help>
				</entry>
				<container name="Display_Panels">
					<label>Display Panels</label>
					<entry name="DRM_PANEL_SIMPLE">
						<label>support for simple panels</label>
						<help>DRM panel driver for dumb panels that need at most a regulator and
a GPIO to be powered up. Optionally a backlight can be attached so
that it can be automatically turned off when the panel goes into a
low power state.</help>
					</entry>
					<entry name="DRM_PANEL_SAMSUNG_LD9040">
						<label>Samsung LD9040 RGB/SPI panel</label>
					</entry>
					<entry name="DRM_PANEL_LG_LG4573">
						<label>LG4573 RGB/SPI panel</label>
						<help>Say Y here if you want to enable support for LG4573 RGB panel.
To compile this driver as a module, choose M here.</help>
					</entry>
					<entry name="DRM_PANEL_PANASONIC_VVX10F034N00">
						<label>Panasonic VVX10F034N00 1920x1200 video mode panel</label>
						<help>Say Y here if you want to enable support for Panasonic VVX10F034N00
WUXGA (1920x1200) Novatek NT1397-based DSI panel as found in some
Xperia Z2 tablets</help>
					</entry>
					<entry name="DRM_PANEL_SAMSUNG_S6E8AA0">
						<label>Samsung S6E8AA0 DSI video mode panel</label>
					</entry>
					<entry name="DRM_PANEL_SHARP_LQ101R1SX01">
						<label>Sharp LQ101R1SX01 panel</label>
						<help>Say Y here if you want to enable support for Sharp LQ101R1SX01
TFT-LCD modules. The panel has a 2560x1600 resolution and uses
24 bit RGB per pixel. It provides a dual MIPI DSI interface to
the host and has a built-in LED backlight.

To compile this driver as a module, choose M here: the module
will be called panel-sharp-lq101r1sx01.</help>
					</entry>
					<entry name="DRM_PANEL_SHARP_LS043T1LE01">
						<label>Sharp LS043T1LE01 qHD video mode panel</label>
						<help>Say Y here if you want to enable support for Sharp LS043T1LE01 qHD
(540x960) DSI panel as found on the Qualcomm APQ8074 Dragonboard</help>
					</entry>
				</container>
				<entry name="DRM_BRIDGE">
					<help>Bridge registration and lookup framework.</help>
				</entry>
				<container name="Display_Interface_Bridges">
					<label>Display Interface Bridges</label>
					<entry name="DRM_ANALOGIX_ANX78XX">
						<label>Analogix ANX78XX bridge</label>
						<help>ANX78XX is an ultra-low Full-HD SlimPort transmitter
designed for portable devices. The ANX78XX transforms
the HDMI output of an application processor to MyDP
or DisplayPort.</help>
					</entry>
					<entry name="DRM_DW_HDMI"/>
					<entry name="DRM_DW_HDMI_AHB_AUDIO">
						<label>Synopsis Designware AHB Audio interface</label>
						<help>Support the AHB Audio interface which is part of the Synopsis
Designware HDMI block.  This is used in conjunction with
the i.MX6 HDMI driver.</help>
					</entry>
					<entry name="DRM_NXP_PTN3460">
						<label>NXP PTN3460 DP/LVDS bridge</label>
						<help>NXP PTN3460 eDP-LVDS bridge chip driver.</help>
					</entry>
					<entry name="DRM_PARADE_PS8622">
						<label>Parade eDP/LVDS bridge</label>
						<help>Parade eDP-LVDS bridge chip driver.</help>
					</entry>
					<entry name="DRM_SII902X">
						<label>Silicon Image sii902x RGB/HDMI bridge</label>
						<help>Silicon Image sii902x bridge chip driver.</help>
					</entry>
					<entry name="DRM_TOSHIBA_TC358767">
						<label>Toshiba TC358767 eDP bridge</label>
						<help>Toshiba TC358767 eDP bridge chip driver.</help>
					</entry>
					<entry name="DRM_ANALOGIX_DP"/>
					<entry name="DRM_I2C_ADV7511">
						<label>AV7511 encoder</label>
						<help>Support for the Analog Device ADV7511(W) and ADV7513 HDMI encoders.</help>
					</entry>
					<entry name="DRM_I2C_ADV7533">
						<label>ADV7533 encoder</label>
						<help>Support for the Analog Devices ADV7533 DSI to HDMI encoder.
</help>
					</entry>
				</container>
				<entry name="DRM_STI">
					<label>DRM Support for STMicroelectronics SoC stiH41x Series</label>
					<help>Choose this option to enable DRM on STM stiH41x chipset
</help>
				</entry>
				<entry name="HSA_AMD">
					<label>HSA kernel driver for AMD GPU devices</label>
					<help>Enable this if you want to use HSA features on AMD GPU devices.
</help>
				</entry>
				<entry name="DRM_IMX">
					<label>DRM Support for Freescale i.MX</label>
					<help>enable i.MX graphics support</help>
				</entry>
				<entry name="DRM_IMX_PARALLEL_DISPLAY">
					<label>Support for parallel displays</label>
				</entry>
				<entry name="DRM_IMX_TVE">
					<label>Support for TV and VGA displays</label>
					<help>Choose this to enable the internal Television Encoder (TVe)
found on i.MX53 processors.</help>
				</entry>
				<entry name="DRM_IMX_LDB">
					<label>Support for LVDS displays</label>
					<help>Choose this to enable the internal LVDS Display Bridge (LDB)
found on i.MX53 and i.MX6 processors.</help>
				</entry>
				<entry name="DRM_IMX_IPUV3"/>
				<entry name="DRM_IMX_HDMI">
					<label>Freescale i.MX DRM HDMI</label>
					<help>Choose this if you want to use HDMI on i.MX6.
</help>
				</entry>
				<entry name="DRM_VC4">
					<label>Broadcom VC4 Graphics</label>
					<help>Choose this option if you have a system that has a Broadcom
VC4 GPU, such as the Raspberry Pi or other BCM2708/BCM2835.

This driver requires that &quot;avoid_warnings=2&quot; be present in
the config.txt for the firmware, to keep it from smashing
our display setup.
</help>
				</entry>
				<entry name="DRM_ETNAVIV">
					<label>ETNAVIV (DRM support for Vivante GPU IP cores)</label>
					<help>DRM driver for Vivante GPUs.</help>
				</entry>
				<entry name="DRM_ETNAVIV_REGISTER_LOGGING">
					<label>enable ETNAVIV register logging</label>
					<help>Compile in support for logging register reads/writes in a format
that can be parsed by envytools demsm tool.  If enabled, register
logging can be switched on via etnaviv.reglog=y module param.
</help>
				</entry>
				<entry name="DRM_ARCPGU">
					<label>ARC PGU</label>
					<help>Choose this option if you have an ARC PGU controller.

If M is selected the module will be called arcpgu.
</help>
				</entry>
				<entry name="DRM_HISI_KIRIN">
					<label>DRM Support for Hisilicon Kirin series SoCs Platform</label>
					<help>Choose this option if you have a hisilicon Kirin chipsets(hi6220).
If M is selected the module will be called kirin-drm.</help>
				</entry>
				<entry name="HISI_KIRIN_DW_DSI">
					<label>HiSilicon Kirin specific extensions for Synopsys DW MIPI DSI</label>
					<help>This selects support for HiSilicon Kirin SoC specific extensions for
the Synopsys DesignWare DSI driver. If you want to enable MIPI DSI on
hi6220 based SoC, you should selet this option.
</help>
				</entry>
				<entry name="DRM_MEDIATEK">
					<label>DRM Support for Mediatek SoCs</label>
					<help>Choose this option if you have a Mediatek SoCs.
The module will be called mediatek-drm
This driver provides kernel mode setting and
buffer management to userspace.</help>
				</entry>
				<entry name="DRM_MEDIATEK_HDMI">
					<label>DRM HDMI Support for Mediatek SoCs</label>
					<help>DRM/KMS HDMI driver for Mediatek SoCs
</help>
				</entry>
				<container name="Frame_buffer_Devices">
					<label>Frame buffer Devices</label>
					<entry name="FB">
						<label>Support for frame buffer devices</label>
						<help>The frame buffer device provides an abstraction for the graphics
hardware. It represents the frame buffer of some video hardware and
allows application software to access the graphics hardware through
a well-defined interface, so the software doesn't need to know
anything about the low-level (hardware register) stuff.

Frame buffer devices work identically across the different
architectures supported by Linux and make the implementation of
application programs easier and more portable; at this point, an X
server exists which uses the frame buffer device exclusively.
On several non-X86 architectures, the frame buffer device is the
only way to use the graphics hardware.

The device is accessed through special device nodes, usually located
in the /dev directory, i.e. /dev/fb*.

You need an utility program called fbset to make full use of frame
buffer devices. Please read &lt;file:Documentation/fb/framebuffer.txt&gt;
and the Framebuffer-HOWTO at
&lt;http://www.munted.org.uk/programming/Framebuffer-HOWTO-1.3.html&gt; for more
information.

Say Y here and to the driver for your graphics board below if you
are compiling a kernel for a non-x86 architecture.

If you are compiling for the x86 architecture, you can say Y if you
want to play with it, but it is not essential. Please note that
running graphical applications that directly touch the hardware
(e.g. an accelerated X server) and that are not frame buffer
device-aware may cause unexpected results. If unsure, say N.</help>
					</entry>
					<entry name="FIRMWARE_EDID">
						<label>Enable firmware EDID</label>
						<help>This enables access to the EDID transferred from the firmware.
On the i386, this is from the Video BIOS. Enable this if DDC/I2C
transfers do not work for your driver and if you are using
nvidiafb, i810fb or savagefb.

In general, choosing Y for this option is safe.  If you
experience extremely long delays while booting before you get
something on your display, try setting this to N.  Matrox cards in
combination with certain motherboards and monitors are known to
suffer from this problem.</help>
					</entry>
					<entry name="FB_CMDLINE"/>
					<entry name="FB_NOTIFY"/>
					<entry name="FB_DDC"/>
					<entry name="FB_BOOT_VESA_SUPPORT">
						<help>If true, at least one selected framebuffer driver can take advantage
of VESA video modes set at an early boot stage via the vga= parameter.</help>
					</entry>
					<entry name="FB_CFB_FILLRECT">
						<help>Include the cfb_fillrect function for generic software rectangle
filling. This is used by drivers that don't provide their own
(accelerated) version.</help>
					</entry>
					<entry name="FB_CFB_COPYAREA">
						<help>Include the cfb_copyarea function for generic software area copying.
This is used by drivers that don't provide their own (accelerated)
version.</help>
					</entry>
					<entry name="FB_CFB_IMAGEBLIT">
						<help>Include the cfb_imageblit function for generic software image
blitting. This is used by drivers that don't provide their own
(accelerated) version.</help>
					</entry>
					<entry name="FB_CFB_REV_PIXELS_IN_BYTE">
						<help>Allow generic frame-buffer functions to work on displays with 1, 2
and 4 bits per pixel depths which has opposite order of pixels in
byte order to bytes in long order.</help>
					</entry>
					<entry name="FB_SYS_FILLRECT">
						<help>Include the sys_fillrect function for generic software rectangle
filling. This is used by drivers that don't provide their own
(accelerated) version and the framebuffer is in system RAM.</help>
					</entry>
					<entry name="FB_SYS_COPYAREA">
						<help>Include the sys_copyarea function for generic software area copying.
This is used by drivers that don't provide their own (accelerated)
version and the framebuffer is in system RAM.</help>
					</entry>
					<entry name="FB_SYS_IMAGEBLIT">
						<help>Include the sys_imageblit function for generic software image
blitting. This is used by drivers that don't provide their own
(accelerated) version and the framebuffer is in system RAM.</help>
					</entry>
					<entry name="FB_FOREIGN_ENDIAN">
						<label>Framebuffer foreign endianness support</label>
						<help>This menu will let you enable support for the framebuffers with
non-native endianness (e.g. Little-Endian framebuffer on a
Big-Endian machine). Most probably you don't have such hardware,
so it's safe to say &quot;n&quot; here.</help>
					</entry>
					<entry name="FB_BOTH_ENDIAN">
						<label>Support for Big- and Little-Endian framebuffers</label>
					</entry>
					<entry name="FB_BIG_ENDIAN">
						<label>Support for Big-Endian framebuffers only</label>
					</entry>
					<entry name="FB_LITTLE_ENDIAN">
						<label>Support for Little-Endian framebuffers only</label>
					</entry>
					<entry name="FB_SYS_FOPS"/>
					<entry name="FB_DEFERRED_IO"/>
					<entry name="FB_HECUBA"/>
					<entry name="FB_SVGALIB">
						<help>Common utility functions useful to fbdev drivers of VGA-based
cards.</help>
					</entry>
					<entry name="FB_MACMODES"/>
					<entry name="FB_BACKLIGHT"/>
					<entry name="FB_MODE_HELPERS">
						<label>Enable Video Mode Handling Helpers</label>
						<help>This enables functions for handling video modes using the
Generalized Timing Formula and the EDID parser. A few drivers rely
on this feature such as the radeonfb, rivafb, and the i810fb. If
your driver does not take advantage of this feature, choosing Y will
just increase the kernel size by about 5K.</help>
					</entry>
					<entry name="FB_TILEBLITTING">
						<label>Enable Tile Blitting Support</label>
						<help>This enables tile blitting.  Tile blitting is a drawing technique
where the screen is divided into rectangular sections (tiles), whereas
the standard blitting divides the screen into pixels. Because the
default drawing element is a tile, drawing functions will be passed
parameters in terms of number of tiles instead of number of pixels.
For example, to draw a single character, instead of using bitmaps,
an index to an array of bitmaps will be used.  To clear or move a
rectangular section of a screen, the rectangle will be described in
terms of number of tiles in the x- and y-axis.

This is particularly important to one driver, matroxfb.  If
unsure, say N.</help>
					</entry>
					<entry name="FB_GRVGA">
						<label>Aeroflex Gaisler framebuffer support</label>
						<help>This enables support for the SVGACTRL framebuffer in the GRLIB IP library from Aeroflex Gaisler.</help>
					</entry>
					<entry name="FB_CIRRUS">
						<label>Cirrus Logic support</label>
						<help>This enables support for Cirrus Logic GD542x/543x based boards on
Amiga: SD64, Piccolo, Picasso II/II+, Picasso IV, or EGS Spectrum.

If you have a PCI-based system, this enables support for these
chips: GD-543x, GD-544x, GD-5480.

Please read the file &lt;file:Documentation/fb/cirrusfb.txt&gt;.

Say N unless you have such a graphics board or plan to get one
before you next recompile the kernel.</help>
					</entry>
					<entry name="FB_PM2">
						<label>Permedia2 support</label>
						<help>This is the frame buffer device driver for cards based on
the 3D Labs Permedia, Permedia 2 and Permedia 2V chips.
The driver was tested on the following cards:
Diamond FireGL 1000 PRO AGP
ELSA Gloria Synergy PCI
Appian Jeronimo PRO (both heads) PCI
3DLabs Oxygen ACX aka EONtronics Picasso P2 PCI
Techsource Raptor GFX-8P (aka Sun PGX-32) on SPARC
ASK Graphic Blaster Exxtreme AGP

To compile this driver as a module, choose M here: the
module will be called pm2fb.</help>
					</entry>
					<entry name="FB_PM2_FIFO_DISCONNECT">
						<label>enable FIFO disconnect feature</label>
						<help>Support the Permedia2 FIFO disconnect feature.</help>
					</entry>
					<entry name="FB_ARMCLCD">
						<label>ARM PrimeCell PL110 support</label>
						<help>This framebuffer device driver is for the ARM PrimeCell PL110
Colour LCD controller.  ARM PrimeCells provide the building
blocks for System on a Chip devices.

If you want to compile this as a module (=code which can be
inserted into and removed from the running kernel), say M
here and read &lt;file:Documentation/kbuild/modules.txt&gt;.  The module
will be called amba-clcd.</help>
					</entry>
					<entry name="PLAT_VERSATILE_CLCD"/>
					<entry name="FB_ACORN">
						<label>Acorn VIDC support</label>
						<help>This is the frame buffer device driver for the Acorn VIDC graphics
hardware found in Acorn RISC PCs and other ARM-based machines.  If
unsure, say N.</help>
					</entry>
					<entry name="FB_CLPS711X_OLD"/>
					<entry name="FB_CLPS711X">
						<label>CLPS711X LCD support</label>
						<help>Say Y to enable the Framebuffer driver for the Cirrus Logic
CLPS711X CPUs.</help>
					</entry>
					<entry name="FB_SA1100">
						<label>SA-1100 LCD support</label>
						<help>This is a framebuffer device for the SA-1100 LCD Controller.
See &lt;http://www.linux-fbdev.org/&gt; for information on framebuffer
devices.

If you plan to use the LCD display with your SA-1100 system, say
Y here.</help>
					</entry>
					<entry name="FB_IMX">
						<label>Freescale i.MX1/21/25/27 LCD support</label>
					</entry>
					<entry name="FB_CYBER2000">
						<label>CyberPro 2000/2010/5000 support</label>
						<help>This enables support for the Integraphics CyberPro 20x0 and 5000
VGA chips used in the Rebel.com Netwinder and other machines.
Say Y if you have a NetWinder or a graphics card containing this
device, otherwise say N.</help>
					</entry>
					<entry name="FB_CYBER2000_DDC">
						<label>DDC for CyberPro support</label>
						<help>Say Y here if you want DDC support for your CyberPro graphics
card. This is only I2C bus support, driver does not use EDID.</help>
					</entry>
					<entry name="FB_CYBER2000_I2C">
						<label>CyberPro 2000/2010/5000 I2C support</label>
						<help>Enable support for the I2C video decoder interface on the
Integraphics CyberPro 20x0 and 5000 VGA chips.  This is used
on the Netwinder machines for the SAA7111 video capture.</help>
					</entry>
					<entry name="FB_APOLLO"/>
					<entry name="FB_Q40"/>
					<entry name="FB_AMIGA">
						<label>Amiga native chipset support</label>
						<help>This is the frame buffer device driver for the builtin graphics
chipset found in Amigas.

To compile this driver as a module, choose M here: the
module will be called amifb.</help>
					</entry>
					<entry name="FB_AMIGA_OCS">
						<label>Amiga OCS chipset support</label>
						<help>This enables support for the original Agnus and Denise video chips,
found in the Amiga 1000 and most A500's and A2000's. If you intend
to run Linux on any of these systems, say Y; otherwise say N.</help>
					</entry>
					<entry name="FB_AMIGA_ECS">
						<label>Amiga ECS chipset support</label>
						<help>This enables support for the Enhanced Chip Set, found in later
A500's, later A2000's, the A600, the A3000, the A3000T and CDTV. If
you intend to run Linux on any of these systems, say Y; otherwise
say N.</help>
					</entry>
					<entry name="FB_AMIGA_AGA">
						<label>Amiga AGA chipset support</label>
						<help>This enables support for the Advanced Graphics Architecture (also
known as the AGA or AA) Chip Set, found in the A1200, A4000, A4000T
and CD32. If you intend to run Linux on any of these systems, say Y;
otherwise say N.</help>
					</entry>
					<entry name="FB_FM2">
						<label>Amiga FrameMaster II/Rainbow II support</label>
						<help>This is the frame buffer device driver for the Amiga FrameMaster
card from BSC (exhibited 1992 but not shipped as a CBM product).</help>
					</entry>
					<entry name="FB_ARC">
						<label>Arc Monochrome LCD board support</label>
						<help>This enables support for the Arc Monochrome LCD board. The board
is based on the KS-108 lcd controller and is typically a matrix
of 2*n chips. This driver was tested with a 128x64 panel. This
driver supports it for use with x86 SBCs through a 16 bit GPIO
interface (8 bit data, 8 bit control). If you anticipate using
this driver, say Y or M; otherwise say N. You must specify the
GPIO IO address to be used for setting control and data.</help>
					</entry>
					<entry name="FB_ATARI">
						<label>Atari native chipset support</label>
						<help>This is the frame buffer device driver for the builtin graphics
chipset found in Ataris.</help>
					</entry>
					<entry name="FB_OF">
						<label>Open Firmware frame buffer device support</label>
						<help>Say Y if you want support with Open Firmware for your graphics
board.</help>
					</entry>
					<entry name="FB_CONTROL">
						<label>Apple \&quot;control\&quot; display support</label>
						<help>This driver supports a frame buffer for the graphics adapter in the
Power Macintosh 7300 and others.</help>
					</entry>
					<entry name="FB_PLATINUM">
						<label>Apple \&quot;platinum\&quot; display support</label>
						<help>This driver supports a frame buffer for the &quot;platinum&quot; graphics
adapter in some Power Macintoshes.</help>
					</entry>
					<entry name="FB_VALKYRIE">
						<label>Apple \&quot;valkyrie\&quot; display support</label>
						<help>This driver supports a frame buffer for the &quot;valkyrie&quot; graphics
adapter in some Power Macintoshes.</help>
					</entry>
					<entry name="FB_CT65550">
						<label>Chips 65550 display support</label>
						<help>This is the frame buffer device driver for the Chips &amp; Technologies
65550 graphics chip in PowerBooks.</help>
					</entry>
					<entry name="FB_ASILIANT">
						<label>Asiliant (Chips) 69000 display support</label>
						<help>This is the frame buffer device driver for the Asiliant 69030 chipset</help>
					</entry>
					<entry name="FB_IMSTT">
						<label>IMS Twin Turbo display support</label>
						<help>The IMS Twin Turbo is a PCI-based frame buffer card bundled with
many Macintosh and compatible computers.</help>
					</entry>
					<entry name="FB_VGA16">
						<label>VGA 16-color graphics support</label>
						<help>This is the frame buffer device driver for VGA 16 color graphic
cards. Say Y if you have such a card.

To compile this driver as a module, choose M here: the
module will be called vga16fb.</help>
					</entry>
					<entry name="FB_BF54X_LQ043">
						<label>SHARP LQ043 TFT LCD (BF548 EZKIT)</label>
						<help>This is the framebuffer device driver for a SHARP LQ043T1DG01 TFT LCD</help>
					</entry>
					<entry name="FB_BFIN_T350MCQB">
						<label>Varitronix COG-T350MCQB TFT LCD display (BF527 EZKIT)</label>
						<help>This is the framebuffer device driver for a Varitronix VL-PS-COG-T350MCQB-01 display TFT LCD
This display is a QVGA 320x240 24-bit RGB display interfaced by an 8-bit wide PPI
It uses PPI[0..7] PPI_FS1, PPI_FS2 and PPI_CLK.</help>
					</entry>
					<entry name="FB_BFIN_LQ035Q1">
						<label>SHARP LQ035Q1DH02 TFT LCD</label>
						<help>This is the framebuffer device driver for a SHARP LQ035Q1DH02 TFT display found on
the Blackfin Landscape LCD EZ-Extender Card.
This display is a QVGA 320x240 18-bit RGB display interfaced by an 16-bit wide PPI
It uses PPI[0..15] PPI_FS1, PPI_FS2 and PPI_CLK.

To compile this driver as a module, choose M here: the
module will be called bfin-lq035q1-fb.</help>
					</entry>
					<entry name="FB_BF537_LQ035">
						<label>SHARP LQ035 TFT LCD (BF537 STAMP)</label>
						<help>This is the framebuffer device for a SHARP LQ035Q7DB03 TFT LCD
attached to a BF537.

To compile this driver as a module, choose M here: the
module will be called bf537-lq035.</help>
					</entry>
					<entry name="FB_BFIN_7393">
						<label>Blackfin ADV7393 Video encoder</label>
						<help>This is the framebuffer device for a ADV7393 video encoder
attached to a Blackfin on the PPI port.
If your Blackfin board has a ADV7393 select Y.

To compile this driver as a module, choose M here: the
module will be called bfin_adv7393fb.</help>
					</entry>
					<entry name="NTSC">
						<label>'NTSC 720x480'</label>
					</entry>
					<entry name="PAL">
						<label>'PAL 720x576'</label>
					</entry>
					<entry name="NTSC_640x480">
						<label>'NTSC 640x480 (Experimental)'</label>
					</entry>
					<entry name="PAL_640x480">
						<label>'PAL 640x480 (Experimental)'</label>
					</entry>
					<entry name="NTSC_YCBCR">
						<label>'NTSC 720x480 YCbCR input'</label>
					</entry>
					<entry name="PAL_YCBCR">
						<label>'PAL 720x576 YCbCR input'</label>
					</entry>
					<entry name="ADV7393_1XMEM">
						<label>'Single'</label>
					</entry>
					<entry name="ADV7393_2XMEM">
						<label>'Double'</label>
					</entry>
					<entry name="FB_STI">
						<label>HP STI frame buffer device support</label>
						<help>STI refers to the HP &quot;Standard Text Interface&quot; which is a set of
BIOS routines contained in a ROM chip in HP PA-RISC based machines.
Enabling this option will implement the linux framebuffer device
using calls to the STI BIOS routines for initialisation.

If you enable this option, you will get a planar framebuffer device
/dev/fb which will work on the most common HP graphic cards of the
NGLE family, including the artist chips (in the 7xx and Bxxx series),
HCRX, HCRX24, CRX, CRX24 and VisEG series.

It is safe to enable this option, so you should probably say &quot;Y&quot;.</help>
					</entry>
					<entry name="FB_MAC">
						<label>Generic Macintosh display support</label>
					</entry>
					<entry name="FB_HP300"/>
					<entry name="FB_TGA">
						<label>TGA/SFB+ framebuffer support</label>
						<help>This is the frame buffer device driver for generic TGA and SFB+
graphic cards.  These include DEC ZLXp-E1, -E2 and -E3 PCI cards,
also known as PBXGA-A, -B and -C, and DEC ZLX-E1, -E2 and -E3
TURBOchannel cards, also known as PMAGD-A, -B and -C.

Due to hardware limitations ZLX-E2 and E3 cards are not supported
for DECstation 5000/200 systems.  Additionally due to firmware
limitations these cards may cause troubles with booting DECstation
5000/240 and /260 systems, but are fully supported under Linux if
you manage to get it going. ;-)

Say Y if you have one of those.</help>
					</entry>
					<entry name="FB_UVESA">
						<label>Userspace VESA VGA graphics support</label>
						<help>This is the frame buffer driver for generic VBE 2.0 compliant
graphic cards. It can also take advantage of VBE 3.0 features,
such as refresh rate adjustment.

This driver generally provides more features than vesafb but
requires a userspace helper application called 'v86d'. See
&lt;file:Documentation/fb/uvesafb.txt&gt; for more information.

If unsure, say N.</help>
					</entry>
					<entry name="FB_VESA">
						<label>VESA VGA graphics support</label>
						<help>This is the frame buffer device driver for generic VESA 2.0
compliant graphic cards. The older VESA 1.2 cards are not supported.
You will get a boot time penguin logo at no additional cost. Please
read &lt;file:Documentation/fb/vesafb.txt&gt;. If unsure, say Y.</help>
					</entry>
					<entry name="FB_EFI">
						<label>EFI-based Framebuffer Support</label>
						<help>This is the EFI frame buffer device driver. If the firmware on
your platform is EFI 1.10 or UEFI 2.0, select Y to add support for
using the EFI framebuffer as your console.</help>
					</entry>
					<entry name="FB_N411">
						<label>N411 Apollo/Hecuba devkit support</label>
						<help>This enables support for the Apollo display controller in its
Hecuba form using the n411 devkit.</help>
					</entry>
					<entry name="FB_HGA">
						<label>Hercules mono graphics support</label>
						<help>Say Y here if you have a Hercules mono graphics card.

To compile this driver as a module, choose M here: the
module will be called hgafb.

As this card technology is at least 25 years old,
most people will answer N here.</help>
					</entry>
					<entry name="FB_GBE">
						<label>SGI Graphics Backend frame buffer support</label>
						<help>This is the frame buffer device driver for SGI Graphics Backend.
This chip is used in SGI O2 and Visual Workstation 320/540.</help>
					</entry>
					<entry name="FB_GBE_MEM">
						<label>Video memory size in MB</label>
						<help>This is the amount of memory reserved for the framebuffer,
which can be any value between 1MB and 8MB.</help>
					</entry>
					<entry name="FB_SBUS">
						<label>SBUS and UPA framebuffers</label>
						<help>Say Y if you want support for SBUS or UPA based frame buffer device.</help>
					</entry>
					<entry name="FB_BW2">
						<label>BWtwo support</label>
						<help>This is the frame buffer device driver for the BWtwo frame buffer.</help>
					</entry>
					<entry name="FB_CG3">
						<label>CGthree support</label>
						<help>This is the frame buffer device driver for the CGthree frame buffer.</help>
					</entry>
					<entry name="FB_CG6">
						<label>CGsix (GX,TurboGX) support</label>
						<help>This is the frame buffer device driver for the CGsix (GX, TurboGX)
frame buffer.</help>
					</entry>
					<entry name="FB_FFB">
						<label>Creator/Creator3D/Elite3D support</label>
						<help>This is the frame buffer device driver for the Creator, Creator3D,
and Elite3D graphics boards.</help>
					</entry>
					<entry name="FB_TCX">
						<label>TCX (SS4/SS5 only) support</label>
						<help>This is the frame buffer device driver for the TCX 24/8bit frame
buffer.</help>
					</entry>
					<entry name="FB_CG14">
						<label>CGfourteen (SX) support</label>
						<help>This is the frame buffer device driver for the CGfourteen frame
buffer on Desktop SPARCsystems with the SX graphics option.</help>
					</entry>
					<entry name="FB_P9100">
						<label>P9100 (Sparcbook 3 only) support</label>
						<help>This is the frame buffer device driver for the P9100 card
supported on Sparcbook 3 machines.</help>
					</entry>
					<entry name="FB_LEO">
						<label>Leo (ZX) support</label>
						<help>This is the frame buffer device driver for the SBUS-based Sun ZX
(leo) frame buffer cards.</help>
					</entry>
					<entry name="FB_IGA">
						<label>IGA 168x display support</label>
						<help>This is the framebuffer device for the INTERGRAPHICS 1680 and
successor frame buffer cards.</help>
					</entry>
					<entry name="FB_XVR500">
						<label>Sun XVR-500 3DLABS Wildcat support</label>
						<help>This is the framebuffer device for the Sun XVR-500 and similar
graphics cards based upon the 3DLABS Wildcat chipset.  The driver
only works on sparc64 systems where the system firmware has
mostly initialized the card already.  It is treated as a
completely dumb framebuffer device.</help>
					</entry>
					<entry name="FB_XVR2500">
						<label>Sun XVR-2500 3DLABS Wildcat support</label>
						<help>This is the framebuffer device for the Sun XVR-2500 and similar
graphics cards based upon the 3DLABS Wildcat chipset.  The driver
only works on sparc64 systems where the system firmware has
mostly initialized the card already.  It is treated as a
completely dumb framebuffer device.</help>
					</entry>
					<entry name="FB_XVR1000">
						<label>Sun XVR-1000 support</label>
						<help>This is the framebuffer device for the Sun XVR-1000 and similar
graphics cards.  The driver only works on sparc64 systems where
the system firmware has mostly initialized the card already.  It
is treated as a completely dumb framebuffer device.</help>
					</entry>
					<entry name="FB_PVR2">
						<label>NEC PowerVR 2 display support</label>
						<help>Say Y here if you have a PowerVR 2 card in your box.  If you plan to
run linux on your Dreamcast, you will have to say Y here.
This driver may or may not work on other PowerVR 2 cards, but is
totally untested.  Use at your own risk.  If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called pvr2fb.

You can pass several parameters to the driver at boot time or at
module load time.  The parameters look like &quot;video=pvr2:XXX&quot;, where
the meaning of XXX can be found at the end of the main source file
(&lt;file:drivers/video/pvr2fb.c&gt;). Please see the file
&lt;file:Documentation/fb/pvr2fb.txt&gt;.</help>
					</entry>
					<entry name="FB_OPENCORES">
						<label>OpenCores VGA/LCD core 2.0 framebuffer support</label>
						<help>This enables support for the OpenCores VGA/LCD core.

The OpenCores VGA/LCD core is typically used together with
softcore CPUs (e.g. OpenRISC or Microblaze) or hard processor
systems (e.g. Altera socfpga or Xilinx Zynq) on FPGAs.

The source code and specification for the core is available at
&lt;http://opencores.org/project,vga_lcd&gt;</help>
					</entry>
					<entry name="FB_S1D13XXX">
						<label>Epson S1D13XXX framebuffer support</label>
						<help>Support for S1D13XXX framebuffer device family (currently only
working with S1D13806). Product specs at
&lt;http://vdc.epson.com/&gt;</help>
					</entry>
					<entry name="FB_ATMEL">
						<label>AT91/AT32 LCD Controller support</label>
						<help>This enables support for the AT91/AT32 LCD Controller.</help>
					</entry>
					<entry name="FB_NVIDIA">
						<label>nVidia Framebuffer Support</label>
						<help>This driver supports graphics boards with the nVidia chips, TNT
and newer. For very old chipsets, such as the RIVA128, then use
the rivafb.
Say Y if you have such a graphics board.

To compile this driver as a module, choose M here: the
module will be called nvidiafb.</help>
					</entry>
					<entry name="FB_NVIDIA_I2C">
						<label>Enable DDC Support</label>
						<help>This enables I2C support for nVidia Chipsets.  This is used
only for getting EDID information from the attached display
allowing for robust video mode handling and switching.

Because fbdev-2.6 requires that drivers must be able to
independently validate video mode parameters, you should say Y
here.</help>
					</entry>
					<entry name="FB_NVIDIA_DEBUG">
						<label>Lots of debug output</label>
						<help>Say Y here if you want the nVidia driver to output all sorts
of debugging information to provide to the maintainer when
something goes wrong.</help>
					</entry>
					<entry name="FB_NVIDIA_BACKLIGHT">
						<label>Support for backlight control</label>
						<help>Say Y here if you want to control the backlight of your display.</help>
					</entry>
					<entry name="FB_RIVA">
						<label>nVidia Riva support</label>
						<help>This driver supports graphics boards with the nVidia Riva/Geforce
chips.
Say Y if you have such a graphics board.

To compile this driver as a module, choose M here: the
module will be called rivafb.</help>
					</entry>
					<entry name="FB_RIVA_I2C">
						<label>Enable DDC Support</label>
						<help>This enables I2C support for nVidia Chipsets.  This is used
only for getting EDID information from the attached display
allowing for robust video mode handling and switching.

Because fbdev-2.6 requires that drivers must be able to
independently validate video mode parameters, you should say Y
here.</help>
					</entry>
					<entry name="FB_RIVA_DEBUG">
						<label>Lots of debug output</label>
						<help>Say Y here if you want the Riva driver to output all sorts
of debugging information to provide to the maintainer when
something goes wrong.</help>
					</entry>
					<entry name="FB_RIVA_BACKLIGHT">
						<label>Support for backlight control</label>
						<help>Say Y here if you want to control the backlight of your display.</help>
					</entry>
					<entry name="FB_I740">
						<label>Intel740 support</label>
						<help>This driver supports graphics cards based on Intel740 chip.</help>
					</entry>
					<entry name="FB_I810">
						<label>Intel 810/815 support</label>
						<help>This driver supports the on-board graphics built in to the Intel 810
and 815 chipsets.  Say Y if you have and plan to use such a board.

To compile this driver as a module, choose M here: the
module will be called i810fb.

For more information, please read
&lt;file:Documentation/fb/intel810.txt&gt;</help>
					</entry>
					<entry name="FB_I810_GTF">
						<label>use VESA Generalized Timing Formula</label>
						<help>If you say Y, then the VESA standard, Generalized Timing Formula
or GTF, will be used to calculate the required video timing values
per video mode.  Since the GTF allows nondiscrete timings
(nondiscrete being a range of values as opposed to discrete being a
set of values), you'll be able to use any combination of horizontal
and vertical resolutions, and vertical refresh rates without having
to specify your own timing parameters.  This is especially useful
to maximize the performance of an aging display, or if you just
have a display with nonstandard dimensions. A VESA compliant
monitor is recommended, but can still work with non-compliant ones.
If you need or want this, then select this option. The timings may
not be compliant with Intel's recommended values. Use at your own
risk.

If you say N, the driver will revert to discrete video timings
using a set recommended by Intel in their documentation.

If unsure, say N.</help>
					</entry>
					<entry name="FB_I810_I2C">
						<label>Enable DDC Support</label>
						<help>
config FB_LE80578
tristate &quot;Intel LE80578 (Vermilion) support&quot;
depends on FB &amp;&amp; PCI &amp;&amp; X86
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This driver supports the LE80578 (Vermilion Range) chipset

config FB_CARILLO_RANCH
tristate &quot;Intel Carillo Ranch support&quot;
depends on FB_LE80578 &amp;&amp; FB &amp;&amp; PCI &amp;&amp; X86
help
This driver supports the LE80578 (Carillo Ranch) board

config FB_INTEL
tristate &quot;Intel 830M/845G/852GM/855GM/865G/915G/945G/945GM/965G/965GM support&quot;
depends on FB &amp;&amp; PCI &amp;&amp; X86 &amp;&amp; AGP_INTEL &amp;&amp; EXPERT
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_BOOT_VESA_SUPPORT if FB_INTEL = y
depends on !DRM_I915
help
This driver supports the on-board graphics built in to the Intel
830M/845G/852GM/855GM/865G/915G/915GM/945G/945GM/965G/965GM chipsets.
Say Y if you have and plan to use such a board.

To make FB_INTELFB=Y work you need to say AGP_INTEL=y too.

To compile this driver as a module, choose M here: the
module will be called intelfb.

For more information, please read &lt;file:Documentation/fb/intelfb.txt&gt;

config FB_INTEL_DEBUG
bool &quot;Intel driver Debug Messages&quot;
depends on FB_INTEL
---help---
Say Y here if you want the Intel driver to output all sorts
of debugging information to provide to the maintainer when
something goes wrong.

config FB_INTEL_I2C
bool &quot;DDC/I2C for Intel framebuffer support&quot;
depends on FB_INTEL
select FB_DDC
default y
help
Say Y here if you want DDC/I2C support for your on-board Intel graphics.

config FB_MATROX
tristate &quot;Matrox acceleration&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_TILEBLITTING
select FB_MACMODES if PPC_PMAC
---help---
Say Y here if you have a Matrox Millennium, Matrox Millennium II,
Matrox Mystique, Matrox Mystique 220, Matrox Productiva G100, Matrox
Mystique G200, Matrox Millennium G200, Matrox Marvel G200 video,
Matrox G400, G450 or G550 card in your box.

To compile this driver as a module, choose M here: the
module will be called matroxfb.

You can pass several parameters to the driver at boot time or at
module load time. The parameters look like &quot;video=matroxfb:XXX&quot;, and
are described in &lt;file:Documentation/fb/matroxfb.txt&gt;.

config FB_MATROX_MILLENIUM
bool &quot;Millennium I/II support&quot;
depends on FB_MATROX
help
Say Y here if you have a Matrox Millennium or Matrox Millennium II
video card. If you select &quot;Advanced lowlevel driver options&quot; below,
you should check 4 bpp packed pixel, 8 bpp packed pixel, 16 bpp
packed pixel, 24 bpp packed pixel and 32 bpp packed pixel. You can
also use font widths different from 8.

config FB_MATROX_MYSTIQUE
bool &quot;Mystique support&quot;
depends on FB_MATROX
help
Say Y here if you have a Matrox Mystique or Matrox Mystique 220
video card. If you select &quot;Advanced lowlevel driver options&quot; below,
you should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp
packed pixel and 32 bpp packed pixel. You can also use font widths
different from 8.

config FB_MATROX_G
bool &quot;G100/G200/G400/G450/G550 support&quot;
depends on FB_MATROX
---help---
Say Y here if you have a Matrox G100, G200, G400, G450 or G550 based
video card. If you select &quot;Advanced lowlevel driver options&quot;, you
should check 8 bpp packed pixel, 16 bpp packed pixel, 24 bpp packed
pixel and 32 bpp packed pixel. You can also use font widths
different from 8.

If you need support for G400 secondary head, you must say Y to
&quot;Matrox I2C support&quot; and &quot;G400 second head support&quot; right below.
G450/G550 secondary head and digital output are supported without
additional modules.

The driver starts in monitor mode. You must use the matroxset tool
(available at &lt;ftp://platan.vc.cvut.cz/pub/linux/matrox-latest/&gt;) to
swap primary and secondary head outputs, or to change output mode.
Secondary head driver always start in 640x480 resolution and you
must use fbset to change it.

Do not forget that second head supports only 16 and 32 bpp
packed pixels, so it is a good idea to compile them into the kernel
too. You can use only some font widths, as the driver uses generic
painting procedures (the secondary head does not use acceleration
engine).

G450/G550 hardware can display TV picture only from secondary CRTC,
and it performs no scaling, so picture must have 525 or 625 lines.

config FB_MATROX_I2C
tristate &quot;Matrox I2C support&quot;
depends on FB_MATROX
select FB_DDC
---help---
This drivers creates I2C buses which are needed for accessing the
DDC (I2C) bus present on all Matroxes, an I2C bus which
interconnects Matrox optional devices, like MGA-TVO on G200 and
G400, and the secondary head DDC bus, present on G400 only.

You can say Y or M here if you want to experiment with monitor
detection code. You must say Y or M here if you want to use either
second head of G400 or MGA-TVO on G200 or G400.

If you compile it as module, it will create a module named
i2c-matroxfb.

config FB_MATROX_MAVEN
tristate &quot;G400 second head support&quot;
depends on FB_MATROX_G &amp;&amp; FB_MATROX_I2C
---help---
WARNING !!! This support does not work with G450 !!!

Say Y or M here if you want to use a secondary head (meaning two
monitors in parallel) on G400 or MGA-TVO add-on on G200. Secondary
head is not compatible with accelerated XFree 3.3.x SVGA servers -
secondary head output is blanked while you are in X. With XFree
3.9.17 preview you can use both heads if you use SVGA over fbdev or
the fbdev driver on first head and the fbdev driver on second head.

If you compile it as module, two modules are created,
matroxfb_crtc2 and matroxfb_maven. Matroxfb_maven is needed for
both G200 and G400, matroxfb_crtc2 is needed only by G400. You must
also load i2c-matroxfb to get it to run.

The driver starts in monitor mode and you must use the matroxset
tool (available at
&lt;ftp://platan.vc.cvut.cz/pub/linux/matrox-latest/&gt;) to switch it to
PAL or NTSC or to swap primary and secondary head outputs.
Secondary head driver also always start in 640x480 resolution, you
must use fbset to change it.

Also do not forget that second head supports only 16 and 32 bpp
packed pixels, so it is a good idea to compile them into the kernel
too.  You can use only some font widths, as the driver uses generic
painting procedures (the secondary head does not use acceleration
engine).

config FB_RADEON
tristate &quot;ATI Radeon display support&quot;
depends on FB &amp;&amp; PCI
select FB_BACKLIGHT if FB_RADEON_BACKLIGHT
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_MACMODES if PPC
help
Choose this option if you want to use an ATI Radeon graphics card as
a framebuffer device.  There are both PCI and AGP versions.  You
don't need to choose this to run the Radeon in plain VGA mode.

There is a product page at
http://products.amd.com/en-us/GraphicCardResult.aspx

config FB_RADEON_I2C
bool &quot;DDC/I2C for ATI Radeon support&quot;
depends on FB_RADEON
select FB_DDC
default y
help
Say Y here if you want DDC/I2C support for your Radeon board.

config FB_RADEON_BACKLIGHT
bool &quot;Support for backlight control&quot;
depends on FB_RADEON
default y
help
Say Y here if you want to control the backlight of your display.

config FB_RADEON_DEBUG
bool &quot;Lots of debug output from Radeon driver&quot;
depends on FB_RADEON
default n
help
Say Y here if you want the Radeon driver to output all sorts
of debugging information to provide to the maintainer when
something goes wrong.

config FB_ATY128
tristate &quot;ATI Rage128 display support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_BACKLIGHT if FB_ATY128_BACKLIGHT
select FB_MACMODES if PPC_PMAC
help
This driver supports graphics boards with the ATI Rage128 chips.
Say Y if you have such a graphics board and read
&lt;file:Documentation/fb/aty128fb.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called aty128fb.

config FB_ATY128_BACKLIGHT
bool &quot;Support for backlight control&quot;
depends on FB_ATY128
default y
help
Say Y here if you want to control the backlight of your display.

config FB_ATY
tristate &quot;ATI Mach64 display support&quot; if PCI || ATARI
depends on FB &amp;&amp; !SPARC32
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_BACKLIGHT if FB_ATY_BACKLIGHT
select FB_MACMODES if PPC
help
This driver supports graphics boards with the ATI Mach64 chips.
Say Y if you have such a graphics board.

To compile this driver as a module, choose M here: the
module will be called atyfb.

config FB_ATY_CT
bool &quot;Mach64 CT/VT/GT/LT (incl. 3D RAGE) support&quot;
depends on PCI &amp;&amp; FB_ATY
default y if SPARC64 &amp;&amp; PCI
help
Say Y here to support use of ATI's 64-bit Rage boards (or other
boards based on the Mach64 CT, VT, GT, and LT chipsets) as a
framebuffer device.  The ATI product support page for these boards
is at &lt;http://support.ati.com/products/pc/mach64/mach64.html&gt;.

config FB_ATY_GENERIC_LCD
bool &quot;Mach64 generic LCD support&quot;
depends on FB_ATY_CT
help
Say Y if you have a laptop with an ATI Rage LT PRO, Rage Mobility,
Rage XC, or Rage XL chipset.

config FB_ATY_GX
bool &quot;Mach64 GX support&quot; if PCI
depends on FB_ATY
default y if ATARI
help
Say Y here to support use of the ATI Mach64 Graphics Expression
board (or other boards based on the Mach64 GX chipset) as a
framebuffer device.  The ATI product support page for these boards
is at
&lt;http://support.ati.com/products/pc/mach64/graphics_xpression.html&gt;.

config FB_ATY_BACKLIGHT
bool &quot;Support for backlight control&quot;
depends on FB_ATY
default y
help
Say Y here if you want to control the backlight of your display.

config FB_S3
tristate &quot;S3 Trio/Virge support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_TILEBLITTING
select FB_SVGALIB
select VGASTATE
select FONT_8x16 if FRAMEBUFFER_CONSOLE
---help---
Driver for graphics boards with S3 Trio / S3 Virge chip.

config FB_S3_DDC
bool &quot;DDC for S3 support&quot;
depends on FB_S3
select FB_DDC
default y
help
Say Y here if you want DDC support for your S3 graphics card.

config FB_SAVAGE
tristate &quot;S3 Savage support&quot;
depends on FB &amp;&amp; PCI
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select VGASTATE
help
This driver supports notebooks and computers with S3 Savage PCI/AGP
chips.

Say Y if you have such a graphics card.

To compile this driver as a module, choose M here; the module
will be called savagefb.

config FB_SAVAGE_I2C
bool &quot;Enable DDC2 Support&quot;
depends on FB_SAVAGE
select FB_DDC
help
This enables I2C support for S3 Savage Chipsets.  This is used
only for getting EDID information from the attached display
allowing for robust video mode handling and switching.

Because fbdev-2.6 requires that drivers must be able to
independently validate video mode parameters, you should say Y
here.

config FB_SAVAGE_ACCEL
bool &quot;Enable Console Acceleration&quot;
depends on FB_SAVAGE
default n
help
This option will compile in console acceleration support. If
the resulting framebuffer console has bothersome glitches, then
choose N here.

config FB_SIS
tristate &quot;SiS/XGI display support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_BOOT_VESA_SUPPORT if FB_SIS = y
select FB_SIS_300 if !FB_SIS_315
help
This is the frame buffer device driver for the SiS 300, 315, 330
and 340 series as well as XGI V3XT, V5, V8, Z7 graphics chipsets.
Specs available at &lt;http://www.sis.com&gt; and &lt;http://www.xgitech.com&gt;.

To compile this driver as a module, choose M here; the module
will be called sisfb.

config FB_SIS_300
bool &quot;SiS 300 series support&quot;
depends on FB_SIS
help
Say Y here to support use of the SiS 300/305, 540, 630 and 730.

config FB_SIS_315
bool &quot;SiS 315/330/340 series and XGI support&quot;
depends on FB_SIS
help
Say Y here to support use of the SiS 315, 330 and 340 series
(315/H/PRO, 55x, 650, 651, 740, 330, 661, 741, 760, 761) as well
as XGI V3XT, V5, V8 and Z7.

config FB_VIA
tristate &quot;VIA UniChrome (Pro) and Chrome9 display support&quot;
depends on FB &amp;&amp; PCI &amp;&amp; X86 &amp;&amp; GPIOLIB &amp;&amp; I2C
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select I2C_ALGOBIT
help
This is the frame buffer device driver for Graphics chips of VIA
UniChrome (Pro) Family (CLE266,PM800/CN400,P4M800CE/P4M800Pro/
CN700/VN800,CX700/VX700,P4M890) and Chrome9 Family (K8M890,CN896
/P4M900,VX800)
Say Y if you have a VIA UniChrome graphics board.

To compile this driver as a module, choose M here: the
module will be called viafb.

if FB_VIA

config FB_VIA_DIRECT_PROCFS
bool &quot;direct hardware access via procfs (DEPRECATED)(DANGEROUS)&quot;
depends on FB_VIA
default n
help
Allow direct hardware access to some output registers via procfs.
This is dangerous but may provide the only chance to get the
correct output device configuration.
Its use is strongly discouraged.

config FB_VIA_X_COMPATIBILITY
bool &quot;X server compatibility&quot;
depends on FB_VIA
default n
help
This option reduces the functionality (power saving, ...) of the
framebuffer to avoid negative impact on the OpenChrome X server.
If you use any X server other than fbdev you should enable this
otherwise it should be safe to disable it and allow using all
features.

endif

config FB_NEOMAGIC
tristate &quot;NeoMagic display support&quot;
depends on FB &amp;&amp; PCI
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select VGASTATE
help
This driver supports notebooks with NeoMagic PCI chips.
Say Y if you have such a graphics card.

To compile this driver as a module, choose M here: the
module will be called neofb.

config FB_KYRO
tristate &quot;IMG Kyro support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Say Y here if you have a STG4000 / Kyro / PowerVR 3 based
graphics board.

To compile this driver as a module, choose M here: the
module will be called kyrofb.

config FB_3DFX
tristate &quot;3Dfx Banshee/Voodoo3/Voodoo5 display support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_IMAGEBLIT
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_MODE_HELPERS
help
This driver supports graphics boards with the 3Dfx Banshee,
Voodoo3 or VSA-100 (aka Voodoo4/5) chips. Say Y if you have
such a graphics board.

To compile this driver as a module, choose M here: the
module will be called tdfxfb.

config FB_3DFX_ACCEL
bool &quot;3Dfx Acceleration functions&quot;
depends on FB_3DFX
---help---
This will compile the 3Dfx Banshee/Voodoo3/VSA-100 frame buffer
device driver with acceleration functions.

config FB_3DFX_I2C
bool &quot;Enable DDC/I2C support&quot;
depends on FB_3DFX
select FB_DDC
default y
help
Say Y here if you want DDC/I2C support for your 3dfx Voodoo3.

config FB_VOODOO1
tristate &quot;3Dfx Voodoo Graphics (sst1) support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Say Y here if you have a 3Dfx Voodoo Graphics (Voodoo1/sst1) or
Voodoo2 (cvg) based graphics card.

To compile this driver as a module, choose M here: the
module will be called sstfb.

WARNING: Do not use any application that uses the 3D engine
(namely glide) while using this driver.
Please read the &lt;file:Documentation/fb/sstfb.txt&gt; for supported
options and other important info  support.

config FB_VT8623
tristate &quot;VIA VT8623 support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_TILEBLITTING
select FB_SVGALIB
select VGASTATE
select FONT_8x16 if FRAMEBUFFER_CONSOLE
---help---
Driver for CastleRock integrated graphics core in the
VIA VT8623 [Apollo CLE266] chipset.

config FB_TRIDENT
tristate &quot;Trident/CyberXXX/CyberBlade support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_DDC
select FB_MODE_HELPERS
---help---
This is the frame buffer device driver for Trident PCI/AGP chipsets.
Supported chipset families are TGUI 9440/96XX, 3DImage, Blade3D
and Blade XP.
There are also integrated versions of these chips called CyberXXXX,
CyberImage or CyberBlade. These chips are mostly found in laptops
but also on some motherboards including early VIA EPIA motherboards.
For more information, read &lt;file:Documentation/fb/tridentfb.txt&gt;

Say Y if you have such a graphics board.

To compile this driver as a module, choose M here: the
module will be called tridentfb.

config FB_ARK
tristate &quot;ARK 2000PV support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_TILEBLITTING
select FB_SVGALIB
select VGASTATE
select FONT_8x16 if FRAMEBUFFER_CONSOLE
---help---
Driver for PCI graphics boards with ARK 2000PV chip
and ICS 5342 RAMDAC.

config FB_PM3
tristate &quot;Permedia3 support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This is the frame buffer device driver for the 3DLabs Permedia3
chipset, used in Formac ProFormance III, 3DLabs Oxygen VX1 &amp;
similar boards, 3DLabs Permedia3 Create!, Appian Jeronimo 2000
and maybe other boards.

config FB_CARMINE
tristate &quot;Fujitsu carmine frame buffer support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This is the frame buffer device driver for the Fujitsu Carmine chip.
The driver provides two independent frame buffer devices.

choice
depends on FB_CARMINE
prompt &quot;DRAM timing&quot;
default FB_CARMINE_DRAM_EVAL

config FB_CARMINE_DRAM_EVAL
bool &quot;Eval board timings&quot;
help
Use timings which work on the eval card.

config CARMINE_DRAM_CUSTOM
bool &quot;Custom board timings&quot;
help
Use custom board timings.
endchoice

config FB_AU1100
bool &quot;Au1100 LCD Driver&quot;
depends on (FB = y) &amp;&amp; MIPS_ALCHEMY
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This is the framebuffer driver for the AMD Au1100 SOC.  It can drive
various panels and CRTs by passing in kernel cmd line option
au1100fb:panel=&lt;name&gt;.

config FB_AU1200
bool &quot;Au1200/Au1300 LCD Driver&quot;
depends on (FB = y) &amp;&amp; MIPS_ALCHEMY
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
help
This is the framebuffer driver for the Au1200/Au1300 SOCs.
It can drive various panels and CRTs by passing in kernel cmd line
option au1200fb:panel=&lt;name&gt;.

config FB_VT8500
bool &quot;VIA VT8500 framebuffer support&quot;
depends on (FB = y) &amp;&amp; ARM &amp;&amp; ARCH_VT8500
select FB_SYS_FILLRECT if (!FB_WMT_GE_ROPS)
select FB_SYS_COPYAREA if (!FB_WMT_GE_ROPS)
select FB_SYS_IMAGEBLIT
select FB_MODE_HELPERS
select VIDEOMODE_HELPERS
help
This is the framebuffer driver for VIA VT8500 integrated LCD
controller.

config FB_WM8505
bool &quot;Wondermedia WM8xxx-series frame buffer support&quot;
depends on (FB = y) &amp;&amp; ARM &amp;&amp; ARCH_VT8500
select FB_SYS_FILLRECT if (!FB_WMT_GE_ROPS)
select FB_SYS_COPYAREA if (!FB_WMT_GE_ROPS)
select FB_SYS_IMAGEBLIT
select FB_MODE_HELPERS
select VIDEOMODE_HELPERS
help
This is the framebuffer driver for WonderMedia WM8xxx-series
integrated LCD controller. This driver covers the WM8505, WM8650
and WM8850 SoCs.

config FB_WMT_GE_ROPS
bool &quot;VT8500/WM8xxx accelerated raster ops support&quot;
depends on (FB = y) &amp;&amp; (FB_VT8500 || FB_WM8505)
default n
help
This adds support for accelerated raster operations on the
VIA VT8500 and Wondermedia 85xx series SoCs.

source &quot;drivers/video/fbdev/geode/Kconfig&quot;

config FB_HIT
tristate &quot;HD64461 Frame Buffer support&quot;
depends on FB &amp;&amp; HD64461
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This is the frame buffer device driver for the Hitachi HD64461 LCD
frame buffer card.

config FB_PMAG_AA
tristate &quot;PMAG-AA TURBOchannel framebuffer support&quot;
depends on FB &amp;&amp; TC
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Support for the PMAG-AA TURBOchannel framebuffer card (1280x1024x1)
used mainly in the MIPS-based DECstation series.

config FB_PMAG_BA
tristate &quot;PMAG-BA TURBOchannel framebuffer support&quot;
depends on FB &amp;&amp; TC
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Support for the PMAG-BA TURBOchannel framebuffer card (1024x864x8)
used mainly in the MIPS-based DECstation series.

config FB_PMAGB_B
tristate &quot;PMAGB-B TURBOchannel framebuffer support&quot;
depends on FB &amp;&amp; TC
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Support for the PMAGB-B TURBOchannel framebuffer card used mainly
in the MIPS-based DECstation series. The card is currently only
supported in 1280x1024x8 mode.

config FB_MAXINE
bool &quot;Maxine (Personal DECstation) onboard framebuffer support&quot;
depends on (FB = y) &amp;&amp; MACH_DECSTATION
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Support for the onboard framebuffer (1024x768x8) in the Personal
DECstation series (Personal DECstation 5000/20, /25, /33, /50,
Codename &quot;Maxine&quot;).

config FB_G364
bool &quot;G364 frame buffer support&quot;
depends on (FB = y) &amp;&amp; (MIPS_MAGNUM_4000 || OLIVETTI_M700)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
The G364 driver is the framebuffer used in MIPS Magnum 4000 and
Olivetti M700-10 systems.

config FB_68328
bool &quot;Motorola 68328 native frame buffer support&quot;
depends on (FB = y) &amp;&amp; (M68328 || M68EZ328 || M68VZ328)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Say Y here if you want to support the built-in frame buffer of
the Motorola 68328 CPU family.

config FB_PXA168
tristate &quot;PXA168/910 LCD framebuffer support&quot;
depends on FB &amp;&amp; (CPU_PXA168 || CPU_PXA910)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the built-in LCD controller in the Marvell
MMP processor.

config FB_PXA
tristate &quot;PXA LCD framebuffer support&quot;
depends on FB &amp;&amp; ARCH_PXA
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select VIDEOMODE_HELPERS if OF
select FB_MODE_HELPERS if OF
---help---
Frame buffer driver for the built-in LCD controller in the Intel
PXA2x0 processor.

This driver is also available as a module ( = code which can be
inserted and removed from the running kernel whenever you want). The
module will be called pxafb. If you want to compile it as a module,
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If unsure, say N.

config FB_PXA_OVERLAY
bool &quot;Support PXA27x/PXA3xx Overlay(s) as framebuffer&quot;
default n
depends on FB_PXA &amp;&amp; (PXA27x || PXA3xx)

config FB_PXA_SMARTPANEL
bool &quot;PXA Smartpanel LCD support&quot;
default n
depends on FB_PXA

config FB_PXA_PARAMETERS
bool &quot;PXA LCD command line parameters&quot;
default n
depends on FB_PXA
---help---
Enable the use of kernel command line or module parameters
to configure the physical properties of the LCD panel when
using the PXA LCD driver.

This option allows you to override the panel parameters
supplied by the platform in order to support multiple
different models of flatpanel. If you will only be using a
single model of flatpanel then you can safely leave this
option disabled.

&lt;file:Documentation/fb/pxafb.txt&gt; describes the available parameters.

config PXA3XX_GCU
tristate &quot;PXA3xx 2D graphics accelerator driver&quot;
depends on FB_PXA
help
Kernelspace driver for the 2D graphics controller unit (GCU)
found on PXA3xx processors. There is a counterpart driver in the
DirectFB suite, see http://www.directfb.org/

If you compile this as a module, it will be called pxa3xx_gcu.

config FB_MBX
tristate &quot;2700G LCD framebuffer support&quot;
depends on FB &amp;&amp; ARCH_PXA
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Framebuffer driver for the Intel 2700G (Marathon) Graphics
Accelerator

config FB_MBX_DEBUG
bool &quot;Enable debugging info via debugfs&quot;
depends on FB_MBX &amp;&amp; DEBUG_FS
default n
---help---
Enable this if you want debugging information using the debug
filesystem (debugfs)

If unsure, say N.

config FB_FSL_DIU
tristate &quot;Freescale DIU framebuffer support&quot;
depends on FB &amp;&amp; FSL_SOC
select FB_MODE_HELPERS
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select PPC_LIB_RHEAP
---help---
Framebuffer driver for the Freescale SoC DIU

config FB_W100
tristate &quot;W100 frame buffer support&quot;
depends on FB &amp;&amp; ARCH_PXA
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the w100 as found on the Sharp SL-Cxx series.
It can also drive the w3220 chip found on iPAQ hx4700.

This driver is also available as a module ( = code which can be
inserted and removed from the running kernel whenever you want). The
module will be called w100fb. If you want to compile it as a module,
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If unsure, say N.

config FB_SH_MOBILE_LCDC
tristate &quot;SuperH Mobile LCDC framebuffer support&quot;
depends on FB &amp;&amp; (SUPERH || ARCH_RENESAS) &amp;&amp; HAVE_CLK
depends on FB_SH_MOBILE_MERAM || !FB_SH_MOBILE_MERAM
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
select FB_BACKLIGHT
---help---
Frame buffer driver for the on-chip SH-Mobile LCD controller.

config FB_TMIO
tristate &quot;Toshiba Mobile IO FrameBuffer support&quot;
depends on FB &amp;&amp; (MFD_TMIO || COMPILE_TEST)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the Toshiba Mobile IO integrated as found
on the Sharp SL-6000 series

This driver is also available as a module ( = code which can be
inserted and removed from the running kernel whenever you want). The
module will be called tmiofb. If you want to compile it as a module,
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If unsure, say N.

config FB_TMIO_ACCELL
bool &quot;tmiofb acceleration&quot;
depends on FB_TMIO
default y

config FB_S3C
tristate &quot;Samsung S3C framebuffer support&quot;
depends on FB &amp;&amp; (CPU_S3C2416 || ARCH_S3C64XX || \
ARCH_S5PV210 || ARCH_EXYNOS)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the built-in FB controller in the Samsung
SoC line from the S3C2443 onwards, including the S3C2416, S3C2450,
and the S3C64XX series such as the S3C6400 and S3C6410.

These chips all have the same basic framebuffer design with the
actual capabilities depending on the chip. For instance the S3C6400
and S3C6410 support 4 hardware windows whereas the S3C24XX series
currently only have two.

Currently the support is only for the S3C6400 and S3C6410 SoCs.

config FB_S3C_DEBUG_REGWRITE
bool &quot;Debug register writes&quot;
depends on FB_S3C
---help---
Show all register writes via pr_debug()

config FB_S3C2410
tristate &quot;S3C2410 LCD framebuffer support&quot;
depends on FB &amp;&amp; ARCH_S3C24XX
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the built-in LCD controller in the Samsung
S3C2410 processor.

This driver is also available as a module ( = code which can be
inserted and removed from the running kernel whenever you want). The
module will be called s3c2410fb. If you want to compile it as a module,
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If unsure, say N.
config FB_S3C2410_DEBUG
bool &quot;S3C2410 lcd debug messages&quot;
depends on FB_S3C2410
help
Turn on debugging messages. Note that you can set/unset at run time
through sysfs

config FB_NUC900
tristate &quot;NUC900 LCD framebuffer support&quot;
depends on FB &amp;&amp; ARCH_W90X900
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the built-in LCD controller in the Nuvoton
NUC900 processor

config GPM1040A0_320X240
bool &quot;Giantplus Technology GPM1040A0 320x240 Color TFT LCD&quot;
depends on FB_NUC900

config FB_SM501
tristate &quot;Silicon Motion SM501 framebuffer support&quot;
depends on FB &amp;&amp; MFD_SM501
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for the CRT and LCD controllers in the Silicon
Motion SM501.

This driver is also available as a module ( = code which can be
inserted and removed from the running kernel whenever you want). The
module will be called sm501fb. If you want to compile it as a module,
say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.

If unsure, say N.

config FB_SMSCUFX
tristate &quot;SMSC UFX6000/7000 USB Framebuffer support&quot;
depends on FB &amp;&amp; USB
select FB_MODE_HELPERS
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
---help---
This is a kernel framebuffer driver for SMSC UFX USB devices.
Supports fbdev clients like xf86-video-fbdev, kdrive, fbi, and
mplayer -vo fbdev. Supports both UFX6000 (USB 2.0) and UFX7000
(USB 3.0) devices.
To compile as a module, choose M here: the module name is smscufx.

config FB_UDL
tristate &quot;Displaylink USB Framebuffer support&quot;
depends on FB &amp;&amp; USB
select FB_MODE_HELPERS
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
---help---
This is a kernel framebuffer driver for DisplayLink USB devices.
Supports fbdev clients like xf86-video-fbdev, kdrive, fbi, and
mplayer -vo fbdev. Supports all USB 2.0 era DisplayLink devices.
To compile as a module, choose M here: the module name is udlfb.

config FB_IBM_GXT4500
tristate &quot;Framebuffer support for IBM GXT4000P/4500P/6000P/6500P adaptors&quot;
depends on FB
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Say Y here to enable support for the IBM GXT4000P/6000P and
GXT4500P/6500P display adaptor based on Raster Engine RC1000,
found on some IBM System P (pSeries) machines. This driver
doesn't use Geometry Engine GT1000. This driver also supports
AGP Fire GL2/3/4 cards on x86.

config FB_PS3
tristate &quot;PS3 GPU framebuffer driver&quot;
depends on FB &amp;&amp; PS3_PS3AV
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
---help---
Include support for the virtual frame buffer in the PS3 platform.

config FB_PS3_DEFAULT_SIZE_M
int &quot;PS3 default frame buffer size (in MiB)&quot;
depends on FB_PS3
default 9
---help---
This is the default size (in MiB) of the virtual frame buffer in
the PS3.
The default value can be overridden on the kernel command line
using the &quot;ps3fb&quot; option (e.g. &quot;ps3fb=9M&quot;);

config FB_XILINX
tristate &quot;Xilinx frame buffer support&quot;
depends on FB &amp;&amp; (XILINX_VIRTEX || MICROBLAZE || ARCH_ZYNQ)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Include support for the Xilinx ML300/ML403 reference design
framebuffer. ML300 carries a 640*480 LCD display on the board,
ML403 uses a standard DB15 VGA connector.

config FB_GOLDFISH
tristate &quot;Goldfish Framebuffer&quot;
depends on FB &amp;&amp; HAS_DMA &amp;&amp; (GOLDFISH || COMPILE_TEST)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Framebuffer driver for Goldfish Virtual Platform

config FB_COBALT
tristate &quot;Cobalt server LCD frame buffer support&quot;
depends on FB &amp;&amp; (MIPS_COBALT || MIPS_SEAD3)

config FB_SH7760
bool &quot;SH7760/SH7763/SH7720/SH7721 LCDC support&quot;
depends on FB &amp;&amp; (CPU_SUBTYPE_SH7760 || CPU_SUBTYPE_SH7763 \
|| CPU_SUBTYPE_SH7720 || CPU_SUBTYPE_SH7721)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Support for the SH7760/SH7763/SH7720/SH7721 integrated
(D)STN/TFT LCD Controller.
Supports display resolutions up to 1024x1024 pixel, grayscale and
color operation, with depths ranging from 1 bpp to 8 bpp monochrome
and 8, 15 or 16 bpp color; 90 degrees clockwise display rotation for
panels &lt;= 320 pixel horizontal resolution.

config FB_DA8XX
tristate &quot;DA8xx/OMAP-L1xx/AM335x Framebuffer support&quot;
depends on FB &amp;&amp; (ARCH_DAVINCI_DA8XX || SOC_AM33XX)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_CFB_REV_PIXELS_IN_BYTE
select FB_MODE_HELPERS
select VIDEOMODE_HELPERS
---help---
This is the frame buffer device driver for the TI LCD controller
found on DA8xx/OMAP-L1xx/AM335x SoCs.
If unsure, say N.

config FB_VIRTUAL
tristate &quot;Virtual Frame Buffer support (ONLY FOR TESTING!)&quot;
depends on FB
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
---help---
This is a `virtual' frame buffer device. It operates on a chunk of
unswappable kernel memory instead of on the memory of a graphics
board. This means you cannot see any output sent to this frame
buffer device, while it does consume precious memory. The main use
of this frame buffer device is testing and debugging the frame
buffer subsystem. Do NOT enable it for normal systems! To protect
the innocent, it has to be enabled explicitly at boot time using the
kernel option `video=vfb:'.

To compile this driver as a module, choose M here: the
module will be called vfb. In order to load it, you must use
the vfb_enable=1 option.

If unsure, say N.

config XEN_FBDEV_FRONTEND
tristate &quot;Xen virtual frame buffer support&quot;
depends on FB &amp;&amp; XEN
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
select XEN_XENBUS_FRONTEND
default y
help
This driver implements the front-end of the Xen virtual
frame buffer driver.  It communicates with a back-end
in another domain.

config FB_METRONOME
tristate &quot;E-Ink Metronome/8track controller support&quot;
depends on FB
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
help
This driver implements support for the E-Ink Metronome
controller. The pre-release name for this device was 8track
and could also have been called by some vendors as PVI-nnnn.

config FB_MB862XX
tristate &quot;Fujitsu MB862xx GDC support&quot;
depends on FB
depends on PCI || (OF &amp;&amp; PPC)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Frame buffer driver for Fujitsu Carmine/Coral-P(A)/Lime controllers.

choice
prompt &quot;GDC variant&quot;
depends on FB_MB862XX

config FB_MB862XX_PCI_GDC
bool &quot;Carmine/Coral-P(A) GDC&quot;
depends on PCI
---help---
This enables framebuffer support for Fujitsu Carmine/Coral-P(A)
PCI graphics controller devices.

config FB_MB862XX_LIME
bool &quot;Lime GDC&quot;
depends on OF &amp;&amp; PPC
select FB_FOREIGN_ENDIAN
select FB_LITTLE_ENDIAN
---help---
Framebuffer support for Fujitsu Lime GDC on host CPU bus.

endchoice

config FB_MB862XX_I2C
bool &quot;Support I2C bus on MB862XX GDC&quot;
depends on FB_MB862XX &amp;&amp; I2C
depends on FB_MB862XX=m || I2C=y
default y
help
Selecting this option adds Coral-P(A)/Lime GDC I2C bus adapter
driver to support accessing I2C devices on controller's I2C bus.
These are usually some video decoder chips.

config FB_EP93XX
tristate &quot;EP93XX frame buffer support&quot;
depends on FB &amp;&amp; ARCH_EP93XX
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
---help---
Framebuffer driver for the Cirrus Logic EP93XX series of processors.
This driver is also available as a module. The module will be called
ep93xx-fb.

config FB_PRE_INIT_FB
bool &quot;Don't reinitialize, use bootloader's GDC/Display configuration&quot;
depends on FB &amp;&amp; FB_MB862XX_LIME
---help---
Select this option if display contents should be inherited as set by
the bootloader.

config FB_MX3
tristate &quot;MX3 Framebuffer support&quot;
depends on FB &amp;&amp; MX3_IPU
select BACKLIGHT_CLASS_DEVICE
select BACKLIGHT_LCD_SUPPORT
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
default y
help
This is a framebuffer device for the i.MX31 LCD Controller. So
far only synchronous displays are supported. If you plan to use
an LCD display with your i.MX31 system, say Y here.

config FB_BROADSHEET
tristate &quot;E-Ink Broadsheet/Epson S1D13521 controller support&quot;
depends on FB
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
help
This driver implements support for the E-Ink Broadsheet
controller. The release name for this device was Epson S1D13521
and could also have been called by other names when coupled with
a bridge adapter.

config FB_AUO_K190X
tristate &quot;AUO-K190X EPD controller support&quot;
depends on FB
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
select FB_DEFERRED_IO
help
Provides support for epaper controllers from the K190X series
of AUO. These controllers can be used to drive epaper displays
from Sipix.

This option enables the common support, shared by the individual
controller drivers. You will also have to enable the driver
for the controller type used in your device.

config FB_AUO_K1900
tristate &quot;AUO-K1900 EPD controller support&quot;
depends on FB &amp;&amp; FB_AUO_K190X
help
This driver implements support for the AUO K1900 epd-controller.
This controller can drive Sipix epaper displays but can only do
serial updates, reducing the number of possible frames per second.

config FB_AUO_K1901
tristate &quot;AUO-K1901 EPD controller support&quot;
depends on FB &amp;&amp; FB_AUO_K190X
help
This driver implements support for the AUO K1901 epd-controller.
This controller can drive Sipix epaper displays and supports
concurrent updates, making higher frames per second possible.

config FB_JZ4740
tristate &quot;JZ4740 LCD framebuffer support&quot;
depends on FB &amp;&amp; MACH_JZ4740
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
help
Framebuffer support for the JZ4740 SoC.

config FB_MXS
tristate &quot;MXS LCD framebuffer support&quot;
depends on FB &amp;&amp; (ARCH_MXS || ARCH_MXC)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
select FB_MODE_HELPERS
select VIDEOMODE_HELPERS
help
Framebuffer support for the MXS SoC.

config FB_PUV3_UNIGFX
tristate &quot;PKUnity v3 Unigfx framebuffer support&quot;
depends on FB &amp;&amp; UNICORE32 &amp;&amp; ARCH_PUV3
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_SYS_FOPS
help
Choose this option if you want to use the Unigfx device as a
framebuffer device. Without the support of PCI &amp; AGP.

config FB_HYPERV
tristate &quot;Microsoft Hyper-V Synthetic Video support&quot;
depends on FB &amp;&amp; HYPERV
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
This framebuffer driver supports Microsoft Hyper-V Synthetic Video.

config FB_SIMPLE
bool &quot;Simple framebuffer support&quot;
depends on (FB = y)
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Say Y if you want support for a simple frame-buffer.

This driver assumes that the display hardware has been initialized
before the kernel boots, and the kernel will simply render to the
pre-allocated frame buffer surface.

Configuration re: surface address, size, and format must be provided
through device tree, or plain old platform data.

source &quot;drivers/video/fbdev/omap/Kconfig&quot;
source &quot;drivers/video/fbdev/omap2/Kconfig&quot;
source &quot;drivers/video/fbdev/exynos/Kconfig&quot;
source &quot;drivers/video/fbdev/mmp/Kconfig&quot;

config FB_SH_MOBILE_MERAM
tristate &quot;SuperH Mobile MERAM read ahead support&quot;
depends on (SUPERH || ARCH_SHMOBILE)
select GENERIC_ALLOCATOR
---help---
Enable MERAM support for the SuperH controller.

This will allow for caching of the framebuffer to provide more
reliable access under heavy main memory bus traffic situations.
Up to 4 memory channels can be configured, allowing 4 RGB or
2 YCbCr framebuffers to be configured.

config FB_SSD1307
tristate &quot;Solomon SSD1307 framebuffer support&quot;
depends on FB &amp;&amp; I2C
depends on OF
depends on GPIOLIB || COMPILE_TEST
select FB_SYS_FOPS
select FB_SYS_FILLRECT
select FB_SYS_COPYAREA
select FB_SYS_IMAGEBLIT
select FB_DEFERRED_IO
select PWM
select FB_BACKLIGHT
help
This driver implements support for the Solomon SSD1307
OLED controller over I2C.

config FB_SM712
tristate &quot;Silicon Motion SM712 framebuffer support&quot;
depends on FB &amp;&amp; PCI
select FB_CFB_FILLRECT
select FB_CFB_COPYAREA
select FB_CFB_IMAGEBLIT
help
Frame buffer driver for the Silicon Motion SM710, SM712, SM721
and SM722 chips.

This driver is also available as a module. The module will be
called sm712fb. If you want to compile it as a module, say M
here and read &lt;file:Documentation/kbuild/modules.txt&gt;.
</help>
					</entry>
				</container>
				<entry name="BACKLIGHT_LCD_SUPPORT">
					<label>Backlight &amp; LCD device support</label>
					<help>Enable this to be able to choose the drivers for controlling the
backlight and the LCD panel on some platforms, for example on PDAs.</help>
				</entry>
				<entry name="LCD_CLASS_DEVICE">
					<label>Lowlevel LCD controls</label>
					<help>This framework adds support for low-level control of LCD.
Some framebuffer devices connect to platform-specific LCD modules
in order to have a platform-specific way to control the flat panel
(contrast and applying power to the LCD (not to the backlight!)).

To have support for your specific LCD panel you will have to
select the proper drivers which depend on this option.</help>
				</entry>
				<entry name="LCD_CORGI">
					<label>LCD Panel support for SHARP corgi/spitz model</label>
					<help>Say y here to support the LCD panels usually found on SHARP
corgi (C7x0) and spitz (Cxx00) models.</help>
				</entry>
				<entry name="LCD_L4F00242T03">
					<label>Epson L4F00242T03 LCD</label>
					<help>SPI driver for Epson L4F00242T03. This provides basic support
for init and powering the LCD up/down through a sysfs interface.</help>
				</entry>
				<entry name="LCD_LMS283GF05">
					<label>Samsung LMS283GF05 LCD</label>
					<help>SPI driver for Samsung LMS283GF05. This provides basic support
for powering the LCD up/down through a sysfs interface.</help>
				</entry>
				<entry name="LCD_LTV350QV">
					<label>Samsung LTV350QV LCD Panel</label>
					<help>If you have a Samsung LTV350QV LCD panel, say y to include a
power control driver for it.  The panel starts up in power
off state, so you need this driver in order to see any
output.

The LTV350QV panel is present on all ATSTK1000 boards.</help>
				</entry>
				<entry name="LCD_ILI922X">
					<label>ILI Technology ILI9221/ILI9222 support</label>
					<help>If you have a panel based on the ILI9221/9222 controller
chip then say y to include a driver for it.</help>
				</entry>
				<entry name="LCD_ILI9320">
					<label>ILI Technology ILI9320 controller support</label>
					<help>If you have a panel based on the ILI9320 controller chip
then say y to include a power driver for it.</help>
				</entry>
				<entry name="LCD_TDO24M">
					<label>Toppoly TDO24M  and TDO35S LCD Panels support</label>
					<help>If you have a Toppoly TDO24M/TDO35S series LCD panel, say y here to
include the support for it.</help>
				</entry>
				<entry name="LCD_VGG2432A4">
					<label>VGG2432A4 LCM device support</label>
					<help>If you have a VGG2432A4 panel based on the ILI9320 controller chip
then say y to include a power driver for it.</help>
				</entry>
				<entry name="LCD_PLATFORM">
					<label>Platform LCD controls</label>
					<help>This driver provides a platform-device registered LCD power
control interface.</help>
				</entry>
				<entry name="LCD_TOSA">
					<label>Sharp SL-6000 LCD Driver</label>
					<help>If you have an Sharp SL-6000 Zaurus say Y to enable a driver
for its LCD.</help>
				</entry>
				<entry name="LCD_HP700">
					<label>HP Jornada 700 series LCD Driver</label>
					<help>If you have an HP Jornada 700 series handheld (710/720/728)
say Y to enable LCD control driver.</help>
				</entry>
				<entry name="LCD_S6E63M0">
					<label>S6E63M0 AMOLED LCD Driver</label>
					<help>If you have an S6E63M0 LCD Panel, say Y to enable its
LCD control driver.</help>
				</entry>
				<entry name="LCD_LD9040">
					<label>LD9040 AMOLED LCD Driver</label>
					<help>If you have an LD9040 Panel, say Y to enable its
control driver.</help>
				</entry>
				<entry name="LCD_AMS369FG06">
					<label>AMS369FG06 AMOLED LCD Driver</label>
					<help>If you have an AMS369FG06 AMOLED Panel, say Y to enable its
LCD control driver.</help>
				</entry>
				<entry name="LCD_LMS501KF03">
					<label>LMS501KF03 LCD Driver</label>
					<help>If you have an LMS501KF03 LCD Panel, say Y to enable its
LCD control driver.</help>
				</entry>
				<entry name="LCD_HX8357">
					<label>Himax HX-8357 LCD Driver</label>
					<help>If you have a HX-8357 LCD panel, say Y to enable its LCD control
driver.</help>
				</entry>
				<entry name="BACKLIGHT_CLASS_DEVICE">
					<label>Lowlevel Backlight controls</label>
					<help>This framework adds support for low-level control of the LCD
backlight. This includes support for brightness and power.

To have support for your specific LCD panel you will have to
select the proper drivers which depend on this option.</help>
				</entry>
				<entry name="BACKLIGHT_ATMEL_LCDC">
					<label>Atmel LCDC Contrast-as-Backlight control</label>
					<help>This provides a backlight control internal to the Atmel LCDC
driver.  If the LCD &quot;contrast control&quot; on your board is wired
so it controls the backlight brightness, select this option to
export this as a PWM-based backlight control.

If in doubt, it's safe to enable this option; it doesn't kick
in unless the board's description says it's wired that way.</help>
				</entry>
				<entry name="BACKLIGHT_EP93XX">
					<label>Cirrus EP93xx Backlight Driver</label>
					<help>If you have a LCD backlight connected to the BRIGHT output of
the EP93xx, say Y here to enable this driver.

To compile this driver as a module, choose M here: the module will
be called ep93xx_bl.</help>
				</entry>
				<entry name="BACKLIGHT_GENERIC">
					<label>Generic (aka Sharp Corgi) Backlight Driver</label>
					<help>Say y to enable the generic platform backlight driver previously
known as the Corgi backlight driver. If you have a Sharp Zaurus
SL-C7xx, SL-Cxx00 or SL-6000x say y.</help>
				</entry>
				<entry name="BACKLIGHT_IPAQ_MICRO">
					<label>iPAQ microcontroller backlight driver</label>
					<help>Say y to enable the backlight driver for Compaq iPAQ handheld
computers. Say yes if you have one of the h3100/h3600/h3700
machines.</help>
				</entry>
				<entry name="BACKLIGHT_LM3533">
					<label>Backlight Driver for LM3533</label>
					<help>Say Y to enable the backlight driver for National Semiconductor / TI
LM3533 Lighting Power chips.

The backlights can be controlled directly, through PWM input, or by
the ambient-light-sensor interface. The chip supports 256 brightness
levels.</help>
				</entry>
				<entry name="BACKLIGHT_LOCOMO">
					<label>Sharp LOCOMO LCD/Backlight Driver</label>
					<help>If you have a Sharp Zaurus SL-5500 (Collie) or SL-5600 (Poodle) say y to
enable the LCD/backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_OMAP1">
					<label>OMAP1 PWL-based LCD Backlight</label>
					<help>This driver controls the LCD backlight level and power for
the PWL module of OMAP1 processors.  Say Y if your board
uses this hardware.</help>
				</entry>
				<entry name="BACKLIGHT_HP680">
					<label>HP Jornada 680 Backlight Driver</label>
					<help>If you have a HP Jornada 680, say y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_HP700">
					<label>HP Jornada 700 series Backlight Driver</label>
					<help>If you have an HP Jornada 700 series,
say Y to include backlight control driver.</help>
				</entry>
				<entry name="BACKLIGHT_CARILLO_RANCH">
					<label>Intel Carillo Ranch Backlight Driver</label>
					<help>If you have a Intel LE80578 (Carillo Ranch) say Y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_PWM">
					<label>Generic PWM based Backlight Driver</label>
					<help>If you have a LCD backlight adjustable by PWM, say Y to enable
this driver.</help>
				</entry>
				<entry name="BACKLIGHT_DA903X">
					<label>Backlight Driver for DA9030/DA9034 using WLED</label>
					<help>If you have a LCD backlight connected to the WLED output of DA9030
or DA9034 WLED output, say Y here to enable this driver.</help>
				</entry>
				<entry name="BACKLIGHT_DA9052">
					<label>Dialog DA9052/DA9053 WLED</label>
					<help>Enable the Backlight Driver for DA9052-BC and DA9053-AA/Bx PMICs.</help>
				</entry>
				<entry name="BACKLIGHT_MAX8925">
					<label>Backlight driver for MAX8925</label>
					<help>If you have a LCD backlight connected to the WLED output of MAX8925
WLED output, say Y here to enable this driver.</help>
				</entry>
				<entry name="BACKLIGHT_APPLE">
					<label>Apple Backlight Driver</label>
					<help>If you have an Intel-based Apple say Y to enable a driver for its
backlight.</help>
				</entry>
				<entry name="BACKLIGHT_TOSA">
					<label>Sharp SL-6000 Backlight Driver</label>
					<help>If you have an Sharp SL-6000 Zaurus say Y to enable a driver
for its backlight</help>
				</entry>
				<entry name="BACKLIGHT_PM8941_WLED">
					<label>Qualcomm PM8941 WLED Driver</label>
					<help>If you have the Qualcomm PM8941, say Y to enable a driver for the
WLED block.</help>
				</entry>
				<entry name="BACKLIGHT_SAHARA">
					<label>Tabletkiosk Sahara Touch-iT Backlight Driver</label>
					<help>If you have a Tabletkiosk Sahara Touch-iT, say y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_WM831X">
					<label>WM831x PMIC Backlight Driver</label>
					<help>If you have a backlight driven by the ISINK and DCDC of a
WM831x PMIC say y to enable the backlight driver for it.</help>
				</entry>
				<entry name="BACKLIGHT_ADP5520">
					<label>Backlight Driver for ADP5520/ADP5501 using WLED</label>
					<help>If you have a LCD backlight connected to the BST/BL_SNK output of
ADP5520 or ADP5501, say Y here to enable this driver.

To compile this driver as a module, choose M here: the module will
be called adp5520_bl.</help>
				</entry>
				<entry name="BACKLIGHT_ADP8860">
					<label>Backlight Driver for ADP8860/ADP8861/ADP8863 using WLED</label>
					<help>If you have a LCD backlight connected to the ADP8860, ADP8861 or
ADP8863 say Y here to enable this driver.

To compile this driver as a module, choose M here: the module will
be called adp8860_bl.</help>
				</entry>
				<entry name="BACKLIGHT_ADP8870">
					<label>Backlight Driver for ADP8870 using WLED</label>
					<help>If you have a LCD backlight connected to the ADP8870,
say Y here to enable this driver.

To compile this driver as a module, choose M here: the module will
be called adp8870_bl.</help>
				</entry>
				<entry name="BACKLIGHT_88PM860X">
					<label>Backlight Driver for 88PM8606 using WLED</label>
					<help>Say Y to enable the backlight driver for Marvell 88PM8606.</help>
				</entry>
				<entry name="BACKLIGHT_PCF50633">
					<label>Backlight driver for NXP PCF50633 MFD</label>
					<help>If you have a backlight driven by a NXP PCF50633 MFD, say Y here to
enable its driver.</help>
				</entry>
				<entry name="BACKLIGHT_AAT2870">
					<label>AnalogicTech AAT2870 Backlight</label>
					<help>If you have a AnalogicTech AAT2870 say Y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_LM3630A">
					<label>Backlight Driver for LM3630A</label>
					<help>This supports TI LM3630A Backlight Driver</help>
				</entry>
				<entry name="BACKLIGHT_LM3639">
					<label>Backlight Driver for LM3639</label>
					<help>This supports TI LM3639 Backlight + 1.5A Flash LED Driver</help>
				</entry>
				<entry name="BACKLIGHT_LP855X">
					<label>Backlight driver for TI LP855X</label>
					<help>This supports TI LP8550, LP8551, LP8552, LP8553, LP8555, LP8556 and
LP8557 backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_LP8788">
					<label>Backlight driver for TI LP8788 MFD</label>
					<help>This supports TI LP8788 backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_OT200">
					<label>Backlight driver for ot200 visualisation device</label>
					<help>To compile this driver as a module, choose M here: the module will be
called ot200_bl.</help>
				</entry>
				<entry name="BACKLIGHT_PANDORA">
					<label>Backlight driver for Pandora console</label>
					<help>If you have a Pandora console, say Y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_SKY81452">
					<label>Backlight driver for SKY81452</label>
					<help>If you have a Skyworks SKY81452, say Y to enable the
backlight driver.

To compile this driver as a module, choose M here: the module will
be called sky81452-backlight</help>
				</entry>
				<entry name="BACKLIGHT_TPS65217">
					<label>TPS65217 Backlight</label>
					<help>If you have a Texas Instruments TPS65217 say Y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_AS3711">
					<label>AS3711 Backlight</label>
					<help>If you have an Austrian Microsystems AS3711 say Y to enable the
backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_GPIO">
					<label>Generic GPIO based Backlight Driver</label>
					<help>If you have a LCD backlight adjustable by GPIO, say Y to enable
this driver.</help>
				</entry>
				<entry name="BACKLIGHT_LV5207LP">
					<label>Sanyo LV5207LP Backlight</label>
					<help>If you have a Sanyo LV5207LP say Y to enable the backlight driver.</help>
				</entry>
				<entry name="BACKLIGHT_BD6107">
					<label>Rohm BD6107 Backlight</label>
					<help>If you have a Rohm BD6107 say Y to enable the backlight driver.</help>
				</entry>
				<entry name="VGASTATE"/>
				<entry name="VIDEOMODE_HELPERS"/>
				<entry name="HDMI"/>
				<container name="Console_display_driver_support">
					<label>Console display driver support</label>
					<entry name="VGA_CONSOLE">
						<label>VGA text console&quot; if EXPERT || !X86</label>
						<help>Saying Y here will allow you to use Linux in text mode through a
display that complies with the generic VGA standard. Virtually
everyone wants that.

The program SVGATextMode can be used to utilize SVGA video cards to
their full potential in text mode. Download it from
&lt;ftp://ibiblio.org/pub/Linux/utils/console/&gt;.

Say Y.</help>
					</entry>
					<entry name="VGACON_SOFT_SCROLLBACK">
						<label>Enable Scrollback Buffer in System RAM</label>
						<help>The scrollback buffer of the standard VGA console is located in
the VGA RAM.  The size of this RAM is fixed and is quite small.
If you require a larger scrollback buffer, this can be placed in
System RAM which is dynamically allocated during initialization.
Placing the scrollback buffer in System RAM will slightly slow
down the console.

If you want this feature, say 'Y' here and enter the amount of
RAM to allocate for this buffer.  If unsure, say 'N'.</help>
					</entry>
					<entry name="VGACON_SOFT_SCROLLBACK_SIZE">
						<label>Scrollback Buffer Size (in KB)</label>
						<help>Enter the amount of System RAM to allocate for the scrollback
buffer.  Each 64KB will give you approximately 16 80x25
screenfuls of scrollback buffer</help>
					</entry>
					<entry name="MDA_CONSOLE">
						<label>MDA text console (dual-headed)</label>
						<help>Say Y here if you have an old MDA or monochrome Hercules graphics
adapter in your system acting as a second head ( = video card). You
will then be able to use two monitors with your Linux system. Do not
say Y here if your MDA card is the primary card in your system; the
normal VGA driver will handle it.

To compile this driver as a module, choose M here: the
module will be called mdacon.

If unsure, say N.</help>
					</entry>
					<entry name="SGI_NEWPORT_CONSOLE">
						<label>SGI Newport Console support</label>
						<help>Say Y here if you want the console on the Newport aka XL graphics
card of your Indy.  Most people say Y here.</help>
					</entry>
					<entry name="DUMMY_CONSOLE"/>
					<entry name="DUMMY_CONSOLE_COLUMNS">
						<label>Initial number of console screen columns</label>
						<help>On PA-RISC, the default value is 160, which should fit a 1280x1024
monitor.
Select 80 if you use a 640x480 resolution by default.</help>
					</entry>
					<entry name="DUMMY_CONSOLE_ROWS">
						<label>Initial number of console screen rows</label>
						<help>On PA-RISC, the default value is 64, which should fit a 1280x1024
monitor.
Select 25 if you use a 640x480 resolution by default.</help>
					</entry>
					<entry name="FRAMEBUFFER_CONSOLE">
						<label>Framebuffer Console support</label>
						<help>Low-level framebuffer-based console driver.</help>
					</entry>
					<entry name="FRAMEBUFFER_CONSOLE_DETECT_PRIMARY">
						<label>Map the console to the primary display device</label>
						<help>If this option is selected, the framebuffer console will
automatically select the primary display device (if the architecture
supports this feature).  Otherwise, the framebuffer console will
always select the first framebuffer driver that is loaded. The latter
is the default behavior.

You can always override the automatic selection of the primary device
by using the fbcon=map: boot option.

If unsure, select n.</help>
					</entry>
					<entry name="FRAMEBUFFER_CONSOLE_ROTATION">
						<label>Framebuffer Console Rotation</label>
						<help>Enable display rotation for the framebuffer console.  This is done
in software and may be significantly slower than a normally oriented
display.  Note that the rotation is done at the console level only
such that other users of the framebuffer will remain normally
oriented.</help>
					</entry>
					<entry name="STI_CONSOLE">
						<label>STI text console</label>
						<help>The STI console is the builtin display/keyboard on HP-PARISC
machines.  Say Y here to build support for it into your kernel.
The alternative is to use your primary serial port as a console.</help>
					</entry>
				</container>
				<entry name="LOGO">
					<label>Bootup logo</label>
					<help>Enable and select frame buffer bootup logos.</help>
				</entry>
				<entry name="FB_LOGO_EXTRA"/>
				<entry name="LOGO_LINUX_MONO">
					<label>Standard black and white Linux logo</label>
				</entry>
				<entry name="LOGO_LINUX_VGA16">
					<label>Standard 16-color Linux logo</label>
				</entry>
				<entry name="LOGO_LINUX_CLUT224">
					<label>Standard 224-color Linux logo</label>
				</entry>
				<entry name="LOGO_BLACKFIN_VGA16">
					<label>16-colour Blackfin Processor Linux logo</label>
				</entry>
				<entry name="LOGO_BLACKFIN_CLUT224">
					<label>224-colour Blackfin Processor Linux logo</label>
				</entry>
				<entry name="LOGO_DEC_CLUT224">
					<label>224-color Digital Equipment Corporation Linux logo</label>
				</entry>
				<entry name="LOGO_MAC_CLUT224">
					<label>224-color Macintosh Linux logo</label>
				</entry>
				<entry name="LOGO_PARISC_CLUT224">
					<label>224-color PA-RISC Linux logo</label>
				</entry>
				<entry name="LOGO_SGI_CLUT224">
					<label>224-color SGI Linux logo</label>
				</entry>
				<entry name="LOGO_SUN_CLUT224">
					<label>224-color Sun Linux logo</label>
				</entry>
				<entry name="LOGO_SUPERH_MONO">
					<label>Black and white SuperH Linux logo</label>
				</entry>
				<entry name="LOGO_SUPERH_VGA16">
					<label>16-color SuperH Linux logo</label>
				</entry>
				<entry name="LOGO_SUPERH_CLUT224">
					<label>224-color SuperH Linux logo</label>
				</entry>
				<entry name="LOGO_M32R_CLUT224">
					<label>224-color M32R Linux logo</label>
				</entry>
			</container>
			<entry name="SOUND">
				<label>Sound card support</label>
				<help>If you have a sound card in your computer, i.e. if it can say more
than an occasional beep, say Y.  Be sure to have all the information
about your sound card and its configuration down (I/O port,
interrupt and DMA channel), because you will be asked for it.

You want to read the Sound-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;. General information about
the modular sound system is contained in the files
&lt;file:Documentation/sound/oss/Introduction&gt;.  The file
&lt;file:Documentation/sound/oss/README.OSS&gt; contains some slightly
outdated but still useful information as well.  Newer sound
driver documentation is found in &lt;file:Documentation/sound/alsa/*&gt;.

If you have a PnP sound card and you want to configure it at boot
time using the ISA PnP tools (read
&lt;http://www.roestock.demon.co.uk/isapnptools/&gt;), then you need to
compile the sound card support as a module and load that module
after the PnP configuration is finished.  To do this, choose M here
and read &lt;file:Documentation/sound/oss/README.modules&gt;; the module
will be called soundcore.</help>
			</entry>
			<entry name="SOUND_OSS_CORE"/>
			<entry name="SOUND_OSS_CORE_PRECLAIM">
				<label>Preclaim OSS device numbers</label>
				<help>With this option enabled, the kernel will claim all OSS device
numbers if any OSS support (native or emulation) is enabled
whether the respective module is loaded or not and try to load the
appropriate module using sound-slot/service-* and char-major-*
module aliases when one of the device numbers is opened.  With
this option disabled, kernel will only claim actually in-use
device numbers and opening a missing device will generate only the
standard char-major-* aliases.

The only visible difference is use of additional module aliases
and whether OSS sound devices appear multiple times in
/proc/devices.  sound-slot/service-* module aliases are scheduled
to be removed (ie. PRECLAIM won't be available) and this option is
to make the transition easier.  This option can be overridden
during boot using the kernel parameter soundcore.preclaim_oss.

Disabling this allows alternative OSS implementations.

If unsure, say Y.</help>
			</entry>
			<entry name="DMASOUND_ATARI">
				<label>Atari DMA sound support</label>
				<help>If you want to use the internal audio of your Atari in Linux, answer
Y to this question. This will provide a Sun-like /dev/audio,
compatible with the Linux/i386 sound system. Otherwise, say N.

This driver is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you
want). If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="DMASOUND_PAULA">
				<label>Amiga DMA sound support</label>
				<help>If you want to use the internal audio of your Amiga in Linux, answer
Y to this question. This will provide a Sun-like /dev/audio,
compatible with the Linux/i386 sound system. Otherwise, say N.

This driver is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you
want). If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="DMASOUND_Q40">
				<label>Q40 sound support</label>
				<help>If you want to use the internal audio of your Q40 in Linux, answer
Y to this question. This will provide a Sun-like /dev/audio,
compatible with the Linux/i386 sound system. Otherwise, say N.

This driver is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you
want). If you want to compile it as a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="DMASOUND"/>
			<entry name="SND">
				<label>Advanced Linux Sound Architecture</label>
				<help>Say 'Y' or 'M' to enable ALSA (Advanced Linux Sound Architecture),
the new base sound system.

For more information, see &lt;http://www.alsa-project.org/&gt;</help>
			</entry>
			<entry name="SND_TIMER"/>
			<entry name="SND_PCM"/>
			<entry name="SND_PCM_ELD"/>
			<entry name="SND_PCM_IEC958"/>
			<entry name="SND_DMAENGINE_PCM"/>
			<entry name="SND_HWDEP"/>
			<entry name="SND_RAWMIDI"/>
			<entry name="SND_COMPRESS_OFFLOAD"/>
			<entry name="SND_JACK"/>
			<entry name="SND_JACK_INPUT_DEV"/>
			<entry name="SND_SEQUENCER">
				<label>Sequencer support</label>
				<help>Say Y or M to enable MIDI sequencer and router support.  This
feature allows routing and enqueueing of MIDI events.  Events
can be processed at a given time.

Many programs require this feature, so you should enable it
unless you know what you're doing.</help>
			</entry>
			<entry name="SND_SEQ_DUMMY">
				<label>Sequencer dummy client</label>
				<help>Say Y here to enable the dummy sequencer client.  This client
is a simple MIDI-through client: all normal input events are
redirected to the output port immediately.

You don't need this unless you want to connect many MIDI
devices or applications together.

To compile this driver as a module, choose M here: the module
will be called snd-seq-dummy.</help>
			</entry>
			<entry name="SND_OSSEMUL"/>
			<entry name="SND_MIXER_OSS">
				<label>OSS Mixer API</label>
				<help>To enable OSS mixer API emulation (/dev/mixer*), say Y here
and read &lt;file:Documentation/sound/alsa/OSS-Emulation.txt&gt;.

Many programs still use the OSS API, so say Y.

To compile this driver as a module, choose M here: the module
will be called snd-mixer-oss.</help>
			</entry>
			<entry name="SND_PCM_OSS">
				<label>OSS PCM (digital audio) API</label>
				<help>To enable OSS digital audio (PCM) emulation (/dev/dsp*), say Y
here and read &lt;file:Documentation/sound/alsa/OSS-Emulation.txt&gt;.

Many programs still use the OSS API, so say Y.

To compile this driver as a module, choose M here: the module
will be called snd-pcm-oss.</help>
			</entry>
			<entry name="SND_PCM_OSS_PLUGINS">
				<label>OSS PCM (digital audio) API - Include plugin system</label>
				<help>If you disable this option, the ALSA's OSS PCM API will not
support conversion of channels, formats and rates. It will
behave like most of new OSS/Free drivers in 2.4/2.6 kernels.</help>
			</entry>
			<entry name="SND_PCM_TIMER">
				<label>PCM timer interface&quot; if EXPERT</label>
				<help>If you disable this option, pcm timer will be unavailable, so
those stubs that use pcm timer (e.g. dmix, dsnoop &amp; co) may work
incorrectlly.

For some embedded devices, we may disable it to reduce memory
footprint, about 20KB on x86_64 platform.</help>
			</entry>
			<entry name="SND_SEQUENCER_OSS">
				<label>OSS Sequencer API</label>
				<help>Say Y here to enable OSS sequencer emulation (both
/dev/sequencer and /dev/music interfaces).

Many programs still use the OSS API, so say Y.

If you choose M in &quot;Sequencer support&quot; (SND_SEQUENCER),
this will be compiled as a module. The module will be called
snd-seq-oss.</help>
			</entry>
			<entry name="SND_HRTIMER">
				<label>HR-timer backend support</label>
				<help>Say Y here to enable HR-timer backend for ALSA timer.  ALSA uses
the hrtimer as a precise timing source. The ALSA sequencer code
also can use this timing source.

To compile this driver as a module, choose M here: the module
will be called snd-hrtimer.</help>
			</entry>
			<entry name="SND_SEQ_HRTIMER_DEFAULT">
				<label>Use HR-timer as default sequencer timer</label>
				<help>Say Y here to use the HR-timer backend as the default sequencer
timer.</help>
			</entry>
			<entry name="SND_DYNAMIC_MINORS">
				<label>Dynamic device file minor numbers</label>
				<help>If you say Y here, the minor numbers of ALSA device files in
/dev/snd/ are allocated dynamically.  This allows you to have
more than 8 sound cards, but requires a dynamic device file
system like udev.

If you are unsure about this, say N here.</help>
			</entry>
			<entry name="SND_MAX_CARDS">
				<label>Max number of sound cards</label>
				<help>Specify the max number of sound cards that can be assigned
on a single machine.</help>
			</entry>
			<entry name="SND_SUPPORT_OLD_API">
				<label>Support old ALSA API</label>
				<help>Say Y here to support the obsolete ALSA PCM API (ver.0.9.0 rc3
or older).</help>
			</entry>
			<entry name="SND_PROC_FS">
				<label>Sound Proc FS Support&quot; if EXPERT</label>
				<help>Say 'N' to disable Sound proc FS, which may reduce code size about
9KB on x86_64 platform.
If unsure say Y.</help>
			</entry>
			<entry name="SND_VERBOSE_PROCFS">
				<label>Verbose procfs contents</label>
				<help>Say Y here to include code for verbose procfs contents (provides
useful information to developers when a problem occurs).  On the
other side, it makes the ALSA subsystem larger.</help>
			</entry>
			<entry name="SND_VERBOSE_PRINTK">
				<label>Verbose printk</label>
				<help>Say Y here to enable verbose log messages.  These messages
will help to identify source file and position containing
printed messages.

You don't need this unless you're debugging ALSA.</help>
			</entry>
			<entry name="SND_DEBUG">
				<label>Debug</label>
				<help>Say Y here to enable ALSA debug code.</help>
			</entry>
			<entry name="SND_DEBUG_VERBOSE">
				<label>More verbose debug</label>
				<help>Say Y here to enable extra-verbose debugging messages.

Let me repeat: it enables EXTRA-VERBOSE DEBUGGING messages.
So, say Y only if you are ready to be annoyed.</help>
			</entry>
			<entry name="SND_PCM_XRUN_DEBUG">
				<label>Enable PCM ring buffer overrun/underrun debugging</label>
				<help>Say Y to enable the PCM ring buffer overrun/underrun debugging.
It is usually not required, but if you have trouble with
sound clicking when system is loaded, it may help to determine
the process or driver which causes the scheduling gaps.</help>
			</entry>
			<entry name="SND_VMASTER"/>
			<entry name="SND_DMA_SGBUF"/>
			<entry name="SND_RAWMIDI_SEQ"/>
			<entry name="SND_OPL3_LIB_SEQ"/>
			<entry name="SND_OPL4_LIB_SEQ"/>
			<entry name="SND_SBAWE_SEQ"/>
			<entry name="SND_EMU10K1_SEQ"/>
			<entry name="SND_MPU401_UART"/>
			<entry name="SND_OPL3_LIB"/>
			<entry name="SND_OPL4_LIB"/>
			<entry name="SND_VX_LIB"/>
			<entry name="SND_AC97_CODEC"/>
			<entry name="SND_DRIVERS">
				<label>Generic sound devices</label>
				<help>Support for generic sound devices.</help>
			</entry>
			<entry name="SND_PCSP">
				<label>PC-Speaker support (READ HELP!)</label>
				<help>If you don't have a sound card in your computer, you can include a
driver for the PC speaker which allows it to act like a primitive
sound card.
This driver also replaces the pcspkr driver for beeps.

You can compile this as a module which will be called snd-pcsp.

WARNING: if you already have a soundcard, enabling this
driver may lead to a problem. Namely, it may get loaded
before the other sound driver of yours, making the
pc-speaker a default sound device. Which is likely not
what you want. To make this driver play nicely with other
sound driver, you can add this in a configuration file under
/etc/modprobe.d/ directory:
options snd-pcsp index=2

You don't need this driver if you only want your pc-speaker to beep.
You don't need this driver if you have a tablet piezo beeper
in your PC instead of the real speaker.

Say N if you have a sound card.
Say M if you don't.
Say Y only if you really know what you do.</help>
			</entry>
			<entry name="SND_DUMMY">
				<label>Dummy (/dev/null) soundcard</label>
				<help>Say Y here to include the dummy driver.  This driver does
nothing, but emulates various mixer controls and PCM devices.

You don't need this unless you're testing the hardware support
of programs using the ALSA API.

To compile this driver as a module, choose M here: the module
will be called snd-dummy.</help>
			</entry>
			<entry name="SND_ALOOP">
				<label>Generic loopback driver (PCM)</label>
				<help>Say 'Y' or 'M' to include support for the PCM loopback device.
This module returns played samples back to the user space using
the standard ALSA PCM device. The devices are routed 0-&gt;1 and
1-&gt;0, where first number is the playback PCM device and second
number is the capture device. Module creates two PCM devices and
configured number of substreams (see the pcm_substreams module
parameter).

The loopback device allows time sychronization with an external
timing source using the time shift universal control (+-20%
of system time).

To compile this driver as a module, choose M here: the module
will be called snd-aloop.</help>
			</entry>
			<entry name="SND_VIRMIDI">
				<label>Virtual MIDI soundcard</label>
				<help>Say Y here to include the virtual MIDI driver.  This driver
allows to connect applications using raw MIDI devices to
sequencer clients.

If you don't know what MIDI is, say N here.

To compile this driver as a module, choose M here: the module
will be called snd-virmidi.</help>
			</entry>
			<entry name="SND_MTPAV">
				<label>MOTU MidiTimePiece AV multiport MIDI</label>
				<help>To use a MOTU MidiTimePiece AV multiport MIDI adapter
connected to the parallel port, say Y here and make sure that
the standard parallel port driver isn't used for the port.

To compile this driver as a module, choose M here: the module
will be called snd-mtpav.</help>
			</entry>
			<entry name="SND_MTS64">
				<label>ESI Miditerminal 4140 driver</label>
				<help>The ESI Miditerminal 4140 is a 4 In 4 Out MIDI Interface with
additional SMPTE Timecode capabilities for the parallel port.

Say 'Y' to include support for this device.

To compile this driver as a module, chose 'M' here: the module
will be called snd-mts64.</help>
			</entry>
			<entry name="SND_SERIAL_U16550">
				<label>UART16550 serial MIDI driver</label>
				<help>To include support for MIDI serial port interfaces, say Y here
and read &lt;file:Documentation/sound/alsa/serial-u16550.txt&gt;.
This driver works with serial UARTs 16550 and better.

This driver accesses the serial port hardware directly, so
make sure that the standard serial driver isn't used or
deactivated with setserial before loading this driver.

To compile this driver as a module, choose M here: the module
will be called snd-serial-u16550.</help>
			</entry>
			<entry name="SND_MPU401">
				<label>Generic MPU-401 UART driver</label>
				<help>Say Y here to include support for MIDI ports compatible with
the Roland MPU-401 interface in UART mode.

To compile this driver as a module, choose M here: the module
will be called snd-mpu401.</help>
			</entry>
			<entry name="SND_PORTMAN2X4">
				<label>Portman 2x4 driver</label>
				<help>Say Y here to include support for Midiman Portman 2x4 parallel
port MIDI device.

To compile this driver as a module, choose M here: the module
will be called snd-portman2x4.</help>
			</entry>
			<entry name="SND_ML403_AC97CR">
				<label>Xilinx ML403 AC97 Controller Reference</label>
				<help>Say Y here to include support for the
opb_ac97_controller_ref_v1_00_a ip core found in Xilinx's ML403
reference design.

To compile this driver as a module, choose M here: the module
will be called snd-ml403_ac97cr.</help>
			</entry>
			<entry name="SND_AC97_POWER_SAVE">
				<label>AC97 Power-Saving Mode</label>
				<help>Say Y here to enable the aggressive power-saving support of
AC97 codecs.  In this mode, the power-mode is dynamically
controlled at each open/close.

The mode is activated by passing 'power_save=X' to the
snd-ac97-codec driver module, where 'X' is the time-out
value, a nonnegative integer that specifies how many
seconds of idle time the driver must count before it may
put the AC97 into power-save mode;  a value of 0 (zero)
disables the use of this power-save mode.

After the snd-ac97-codec driver module has been loaded,
the 'power_save' parameter can be set via sysfs as follows:

echo 10 &gt; /sys/module/snd_ac97_codec/parameters/power_save

In this case, the time-out is set to 10 seconds; setting
the time-out to 1 second (the minimum activation value)
isn't recommended because many applications try to reopen
the device frequently.  A value of 10 seconds would be a
good choice for normal operations.

See Documentation/sound/alsa/powersave.txt for more details.</help>
			</entry>
			<entry name="SND_AC97_POWER_SAVE_DEFAULT">
				<label>Default time-out for AC97 power-save mode</label>
				<help>The default time-out value in seconds for AC97 automatic
power-save mode.  0 means to disable the power-save mode.

See SND_AC97_POWER_SAVE for more details.</help>
			</entry>
			<entry name="SND_WSS_LIB"/>
			<entry name="SND_SB_COMMON"/>
			<entry name="SND_SB8_DSP"/>
			<entry name="SND_SB16_DSP"/>
			<entry name="SND_ISA">
				<label>ISA sound devices</label>
				<help>Support for sound devices connected via the ISA bus.</help>
			</entry>
			<entry name="SND_ADLIB">
				<label>AdLib FM card</label>
				<help>Say Y here to include support for AdLib FM cards.

To compile this driver as a module, choose M here: the module
will be called snd-adlib.</help>
			</entry>
			<entry name="SND_AD1816A">
				<label>Analog Devices SoundPort AD1816A</label>
				<help>Say Y here to include support for Analog Devices SoundPort
AD1816A or compatible sound chips.

To compile this driver as a module, choose M here: the module
will be called snd-ad1816a.</help>
			</entry>
			<entry name="SND_AD1848">
				<label>Generic AD1848/CS4248 driver</label>
				<help>Say Y here to include support for AD1848 (Analog Devices) or
CS4248 (Cirrus Logic - Crystal Semiconductors) chips.

For newer chips from Cirrus Logic, use the CS4231 or CS4232+
drivers.

To compile this driver as a module, choose M here: the module
will be called snd-ad1848.</help>
			</entry>
			<entry name="SND_ALS100">
				<label>Diamond Tech. DT-019x and Avance Logic ALSxxx</label>
				<help>Say Y here to include support for soundcards based on the
Diamond Technologies DT-019X or Avance Logic chips: ALS007,
ALS100, ALS110, ALS120 and ALS200 chips.

To compile this driver as a module, choose M here: the module
will be called snd-als100.</help>
			</entry>
			<entry name="SND_AZT1605">
				<label>Aztech AZT1605 Driver</label>
				<help>Say Y here to include support for Aztech Sound Galaxy cards
based on the AZT1605 chipset.

To compile this driver as a module, choose M here: the module
will be called snd-azt1605.</help>
			</entry>
			<entry name="SND_AZT2316">
				<label>Aztech AZT2316 Driver</label>
				<help>Say Y here to include support for Aztech Sound Galaxy cards
based on the AZT2316 chipset.

To compile this driver as a module, choose M here: the module
will be called snd-azt2316.</help>
			</entry>
			<entry name="SND_AZT2320">
				<label>Aztech Systems AZT2320</label>
				<help>Say Y here to include support for soundcards based on the
Aztech Systems AZT2320 chip.

To compile this driver as a module, choose M here: the module
will be called snd-azt2320.</help>
			</entry>
			<entry name="SND_CMI8328">
				<label>C-Media CMI8328</label>
				<help>Say Y here to include support for soundcards based on the
C-Media CMI8328 chip.

To compile this driver as a module, choose M here: the module
will be called snd-cmi8328.</help>
			</entry>
			<entry name="SND_CMI8330">
				<label>C-Media CMI8330</label>
				<help>Say Y here to include support for soundcards based on the
C-Media CMI8330 chip.

To compile this driver as a module, choose M here: the module
will be called snd-cmi8330.</help>
			</entry>
			<entry name="SND_CS4231">
				<label>Generic Cirrus Logic CS4231 driver</label>
				<help>Say Y here to include support for CS4231 chips from Cirrus
Logic - Crystal Semiconductors.

To compile this driver as a module, choose M here: the module
will be called snd-cs4231.</help>
			</entry>
			<entry name="SND_CS4236">
				<label>Generic Cirrus Logic CS4232/CS4236+ driver</label>
				<help>Say Y to include support for CS4232,CS4235,CS4236,CS4237B,
CS4238B,CS4239 chips from Cirrus Logic - Crystal
Semiconductors.

To compile this driver as a module, choose M here: the module
will be called snd-cs4236.</help>
			</entry>
			<entry name="SND_ES1688">
				<label>Generic ESS ES688/ES1688 and ES968 PnP driver</label>
				<help>Say Y here to include support for ESS AudioDrive ES688 or
ES1688 chips. Also, this module support cards with ES968 PnP chip.

To compile this driver as a module, choose M here: the module
will be called snd-es1688.</help>
			</entry>
			<entry name="SND_ES18XX">
				<label>Generic ESS ES18xx driver</label>
				<help>Say Y here to include support for ESS AudioDrive ES18xx chips.

To compile this driver as a module, choose M here: the module
will be called snd-es18xx.</help>
			</entry>
			<entry name="SND_SC6000">
				<label>Gallant SC-6000/6600/7000 and Audio Excel DSP 16</label>
				<help>Say Y here to include support for Gallant SC-6000, SC-6600, SC-7000
cards and clones:
Audio Excel DSP 16 and Zoltrix AV302.

These cards are based on CompuMedia ASC-9308 or ASC-9408 chips.

To compile this driver as a module, choose M here: the module
will be called snd-sc6000.</help>
			</entry>
			<entry name="SND_GUSCLASSIC">
				<label>Gravis UltraSound Classic</label>
				<help>Say Y here to include support for Gravis UltraSound Classic
soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-gusclassic.</help>
			</entry>
			<entry name="SND_GUSEXTREME">
				<label>Gravis UltraSound Extreme</label>
				<help>Say Y here to include support for Gravis UltraSound Extreme
soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-gusextreme.</help>
			</entry>
			<entry name="SND_GUSMAX">
				<label>Gravis UltraSound MAX</label>
				<help>Say Y here to include support for Gravis UltraSound MAX
soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-gusmax.</help>
			</entry>
			<entry name="SND_INTERWAVE">
				<label>AMD InterWave, Gravis UltraSound PnP</label>
				<help>Say Y here to include support for AMD InterWave based
soundcards (Gravis UltraSound Plug &amp; Play, STB SoundRage32,
MED3210, Dynasonic Pro, Panasonic PCA761AW).

To compile this driver as a module, choose M here: the module
will be called snd-interwave.</help>
			</entry>
			<entry name="SND_INTERWAVE_STB">
				<label>AMD InterWave + TEA6330T (UltraSound 32-Pro)</label>
				<help>Say Y here to include support for AMD InterWave based
soundcards with a TEA6330T bass and treble regulator
(UltraSound 32-Pro).

To compile this driver as a module, choose M here: the module
will be called snd-interwave-stb.</help>
			</entry>
			<entry name="SND_JAZZ16">
				<label>Media Vision Jazz16 card and compatibles</label>
				<help>Say Y here to include support for soundcards based on the
Media Vision Jazz16 chipset: digital chip MVD1216 (Jazz16),
codec MVA416 (CS4216) and mixer MVA514 (ICS2514).
Media Vision's Jazz16 cards were sold under names Pro Sonic 16,
Premium 3-D and Pro 3-D. There were also OEMs cards with the
Jazz16 chipset.

To compile this driver as a module, choose M here: the module
will be called snd-jazz16.</help>
			</entry>
			<entry name="SND_OPL3SA2">
				<label>Yamaha OPL3-SA2/SA3</label>
				<help>Say Y here to include support for Yamaha OPL3-SA2 and OPL3-SA3
chips.

To compile this driver as a module, choose M here: the module
will be called snd-opl3sa2.</help>
			</entry>
			<entry name="SND_OPTI92X_AD1848">
				<label>OPTi 82C92x - AD1848</label>
				<help>Say Y here to include support for soundcards based on Opti
82C92x or OTI-601 chips and using an AD1848 codec.

To compile this driver as a module, choose M here: the module
will be called snd-opti92x-ad1848.</help>
			</entry>
			<entry name="SND_OPTI92X_CS4231">
				<label>OPTi 82C92x - CS4231</label>
				<help>Say Y here to include support for soundcards based on Opti
82C92x chips and using a CS4231 codec.

To compile this driver as a module, choose M here: the module
will be called snd-opti92x-cs4231.</help>
			</entry>
			<entry name="SND_OPTI93X">
				<label>OPTi 82C93x</label>
				<help>Say Y here to include support for soundcards based on Opti
82C93x chips.

To compile this driver as a module, choose M here: the module
will be called snd-opti93x.</help>
			</entry>
			<entry name="SND_MIRO">
				<label>Miro miroSOUND PCM1pro/PCM12/PCM20radio driver</label>
				<help>Say 'Y' or 'M' to include support for Miro miroSOUND PCM1 pro,
miroSOUND PCM12 and miroSOUND PCM20 Radio soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-miro.</help>
			</entry>
			<entry name="SND_SB8">
				<label>Sound Blaster 1.0/2.0/Pro (8-bit)</label>
				<help>Say Y here to include support for Creative Sound Blaster 1.0/
2.0/Pro (8-bit) or 100% compatible soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-sb8.</help>
			</entry>
			<entry name="SND_SB16">
				<label>Sound Blaster 16 (PnP)</label>
				<help>Say Y here to include support for Sound Blaster 16 soundcards
(including the Plug and Play version).

To compile this driver as a module, choose M here: the module
will be called snd-sb16.</help>
			</entry>
			<entry name="SND_SBAWE">
				<label>Sound Blaster AWE (32,64) (PnP)</label>
				<help>Say Y here to include support for Sound Blaster AWE soundcards
(including the Plug and Play version).

To compile this driver as a module, choose M here: the module
will be called snd-sbawe.</help>
			</entry>
			<entry name="SND_SB16_CSP">
				<label>Sound Blaster 16/AWE CSP support</label>
				<help>Say Y here to include support for the CSP core.  This special
coprocessor can do variable tasks like various compression and
decompression algorithms.</help>
			</entry>
			<entry name="SND_SSCAPE">
				<label>Ensoniq SoundScape driver</label>
				<help>Say Y here to include support for Ensoniq SoundScape
and Ensoniq OEM soundcards.

The PCM audio is supported on SoundScape Classic, Elite, PnP
and VIVO cards. The supported OEM cards are SPEA Media FX and
Reveal SC-600.
The MIDI support is very experimental and requires binary
firmware files called &quot;scope.cod&quot; and &quot;sndscape.co?&quot; where the
? is digit 0, 1, 2, 3 or 4. The firmware files can be found
in DOS or Windows driver packages. One has to put the firmware
files into the /lib/firmware directory.

To compile this driver as a module, choose M here: the module
will be called snd-sscape.</help>
			</entry>
			<entry name="SND_WAVEFRONT">
				<label>Turtle Beach Maui,Tropez,Tropez+ (Wavefront)</label>
				<help>Say Y here to include support for Turtle Beach Maui, Tropez
and Tropez+ soundcards based on the Wavefront chip.

To compile this driver as a module, choose M here: the module
will be called snd-wavefront.</help>
			</entry>
			<entry name="SND_MSND_PINNACLE">
				<label>Turtle Beach MultiSound Pinnacle/Fiji driver</label>
				<help>Say Y to include support for Turtle Beach MultiSound Pinnacle/
Fiji soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-msnd-pinnacle.</help>
			</entry>
			<entry name="SND_MSND_CLASSIC">
				<label>Support for Turtle Beach MultiSound Classic, Tahiti, Monterey</label>
				<help>Say M here if you have a Turtle Beach MultiSound Classic, Tahiti or
Monterey (not for the Pinnacle or Fiji).

See &lt;file:Documentation/sound/oss/MultiSound&gt; for important information
about this driver.  Note that it has been discontinued, but the
Voyetra Turtle Beach knowledge base entry for it is still available
at &lt;http://www.turtlebeach.com/site/kb_ftp/790.asp&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-msnd-classic.</help>
			</entry>
			<entry name="SND_PCI">
				<label>PCI sound devices</label>
				<help>Support for sound devices connected via the PCI bus.</help>
			</entry>
			<entry name="SND_AD1889">
				<label>Analog Devices AD1889</label>
				<help>Say Y here to include support for the integrated AC97 sound
device found in particular on the Hewlett-Packard [BCJ]-xxx0
class PA-RISC workstations, using the AD1819 codec.

To compile this as a module, choose M here: the module
will be called snd-ad1889.</help>
			</entry>
			<entry name="SND_ALS300">
				<label>Avance Logic ALS300/ALS300+</label>
				<help>Say 'Y' or 'M' to include support for Avance Logic ALS300/ALS300+

To compile this driver as a module, choose M here: the module
will be called snd-als300</help>
			</entry>
			<entry name="SND_ALS4000">
				<label>Avance Logic ALS4000</label>
				<help>Say Y here to include support for soundcards based on Avance Logic
ALS4000 chips.

To compile this driver as a module, choose M here: the module
will be called snd-als4000.</help>
			</entry>
			<entry name="SND_ALI5451">
				<label>ALi M5451 PCI Audio Controller</label>
				<help>Say Y here to include support for the integrated AC97 sound
device on motherboards using the ALi M5451 Audio Controller
(M1535/M1535D/M1535+/M1535D+ south bridges).  Newer chipsets
use the &quot;Intel/SiS/nVidia/AMD/ALi AC97 Controller&quot; driver.

To compile this driver as a module, choose M here: the module
will be called snd-ali5451.</help>
			</entry>
			<entry name="SND_ASIHPI">
				<label>AudioScience ASIxxxx</label>
				<help>Say Y here to include support for AudioScience ASI sound cards.

To compile this driver as a module, choose M here: the module
will be called snd-asihpi.</help>
			</entry>
			<entry name="SND_ATIIXP">
				<label>ATI IXP AC97 Controller</label>
				<help>Say Y here to include support for the integrated AC97 sound
device on motherboards with ATI chipsets (ATI IXP 150/200/250/
300/400).

To compile this driver as a module, choose M here: the module
will be called snd-atiixp.</help>
			</entry>
			<entry name="SND_ATIIXP_MODEM">
				<label>ATI IXP Modem</label>
				<help>Say Y here to include support for the integrated MC97 modem on
motherboards with ATI chipsets (ATI IXP 150/200/250).

To compile this driver as a module, choose M here: the module
will be called snd-atiixp-modem.</help>
			</entry>
			<entry name="SND_AU8810">
				<label>Aureal Advantage</label>
				<help>Say Y here to include support for Aureal Advantage soundcards.

Supported features: Hardware Mixer, SRC, EQ and SPDIF output.
3D support code is in place, but not yet useable. For more info,
email the ALSA developer list, or &lt;mjander@users.sourceforge.net&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-au8810.</help>
			</entry>
			<entry name="SND_AU8820">
				<label>Aureal Vortex</label>
				<help>Say Y here to include support for Aureal Vortex soundcards.

Supported features: Hardware Mixer and SRC. For more info, email
the ALSA developer list, or &lt;mjander@users.sourceforge.net&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-au8820.</help>
			</entry>
			<entry name="SND_AU8830">
				<label>Aureal Vortex 2</label>
				<help>Say Y here to include support for Aureal Vortex 2 soundcards.

Supported features: Hardware Mixer, SRC, EQ and SPDIF output.
3D support code is in place, but not yet useable. For more info,
email the ALSA developer list, or &lt;mjander@users.sourceforge.net&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-au8830.</help>
			</entry>
			<entry name="SND_AW2">
				<label>Emagic Audiowerk 2</label>
				<help>Say Y here to include support for Emagic Audiowerk 2 soundcards.

Supported features: Analog and SPDIF output. Analog or SPDIF input.
Note: Switch between analog and digital input does not always work.
It can produce continuous noise. The workaround is to switch again
(and again) between digital and analog input until it works.

To compile this driver as a module, choose M here: the module
will be called snd-aw2.</help>
			</entry>
			<entry name="SND_AZT3328">
				<label>Aztech AZF3328 / PCI168</label>
				<help>Say Y here to include support for Aztech AZF3328 (PCI168)
soundcards.

Supported features: AC97-&quot;conformant&quot; mixer, MPU401/OPL3, analog I/O
(16bit/8bit, many sample rates [&lt;= 66.2kHz], NO hardware mixing),
Digital Enhanced Game Port, 1.024MHz multimedia sequencer timer,
ext. codec (I2S port), onboard amp (4W/4Ohms/ch), suspend/resume.

To compile this driver as a module, choose M here: the module
will be called snd-azt3328.</help>
			</entry>
			<entry name="SND_BT87X">
				<label>Bt87x Audio Capture</label>
				<help>If you want to record audio from TV cards based on
Brooktree Bt878/Bt879 chips, say Y here and read
&lt;file:Documentation/sound/alsa/Bt87x.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-bt87x.</help>
			</entry>
			<entry name="SND_BT87X_OVERCLOCK">
				<label>Bt87x Audio overclocking</label>
				<help>Say Y here if 448000 Hz isn't enough for you and you want to
record from the analog input with up to 1792000 Hz.

Higher sample rates won't hurt your hardware, but audio
quality may suffer.</help>
			</entry>
			<entry name="SND_CA0106">
				<label>SB Audigy LS / Live 24bit</label>
				<help>Say Y here to include support for the Sound Blaster Audigy LS
and Live 24bit.

To compile this driver as a module, choose M here: the module
will be called snd-ca0106.</help>
			</entry>
			<entry name="SND_CMIPCI">
				<label>C-Media 8338, 8738, 8768, 8770</label>
				<help>If you want to use soundcards based on C-Media CMI8338, CMI8738,
CMI8768 or CMI8770 chips, say Y here and read
&lt;file:Documentation/sound/alsa/CMIPCI.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-cmipci.</help>
			</entry>
			<entry name="SND_OXYGEN_LIB"/>
			<entry name="SND_OXYGEN">
				<label>C-Media 8786, 8787, 8788 (Oxygen)</label>
				<help>Say Y here to include support for sound cards based on the
C-Media CMI8788 (Oxygen HD Audio) chip:
* Asound A-8788
* Asus Xonar DG/DGX
* AuzenTech X-Meridian
* AuzenTech X-Meridian 2G
* Bgears b-Enspirer
* Club3D Theatron DTS
* HT-Omega Claro (plus)
* HT-Omega Claro halo (XT)
* Kuroutoshikou CMI8787-HG2PCI
* Razer Barracuda AC-1
* Sondigo Inferno
* TempoTec/MediaTek HiFier Fantasia
* TempoTec/MediaTek HiFier Serenade

To compile this driver as a module, choose M here: the module
will be called snd-oxygen.</help>
			</entry>
			<entry name="SND_CS4281">
				<label>Cirrus Logic (Sound Fusion) CS4281</label>
				<help>Say Y here to include support for Cirrus Logic CS4281 chips.

To compile this driver as a module, choose M here: the module
will be called snd-cs4281.</help>
			</entry>
			<entry name="SND_CS46XX">
				<label>Cirrus Logic (Sound Fusion) CS4280/CS461x/CS462x/CS463x</label>
				<help>Say Y here to include support for Cirrus Logic CS4610/CS4612/
CS4614/CS4615/CS4622/CS4624/CS4630/CS4280 chips.

To compile this driver as a module, choose M here: the module
will be called snd-cs46xx.</help>
			</entry>
			<entry name="SND_CS46XX_NEW_DSP">
				<label>Cirrus Logic (Sound Fusion) New DSP support</label>
				<help>Say Y here to use a new DSP image for SPDIF and dual codecs.

This works better than the old code, so say Y.</help>
			</entry>
			<entry name="SND_CS5530">
				<label>CS5530 Audio</label>
				<help>Say Y here to include support for audio on Cyrix/NatSemi CS5530 chips.

To compile this driver as a module, choose M here: the module
will be called snd-cs5530.</help>
			</entry>
			<entry name="SND_CS5535AUDIO">
				<label>CS5535/CS5536 Audio</label>
				<help>Say Y here to include support for audio on CS5535 chips. It is
referred to as NS CS5535 IO or AMD CS5535 IO companion in
various literature. This driver also supports the CS5536 audio
device. However, for both chips, on certain boards, you may
need to use ac97_quirk=hp_only if your board has physically
mapped headphone out to master output. If that works for you,
send lspci -vvv output to the mailing list so that your board
can be identified in the quirks list.

To compile this driver as a module, choose M here: the module
will be called snd-cs5535audio.</help>
			</entry>
			<entry name="SND_CTXFI">
				<label>Creative Sound Blaster X-Fi</label>
				<help>If you want to use soundcards based on Creative Sound Blastr X-Fi
boards with 20k1 or 20k2 chips, say Y here.

To compile this driver as a module, choose M here: the module
will be called snd-ctxfi.</help>
			</entry>
			<entry name="SND_DARLA20">
				<label>(Echoaudio) Darla20</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Darla.

To compile this driver as a module, choose M here: the module
will be called snd-darla20</help>
			</entry>
			<entry name="SND_GINA20">
				<label>(Echoaudio) Gina20</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Gina.

To compile this driver as a module, choose M here: the module
will be called snd-gina20</help>
			</entry>
			<entry name="SND_LAYLA20">
				<label>(Echoaudio) Layla20</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Layla.

To compile this driver as a module, choose M here: the module
will be called snd-layla20</help>
			</entry>
			<entry name="SND_DARLA24">
				<label>(Echoaudio) Darla24</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Darla24.

To compile this driver as a module, choose M here: the module
will be called snd-darla24</help>
			</entry>
			<entry name="SND_GINA24">
				<label>(Echoaudio) Gina24</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Gina24.

To compile this driver as a module, choose M here: the module
will be called snd-gina24</help>
			</entry>
			<entry name="SND_LAYLA24">
				<label>(Echoaudio) Layla24</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Layla24.

To compile this driver as a module, choose M here: the module
will be called snd-layla24</help>
			</entry>
			<entry name="SND_MONA">
				<label>(Echoaudio) Mona</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Mona.

To compile this driver as a module, choose M here: the module
will be called snd-mona</help>
			</entry>
			<entry name="SND_MIA">
				<label>(Echoaudio) Mia</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Mia and Mia-midi.

To compile this driver as a module, choose M here: the module
will be called snd-mia</help>
			</entry>
			<entry name="SND_ECHO3G">
				<label>(Echoaudio) 3G cards</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Gina3G and Layla3G.

To compile this driver as a module, choose M here: the module
will be called snd-echo3g</help>
			</entry>
			<entry name="SND_INDIGO">
				<label>(Echoaudio) Indigo</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Indigo.

To compile this driver as a module, choose M here: the module
will be called snd-indigo</help>
			</entry>
			<entry name="SND_INDIGOIO">
				<label>(Echoaudio) Indigo IO</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Indigo IO.

To compile this driver as a module, choose M here: the module
will be called snd-indigoio</help>
			</entry>
			<entry name="SND_INDIGODJ">
				<label>(Echoaudio) Indigo DJ</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Indigo DJ.

To compile this driver as a module, choose M here: the module
will be called snd-indigodj</help>
			</entry>
			<entry name="SND_INDIGOIOX">
				<label>(Echoaudio) Indigo IOx</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Indigo IOx.

To compile this driver as a module, choose M here: the module
will be called snd-indigoiox</help>
			</entry>
			<entry name="SND_INDIGODJX">
				<label>(Echoaudio) Indigo DJx</label>
				<help>Say 'Y' or 'M' to include support for Echoaudio Indigo DJx.

To compile this driver as a module, choose M here: the module
will be called snd-indigodjx</help>
			</entry>
			<entry name="SND_EMU10K1">
				<label>Emu10k1 (SB Live!, Audigy, E-mu APS)</label>
				<help>Say Y to include support for Sound Blaster PCI 512, Live!,
Audigy and E-mu APS (partially supported) soundcards.

The confusing multitude of mixer controls is documented in
&lt;file:Documentation/sound/alsa/SB-Live-mixer.txt&gt; and
&lt;file:Documentation/sound/alsa/Audigy-mixer.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-emu10k1.</help>
			</entry>
			<entry name="SND_EMU10K1X">
				<label>Emu10k1X (Dell OEM Version)</label>
				<help>Say Y here to include support for the Dell OEM version of the
Sound Blaster Live!.

To compile this driver as a module, choose M here: the module
will be called snd-emu10k1x.</help>
			</entry>
			<entry name="SND_ENS1370">
				<label>(Creative) Ensoniq AudioPCI 1370</label>
				<help>Say Y here to include support for Ensoniq AudioPCI ES1370 chips.

To compile this driver as a module, choose M here: the module
will be called snd-ens1370.</help>
			</entry>
			<entry name="SND_ENS1371">
				<label>(Creative) Ensoniq AudioPCI 1371/1373</label>
				<help>Say Y here to include support for Ensoniq AudioPCI ES1371 chips and
Sound Blaster PCI 64 or 128 soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-ens1371.</help>
			</entry>
			<entry name="SND_ES1938">
				<label>ESS ES1938/1946/1969 (Solo-1)</label>
				<help>Say Y here to include support for soundcards based on ESS Solo-1
(ES1938, ES1946, ES1969) chips.

To compile this driver as a module, choose M here: the module
will be called snd-es1938.</help>
			</entry>
			<entry name="SND_ES1968">
				<label>ESS ES1968/1978 (Maestro-1/2/2E)</label>
				<help>Say Y here to include support for soundcards based on ESS Maestro
1/2/2E chips.

To compile this driver as a module, choose M here: the module
will be called snd-es1968.</help>
			</entry>
			<entry name="SND_ES1968_INPUT">
				<label>Enable input device for es1968 volume buttons</label>
				<help>If you say Y here, you will get an input device which reports
keypresses for the volume buttons connected to the es1968 chip.
If you say N the buttons will directly control the master volume.
It is recommended to say Y.</help>
			</entry>
			<entry name="SND_ES1968_RADIO">
				<label>Enable TEA5757 radio tuner support for es1968</label>
				<help>Say Y here to include support for TEA5757 radio tuner integrated on
some MediaForte cards (e.g. SF64-PCE2).</help>
			</entry>
			<entry name="SND_FM801">
				<label>ForteMedia FM801</label>
				<help>Say Y here to include support for soundcards based on the ForteMedia
FM801 chip.

To compile this driver as a module, choose M here: the module
will be called snd-fm801.</help>
			</entry>
			<entry name="SND_FM801_TEA575X_BOOL">
				<label>ForteMedia FM801 + TEA5757 tuner</label>
				<help>Say Y here to include support for soundcards based on the ForteMedia
FM801 chip with a TEA5757 tuner (MediaForte SF256-PCS, SF256-PCP and
SF64-PCR) into the snd-fm801 driver.</help>
			</entry>
			<entry name="SND_HDSP">
				<label>RME Hammerfall DSP Audio</label>
				<help>Say Y here to include support for RME Hammerfall DSP Audio
soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-hdsp.</help>
			</entry>
			<entry name="SND_HDSPM">
				<label>RME Hammerfall DSP MADI/RayDAT/AIO</label>
				<help>Say Y here to include support for RME Hammerfall DSP MADI,
RayDAT and AIO soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-hdspm.</help>
			</entry>
			<entry name="SND_ICE1712">
				<label>ICEnsemble ICE1712 (Envy24)</label>
				<help>Say Y here to include support for soundcards based on the
ICE1712 (Envy24) chip.

Currently supported hardware is: M-Audio Delta 1010(LT),
DiO 2496, 66, 44, 410, Audiophile 24/96; Digigram VX442;
TerraTec EWX 24/96, EWS 88MT/D, DMX 6Fire, Phase 88;
Hoontech SoundTrack DSP 24/Value/Media7.1; Event EZ8;
Lionstracs Mediastation, Terrasoniq TS 88.

To compile this driver as a module, choose M here: the module
will be called snd-ice1712.</help>
			</entry>
			<entry name="SND_ICE1724">
				<label>ICE/VT1724/1720 (Envy24HT/PT)</label>
				<help>Say Y here to include support for soundcards based on
ICE/VT1724/1720 (Envy24HT/PT) chips.

Currently supported hardware is: AMP AUDIO2000; M-Audio
Revolution 5.1, 7.1, Audiophile 192; TerraTec Aureon 5.1 Sky,
7.1 Space/Universe, Phase 22/28; Onkyo SE-90PCI, SE-200PCI;
AudioTrak Prodigy 192, 7.1 (HIFI/LT/XT), HD2; Hercules
Fortissimo IV; ESI Juli@; Pontis MS300; EGO-SYS WaveTerminal
192M; Albatron K8X800 Pro II; Chaintech ZNF3-150/250, 9CJS,
AV-710; Shuttle SN25P; Philips PSC724 Ultimate Edge.

To compile this driver as a module, choose M here: the module
will be called snd-ice1724.</help>
			</entry>
			<entry name="SND_INTEL8X0">
				<label>Intel/SiS/nVidia/AMD/ALi AC97 Controller</label>
				<help>Say Y here to include support for the integrated AC97 sound
device on motherboards with Intel/SiS/nVidia/AMD chipsets, or
ALi chipsets using the M5455 Audio Controller.  (There is a
separate driver for ALi M5451 Audio Controllers.)

To compile this driver as a module, choose M here: the module
will be called snd-intel8x0.</help>
			</entry>
			<entry name="SND_INTEL8X0M">
				<label>Intel/SiS/nVidia/AMD MC97 Modem</label>
				<help>Say Y here to include support for the integrated MC97 modem on
motherboards with Intel/SiS/nVidia/AMD chipsets.

To compile this driver as a module, choose M here: the module
will be called snd-intel8x0m.</help>
			</entry>
			<entry name="SND_KORG1212">
				<label>Korg 1212 IO</label>
				<help>Say Y here to include support for Korg 1212IO soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-korg1212.</help>
			</entry>
			<entry name="SND_LOLA">
				<label>Digigram Lola</label>
				<help>Say Y to include support for Digigram Lola boards.

To compile this driver as a module, choose M here: the module
will be called snd-lola.</help>
			</entry>
			<entry name="SND_LX6464ES">
				<label>Digigram LX6464ES</label>
				<help>Say Y here to include support for Digigram LX6464ES boards.

To compile this driver as a module, choose M here: the module
will be called snd-lx6464es.</help>
			</entry>
			<entry name="SND_MAESTRO3">
				<label>ESS Allegro/Maestro3</label>
				<help>Say Y here to include support for soundcards based on ESS Maestro 3
(Allegro) chips.

To compile this driver as a module, choose M here: the module
will be called snd-maestro3.</help>
			</entry>
			<entry name="SND_MAESTRO3_INPUT">
				<label>Enable input device for maestro3 volume buttons</label>
				<help>If you say Y here, you will get an input device which reports
keypresses for the volume buttons connected to the maestro3 chip.
If you say N the buttons will directly control the master volume.
It is recommended to say Y.</help>
			</entry>
			<entry name="SND_MIXART">
				<label>Digigram miXart</label>
				<help>If you want to use Digigram miXart soundcards, say Y here and
read &lt;file:Documentation/sound/alsa/MIXART.txt&gt;.

To compile this driver as a module, choose M here: the module
will be called snd-mixart.</help>
			</entry>
			<entry name="SND_NM256">
				<label>NeoMagic NM256AV/ZX</label>
				<help>Say Y here to include support for NeoMagic NM256AV/ZX chips.

To compile this driver as a module, choose M here: the module
will be called snd-nm256.</help>
			</entry>
			<entry name="SND_PCXHR">
				<label>Digigram PCXHR</label>
				<help>Say Y here to include support for Digigram PCXHR boards.

To compile this driver as a module, choose M here: the module
will be called snd-pcxhr.</help>
			</entry>
			<entry name="SND_RIPTIDE">
				<label>Conexant Riptide</label>
				<help>Say 'Y' or 'M' to include support for Conexant Riptide chip.

To compile this driver as a module, choose M here: the module
will be called snd-riptide</help>
			</entry>
			<entry name="SND_RME32">
				<label>RME Digi32, 32/8, 32 PRO</label>
				<help>Say Y to include support for RME Digi32, Digi32 PRO and
Digi32/8 (Sek'd Prodif32, Prodif96 and Prodif Gold) audio
devices.

To compile this driver as a module, choose M here: the module
will be called snd-rme32.</help>
			</entry>
			<entry name="SND_RME96">
				<label>RME Digi96, 96/8, 96/8 PRO</label>
				<help>Say Y here to include support for RME Digi96, Digi96/8 and
Digi96/8 PRO/PAD/PST soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-rme96.</help>
			</entry>
			<entry name="SND_RME9652">
				<label>RME Digi9652 (Hammerfall)</label>
				<help>Say Y here to include support for RME Hammerfall (RME
Digi9652/Digi9636) soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-rme9652.</help>
			</entry>
			<entry name="SND_SE6X">
				<label>Studio Evolution SE6X</label>
				<help>Say Y or M here only if you actually have this sound card.</help>
			</entry>
			<entry name="SND_SIS7019">
				<label>SiS 7019 Audio Accelerator</label>
				<help>Say Y here to include support for the SiS 7019 Audio Accelerator.

To compile this driver as a module, choose M here: the module
will be called snd-sis7019.</help>
			</entry>
			<entry name="SND_SONICVIBES">
				<label>S3 SonicVibes</label>
				<help>Say Y here to include support for soundcards based on the S3
SonicVibes chip.

To compile this driver as a module, choose M here: the module
will be called snd-sonicvibes.</help>
			</entry>
			<entry name="SND_TRIDENT">
				<label>Trident 4D-Wave DX/NX; SiS 7018</label>
				<help>Say Y here to include support for soundcards based on Trident
4D-Wave DX/NX or SiS 7018 chips.

To compile this driver as a module, choose M here: the module
will be called snd-trident.</help>
			</entry>
			<entry name="SND_VIA82XX">
				<label>VIA 82C686A/B, 8233/8235 AC97 Controller</label>
				<help>Say Y here to include support for the integrated AC97 sound
device on motherboards with VIA chipsets.

To compile this driver as a module, choose M here: the module
will be called snd-via82xx.</help>
			</entry>
			<entry name="SND_VIA82XX_MODEM">
				<label>VIA 82C686A/B, 8233 based Modems</label>
				<help>Say Y here to include support for the integrated MC97 modem on
motherboards with VIA chipsets.

To compile this driver as a module, choose M here: the module
will be called snd-via82xx-modem.</help>
			</entry>
			<entry name="SND_VIRTUOSO">
				<label>Asus Virtuoso 66/100/200 (Xonar)</label>
				<help>Say Y here to include support for sound cards based on the
Asus AV66/AV100/AV200 chips, i.e., Xonar D1, DX, D2, D2X, DS, DSX,
Essence ST (Deluxe), and Essence STX (II).
Support for the HDAV1.3 (Deluxe) and HDAV1.3 Slim is experimental;
for the Xense, missing.

To compile this driver as a module, choose M here: the module
will be called snd-virtuoso.</help>
			</entry>
			<entry name="SND_VX222">
				<label>Digigram VX222</label>
				<help>Say Y here to include support for Digigram VX222 soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-vx222.</help>
			</entry>
			<entry name="SND_YMFPCI">
				<label>Yamaha YMF724/740/744/754</label>
				<help>Say Y here to include support for Yamaha PCI audio chips -
YMF724, YMF724F, YMF740, YMF740C, YMF744, YMF754.

To compile this driver as a module, choose M here: the module
will be called snd-ymfpci.</help>
			</entry>
			<container name="HD_Audio">
				<label>HD-Audio</label>
				<entry name="SND_HDA"/>
				<entry name="SND_HDA_INTEL">
					<label>HD Audio PCI</label>
					<help>Say Y here to include support for Intel &quot;High Definition
Audio&quot; (Azalia) and its compatible devices.

This option enables the HD-audio controller.  Don't forget
to choose the appropriate codec options below.

To compile this driver as a module, choose M here: the module
will be called snd-hda-intel.</help>
				</entry>
				<entry name="SND_HDA_TEGRA">
					<label>NVIDIA Tegra HD Audio</label>
					<help>Say Y here to support the HDA controller present in NVIDIA
Tegra SoCs

This options enables support for the HD Audio controller
present in some NVIDIA Tegra SoCs, used to communicate audio
to the HDMI output.

To compile this driver as a module, choose M here: the module
will be called snd-hda-tegra.</help>
				</entry>
				<entry name="SND_HDA_HWDEP">
					<label>Build hwdep interface for HD-audio driver</label>
					<help>Say Y here to build a hwdep interface for HD-audio driver.
This interface can be used for out-of-band communication
with codecs for debugging purposes.</help>
				</entry>
				<entry name="SND_HDA_RECONFIG">
					<label>Allow dynamic codec reconfiguration</label>
					<help>Say Y here to enable the HD-audio codec re-configuration feature.
It allows user to clear the whole codec configuration, change the
codec setup, add extra verbs, and re-configure the codec dynamically.

Note that this item alone doesn't provide the sysfs interface, but
enables the feature just for the patch loader below.
If you need the traditional sysfs entries for the manual interaction,
turn on CONFIG_SND_HDA_HWDEP as well.</help>
				</entry>
				<entry name="SND_HDA_INPUT_BEEP">
					<label>Support digital beep via input layer</label>
					<help>Say Y here to build a digital beep interface for HD-audio
driver. This interface is used to generate digital beeps.</help>
				</entry>
				<entry name="SND_HDA_INPUT_BEEP_MODE">
					<label>Digital beep registration mode (0=off, 1=on)</label>
					<help>Set 0 to disable the digital beep interface for HD-audio by default.
Set 1 to always enable the digital beep interface for HD-audio by
default.</help>
				</entry>
				<entry name="SND_HDA_PATCH_LOADER">
					<label>Support initialization patch loading for HD-audio</label>
					<help>Say Y here to allow the HD-audio driver to load a pseudo
firmware file (&quot;patch&quot;) for overriding the BIOS setup at
start up.  The &quot;patch&quot; file can be specified via patch module
option, such as patch=hda-init.</help>
				</entry>
				<entry name="SND_HDA_CODEC_REALTEK">
					<label>Build Realtek HD-audio codec support</label>
					<help>Say Y or M here to include Realtek HD-audio codec support in
snd-hda-intel driver, such as ALC880.</help>
				</entry>
				<entry name="SND_HDA_CODEC_ANALOG">
					<label>Build Analog Device HD-audio codec support</label>
					<help>Say Y or M here to include Analog Device HD-audio codec support in
snd-hda-intel driver, such as AD1986A.</help>
				</entry>
				<entry name="SND_HDA_CODEC_SIGMATEL">
					<label>Build IDT/Sigmatel HD-audio codec support</label>
					<help>Say Y or M here to include IDT (Sigmatel) HD-audio codec support in
snd-hda-intel driver, such as STAC9200.</help>
				</entry>
				<entry name="SND_HDA_CODEC_VIA">
					<label>Build VIA HD-audio codec support</label>
					<help>Say Y or M here to include VIA HD-audio codec support in
snd-hda-intel driver, such as VT1708.</help>
				</entry>
				<entry name="SND_HDA_CODEC_HDMI">
					<label>Build HDMI/DisplayPort HD-audio codec support</label>
					<help>Say Y or M here to include HDMI and DisplayPort HD-audio codec
support in snd-hda-intel driver.  This includes all AMD/ATI,
Intel and Nvidia HDMI/DisplayPort codecs.</help>
				</entry>
				<entry name="SND_HDA_CODEC_CIRRUS">
					<label>Build Cirrus Logic codec support</label>
					<help>Say Y or M here to include Cirrus Logic codec support in
snd-hda-intel driver, such as CS4206.</help>
				</entry>
				<entry name="SND_HDA_CODEC_CONEXANT">
					<label>Build Conexant HD-audio codec support</label>
					<help>Say Y or M here to include Conexant HD-audio codec support in
snd-hda-intel driver, such as CX20549.</help>
				</entry>
				<entry name="SND_HDA_CODEC_CA0110">
					<label>Build Creative CA0110-IBG codec support</label>
					<help>Say Y or M here to include Creative CA0110-IBG codec support in
snd-hda-intel driver, found on some Creative X-Fi cards.</help>
				</entry>
				<entry name="SND_HDA_CODEC_CA0132">
					<label>Build Creative CA0132 codec support</label>
					<help>Say Y or M here to include Creative CA0132 codec support in
snd-hda-intel driver.</help>
				</entry>
				<entry name="SND_HDA_CODEC_CA0132_DSP">
					<label>Support new DSP code for CA0132 codec</label>
					<help>Say Y here to enable the DSP for Creative CA0132 for extended
features like equalizer or echo cancellation.

Note that this option requires the external firmware file
(ctefx.bin).</help>
				</entry>
				<entry name="SND_HDA_CODEC_CMEDIA">
					<label>Build C-Media HD-audio codec support</label>
					<help>Say Y or M here to include C-Media HD-audio codec support in
snd-hda-intel driver, such as CMI9880.</help>
				</entry>
				<entry name="SND_HDA_CODEC_SI3054">
					<label>Build Silicon Labs 3054 HD-modem codec support</label>
					<help>Say Y or M here to include Silicon Labs 3054 HD-modem codec
(and compatibles) support in snd-hda-intel driver.</help>
				</entry>
				<entry name="SND_HDA_GENERIC">
					<label>Enable generic HD-audio codec parser</label>
					<help>Say Y or M here to enable the generic HD-audio codec parser
in snd-hda-intel driver.</help>
				</entry>
				<entry name="SND_HDA_POWER_SAVE_DEFAULT">
					<label>Default time-out for HD-audio power-save mode</label>
					<help>The default time-out value in seconds for HD-audio automatic
power-save mode.  0 means to disable the power-save mode.</help>
				</entry>
			</container>
			<entry name="SND_HDA_CORE"/>
			<entry name="SND_HDA_DSP_LOADER"/>
			<entry name="SND_HDA_I915"/>
			<entry name="SND_HDA_EXT_CORE"/>
			<entry name="SND_HDA_PREALLOC_SIZE">
				<label>Pre-allocated buffer size for HD-audio driver</label>
				<help>Specifies the default pre-allocated buffer-size in kB for the
HD-audio driver.  A larger buffer (e.g. 2048) is preferred
for systems using PulseAudio.  The default 64 is chosen just
for compatibility reasons.

Note that the pre-allocation size can be changed dynamically
via a proc file (/proc/asound/card*/pcm*/sub*/prealloc), too.
</help>
			</entry>
			<entry name="SND_PPC">
				<label>PowerPC sound devices</label>
				<help>Support for sound devices specific to PowerPC architectures.</help>
			</entry>
			<entry name="SND_POWERMAC">
				<label>PowerMac (AWACS, DACA, Burgundy, Tumbler, Keywest)</label>
				<help>Say Y here to include support for the integrated sound device.

To compile this driver as a module, choose M here: the module
will be called snd-powermac.</help>
			</entry>
			<entry name="SND_POWERMAC_AUTO_DRC">
				<label>Toggle DRC automatically at headphone/line plug-in</label>
				<help>Say Y here to enable the automatic toggle of DRC (dynamic
range compression) on Tumbler/Snapper.
If this feature is enabled, DRC is turned off when the
headphone/line jack is plugged, and turned on when unplugged.

Note that you can turn on/off DRC manually even without this
option.</help>
			</entry>
			<entry name="SND_PS3">
				<label>PS3 Audio support</label>
				<help>Say Y here to include support for audio on the PS3

To compile this driver as a module, choose M here: the module
will be called snd_ps3.</help>
			</entry>
			<entry name="SND_PS3_DEFAULT_START_DELAY">
				<label>Startup delay time in ms</label>
			</entry>
			<entry name="SND_AOA">
				<label>Apple Onboard Audio driver</label>
				<help>This option enables the new driver for the various
Apple Onboard Audio components.</help>
			</entry>
			<entry name="SND_AOA_FABRIC_LAYOUT">
				<label>layout-id fabric</label>
				<help>This enables the layout-id fabric for the Apple Onboard
Audio driver, the module holding it all together
based on the device-tree's layout-id property.

If you are unsure and have a later Apple machine,
compile it as a module.
</help>
			</entry>
			<entry name="SND_AOA_ONYX">
				<label>support Onyx chip</label>
				<help>This option enables support for the Onyx (pcm3052)
codec chip found in the latest Apple machines
(most of those with digital audio output).</help>
			</entry>
			<entry name="SND_AOA_TAS">
				<label>support TAS chips</label>
				<help>This option enables support for the tas chips
found in a lot of Apple Machines, especially
iBooks and PowerBooks without digital.</help>
			</entry>
			<entry name="SND_AOA_TOONIE">
				<label>support Toonie chip</label>
				<help>This option enables support for the toonie codec
found in the Mac Mini. If you have a Mac Mini and
want to hear sound, select this option.
</help>
			</entry>
			<entry name="SND_AOA_SOUNDBUS">
				<label>Apple Soundbus support</label>
				<help>This option enables the generic driver for the soundbus
support on Apple machines.

It is required for the sound bus implementations.</help>
			</entry>
			<entry name="SND_AOA_SOUNDBUS_I2S">
				<label>I2S bus support</label>
				<help>This option enables support for Apple I2S busses.
</help>
			</entry>
			<entry name="SND_ARM">
				<label>ARM sound devices</label>
				<help>Support for sound devices specific to ARM architectures.
Drivers that are implemented on ASoC can be found in
&quot;ALSA for SoC audio support&quot; section.</help>
			</entry>
			<entry name="SND_ARMAACI">
				<label>ARM PrimeCell PL041 AC Link support</label>
			</entry>
			<entry name="SND_PXA2XX_PCM"/>
			<entry name="SND_PXA2XX_AC97">
				<label>AC97 driver for the Intel PXA2xx chip</label>
				<help>Say Y or M if you want to support any AC97 codec attached to
the PXA2xx AC97 interface.</help>
			</entry>
			<entry name="SND_PXA2XX_LIB"/>
			<entry name="SND_PXA2XX_LIB_AC97"/>
			<container name="Atmel_devices_AVR32_and_AT91_">
				<label>Atmel devices (AVR32 and AT91)</label>
				<entry name="SND_ATMEL_ABDAC">
					<label>Atmel Audio Bitstream DAC (ABDAC) driver</label>
					<help>ALSA sound driver for the Atmel Audio Bitstream DAC (ABDAC).</help>
				</entry>
				<entry name="SND_ATMEL_AC97C">
					<label>Atmel AC97 Controller (AC97C) driver</label>
					<help>ALSA sound driver for the Atmel AC97 controller.</help>
				</entry>
			</container>
			<entry name="SND_SPI">
				<label>SPI sound devices</label>
				<help>Support for sound devices connected via the SPI bus.</help>
			</entry>
			<entry name="SND_AT73C213">
				<label>Atmel AT73C213 DAC driver</label>
				<help>Say Y here if you want to use the Atmel AT73C213 external DAC. This
DAC can be found on Atmel development boards.

This driver requires the Atmel SSC driver for sound sink, a
peripheral found on most AT91 and AVR32 microprocessors.

To compile this driver as a module, choose M here: the module will be
called snd-at73c213.</help>
			</entry>
			<entry name="SND_AT73C213_TARGET_BITRATE">
				<label>Target bitrate for AT73C213</label>
				<help>Sets the target bitrate for the bitrate calculator in the driver.
Limited by hardware to be between 8000 Hz and 50000 Hz.

Set to 48000 Hz by default.</help>
			</entry>
			<entry name="SND_MIPS">
				<label>MIPS sound devices</label>
				<help>Support for sound devices of MIPS architectures.</help>
			</entry>
			<entry name="SND_SGI_O2">
				<label>SGI O2 Audio</label>
				<help>Sound support for the SGI O2 Workstation.</help>
			</entry>
			<entry name="SND_SGI_HAL2">
				<label>SGI HAL2 Audio</label>
				<help>Sound support for the SGI Indy and Indigo2 Workstation.</help>
			</entry>
			<entry name="SND_SUPERH">
				<label>SUPERH sound devices</label>
				<help>Support for sound devices specific to SUPERH architectures.
Drivers that are implemented on ASoC can be found in
&quot;ALSA for SoC audio support&quot; section.</help>
			</entry>
			<entry name="SND_AICA">
				<label>Dreamcast Yamaha AICA sound</label>
				<help>ALSA Sound driver for the SEGA Dreamcast console.</help>
			</entry>
			<entry name="SND_SH_DAC_AUDIO">
				<label>SuperH DAC audio support</label>
				<help>Say Y here to include support for the on-chip DAC.</help>
			</entry>
			<entry name="SND_USB">
				<label>USB sound devices</label>
				<help>Support for sound devices connected via the USB bus.</help>
			</entry>
			<entry name="SND_USB_AUDIO">
				<label>USB Audio/MIDI driver</label>
				<help>Say Y here to include support for USB audio and USB MIDI
devices.

To compile this driver as a module, choose M here: the module
will be called snd-usb-audio.</help>
			</entry>
			<entry name="SND_USB_UA101">
				<label>Edirol UA-101/UA-1000 driver</label>
				<help>Say Y here to include support for the Edirol UA-101 and UA-1000
audio/MIDI interfaces.

To compile this driver as a module, choose M here: the module
will be called snd-ua101.</help>
			</entry>
			<entry name="SND_USB_USX2Y">
				<label>Tascam US-122, US-224 and US-428 USB driver</label>
				<help>Say Y here to include support for Tascam USB Audio/MIDI
interfaces or controllers US-122, US-224 and US-428.

To compile this driver as a module, choose M here: the module
will be called snd-usb-usx2y.</help>
			</entry>
			<entry name="SND_USB_CAIAQ">
				<label>Native Instruments USB audio devices</label>
				<help>Say Y here to include support for caiaq USB audio interfaces,
namely:

* Native Instruments RigKontrol2
* Native Instruments RigKontrol3
* Native Instruments Kore Controller
* Native Instruments Kore Controller 2
* Native Instruments Audio Kontrol 1
* Native Instruments Audio 2 DJ
* Native Instruments Audio 4 DJ
* Native Instruments Audio 8 DJ
* Native Instruments Traktor Audio 2
* Native Instruments Guitar Rig Session I/O
* Native Instruments Guitar Rig mobile
* Native Instruments Traktor Kontrol X1
* Native Instruments Traktor Kontrol S4
* Native Instruments Maschine Controller

To compile this driver as a module, choose M here: the module
will be called snd-usb-caiaq.</help>
			</entry>
			<entry name="SND_USB_CAIAQ_INPUT">
				<label>enable input device for controllers</label>
				<help>Say Y here to support input controllers like buttons, knobs,
alpha dials and analog pedals on the following products:

* Native Instruments RigKontrol2
* Native Instruments RigKontrol3
* Native Instruments Kore Controller
* Native Instruments Kore Controller 2
* Native Instruments Audio Kontrol 1
* Native Instruments Traktor Kontrol S4
* Native Instruments Maschine Controller</help>
			</entry>
			<entry name="SND_USB_US122L">
				<label>Tascam US-122L USB driver</label>
				<help>Say Y here to include support for Tascam US-122L USB Audio/MIDI
interfaces.

To compile this driver as a module, choose M here: the module
will be called snd-usb-us122l.</help>
			</entry>
			<entry name="SND_USB_6FIRE">
				<label>TerraTec DMX 6Fire USB</label>
				<help>Say Y here to include support for TerraTec 6fire DMX USB interface.

You will need firmware files in order to be able to use the device
after it has been coldstarted. An install script for the firmware
and further help can be found at
http://sixfireusb.sourceforge.net</help>
			</entry>
			<entry name="SND_USB_HIFACE">
				<label>M2Tech hiFace USB-SPDIF driver</label>
				<help>Select this option to include support for M2Tech hiFace USB-SPDIF
interface.

This driver supports the original M2Tech hiFace and some other
compatible devices. The supported products are:

* M2Tech Young
* M2Tech hiFace
* M2Tech North Star
* M2Tech W4S Young
* M2Tech Corrson
* M2Tech AUDIA
* M2Tech SL Audio
* M2Tech Empirical
* M2Tech Rockna
* M2Tech Pathos
* M2Tech Metronome
* M2Tech CAD
* M2Tech Audio Esclusive
* M2Tech Rotel
* M2Tech Eeaudio
* The Chord Company CHORD
* AVA Group A/S Vitus

To compile this driver as a module, choose M here: the module
will be called snd-usb-hiface.</help>
			</entry>
			<entry name="SND_BCD2000">
				<label>Behringer BCD2000 MIDI driver</label>
				<help>Say Y here to include MIDI support for the Behringer BCD2000 DJ
controller.

Audio support is still work-in-progress at
https://github.com/anyc/snd-usb-bcd2000

To compile this driver as a module, choose M here: the module
will be called snd-bcd2000.</help>
			</entry>
			<entry name="SND_USB_LINE6"/>
			<entry name="SND_USB_POD">
				<label>Line 6 POD USB support</label>
				<help>This is a driver for PODxt and other similar devices,
supporting the following features:
* Reading/writing individual parameters
* Reading/writing complete channel, effects setup, and amp
setup data
* Channel switching
* Virtual MIDI interface
* Tuner access
* Playback/capture/mixer device for any ALSA-compatible PCM
audio application
* Signal routing (record clean/processed guitar signal,
re-amping)</help>
			</entry>
			<entry name="SND_USB_PODHD">
				<label>Line 6 POD HD300/400/500 USB support</label>
				<help>This is a driver for POD HD300, 400 and 500 devices.</help>
			</entry>
			<entry name="SND_USB_TONEPORT">
				<label>TonePort GX, UX1 and UX2 USB support</label>
				<help>This is a driver for TonePort GX, UX1 and UX2 devices.</help>
			</entry>
			<entry name="SND_USB_VARIAX">
				<label>Variax Workbench USB support</label>
				<help>This is a driver for Variax Workbench device.

</help>
			</entry>
			<entry name="SND_FIREWIRE">
				<label>FireWire sound devices</label>
				<help>Support for IEEE-1394/FireWire/iLink sound devices.</help>
			</entry>
			<entry name="SND_FIREWIRE_LIB"/>
			<entry name="SND_DICE">
				<label>DICE-based DACs support</label>
				<help>Say Y here to include support for many DACs based on the DICE
chip family (DICE-II/Jr/Mini) which TC Applied Technologies produces.

To compile this driver as a module, choose M here: the module
will be called snd-dice.</help>
			</entry>
			<entry name="SND_OXFW">
				<label>Oxford Semiconductor FW970/971 chipset support</label>
				<help>Say Y here to include support for FireWire devices based on
Oxford Semiconductor FW970/971 chipset.
* Griffin Firewave
* LaCie Firewire Speakers
* Behringer F-Control Audio 202
* Mackie(Loud) Onyx-i series (former models)
* Mackie(Loud) Onyx Satellite
* Mackie(Loud) Tapco Link.Firewire
* Mackie(Loud) d.2 pro/d.4 pro
* Mackie(Loud) U.420/U.420d
* TASCAM FireOne
* Stanton Controllers &amp; Systems 1 Deck/Mixer

To compile this driver as a module, choose M here: the module
will be called snd-oxfw.</help>
			</entry>
			<entry name="SND_ISIGHT">
				<label>Apple iSight microphone</label>
				<help>Say Y here to include support for the front and rear microphones
of the Apple iSight web camera.

To compile this driver as a module, choose M here: the module
will be called snd-isight.</help>
			</entry>
			<entry name="SND_FIREWORKS">
				<label>Echo Fireworks board module support</label>
				<help>Say Y here to include support for FireWire devices based
on Echo Digital Audio Fireworks board:
* Mackie Onyx 400F/1200F
* Echo AudioFire12/8(until 2009 July)
* Echo AudioFire2/4/Pre8/8(since 2009 July)
* Echo Fireworks 8/HDMI
* Gibson Robot Interface Pack/GoldTop

To compile this driver as a module, choose M here: the module
will be called snd-fireworks.</help>
			</entry>
			<entry name="SND_BEBOB">
				<label>BridgeCo DM1000/DM1100/DM1500 with BeBoB firmware</label>
				<help>Say Y here to include support for FireWire devices based
on BridgeCo DM1000/DM1100/DM1500 with BeBoB firmware:
* Edirol FA-66/FA-101
* PreSonus FIREBOX/FIREPOD/FP10/Inspire1394
* BridgeCo RDAudio1/Audio5
* Mackie Onyx 1220/1620/1640 (FireWire I/O Card)
* Mackie d.2 (FireWire Option)
* Stanton FinalScratch 2 (ScratchAmp)
* Tascam IF-FW/DM
* Behringer XENIX UFX 1204/1604
* Behringer Digital Mixer X32 series (X-UF Card)
* Behringer FCA610/1616
* Apogee Rosetta 200/400 (X-FireWire card)
* Apogee DA/AD/DD-16X (X-FireWire card)
* Apogee Ensemble
* ESI QuataFire 610
* AcousticReality eARMasterOne
* CME MatrixKFW
* Phonic Helix Board 12 MkII/18 MkII/24 MkII
* Phonic Helix Board 12 Universal/18 Universal/24 Universal
* Lynx Aurora 8/16 (LT-FW)
* ICON FireXon
* PrismSound Orpheus/ADA-8XR
* TerraTec PHASE 24 FW/PHASE X24 FW/PHASE 88 Rack FW
* TerraTec EWS MIC2/EWS MIC8
* TerraTec Aureon 7.1 FireWire
* Yamaha GO44/GO46
* Focusrite Saffire/Saffire LE/SaffirePro10 IO/SaffirePro26 IO
* M-Audio FireWire410/AudioPhile/Solo
* M-Audio Ozonic/NRV10/ProfireLightBridge
* M-Audio FireWire 1814/ProjectMix IO
* Digidesign Mbox 2 Pro

To compile this driver as a module, choose M here: the module
will be called snd-bebob.</help>
			</entry>
			<entry name="SND_FIREWIRE_DIGI00X">
				<label>Digidesign Digi 002/003 family support</label>
				<help>Say Y here to include support for Digidesign Digi 002/003 family.
* Digi 002 Console
* Digi 002 Rack
* Digi 003 Console
* Digi 003 Rack
* Digi 003 Rack+

To compile this driver as a module, choose M here: the module
will be called snd-firewire-digi00x.</help>
			</entry>
			<entry name="SND_FIREWIRE_TASCAM">
				<label>TASCAM FireWire series support</label>
				<help>Say Y here to include support for TASCAM.
* FW-1884
* FW-1082
* FW-1804

To compile this driver as a module, choose M here: the module
will be called snd-firewire-tascam.</help>
			</entry>
			<entry name="SND_PCMCIA">
				<label>PCMCIA sound devices</label>
				<help>Support for sound devices connected via the PCMCIA bus.</help>
			</entry>
			<entry name="SND_VXPOCKET">
				<label>Digigram VXpocket</label>
				<help>Say Y here to include support for Digigram VXpocket and
VXpocket 440 soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-vxpocket.</help>
			</entry>
			<entry name="SND_PDAUDIOCF">
				<label>Sound Core PDAudioCF</label>
				<help>Say Y here to include support for Sound Core PDAudioCF
soundcards.

To compile this driver as a module, choose M here: the module
will be called snd-pdaudiocf.</help>
			</entry>
			<entry name="SND_SPARC">
				<label>Sparc sound devices</label>
				<help>Support for sound devices specific to Sun SPARC architectures.</help>
			</entry>
			<entry name="SND_SUN_AMD7930">
				<label>Sun AMD7930</label>
				<help>Say Y here to include support for AMD7930 sound device on Sun.

To compile this driver as a module, choose M here: the module
will be called snd-sun-amd7930.</help>
			</entry>
			<entry name="SND_SUN_CS4231">
				<label>Sun CS4231</label>
				<help>Say Y here to include support for CS4231 sound device on Sun.

To compile this driver as a module, choose M here: the module
will be called snd-sun-cs4231.</help>
			</entry>
			<entry name="SND_SUN_DBRI">
				<label>Sun DBRI</label>
				<help>Say Y here to include support for DBRI sound device on Sun.

To compile this driver as a module, choose M here: the module
will be called snd-sun-dbri.</help>
			</entry>
			<entry name="SND_GSC">
				<label>GSC sound devices</label>
				<help>Support for GSC sound devices on PA-RISC architectures.</help>
			</entry>
			<entry name="SND_HARMONY">
				<label>Harmony/Vivace sound chip</label>
				<help>Say 'Y' or 'M' to include support for the Harmony/Vivace sound
chip found in most GSC-based PA-RISC workstations.  It's frequently
provided as part of the Lasi multi-function IC.</help>
			</entry>
			<entry name="SND_SOC">
				<label>ALSA for SoC audio support</label>
				<help>
If you want ASoC support, you should say Y here and also to the
specific driver for your SoC platform below.

ASoC provides power efficient ALSA support for embedded battery powered
SoC based systems like PDA's, Phones and Personal Media Players.

This ASoC audio support can also be built as a module.  If so, the module
will be called snd-soc-core.

if SND_SOC

config SND_SOC_AC97_BUS
bool

config SND_SOC_GENERIC_DMAENGINE_PCM
bool
select SND_DMAENGINE_PCM

config SND_SOC_COMPRESS
bool
select SND_COMPRESS_OFFLOAD

config SND_SOC_TOPOLOGY
bool

# All the supported SoCs
source &quot;sound/soc/adi/Kconfig&quot;
source &quot;sound/soc/amd/Kconfig&quot;
source &quot;sound/soc/atmel/Kconfig&quot;
source &quot;sound/soc/au1x/Kconfig&quot;
source &quot;sound/soc/bcm/Kconfig&quot;
source &quot;sound/soc/blackfin/Kconfig&quot;
source &quot;sound/soc/cirrus/Kconfig&quot;
source &quot;sound/soc/davinci/Kconfig&quot;
source &quot;sound/soc/dwc/Kconfig&quot;
source &quot;sound/soc/fsl/Kconfig&quot;
source &quot;sound/soc/jz4740/Kconfig&quot;
source &quot;sound/soc/nuc900/Kconfig&quot;
source &quot;sound/soc/omap/Kconfig&quot;
source &quot;sound/soc/kirkwood/Kconfig&quot;
source &quot;sound/soc/img/Kconfig&quot;
source &quot;sound/soc/intel/Kconfig&quot;
source &quot;sound/soc/mediatek/Kconfig&quot;
source &quot;sound/soc/mxs/Kconfig&quot;
source &quot;sound/soc/pxa/Kconfig&quot;
source &quot;sound/soc/qcom/Kconfig&quot;
source &quot;sound/soc/rockchip/Kconfig&quot;
source &quot;sound/soc/samsung/Kconfig&quot;
source &quot;sound/soc/sh/Kconfig&quot;
source &quot;sound/soc/sirf/Kconfig&quot;
source &quot;sound/soc/spear/Kconfig&quot;
source &quot;sound/soc/sti/Kconfig&quot;
source &quot;sound/soc/sunxi/Kconfig&quot;
source &quot;sound/soc/tegra/Kconfig&quot;
source &quot;sound/soc/txx9/Kconfig&quot;
source &quot;sound/soc/ux500/Kconfig&quot;
source &quot;sound/soc/xtensa/Kconfig&quot;
source &quot;sound/soc/zte/Kconfig&quot;

# Supported codecs
source &quot;sound/soc/codecs/Kconfig&quot;

# generic frame-work
source &quot;sound/soc/generic/Kconfig&quot;

endif	# SND_SOC

</help>
			</entry>
			<entry name="SOUND_PRIME">
				<label>Open Sound System (DEPRECATED)</label>
				<help>Say 'Y' or 'M' to enable Open Sound System drivers.</help>
			</entry>
			<entry name="SOUND_BCM_CS4297A">
				<label>Crystal Sound CS4297a (for Swarm)</label>
				<help>The BCM91250A has a Crystal CS4297a on synchronous serial
port B (in addition to the DB-9 serial port).  Say Y or M
here to enable the sound chip instead of the UART.  Also
note that CONFIG_KGDB should not be enabled at the same
time, since it also attempts to use this UART port.</help>
			</entry>
			<entry name="SOUND_MSNDCLAS">
				<label>Support for Turtle Beach MultiSound Classic, Tahiti, Monterey</label>
				<help>Say M here if you have a Turtle Beach MultiSound Classic, Tahiti or
Monterey (not for the Pinnacle or Fiji).

See &lt;file:Documentation/sound/oss/MultiSound&gt; for important information
about this driver.  Note that it has been discontinued, but the
Voyetra Turtle Beach knowledge base entry for it is still available
at &lt;http://www.turtlebeach.com/site/kb_ftp/790.asp&gt;.</help>
			</entry>
			<entry name="MSNDCLAS_HAVE_BOOT"/>
			<entry name="MSNDCLAS_INIT_FILE">
				<label>Full pathname of MSNDINIT.BIN firmware file</label>
				<help>The MultiSound cards have two firmware files which are required for
operation, and are not currently included. These files can be
obtained from Turtle Beach. See
&lt;file:Documentation/sound/oss/MultiSound&gt; for information on how to
obtain this.</help>
			</entry>
			<entry name="MSNDCLAS_PERM_FILE">
				<label>Full pathname of MSNDPERM.BIN firmware file</label>
				<help>The MultiSound cards have two firmware files which are required for
operation, and are not currently included. These files can be
obtained from Turtle Beach. See
&lt;file:Documentation/sound/oss/MultiSound&gt; for information on how to
obtain this.</help>
			</entry>
			<entry name="MSNDCLAS_IRQ">
				<label>MSND Classic IRQ 5, 7, 9, 10, 11, 12</label>
				<help>Interrupt Request line for the MultiSound Classic and related cards.</help>
			</entry>
			<entry name="SOUND_MSNDPIN">
				<label>Support for Turtle Beach MultiSound Pinnacle, Fiji</label>
				<help>Say M here if you have a Turtle Beach MultiSound Pinnacle or Fiji.
See &lt;file:Documentation/sound/oss/MultiSound&gt; for important information
about this driver. Note that it has been discontinued, but the
Voyetra Turtle Beach knowledge base entry for it is still available
at &lt;http://www.turtlebeach.com/site/kb_ftp/600.asp&gt;.</help>
			</entry>
			<entry name="MSNDPIN_HAVE_BOOT"/>
			<entry name="MSNDPIN_INIT_FILE">
				<label>Full pathname of PNDSPINI.BIN firmware file</label>
				<help>The MultiSound cards have two firmware files which are required
for operation, and are not currently included. These files can be
obtained from Turtle Beach. See
&lt;file:Documentation/sound/oss/MultiSound&gt; for information on how to
obtain this.</help>
			</entry>
			<entry name="MSNDPIN_PERM_FILE">
				<label>Full pathname of PNDSPERM.BIN firmware file</label>
				<help>The MultiSound cards have two firmware files which are required for
operation, and are not currently included. These files can be
obtained from Turtle Beach. See
&lt;file:Documentation/sound/oss/MultiSound&gt; for information on how to
obtain this.</help>
			</entry>
			<entry name="MSNDPIN_IRQ">
				<label>MSND Pinnacle IRQ 5, 7, 9, 10, 11, 12</label>
				<help>Interrupt request line for the primary synthesizer on MultiSound
Pinnacle and Fiji sound cards.</help>
			</entry>
			<entry name="MSNDPIN_DIGITAL">
				<label>MSND Pinnacle has S/PDIF I/O</label>
				<help>If you have the S/PDIF daughter board for the Pinnacle or Fiji,
answer Y here; otherwise, say N. If you have this, you will be able
to play and record from the S/PDIF port (digital signal). See
&lt;file:Documentation/sound/oss/MultiSound&gt; for information on how to make
use of this capability.</help>
			</entry>
			<entry name="MSNDPIN_NONPNP">
				<label>MSND Pinnacle non-PnP Mode</label>
				<help>The Pinnacle and Fiji card resources can be configured either with
PnP, or through a configuration port. Say Y here if your card is NOT
in PnP mode. For the Pinnacle, configuration in non-PnP mode allows
use of the IDE and joystick peripherals on the card as well; these
do not show up when the card is in PnP mode. Specifying zero for any
resource of a device will disable the device. If you are running the
card in PnP mode, you must say N here and use isapnptools to
configure the card's resources.</help>
			</entry>
			<entry name="MSNDPIN_MPU_IRQ">
				<label>MSND Pinnacle MPU IRQ (e.g. 9)</label>
				<help>Interrupt request number for the Kurzweil daughterboard
synthesizer on MultiSound Pinnacle and Fiji sound cards.</help>
			</entry>
			<entry name="MSNDPIN_IDE_IRQ">
				<label>MSND Pinnacle IDE IRQ (e.g. 15)</label>
				<help>Interrupt request number for the IDE CD-ROM interface on the
MultiSound Pinnacle and Fiji sound cards.</help>
			</entry>
			<entry name="MSND_FIFOSIZE">
				<label>MSND buffer size (kB)</label>
				<help>Configures the size of each audio buffer, in kilobytes, for
recording and playing in the MultiSound drivers (both the Classic
and Pinnacle). Larger values reduce the chance of data overruns at
the expense of overall latency. If unsure, use the default.</help>
			</entry>
			<entry name="SOUND_OSS">
				<label>OSS sound modules</label>
				<help>OSS is the Open Sound System suite of sound card drivers.  They make
sound programming easier since they provide a common API.  Say Y or
M here (the module will be called sound) if you haven't found a
driver for your sound card above, then pick your driver from the
list below.</help>
			</entry>
			<entry name="SOUND_TRACEINIT">
				<label>Verbose initialisation</label>
				<help>Verbose soundcard initialization -- affects the format of autoprobe
and initialization messages at boot time.</help>
			</entry>
			<entry name="SOUND_DMAP">
				<label>Persistent DMA buffers</label>
				<help>Linux can often have problems allocating DMA buffers for ISA sound
cards on machines with more than 16MB of RAM. This is because ISA
DMA buffers must exist below the 16MB boundary and it is quite
possible that a large enough free block in this region cannot be
found after the machine has been running for a while. If you say Y
here the DMA buffers (64Kb) will be allocated at boot time and kept
until the shutdown. This option is only useful if you said Y to
&quot;OSS sound modules&quot;, above. If you said M to &quot;OSS sound modules&quot;
then you can get the persistent DMA buffer functionality by passing
the command-line argument &quot;dmabuf=1&quot; to the sound module.

Say Y unless you have 16MB or more RAM or a PCI sound card.</help>
			</entry>
			<entry name="SOUND_VMIDI">
				<label>Loopback MIDI device support</label>
				<help>Support for MIDI loopback on port 1 or 2.</help>
			</entry>
			<entry name="SOUND_TRIX">
				<label>MediaTrix AudioTrix Pro support</label>
				<help>Answer Y if you have the AudioTriX Pro sound card manufactured
by MediaTrix.</help>
			</entry>
			<entry name="TRIX_HAVE_BOOT">
				<label>Have TRXPRO.HEX firmware file</label>
				<help>The MediaTrix AudioTrix Pro has an on-board microcontroller which
needs to be initialized by downloading the code from the file
TRXPRO.HEX in the DOS driver directory. If you don't have the
TRXPRO.HEX file handy you may skip this step. However, the SB and
MPU-401 modes of AudioTrix Pro will not work without this file!</help>
			</entry>
			<entry name="TRIX_BOOT_FILE">
				<label>Full pathname of TRXPRO.HEX firmware file</label>
				<help>Enter the full pathname of your TRXPRO.HEX file, starting from /.</help>
			</entry>
			<entry name="SOUND_MSS">
				<label>Microsoft Sound System support</label>
				<help>Again think carefully before answering Y to this question.  It's
safe to answer Y if you have the original Windows Sound System card
made by Microsoft or Aztech SG 16 Pro (or NX16 Pro).  Also you may
say Y in case your card is NOT among these:

ATI Stereo F/X, AdLib, Audio Excell DSP16, Cardinal DSP16,
Ensoniq SoundScape (and compatibles made by Reveal and Spea),
Gravis Ultrasound, Gravis Ultrasound ACE, Gravis Ultrasound Max,
Gravis Ultrasound with 16 bit option, Logitech Sound Man 16,
Logitech SoundMan Games, Logitech SoundMan Wave, MAD16 Pro (OPTi
82C929), Media Vision Jazz16, MediaTriX AudioTriX Pro, Microsoft
Windows Sound System (MSS/WSS), Mozart (OAK OTI-601), Orchid
SW32, Personal Sound System (PSS), Pro Audio Spectrum 16, Pro
Audio Studio 16, Pro Sonic 16, Roland MPU-401 MIDI interface,
Sound Blaster 1.0, Sound Blaster 16, Sound Blaster 16ASP, Sound
Blaster 2.0, Sound Blaster AWE32, Sound Blaster Pro, TI TM4000M
notebook, ThunderBoard, Turtle Beach Tropez, Yamaha FM
synthesizers (OPL2, OPL3 and OPL4), 6850 UART MIDI Interface.

For cards having native support in VoxWare, consult the card
specific instructions in &lt;file:Documentation/sound/oss/README.OSS&gt;.
Some drivers have their own MSS support and saying Y to this option
will cause a conflict.

If you compile the driver into the kernel, you have to add
&quot;ad1848=&lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;[,&lt;type&gt;]&quot; to the kernel command
line.</help>
			</entry>
			<entry name="SOUND_MPU401">
				<label>MPU-401 support (NOT for SB16)</label>
				<help>Be careful with this question.  The MPU401 interface is supported by
all sound cards.  However, some natively supported cards have their
own driver for MPU401.  Enabling this MPU401 option with these cards
will cause a conflict.  Also, enabling MPU401 on a system that
doesn't really have a MPU401 could cause some trouble.  If your card
was in the list of supported cards, look at the card specific
instructions in the &lt;file:Documentation/sound/oss/README.OSS&gt; file.  It
is safe to answer Y if you have a true MPU401 MIDI interface card.

If you compile the driver into the kernel, you have to add
&quot;mpu401=&lt;io&gt;,&lt;irq&gt;&quot; to the kernel command line.</help>
			</entry>
			<entry name="SOUND_PAS">
				<label>ProAudioSpectrum 16 support</label>
				<help>Answer Y only if you have a Pro Audio Spectrum 16, ProAudio Studio
16 or Logitech SoundMan 16 sound card. Answer N if you have some
other card made by Media Vision or Logitech since those are not
PAS16 compatible. Please read &lt;file:Documentation/sound/oss/PAS16&gt;.
It is not necessary to add Sound Blaster support separately; it
is included in PAS support.

If you compile the driver into the kernel, you have to add
&quot;pas2=&lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;,&lt;sbio&gt;,&lt;sbirq&gt;,&lt;sbdma&gt;,&lt;sbdma2&gt;
to the kernel command line.</help>
			</entry>
			<entry name="PAS_JOYSTICK">
				<label>Enable PAS16 joystick port</label>
				<help>Say Y here to enable the Pro Audio Spectrum 16's auxiliary joystick
port.</help>
			</entry>
			<entry name="SOUND_PSS">
				<label>PSS (AD1848, ADSP-2115, ESC614) support</label>
				<help>Answer Y or M if you have an Orchid SW32, Cardinal DSP16, Beethoven
ADSP-16 or some other card based on the PSS chipset (AD1848 codec +
ADSP-2115 DSP chip + Echo ESC614 ASIC CHIP). For more information on
how to compile it into the kernel or as a module see the file
&lt;file:Documentation/sound/oss/PSS&gt;.

If you compile the driver into the kernel, you have to add
&quot;pss=&lt;io&gt;,&lt;mssio&gt;,&lt;mssirq&gt;,&lt;mssdma&gt;,&lt;mpuio&gt;,&lt;mpuirq&gt;&quot; to the kernel
command line.</help>
			</entry>
			<entry name="PSS_MIXER">
				<label>Enable PSS mixer (Beethoven ADSP-16 and other compatible)</label>
				<help>Answer Y for Beethoven ADSP-16. You may try to say Y also for other
cards if they have master volume, bass, treble, and you can't
control it under Linux. If you answer N for Beethoven ADSP-16, you
can't control master volume, bass, treble and synth volume.

If you said M to &quot;PSS support&quot; above, you may enable or disable this
PSS mixer with the module parameter pss_mixer. For more information
see the file &lt;file:Documentation/sound/oss/PSS&gt;.</help>
			</entry>
			<entry name="PSS_HAVE_BOOT">
				<label>Have DSPxxx.LD firmware file</label>
				<help>If you have the DSPxxx.LD file or SYNTH.LD file for you card, say Y
to include this file. Without this file the synth device (OPL) may
not work.</help>
			</entry>
			<entry name="PSS_BOOT_FILE">
				<label>Full pathname of DSPxxx.LD firmware file</label>
				<help>Enter the full pathname of your DSPxxx.LD file or SYNTH.LD file,
starting from /.</help>
			</entry>
			<entry name="SOUND_SB">
				<label>100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support</label>
				<help>Answer Y if you have an original Sound Blaster card made by Creative
Labs or a 100% hardware compatible clone (like the Thunderboard or
SM Games). For an unknown card you may answer Y if the card claims
to be Sound Blaster-compatible.

Please read the file &lt;file:Documentation/sound/oss/Soundblaster&gt;.

You should also say Y here for cards based on the Avance Logic
ALS-007 and ALS-1X0 chips (read &lt;file:Documentation/sound/oss/ALS&gt;) and
for cards based on ESS chips (read
&lt;file:Documentation/sound/oss/ESS1868&gt; and
&lt;file:Documentation/sound/oss/ESS&gt;). If you have an IBM Mwave
card, say Y here and read &lt;file:Documentation/sound/oss/mwave&gt;.

If you compile the driver into the kernel and don't want to use
isapnp, you have to add &quot;sb=&lt;io&gt;,&lt;irq&gt;,&lt;dma&gt;,&lt;dma2&gt;&quot; to the kernel
command line.

You can say M here to compile this driver as a module; the module is
called sb.</help>
			</entry>
			<entry name="SOUND_YM3812">
				<label>Yamaha FM synthesizer (YM3812/OPL-3) support</label>
				<help>Answer Y if your card has a FM chip made by Yamaha (OPL2/OPL3/OPL4).
Answering Y is usually a safe and recommended choice, however some
cards may have software (TSR) FM emulation. Enabling FM support with
these cards may cause trouble (I don't currently know of any such
cards, however). Please read the file
&lt;file:Documentation/sound/oss/OPL3&gt; if your card has an OPL3 chip.

If you compile the driver into the kernel, you have to add
&quot;opl3=&lt;io&gt;&quot; to the kernel command line.

If unsure, say Y.</help>
			</entry>
			<entry name="SOUND_UART6850">
				<label>6850 UART support</label>
				<help>This option enables support for MIDI interfaces based on the 6850
UART chip. This interface is rarely found on sound cards. It's safe
to answer N to this question.

If you compile the driver into the kernel, you have to add
&quot;uart6850=&lt;io&gt;,&lt;irq&gt;&quot; to the kernel command line.</help>
			</entry>
			<entry name="SOUND_AEDSP16">
				<label>Gallant Audio Cards (SC-6000 and SC-6600 based)</label>
				<help>Answer Y if you have a Gallant's Audio Excel DSP 16 card. This
driver supports Audio Excel DSP 16 but not the III nor PnP versions
of this card.

The Gallant's Audio Excel DSP 16 card can emulate either an SBPro or
a Microsoft Sound System card, so you should have said Y to either
&quot;100% Sound Blaster compatibles (SB16/32/64, ESS, Jazz16) support&quot;
or &quot;Microsoft Sound System support&quot;, above, and you need to answer
the &quot;MSS emulation&quot; and &quot;SBPro emulation&quot; questions below
accordingly. You should say Y to one and only one of these two
questions.

Read the &lt;file:Documentation/sound/oss/README.OSS&gt; file and the head of
&lt;file:sound/oss/aedsp16.c&gt; as well as
&lt;file:Documentation/sound/oss/AudioExcelDSP16&gt; to get more information
about this driver and its configuration.</help>
			</entry>
			<entry name="SC6600">
				<label>SC-6600 based audio cards (new Audio Excel DSP 16)</label>
				<help>The SC6600 is the new version of DSP mounted on the Audio Excel DSP
16 cards. Find in the manual the FCC ID of your audio card and
answer Y if you have an SC6600 DSP.</help>
			</entry>
			<entry name="SC6600_JOY">
				<label>Activate SC-6600 Joystick Interface</label>
				<help>Say Y here in order to use the joystick interface of the Audio Excel
DSP 16 card.</help>
			</entry>
			<entry name="SC6600_CDROM">
				<label>SC-6600 CDROM Interface (4=None, 3=IDE, 1=Panasonic, 0=?Sony?)</label>
				<help>This is used to activate the CD-ROM interface of the Audio Excel
DSP 16 card. Enter: 0 for Sony, 1 for Panasonic, 2 for IDE, 4 for no
CD-ROM present.</help>
			</entry>
			<entry name="SOUND_VIDC">
				<label>VIDC 16-bit sound</label>
				<help>16-bit support for the VIDC onboard sound hardware found on Acorn
machines.</help>
			</entry>
			<entry name="SOUND_WAVEARTIST">
				<label>Netwinder WaveArtist</label>
				<help>Say Y here to include support for the Rockwell WaveArtist sound
system.  This driver is mainly for the NetWinder.</help>
			</entry>
			<entry name="SOUND_KAHLUA">
				<label>XpressAudio Sound Blaster emulation</label>
			</entry>
			<entry name="AC97_BUS">
				<help>This is used to avoid config and link hard dependencies between the
sound subsystem and other function drivers completely unrelated to
sound although they're sharing the AC97 bus. Concerned drivers
should &quot;select&quot; this.
</help>
			</entry>
			<container name="HID_support">
				<label>HID support</label>
				<entry name="HID">
					<label>HID bus support</label>
					<help>A human interface device (HID) is a type of computer device that
interacts directly with and takes input from humans. The term &quot;HID&quot;
most commonly used to refer to the USB-HID specification, but other
devices (such as, but not strictly limited to, Bluetooth) are
designed using HID specification (this involves certain keyboards,
mice, tablets, etc). This option adds the HID bus to the kernel,
together with generic HID layer code. The HID devices are added and
removed from the HID bus by the transport-layer drivers, such as
usbhid (USB_HID) and hidp (BT_HIDP).

For docs and specs, see http://www.usb.org/developers/hidpage/

If unsure, say Y.</help>
				</entry>
				<entry name="HID_BATTERY_STRENGTH">
					<label>Battery level reporting for HID devices</label>
					<help>This option adds support of reporting battery strength (for HID devices
that support this feature) through power_supply class so that userspace
tools, such as upower, can display it.</help>
				</entry>
				<entry name="HIDRAW">
					<label>/dev/hidraw raw HID device support</label>
					<help>Say Y here if you want to support HID devices (from the USB
specification standpoint) that aren't strictly user interface
devices, like monitor controls and Uninterruptable Power Supplies.

This module supports these devices separately using a separate
event interface on /dev/hidraw.

There is also a /dev/hiddev configuration option in the USB HID
configuration menu. In comparison to hiddev, this device does not process
the hid events at all (no parsing, no lookups). This lets applications
to work on raw hid events when they want to, and avoid using transport-specific
userspace libhid/libusb libraries.

If unsure, say Y.</help>
				</entry>
				<entry name="UHID">
					<label>User-space I/O driver support for HID subsystem</label>
					<help>Say Y here if you want to provide HID I/O Drivers from user-space.
This allows to write I/O drivers in user-space and feed the data from
the device into the kernel. The kernel parses the HID reports, loads the
corresponding HID Device Driver or provides input devices on top of your
user-space device.

This driver cannot be used to parse HID-reports in user-space and write
special HID-drivers. You should use hidraw for that.
Instead, this driver allows to write the transport-layer driver in
user-space like USB-HID and Bluetooth-HID do in kernel-space.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called uhid.</help>
				</entry>
				<entry name="HID_GENERIC">
					<label>Generic HID driver</label>
					<help>Support for generic devices on the HID bus. This includes most
keyboards and mice, joysticks, tablets and digitizers.

To compile this driver as a module, choose M here: the module
will be called hid-generic.

If unsure, say Y.</help>
				</entry>
				<container name="Special_HID_drivers">
					<label>Special HID drivers</label>
					<entry name="HID_A4TECH">
						<label>A4 tech mice</label>
						<help>Support for A4 tech X5 and WOP-35 / Trust 450L mice.</help>
					</entry>
					<entry name="HID_ACRUX">
						<label>ACRUX game controller support</label>
						<help>Say Y here if you want to enable support for ACRUX game controllers.</help>
					</entry>
					<entry name="HID_ACRUX_FF">
						<label>ACRUX force feedback support</label>
						<help>Say Y here if you want to enable force feedback support for ACRUX
game controllers.</help>
					</entry>
					<entry name="HID_APPLE">
						<label>Apple {i,Power,Mac}Books</label>
						<help>Support for some Apple devices which less or more break
HID specification.

Say Y here if you want support for keyboards of	Apple iBooks, PowerBooks,
MacBooks, MacBook Pros and Apple Aluminum.</help>
					</entry>
					<entry name="HID_APPLEIR">
						<label>Apple infrared receiver</label>
						<help>Support for Apple infrared remote control. All the Apple computers from
2005 onwards include such a port, except the unibody Macbook (2009),
and Mac Pros. This receiver is also used in the Apple TV set-top box
prior to the 2010 model.

Say Y here if you want support for Apple infrared remote control.</help>
					</entry>
					<entry name="HID_ASUS">
						<label>Asus</label>
						<help>Support for Asus notebook built-in keyboard via i2c.

Supported devices:
- EeeBook X205TA
- VivoBook E200HA</help>
					</entry>
					<entry name="HID_AUREAL">
						<label>Aureal</label>
						<help>Support for Aureal Cy se W-01RN Remote Controller and other Aureal derived remotes.</help>
					</entry>
					<entry name="HID_BELKIN">
						<label>Belkin Flip KVM and Wireless keyboard</label>
						<help>Support for Belkin Flip KVM and Wireless keyboard.</help>
					</entry>
					<entry name="HID_BETOP_FF">
						<label>Betop Production Inc. force feedback support</label>
						<help>Say Y here if you want to enable force feedback support for devices by
BETOP Production Ltd.
Currently the following devices are known to be supported:
- BETOP 2185 PC &amp; BFM MODE</help>
					</entry>
					<entry name="HID_CHERRY">
						<label>Cherry Cymotion keyboard</label>
						<help>Support for Cherry Cymotion keyboard.</help>
					</entry>
					<entry name="HID_CHICONY">
						<label>Chicony Tactical pad</label>
						<help>Support for Chicony Tactical pad.</help>
					</entry>
					<entry name="HID_CORSAIR">
						<label>Corsair devices</label>
						<help>Support for Corsair devices that are not fully compliant with the
HID standard.

Supported devices:
- Vengeance K90</help>
					</entry>
					<entry name="HID_PRODIKEYS">
						<label>Prodikeys PC-MIDI Keyboard support</label>
						<help>Support for Prodikeys PC-MIDI Keyboard device support.
Say Y here to enable support for this device.
- Prodikeys PC-MIDI keyboard.
The Prodikeys PC-MIDI acts as a USB Audio device, with one MIDI
input and one MIDI output. These MIDI jacks appear as
a sound &quot;card&quot; in the ALSA sound system.
Note: if you say N here, this device will still function as a basic
multimedia keyboard, but will lack support for the musical keyboard
and some additional multimedia keys.</help>
					</entry>
					<entry name="HID_CMEDIA">
						<label>CMedia CM6533 HID audio jack controls</label>
						<help>Support for CMedia CM6533 HID audio jack controls.</help>
					</entry>
					<entry name="HID_CP2112">
						<label>Silicon Labs CP2112 HID USB-to-SMBus Bridge support</label>
						<help>Support for Silicon Labs CP2112 HID USB to SMBus Master Bridge.
This is a HID device driver which registers as an i2c adapter
and gpiochip to expose these functions of the CP2112. The
customizable USB descriptor fields are exposed as sysfs attributes.</help>
					</entry>
					<entry name="HID_CYPRESS">
						<label>Cypress mouse and barcode readers</label>
						<help>Support for cypress mouse and barcode readers.</help>
					</entry>
					<entry name="HID_DRAGONRISE">
						<label>DragonRise Inc. game controller</label>
						<help>Say Y here if you have DragonRise Inc. game controllers.
These might be branded as:
- Tesun USB-703
- Media-tech MT1504 &quot;Rogue&quot;
- DVTech JS19 &quot;Gear&quot;
- Defender Game Master</help>
					</entry>
					<entry name="DRAGONRISE_FF">
						<label>DragonRise Inc. force feedback</label>
						<help>Say Y here if you want to enable force feedback support for DragonRise Inc.
game controllers.</help>
					</entry>
					<entry name="HID_EMS_FF">
						<label>EMS Production Inc. force feedback support</label>
						<help>Say Y here if you want to enable force feedback support for devices by
EMS Production Ltd.
Currently the following devices are known to be supported:
- Trio Linker Plus II</help>
					</entry>
					<entry name="HID_ELECOM">
						<label>ELECOM BM084 bluetooth mouse</label>
						<help>Support for the ELECOM BM084 (bluetooth mouse).</help>
					</entry>
					<entry name="HID_ELO">
						<label>ELO USB 4000/4500 touchscreen</label>
						<help>Support for the ELO USB 4000/4500 touchscreens. Note that this is for
different devices than those handled by CONFIG_TOUCHSCREEN_USB_ELO.</help>
					</entry>
					<entry name="HID_EZKEY">
						<label>Ezkey BTC 8193 keyboard</label>
						<help>Support for Ezkey BTC 8193 keyboard.</help>
					</entry>
					<entry name="HID_GEMBIRD">
						<label>Gembird Joypad</label>
						<help>Support for Gembird JPD-DualForce 2.</help>
					</entry>
					<entry name="HID_GFRM">
						<label>Google Fiber TV Box remote control support</label>
						<help>Support for Google Fiber TV Box remote controls</help>
					</entry>
					<entry name="HID_HOLTEK">
						<label>Holtek HID devices</label>
						<help>Support for Holtek based devices:
- Holtek On Line Grip based game controller
- Trust GXT 18 Gaming Keyboard
- Sharkoon Drakonia / Perixx MX-2000 gaming mice
- Tracer Sniper TRM-503 / NOVA Gaming Slider X200 /
Zalman ZM-GM1
- SHARKOON DarkGlider Gaming mouse
- LEETGION Hellion Gaming Mouse</help>
					</entry>
					<entry name="HOLTEK_FF">
						<label>Holtek On Line Grip force feedback support</label>
						<help>Say Y here if you have a Holtek On Line Grip based game controller
and want to have force feedback support for it.</help>
					</entry>
					<entry name="HID_GT683R">
						<label>MSI GT68xR LED support</label>
						<help>Say Y here if you want to enable support for the three MSI GT68xR LEDs

This driver support following modes:
- Normal: LEDs are fully on when enabled
- Audio:  LEDs brightness depends on sound level
- Breathing: LEDs brightness varies at human breathing rate

Currently the following devices are know to be supported:
- MSI GT683R</help>
					</entry>
					<entry name="HID_KEYTOUCH">
						<label>Keytouch HID devices</label>
						<help>Support for Keytouch HID devices not fully compliant with
the specification. Currently supported:
- Keytouch IEC 60945</help>
					</entry>
					<entry name="HID_KYE">
						<label>KYE/Genius devices</label>
						<help>Support for KYE/Genius devices not fully compliant with HID standard:
- Ergo Mouse
- EasyPen i405X tablet
- MousePen i608X tablet
- EasyPen M610X tablet</help>
					</entry>
					<entry name="HID_UCLOGIC">
						<label>UC-Logic</label>
						<help>Support for UC-Logic and Huion tablets.</help>
					</entry>
					<entry name="HID_WALTOP">
						<label>Waltop</label>
						<help>Support for Waltop tablets.</help>
					</entry>
					<entry name="HID_GYRATION">
						<label>Gyration remote control</label>
						<help>Support for Gyration remote control.</help>
					</entry>
					<entry name="HID_ICADE">
						<label>ION iCade arcade controller</label>
						<help>Support for the ION iCade arcade controller to work as a joystick.

To compile this driver as a module, choose M here: the
module will be called hid-icade.</help>
					</entry>
					<entry name="HID_TWINHAN">
						<label>Twinhan IR remote control</label>
						<help>Support for Twinhan IR remote control.</help>
					</entry>
					<entry name="HID_KENSINGTON">
						<label>Kensington Slimblade Trackball</label>
						<help>Support for Kensington Slimblade Trackball.</help>
					</entry>
					<entry name="HID_LCPOWER">
						<label>LC-Power</label>
						<help>Support for LC-Power RC1000MCE RF remote control.</help>
					</entry>
					<entry name="HID_LED">
						<label>Simple RGB LED support</label>
						<help>Support for simple RGB LED devices. Currently supported are:
- Riso Kagaku Webmail Notifier
- Dream Cheeky Webmail Notifier and Friends Alert
- ThingM blink(1)
- Delcom Visual Signal Indicator Generation 2
- Greynut Luxafor

To compile this driver as a module, choose M here: the
module will be called hid-led.</help>
					</entry>
					<entry name="HID_LENOVO">
						<label>Lenovo / Thinkpad devices</label>
						<help>Support for Lenovo devices that are not fully compliant with HID standard.

Say Y if you want support for the non-compliant features of the Lenovo
Thinkpad standalone keyboards, e.g:
- ThinkPad USB Keyboard with TrackPoint (supports extra LEDs and trackpoint
configuration)
- ThinkPad Compact Bluetooth Keyboard with TrackPoint (supports Fn keys)
- ThinkPad Compact USB Keyboard with TrackPoint (supports Fn keys)</help>
					</entry>
					<entry name="HID_LOGITECH">
						<label>Logitech devices</label>
						<help>Support for Logitech devices that are not fully compliant with HID standard.</help>
					</entry>
					<entry name="HID_LOGITECH_DJ">
						<label>Logitech Unifying receivers full support</label>
						<help>Say Y if you want support for Logitech Unifying receivers and devices.
Unifying receivers are capable of pairing up to 6 Logitech compliant
devices to the same receiver. Without this driver it will be handled by
generic USB_HID driver and all incoming events will be multiplexed
into a single mouse and a single keyboard device.</help>
					</entry>
					<entry name="HID_LOGITECH_HIDPP">
						<label>Logitech HID++ devices support</label>
						<help>Support for Logitech devices relyingon the HID++ Logitech specification

Say Y if you want support for Logitech devices relying on the HID++
specification. Such devices are the various Logitech Touchpads (T650,
T651, TK820), some mice (Zone Touch mouse), or even keyboards (Solar
Keyboard).</help>
					</entry>
					<entry name="LOGITECH_FF">
						<label>Logitech force feedback support</label>
						<help>Say Y here if you have one of these devices:
- Logitech WingMan Cordless RumblePad
- Logitech WingMan Cordless RumblePad 2
- Logitech WingMan Force 3D
- Logitech Formula Force EX
- Logitech WingMan Formula Force GP

and if you want to enable force feedback for them.
Note: if you say N here, this device will still be supported, but without
force feedback.</help>
					</entry>
					<entry name="LOGIRUMBLEPAD2_FF">
						<label>Logitech force feedback support (variant 2)</label>
						<help>Say Y here if you want to enable force feedback support for:
- Logitech RumblePad
- Logitech Rumblepad 2
- Logitech Formula Vibration Feedback Wheel</help>
					</entry>
					<entry name="LOGIG940_FF">
						<label>Logitech Flight System G940 force feedback support</label>
						<help>Say Y here if you want to enable force feedback support for Logitech
Flight System G940 devices.</help>
					</entry>
					<entry name="LOGIWHEELS_FF">
						<label>Logitech wheels configuration and force feedback support</label>
						<help>Say Y here if you want to enable force feedback and range setting
support for following Logitech wheels:
- Logitech Driving Force
- Logitech Driving Force Pro
- Logitech Driving Force GT
- Logitech G25
- Logitech G27
- Logitech MOMO/MOMO 2
- Logitech Formula Force EX</help>
					</entry>
					<entry name="HID_MAGICMOUSE">
						<label>Apple Magic Mouse/Trackpad multi-touch support</label>
						<help>Support for the Apple Magic Mouse/Trackpad multi-touch.

Say Y here if you want support for the multi-touch features of the
Apple Wireless &quot;Magic&quot; Mouse and the Apple Wireless &quot;Magic&quot; Trackpad.</help>
					</entry>
					<entry name="HID_MICROSOFT">
						<label>Microsoft non-fully HID-compliant devices</label>
						<help>Support for Microsoft devices that are not fully compliant with HID standard.</help>
					</entry>
					<entry name="HID_MONTEREY">
						<label>Monterey Genius KB29E keyboard</label>
						<help>Support for Monterey Genius KB29E.</help>
					</entry>
					<entry name="HID_MULTITOUCH">
						<label>HID Multitouch panels</label>
						<help>Generic support for HID multitouch panels.

Say Y here if you have one of the following devices:
- 3M PCT touch screens
- ActionStar dual touch panels
- Atmel panels
- Cando dual touch panels
- Chunghwa panels
- CJTouch panels
- CVTouch panels
- Cypress TrueTouch panels
- Elan Microelectronics touch panels
- Elo TouchSystems IntelliTouch Plus panels
- GeneralTouch 'Sensing Win7-TwoFinger' panels
- GoodTouch panels
- Hanvon dual touch panels
- Ilitek dual touch panels
- IrTouch Infrared USB panels
- LG Display panels (Dell ST2220Tc)
- Lumio CrystalTouch panels
- MosArt dual-touch panels
- Panasonic multitouch panels
- PenMount dual touch panels
- Perixx Peripad 701 touchpad
- PixArt optical touch screen
- Pixcir dual touch panels
- Quanta panels
- eGalax dual-touch panels, including the Joojoo and Wetab tablets
- SiS multitouch panels
- Stantum multitouch panels
- Touch International Panels
- Unitec Panels
- Wistron optical touch panels
- XAT optical touch panels
- Xiroku optical touch panels
- Zytronic touch panels

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called hid-multitouch.</help>
					</entry>
					<entry name="HID_NTRIG">
						<label>N-Trig touch screen</label>
						<help>Support for N-Trig touch screen.</help>
					</entry>
					<entry name="HID_ORTEK">
						<label>Ortek PKB-1700/WKB-2000/Skycable wireless keyboard and mouse trackpad</label>
						<help>There are certain devices which have LogicalMaximum wrong in the keyboard
usage page of their report descriptor. The most prevailing ones so far
are manufactured by Ortek, thus the name of the driver. Currently
supported devices by this driver are

- Ortek PKB-1700
- Ortek WKB-2000
- Skycable wireless presenter</help>
					</entry>
					<entry name="HID_PANTHERLORD">
						<label>Pantherlord/GreenAsia game controller</label>
						<help>Say Y here if you have a PantherLord/GreenAsia based game controller
or adapter.</help>
					</entry>
					<entry name="PANTHERLORD_FF">
						<label>Pantherlord force feedback support</label>
						<help>Say Y here if you have a PantherLord/GreenAsia based game controller
or adapter and want to enable force feedback support for it.</help>
					</entry>
					<entry name="HID_PENMOUNT">
						<label>Penmount touch device</label>
						<help>This selects a driver for the PenMount 6000 touch controller.

The driver works around a problem in the report descript allowing
the userspace to touch events instead of mouse events.

Say Y here if you have a Penmount based touch controller.</help>
					</entry>
					<entry name="HID_PETALYNX">
						<label>Petalynx Maxter remote control</label>
						<help>Support for Petalynx Maxter remote control.</help>
					</entry>
					<entry name="HID_PICOLCD">
						<label>PicoLCD (graphic version)</label>
						<help>This provides support for Minibox PicoLCD devices, currently
only the graphical ones are supported.

This includes support for the following device features:
- Keypad
- Switching between Firmware and Flash mode
- EEProm / Flash access     (via debugfs)
Features selectively enabled:
- Framebuffer for monochrome 256x64 display
- Backlight control
- Contrast control
- General purpose outputs
Features that are not (yet) supported:
- IR</help>
					</entry>
					<entry name="HID_PICOLCD_FB">
						<label>Framebuffer support&quot; if EXPERT</label>
						<help>Provide access to PicoLCD's 256x64 monochrome display via a
framebuffer device.</help>
					</entry>
					<entry name="HID_PICOLCD_BACKLIGHT">
						<label>Backlight control&quot; if EXPERT</label>
						<help>Provide access to PicoLCD's backlight control via backlight
class.</help>
					</entry>
					<entry name="HID_PICOLCD_LCD">
						<label>Contrast control&quot; if EXPERT</label>
						<help>Provide access to PicoLCD's LCD contrast via lcd class.</help>
					</entry>
					<entry name="HID_PICOLCD_LEDS">
						<label>GPO via leds class&quot; if EXPERT</label>
						<help>Provide access to PicoLCD's GPO pins via leds class.</help>
					</entry>
					<entry name="HID_PICOLCD_CIR">
						<label>CIR via RC class&quot; if EXPERT</label>
						<help>Provide access to PicoLCD's CIR interface via remote control (LIRC).</help>
					</entry>
					<entry name="HID_PLANTRONICS">
						<label>Plantronics USB HID Driver</label>
						<help>Provides HID support for Plantronics USB audio devices.
Correctly maps vendor unique volume up/down HID usages to
KEY_VOLUMEUP and KEY_VOLUMEDOWN events and prevents core mapping
of other vendor unique HID usages to random mouse events.

Say M here if you may ever plug in a Plantronics USB audio device.</help>
					</entry>
					<entry name="HID_PRIMAX">
						<label>Primax non-fully HID-compliant devices</label>
						<help>Support for Primax devices that are not fully compliant with the
HID standard.</help>
					</entry>
					<entry name="HID_ROCCAT">
						<label>Roccat device support</label>
						<help>Support for Roccat devices.
Say Y here if you have a Roccat mouse or keyboard and want
support for its special functionalities.</help>
					</entry>
					<entry name="HID_SAITEK">
						<label>Saitek (Mad Catz) non-fully HID-compliant devices</label>
						<help>Support for Saitek devices that are not fully compliant with the
HID standard.

Supported devices:
- PS1000 Dual Analog Pad
- Saitek R.A.T.7, R.A.T.9, M.M.O.7 Gaming Mice
- Mad Catz R.A.T.5, R.A.T.9 Gaming Mice</help>
					</entry>
					<entry name="HID_SAMSUNG">
						<label>Samsung InfraRed remote control or keyboards</label>
						<help>Support for Samsung InfraRed remote control or keyboards.</help>
					</entry>
					<entry name="HID_SONY">
						<label>Sony PS2/3/4 accessories</label>
						<help>Support for

* Sony PS3 6-axis controllers
* Sony PS4 DualShock 4 controllers
* Buzz controllers
* Sony PS3 Blue-ray Disk Remote Control (Bluetooth)
* Logitech Harmony adapter for Sony Playstation 3 (Bluetooth)</help>
					</entry>
					<entry name="SONY_FF">
						<label>Sony PS2/3/4 accessories force feedback support</label>
						<help>Say Y here if you have a Sony PS2/3/4 accessory and want to enable
force feedback support for it.</help>
					</entry>
					<entry name="HID_SPEEDLINK">
						<label>Speedlink VAD Cezanne mouse support</label>
						<help>Support for Speedlink Vicious and Divine Cezanne mouse.</help>
					</entry>
					<entry name="HID_STEELSERIES">
						<label>Steelseries SRW-S1 steering wheel support</label>
						<help>Support for Steelseries SRW-S1 steering wheel</help>
					</entry>
					<entry name="HID_SUNPLUS">
						<label>Sunplus wireless desktop</label>
						<help>Support for Sunplus wireless desktop.</help>
					</entry>
					<entry name="HID_RMI">
						<label>Synaptics RMI4 device support</label>
						<help>Support for Synaptics RMI4 touchpads.
Say Y here if you have a Synaptics RMI4 touchpads over i2c-hid or usbhid
and want support for its special functionalities.</help>
					</entry>
					<entry name="HID_GREENASIA">
						<label>GreenAsia (Product ID 0x12) game controller support</label>
						<help>Say Y here if you have a GreenAsia (Product ID 0x12) based game
controller or adapter.</help>
					</entry>
					<entry name="GREENASIA_FF">
						<label>GreenAsia (Product ID 0x12) force feedback support</label>
						<help>Say Y here if you have a GreenAsia (Product ID 0x12) based game controller
(like MANTA Warrior MM816 and SpeedLink Strike2 SL-6635) or adapter
and want to enable force feedback support for it.</help>
					</entry>
					<entry name="HID_HYPERV_MOUSE">
						<label>Microsoft Hyper-V mouse driver</label>
						<help>Select this option to enable the Hyper-V mouse driver.</help>
					</entry>
					<entry name="HID_SMARTJOYPLUS">
						<label>SmartJoy PLUS PS2/USB adapter support</label>
						<help>Support for SmartJoy PLUS PS2/USB adapter, Super Dual Box,
Super Joy Box 3 Pro, Super Dual Box Pro, and Super Joy Box 5 Pro.

Note that DDR (Dance Dance Revolution) mode is not supported, nor
is pressure sensitive buttons on the pro models.</help>
					</entry>
					<entry name="SMARTJOYPLUS_FF">
						<label>SmartJoy PLUS PS2/USB adapter force feedback support</label>
						<help>Say Y here if you have a SmartJoy PLUS PS2/USB adapter and want to
enable force feedback support for it.</help>
					</entry>
					<entry name="HID_TIVO">
						<label>TiVo Slide Bluetooth remote control support</label>
						<help>Say Y if you have a TiVo Slide Bluetooth remote control.</help>
					</entry>
					<entry name="HID_TOPSEED">
						<label>TopSeed Cyberlink, BTC Emprex, Conceptronic remote control support</label>
						<help>Say Y if you have a TopSeed Cyberlink or BTC Emprex or Conceptronic
CLLRCMCE remote control.</help>
					</entry>
					<entry name="HID_THINGM">
						<label>ThingM blink(1) USB RGB LED</label>
						<help>Support for the ThingM blink(1) USB RGB LED. This driver has been
merged into the generic hid led driver. Config symbol HID_THINGM
just selects HID_LED and will be removed soon.</help>
					</entry>
					<entry name="HID_THRUSTMASTER">
						<label>ThrustMaster devices support</label>
						<help>Say Y here if you have a THRUSTMASTER FireStore Dual Power 2 or
a THRUSTMASTER Ferrari GT Rumble Wheel.</help>
					</entry>
					<entry name="THRUSTMASTER_FF">
						<label>ThrustMaster devices force feedback support</label>
						<help>Say Y here if you have a THRUSTMASTER FireStore Dual Power 2 or 3,
a THRUSTMASTER Dual Trigger 3-in-1 or a THRUSTMASTER Ferrari GT
Rumble Force or Force Feedback Wheel.</help>
					</entry>
					<entry name="HID_WACOM">
						<label>Wacom Intuos/Graphire tablet support (USB)</label>
						<help>Say Y here if you want to use the USB or BT version of the Wacom Intuos
or Graphire tablet.

To compile this driver as a module, choose M here: the
module will be called wacom.</help>
					</entry>
					<entry name="HID_WIIMOTE">
						<label>Nintendo Wii / Wii U peripherals</label>
						<help>Support for Nintendo Wii and Wii U Bluetooth peripherals. Supported
devices are the Wii Remote and its extension devices, but also devices
based on the Wii Remote like the Wii U Pro Controller or the
Wii Balance Board.

Support for all official Nintendo extensions is available, however, 3rd
party extensions might not be supported. Please report these devices to:
http://github.com/dvdhrm/xwiimote/issues

Other Nintendo Wii U peripherals that are IEEE 802.11 based (including
the Wii U Gamepad) might be supported in the future. But currently
support is limited to Bluetooth based devices.

If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called hid-wiimote.</help>
					</entry>
					<entry name="HID_XINMO">
						<label>Xin-Mo non-fully compliant devices</label>
						<help>Support for Xin-Mo devices that are not fully compliant with the HID
standard. Currently only supports the Xin-Mo Dual Arcade. Say Y here
if you have a Xin-Mo Dual Arcade controller.</help>
					</entry>
					<entry name="HID_ZEROPLUS">
						<label>Zeroplus based game controller support</label>
						<help>Say Y here if you have a Zeroplus based game controller.</help>
					</entry>
					<entry name="ZEROPLUS_FF">
						<label>Zeroplus based game controller force feedback support</label>
						<help>Say Y here if you have a Zeroplus based game controller and want
to have force feedback support for it.</help>
					</entry>
					<entry name="HID_ZYDACRON">
						<label>Zydacron remote control support</label>
						<help>Support for Zydacron remote control.</help>
					</entry>
					<entry name="HID_SENSOR_HUB">
						<label>HID Sensors framework support</label>
						<help>Support for HID Sensor framework. This creates a MFD instance
for a sensor hub and identifies all the sensors connected to it.
Each sensor is registered as a MFD cell, so that sensor specific
processing can be done in a separate driver. Each sensor
drivers can use the service provided by this driver to register
for events and handle data streams. Each sensor driver can format
data and present to user mode using input or IIO interface.</help>
					</entry>
					<entry name="HID_SENSOR_CUSTOM_SENSOR">
						<label>HID Sensors hub custom sensor support</label>
						<help>HID Sensor hub specification allows definition of some custom and
generic sensors. Unlike other HID sensors, they can't be exported
via Linux IIO because of custom fields. This is up to the manufacturer
to decide how to interpret these special sensor ids and process in
the user space. Currently some manufacturers are using these ids for
sensor calibration and debugging other sensors. Manufacturers
should't use these special custom sensor ids to export any of the
standard sensors.
Select this config option for custom/generic sensor support.</help>
					</entry>
					<entry name="HID_ALPS">
						<label>Alps HID device support</label>
						<help>Support for Alps I2C HID touchpads and StickPointer.
Say Y here if you have a Alps touchpads over i2c-hid or usbhid
and want support for its special functionalities.</help>
					</entry>
				</container>
				<container name="USB_HID_support">
					<label>USB HID support</label>
					<entry name="USB_HID">
						<label>USB HID transport layer</label>
						<help>Say Y here if you want to connect USB keyboards,
mice, joysticks, graphic tablets, or any other HID based devices
to your computer via USB, as well as Uninterruptible Power Supply
(UPS) and monitor control devices.

You can't use this driver and the HIDBP (Boot Protocol) keyboard
and mouse drivers at the same time. More information is available:
&lt;file:Documentation/input/input.txt&gt;.

If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called usbhid.</help>
					</entry>
					<entry name="HID_PID">
						<label>PID device support</label>
						<help>Say Y here if you have a PID-compliant device and wish to enable force
feedback for it. Microsoft Sidewinder Force Feedback 2 is one of such
devices.</help>
					</entry>
					<entry name="USB_HIDDEV">
						<label>/dev/hiddev raw HID device support</label>
						<help>Say Y here if you want to support HID devices (from the USB
specification standpoint) that aren't strictly user interface
devices, like monitor controls and Uninterruptable Power Supplies.

This module supports these devices separately using a separate
event interface on /dev/usb/hiddevX (char 180:96 to 180:111).

If unsure, say Y.</help>
					</entry>
					<container name="USB_HID_Boot_Protocol_drivers">
						<label>USB HID Boot Protocol drivers</label>
						<entry name="USB_KBD">
							<label>USB HIDBP Keyboard (simple Boot) support</label>
							<help>Say Y here only if you are absolutely sure that you don't want
to use the generic HID driver for your USB keyboard and prefer
to use the keyboard in its limited Boot Protocol mode instead.

This is almost certainly not what you want.  This is mostly
useful for embedded applications or simple keyboards.

To compile this driver as a module, choose M here: the
module will be called usbkbd.

If even remotely unsure, say N.</help>
						</entry>
						<entry name="USB_MOUSE">
							<label>USB HIDBP Mouse (simple Boot) support</label>
							<help>Say Y here only if you are absolutely sure that you don't want
to use the generic HID driver for your USB mouse and prefer
to use the mouse in its limited Boot Protocol mode instead.

This is almost certainly not what you want.  This is mostly
useful for embedded applications or simple mice.

To compile this driver as a module, choose M here: the
module will be called usbmouse.

If even remotely unsure, say N.</help>
						</entry>
					</container>
				</container>
				<container name="I2C_HID_support">
					<label>I2C HID support</label>
					<entry name="I2C_HID">
						<label>HID over I2C transport layer</label>
						<help>Say Y here if you use a keyboard, a touchpad, a touchscreen, or any
other HID based devices which is connected to your computer via I2C.

If unsure, say N.

This support is also available as a module.  If so, the module
will be called i2c-hid.</help>
					</entry>
				</container>
			</container>
			<entry name="USB_OHCI_BIG_ENDIAN_DESC"/>
			<entry name="USB_OHCI_BIG_ENDIAN_MMIO"/>
			<entry name="USB_OHCI_LITTLE_ENDIAN"/>
			<entry name="USB_EHCI_BIG_ENDIAN_MMIO"/>
			<entry name="USB_EHCI_BIG_ENDIAN_DESC"/>
			<entry name="USB_SUPPORT">
				<label>USB support</label>
				<help>This option adds core support for Universal Serial Bus (USB).
You will also need drivers from the following menu to make use of it.</help>
			</entry>
			<entry name="USB_COMMON"/>
			<entry name="USB_ARCH_HAS_HCD"/>
			<entry name="USB">
				<label>Support for Host-side USB</label>
				<help>Universal Serial Bus (USB) is a specification for a serial bus
subsystem which offers higher speeds and more features than the
traditional PC serial port.  The bus supplies power to peripherals
and allows for hot swapping.  Up to 127 USB peripherals can be
connected to a single USB host in a tree structure.

The USB host is the root of the tree, the peripherals are the
leaves and the inner nodes are special USB devices called hubs.
Most PCs now have USB host ports, used to connect peripherals
such as scanners, keyboards, mice, modems, cameras, disks,
flash memory, network links, and printers to the PC.

Say Y here if your computer has a host-side USB port and you want
to use USB devices.  You then need to say Y to at least one of the
Host Controller Driver (HCD) options below.  Choose a USB 1.1
controller, such as &quot;UHCI HCD support&quot; or &quot;OHCI HCD support&quot;,
and &quot;EHCI HCD (USB 2.0) support&quot; except for older systems that
do not have USB 2.0 support.  It doesn't normally hurt to select
them all if you are not certain.

If your system has a device-side USB port, used in the peripheral
side of the USB protocol, see the &quot;USB Gadget&quot; framework instead.

After choosing your HCD, then select drivers for the USB peripherals
you'll be using.  You may want to check out the information provided
in &lt;file:Documentation/usb/&gt; and especially the links given in
&lt;file:Documentation/usb/usb-help.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called usbcore.</help>
			</entry>
			<entry name="USB_ANNOUNCE_NEW_DEVICES">
				<label>USB announce new devices</label>
				<help>Say Y here if you want the USB core to always announce the
idVendor, idProduct, Manufacturer, Product, and SerialNumber
strings for every new USB device to the syslog.  This option is
usually used by distro vendors to help with debugging and to
let users know what specific device was added to the machine
in what location.

If you do not want this kind of information sent to the system
log, or have any doubts about this, say N here.</help>
			</entry>
			<entry name="USB_DEFAULT_PERSIST">
				<label>Enable USB persist by default</label>
				<help>Say N here if you don't want USB power session persistence
enabled by default.  If you say N it will make suspended USB
devices that lose power get reenumerated as if they had been
unplugged, causing any mounted filesystems to be lost.  The
persist feature can still be enabled for individual devices
through the power/persist sysfs node. See
Documentation/usb/persist.txt for more info.

If you have any questions about this, say Y here, only say N
if you know exactly what you are doing.</help>
			</entry>
			<entry name="USB_DYNAMIC_MINORS">
				<label>Dynamic USB minor allocation</label>
				<help>If you say Y here, the USB subsystem will use dynamic minor
allocation for any device that uses the USB major number.
This means that you can have more than 16 of a single type
of device (like USB printers).

If you are unsure about this, say N here.</help>
			</entry>
			<entry name="USB_OTG">
				<label>OTG support</label>
				<help>The most notable feature of USB OTG is support for a
&quot;Dual-Role&quot; device, which can act as either a device
or a host. The initial role is decided by the type of
plug inserted and can be changed later when two dual
role devices talk to each other.

Select this only if your board has Mini-AB/Micro-AB
connector.</help>
			</entry>
			<entry name="USB_OTG_WHITELIST">
				<label>Rely on OTG and EH Targeted Peripherals List</label>
				<help>If you say Y here, the &quot;otg_whitelist.h&quot; file will be used as a
product whitelist, so USB peripherals not listed there will be
rejected during enumeration.  This behavior is required by the
USB OTG and EH specification for all devices not on your product's
&quot;Targeted Peripherals List&quot;.  &quot;Embedded Hosts&quot; are likewise
allowed to support only a limited number of peripherals.</help>
			</entry>
			<entry name="USB_OTG_BLACKLIST_HUB">
				<label>Disable external hubs</label>
				<help>If you say Y here, then Linux will refuse to enumerate
external hubs.  OTG hosts are allowed to reduce hardware
and software costs by not supporting external hubs.  So
are &quot;Embedded Hosts&quot; that don't offer OTG support.</help>
			</entry>
			<entry name="USB_OTG_FSM">
				<label>USB 2.0 OTG FSM implementation</label>
				<help>Implements OTG Finite State Machine as specified in On-The-Go
and Embedded Host Supplement to the USB Revision 2.0 Specification.</help>
			</entry>
			<entry name="USB_ULPI_BUS">
				<label>USB ULPI PHY interface support</label>
				<help>UTMI+ Low Pin Interface (ULPI) is specification for a commonly used
USB 2.0 PHY interface. The ULPI specification defines a standard set
of registers that can be used to detect the vendor and product which
allows ULPI to be handled as a bus. This module is the driver for that
bus.

The ULPI interfaces (the buses) are registered by the drivers for USB
controllers which support ULPI register access and have ULPI PHY
attached to them. The ULPI PHY drivers themselves are normal PHY
drivers.

ULPI PHYs provide often functions such as ADP sensing/probing (OTG
protocol) and USB charger detection.

To compile this driver as a module, choose M here: the module will
be called ulpi.
</help>
			</entry>
			<entry name="USB_MON">
				<label>USB Monitor</label>
				<help>If you select this option, a component which captures the USB traffic
between peripheral-specific drivers and HC drivers will be built.
For more information, see &lt;file:Documentation/usb/usbmon.txt&gt;.

If unsure, say Y, if allowed, otherwise M.
</help>
			</entry>
			<entry name="USB_WUSB">
				<label>Enable Wireless USB extensions</label>
				<help>Enable the host-side support for Wireless USB.

To compile this support select Y (built in). It is safe to
select even if you don't have the hardware.</help>
			</entry>
			<entry name="USB_WUSB_CBAF">
				<label>Support WUSB Cable Based Association (CBA)</label>
				<help>Some WUSB devices support Cable Based Association. It's used to
enable the secure communication between the host and the
device.

Enable this option if your WUSB device must to be connected
via wired USB before establishing a wireless link.

It is safe to select even if you don't have a compatible
hardware.</help>
			</entry>
			<entry name="USB_WUSB_CBAF_DEBUG">
				<label>Enable CBA debug messages</label>
				<help>Say Y here if you want the CBA to produce a bunch of debug messages
to the system log. Select this if you are having a problem with
CBA support and want to see more of what is going on.

</help>
			</entry>
			<entry name="USB_C67X00_HCD">
				<label>Cypress C67x00 HCD support</label>
				<help>The Cypress C67x00 (EZ-Host/EZ-OTG) chips are dual-role
host/peripheral/OTG USB controllers.

Enable this option to support this chip in host controller mode.
If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called c67x00.</help>
			</entry>
			<entry name="USB_XHCI_HCD">
				<label>xHCI HCD (USB 3.0) support</label>
				<help>The eXtensible Host Controller Interface (xHCI) is standard for USB 3.0
&quot;SuperSpeed&quot; host controller hardware.

To compile this driver as a module, choose M here: the
module will be called xhci-hcd.</help>
			</entry>
			<entry name="USB_XHCI_PCI"/>
			<entry name="USB_XHCI_PLATFORM">
				<label>Generic xHCI driver for a platform device</label>
				<help>Adds an xHCI host driver for a generic platform device, which
provides a memory space and an irq.
It is also a prerequisite for platform specific drivers that
implement some extra quirks.

If unsure, say N.</help>
			</entry>
			<entry name="USB_XHCI_MTK">
				<label>xHCI support for Mediatek MT65xx</label>
				<help>Say 'Y' to enable the support for the xHCI host controller
found in Mediatek MT65xx SoCs.
If unsure, say N.</help>
			</entry>
			<entry name="USB_XHCI_MVEBU">
				<label>xHCI support for Marvell Armada 375/38x</label>
				<help>Say 'Y' to enable the support for the xHCI host controller
found in Marvell Armada 375/38x ARM SOCs.</help>
			</entry>
			<entry name="USB_XHCI_RCAR">
				<label>xHCI support for Renesas R-Car SoCs</label>
				<help>Say 'Y' to enable the support for the xHCI host controller
found in Renesas R-Car ARM SoCs.</help>
			</entry>
			<entry name="USB_XHCI_TEGRA">
				<label>xHCI support for NVIDIA Tegra SoCs</label>
				<help>Say 'Y' to enable the support for the xHCI host controller
found in NVIDIA Tegra124 and later SoCs.</help>
			</entry>
			<entry name="USB_EHCI_HCD">
				<label>EHCI HCD (USB 2.0) support</label>
				<help>The Enhanced Host Controller Interface (EHCI) is standard for USB 2.0
&quot;high speed&quot; (480 Mbit/sec, 60 Mbyte/sec) host controller hardware.
If your USB host controller supports USB 2.0, you will likely want to
configure this Host Controller Driver.

EHCI controllers are packaged with &quot;companion&quot; host controllers (OHCI
or UHCI) to handle USB 1.1 devices connected to root hub ports.  Ports
will connect to EHCI if the device is high speed, otherwise they
connect to a companion controller.  If you configure EHCI, you should
probably configure the OHCI (for NEC and some other vendors) USB Host
Controller Driver or UHCI (for Via motherboards) Host Controller
Driver too.

You may want to read &lt;file:Documentation/usb/ehci.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called ehci-hcd.</help>
			</entry>
			<entry name="USB_EHCI_ROOT_HUB_TT">
				<label>Root Hub Transaction Translators</label>
				<help>Some EHCI chips have vendor-specific extensions to integrate
transaction translators, so that no OHCI or UHCI companion
controller is needed.  It's safe to say &quot;y&quot; even if your
controller doesn't support this feature.

This supports the EHCI implementation that's originally
from ARC, and has since changed hands a few times.</help>
			</entry>
			<entry name="USB_EHCI_TT_NEWSCHED">
				<label>Improved Transaction Translator scheduling</label>
				<help>This changes the periodic scheduling code to fill more of the low
and full speed bandwidth available from the Transaction Translator
(TT) in USB 2.0 hubs.  Without this, only one transfer will be
issued in each microframe, significantly reducing the number of
periodic low/fullspeed transfers possible.

If you have multiple periodic low/fullspeed devices connected to a
highspeed USB hub which is connected to a highspeed USB Host
Controller, and some of those devices will not work correctly
(possibly due to &quot;ENOSPC&quot; or &quot;-28&quot; errors), say Y.  Conversely, if
you have only one such device and it doesn't work, you could try
saying N.

If unsure, say Y.</help>
			</entry>
			<entry name="USB_EHCI_PCI"/>
			<entry name="USB_EHCI_HCD_PMC_MSP">
				<label>EHCI support for on-chip PMC MSP71xx USB controller</label>
				<help>Enables support for the onchip USB controller on the PMC_MSP7100 Family SoC's.
If unsure, say N.</help>
			</entry>
			<entry name="XPS_USB_HCD_XILINX">
				<label>Use Xilinx usb host EHCI controller core</label>
				<help>Xilinx xps USB host controller core is EHCI compliant and has
transaction translator built-in. It can be configured to either
support both high speed and full speed devices, or high speed
devices only.</help>
			</entry>
			<entry name="USB_EHCI_FSL">
				<label>Support for Freescale PPC on-chip EHCI USB controller</label>
				<help>Variation of ARC USB block used in some Freescale chips.</help>
			</entry>
			<entry name="USB_EHCI_MXC">
				<label>Support for Freescale i.MX on-chip EHCI USB controller</label>
				<help>Variation of ARC USB block used in some Freescale chips.</help>
			</entry>
			<entry name="USB_EHCI_HCD_OMAP">
				<label>EHCI support for OMAP3 and later chips</label>
				<help>Enables support for the on-chip EHCI controller on
OMAP3 and later chips.</help>
			</entry>
			<entry name="USB_EHCI_HCD_ORION">
				<label>Support for Marvell EBU on-chip EHCI USB controller</label>
				<help>Enables support for the on-chip EHCI controller on Marvell's
embedded ARM SoCs, including Orion, Kirkwood, Dove, Armada XP,
Armada 370.  This is different from the EHCI implementation
on Marvell's mobile PXA and MMP SoC, see &quot;EHCI support for
Marvell PXA/MMP USB controller&quot; for those.</help>
			</entry>
			<entry name="USB_EHCI_HCD_SPEAR">
				<label>Support for ST SPEAr on-chip EHCI USB controller</label>
				<help>Enables support for the on-chip EHCI controller on
ST SPEAr chips.</help>
			</entry>
			<entry name="USB_EHCI_HCD_STI">
				<label>Support for ST STiHxxx on-chip EHCI USB controller</label>
				<help>Enable support for the on-chip EHCI controller found on
STMicroelectronics consumer electronics SoC's.</help>
			</entry>
			<entry name="USB_EHCI_HCD_AT91">
				<label>Support for Atmel on-chip EHCI USB controller</label>
				<help>Enables support for the on-chip EHCI controller on
Atmel chips.</help>
			</entry>
			<entry name="USB_EHCI_MSM">
				<label>Support for Qualcomm QSD/MSM on-chip EHCI USB controller</label>
				<help>Enables support for the USB Host controller present on the
Qualcomm chipsets. Root Hub has inbuilt TT.
This driver depends on OTG driver for PHY initialization,
clock management, powering up VBUS, and power management.
This driver is not supported on boards like trout which
has an external PHY.</help>
			</entry>
			<entry name="USB_EHCI_TEGRA">
				<label>NVIDIA Tegra HCD support</label>
				<help>This driver enables support for the internal USB Host Controllers
found in NVIDIA Tegra SoCs. The controllers are EHCI compliant.</help>
			</entry>
			<entry name="USB_EHCI_HCD_PPC_OF">
				<label>EHCI support for PPC USB controller on OF platform bus</label>
				<help>Enables support for the USB controller present on the PowerPC
OpenFirmware platform bus.</help>
			</entry>
			<entry name="USB_EHCI_SH">
				<label>EHCI support for SuperH USB controller</label>
				<help>Enables support for the on-chip EHCI controller on the SuperH.
If you use the PCI EHCI controller, this option is not necessary.</help>
			</entry>
			<entry name="USB_EHCI_EXYNOS">
				<label>EHCI support for Samsung S5P/EXYNOS SoC Series</label>
				<help>Enable support for the Samsung Exynos SOC's on-chip EHCI controller.</help>
			</entry>
			<entry name="USB_EHCI_MV">
				<label>EHCI support for Marvell PXA/MMP USB controller</label>
				<help>Enables support for Marvell (including PXA and MMP series) on-chip
USB SPH and OTG controller. SPH is a single port host, and it can
only be EHCI host. OTG is controller that can switch to host mode.
Note that this driver will not work on Marvell's other EHCI
controller used by the EBU-type SoCs including Orion, Kirkwood,
Dova, Armada 370 and Armada XP. See &quot;Support for Marvell EBU
on-chip EHCI USB controller&quot; for those.</help>
			</entry>
			<entry name="USB_W90X900_EHCI">
				<label>W90X900(W90P910) EHCI support</label>
				<help>Enables support for the W90X900 USB controller</help>
			</entry>
			<entry name="USB_CNS3XXX_EHCI">
				<label>Cavium CNS3XXX EHCI Module (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_EHCI_HCD_PLATFORM instead.

Enable support for the CNS3XXX SOC's on-chip EHCI controller.
It is needed for high-speed (480Mbit/sec) USB 2.0 device
support.</help>
			</entry>
			<entry name="USB_EHCI_ATH79">
				<label>EHCI support for AR7XXX/AR9XXX SoCs (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_EHCI_HCD_PLATFORM instead.

Enables support for the built-in EHCI controller present
on the Atheros AR7XXX/AR9XXX SoCs.</help>
			</entry>
			<entry name="USB_EHCI_HCD_PLATFORM">
				<label>Generic EHCI driver for a platform device</label>
				<help>Adds an EHCI host driver for a generic platform device, which
provides a memory space and an irq.

If unsure, say N.</help>
			</entry>
			<entry name="USB_OCTEON_EHCI">
				<label>Octeon on-chip EHCI support (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_EHCI_HCD_PLATFORM instead.

Enable support for the Octeon II SOC's on-chip EHCI
controller.  It is needed for high-speed (480Mbit/sec)
USB 2.0 device support.  All CN6XXX based chips with USB are
supported.</help>
			</entry>
			<entry name="USB_OXU210HP_HCD">
				<label>OXU210HP HCD support</label>
				<help>The OXU210HP is an USB host/OTG/device controller. Enable this
option if your board has this chip. If unsure, say N.

This driver does not support isochronous transfers and doesn't
implement OTG nor USB device controllers.

To compile this driver as a module, choose M here: the
module will be called oxu210hp-hcd.</help>
			</entry>
			<entry name="USB_ISP116X_HCD">
				<label>ISP116X HCD support</label>
				<help>The ISP1160 and ISP1161 chips are USB host controllers. Enable this
option if your board has this chip. If unsure, say N.

This driver does not support isochronous transfers.

To compile this driver as a module, choose M here: the
module will be called isp116x-hcd.</help>
			</entry>
			<entry name="USB_ISP1362_HCD">
				<label>ISP1362 HCD support</label>
				<help>Supports the Philips ISP1362 chip as a host controller

This driver does not support isochronous transfers.

To compile this driver as a module, choose M here: the
module will be called isp1362-hcd.</help>
			</entry>
			<entry name="USB_FOTG210_HCD">
				<label>FOTG210 HCD support</label>
				<help>Faraday FOTG210 is an OTG controller which can be configured as
an USB2.0 host. It is designed to meet USB2.0 EHCI specification
with minor modification.

To compile this driver as a module, choose M here: the
module will be called fotg210-hcd.</help>
			</entry>
			<entry name="USB_MAX3421_HCD">
				<label>MAX3421 HCD (USB-over-SPI) support</label>
				<help>The Maxim MAX3421E chip supports standard USB 2.0-compliant
full-speed devices either in host or peripheral mode.  This
driver supports the host-mode of the MAX3421E only.

To compile this driver as a module, choose M here: the module will
be called max3421-hcd.</help>
			</entry>
			<entry name="USB_OHCI_HCD">
				<label>OHCI HCD (USB 1.1) support</label>
				<help>The Open Host Controller Interface (OHCI) is a standard for accessing
USB 1.1 host controller hardware.  It does more in hardware than Intel's
UHCI specification.  If your USB host controller follows the OHCI spec,
say Y.  On most non-x86 systems, and on x86 hardware that's not using a
USB controller from Intel or VIA, this is appropriate.  If your host
controller doesn't use PCI, this is probably appropriate.  For a PCI
based system where you're not sure, the &quot;lspci -v&quot; entry will list the
right &quot;prog-if&quot; for your USB controller(s):  EHCI, OHCI, or UHCI.

To compile this driver as a module, choose M here: the
module will be called ohci-hcd.</help>
			</entry>
			<entry name="USB_OHCI_HCD_OMAP1">
				<label>OHCI support for OMAP1/2 chips</label>
				<help>Enables support for the OHCI controller on OMAP1/2 chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_SPEAR">
				<label>Support for ST SPEAr on-chip OHCI USB controller</label>
				<help>Enables support for the on-chip OHCI controller on
ST SPEAr chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_STI">
				<label>Support for ST STiHxxx on-chip OHCI USB controller</label>
				<help>Enable support for the on-chip OHCI controller found on
STMicroelectronics consumer electronics SoC's.</help>
			</entry>
			<entry name="USB_OHCI_HCD_S3C2410">
				<label>OHCI support for Samsung S3C24xx/S3C64xx SoC series</label>
				<help>Enables support for the on-chip OHCI controller on
S3C24xx/S3C64xx chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_LPC32XX">
				<label>Support for LPC on-chip OHCI USB controller</label>
				<help>Enables support for the on-chip OHCI controller on
NXP chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_PXA27X">
				<label>Support for PXA27X/PXA3XX on-chip OHCI USB controller</label>
				<help>Enables support for the on-chip OHCI controller on
PXA27x/PXA3xx chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_AT91">
				<label>Support for Atmel on-chip OHCI USB controller</label>
				<help>Enables support for the on-chip OHCI controller on
Atmel chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_OMAP3">
				<label>OHCI support for OMAP3 and later chips</label>
				<help>Enables support for the on-chip OHCI controller on
OMAP3 and later chips.</help>
			</entry>
			<entry name="USB_OHCI_HCD_DAVINCI">
				<label>OHCI support for TI DaVinci DA8xx</label>
				<help>Enables support for the DaVinci DA8xx integrated OHCI
controller. This driver cannot currently be a loadable
module because it lacks a proper PHY abstraction.</help>
			</entry>
			<entry name="USB_OHCI_ATH79">
				<label>USB OHCI support for the Atheros AR71XX/AR7240 SoCs (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_OHCI_HCD_PLATFORM instead.

Enables support for the built-in OHCI controller present on the
Atheros AR71XX/AR7240 SoCs.</help>
			</entry>
			<entry name="USB_OHCI_HCD_PPC_OF_BE">
				<label>OHCI support for OF platform bus (big endian)</label>
				<help>Enables support for big-endian USB controllers present on the
OpenFirmware platform bus.</help>
			</entry>
			<entry name="USB_OHCI_HCD_PPC_OF_LE">
				<label>OHCI support for OF platform bus (little endian)</label>
				<help>Enables support for little-endian USB controllers present on the
OpenFirmware platform bus.</help>
			</entry>
			<entry name="USB_OHCI_HCD_PPC_OF"/>
			<entry name="USB_OHCI_HCD_PCI">
				<label>OHCI support for PCI-bus USB controllers</label>
				<help>Enables support for PCI-bus plug-in USB controller cards.
If unsure, say Y.</help>
			</entry>
			<entry name="USB_OHCI_HCD_SSB">
				<label>OHCI support for Broadcom SSB OHCI core (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_HCD_SSB and USB_OHCI_HCD_PLATFORM instead.

Support for the Sonics Silicon Backplane (SSB) attached
Broadcom USB OHCI core.

This device is present in some embedded devices with
Broadcom based SSB bus.

If unsure, say N.</help>
			</entry>
			<entry name="USB_OHCI_SH">
				<label>OHCI support for SuperH USB controller (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_OHCI_HCD_PLATFORM instead.

Enables support for the on-chip OHCI controller on the SuperH.
If you use the PCI OHCI controller, this option is not necessary.</help>
			</entry>
			<entry name="USB_OHCI_EXYNOS">
				<label>OHCI support for Samsung S5P/EXYNOS SoC Series</label>
				<help>Enable support for the Samsung Exynos SOC's on-chip OHCI controller.</help>
			</entry>
			<entry name="USB_CNS3XXX_OHCI">
				<label>Cavium CNS3XXX OHCI Module (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_OHCI_HCD_PLATFORM instead.

Enable support for the CNS3XXX SOC's on-chip OHCI controller.
It is needed for low-speed USB 1.0 device support.</help>
			</entry>
			<entry name="USB_OHCI_HCD_PLATFORM">
				<label>Generic OHCI driver for a platform device</label>
				<help>Adds an OHCI host driver for a generic platform device, which
provides a memory space and an irq.

If unsure, say N.</help>
			</entry>
			<entry name="USB_OCTEON_OHCI">
				<label>Octeon on-chip OHCI support (DEPRECATED)</label>
				<help>This option is deprecated now and the driver was removed, use
USB_OHCI_HCD_PLATFORM instead.

Enable support for the Octeon II SOC's on-chip OHCI
controller.  It is needed for low-speed USB 1.0 device
support.  All CN6XXX based chips with USB are supported.</help>
			</entry>
			<entry name="USB_UHCI_HCD">
				<label>UHCI HCD (most Intel and VIA) support</label>
				<help>The Universal Host Controller Interface is a standard by Intel for
accessing the USB hardware in the PC (which is also called the USB
host controller). If your USB host controller conforms to this
standard, you may want to say Y, but see below. All recent boards
with Intel PCI chipsets (like intel 430TX, 440FX, 440LX, 440BX,
i810, i820) conform to this standard. Also all VIA PCI chipsets
(like VIA VP2, VP3, MVP3, Apollo Pro, Apollo Pro II or Apollo Pro
133) and LEON/GRLIB SoCs with the GRUSBHC controller.
If unsure, say Y.

To compile this driver as a module, choose M here: the
module will be called uhci-hcd.</help>
			</entry>
			<entry name="USB_UHCI_SUPPORT_NON_PCI_HC"/>
			<entry name="USB_UHCI_PLATFORM"/>
			<entry name="USB_UHCI_BIG_ENDIAN_MMIO"/>
			<entry name="USB_UHCI_BIG_ENDIAN_DESC"/>
			<entry name="USB_FHCI_HCD">
				<label>Freescale QE USB Host Controller support</label>
				<help>This driver enables support for Freescale QE USB Host Controller
(as found on MPC8360 and MPC8323 processors), the driver supports
Full and Low Speed USB.</help>
			</entry>
			<entry name="FHCI_DEBUG">
				<label>Freescale QE USB Host Controller debug support</label>
				<help>Say &quot;y&quot; to see some FHCI debug information and statistics
through debugfs.</help>
			</entry>
			<entry name="USB_U132_HCD">
				<label>Elan U132 Adapter Host Controller</label>
				<help>The U132 adapter is a USB to CardBus adapter specifically designed
for PC cards that contain an OHCI host controller. Typical PC cards
are the Orange Mobile 3G Option GlobeTrotter Fusion card. The U132
adapter will *NOT* work with PC cards that do not contain an OHCI
controller.

For those PC cards that contain multiple OHCI controllers only the
first one is used.

The driver consists of two modules, the &quot;ftdi-elan&quot; module is a
USB client driver that interfaces to the FTDI chip within ELAN's
USB-to-PCMCIA adapter, and this &quot;u132-hcd&quot; module is a USB host
controller driver that talks to the OHCI controller within the
CardBus cards that are inserted in the U132 adapter.

This driver has been tested with a CardBus OHCI USB adapter, and
worked with a USB PEN Drive inserted into the first USB port of
the PCCARD. A rather pointless thing to do, but useful for testing.

It is safe to say M here.

See also &lt;http://www.elandigitalsystems.com/support/ufaq/u132linux.php&gt;</help>
			</entry>
			<entry name="USB_SL811_HCD">
				<label>SL811HS HCD support</label>
				<help>The SL811HS is a single-port USB controller that supports either
host side or peripheral side roles.  Enable this option if your
board has this chip, and you want to use it as a host controller.
If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called sl811-hcd.</help>
			</entry>
			<entry name="USB_SL811_HCD_ISO">
				<label>partial ISO support</label>
				<help>The driver doesn't support iso_frame_desc (yet), but for some simple
devices that just queue one ISO frame per URB, then ISO transfers
&quot;should&quot; work using the normal urb status fields.

If unsure, say N.</help>
			</entry>
			<entry name="USB_SL811_CS">
				<label>CF/PCMCIA support for SL811HS HCD</label>
				<help>Wraps a PCMCIA driver around the SL811HS HCD, supporting the RATOC
REX-CFU1U CF card (often used with PDAs).  If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called &quot;sl811_cs&quot;.</help>
			</entry>
			<entry name="USB_R8A66597_HCD">
				<label>R8A66597 HCD support</label>
				<help>The R8A66597 is a USB 2.0 host and peripheral controller.

Enable this option if your board has this chip, and you want
to use it as a host controller.  If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called r8a66597-hcd.</help>
			</entry>
			<entry name="USB_RENESAS_USBHS_HCD">
				<label>Renesas USBHS HCD support</label>
				<help>The Renesas USBHS is a USB 2.0 host and peripheral controller.

Enable this option if your board has this chip, and you want
to use it as a host controller.  If unsure, say N.

To compile this driver as a module, choose M here: the
module will be called renesas-usbhs.</help>
			</entry>
			<entry name="USB_WHCI_HCD">
				<label>Wireless USB Host Controller Interface (WHCI) driver</label>
				<help>A driver for PCI-based Wireless USB Host Controllers that are
compliant with the WHCI specification.

To compile this driver a module, choose M here: the module
will be called &quot;whci-hcd&quot;.</help>
			</entry>
			<entry name="USB_HWA_HCD">
				<label>Host Wire Adapter (HWA) driver</label>
				<help>This driver enables you to connect Wireless USB devices to
your system using a Host Wire Adaptor USB dongle. This is an
UWB Radio Controller and WUSB Host Controller connected to
your machine via USB (specified in WUSB1.0).

To compile this driver a module, choose M here: the module
will be called &quot;hwa-hc&quot;.</help>
			</entry>
			<entry name="USB_IMX21_HCD">
				<label>i.MX21 HCD support</label>
				<help>This driver enables support for the on-chip USB host in the
i.MX21 processor.

To compile this driver as a module, choose M here: the
module will be called &quot;imx21-hcd&quot;.</help>
			</entry>
			<entry name="USB_HCD_BCMA">
				<label>BCMA usb host driver</label>
				<help>Enable support for the EHCI and OCHI host controller on an bcma bus.
It converts the bcma driver into two platform device drivers
for ehci and ohci.

If unsure, say N.</help>
			</entry>
			<entry name="USB_HCD_SSB">
				<label>SSB usb host driver</label>
				<help>Enable support for the EHCI and OCHI host controller on an bcma bus.
It converts the bcma driver into two platform device drivers
for ehci and ohci.

If unsure, say N.</help>
			</entry>
			<entry name="USB_HCD_TEST_MODE">
				<label>HCD test mode support</label>
				<help>Say 'Y' to enable additional software test modes that may be
supported by the host controller drivers.

One such test mode is the Embedded High-speed Host Electrical Test
(EHSET) for EHCI host controller hardware, specifically the &quot;Single
Step Set Feature&quot; test.  Typically this will be enabled for On-the-Go
or embedded hosts that need to undergo USB-IF compliance testing with
the aid of special testing hardware.  In the future, this may expand
to include other tests that require support from a HCD driver.

This option is of interest only to developers who need to validate
their USB hardware designs.  It is not needed for normal use.  If
unsure, say N.
</help>
			</entry>
			<entry name="USB_RENESAS_USBHS">
				<label>'Renesas USBHS controller'</label>
				<help>Renesas USBHS is a discrete USB host and peripheral controller chip
that supports both full and high speed USB 2.0 data transfers.
It has nine or more configurable endpoints, and endpoint zero.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;renesas_usbhs&quot;
</help>
			</entry>
			<entry name="USB_ACM">
				<label>USB Modem (CDC ACM) support</label>
				<help>This driver supports USB modems and ISDN adapters which support the
Communication Device Class Abstract Control Model interface.
Please read &lt;file:Documentation/usb/acm.txt&gt; for details.

If your modem only reports &quot;Cls=ff(vend.)&quot; in the descriptors in
/proc/bus/usb/devices, then your modem will not work with this
driver.

To compile this driver as a module, choose M here: the
module will be called cdc-acm.</help>
			</entry>
			<entry name="USB_PRINTER">
				<label>USB Printer support</label>
				<help>Say Y here if you want to connect a USB printer to your computer's
USB port.

To compile this driver as a module, choose M here: the
module will be called usblp.</help>
			</entry>
			<entry name="USB_WDM">
				<label>USB Wireless Device Management support</label>
				<help>This driver supports the WMC Device Management functionality
of cell phones compliant to the CDC WMC specification. You can use
AT commands over this device.

To compile this driver as a module, choose M here: the
module will be called cdc-wdm.</help>
			</entry>
			<entry name="USB_TMC">
				<label>USB Test and Measurement Class support</label>
				<help>Say Y here if you want to connect a USB device that follows
the USB.org specification for USB Test and Measurement devices
to your computer's USB port.

To compile this driver as a module, choose M here: the
module will be called usbtmc.
</help>
			</entry>
			<entry name="USB_STORAGE">
				<label>USB Mass Storage support</label>
				<help>Say Y here if you want to connect USB mass storage devices to your
computer's USB port. This is the driver you need for USB
floppy drives, USB hard disks, USB tape drives, USB CD-ROMs,
USB flash devices, and memory sticks, along with
similar devices. This driver may also be used for some cameras
and card readers.

This option depends on 'SCSI' support being enabled, but you
probably also need 'SCSI device support: SCSI disk support'
(BLK_DEV_SD) for most USB storage devices.

To compile this driver as a module, choose M here: the
module will be called usb-storage.</help>
			</entry>
			<entry name="USB_STORAGE_DEBUG">
				<label>USB Mass Storage verbose debug</label>
				<help>Say Y here in order to have the USB Mass Storage code generate
verbose debugging messages.</help>
			</entry>
			<entry name="USB_STORAGE_REALTEK">
				<label>Realtek Card Reader support</label>
				<help>Say Y here to include additional code to support the power-saving function
for Realtek RTS51xx USB card readers.

If this driver is compiled as a module, it will be named ums-realtek.</help>
			</entry>
			<entry name="REALTEK_AUTOPM">
				<label>Realtek Card Reader autosuspend support</label>
			</entry>
			<entry name="USB_STORAGE_DATAFAB">
				<label>Datafab Compact Flash Reader support</label>
				<help>Support for certain Datafab CompactFlash readers.
Datafab has a web page at &lt;http://www.datafab.com/&gt;.

If this driver is compiled as a module, it will be named ums-datafab.</help>
			</entry>
			<entry name="USB_STORAGE_FREECOM">
				<label>Freecom USB/ATAPI Bridge support</label>
				<help>Support for the Freecom USB to IDE/ATAPI adaptor.
Freecom has a web page at &lt;http://www.freecom.de/&gt;.

If this driver is compiled as a module, it will be named ums-freecom.</help>
			</entry>
			<entry name="USB_STORAGE_ISD200">
				<label>ISD-200 USB/ATA Bridge support</label>
				<help>Say Y here if you want to use USB Mass Store devices based
on the In-Systems Design ISD-200 USB/ATA bridge.

Some of the products that use this chip are:

- Archos Jukebox 6000
- ISD SmartCable for Storage
- Taiwan Skymaster CD530U/DEL-0241 IDE bridge
- Sony CRX10U CD-R/RW drive
- CyQ've CQ8060A CDRW drive
- Planex eXtreme Drive RX-25HU USB-IDE cable (not model RX-25U)

If this driver is compiled as a module, it will be named ums-isd200.</help>
			</entry>
			<entry name="USB_STORAGE_USBAT">
				<label>USBAT/USBAT02-based storage support</label>
				<help>Say Y here to include additional code to support storage devices
based on the SCM/Shuttle USBAT/USBAT02 processors.

Devices reported to work with this driver include:
- CompactFlash reader included with Kodak DC3800 camera
- Dane-Elec Zmate CompactFlash reader
- Delkin Efilm reader2
- HP 8200e/8210e/8230e CD-Writer Plus drives
- I-JAM JS-50U
- Jessops CompactFlash JESDCFRU BLACK
- Kingston Technology PCREAD-USB/CF
- Maxell UA4 CompactFlash reader
- Memorex UCF-100
- Microtech ZiO! ICS-45 CF2
- RCA LYRA MP3 portable
- Sandisk ImageMate SDDR-05b

If this driver is compiled as a module, it will be named ums-usbat.</help>
			</entry>
			<entry name="USB_STORAGE_SDDR09">
				<label>SanDisk SDDR-09 (and other SmartMedia, including DPCM) support</label>
				<help>Say Y here to include additional code to support the Sandisk SDDR-09
SmartMedia reader in the USB Mass Storage driver.
Also works for the Microtech Zio! CompactFlash/SmartMedia reader.

If this driver is compiled as a module, it will be named ums-sddr09.</help>
			</entry>
			<entry name="USB_STORAGE_SDDR55">
				<label>SanDisk SDDR-55 SmartMedia support</label>
				<help>Say Y here to include additional code to support the Sandisk SDDR-55
SmartMedia reader in the USB Mass Storage driver.

If this driver is compiled as a module, it will be named ums-sddr55.</help>
			</entry>
			<entry name="USB_STORAGE_JUMPSHOT">
				<label>Lexar Jumpshot Compact Flash Reader</label>
				<help>Say Y here to include additional code to support the Lexar Jumpshot
USB CompactFlash reader.

If this driver is compiled as a module, it will be named ums-jumpshot.</help>
			</entry>
			<entry name="USB_STORAGE_ALAUDA">
				<label>Olympus MAUSB-10/Fuji DPC-R1 support</label>
				<help>Say Y here to include additional code to support the Olympus MAUSB-10
and Fujifilm DPC-R1 USB Card reader/writer devices.

These devices are based on the Alauda chip and support both
XD and SmartMedia cards.

If this driver is compiled as a module, it will be named ums-alauda.</help>
			</entry>
			<entry name="USB_STORAGE_ONETOUCH">
				<label>Support OneTouch Button on Maxtor Hard Drives</label>
				<help>Say Y here to include additional code to support the Maxtor OneTouch
USB hard drive's onetouch button.

This code registers the button on the front of Maxtor OneTouch USB
hard drive's as an input device. An action can be associated with
this input in any keybinding software. (e.g. gnome's keyboard short-
cuts)

If this driver is compiled as a module, it will be named ums-onetouch.</help>
			</entry>
			<entry name="USB_STORAGE_KARMA">
				<label>Support for Rio Karma music player</label>
				<help>Say Y here to include additional code to support the Rio Karma
USB interface.

This code places the Rio Karma into mass storage mode, enabling
it to be mounted as an ordinary filesystem. Performing an eject
on the resulting scsi device node returns the Karma to normal
operation.

If this driver is compiled as a module, it will be named ums-karma.</help>
			</entry>
			<entry name="USB_STORAGE_CYPRESS_ATACB">
				<label>SAT emulation on Cypress USB/ATA Bridge with ATACB</label>
				<help>Say Y here if you want to use SAT (ata pass through) on devices based
on the Cypress USB/ATA bridge supporting ATACB. This will allow you
to use tools to tune and monitor your drive (like hdparm or smartctl).

If you say no here your device will still work with the standard usb
mass storage class.

If this driver is compiled as a module, it will be named ums-cypress.</help>
			</entry>
			<entry name="USB_STORAGE_ENE_UB6250">
				<label>USB ENE card reader support</label>
				<help>Say Y here if you wish to control a ENE SD/MS Card reader.
Note that this driver does not support SM cards.

This option depends on 'SCSI' support being enabled, but you
probably also need 'SCSI device support: SCSI disk support'
(BLK_DEV_SD) for most USB storage devices.

To compile this driver as a module, choose M here: the
module will be called ums-eneub6250.</help>
			</entry>
			<entry name="USB_UAS">
				<label>USB Attached SCSI</label>
				<help>The USB Attached SCSI protocol is supported by some USB
storage devices.  It permits higher performance by supporting
multiple outstanding commands.

If you don't know whether you have a UAS device, it is safe to
say 'Y' or 'M' here and the kernel will use the right driver.

If you compile this driver as a module, it will be named uas.
</help>
			</entry>
			<entry name="USB_MDC800">
				<label>USB Mustek MDC800 Digital Camera support</label>
				<help>Say Y here if you want to connect this type of still camera to
your computer's USB port. This driver can be used with gphoto 0.4.3
and higher (look at &lt;http://www.gphoto.org/&gt;).
To use it create a device node with &quot;mknod /dev/mustek c 180 32&quot; and
configure it in your software.

To compile this driver as a module, choose M here: the
module will be called mdc800.</help>
			</entry>
			<entry name="USB_MICROTEK">
				<label>Microtek X6USB scanner support</label>
				<help>Say Y here if you want support for the Microtek X6USB and
possibly the Phantom 336CX, Phantom C6 and ScanMaker V6U(S)L.
Support for anything but the X6 is experimental.
Please report failures and successes.
The scanner will appear as a scsi generic device to the rest
of the system. Scsi support is required.
This driver can be compiled as a module, called microtek.
</help>
			</entry>
			<entry name="USBIP_CORE">
				<label>USB/IP support</label>
				<help>This enables pushing USB packets over IP to allow remote
machines direct access to USB devices. It provides the
USB/IP core that is required by both drivers.

For more details, and to get the userspace utility
programs, please see &lt;http://usbip.sourceforge.net/&gt;.

To compile this as a module, choose M here: the module will
be called usbip-core.

If unsure, say N.</help>
			</entry>
			<entry name="USBIP_VHCI_HCD">
				<label>VHCI hcd</label>
				<help>This enables the USB/IP virtual host controller driver,
which is run on the remote machine.

To compile this driver as a module, choose M here: the
module will be called vhci-hcd.</help>
			</entry>
			<entry name="USBIP_HOST">
				<label>Host driver</label>
				<help>This enables the USB/IP host driver, which is run on the
machine that is sharing the USB devices.

To compile this driver as a module, choose M here: the
module will be called usbip-host.</help>
			</entry>
			<entry name="USBIP_VUDC">
				<label>VUDC driver</label>
				<help>This enables the USB/IP virtual USB device controller
driver, which is run on the host machine, allowing the
machine itself to act as a device.

To compile this driver as a module, choose M here: the
module will be called usbip-vudc.</help>
			</entry>
			<entry name="USBIP_DEBUG">
				<label>Debug messages for USB/IP</label>
				<help>This enables the debug messages from the USB/IP drivers.
</help>
			</entry>
			<entry name="USB_MUSB_HDRC">
				<label>'Inventra Highspeed Dual Role Controller (TI, ADI, AW, ...)'</label>
				<help>Say Y here if your system has a dual role high speed USB
controller based on the Mentor Graphics silicon IP.  Then
configure options to match your silicon and the board
it's being used with, including the USB peripheral role,
or the USB host role, or both.

Texas Instruments families using this IP include DaVinci
(35x, 644x ...), OMAP 243x, OMAP 3, and TUSB 6010.

Analog Devices parts using this IP include Blackfin BF54x,
BF525 and BF527.

Allwinner SoCs using this IP include A10, A13, A20, ...

If you do not know what this is, please say N.

To compile this driver as a module, choose M here; the
module will be called &quot;musb-hdrc&quot;.</help>
			</entry>
			<entry name="USB_MUSB_HOST">
				<label>Host only mode</label>
				<help>Select this when you want to use MUSB in host mode only,
thereby the gadget feature will be regressed.</help>
			</entry>
			<entry name="USB_MUSB_GADGET">
				<label>Gadget only mode</label>
				<help>Select this when you want to use MUSB in gadget mode only,
thereby the host feature will be regressed.</help>
			</entry>
			<entry name="USB_MUSB_DUAL_ROLE">
				<label>Dual Role mode</label>
				<help>This is the default mode of working of MUSB controller where
both host and gadget features are enabled.</help>
			</entry>
			<entry name="USB_MUSB_SUNXI">
				<label>Allwinner (sunxi)</label>
			</entry>
			<entry name="USB_MUSB_DAVINCI">
				<label>DaVinci</label>
			</entry>
			<entry name="USB_MUSB_DA8XX">
				<label>DA8xx/OMAP-L1x</label>
			</entry>
			<entry name="USB_MUSB_TUSB6010">
				<label>TUSB6010</label>
			</entry>
			<entry name="USB_MUSB_OMAP2PLUS">
				<label>OMAP2430 and onwards</label>
			</entry>
			<entry name="USB_MUSB_AM35X">
				<label>AM35x</label>
			</entry>
			<entry name="USB_MUSB_DSPS">
				<label>TI DSPS platforms</label>
			</entry>
			<entry name="USB_MUSB_BLACKFIN">
				<label>Blackfin</label>
			</entry>
			<entry name="USB_MUSB_UX500">
				<label>Ux500 platforms</label>
			</entry>
			<entry name="USB_MUSB_JZ4740">
				<label>JZ4740</label>
			</entry>
			<entry name="USB_MUSB_AM335X_CHILD"/>
			<entry name="MUSB_PIO_ONLY">
				<label>'Disable DMA (always use PIO)'</label>
				<help>All data is copied between memory and FIFO by the CPU.
DMA controllers are ignored.

Do not choose this unless DMA support for your SOC or board
is unavailable (or unstable).  When DMA is enabled at compile time,
you can still disable it at run time using the &quot;use_dma=n&quot; module
parameter.</help>
			</entry>
			<entry name="USB_UX500_DMA">
				<label>'ST Ericsson Ux500'</label>
				<help>Enable DMA transfers on UX500 platforms.</help>
			</entry>
			<entry name="USB_INVENTRA_DMA">
				<label>'Inventra'</label>
				<help>Enable DMA transfers using Mentor's engine.</help>
			</entry>
			<entry name="USB_TI_CPPI_DMA">
				<label>'TI CPPI (Davinci)'</label>
				<help>Enable DMA transfers when TI CPPI DMA is available.</help>
			</entry>
			<entry name="USB_TI_CPPI41_DMA">
				<label>'TI CPPI 4.1 (AM335x)'</label>
			</entry>
			<entry name="USB_TUSB_OMAP_DMA">
				<label>'TUSB 6010'</label>
				<help>Enable DMA transfers on TUSB 6010 when OMAP DMA is available.</help>
			</entry>
			<entry name="USB_DWC3">
				<label>DesignWare USB3 DRD Core Support</label>
				<help>Say Y or M here if your system has a Dual Role SuperSpeed
USB controller based on the DesignWare USB3 IP Core.

If you choose to build this driver is a dynamically linked
module, the module will be called dwc3.ko.</help>
			</entry>
			<entry name="USB_DWC3_ULPI">
				<label>Register ULPI PHY Interface</label>
				<help>Select this if you have ULPI type PHY attached to your DWC3
controller.</help>
			</entry>
			<entry name="USB_DWC3_HOST">
				<label>Host only mode</label>
				<help>Select this when you want to use DWC3 in host mode only,
thereby the gadget feature will be regressed.</help>
			</entry>
			<entry name="USB_DWC3_GADGET">
				<label>Gadget only mode</label>
				<help>Select this when you want to use DWC3 in gadget mode only,
thereby the host feature will be regressed.</help>
			</entry>
			<entry name="USB_DWC3_DUAL_ROLE">
				<label>Dual Role mode</label>
				<help>This is the default mode of working of DWC3 controller where
both host and gadget features are enabled.</help>
			</entry>
			<entry name="USB_DWC3_OMAP">
				<label>Texas Instruments OMAP5 and similar Platforms</label>
				<help>Some platforms from Texas Instruments like OMAP5, DRA7xxx and
AM437x use this IP for USB2/3 functionality.

Say 'Y' or 'M' here if you have one such device</help>
			</entry>
			<entry name="USB_DWC3_EXYNOS">
				<label>Samsung Exynos Platform</label>
				<help>Recent Exynos5 SoCs ship with one DesignWare Core USB3 IP inside,
say 'Y' or 'M' if you have one such device.</help>
			</entry>
			<entry name="USB_DWC3_PCI">
				<label>PCIe-based Platforms</label>
				<help>If you're using the DesignWare Core IP with a PCIe, please say
'Y' or 'M' here.

One such PCIe-based platform is Synopsys' PCIe HAPS model of
this IP.</help>
			</entry>
			<entry name="USB_DWC3_KEYSTONE">
				<label>Texas Instruments Keystone2 Platforms</label>
				<help>Support of USB2/3 functionality in TI Keystone2 platforms.
Say 'Y' or 'M' here if you have one such device</help>
			</entry>
			<entry name="USB_DWC3_OF_SIMPLE">
				<label>Generic OF Simple Glue Layer</label>
				<help>Support USB2/3 functionality in simple SoC integrations.
Currently supports Xilinx and Qualcomm DWC USB3 IP.
Say 'Y' or 'M' if you have one such device.</help>
			</entry>
			<entry name="USB_DWC3_ST">
				<label>STMicroelectronics Platforms</label>
				<help>STMicroelectronics SoCs with one DesignWare Core USB3 IP
inside (i.e. STiH407).
Say 'Y' or 'M' if you have one such device.</help>
			</entry>
			<entry name="USB_DWC2">
				<label>DesignWare USB2 DRD Core Support</label>
				<help>Say Y here if your system has a Dual Role Hi-Speed USB
controller based on the DesignWare HSOTG IP Core.

For host mode, if you choose to build the driver as dynamically
linked modules, the core module will be called dwc2.ko, the PCI
bus interface module (if you have a PCI bus system) will be
called dwc2_pci.ko, and the platform interface module (for
controllers directly connected to the CPU) will be called
dwc2_platform.ko. For all modes(host, gadget and dual-role), there
will be an additional module named dwc2.ko.</help>
			</entry>
			<entry name="USB_DWC2_HOST">
				<label>Host only mode</label>
				<help>The Designware USB2.0 high-speed host controller
integrated into many SoCs. Select this option if you want the
driver to operate in Host-only mode.</help>
			</entry>
			<entry name="USB_DWC2_PERIPHERAL">
				<label>Gadget only mode</label>
				<help>The Designware USB2.0 high-speed gadget controller
integrated into many SoCs. Select this option if you want the
driver to operate in Peripheral-only mode. This option requires
USB_GADGET to be enabled.</help>
			</entry>
			<entry name="USB_DWC2_DUAL_ROLE">
				<label>Dual Role mode</label>
				<help>Select this option if you want the driver to work in a dual-role
mode. In this mode both host and gadget features are enabled, and
the role will be determined by the cable that gets plugged-in. This
option requires USB_GADGET to be enabled.</help>
			</entry>
			<entry name="USB_DWC2_PCI">
				<label>DWC2 PCI</label>
				<help>The Designware USB2.0 PCI interface module for controllers
connected to a PCI bus.</help>
			</entry>
			<entry name="USB_DWC2_DEBUG">
				<label>Enable Debugging Messages</label>
				<help>Say Y here to enable debugging messages in the DWC2 Driver.</help>
			</entry>
			<entry name="USB_DWC2_VERBOSE">
				<label>Enable Verbose Debugging Messages</label>
				<help>Say Y here to enable verbose debugging messages in the DWC2 Driver.
WARNING: Enabling this will quickly fill your message log.
If in doubt, say N.</help>
			</entry>
			<entry name="USB_DWC2_TRACK_MISSED_SOFS">
				<label>Enable Missed SOF Tracking</label>
				<help>Say Y here to enable logging of missed SOF events to the dmesg log.
WARNING: This feature is still experimental.
If in doubt, say N.</help>
			</entry>
			<entry name="USB_DWC2_DEBUG_PERIODIC">
				<label>Enable Debugging Messages For Periodic Transfers</label>
				<help>Say N here to disable (verbose) debugging messages to be
logged for periodic transfers. This allows better debugging of
non-periodic transfers, but of course the debug logs will be
incomplete. Note that this also disables some debug messages
for which the transfer type cannot be deduced.</help>
			</entry>
			<entry name="USB_CHIPIDEA">
				<label>ChipIdea Highspeed Dual Role Controller</label>
				<help>Say Y here if your system has a dual role high speed USB
controller based on ChipIdea silicon IP. It supports:
Dual-role switch (ID, OTG FSM, sysfs), Host-only, and
Peripheral-only.

When compiled dynamically, the module will be called ci-hdrc.ko.</help>
			</entry>
			<entry name="USB_CHIPIDEA_OF"/>
			<entry name="USB_CHIPIDEA_PCI"/>
			<entry name="USB_CHIPIDEA_UDC">
				<label>ChipIdea device controller</label>
				<help>Say Y here to enable device controller functionality of the
ChipIdea driver.</help>
			</entry>
			<entry name="USB_CHIPIDEA_HOST">
				<label>ChipIdea host controller</label>
				<help>Say Y here to enable host controller functionality of the
ChipIdea driver.</help>
			</entry>
			<entry name="USB_ISP1760">
				<label>NXP ISP 1760/1761 support</label>
				<help>Say Y or M here if your system as an ISP1760 USB host controller
or an ISP1761 USB dual-role controller.

This driver does not support isochronous transfers or OTG.
This USB controller is usually attached to a non-DMA-Master
capable bus. NXP's eval kit brings this chip on PCI card
where the chip itself is behind a PLB to simulate such
a bus.

To compile this driver as a module, choose M here: the
module will be called isp1760.</help>
			</entry>
			<entry name="USB_ISP1760_HCD"/>
			<entry name="USB_ISP1761_UDC"/>
			<entry name="USB_ISP1760_HOST_ROLE">
				<label>Host only mode</label>
				<help>Select this if you want to use the ISP1760 in host mode only. The
gadget function will be disabled.</help>
			</entry>
			<entry name="USB_ISP1760_GADGET_ROLE">
				<label>Gadget only mode</label>
				<help>Select this if you want to use the ISP1760 in peripheral mode only.
The host function will be disabled.</help>
			</entry>
			<entry name="USB_ISP1760_DUAL_ROLE">
				<label>Dual Role mode</label>
				<help>Select this if you want to use the ISP1760 in both host and
peripheral modes.</help>
			</entry>
			<entry name="USB_USS720">
				<label>USS720 parport driver</label>
				<help>This driver is for USB parallel port adapters that use the Lucent
Technologies USS-720 chip. These cables are plugged into your USB
port and provide USB compatibility to peripherals designed with
parallel port interfaces.

The chip has two modes: automatic mode and manual mode. In automatic
mode, it looks to the computer like a standard USB printer. Only
printers may be connected to the USS-720 in this mode. The generic
USB printer driver (&quot;USB Printer support&quot;, above) may be used in
that mode, and you can say N here if you want to use the chip only
in this mode.

Manual mode is not limited to printers, any parallel port
device should work. This driver utilizes manual mode.
Note however that some operations are three orders of magnitude
slower than on a PCI/ISA Parallel Port, so timing critical
applications might not work.

Say Y here if you own an USS-720 USB-&gt;Parport cable and intend to
connect anything other than a printer to it.

To compile this driver as a module, choose M here: the
module will be called uss720.</help>
			</entry>
			<entry name="USB_SERIAL">
				<label>USB Serial Converter support</label>
				<help>Say Y here if you have a USB device that provides normal serial
ports, or acts like a serial device, and you want to connect it to
your USB bus.

Please read &lt;file:Documentation/usb/usb-serial.txt&gt; for more
information on the specifics of the different devices that are
supported, and on how to use them.

To compile this driver as a module, choose M here: the
module will be called usbserial.</help>
			</entry>
			<entry name="USB_SERIAL_CONSOLE">
				<label>USB Serial Console device support</label>
				<help>If you say Y here, it will be possible to use a USB to serial
converter port as the system console (the system console is the
device which receives all kernel messages and warnings and which
allows logins in single user mode). This could be useful if some
terminal or printer is connected to that serial port.

Even if you say Y here, the currently visible virtual console
(/dev/tty0) will still be used as the system console by default, but
you can alter that using a kernel command line option such as
&quot;console=ttyUSB0&quot;. (Try &quot;man bootparam&quot; or see the documentation of
your boot loader (lilo or loadlin) about how to pass options to the
kernel at boot time.)

If you don't have a VGA card installed and you say Y here, the
kernel will automatically use the first USB to serial converter
port, /dev/ttyUSB0, as system console.

If unsure, say N.</help>
			</entry>
			<entry name="USB_SERIAL_GENERIC">
				<label>USB Generic Serial Driver</label>
				<help>Say Y here if you want to use the generic USB serial driver.  Please
read &lt;file:Documentation/usb/usb-serial.txt&gt; for more information on
using this driver.  It is recommended that the &quot;USB Serial converter
support&quot; be compiled as a module for this driver to be used
properly.</help>
			</entry>
			<entry name="USB_SERIAL_SIMPLE">
				<label>USB Serial Simple Driver</label>
				<help>Say Y here to use the USB serial &quot;simple&quot; driver.  This driver
handles a wide range of very simple devices, all in one
driver.  Specifically, it supports:
- Suunto ANT+ USB device.
- Medtronic CareLink USB device
- Fundamental Software dongle.
- Google USB serial devices
- HP4x calculators
- a number of Motorola phones
- Novatel Wireless GPS receivers
- Siemens USB/MPI adapter.
- ViVOtech ViVOpay USB device.
- Infineon Modem Flashloader USB interface
- ZIO Motherboard USB serial interface

To compile this driver as a module, choose M here: the module
will be called usb-serial-simple.</help>
			</entry>
			<entry name="USB_SERIAL_AIRCABLE">
				<label>USB AIRcable Bluetooth Dongle Driver</label>
				<help>Say Y here if you want to use USB AIRcable Bluetooth Dongle.

To compile this driver as a module, choose M here: the module
will be called aircable.</help>
			</entry>
			<entry name="USB_SERIAL_ARK3116">
				<label>USB ARK Micro 3116 USB Serial Driver</label>
				<help>Say Y here if you want to use a ARK Micro 3116 USB to Serial
device.

To compile this driver as a module, choose M here: the
module will be called ark3116</help>
			</entry>
			<entry name="USB_SERIAL_BELKIN">
				<label>USB Belkin and Peracom Single Port Serial Driver</label>
				<help>Say Y here if you want to use a Belkin USB Serial single port
adaptor (F5U103 is one of the model numbers) or the Peracom single
port USB to serial adapter.

To compile this driver as a module, choose M here: the
module will be called belkin_sa.</help>
			</entry>
			<entry name="USB_SERIAL_CH341">
				<label>USB Winchiphead CH341 Single Port Serial Driver</label>
				<help>Say Y here if you want to use a Winchiphead CH341 single port
USB to serial adapter.

To compile this driver as a module, choose M here: the
module will be called ch341.</help>
			</entry>
			<entry name="USB_SERIAL_WHITEHEAT">
				<label>USB ConnectTech WhiteHEAT Serial Driver</label>
				<help>Say Y here if you want to use a ConnectTech WhiteHEAT 4 port
USB to serial converter device.

To compile this driver as a module, choose M here: the
module will be called whiteheat.</help>
			</entry>
			<entry name="USB_SERIAL_DIGI_ACCELEPORT">
				<label>USB Digi International AccelePort USB Serial Driver</label>
				<help>Say Y here if you want to use Digi AccelePort USB 2 or 4 devices,
2 port (plus parallel port) and 4 port USB serial converters.  The
parallel port on the USB 2 appears as a third serial port on Linux.
The Digi Acceleport USB 8 is not yet supported by this driver.

This driver works under SMP with the usb-uhci driver.  It does not
work under SMP with the uhci driver.

To compile this driver as a module, choose M here: the
module will be called digi_acceleport.</help>
			</entry>
			<entry name="USB_SERIAL_CP210X">
				<label>USB CP210x family of UART Bridge Controllers</label>
				<help>Say Y here if you want to use a CP2101/CP2102/CP2103 based USB
to RS232 converters.

To compile this driver as a module, choose M here: the
module will be called cp210x.</help>
			</entry>
			<entry name="USB_SERIAL_CYPRESS_M8">
				<label>USB Cypress M8 USB Serial Driver</label>
				<help>Say Y here if you want to use a device that contains the Cypress
USB to Serial microcontroller, such as the DeLorme Earthmate GPS.

Attempted SMP support... send bug reports!

Supported microcontrollers in the CY4601 family are:
CY7C63741 CY7C63742 CY7C63743 CY7C64013

To compile this driver as a module, choose M here: the
module will be called cypress_m8.</help>
			</entry>
			<entry name="USB_SERIAL_EMPEG">
				<label>USB Empeg empeg-car Mark I/II Driver</label>
				<help>Say Y here if you want to connect to your Empeg empeg-car Mark I/II
mp3 player via USB.  The driver uses a single ttyUSB{0,1,2,...}
device node.  See &lt;file:Documentation/usb/usb-serial.txt&gt; for more
tidbits of information.

To compile this driver as a module, choose M here: the
module will be called empeg.</help>
			</entry>
			<entry name="USB_SERIAL_FTDI_SIO">
				<label>USB FTDI Single Port Serial Driver</label>
				<help>Say Y here if you want to use a FTDI SIO single port USB to serial
converter device. The implementation I have is called the USC-1000.
This driver has also been tested with the 245 and 232 devices.

See &lt;http://ftdi-usb-sio.sourceforge.net/&gt; for more
information on this driver and the device.

To compile this driver as a module, choose M here: the
module will be called ftdi_sio.</help>
			</entry>
			<entry name="USB_SERIAL_VISOR">
				<label>USB Handspring Visor / Palm m50x / Sony Clie Driver</label>
				<help>Say Y here if you want to connect to your HandSpring Visor, Palm
m500 or m505 through its USB docking station. See
&lt;http://usbvisor.sourceforge.net/index.php3&gt; for more information on using this
driver.

To compile this driver as a module, choose M here: the
module will be called visor.</help>
			</entry>
			<entry name="USB_SERIAL_IPAQ">
				<label>USB PocketPC PDA Driver</label>
				<help>Say Y here if you want to connect to your Compaq iPAQ, HP Jornada
or any other PDA running Windows CE 3.0 or PocketPC 2002
using a USB cradle/cable. For information on using the driver,
read &lt;file:Documentation/usb/usb-serial.txt&gt;.

To compile this driver as a module, choose M here: the
module will be called ipaq.</help>
			</entry>
			<entry name="USB_SERIAL_IR">
				<label>USB IR Dongle Serial Driver</label>
				<help>Say Y here if you want to enable simple serial support for USB IrDA
devices.  This is useful if you do not want to use the full IrDA
stack.

To compile this driver as a module, choose M here: the
module will be called ir-usb.</help>
			</entry>
			<entry name="USB_SERIAL_EDGEPORT">
				<label>USB Inside Out Edgeport Serial Driver</label>
				<help>Say Y here if you want to use any of the following devices from
Inside Out Networks (Digi):
Edgeport/4
Rapidport/4
Edgeport/4t
Edgeport/2
Edgeport/4i
Edgeport/2i
Edgeport/421
Edgeport/21
Edgeport/8
Edgeport/8 Dual
Edgeport/2D8
Edgeport/4D8
Edgeport/8i
Edgeport/2 DIN
Edgeport/4 DIN
Edgeport/16 Dual

To compile this driver as a module, choose M here: the
module will be called io_edgeport.</help>
			</entry>
			<entry name="USB_SERIAL_EDGEPORT_TI">
				<label>USB Inside Out Edgeport Serial Driver (TI devices)</label>
				<help>Say Y here if you want to use any of the devices from Inside Out
Networks (Digi) that are not supported by the io_edgeport driver.
This includes the Edgeport/1 device.

To compile this driver as a module, choose M here: the
module will be called io_ti.</help>
			</entry>
			<entry name="USB_SERIAL_F81232">
				<label>USB Fintek F81232 Single Port Serial Driver</label>
				<help>Say Y here if you want to use the Fintek F81232 single
port usb to serial adapter.

To compile this driver as a module, choose M here: the
module will be called f81232.</help>
			</entry>
			<entry name="USB_SERIAL_GARMIN">
				<label>USB Garmin GPS driver</label>
				<help>Say Y here if you want to connect to your Garmin GPS.
Should work with most Garmin GPS devices which have a native USB port.

See &lt;http://sourceforge.net/projects/garmin-gps&gt; for the latest
version of the driver.

To compile this driver as a module, choose M here: the
module will be called garmin_gps.</help>
			</entry>
			<entry name="USB_SERIAL_IPW">
				<label>USB IPWireless (3G UMTS TDD) Driver</label>
				<help>Say Y here if you want to use a IPWireless USB modem such as
the ones supplied by Axity3G/Sentech South Africa.

To compile this driver as a module, choose M here: the
module will be called ipw.</help>
			</entry>
			<entry name="USB_SERIAL_IUU">
				<label>USB Infinity USB Unlimited Phoenix Driver</label>
				<help>Say Y here if you want to use a IUU in phoenix mode and get
an extra ttyUSBx device. More information available on
http://eczema.ecze.com/iuu_phoenix.html

To compile this driver as a module, choose M here: the
module will be called iuu_phoenix.o</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_PDA">
				<label>USB Keyspan PDA Single Port Serial Driver</label>
				<help>Say Y here if you want to use a Keyspan PDA single port USB to
serial converter device.  This driver makes use of firmware
developed from scratch by Brian Warner.

To compile this driver as a module, choose M here: the
module will be called keyspan_pda.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN">
				<label>USB Keyspan USA-xxx Serial Driver</label>
				<help>Say Y here if you want to use Keyspan USB to serial converter
devices.  This driver makes use of Keyspan's official firmware
and was developed with their support.  You must also include
firmware to support your particular device(s).

See &lt;http://blemings.org/hugh/keyspan.html&gt; for more information.

To compile this driver as a module, choose M here: the
module will be called keyspan.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_MPR">
				<label>USB Keyspan MPR Firmware</label>
				<help>Say Y here to include firmware for the Keyspan MPR converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA28">
				<label>USB Keyspan USA-28 Firmware</label>
				<help>Say Y here to include firmware for the USA-28 converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA28X">
				<label>USB Keyspan USA-28X Firmware</label>
				<help>Say Y here to include firmware for the USA-28X converter.
Be sure you have a USA-28X, there are also 28XA and 28XB
models, the label underneath has the actual part number.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA28XA">
				<label>USB Keyspan USA-28XA Firmware</label>
				<help>Say Y here to include firmware for the USA-28XA converter.
Be sure you have a USA-28XA, there are also 28X and 28XB
models, the label underneath has the actual part number.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA28XB">
				<label>USB Keyspan USA-28XB Firmware</label>
				<help>Say Y here to include firmware for the USA-28XB converter.
Be sure you have a USA-28XB, there are also 28X and 28XA
models, the label underneath has the actual part number.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA19">
				<label>USB Keyspan USA-19 Firmware</label>
				<help>Say Y here to include firmware for the USA-19 converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA18X">
				<label>USB Keyspan USA-18X Firmware</label>
				<help>Say Y here to include firmware for the USA-18X converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA19W">
				<label>USB Keyspan USA-19W Firmware</label>
				<help>Say Y here to include firmware for the USA-19W converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA19QW">
				<label>USB Keyspan USA-19QW Firmware</label>
				<help>Say Y here to include firmware for the USA-19QW converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA19QI">
				<label>USB Keyspan USA-19QI Firmware</label>
				<help>Say Y here to include firmware for the USA-19QI converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA49W">
				<label>USB Keyspan USA-49W Firmware</label>
				<help>Say Y here to include firmware for the USA-49W converter.</help>
			</entry>
			<entry name="USB_SERIAL_KEYSPAN_USA49WLC">
				<label>USB Keyspan USA-49WLC Firmware</label>
				<help>Say Y here to include firmware for the USA-49WLC converter.</help>
			</entry>
			<entry name="USB_SERIAL_KLSI">
				<label>USB KL5KUSB105 (Palmconnect) Driver</label>
				<help>Say Y here if you want to use a KL5KUSB105 - based single port
serial adapter. The most widely known -- and currently the only
tested -- device in this category is the PalmConnect USB Serial
adapter sold by Palm Inc. for use with their Palm III and Palm V
series PDAs.

Please read &lt;file:Documentation/usb/usb-serial.txt&gt; for more
information.

To compile this driver as a module, choose M here: the
module will be called kl5kusb105.</help>
			</entry>
			<entry name="USB_SERIAL_KOBIL_SCT">
				<label>USB KOBIL chipcard reader</label>
				<help>Say Y here if you want to use one of the following KOBIL USB chipcard
readers:

- USB TWIN
- KAAN Standard Plus
- KAAN SIM
- SecOVID Reader Plus
- B1 Professional
- KAAN Professional

Note that you need a current CT-API.
To compile this driver as a module, choose M here: the
module will be called kobil_sct.</help>
			</entry>
			<entry name="USB_SERIAL_MCT_U232">
				<label>USB MCT Single Port Serial Driver</label>
				<help>Say Y here if you want to use a USB Serial single port adapter from
Magic Control Technology Corp. (U232 is one of the model numbers).

This driver also works with Sitecom U232-P25 and D-Link DU-H3SP USB
BAY, Belkin F5U109, and Belkin F5U409 devices.

To compile this driver as a module, choose M here: the
module will be called mct_u232.</help>
			</entry>
			<entry name="USB_SERIAL_METRO">
				<label>USB Metrologic Instruments USB-POS Barcode Scanner Driver</label>
				<help>Say Y here if you want to use a USB POS Metrologic barcode scanner.

To compile this driver as a module, choose M here: the
module will be called metro-usb.</help>
			</entry>
			<entry name="USB_SERIAL_MOS7720">
				<label>USB Moschip 7720 Serial Driver</label>
				<help>Say Y here if you want to use USB Serial single and double
port adapters from Moschip Semiconductor Tech.

To compile this driver as a module, choose M here: the
module will be called mos7720.</help>
			</entry>
			<entry name="USB_SERIAL_MOS7715_PARPORT">
				<label>Support for parallel port on the Moschip 7715</label>
				<help>Say Y if you have a Moschip 7715 device and would like to use
the parallel port it provides.  The port will register with
the parport subsystem as a low-level driver.</help>
			</entry>
			<entry name="USB_SERIAL_MOS7840">
				<label>USB Moschip 7840/7820 USB Serial Driver</label>
				<help>Say Y here if you want to use a MCS7840 Quad-Serial or MCS7820
Dual-Serial port device from MosChip Semiconductor.

The MCS7840 and MCS7820 have been developed to connect a wide range
of standard serial devices to a USB host.  The MCS7840 has a USB
device controller connected to four (4) individual UARTs while the
MCS7820 controller connects to two (2) individual UARTs.

To compile this driver as a module, choose M here: the
module will be called mos7840.  If unsure, choose N.</help>
			</entry>
			<entry name="USB_SERIAL_MXUPORT">
				<label>USB Moxa UPORT Serial Driver</label>
				<help>Say Y here if you want to use a MOXA UPort Serial hub.

This driver supports:

[2 Port]
- UPort 1250 :  2 Port RS-232/422/485 USB to Serial Hub
- UPort 1250I : 2 Port RS-232/422/485 USB to Serial Hub with
Isolation

[4 Port]
- UPort 1410 :  4 Port RS-232 USB to Serial Hub
- UPort 1450 :  4 Port RS-232/422/485 USB to Serial Hub
- UPort 1450I : 4 Port RS-232/422/485 USB to Serial Hub with
Isolation

[8 Port]
- UPort 1610-8 : 8 Port RS-232 USB to Serial Hub
- UPort 1650-8 : 8 Port RS-232/422/485 USB to Serial Hub

[16 Port]
- UPort 1610-16 : 16 Port RS-232 USB to Serial Hub
- UPort 1650-16 : 16 Port RS-232/422/485 USB to Serial Hub

To compile this driver as a module, choose M here: the
module will be called mxuport.</help>
			</entry>
			<entry name="USB_SERIAL_NAVMAN">
				<label>USB Navman GPS device</label>
				<help>To compile this driver as a module, choose M here: the
module will be called navman.</help>
			</entry>
			<entry name="USB_SERIAL_PL2303">
				<label>USB Prolific 2303 Single Port Serial Driver</label>
				<help>Say Y here if you want to use the PL2303 USB Serial single port
adapter from Prolific.

To compile this driver as a module, choose M here: the
module will be called pl2303.</help>
			</entry>
			<entry name="USB_SERIAL_OTI6858">
				<label>USB Ours Technology Inc. OTi-6858 USB To RS232 Bridge Controller</label>
				<help>Say Y here if you want to use the OTi-6858 single port USB to serial
converter device.

To compile this driver as a module, choose M here: the
module will be called oti6858.</help>
			</entry>
			<entry name="USB_SERIAL_QCAUX">
				<label>USB Qualcomm Auxiliary Serial Port Driver</label>
				<help>Say Y here if you want to use the auxiliary serial ports provided
by many modems based on Qualcomm chipsets.  These ports often use
a proprietary protocol called DM and cannot be used for AT- or
PPP-based communication.

To compile this driver as a module, choose M here: the
module will be called qcaux.  If unsure, choose N.</help>
			</entry>
			<entry name="USB_SERIAL_QUALCOMM">
				<label>USB Qualcomm Serial modem</label>
				<help>Say Y here if you have a Qualcomm USB modem device.  These are
usually wireless cellular modems.

To compile this driver as a module, choose M here: the
module will be called qcserial.</help>
			</entry>
			<entry name="USB_SERIAL_SPCP8X5">
				<label>USB SPCP8x5 USB To Serial Driver</label>
				<help>Say Y here if you want to use the spcp8x5 converter chip.  This is
commonly found in some Z-Wave USB devices.

To compile this driver as a module, choose M here: the
module will be called spcp8x5.</help>
			</entry>
			<entry name="USB_SERIAL_SAFE">
				<label>USB Safe Serial (Encapsulated) Driver</label>
			</entry>
			<entry name="USB_SERIAL_SAFE_PADDED">
				<label>USB Secure Encapsulated Driver - Padded</label>
			</entry>
			<entry name="USB_SERIAL_SIERRAWIRELESS">
				<label>USB Sierra Wireless Driver</label>
				<help>Say M here if you want to use Sierra Wireless devices.

Many devices have a feature known as TRU-Install. For those devices
to work properly, the USB Storage Sierra feature must be enabled.

To compile this driver as a module, choose M here: the
module will be called sierra.</help>
			</entry>
			<entry name="USB_SERIAL_SYMBOL">
				<label>USB Symbol Barcode driver (serial mode)</label>
				<help>Say Y here if you want to use a Symbol USB Barcode device
in serial emulation mode.

To compile this driver as a module, choose M here: the
module will be called symbolserial.</help>
			</entry>
			<entry name="USB_SERIAL_TI">
				<label>USB TI 3410/5052 Serial Driver</label>
				<help>Say Y here if you want to use the TI USB 3410 or 5052
serial devices.

To compile this driver as a module, choose M here: the
module will be called ti_usb_3410_5052.</help>
			</entry>
			<entry name="USB_SERIAL_CYBERJACK">
				<label>USB REINER SCT cyberJack pinpad/e-com chipcard reader</label>
				<help>Say Y here if you want to use a cyberJack pinpad/e-com USB chipcard
reader. This is an interface to ISO 7816 compatible contact-based
chipcards, e.g. GSM SIMs.

To compile this driver as a module, choose M here: the
module will be called cyberjack.

If unsure, say N.</help>
			</entry>
			<entry name="USB_SERIAL_XIRCOM">
				<label>USB Xircom / Entrega Single Port Serial Driver</label>
				<help>Say Y here if you want to use a Xircom or Entrega single port USB to
serial converter device.  This driver makes use of firmware
developed from scratch by Brian Warner.

To compile this driver as a module, choose M here: the
module will be called keyspan_pda.</help>
			</entry>
			<entry name="USB_SERIAL_WWAN"/>
			<entry name="USB_SERIAL_OPTION">
				<label>USB driver for GSM and CDMA modems</label>
				<help>Say Y here if you have a GSM or CDMA modem that's connected to USB.

This driver also supports several PCMCIA cards which have a
built-in OHCI-USB adapter and an internally-connected GSM modem.
The USB bus on these cards is not accessible externally.

Supported devices include (some of?) those made by:
Option, Huawei, Audiovox, Novatel Wireless, or Anydata.

To compile this driver as a module, choose M here: the
module will be called option.

If this driver doesn't recognize your device,
it might be accessible via the FTDI_SIO driver.</help>
			</entry>
			<entry name="USB_SERIAL_OMNINET">
				<label>USB ZyXEL omni.net LCD Plus Driver</label>
				<help>Say Y here if you want to use a ZyXEL omni.net LCD ISDN TA.

To compile this driver as a module, choose M here: the
module will be called omninet.</help>
			</entry>
			<entry name="USB_SERIAL_OPTICON">
				<label>USB Opticon Barcode driver (serial mode)</label>
				<help>Say Y here if you want to use a Opticon USB Barcode device
in serial emulation mode.

To compile this driver as a module, choose M here: the
module will be called opticon.</help>
			</entry>
			<entry name="USB_SERIAL_XSENS_MT">
				<label>Xsens motion tracker serial interface driver</label>
				<help>Say Y here if you want to use Xsens motion trackers.

This driver supports the new generation of motion trackers
by Xsens. Older devices can be accessed using the FTDI_SIO
driver.

To compile this driver as a module, choose M here: the
module will be called xsens_mt.</help>
			</entry>
			<entry name="USB_SERIAL_WISHBONE">
				<label>USB-Wishbone adapter interface driver</label>
				<help>Say Y here if you want to use a USB attached Wishbone bus.

Wishbone is an open hardware SoC bus commonly used in FPGA
designs. Bus access can be serialized using the Etherbone
protocol &lt;http://www.ohwr.org/projects/etherbone-core&gt;.

This driver is intended to be used with devices which attach
their internal Wishbone bus to a USB serial interface using
the Etherbone protocol. A userspace library is required to
speak the protocol made available by this driver as ttyUSBx.

To compile this driver as a module, choose M here: the
module will be called wishbone-serial.</help>
			</entry>
			<entry name="USB_SERIAL_SSU100">
				<label>USB Quatech SSU-100 Single Port Serial Driver</label>
				<help>Say Y here if you want to use the Quatech SSU-100 single
port usb to serial adapter.

To compile this driver as a module, choose M here: the
module will be called ssu100.</help>
			</entry>
			<entry name="USB_SERIAL_QT2">
				<label>USB Quatech Serial Driver for USB 2 devices</label>
				<help>Say Y here if you want to use the Quatech USB 2
serial adapters.

To compile this driver as a module, choose M here: the
module will be called quatech-serial.</help>
			</entry>
			<entry name="USB_SERIAL_DEBUG">
				<label>USB Debugging Device</label>
				<help>Say Y here if you have a USB debugging device used to receive
debugging data from another machine.  The most common of these
devices is the NetChip TurboCONNECT device.

To compile this driver as a module, choose M here: the
module will be called usb-debug.</help>
			</entry>
			<entry name="USB_EMI62">
				<label>EMI 6|2m USB Audio interface support</label>
				<help>This driver loads firmware to Emagic EMI 6|2m low latency USB
Audio and Midi interface.

After firmware load the device is handled with standard linux
USB Audio driver.

This code is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called audio. If you want to compile it as a
module, say M here and read &lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="USB_EMI26">
				<label>EMI 2|6 USB Audio interface support</label>
				<help>This driver loads firmware to Emagic EMI 2|6 low latency USB
Audio interface.

After firmware load the device is handled with standard linux
USB Audio driver.

To compile this driver as a module, choose M here: the
module will be called emi26.</help>
			</entry>
			<entry name="USB_ADUTUX">
				<label>ADU devices from Ontrak Control Systems</label>
				<help>Say Y if you want to use an ADU device from Ontrak Control
Systems.

To compile this driver as a module, choose M here.  The module
will be called adutux.</help>
			</entry>
			<entry name="USB_SEVSEG">
				<label>USB 7-Segment LED Display</label>
				<help>Say Y here if you have a USB 7-Segment Display by Delcom

To compile this driver as a module, choose M here: the
module will be called usbsevseg.</help>
			</entry>
			<entry name="USB_RIO500">
				<label>USB Diamond Rio500 support</label>
				<help>Say Y here if you want to connect a USB Rio500 mp3 player to your
computer's USB port. Please read &lt;file:Documentation/usb/rio.txt&gt;
for more information.

To compile this driver as a module, choose M here: the
module will be called rio500.</help>
			</entry>
			<entry name="USB_LEGOTOWER">
				<label>USB Lego Infrared Tower support</label>
				<help>Say Y here if you want to connect a USB Lego Infrared Tower to your
computer's USB port.

This code is also available as a module ( = code which can be
inserted in and removed from the running kernel whenever you want).
The module will be called legousbtower. If you want to compile it as
a module, say M here and read
&lt;file:Documentation/kbuild/modules.txt&gt;.</help>
			</entry>
			<entry name="USB_LCD">
				<label>USB LCD driver support</label>
				<help>Say Y here if you want to connect an USBLCD to your computer's
USB port. The USBLCD is a small USB interface board for
alphanumeric LCD modules. See &lt;http://www.usblcd.de/&gt; for more
information.

To compile this driver as a module, choose M here: the
module will be called usblcd.</help>
			</entry>
			<entry name="USB_CYPRESS_CY7C63">
				<label>Cypress CY7C63xxx USB driver support</label>
				<help>Say Y here if you want to connect a Cypress CY7C63xxx
micro controller to your computer's USB port. Currently this
driver supports the pre-programmed devices (incl. firmware)
by AK Modul-Bus Computer GmbH.

Please see: http://www.ak-modul-bus.de/stat/mikrocontroller.html

To compile this driver as a module, choose M here: the
module will be called cypress_cy7c63.</help>
			</entry>
			<entry name="USB_CYTHERM">
				<label>Cypress USB thermometer driver support</label>
				<help>Say Y here if you want to connect a Cypress USB thermometer
device to your computer's USB port. This device is also known
as the Cypress USB Starter kit or demo board. The Elektor
magazine published a modified version of this device in issue
#291.

To compile this driver as a module, choose M here: the
module will be called cytherm.</help>
			</entry>
			<entry name="USB_IDMOUSE">
				<label>Siemens ID USB Mouse Fingerprint sensor support</label>
				<help>Say Y here if you want to use the fingerprint sensor on
the Siemens ID Mouse. There is also a Siemens ID Mouse
_Professional_, which has not been tested with this driver,
but uses the same sensor and may therefore work.

This driver creates an entry &quot;/dev/idmouseX&quot; or &quot;/dev/usb/idmouseX&quot;,
which can be used by, e.g.,&quot;cat /dev/idmouse0 &gt; fingerprint.pnm&quot;.

See also &lt;http://www.fs.tum.de/~echtler/idmouse/&gt;.</help>
			</entry>
			<entry name="USB_FTDI_ELAN">
				<label>Elan PCMCIA CardBus Adapter USB Client</label>
				<help>ELAN's Uxxx series of adapters are USB to PCMCIA CardBus adapters.
Currently only the U132 adapter is available.

The U132 is specifically designed for CardBus PC cards that contain
an OHCI host controller. Typical PC cards are the Orange Mobile 3G
Option GlobeTrotter Fusion card. The U132 adapter will *NOT* work
with PC cards that do not contain an OHCI controller. To use a U132
adapter you will need this &quot;ftdi-elan&quot; module as well as the &quot;u132-hcd&quot;
module which is a USB host controller driver that talks to the OHCI
controller within CardBus card that are inserted in the U132 adapter.

This driver has been tested with a CardBus OHCI USB adapter, and
worked with a USB PEN Drive inserted into the first USB port of
the PCCARD. A rather pointless thing to do, but useful for testing.

See also the USB_U132_HCD entry &quot;Elan U132 Adapter Host Controller&quot;

It is safe to say M here.</help>
			</entry>
			<entry name="USB_APPLEDISPLAY">
				<label>Apple Cinema Display support</label>
				<help>Say Y here if you want to control the backlight of Apple Cinema
Displays over USB. This driver provides a sysfs interface.</help>
			</entry>
			<entry name="USB_SISUSBVGA">
				<label>USB 2.0 SVGA dongle support (Net2280/SiS315)</label>
				<help>Say Y here if you intend to attach a USB2VGA dongle based on a
Net2280 and a SiS315 chip.

Note that this device requires a USB 2.0 host controller. It will not
work with USB 1.x controllers.

To compile this driver as a module, choose M here; the module will be
called sisusbvga. If unsure, say N.</help>
			</entry>
			<entry name="USB_SISUSBVGA_CON">
				<label>Text console and mode switching support&quot; if USB_SISUSBVGA</label>
				<help>Say Y here if you want a VGA text console via the USB dongle or
want to support userland applications that utilize the driver's
display mode switching capabilities.

Note that this console supports VGA/EGA text mode only.

By default, the console part of the driver will not kick in when
the driver is initialized. If you want the driver to take over
one or more of the consoles, you need to specify the number of
the first and last consoles (starting at 1) as driver parameters.

For example, if the driver is compiled as a module:

modprobe sisusbvga first=1 last=5

If you use hotplug, add this to your modutils config files with
the &quot;options&quot; keyword, such as eg.

options sisusbvga first=1 last=5

If the driver is compiled into the kernel image, the parameters
must be given in the kernel command like, such as

sisusbvga.first=1 sisusbvga.last=5



</help>
			</entry>
			<entry name="USB_LD">
				<label>USB LD driver</label>
				<help>This driver is for generic USB devices that use interrupt transfers,
like LD Didactic's USB devices.

To compile this driver as a module, choose M here: the
module will be called ldusb.</help>
			</entry>
			<entry name="USB_TRANCEVIBRATOR">
				<label>PlayStation 2 Trance Vibrator driver support</label>
				<help>Say Y here if you want to connect a PlayStation 2 Trance Vibrator
device to your computer's USB port.

To compile this driver as a module, choose M here: the
module will be called trancevibrator.</help>
			</entry>
			<entry name="USB_IOWARRIOR">
				<label>IO Warrior driver support</label>
				<help>Say Y here if you want to support the IO Warrior devices from Code
Mercenaries.  This includes support for the following devices:
IO Warrior 40
IO Warrior 24
IO Warrior 56
IO Warrior 24 Power Vampire

To compile this driver as a module, choose M here: the
module will be called iowarrior.</help>
			</entry>
			<entry name="USB_TEST">
				<label>USB testing driver</label>
				<help>This driver is for testing host controller software.  It is used
with specialized device firmware for regression and stress testing,
to help prevent problems from cropping up with &quot;real&quot; drivers.

See &lt;http://www.linux-usb.org/usbtest/&gt; for more information,
including sample test device firmware and &quot;how to use it&quot;.</help>
			</entry>
			<entry name="USB_EHSET_TEST_FIXTURE">
				<label>USB EHSET Test Fixture driver</label>
				<help>Say Y here if you want to support the special test fixture device
used for the USB-IF Embedded Host High-Speed Electrical Test procedure.

When the test fixture is connected, it can enumerate as one of several
VID/PID pairs. This driver then initiates a corresponding test mode on
the downstream port to which the test fixture is attached.

See &lt;http://www.usb.org/developers/onthego/EHSET_v1.01.pdf&gt; for more
information.</help>
			</entry>
			<entry name="USB_ISIGHTFW">
				<label>iSight firmware loading support</label>
				<help>This driver loads firmware for USB Apple iSight cameras, allowing
them to be driven by the USB video class driver available at
http://linux-uvc.berlios.de

The firmware for this driver must be extracted from the MacOS
driver beforehand. Tools for doing so are available at
http://bersace03.free.fr</help>
			</entry>
			<entry name="USB_YUREX">
				<label>USB YUREX driver support</label>
				<help>Say Y here if you want to connect a YUREX to your computer's
USB port. The YUREX is a leg-shakes sensor. See
&lt;http://bbu.kayac.com/en/&gt; for further information.
This driver supports read/write of leg-shakes counter and
fasync for the counter update via a device file /dev/yurex*.

To compile this driver as a module, choose M here: the
module will be called yurex.</help>
			</entry>
			<entry name="USB_EZUSB_FX2">
				<label>Functions for loading firmware on EZUSB chips</label>
				<help>Say Y here if you need EZUSB device support.
(Cypress FX/FX2/FX2LP microcontrollers)</help>
			</entry>
			<entry name="USB_HSIC_USB3503">
				<label>USB3503 HSIC to USB20 Driver</label>
				<help>This option enables support for SMSC USB3503 HSIC to USB 2.0 Driver.</help>
			</entry>
			<entry name="USB_LINK_LAYER_TEST">
				<label>USB Link Layer Test driver</label>
				<help>This driver is for generating specific traffic for Super Speed Link
Layer Test Device. Say Y only when you want to conduct USB Super Speed
Link Layer Test for host controllers.</help>
			</entry>
			<entry name="USB_CHAOSKEY">
				<label>ChaosKey random number generator driver support</label>
				<help>Say Y here if you want to connect an AltusMetrum ChaosKey or
Araneus Alea I to your computer's USB port. These devices
are hardware random number generators which hook into the
kernel entropy pool to ensure a large supply of entropy for
/dev/random and /dev/urandom and also provides direct access
via /dev/chaoskeyX

To compile this driver as a module, choose M here: the
module will be called chaoskey.</help>
			</entry>
			<entry name="UCSI">
				<label>USB Type-C Connector System Software Interface driver</label>
				<help>UCSI driver is meant to be used as a convenience tool for desktop and
server systems that are not equipped to handle USB in device mode. It
will always select USB host role for the USB Type-C ports on systems
that provide UCSI interface.

USB Type-C Connector System Software Interface (UCSI) is a
specification for an interface that allows the Operating System to
control the USB Type-C ports on a system. Things the need controlling
include the USB Data Role (host or device), and when USB Power
Delivery is supported, the Power Role (source or sink). With USB
Type-C connectors, when two dual role capable devices are attached
together, the data role is selected randomly. Therefore it is
important to give the OS a way to select the role. Otherwise the user
would have to unplug and replug in order in order to attempt to swap
the data and power roles.

The UCSI specification can be downloaded from:
http://www.intel.com/content/www/us/en/io/universal-serial-bus/usb-type-c-ucsi-spec.html

To compile the driver as a module, choose M here: the module will be
called ucsi.
</help>
			</entry>
			<entry name="USB_ATM">
				<label>USB DSL modem support</label>
				<help>Say Y here if you want to connect a USB Digital Subscriber Line (DSL)
modem to your computer's USB port.  You will then need to choose your
modem from the list below.

To compile this driver as a module, choose M here: the
module will be called usbatm.</help>
			</entry>
			<entry name="USB_SPEEDTOUCH">
				<label>Speedtouch USB support</label>
				<help>Say Y here if you have an SpeedTouch USB or SpeedTouch 330
modem.  In order to use your modem you will need to install the
two parts of the firmware, extracted by the user space tools; see
&lt;http://www.linux-usb.org/SpeedTouch/&gt; for details.

To compile this driver as a module, choose M here: the
module will be called speedtch.</help>
			</entry>
			<entry name="USB_CXACRU">
				<label>Conexant AccessRunner USB support</label>
				<help>Say Y here if you have an ADSL USB modem based on the Conexant
AccessRunner chipset.  In order to use your modem you will need to
install the firmware, extracted by the user space tools; see
&lt;http://accessrunner.sourceforge.net/&gt; for details.

To compile this driver as a module, choose M here: the
module will be called cxacru.</help>
			</entry>
			<entry name="USB_UEAGLEATM">
				<label>ADI 930 and eagle USB DSL modem</label>
				<help>Say Y here if you have an ADSL USB modem based on the ADI 930
or eagle chipset. In order to use your modem you will need to
install firmwares and CMV (Command Management Variables); see
&lt;https://gna.org/projects/ueagleatm/&gt; for details.

To compile this driver as a module, choose M here: the
module will be called ueagle-atm.</help>
			</entry>
			<entry name="USB_XUSBATM">
				<label>Other USB DSL modem support</label>
				<help>Say Y here if you have a DSL USB modem not explicitly supported by
another USB DSL drivers.  In order to use your modem you will need to
pass the vendor ID, product ID, and endpoint numbers for transmission
and reception as module parameters.  You may need to initialize
the modem using a user space utility (a firmware loader for example).

To compile this driver as a module, choose M here: the
module will be called xusbatm.</help>
			</entry>
			<container name="USB_Physical_Layer_drivers">
				<label>USB Physical Layer drivers</label>
				<entry name="USB_PHY"/>
				<entry name="AB8500_USB">
					<label>AB8500 USB Transceiver Driver</label>
					<help>Enable this to support the USB OTG transceiver in AB8500 chip.
This transceiver supports high and full speed devices plus,
in host mode, low speed.</help>
				</entry>
				<entry name="FSL_USB2_OTG">
					<label>Freescale USB OTG Transceiver Driver</label>
					<help>Enable this to support Freescale USB OTG transceiver.</help>
				</entry>
				<entry name="ISP1301_OMAP">
					<label>Philips ISP1301 with OMAP OTG</label>
					<help>If you say yes here you get support for the Philips ISP1301
USB-On-The-Go transceiver working with the OMAP OTG controller.
The ISP1301 is a full speed USB  transceiver which is used in
products including H2, H3, and H4 development boards for Texas
Instruments OMAP processors.

This driver can also be built as a module.  If so, the module
will be called phy-isp1301-omap.</help>
				</entry>
				<entry name="KEYSTONE_USB_PHY">
					<label>Keystone USB PHY Driver</label>
					<help>Enable this to support Keystone USB phy. This driver provides
interface to interact with USB 2.0 and USB 3.0 PHY that is part
of the Keystone SOC.</help>
				</entry>
				<entry name="NOP_USB_XCEIV">
					<label>NOP USB Transceiver Driver</label>
					<help>This driver is to be used by all the usb transceiver which are either
built-in with usb ip or which are autonomous and doesn't require any
phy programming such as ISP1x04 etc.</help>
				</entry>
				<entry name="AM335X_CONTROL_USB"/>
				<entry name="AM335X_PHY_USB">
					<label>AM335x USB PHY Driver</label>
					<help>This driver provides PHY support for that phy which part for the
AM335x SoC.</help>
				</entry>
				<entry name="SAMSUNG_USBPHY">
					<help>Enable this to support Samsung USB phy helper driver for Samsung SoCs.
This driver provides common interface to interact, for Samsung USB 2.0 PHY
driver and later for Samsung USB 3.0 PHY driver.</help>
				</entry>
				<entry name="TWL6030_USB">
					<label>TWL6030 USB Transceiver Driver</label>
					<help>Enable this to support the USB OTG transceiver on TWL6030
family chips. This TWL6030 transceiver has the VBUS and ID GND
and OTG SRP events capabilities. For all other transceiver functionality
UTMI PHY is embedded in OMAP4430. The internal PHY configurations APIs
are hooked to this driver through platform_data structure.
The definition of internal PHY APIs are in the mach-omap2 layer.</help>
				</entry>
				<entry name="USB_GPIO_VBUS">
					<label>GPIO based peripheral-only VBUS sensing 'transceiver'</label>
					<help>Provides simple GPIO VBUS sensing for controllers with an
internal transceiver via the usb_phy interface, and
optionally control of a D+ pullup GPIO as well as a VBUS
current limit regulator.</help>
				</entry>
				<entry name="OMAP_OTG">
					<label>OMAP USB OTG controller driver</label>
					<help>Enable this to support some transceivers on OMAP1 platforms. OTG
controller is needed to switch between host and peripheral modes.

This driver can also be built as a module. If so, the module
will be called phy-omap-otg.</help>
				</entry>
				<entry name="TAHVO_USB">
					<label>Tahvo USB transceiver driver</label>
					<help>Enable this to support USB transceiver on Tahvo. This is used
at least on Nokia 770.</help>
				</entry>
				<entry name="TAHVO_USB_HOST_BY_DEFAULT">
					<label>Device in USB host mode by default</label>
					<help>Say Y here, if you want the device to enter USB host mode
by default on bootup.</help>
				</entry>
				<entry name="USB_ISP1301">
					<label>NXP ISP1301 USB transceiver support</label>
					<help>Say Y here to add support for the NXP ISP1301 USB transceiver driver.
This chip is typically used as USB transceiver for USB host, gadget
and OTG drivers (to be selected separately).

To compile this driver as a module, choose M here: the
module will be called phy-isp1301.</help>
				</entry>
				<entry name="USB_MSM_OTG">
					<label>Qualcomm on-chip USB OTG controller support</label>
					<help>Enable this to support the USB OTG transceiver on Qualcomm chips. It
handles PHY initialization, clock management, and workarounds
required after resetting the hardware and power management.
This driver is required even for peripheral only or host only
mode configurations.
This driver is not supported on boards like trout which
has an external PHY.</help>
				</entry>
				<entry name="USB_QCOM_8X16_PHY">
					<label>Qualcomm APQ8016/MSM8916 on-chip USB PHY controller support</label>
					<help>Enable this to support the USB transceiver on Qualcomm 8x16 chipsets.
It handles PHY initialization, clock management, power management,
and workarounds required after resetting the hardware.

To compile this driver as a module, choose M here: the
module will be called phy-qcom-8x16-usb.</help>
				</entry>
				<entry name="USB_MV_OTG">
					<label>Marvell USB OTG support</label>
					<help>Say Y here if you want to build Marvell USB OTG transciever
driver in kernel (including PXA and MMP series). This driver
implements role switch between EHCI host driver and gadget driver.

To compile this driver as a module, choose M here.</help>
				</entry>
				<entry name="USB_MXS_PHY">
					<label>Freescale MXS USB PHY support</label>
					<help>Enable this to support the Freescale MXS USB PHY.

MXS Phy is used by some of the i.MX SoCs, for example imx23/28/6x.</help>
				</entry>
				<entry name="USB_ULPI">
					<label>Generic ULPI Transceiver Driver</label>
					<help>Enable this to support ULPI connected USB OTG transceivers which
are likely found on embedded boards.</help>
				</entry>
				<entry name="USB_ULPI_VIEWPORT">
					<help>Provides read/write operations to the ULPI phy register set for
controllers with a viewport register (e.g. Chipidea/ARC controllers).</help>
				</entry>
			</container>
			<entry name="USB_GADGET">
				<label>USB Gadget Support</label>
				<help>USB is a master/slave protocol, organized with one master
host (such as a PC) controlling up to 127 peripheral devices.
The USB hardware is asymmetric, which makes it easier to set up:
you can't connect a &quot;to-the-host&quot; connector to a peripheral.

Linux can run in the host, or in the peripheral.  In both cases
you need a low level bus controller driver, and some software
talking to it.  Peripheral controllers are often discrete silicon,
or are integrated with the CPU in a microcontroller.  The more
familiar host side controllers have names like &quot;EHCI&quot;, &quot;OHCI&quot;,
or &quot;UHCI&quot;, and are usually integrated into southbridges on PC
motherboards.

Enable this configuration option if you want to run Linux inside
a USB peripheral device.  Configure one hardware driver for your
peripheral/device side bus controller, and a &quot;gadget driver&quot; for
your peripheral protocol.  (If you use modular gadget drivers,
you may configure more than one.)

If in doubt, say &quot;N&quot; and don't enable these drivers; most people
don't have this kind of hardware (except maybe inside Linux PDAs).

For more information, see &lt;http://www.linux-usb.org/gadget&gt; and
the kernel DocBook documentation for this API.</help>
			</entry>
			<entry name="USB_GADGET_DEBUG">
				<label>Debugging messages (DEVELOPMENT)</label>
				<help>Many controller and gadget drivers will print some debugging
messages if you use this option to ask for those messages.

Avoid enabling these messages, even if you're actively
debugging such a driver.  Many drivers will emit so many
messages that the driver timings are affected, which will
either create new failure modes or remove the one you're
trying to track down.  Never enable these messages for a
production build.</help>
			</entry>
			<entry name="USB_GADGET_VERBOSE">
				<label>Verbose debugging Messages (DEVELOPMENT)</label>
				<help>Many controller and gadget drivers will print verbose debugging
messages if you use this option to ask for those messages.

Avoid enabling these messages, even if you're actively
debugging such a driver.  Many drivers will emit so many
messages that the driver timings are affected, which will
either create new failure modes or remove the one you're
trying to track down.  Never enable these messages for a
production build.</help>
			</entry>
			<entry name="USB_GADGET_DEBUG_FILES">
				<label>Debugging information files (DEVELOPMENT)</label>
				<help>Some of the drivers in the &quot;gadget&quot; framework can expose
debugging information in files such as /proc/driver/udc
(for a peripheral controller).  The information in these
files may help when you're troubleshooting or bringing up a
driver on a new board.   Enable these files by choosing &quot;Y&quot;
here.  If in doubt, or to conserve kernel memory, say &quot;N&quot;.</help>
			</entry>
			<entry name="USB_GADGET_DEBUG_FS">
				<label>Debugging information files in debugfs (DEVELOPMENT)</label>
				<help>Some of the drivers in the &quot;gadget&quot; framework can expose
debugging information in files under /sys/kernel/debug/.
The information in these files may help when you're
troubleshooting or bringing up a driver on a new board.
Enable these files by choosing &quot;Y&quot; here.  If in doubt, or
to conserve kernel memory, say &quot;N&quot;.</help>
			</entry>
			<entry name="USB_GADGET_VBUS_DRAW">
				<label>Maximum VBUS Power usage (2-500 mA)</label>
				<help>Some devices need to draw power from USB when they are
configured, perhaps to operate circuitry or to recharge
batteries.  This is in addition to any local power supply,
such as an AC adapter or batteries.

Enter the maximum power your device draws through USB, in
milliAmperes.  The permitted range of values is 2 - 500 mA;
0 mA would be legal, but can make some hosts misbehave.

This value will be used except for system-specific gadget
drivers that have more specific information.</help>
			</entry>
			<entry name="USB_GADGET_STORAGE_NUM_BUFFERS">
				<label>Number of storage pipeline buffers</label>
				<help>Usually 2 buffers are enough to establish a good buffering
pipeline. The number may be increased in order to compensate
for a bursty VFS behaviour. For instance there may be CPU wake up
latencies that makes the VFS to appear bursty in a system with
an CPU on-demand governor. Especially if DMA is doing IO to
offload the CPU. In this case the CPU will go into power
save often and spin up occasionally to move data within VFS.
If selecting USB_GADGET_DEBUG_FILES this value may be set by
a module parameter as well.
If unsure, say 2.</help>
			</entry>
			<entry name="U_SERIAL_CONSOLE">
				<label>Serial gadget console support</label>
				<help>It supports the serial gadget can be used as a console.</help>
			</entry>
			<container name="USB_Peripheral_Controller">
				<label>USB Peripheral Controller</label>
				<entry name="USB_AT91">
					<label>Atmel AT91 USB Device Port</label>
					<help>Many Atmel AT91 processors (such as the AT91RM2000) have a
full speed USB Device Port with support for five configurable
endpoints (plus endpoint zero).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;at91_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_LPC32XX">
					<label>LPC32XX USB Peripheral Controller</label>
					<help>This option selects the USB device controller in the LPC32xx SoC.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;lpc32xx_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_ATMEL_USBA">
					<label>Atmel USBA</label>
					<help>USBA is the integrated high-speed USB Device controller on
the AT32AP700x, some AT91SAM9 and AT91CAP9 processors from Atmel.</help>
				</entry>
				<entry name="USB_BCM63XX_UDC">
					<label>Broadcom BCM63xx Peripheral Controller</label>
					<help>Many Broadcom BCM63xx chipsets (such as the BCM6328) have a
high speed USB Device Port with support for four fixed endpoints
(plus endpoint zero).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;bcm63xx_udc&quot;.</help>
				</entry>
				<entry name="USB_FSL_USB2">
					<label>Freescale Highspeed USB DR Peripheral Controller</label>
					<help>Some of Freescale PowerPC and i.MX processors have a High Speed
Dual-Role(DR) USB controller, which supports device mode.

The number of programmable endpoints is different through
SOC revisions.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;fsl_usb2_udc&quot; and force
all gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_FUSB300">
					<label>Faraday FUSB300 USB Peripheral Controller</label>
					<help>Faraday usb device controller FUSB300 driver</help>
				</entry>
				<entry name="USB_FOTG210_UDC">
					<label>Faraday FOTG210 USB Peripheral Controller</label>
					<help>Faraday USB2.0 OTG controller which can be configured as
high speed or full speed USB device. This driver supppors
Bulk Transfer so far.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;fotg210_udc&quot;.</help>
				</entry>
				<entry name="USB_GR_UDC">
					<label>Aeroflex Gaisler GRUSBDC USB Peripheral Controller Driver</label>
					<help>Select this to support Aeroflex Gaisler GRUSBDC cores from the GRLIB
VHDL IP core library.</help>
				</entry>
				<entry name="USB_OMAP">
					<label>OMAP USB Device Controller</label>
					<help>Many Texas Instruments OMAP processors have flexible full
speed USB device controllers, with support for up to 30
endpoints (plus endpoint zero).  This driver supports the
controller in the OMAP 1611, and should work with controllers
in other OMAP processors too, given minor tweaks.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;omap_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_PXA25X">
					<label>PXA 25x or IXP 4xx</label>
					<help>Intel's PXA 25x series XScale ARM-5TE processors include
an integrated full speed USB 1.1 device controller.  The
controller in the IXP 4xx series is register-compatible.

It has fifteen fixed-function endpoints, as well as endpoint
zero (for control transfers).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;pxa25x_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_PXA25X_SMALL"/>
				<entry name="USB_R8A66597">
					<label>Renesas R8A66597 USB Peripheral Controller</label>
					<help>R8A66597 is a discrete USB host and peripheral controller chip that
supports both full and high speed USB 2.0 data transfers.
It has nine configurable endpoints, and endpoint zero.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;r8a66597_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_RENESAS_USBHS_UDC">
					<label>'Renesas USBHS controller'</label>
					<help>Renesas USBHS is a discrete USB host and peripheral controller chip
that supports both full and high speed USB 2.0 data transfers.
It has nine or more configurable endpoints, and endpoint zero.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;renesas_usbhs&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_RENESAS_USB3">
					<label>'Renesas USB3.0 Peripheral controller'</label>
					<help>Renesas USB3.0 Peripheral controller is a USB peripheral controller
that supports super, high, and full speed USB 3.0 data transfers.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;renesas_usb3&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_PXA27X">
					<label>PXA 27x</label>
					<help>Intel's PXA 27x series XScale ARM v5TE processors include
an integrated full speed USB 1.1 device controller.

It has up to 23 endpoints, as well as endpoint zero (for
control transfers).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;pxa27x_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_S3C2410">
					<label>S3C2410 USB Device Controller</label>
					<help>Samsung's S3C2410 is an ARM-4 processor with an integrated
full speed USB 1.1 device controller.  It has 4 configurable
endpoints, as well as endpoint zero (for control transfers).

This driver has been tested on the S3C2410, S3C2412, and
S3C2440 processors.</help>
				</entry>
				<entry name="USB_S3C2410_DEBUG">
					<label>S3C2410 udc debug messages</label>
				</entry>
				<entry name="USB_S3C_HSUDC">
					<label>S3C2416, S3C2443 and S3C2450 USB Device Controller</label>
					<help>Samsung's S3C2416, S3C2443 and S3C2450 is an ARM9 based SoC
integrated with dual speed USB 2.0 device controller. It has
8 endpoints, as well as endpoint zero.

This driver has been tested on S3C2416 and S3C2450 processors.</help>
				</entry>
				<entry name="USB_MV_UDC">
					<label>Marvell USB2.0 Device Controller</label>
					<help>Marvell Socs (including PXA and MMP series) include a high speed
USB2.0 OTG controller, which can be configured as high speed or
full speed USB peripheral.</help>
				</entry>
				<entry name="USB_MV_U3D">
					<label>MARVELL PXA2128 USB 3.0 controller</label>
					<help>MARVELL PXA2128 Processor series include a super speed USB3.0 device
controller, which support super speed USB peripheral.</help>
				</entry>
				<entry name="USB_M66592">
					<label>Renesas M66592 USB Peripheral Controller</label>
					<help>M66592 is a discrete USB peripheral controller chip that
supports both full and high speed USB 2.0 data transfers.
It has seven configurable endpoints, and endpoint zero.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;m66592_udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_BDC_UDC">
					<label>Broadcom USB3.0 device controller IP driver(BDC)</label>
					<help>BDC is Broadcom's USB3.0 device controller IP. If your SOC has a BDC IP
then select this driver.

Say &quot;y&quot; here to link the driver statically, or &quot;m&quot; to build a dynamically
linked module called &quot;bdc&quot;.</help>
				</entry>
				<entry name="USB_BDC_PCI">
					<label>BDC support for PCIe based platforms</label>
					<help>Enable support for platforms which have BDC connected through PCIe, such as Lego3 FPGA platform.</help>
				</entry>
				<entry name="USB_AMD5536UDC">
					<label>AMD5536 UDC</label>
					<help>The AMD5536 UDC is part of the AMD Geode CS5536, an x86 southbridge.
It is a USB Highspeed DMA capable USB device controller. Beside ep0
it provides 4 IN and 4 OUT endpoints (bulk or interrupt type).
The UDC port supports OTG operation, and may be used as a host port
if it's not being used to implement peripheral or OTG roles.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;amd5536udc&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_FSL_QE">
					<label>Freescale QE/CPM USB Device Controller</label>
					<help>Some of Freescale PowerPC processors have a Full Speed
QE/CPM2 USB controller, which support device mode with 4
programmable endpoints. This driver supports the
controller in the MPC8360 and MPC8272, and should work with
controllers having QE or CPM2, given minor tweaks.

Set CONFIG_USB_GADGET to &quot;m&quot; to build this driver as a
dynamically linked module called &quot;fsl_qe_udc&quot;.</help>
				</entry>
				<entry name="USB_NET2272">
					<label>PLX NET2272</label>
					<help>PLX NET2272 is a USB peripheral controller which supports
both full and high speed USB 2.0 data transfers.

It has three configurable endpoints, as well as endpoint zero
(for control transfer).
Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;net2272&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_NET2272_DMA">
					<label>Support external DMA controller</label>
					<help>The NET2272 part can optionally support an external DMA
controller, but your board has to have support in the
driver itself.

If unsure, say &quot;N&quot; here.  The driver works fine in PIO mode.</help>
				</entry>
				<entry name="USB_NET2280">
					<label>NetChip NET228x / PLX USB3x8x</label>
					<help>NetChip 2280 / 2282 is a PCI based USB peripheral controller which
supports both full and high speed USB 2.0 data transfers.

It has six configurable endpoints, as well as endpoint zero
(for control transfers) and several endpoints with dedicated
functions.

PLX 2380 is a PCIe version of the PLX 2380.

PLX 3380 / 3382 is a PCIe based USB peripheral controller which
supports full, high speed USB 2.0 and super speed USB 3.0
data transfers.

It has eight configurable endpoints, as well as endpoint zero
(for control transfers) and several endpoints with dedicated
functions.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;net2280&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_GOKU">
					<label>Toshiba TC86C001 'Goku-S'</label>
					<help>The Toshiba TC86C001 is a PCI device which includes controllers
for full speed USB devices, IDE, I2C, SIO, plus a USB host (OHCI).

The device controller has three configurable (bulk or interrupt)
endpoints, plus endpoint zero (for control transfers).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;goku_udc&quot; and to force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_EG20T">
					<label>Intel QUARK X1000/EG20T PCH/LAPIS Semiconductor IOH(ML7213/ML7831) UDC</label>
					<help>This is a USB device driver for EG20T PCH.
EG20T PCH is the platform controller hub that is used in Intel's
general embedded platform. EG20T PCH has USB device interface.
Using this interface, it is able to access system devices connected
to USB device.
This driver enables USB device function.
USB device is a USB peripheral controller which
supports both full and high speed USB 2.0 data transfers.
This driver supports both control transfer and bulk transfer modes.
This driver dose not support interrupt transfer or isochronous
transfer modes.

This driver also can be used for LAPIS Semiconductor's ML7213 which is
for IVI(In-Vehicle Infotainment) use.
ML7831 is for general purpose use.
ML7213/ML7831 is companion chip for Intel Atom E6xx series.
ML7213/ML7831 is completely compatible for Intel EG20T PCH.

This driver can be used with Intel's Quark X1000 SOC platform</help>
				</entry>
				<entry name="USB_GADGET_XILINX">
					<label>Xilinx USB Driver</label>
					<help>USB peripheral controller driver for Xilinx USB2 device.
Xilinx USB2 device is a soft IP which supports both full
and high speed USB 2.0 data transfers. It has seven configurable
endpoints(bulk or interrupt or isochronous), as well as
endpoint zero(for control transfers).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;udc-xilinx&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
				<entry name="USB_DUMMY_HCD">
					<label>Dummy HCD (DEVELOPMENT)</label>
					<help>This host controller driver emulates USB, looping all data transfer
requests back to a USB &quot;gadget driver&quot; in the same host.  The host
side is the master; the gadget side is the slave.  Gadget drivers
can be high, full, or low speed; and they have access to endpoints
like those from NET2280, PXA2xx, or SA1100 hardware.

This may help in some stages of creating a driver to embed in a
Linux device, since it lets you debug several parts of the gadget
driver without its hardware or drivers being involved.

Since such a gadget side driver needs to interoperate with a host
side Linux-USB device driver, this may help to debug both sides
of a USB protocol stack.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;dummy_hcd&quot; and force all
gadget drivers to also be dynamically linked.</help>
				</entry>
			</container>
			<entry name="USB_LIBCOMPOSITE"/>
			<entry name="USB_F_ACM"/>
			<entry name="USB_F_SS_LB"/>
			<entry name="USB_U_SERIAL"/>
			<entry name="USB_U_ETHER"/>
			<entry name="USB_F_SERIAL"/>
			<entry name="USB_F_OBEX"/>
			<entry name="USB_F_NCM"/>
			<entry name="USB_F_ECM"/>
			<entry name="USB_F_PHONET"/>
			<entry name="USB_F_EEM"/>
			<entry name="USB_F_SUBSET"/>
			<entry name="USB_F_RNDIS"/>
			<entry name="USB_F_MASS_STORAGE"/>
			<entry name="USB_F_FS"/>
			<entry name="USB_F_UAC1"/>
			<entry name="USB_F_UAC2"/>
			<entry name="USB_F_UVC"/>
			<entry name="USB_F_MIDI"/>
			<entry name="USB_F_HID"/>
			<entry name="USB_F_PRINTER"/>
			<entry name="USB_F_TCM"/>
			<entry name="USB_CONFIGFS">
				<label>USB functions configurable through configfs</label>
				<help>A Linux USB &quot;gadget&quot; can be set up through configfs.
If this is the case, the USB functions (which from the host's
perspective are seen as interfaces) and configurations are
specified simply by creating appropriate directories in configfs.
Associating functions with configurations is done by creating
appropriate symbolic links.
For more information see Documentation/usb/gadget_configfs.txt.</help>
			</entry>
			<entry name="USB_CONFIGFS_SERIAL">
				<label>Generic serial bulk in/out</label>
				<help>The function talks to the Linux-USB generic serial driver.</help>
			</entry>
			<entry name="USB_CONFIGFS_ACM">
				<label>Abstract Control Model (CDC ACM)</label>
				<help>ACM serial link.  This function can be used to interoperate with
MS-Windows hosts or with the Linux-USB &quot;cdc-acm&quot; driver.</help>
			</entry>
			<entry name="USB_CONFIGFS_OBEX">
				<label>Object Exchange Model (CDC OBEX)</label>
				<help>You will need a user space OBEX server talking to /dev/ttyGS*,
since the kernel itself doesn't implement the OBEX protocol.</help>
			</entry>
			<entry name="USB_CONFIGFS_NCM">
				<label>Network Control Model (CDC NCM)</label>
				<help>NCM is an advanced protocol for Ethernet encapsulation, allows
grouping of several ethernet frames into one USB transfer and
different alignment possibilities.</help>
			</entry>
			<entry name="USB_CONFIGFS_ECM">
				<label>Ethernet Control Model (CDC ECM)</label>
				<help>The &quot;Communication Device Class&quot; (CDC) Ethernet Control Model.
That protocol is often avoided with pure Ethernet adapters, in
favor of simpler vendor-specific hardware, but is widely
supported by firmware for smart network devices.</help>
			</entry>
			<entry name="USB_CONFIGFS_ECM_SUBSET">
				<label>Ethernet Control Model (CDC ECM) subset</label>
				<help>On hardware that can't implement the full protocol,
a simple CDC subset is used, placing fewer demands on USB.</help>
			</entry>
			<entry name="USB_CONFIGFS_RNDIS">
				<label>RNDIS</label>
				<help>Microsoft Windows XP bundles the &quot;Remote NDIS&quot; (RNDIS) protocol,
and Microsoft provides redistributable binary RNDIS drivers for
older versions of Windows.

To make MS-Windows work with this, use Documentation/usb/linux.inf
as the &quot;driver info file&quot;.  For versions of MS-Windows older than
XP, you'll need to download drivers from Microsoft's website; a URL
is given in comments found in that info file.</help>
			</entry>
			<entry name="USB_CONFIGFS_EEM">
				<label>Ethernet Emulation Model (EEM)</label>
				<help>CDC EEM is a newer USB standard that is somewhat simpler than CDC ECM
and therefore can be supported by more hardware.  Technically ECM and
EEM are designed for different applications.  The ECM model extends
the network interface to the target (e.g. a USB cable modem), and the
EEM model is for mobile devices to communicate with hosts using
ethernet over USB.  For Linux gadgets, however, the interface with
the host is the same (a usbX device), so the differences are minimal.</help>
			</entry>
			<entry name="USB_CONFIGFS_PHONET">
				<label>Phonet protocol</label>
				<help>The Phonet protocol implementation for USB device.</help>
			</entry>
			<entry name="USB_CONFIGFS_MASS_STORAGE">
				<label>Mass storage</label>
				<help>The Mass Storage Gadget acts as a USB Mass Storage disk drive.
As its storage repository it can use a regular file or a block
device (in much the same way as the &quot;loop&quot; device driver),
specified as a module parameter or sysfs option.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_LB_SS">
				<label>Loopback and sourcesink function (for testing)</label>
				<help>Loopback function loops back a configurable number of transfers.
Sourcesink function either sinks and sources bulk data.
It also implements control requests, for &quot;chapter 9&quot; conformance.
Make this be the first driver you try using on top of any new
USB peripheral controller driver.  Then you can use host-side
test software, like the &quot;usbtest&quot; driver, to put your hardware
and its driver through a basic set of functional tests.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_FS">
				<label>Function filesystem (FunctionFS)</label>
				<help>The Function Filesystem (FunctionFS) lets one create USB
composite functions in user space in the same way GadgetFS
lets one create USB gadgets in user space.  This allows creation
of composite gadgets such that some of the functions are
implemented in kernel space (for instance Ethernet, serial or
mass storage) and other are implemented in user space.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_UAC1">
				<label>Audio Class 1.0</label>
				<help>This Audio function implements 1 AudioControl interface,
1 AudioStreaming Interface each for USB-OUT and USB-IN.
This driver requires a real Audio codec to be present
on the device.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_UAC2">
				<label>Audio Class 2.0</label>
				<help>This Audio function is compatible with USB Audio Class
specification 2.0. It implements 1 AudioControl interface,
1 AudioStreaming Interface each for USB-OUT and USB-IN.
This driver doesn't expect any real Audio codec to be present
on the device - the audio streams are simply sinked to and
sourced from a virtual ALSA sound card created. The user-space
application may choose to do whatever it wants with the data
received from the USB Host and choose to provide whatever it
wants as audio data to the USB Host.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_MIDI">
				<label>MIDI function</label>
				<help>The MIDI Function acts as a USB Audio device, with one MIDI
input and one MIDI output. These MIDI jacks appear as
a sound &quot;card&quot; in the ALSA sound system. Other MIDI
connections can then be made on the gadget system, using
ALSA's aconnect utility etc.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_HID">
				<label>HID function</label>
				<help>The HID function driver provides generic emulation of USB
Human Interface Devices (HID).

For more information, see Documentation/usb/gadget_hid.txt.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_UVC">
				<label>USB Webcam function</label>
				<help>The Webcam function acts as a composite USB Audio and Video Class
device. It provides a userspace API to process UVC control requests
and stream video data to the host.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_PRINTER">
				<label>Printer function</label>
				<help>The Printer function channels data between the USB host and a
userspace program driving the print engine. The user space
program reads and writes the device file /dev/g_printer&lt;X&gt; to
receive or send printer data. It can use ioctl calls to
the device file to get or set printer status.

For more information, see Documentation/usb/gadget_printer.txt
which includes sample code for accessing the device file.</help>
			</entry>
			<entry name="USB_CONFIGFS_F_TCM">
				<label>USB Gadget Target Fabric</label>
				<help>This fabric is a USB gadget component. Two USB protocols are
supported that is BBB or BOT (Bulk Only Transport) and UAS
(USB Attached SCSI). BOT is advertised on alternative
interface 0 (primary) and UAS is on alternative interface 1.
Both protocols can work on USB2.0 and USB3.0.
UAS utilizes the USB 3.0 feature called streams support.</help>
			</entry>
			<entry name="USB_ZERO">
				<label>Gadget Zero (DEVELOPMENT)</label>
				<help>Gadget Zero is a two-configuration device.  It either sinks and
sources bulk data; or it loops back a configurable number of
transfers.  It also implements control requests, for &quot;chapter 9&quot;
conformance.  The driver needs only two bulk-capable endpoints, so
it can work on top of most device-side usb controllers.  It's
useful for testing, and is also a working example showing how
USB &quot;gadget drivers&quot; can be written.

Make this be the first driver you try using on top of any new
USB peripheral controller driver.  Then you can use host-side
test software, like the &quot;usbtest&quot; driver, to put your hardware
and its driver through a basic set of functional tests.

Gadget Zero also works with the host-side &quot;usb-skeleton&quot; driver,
and with many kinds of host-side test software.  You may need
to tweak product and vendor IDs before host software knows about
this device, and arrange to select an appropriate configuration.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_zero&quot;.</help>
			</entry>
			<entry name="USB_ZERO_HNPTEST">
				<label>HNP Test Device</label>
				<help>You can configure this device to enumerate using the device
identifiers of the USB-OTG test device.  That means that when
this gadget connects to another OTG device, with this one using
the &quot;B-Peripheral&quot; role, that device will use HNP to let this
one serve as the USB host instead (in the &quot;B-Host&quot; role).</help>
			</entry>
			<entry name="USB_AUDIO">
				<label>Audio Gadget</label>
				<help>This Gadget Audio driver is compatible with USB Audio Class
specification 2.0. It implements 1 AudioControl interface,
1 AudioStreaming Interface each for USB-OUT and USB-IN.
Number of channels, sample rate and sample size can be
specified as module parameters.
This driver doesn't expect any real Audio codec to be present
on the device - the audio streams are simply sinked to and
sourced from a virtual ALSA sound card created. The user-space
application may choose to do whatever it wants with the data
received from the USB Host and choose to provide whatever it
wants as audio data to the USB Host.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_audio&quot;.</help>
			</entry>
			<entry name="GADGET_UAC1">
				<label>UAC 1.0 (Legacy)</label>
				<help>If you instead want older UAC Spec-1.0 driver that also has audio
paths hardwired to the Audio codec chip on-board and doesn't work
without one.</help>
			</entry>
			<entry name="USB_ETH">
				<label>Ethernet Gadget (with CDC Ethernet support)</label>
				<help>This driver implements Ethernet style communication, in one of
several ways:

- The &quot;Communication Device Class&quot; (CDC) Ethernet Control Model.
That protocol is often avoided with pure Ethernet adapters, in
favor of simpler vendor-specific hardware, but is widely
supported by firmware for smart network devices.

- On hardware can't implement that protocol, a simple CDC subset
is used, placing fewer demands on USB.

- CDC Ethernet Emulation Model (EEM) is a newer standard that has
a simpler interface that can be used by more USB hardware.

RNDIS support is an additional option, more demanding than subset.

Within the USB device, this gadget driver exposes a network device
&quot;usbX&quot;, where X depends on what other networking devices you have.
Treat it like a two-node Ethernet link:  host, and gadget.

The Linux-USB host-side &quot;usbnet&quot; driver interoperates with this
driver, so that deep I/O queues can be supported.  On 2.4 kernels,
use &quot;CDCEther&quot; instead, if you're using the CDC option. That CDC
mode should also interoperate with standard CDC Ethernet class
drivers on other host operating systems.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_ether&quot;.</help>
			</entry>
			<entry name="USB_ETH_RNDIS">
				<label>RNDIS support</label>
				<help>Microsoft Windows XP bundles the &quot;Remote NDIS&quot; (RNDIS) protocol,
and Microsoft provides redistributable binary RNDIS drivers for
older versions of Windows.

If you say &quot;y&quot; here, the Ethernet gadget driver will try to provide
a second device configuration, supporting RNDIS to talk to such
Microsoft USB hosts.

To make MS-Windows work with this, use Documentation/usb/linux.inf
as the &quot;driver info file&quot;.  For versions of MS-Windows older than
XP, you'll need to download drivers from Microsoft's website; a URL
is given in comments found in that info file.</help>
			</entry>
			<entry name="USB_ETH_EEM">
				<label>Ethernet Emulation Model (EEM) support</label>
				<help>CDC EEM is a newer USB standard that is somewhat simpler than CDC ECM
and therefore can be supported by more hardware.  Technically ECM and
EEM are designed for different applications.  The ECM model extends
the network interface to the target (e.g. a USB cable modem), and the
EEM model is for mobile devices to communicate with hosts using
ethernet over USB.  For Linux gadgets, however, the interface with
the host is the same (a usbX device), so the differences are minimal.

If you say &quot;y&quot; here, the Ethernet gadget driver will use the EEM
protocol rather than ECM.  If unsure, say &quot;n&quot;.</help>
			</entry>
			<entry name="USB_G_NCM">
				<label>Network Control Model (NCM) support</label>
				<help>This driver implements USB CDC NCM subclass standard. NCM is
an advanced protocol for Ethernet encapsulation, allows grouping
of several ethernet frames into one USB transfer and different
alignment possibilities.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_ncm&quot;.</help>
			</entry>
			<entry name="USB_GADGETFS">
				<label>Gadget Filesystem</label>
				<help>This driver provides a filesystem based API that lets user mode
programs implement a single-configuration USB device, including
endpoint I/O and control requests that don't relate to enumeration.
All endpoints, transfer speeds, and transfer types supported by
the hardware are available, through read() and write() calls.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;gadgetfs&quot;.</help>
			</entry>
			<entry name="USB_FUNCTIONFS">
				<label>Function Filesystem</label>
				<help>The Function Filesystem (FunctionFS) lets one create USB
composite functions in user space in the same way GadgetFS
lets one create USB gadgets in user space.  This allows creation
of composite gadgets such that some of the functions are
implemented in kernel space (for instance Ethernet, serial or
mass storage) and other are implemented in user space.

If you say &quot;y&quot; or &quot;m&quot; here you will be able what kind of
configurations the gadget will provide.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build
a dynamically linked module called &quot;g_ffs&quot;.</help>
			</entry>
			<entry name="USB_FUNCTIONFS_ETH">
				<label>Include configuration with CDC ECM (Ethernet)</label>
				<help>Include a configuration with CDC ECM function (Ethernet) and the
Function Filesystem.</help>
			</entry>
			<entry name="USB_FUNCTIONFS_RNDIS">
				<label>Include configuration with RNDIS (Ethernet)</label>
				<help>Include a configuration with RNDIS function (Ethernet) and the Filesystem.</help>
			</entry>
			<entry name="USB_FUNCTIONFS_GENERIC">
				<label>Include 'pure' configuration</label>
				<help>Include a configuration with the Function Filesystem alone with
no Ethernet interface.</help>
			</entry>
			<entry name="USB_MASS_STORAGE">
				<label>Mass Storage Gadget</label>
				<help>The Mass Storage Gadget acts as a USB Mass Storage disk drive.
As its storage repository it can use a regular file or a block
device (in much the same way as the &quot;loop&quot; device driver),
specified as a module parameter or sysfs option.

This driver is a replacement for now removed File-backed
Storage Gadget (g_file_storage).

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build
a dynamically linked module called &quot;g_mass_storage&quot;.</help>
			</entry>
			<entry name="USB_GADGET_TARGET">
				<label>USB Gadget Target Fabric Module</label>
				<help>This fabric is an USB gadget. Two USB protocols are supported that is
BBB or BOT (Bulk Only Transport) and UAS (USB Attached SCSI). BOT is
advertised on alternative interface 0 (primary) and UAS is on
alternative interface 1. Both protocols can work on USB2.0 and USB3.0.
UAS utilizes the USB 3.0 feature called streams support.</help>
			</entry>
			<entry name="USB_G_SERIAL">
				<label>Serial Gadget (with CDC ACM and CDC OBEX support)</label>
				<help>The Serial Gadget talks to the Linux-USB generic serial driver.
This driver supports a CDC-ACM module option, which can be used
to interoperate with MS-Windows hosts or with the Linux-USB
&quot;cdc-acm&quot; driver.

This driver also supports a CDC-OBEX option.  You will need a
user space OBEX server talking to /dev/ttyGS*, since the kernel
itself doesn't implement the OBEX protocol.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_serial&quot;.

For more information, see Documentation/usb/gadget_serial.txt
which includes instructions and a &quot;driver info file&quot; needed to
make MS-Windows work with CDC ACM.</help>
			</entry>
			<entry name="USB_MIDI_GADGET">
				<label>MIDI Gadget</label>
				<help>The MIDI Gadget acts as a USB Audio device, with one MIDI
input and one MIDI output. These MIDI jacks appear as
a sound &quot;card&quot; in the ALSA sound system. Other MIDI
connections can then be made on the gadget system, using
ALSA's aconnect utility etc.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_midi&quot;.</help>
			</entry>
			<entry name="USB_G_PRINTER">
				<label>Printer Gadget</label>
				<help>The Printer Gadget channels data between the USB host and a
userspace program driving the print engine. The user space
program reads and writes the device file /dev/g_printer to
receive or send printer data. It can use ioctl calls to
the device file to get or set printer status.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_printer&quot;.

For more information, see Documentation/usb/gadget_printer.txt
which includes sample code for accessing the device file.</help>
			</entry>
			<entry name="USB_CDC_COMPOSITE">
				<label>CDC Composite Device (Ethernet and ACM)</label>
				<help>This driver provides two functions in one configuration:
a CDC Ethernet (ECM) link, and a CDC ACM (serial port) link.

This driver requires four bulk and two interrupt endpoints,
plus the ability to handle altsettings.  Not all peripheral
controllers are that capable.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module.</help>
			</entry>
			<entry name="USB_G_NOKIA">
				<label>Nokia composite gadget</label>
				<help>The Nokia composite gadget provides support for acm, obex
and phonet in only one composite gadget driver.

It's only really useful for N900 hardware. If you're building
a kernel for N900, say Y or M here. If unsure, say N.</help>
			</entry>
			<entry name="USB_G_ACM_MS">
				<label>CDC Composite Device (ACM and mass storage)</label>
				<help>This driver provides two functions in one configuration:
a mass storage, and a CDC ACM (serial port) link.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_acm_ms&quot;.</help>
			</entry>
			<entry name="USB_G_MULTI">
				<label>Multifunction Composite Gadget</label>
				<help>The Multifunction Composite Gadget provides Ethernet (RNDIS
and/or CDC Ethernet), mass storage and ACM serial link
interfaces.

You will be asked to choose which of the two configurations is
to be available in the gadget.  At least one configuration must
be chosen to make the gadget usable.  Selecting more than one
configuration will prevent Windows from automatically detecting
the gadget as a composite gadget, so an INF file will be needed to
use the gadget.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_multi&quot;.</help>
			</entry>
			<entry name="USB_G_MULTI_RNDIS">
				<label>RNDIS + CDC Serial + Storage configuration</label>
				<help>This option enables a configuration with RNDIS, CDC Serial and
Mass Storage functions available in the Multifunction Composite
Gadget.  This is the configuration dedicated for Windows since RNDIS
is Microsoft's protocol.

If unsure, say &quot;y&quot;.</help>
			</entry>
			<entry name="USB_G_MULTI_CDC">
				<label>CDC Ethernet + CDC Serial + Storage configuration</label>
				<help>This option enables a configuration with CDC Ethernet (ECM), CDC
Serial and Mass Storage functions available in the Multifunction
Composite Gadget.

If unsure, say &quot;y&quot;.</help>
			</entry>
			<entry name="USB_G_HID">
				<label>HID Gadget</label>
				<help>The HID gadget driver provides generic emulation of USB
Human Interface Devices (HID).

For more information, see Documentation/usb/gadget_hid.txt which
includes sample code for accessing the device files.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_hid&quot;.</help>
			</entry>
			<entry name="USB_G_DBGP">
				<label>EHCI Debug Device Gadget</label>
				<help>This gadget emulates an EHCI Debug device. This is useful when you want
to interact with an EHCI Debug Port.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_dbgp&quot;.</help>
			</entry>
			<entry name="USB_G_DBGP_PRINTK">
				<label>printk</label>
				<help>Directly printk() received data. No interaction.</help>
			</entry>
			<entry name="USB_G_DBGP_SERIAL">
				<label>serial</label>
				<help>Userland can interact using /dev/ttyGSxxx.</help>
			</entry>
			<entry name="USB_G_WEBCAM">
				<label>USB Webcam Gadget</label>
				<help>The Webcam Gadget acts as a composite USB Audio and Video Class
device. It provides a userspace API to process UVC control requests
and stream video data to the host.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;g_webcam&quot;.
</help>
			</entry>
			<entry name="USB_LED_TRIG">
				<label>USB LED Triggers</label>
				<help>This option adds LED triggers for USB host and/or gadget activity.

Say Y here if you are working on a system with led-class supported
LEDs and you want to use them as activity indicators for USB host or
gadget.</help>
			</entry>
			<entry name="UWB">
				<label>Ultra Wideband devices</label>
				<help>UWB is a high-bandwidth, low-power, point-to-point radio
technology using a wide spectrum (3.1-10.6GHz). It is
optimized for in-room use (480Mbps at 2 meters, 110Mbps at
10m). It serves as the transport layer for other protocols,
such as Wireless USB (WUSB).

The topology is peer to peer; however, higher level
protocols (such as WUSB) might impose a master/slave
relationship.

Say Y here if your computer has UWB radio controllers (USB or PCI)
based. You will need to enable the radio controllers
below.  It is ok to select all of them, no harm done.

For more help check the UWB and WUSB related files in
&lt;file:Documentation/usb/&gt;.

To compile the UWB stack as a module, choose M here.</help>
			</entry>
			<entry name="UWB_HWA">
				<label>UWB Radio Control driver for WUSB-compliant USB dongles (HWA)</label>
				<help>This driver enables the radio controller for HWA USB
devices. HWA stands for Host Wire Adapter, and it is a UWB
Radio Controller connected to your system via USB. Most of
them come with a Wireless USB host controller also.

To compile this driver select Y (built in) or M (module). It
is safe to select any even if you do not have the hardware.</help>
			</entry>
			<entry name="UWB_WHCI">
				<label>UWB Radio Control driver for WHCI-compliant cards</label>
				<help>This driver enables the radio controller for WHCI cards.

WHCI is a specification developed by Intel
(http://www.intel.com/technology/comms/wusb/whci.htm) much
in the spirit of USB's EHCI, but for UWB and Wireless USB
radio/host controllers connected via memory mapping (eg:
PCI). Most of these cards come also with a Wireless USB host
controller.

To compile this driver select Y (built in) or M (module). It
is safe to select any even if you do not have the hardware.</help>
			</entry>
			<entry name="UWB_I1480U">
				<label>Support for Intel Wireless UWB Link 1480 HWA</label>
				<help>This driver enables support for the i1480 when connected via
USB. It consists of a firmware uploader that will enable it
to behave as an HWA device.

To compile this driver select Y (built in) or M (module). It
is safe to select any even if you do not have the hardware.</help>
			</entry>
			<entry name="MMC">
				<label>MMC/SD/SDIO card support</label>
				<help>This selects MultiMediaCard, Secure Digital and Secure
Digital I/O support.

If you want MMC/SD/SDIO support, you should say Y here and
also to your specific host controller driver.</help>
			</entry>
			<entry name="MMC_DEBUG">
				<label>MMC debugging</label>
				<help>This is an option for use by developers; most people should
say N here.  This enables MMC core and driver debugging.</help>
			</entry>
			<entry name="PWRSEQ_EMMC">
				<label>HW reset support for eMMC</label>
				<help>This selects Hardware reset support aka pwrseq-emmc for eMMC
devices. By default this option is set to y.

This driver can also be built as a module. If so, the module
will be called pwrseq_emmc.</help>
			</entry>
			<entry name="PWRSEQ_SIMPLE">
				<label>Simple HW reset support for MMC</label>
				<help>This selects simple hardware reset support aka pwrseq-simple for MMC
devices. By default this option is set to y.

This driver can also be built as a module. If so, the module
will be called pwrseq_simple.
</help>
			</entry>
			<entry name="MMC_BLOCK">
				<label>MMC block device driver</label>
				<help>Say Y here to enable the MMC block device driver support.
This provides a block device driver, which you can use to
mount the filesystem. Almost everyone wishing MMC support
should say Y or M here.</help>
			</entry>
			<entry name="MMC_BLOCK_MINORS">
				<label>Number of minors per block device</label>
				<help>Number of minors per block device. One is needed for every
partition on the disk (plus one for the whole disk).

Number of total MMC minors available is 256, so your number
of supported block devices will be limited to 256 divided
by this number.

Default is 8 to be backwards compatible with previous
hardwired device numbering.

If unsure, say 8 here.</help>
			</entry>
			<entry name="MMC_BLOCK_BOUNCE">
				<label>Use bounce buffer for simple hosts</label>
				<help>SD/MMC is a high latency protocol where it is crucial to
send large requests in order to get high performance. Many
controllers, however, are restricted to continuous memory
(i.e. they can't do scatter-gather), something the kernel
rarely can provide.

Say Y here to help these restricted hosts by bouncing
requests back and forth from a large buffer. You will get
a big performance gain at the cost of up to 64 KiB of
physical memory.

If unsure, say Y here.</help>
			</entry>
			<entry name="SDIO_UART">
				<label>SDIO UART/GPS class support</label>
				<help>SDIO function driver for SDIO cards that implements the UART
class, as well as the GPS class which appears like a UART.</help>
			</entry>
			<entry name="MMC_TEST">
				<label>MMC host test driver</label>
				<help>Development driver that performs a series of reads and writes
to a memory card in order to expose certain well known bugs
in host controllers. The tests are executed by writing to the
&quot;test&quot; file in debugfs under each card. Note that whatever is
on your card will be overwritten by these tests.

This driver is only of interest to those developing or
testing a host driver. Most people should say N here.
</help>
			</entry>
			<entry name="MMC_ARMMMCI">
				<label>ARM AMBA Multimedia Card Interface support</label>
				<help>This selects the ARM(R) AMBA(R) PrimeCell Multimedia Card
Interface (PL180 and PL181) support.  If you have an ARM(R)
platform with a Multimedia Card slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_QCOM_DML">
				<label>Qualcomm Data Mover for SD Card Controller</label>
				<help>This selects the Qualcomm Data Mover lite/local on SD Card controller.
This option will enable the dma to work correctly, if you are using
Qcom SOCs and MMC, you would probably need this option to get DMA working.

if unsure, say N.</help>
			</entry>
			<entry name="MMC_PXA">
				<label>Intel PXA25x/26x/27x Multimedia Card Interface support</label>
				<help>This selects the Intel(R) PXA(R) Multimedia card Interface.
If you have a PXA(R) platform with a Multimedia Card slot,
say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI">
				<label>Secure Digital Host Controller Interface support</label>
				<help>This selects the generic Secure Digital Host Controller Interface.
It is used by manufacturers such as Texas Instruments(R), Ricoh(R)
and Toshiba(R). Most controllers found in laptops are of this type.

If you have a controller with this interface, say Y or M here. You
also need to enable an appropriate bus interface.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_IO_ACCESSORS">
				<help>This is silent Kconfig symbol that is selected by the drivers that
need to overwrite SDHCI IO memory accessors.</help>
			</entry>
			<entry name="MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER">
				<help>This option is selected by drivers running on big endian hosts
and performing I/O to a SDHCI controller through a bus that
implements a hardware byte swapper using a 32-bit datum.
This endian mapping mode is called &quot;data invariance&quot; and
has the effect of scrambling the addresses and formats of data
accessed in sizes other than the datum size.

This is the case for the Nintendo Wii SDHCI.</help>
			</entry>
			<entry name="MMC_SDHCI_PCI">
				<label>SDHCI support on PCI bus</label>
				<help>This selects the PCI Secure Digital Host Controller Interface.
Most controllers found today are PCI devices.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_RICOH_MMC">
				<label>Ricoh MMC Controller Disabler</label>
				<help>This adds a pci quirk to disable Ricoh MMC Controller. This
proprietary controller is unnecessary because the SDHCI driver
supports MMC cards on the SD controller, but if it is not
disabled, it will steal the MMC cards away - rendering them
useless. It is safe to select this even if you don't
have a Ricoh based card reader.

If unsure, say Y.</help>
			</entry>
			<entry name="MMC_SDHCI_ACPI">
				<label>SDHCI support for ACPI enumerated SDHCI controllers</label>
				<help>This selects support for ACPI enumerated SDHCI controllers,
identified by ACPI Compatibility ID PNP0D40 or specific
ACPI Hardware IDs.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_PLTFM">
				<label>SDHCI platform and OF driver helper</label>
				<help>This selects the common helper functions support for Secure Digital
Host Controller Interface based platform and OF drivers.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_OF_ARASAN">
				<label>SDHCI OF support for the Arasan SDHCI controllers</label>
				<help>This selects the Arasan Secure Digital Host Controller Interface
(SDHCI). This hardware is found e.g. in Xilinx' Zynq SoC.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_OF_AT91">
				<label>SDHCI OF support for the Atmel SDMMC controller</label>
				<help>This selects the Atmel SDMMC driver</help>
			</entry>
			<entry name="MMC_SDHCI_OF_ESDHC">
				<label>SDHCI OF support for the Freescale eSDHC controller</label>
				<help>This selects the Freescale eSDHC controller support.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_OF_HLWD">
				<label>SDHCI OF support for the Nintendo Wii SDHCI controllers</label>
				<help>This selects the Secure Digital Host Controller Interface (SDHCI)
found in the &quot;Hollywood&quot; chipset of the Nintendo Wii video game
console.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_CNS3XXX">
				<label>SDHCI support on the Cavium Networks CNS3xxx SoC</label>
				<help>This selects the SDHCI support for CNS3xxx System-on-Chip devices.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_ESDHC_IMX">
				<label>SDHCI support for the Freescale eSDHC/uSDHC i.MX controller</label>
				<help>This selects the Freescale eSDHC/uSDHC controller support
found on i.MX25, i.MX35 i.MX5x and i.MX6x.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_DOVE">
				<label>SDHCI support on Marvell's Dove SoC</label>
				<help>This selects the Secure Digital Host Controller Interface in
Marvell's Dove SoC.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_TEGRA">
				<label>SDHCI platform support for the Tegra SD/MMC Controller</label>
				<help>This selects the Tegra SD/MMC controller. If you have a Tegra
platform with SD or MMC devices, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_S3C">
				<label>SDHCI support on Samsung S3C SoC</label>
				<help>This selects the Secure Digital Host Controller Interface (SDHCI)
often referrered to as the HSMMC block in some of the Samsung S3C
range of SoC.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_SIRF">
				<label>SDHCI support on CSR SiRFprimaII and SiRFmarco SoCs</label>
				<help>This selects the SDHCI support for SiRF System-on-Chip devices.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_PXAV3">
				<label>Marvell MMP2 SD Host Controller support (PXAV3)</label>
				<help>This selects the Marvell(R) PXAV3 SD Host Controller.
If you have a MMP2 platform with SD Host Controller
and a card slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_PXAV2">
				<label>Marvell PXA9XX SD Host Controller support (PXAV2)</label>
				<help>This selects the Marvell(R) PXAV2 SD Host Controller.
If you have a PXA9XX platform with SD Host Controller
and a card slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_SPEAR">
				<label>SDHCI support on ST SPEAr platform</label>
				<help>This selects the Secure Digital Host Controller Interface (SDHCI)
often referrered to as the HSMMC block in some of the ST SPEAR range
of SoC

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_S3C_DMA">
				<label>DMA support on S3C SDHCI</label>
				<help>Enable DMA support on the Samsung S3C SDHCI glue. The DMA
has proved to be problematic if the controller encounters
certain errors, and thus should be treated with care.

YMMV.</help>
			</entry>
			<entry name="MMC_SDHCI_BCM_KONA">
				<label>SDHCI support on Broadcom KONA platform</label>
				<help>This selects the Broadcom Kona Secure Digital Host Controller
Interface(SDHCI) support.
This is used in Broadcom mobile SoCs.

If you have a controller with this interface, say Y or M here.</help>
			</entry>
			<entry name="MMC_SDHCI_F_SDH30">
				<label>SDHCI support for Fujitsu Semiconductor F_SDH30</label>
				<help>This selects the Secure Digital Host Controller Interface (SDHCI)
Needed by some Fujitsu SoC for MMC / SD / SDIO support.
If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_IPROC">
				<label>SDHCI support for the BCM2835 &amp; iProc SD/MMC Controller</label>
				<help>This selects the iProc SD/MMC controller.

If you have a BCM2835 or IPROC platform with SD or MMC devices,
say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_MOXART">
				<label>MOXART SD/MMC Host Controller support</label>
				<help>This selects support for the MOXART SD/MMC Host Controller.
MOXA provides one multi-functional card reader which can
be found on some embedded hardware such as UC-7112-LX.
If you have a controller with this interface, say Y here.</help>
			</entry>
			<entry name="MMC_SDHCI_ST">
				<label>SDHCI support on STMicroelectronics SoC</label>
				<help>This selects the Secure Digital Host Controller Interface in
STMicroelectronics SoCs.

If you have a controller with this interface, say Y or M here.
If unsure, say N.</help>
			</entry>
			<entry name="MMC_OMAP">
				<label>TI OMAP Multimedia Card Interface support</label>
				<help>This selects the TI OMAP Multimedia card Interface.
If you have an OMAP board with a Multimedia Card slot,
say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_OMAP_HS">
				<label>TI OMAP High Speed Multimedia Card Interface support</label>
				<help>This selects the TI OMAP High Speed Multimedia card Interface.
If you have an omap2plus board with a Multimedia Card slot,
say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_WBSD">
				<label>Winbond W83L51xD SD/MMC Card Interface support</label>
				<help>This selects the Winbond(R) W83L51xD Secure digital and
Multimedia card Interface.
If you have a machine with a integrated W83L518D or W83L519D
SD/MMC card reader, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_AU1X">
				<label>Alchemy AU1XX0 MMC Card Interface support</label>
				<help>This selects the AMD Alchemy(R) Multimedia card interface.
If you have a Alchemy platform with a MMC slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_ATMELMCI">
				<label>Atmel SD/MMC Driver (Multimedia Card Interface)</label>
				<help>This selects the Atmel Multimedia Card Interface driver. If
you have an AT32 (AVR32) or AT91 platform with a Multimedia
Card slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_SDHCI_MSM">
				<label>Qualcomm SDHCI Controller Support</label>
				<help>This selects the Secure Digital Host Controller Interface (SDHCI)
support present in Qualcomm SOCs. The controller supports
SD/MMC/SDIO devices.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_MXC">
				<label>Freescale i.MX21/27/31 or MPC512x Multimedia Card support</label>
				<help>This selects the Freescale i.MX21, i.MX27, i.MX31 or MPC512x
Multimedia Card Interface. If you have an i.MX or MPC512x platform
with a Multimedia Card slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_MXS">
				<label>Freescale MXS Multimedia Card Interface support</label>
				<help>This selects the Freescale SSP MMC controller found on MXS based
platforms like mx23/28.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_TIFM_SD">
				<label>TI Flash Media MMC/SD Interface support</label>
				<help>Say Y here if you want to be able to access MMC/SD cards with
the Texas Instruments(R) Flash Media card reader, found in many
laptops.
This option 'selects' (turns on, enables) 'TIFM_CORE', but you
probably also need appropriate card reader host adapter, such as
'Misc devices: TI Flash Media PCI74xx/PCI76xx host adapter support
(TIFM_7XX1)'.

To compile this driver as a module, choose M here: the
module will be called tifm_sd.</help>
			</entry>
			<entry name="MMC_MVSDIO">
				<label>Marvell MMC/SD/SDIO host driver</label>
				<help>This selects the Marvell SDIO host driver.
SDIO may currently be found on the Kirkwood 88F6281 and 88F6192
SoC controllers.

To compile this driver as a module, choose M here: the
module will be called mvsdio.</help>
			</entry>
			<entry name="MMC_DAVINCI">
				<label>TI DAVINCI Multimedia Card Interface support</label>
				<help>This selects the TI DAVINCI Multimedia card Interface.
If you have an DAVINCI board with a Multimedia Card slot,
say Y or M here.  If unsure, say N.</help>
			</entry>
			<entry name="MMC_GOLDFISH">
				<label>goldfish qemu Multimedia Card Interface support</label>
				<help>This selects the Goldfish Multimedia card Interface emulation
found on the Goldfish Android virtual device emulation.</help>
			</entry>
			<entry name="MMC_SPI">
				<label>MMC/SD/SDIO over SPI</label>
				<help>Some systems access MMC/SD/SDIO cards using a SPI controller
instead of using a &quot;native&quot; MMC/SD/SDIO controller.  This has a
disadvantage of being relatively high overhead, but a compensating
advantage of working on many systems without dedicated MMC/SD/SDIO
controllers.

If unsure, or if your system has no SPI master driver, say N.</help>
			</entry>
			<entry name="MMC_S3C">
				<label>Samsung S3C SD/MMC Card Interface support</label>
				<help>This selects a driver for the MCI interface found in
Samsung's S3C2410, S3C2412, S3C2440, S3C2442 CPUs.
If you have a board based on one of those and a MMC/SD
slot, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_S3C_HW_SDIO_IRQ">
				<label>Hardware support for SDIO IRQ</label>
				<help>Enable the hardware support for SDIO interrupts instead of using
the generic polling code.</help>
			</entry>
			<entry name="MMC_S3C_PIO">
				<label>Use PIO transfers only</label>
				<help>Use PIO to transfer data between memory and the hardware.

PIO is slower than DMA as it requires CPU instructions to
move the data. This has been the traditional default for
the S3C MCI driver.</help>
			</entry>
			<entry name="MMC_S3C_DMA">
				<label>Use DMA transfers only</label>
				<help>Use DMA to transfer data between memory and the hardare.

Currently, the DMA support in this driver seems to not be
working properly and needs to be debugged before this
option is useful.</help>
			</entry>
			<entry name="MMC_SDRICOH_CS">
				<label>MMC/SD driver for Ricoh Bay1Controllers</label>
				<help>Say Y here if your Notebook reports a Ricoh Bay1Controller PCMCIA
card whenever you insert a MMC or SD card into the card slot.

To compile this driver as a module, choose M here: the
module will be called sdricoh_cs.</help>
			</entry>
			<entry name="MMC_TMIO_CORE"/>
			<entry name="MMC_TMIO">
				<label>Toshiba Mobile IO Controller (TMIO) MMC/SD function support</label>
				<help>This provides support for the SD/MMC cell found in TC6393XB,
T7L66XB and also HTC ASIC3</help>
			</entry>
			<entry name="MMC_SDHI">
				<label>SH-Mobile SDHI SD/SDIO controller support</label>
				<help>This provides support for the SDHI SD/SDIO controller found in
SuperH and ARM SH-Mobile SoCs</help>
			</entry>
			<entry name="MMC_CB710">
				<label>ENE CB710 MMC/SD Interface support</label>
				<help>This option enables support for MMC/SD part of ENE CB710/720 Flash
memory card reader found in some laptops (ie. some versions of
HP Compaq nx9500).

This driver can also be built as a module. If so, the module
will be called cb710-mmc.</help>
			</entry>
			<entry name="MMC_VIA_SDMMC">
				<label>VIA SD/MMC Card Reader Driver</label>
				<help>This selects the VIA SD/MMC Card Reader driver, say Y or M here.
VIA provides one multi-functional card reader which integrated into
some motherboards manufactured by VIA. This card reader supports
SD/MMC/SDHC.
If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="SDH_BFIN">
				<label>Blackfin Secure Digital Host support</label>
				<help>If you say yes here you will get support for the Blackfin on-chip
Secure Digital Host interface.  This includes support for MMC and
SD cards.

To compile this driver as a module, choose M here: the
module will be called bfin_sdh.

If unsure, say N.</help>
			</entry>
			<entry name="SDH_BFIN_MISSING_CMD_PULLUP_WORKAROUND">
				<label>Blackfin EZkit Missing SDH_CMD Pull Up Resistor Workaround</label>
				<help>If you say yes here SD-Cards may work on the EZkit.</help>
			</entry>
			<entry name="MMC_DW">
				<label>Synopsys DesignWare Memory Card Interface</label>
				<help>This selects support for the Synopsys DesignWare Mobile Storage IP
block, this provides host support for SD and MMC interfaces, in both
PIO, internal DMA mode and external DMA mode.</help>
			</entry>
			<entry name="MMC_DW_PLTFM">
				<label>Synopsys Designware MCI Support as platform device</label>
				<help>This selects the common helper functions support for Host Controller
Interface based platform driver. Please select this option if the IP
is present as a platform device. This is the common interface for the
Synopsys Designware IP.

If you have a controller with this interface, say Y or M here.

If unsure, say Y.</help>
			</entry>
			<entry name="MMC_DW_EXYNOS">
				<label>Exynos specific extensions for Synopsys DW Memory Card Interface</label>
				<help>This selects support for Samsung Exynos SoC specific extensions to the
Synopsys DesignWare Memory Card Interface driver. Select this option
for platforms based on Exynos4 and Exynos5 SoC's.</help>
			</entry>
			<entry name="MMC_DW_K3">
				<label>K3 specific extensions for Synopsys DW Memory Card Interface</label>
				<help>This selects support for Hisilicon K3 SoC specific extensions to the
Synopsys DesignWare Memory Card Interface driver. Select this option
for platforms based on Hisilicon K3 SoC's.</help>
			</entry>
			<entry name="MMC_DW_PCI">
				<label>Synopsys Designware MCI support on PCI bus</label>
				<help>This selects the PCI bus for the Synopsys Designware Mobile Storage IP.
Select this option if the IP is present on PCI platform.

If you have a controller with this interface, say Y or M here.

If unsure, say N.</help>
			</entry>
			<entry name="MMC_DW_ROCKCHIP">
				<label>Rockchip specific extensions for Synopsys DW Memory Card Interface</label>
				<help>This selects support for Rockchip SoC specific extensions to the
Synopsys DesignWare Memory Card Interface driver. Select this option
for platforms based on RK3066, RK3188 and RK3288 SoC's.</help>
			</entry>
			<entry name="MMC_SH_MMCIF">
				<label>SuperH Internal MMCIF support</label>
				<help>This selects the MMC Host Interface controller (MMCIF) found in various
Renesas SoCs for SH and ARM architectures.</help>
			</entry>
			<entry name="MMC_JZ4740">
				<label>JZ4740 SD/Multimedia Card Interface support</label>
				<help>This selects support for the SD/MMC controller on Ingenic JZ4740
SoCs.
If you have a board based on such a SoC and with a SD/MMC slot,
say Y or M here.</help>
			</entry>
			<entry name="MMC_VUB300">
				<label>VUB300 USB to SDIO/SD/MMC Host Controller support</label>
				<help>This selects support for Elan Digital Systems' VUB300 chip.

The VUB300 is a USB-SDIO Host Controller Interface chip
that enables the host computer to use SDIO/SD/MMC cards
via a USB 2.0 or USB 1.1 host.

The VUB300 chip will be found in both physically separate
USB to SDIO/SD/MMC adapters and embedded on some motherboards.

The VUB300 chip supports SD and MMC memory cards in addition
to single and multifunction SDIO cards.

Some SDIO cards will need a firmware file to be loaded and
sent to VUB300 chip in order to achieve better data throughput.
Download these &quot;Offload Pseudocode&quot; from Elan Digital Systems'
web-site http://www.elandigitalsystems.com/support/downloads.php
and put them in /lib/firmware. Note that without these additional
firmware files the VUB300 chip will still function, but not at
the best obtainable data rate.

To compile this mmc host controller driver as a module,
choose M here: the module will be called vub300.

If you have a computer with an embedded VUB300 chip
or if you intend connecting a USB adapter based on a
VUB300 chip say Y or M here.</help>
			</entry>
			<entry name="MMC_USHC">
				<label>USB SD Host Controller (USHC) support</label>
				<help>This selects support for USB SD Host Controllers based on
the Cypress Astoria chip with firmware compliant with CSR's
USB SD Host Controller specification (CS-118793-SP).

CSR boards with this device include: USB&lt;&gt;SDIO (M1985v2),
and Ultrasira.

Note: These controllers only support SDIO cards and do not
support MMC or SD memory cards.</help>
			</entry>
			<entry name="MMC_WMT">
				<label>Wondermedia SD/MMC Host Controller support</label>
				<help>This selects support for the SD/MMC Host Controller on
Wondermedia WM8505/WM8650 based SoCs.

To compile this driver as a module, choose M here: the
module will be called wmt-sdmmc.</help>
			</entry>
			<entry name="MMC_USDHI6ROL0">
				<label>Renesas USDHI6ROL0 SD/SDIO Host Controller support</label>
				<help>This selects support for the Renesas USDHI6ROL0 SD/SDIO
Host Controller</help>
			</entry>
			<entry name="MMC_REALTEK_PCI">
				<label>Realtek PCI-E SD/MMC Card Interface Driver</label>
				<help>Say Y here to include driver code to support SD/MMC card interface
of Realtek PCI-E card reader</help>
			</entry>
			<entry name="MMC_REALTEK_USB">
				<label>Realtek USB SD/MMC Card Interface Driver</label>
				<help>Say Y here to include driver code to support SD/MMC card interface
of Realtek RTS5129/39 series card reader</help>
			</entry>
			<entry name="MMC_SUNXI">
				<label>Allwinner sunxi SD/MMC Host Controller support</label>
				<help>This selects support for the SD/MMC Host Controller on
Allwinner sunxi SoCs.</help>
			</entry>
			<entry name="MMC_TOSHIBA_PCI">
				<label>Toshiba Type A SD/MMC Card Interface Driver</label>
				<help>
config MMC_MTK
tristate &quot;MediaTek SD/MMC Card Interface support&quot;
depends on HAS_DMA
help
This selects the MediaTek(R) Secure digital and Multimedia card Interface.
If you have a machine with a integrated SD/MMC card reader, say Y or M here.
This is needed if support for any SD/SDIO/MMC devices is required.
If unsure, say N.

config MMC_SDHCI_MICROCHIP_PIC32
tristate &quot;Microchip PIC32MZDA SDHCI support&quot;
depends on MMC_SDHCI &amp;&amp; PIC32MZDA &amp;&amp; MMC_SDHCI_PLTFM
help
This selects the Secure Digital Host Controller Interface (SDHCI)
for PIC32MZDA platform.

If you have a controller with this interface, say Y or M here.

If unsure, say N.
config MMC_SDHCI_BRCMSTB
tristate &quot;Broadcom SDIO/SD/MMC support&quot;
depends on ARCH_BRCMSTB || BMIPS_GENERIC
depends on MMC_SDHCI_PLTFM
default y
help
This selects support for the SDIO/SD/MMC Host Controller on
Broadcom STB SoCs.

If unsure, say Y.
</help>
			</entry>
			<entry name="MEMSTICK">
				<label>Sony MemoryStick card support</label>
				<help>Sony MemoryStick is a proprietary storage/extension card protocol.

If you want MemoryStick support, you should say Y here and also
to the specific driver for your MemoryStick interface.</help>
			</entry>
			<entry name="MEMSTICK_DEBUG">
				<label>MemoryStick debugging</label>
				<help>This is an option for use by developers; most people should
say N here.  This enables MemoryStick core and driver debugging.</help>
			</entry>
			<entry name="MEMSTICK_UNSAFE_RESUME">
				<label>Allow unsafe resume (DANGEROUS)</label>
				<help>If you say Y here, the MemoryStick layer will assume that all
cards stayed in their respective slots during the suspend. The
normal behaviour is to remove them at suspend and
redetecting them at resume. Breaking this assumption will
in most cases result in data corruption.

This option is usually just for embedded systems which use
a MemoryStick card for rootfs. Most people should say N here.</help>
			</entry>
			<entry name="MSPRO_BLOCK">
				<label>MemoryStick Pro block device driver</label>
				<help>Say Y here to enable the MemoryStick Pro block device driver
support. This provides a block device driver, which you can use
to mount the filesystem. Almost everyone wishing MemoryStick
support should say Y or M here.</help>
			</entry>
			<entry name="MS_BLOCK">
				<label>MemoryStick Standard device driver</label>
				<help>Say Y here to enable the MemoryStick Standard device driver
support. This provides a block device driver, which you can use
to mount the filesystem.
This driver works with old (bulky) MemoryStick and MemoryStick Duo
but not PRO. Say Y if you have such card.
Driver is new and not yet well tested, thus it can damage your card
(even permanently)
</help>
			</entry>
			<entry name="MEMSTICK_TIFM_MS">
				<label>TI Flash Media MemoryStick Interface support </label>
				<help>Say Y here if you want to be able to access MemoryStick cards with
the Texas Instruments(R) Flash Media card reader, found in many
laptops.
This option 'selects' (turns on, enables) 'TIFM_CORE', but you
probably also need appropriate card reader host adapter, such as
'Misc devices: TI Flash Media PCI74xx/PCI76xx host adapter support
(TIFM_7XX1)'.

To compile this driver as a module, choose M here: the
module will be called tifm_ms.</help>
			</entry>
			<entry name="MEMSTICK_JMICRON_38X">
				<label>JMicron JMB38X MemoryStick interface support</label>
				<help>Say Y here if you want to be able to access MemoryStick cards with
the JMicron(R) JMB38X MemoryStick card reader.

To compile this driver as a module, choose M here: the
module will be called jmb38x_ms.</help>
			</entry>
			<entry name="MEMSTICK_R592">
				<label>Ricoh R5C592 MemoryStick interface support</label>
				<help>Say Y here if you want to be able to access MemoryStick cards with
the Ricoh R5C592 MemoryStick card reader (which is part of 5 in one
multifunction reader)

To compile this driver as a module, choose M here: the module will
be called r592.</help>
			</entry>
			<entry name="MEMSTICK_REALTEK_PCI">
				<label>Realtek PCI-E Memstick Card Interface Driver</label>
				<help>Say Y here to include driver code to support Memstick card interface
of Realtek PCI-E card reader

To compile this driver as a module, choose M here: the module will
be called rtsx_pci_ms.</help>
			</entry>
			<entry name="MEMSTICK_REALTEK_USB">
				<label>Realtek USB Memstick Card Interface Driver</label>
				<help>Say Y here to include driver code to support Memstick card interface
of Realtek RTS5129/39 series USB card reader

To compile this driver as a module, choose M here: the module will
be called rts5139_ms.
</help>
			</entry>
			<entry name="LEDS_GPIO_REGISTER">
				<help>This option provides the function gpio_led_register_device.
As this function is used by arch code it must not be compiled as a
module.</help>
			</entry>
			<entry name="NEW_LEDS">
				<label>LED Support</label>
				<help>Say Y to enable Linux LED support.  This allows control of supported
LEDs from both userspace and optionally, by kernel events (triggers).</help>
			</entry>
			<entry name="LEDS_CLASS">
				<label>LED Class Support</label>
				<help>This option enables the led sysfs class in /sys/class/leds.  You'll
need this to do anything useful with LEDs.  If unsure, say N.</help>
			</entry>
			<entry name="LEDS_CLASS_FLASH">
				<label>LED Flash Class Support</label>
				<help>This option enables the flash led sysfs class in /sys/class/leds.
It wrapps LED Class and adds flash LEDs specific sysfs attributes
and kernel internal API to it. You'll need this to provide support
for the flash related features of a LED device. It can be built
as a module.</help>
			</entry>
			<entry name="LEDS_88PM860X">
				<label>LED Support for Marvell 88PM860x PMIC</label>
				<help>This option enables support for on-chip LED drivers found on Marvell
Semiconductor 88PM8606 PMIC.</help>
			</entry>
			<entry name="LEDS_AAT1290">
				<label>LED support for the AAT1290</label>
				<help>This option enables support for the LEDs on the AAT1290.</help>
			</entry>
			<entry name="LEDS_BCM6328">
				<label>LED Support for Broadcom BCM6328</label>
				<help>This option enables support for LEDs connected to the BCM6328
LED HW controller accessed via MMIO registers.</help>
			</entry>
			<entry name="LEDS_BCM6358">
				<label>LED Support for Broadcom BCM6358</label>
				<help>This option enables support for LEDs connected to the BCM6358
LED HW controller accessed via MMIO registers.</help>
			</entry>
			<entry name="LEDS_LM3530">
				<label>LCD Backlight driver for LM3530</label>
				<help>This option enables support for the LCD backlight using
LM3530 ambient light sensor chip. This ALS chip can be
controlled manually or using PWM input or using ambient
light automatically.</help>
			</entry>
			<entry name="LEDS_LM3533">
				<label>LED support for LM3533</label>
				<help>This option enables support for the LEDs on National Semiconductor /
TI LM3533 Lighting Power chips.

The LEDs can be controlled directly, through PWM input, or by the
ambient-light-sensor interface. The chip supports
hardware-accelerated blinking with maximum on and off periods of 9.8
and 77 seconds respectively.</help>
			</entry>
			<entry name="LEDS_LM3642">
				<label>LED support for LM3642 Chip</label>
				<help>This option enables support for LEDs connected to LM3642.
The LM3642 is a 4MHz fixed-frequency synchronous boost
converter plus 1.5A constant current driver for a high-current
white LED.</help>
			</entry>
			<entry name="LEDS_LOCOMO">
				<label>LED Support for Locomo device</label>
				<help>This option enables support for the LEDs on Sharp Locomo.
Zaurus models SL-5500 and SL-5600.</help>
			</entry>
			<entry name="LEDS_MIKROTIK_RB532">
				<label>LED Support for Mikrotik Routerboard 532</label>
				<help>This option enables support for the so called &quot;User LED&quot; of
Mikrotik's Routerboard 532.</help>
			</entry>
			<entry name="LEDS_S3C24XX">
				<label>LED Support for Samsung S3C24XX GPIO LEDs</label>
				<help>This option enables support for LEDs connected to GPIO lines
on Samsung S3C24XX series CPUs, such as the S3C2410 and S3C2440.</help>
			</entry>
			<entry name="LEDS_NET48XX">
				<label>LED Support for Soekris net48xx series Error LED</label>
				<help>This option enables support for the Soekris net4801 and net4826 error
LED.</help>
			</entry>
			<entry name="LEDS_FSG">
				<label>LED Support for the Freecom FSG-3</label>
				<help>This option enables support for the LEDs on the Freecom FSG-3.</help>
			</entry>
			<entry name="LEDS_WRAP">
				<label>LED Support for the WRAP series LEDs</label>
				<help>This option enables support for the PCEngines WRAP programmable LEDs.</help>
			</entry>
			<entry name="LEDS_COBALT_QUBE">
				<label>LED Support for the Cobalt Qube series front LED</label>
				<help>This option enables support for the front LED on Cobalt Qube series</help>
			</entry>
			<entry name="LEDS_COBALT_RAQ">
				<label>LED Support for the Cobalt Raq series</label>
				<help>This option enables support for the Cobalt Raq series LEDs.</help>
			</entry>
			<entry name="LEDS_SUNFIRE">
				<label>LED support for SunFire servers.</label>
				<help>This option enables support for the Left, Middle, and Right
LEDs on the I/O and CPU boards of SunFire UltraSPARC servers.</help>
			</entry>
			<entry name="LEDS_IPAQ_MICRO">
				<label>LED Support for the Compaq iPAQ h3xxx</label>
				<help>Choose this option if you want to use the notification LED on
Compaq/HP iPAQ h3100 and h3600.</help>
			</entry>
			<entry name="LEDS_HP6XX">
				<label>LED Support for the HP Jornada 6xx</label>
				<help>This option enables LED support for the handheld
HP Jornada 620/660/680/690.</help>
			</entry>
			<entry name="LEDS_PCA9532">
				<label>LED driver for PCA9532 dimmer</label>
				<help>This option enables support for NXP pca9532
LED controller. It is generally only useful
as a platform driver</help>
			</entry>
			<entry name="LEDS_PCA9532_GPIO">
				<label>Enable GPIO support for PCA9532</label>
				<help>Allow unused pins on PCA9532 to be used as gpio.

To use a pin as gpio pca9532_type in pca9532_platform data needs to
set to PCA9532_TYPE_GPIO.</help>
			</entry>
			<entry name="LEDS_GPIO">
				<label>LED Support for GPIO connected LEDs</label>
				<help>This option enables support for the LEDs connected to GPIO
outputs. To be useful the particular board must have LEDs
and they must be connected to the GPIO lines.  The LEDs must be
defined as platform devices and/or OpenFirmware platform devices.
The code to use these bindings can be selected below.</help>
			</entry>
			<entry name="LEDS_LP3944">
				<label>LED Support for N.S. LP3944 (Fun Light) I2C chip</label>
				<help>This option enables support for LEDs connected to the National
Semiconductor LP3944 Lighting Management Unit (LMU) also known as
Fun Light Chip.

To compile this driver as a module, choose M here: the
module will be called leds-lp3944.</help>
			</entry>
			<entry name="LEDS_LP3952">
				<label>LED Support for TI LP3952 2 channel LED driver</label>
				<help>This option enables support for LEDs connected to the Texas
Instruments LP3952 LED driver.

To compile this driver as a module, choose M here: the
module will be called leds-lp3952.</help>
			</entry>
			<entry name="LEDS_LP55XX_COMMON">
				<label>Common Driver for TI/National LP5521/5523/55231/5562/8501</label>
				<help>This option supports common operations for LP5521/5523/55231/5562/8501
devices.</help>
			</entry>
			<entry name="LEDS_LP5521">
				<label>LED Support for N.S. LP5521 LED driver chip</label>
				<help>If you say yes here you get support for the National Semiconductor
LP5521 LED driver. It is 3 channel chip with programmable engines.
Driver provides direct control via LED class and interface for
programming the engines.</help>
			</entry>
			<entry name="LEDS_LP5523">
				<label>LED Support for TI/National LP5523/55231 LED driver chip</label>
				<help>If you say yes here you get support for TI/National Semiconductor
LP5523/55231 LED driver.
It is 9 channel chip with programmable engines.
Driver provides direct control via LED class and interface for
programming the engines.</help>
			</entry>
			<entry name="LEDS_LP5562">
				<label>LED Support for TI LP5562 LED driver chip</label>
				<help>If you say yes here you get support for TI LP5562 LED driver.
It is 4 channels chip with programmable engines.
Driver provides direct control via LED class and interface for
programming the engines.</help>
			</entry>
			<entry name="LEDS_LP8501">
				<label>LED Support for TI LP8501 LED driver chip</label>
				<help>If you say yes here you get support for TI LP8501 LED driver.
It is 9 channel chip with programmable engines.
Driver provides direct control via LED class and interface for
programming the engines.
It is similar as LP5523, but output power selection is available.
And register layout and engine program schemes are different.</help>
			</entry>
			<entry name="LEDS_LP8788">
				<label>LED support for the TI LP8788 PMIC</label>
				<help>This option enables support for the Keyboard LEDs on the LP8788 PMIC.</help>
			</entry>
			<entry name="LEDS_LP8860">
				<label>LED support for the TI LP8860 4 channel LED driver</label>
				<help>If you say yes here you get support for the TI LP8860 4 channel
LED driver.
This option enables support for the display cluster LEDs
on the LP8860 4 channel LED driver using the I2C communication
bus.</help>
			</entry>
			<entry name="LEDS_CLEVO_MAIL">
				<label>Mail LED on Clevo notebook</label>
				<help>This driver makes the mail LED accessible from userspace
programs through the leds subsystem. This LED have three
known mode: off, blink at 0.5Hz and blink at 1Hz.

The driver supports two kinds of interface: using ledtrig-timer
or through /sys/class/leds/clevo::mail/brightness. As this LED
cannot change it's brightness it blinks instead. The brightness
value 0 means off, 1..127 means blink at 0.5Hz and 128..255 means
blink at 1Hz.

This module can drive the mail LED for the following notebooks:

Clevo D400P
Clevo D410J
Clevo D410V
Clevo D400V/D470V (not tested, but might work)
Clevo M540N
Clevo M5x0N (not tested, but might work)
Positivo Mobile (Clevo M5x0V)

If your model is not listed here you can try the &quot;nodetect&quot;
module parameter.

To compile this driver as a module, choose M here: the
module will be called leds-clevo-mail.</help>
			</entry>
			<entry name="LEDS_PCA955X">
				<label>LED Support for PCA955x I2C chips</label>
				<help>This option enables support for LEDs connected to PCA955x
LED driver chips accessed via the I2C bus.  Supported
devices include PCA9550, PCA9551, PCA9552, and PCA9553.</help>
			</entry>
			<entry name="LEDS_PCA963X">
				<label>LED support for PCA963x I2C chip</label>
				<help>This option enables support for LEDs connected to the PCA963x
LED driver chip accessed via the I2C bus. Supported
devices include PCA9633 and PCA9634</help>
			</entry>
			<entry name="LEDS_WM831X_STATUS">
				<label>LED support for status LEDs on WM831x PMICs</label>
				<help>This option enables support for the status LEDs of the WM831x
series of PMICs.</help>
			</entry>
			<entry name="LEDS_WM8350">
				<label>LED Support for WM8350 AudioPlus PMIC</label>
				<help>This option enables support for LEDs driven by the Wolfson
Microelectronics WM8350 AudioPlus PMIC.</help>
			</entry>
			<entry name="LEDS_DA903X">
				<label>LED Support for DA9030/DA9034 PMIC</label>
				<help>This option enables support for on-chip LED drivers found
on Dialog Semiconductor DA9030/DA9034 PMICs.</help>
			</entry>
			<entry name="LEDS_DA9052">
				<label>Dialog DA9052/DA9053 LEDS</label>
				<help>This option enables support for on-chip LED drivers found
on Dialog Semiconductor DA9052-BC and DA9053-AA/Bx PMICs.</help>
			</entry>
			<entry name="LEDS_DAC124S085">
				<label>LED Support for DAC124S085 SPI DAC</label>
				<help>This option enables support for DAC124S085 SPI DAC from NatSemi,
which can be used to control up to four LEDs.</help>
			</entry>
			<entry name="LEDS_PWM">
				<label>PWM driven LED Support</label>
				<help>This option enables support for pwm driven LEDs</help>
			</entry>
			<entry name="LEDS_REGULATOR">
				<label>REGULATOR driven LED support</label>
				<help>This option enables support for regulator driven LEDs.</help>
			</entry>
			<entry name="LEDS_BD2802">
				<label>LED driver for BD2802 RGB LED</label>
				<help>This option enables support for BD2802GU RGB LED driver chips
accessed via the I2C bus.</help>
			</entry>
			<entry name="LEDS_INTEL_SS4200">
				<label>LED driver for Intel NAS SS4200 series</label>
				<help>This option enables support for the Intel SS4200 series of
Network Attached Storage servers. You may control the hard
drive or power LEDs on the front panel. Using this driver
can stop the front LED from blinking after startup.</help>
			</entry>
			<entry name="LEDS_LT3593">
				<label>LED driver for LT3593 controllers</label>
				<help>This option enables support for LEDs driven by a Linear Technology
LT3593 controller. This controller uses a special one-wire pulse
coding protocol to set the brightness.</help>
			</entry>
			<entry name="LEDS_ADP5520">
				<label>LED Support for ADP5520/ADP5501 PMIC</label>
				<help>This option enables support for on-chip LED drivers found
on Analog Devices ADP5520/ADP5501 PMICs.

To compile this driver as a module, choose M here: the module will
be called leds-adp5520.</help>
			</entry>
			<entry name="LEDS_DELL_NETBOOKS">
				<label>External LED on Dell Business Netbooks</label>
				<help>This adds support for the Latitude 2100 and similar
notebooks that have an external LED.</help>
			</entry>
			<entry name="LEDS_MC13783">
				<label>LED Support for MC13XXX PMIC</label>
				<help>This option enable support for on-chip LED drivers found
on Freescale Semiconductor MC13783/MC13892/MC34708 PMIC.</help>
			</entry>
			<entry name="LEDS_NS2">
				<label>LED support for Network Space v2 GPIO LEDs</label>
				<help>This option enables support for the dual-GPIO LEDs found on the
following LaCie/Seagate boards:

Network Space v2 (and parents: Max, Mini)
Internet Space v2
d2 Network v2
n090401 (Seagate NAS 4-Bay)</help>
			</entry>
			<entry name="LEDS_NETXBIG">
				<label>LED support for Big Network series LEDs</label>
				<help>This option enable support for LEDs found on the LaCie 2Big
and 5Big Network v2 boards. The LEDs are wired to a CPLD and are
controlled through a GPIO extension bus.</help>
			</entry>
			<entry name="LEDS_ASIC3">
				<label>LED support for the HTC ASIC3</label>
				<help>This option enables support for the LEDs on the HTC ASIC3. The HTC
ASIC3 LED GPIOs are inputs, not outputs, thus the leds-gpio driver
cannot be used. This driver supports hardware blinking with an on+off
period from 62ms to 125s. Say Y to enable LEDs on the HP iPAQ hx4700.</help>
			</entry>
			<entry name="LEDS_TCA6507">
				<label>LED Support for TCA6507 I2C chip</label>
				<help>This option enables support for LEDs connected to TC6507
LED driver chips accessed via the I2C bus.
Driver support brightness control and hardware-assisted blinking.</help>
			</entry>
			<entry name="LEDS_TLC591XX">
				<label>LED driver for TLC59108 and TLC59116 controllers</label>
				<help>This option enables support for Texas Instruments TLC59108
and TLC59116 LED controllers.</help>
			</entry>
			<entry name="LEDS_MAX77693">
				<label>LED support for MAX77693 Flash</label>
				<help>This option enables support for the flash part of the MAX77693
multifunction device. It has build in control for two leds in flash
and torch mode.</help>
			</entry>
			<entry name="LEDS_MAX8997">
				<label>LED support for MAX8997 PMIC</label>
				<help>This option enables support for on-chip LED drivers on
MAXIM MAX8997 PMIC.</help>
			</entry>
			<entry name="LEDS_LM355x">
				<label>LED support for LM355x Chips, LM3554 and LM3556</label>
				<help>This option enables support for LEDs connected to LM355x.
LM355x includes Torch, Flash and Indicator functions.</help>
			</entry>
			<entry name="LEDS_OT200">
				<label>LED support for the Bachmann OT200</label>
				<help>This option enables support for the LEDs on the Bachmann OT200.
Say Y to enable LEDs on the Bachmann OT200.</help>
			</entry>
			<entry name="LEDS_MENF21BMC">
				<label>LED support for the MEN 14F021P00 BMC</label>
				<help>Say Y here to include support for the MEN 14F021P00 BMC LEDs.

This driver can also be built as a module. If so the module
will be called leds-menf21bmc.</help>
			</entry>
			<entry name="LEDS_KTD2692">
				<label>LED support for KTD2692 flash LED controller</label>
				<help>This option enables support for KTD2692 LED flash connected
through ExpressWire interface.

Say Y to enable this driver.</help>
			</entry>
			<entry name="LEDS_SEAD3">
				<label>LED support for the MIPS SEAD 3 board</label>
				<help>Say Y here to include support for the FLED and PLED LEDs on SEAD3 eval
boards.

This driver can also be built as a module. If so the module
will be called leds-sead3.</help>
			</entry>
			<entry name="LEDS_IS31FL32XX">
				<label>LED support for ISSI IS31FL32XX I2C LED controller family</label>
				<help>Say Y here to include support for ISSI IS31FL32XX and Si-En SN32xx
LED controllers. They are I2C devices with multiple constant-current
channels, each with independent 256-level PWM control.</help>
			</entry>
			<entry name="LEDS_BLINKM">
				<label>LED support for the BlinkM I2C RGB LED</label>
				<help>This option enables support for the BlinkM RGB LED connected
through I2C. Say Y to enable support for the BlinkM LED.</help>
			</entry>
			<entry name="LEDS_POWERNV">
				<label>LED support for PowerNV Platform</label>
				<help>This option enables support for the system LEDs present on
PowerNV platforms. Say 'y' to enable this support in kernel.
To compile this driver as a module, choose 'm' here: the module
will be called leds-powernv.</help>
			</entry>
			<entry name="LEDS_SYSCON">
				<label>LED support for LEDs on system controllers</label>
				<help>This option enabled support for the LEDs on syscon type
devices. This will only work with device tree enabled
devices.</help>
			</entry>
			<entry name="LEDS_VERSATILE">
				<label>LED support for the ARM Versatile and RealView</label>
				<help>This option enabled support for the LEDs on the ARM Versatile
and RealView boards. Say Y to enabled these.</help>
			</entry>
			<entry name="LEDS_TRIGGERS">
				<label>LED Trigger support</label>
				<help>This option enables trigger support for the leds class.
These triggers allow kernel events to drive the LEDs and can
be configured via sysfs. If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_TIMER">
				<label>LED Timer Trigger</label>
				<help>This allows LEDs to be controlled by a programmable timer
via sysfs. Some LED hardware can be programmed to start
blinking the LED without any further software interaction.
For more details read Documentation/leds/leds-class.txt.

If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_ONESHOT">
				<label>LED One-shot Trigger</label>
				<help>This allows LEDs to blink in one-shot pulses with parameters
controlled via sysfs.  It's useful to notify the user on
sporadic events, when there are no clear begin and end trap points,
or on dense events, where this blinks the LED at constant rate if
rearmed continuously.

It also shows how to use the led_blink_set_oneshot() function.

If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_DISK">
				<label>LED Disk Trigger</label>
				<help>This allows LEDs to be controlled by disk activity.
If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_MTD">
				<label>LED MTD (NAND/NOR) Trigger</label>
				<help>This allows LEDs to be controlled by MTD activity.
If unsure, say N.</help>
			</entry>
			<entry name="LEDS_TRIGGER_HEARTBEAT">
				<label>LED Heartbeat Trigger</label>
				<help>This allows LEDs to be controlled by a CPU load average.
The flash frequency is a hyperbolic function of the 1-minute
load average.
If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_BACKLIGHT">
				<label>LED backlight Trigger</label>
				<help>This allows LEDs to be controlled as a backlight device: they
turn off and on when the display is blanked and unblanked.

If unsure, say N.</help>
			</entry>
			<entry name="LEDS_TRIGGER_CPU">
				<label>LED CPU Trigger</label>
				<help>This allows LEDs to be controlled by active CPUs. This shows
the active CPUs across an array of LEDs so you can see which
CPUs are active on the system at any given moment.

If unsure, say N.</help>
			</entry>
			<entry name="LEDS_TRIGGER_GPIO">
				<label>LED GPIO Trigger</label>
				<help>This allows LEDs to be controlled by gpio events. It's good
when using gpios as switches and triggering the needed LEDs
from there. One use case is n810's keypad LEDs that could
be triggered by this trigger when user slides up to show
keypad.

If unsure, say N.</help>
			</entry>
			<entry name="LEDS_TRIGGER_DEFAULT_ON">
				<label>LED Default ON Trigger</label>
				<help>This allows LEDs to be initialised in the ON state.
If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_TRANSIENT">
				<label>LED Transient Trigger</label>
				<help>This allows one time activation of a transient state on
GPIO/PWM based hardware.
If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_CAMERA">
				<label>LED Camera Flash/Torch Trigger</label>
				<help>This allows LEDs to be controlled as a camera flash/torch device.
This enables direct flash/torch on/off by the driver, kernel space.
If unsure, say Y.</help>
			</entry>
			<entry name="LEDS_TRIGGER_PANIC">
				<label>LED Panic Trigger</label>
				<help>This allows LEDs to be configured to blink on a kernel panic.
Enabling this option will allow to mark certain LEDs as panic indicators,
allowing to blink them on a kernel panic, even if they are set to
a different trigger.
If unsure, say Y.</help>
			</entry>
			<entry name="ACCESSIBILITY">
				<label>Accessibility support</label>
				<help>Accessibility handles all special kinds of hardware devices or
software adapters which help people with disabilities (e.g.
blindness) to use computers.

That includes braille devices, speech synthesis, keyboard
remapping, etc.

Say Y here to get to see options for accessibility.
This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.

If unsure, say N.</help>
			</entry>
			<entry name="A11Y_BRAILLE_CONSOLE">
				<label>Console on braille device</label>
				<help>Enables console output on a braille device connected to a 8250
serial port. For now only the VisioBraille device is supported.

To actually enable it, you need to pass option
console=brl,ttyS0
to the kernel. Options are the same as for serial console.

If unsure, say N.</help>
			</entry>
			<entry name="INFINIBAND">
				<label>InfiniBand support</label>
				<help>Core support for InfiniBand (IB).  Make sure to also select
any protocols you wish to use as well as drivers for your
InfiniBand hardware.</help>
			</entry>
			<entry name="INFINIBAND_USER_MAD">
				<label>InfiniBand userspace MAD support</label>
				<help>Userspace InfiniBand Management Datagram (MAD) support.  This
is the kernel side of the userspace MAD support, which allows
userspace processes to send and receive MADs. You will also
need libibumad from &lt;http://www.openfabrics.org/downloads/management/&gt;.</help>
			</entry>
			<entry name="INFINIBAND_USER_ACCESS">
				<label>InfiniBand userspace access (verbs and CM)</label>
				<help>Userspace InfiniBand access support.  This enables the
kernel side of userspace verbs and the userspace
communication manager (CM).  This allows userspace processes
to set up connections and directly access InfiniBand
hardware for fast-path operations.  You will also need
libibverbs, libibcm and a hardware driver library from
&lt;http://www.openfabrics.org/git/&gt;.</help>
			</entry>
			<entry name="INFINIBAND_USER_MEM"/>
			<entry name="INFINIBAND_ON_DEMAND_PAGING">
				<label>InfiniBand on-demand paging support</label>
				<help>On demand paging support for the InfiniBand subsystem.
Together with driver support this allows registration of
memory regions without pinning their pages, fetching the
pages on demand instead.</help>
			</entry>
			<entry name="INFINIBAND_ADDR_TRANS"/>
			<entry name="INFINIBAND_ADDR_TRANS_CONFIGFS">
				<help>ConfigFS support for RDMA communication manager (CM).
This allows the user to config the default GID type that the CM
uses for each device, when initiaing new connections.</help>
			</entry>
			<entry name="INFINIBAND_MTHCA">
				<label>Mellanox HCA support</label>
				<help>This is a low-level driver for Mellanox InfiniHost host
channel adapters (HCAs), including the MT23108 PCI-X HCA
(&quot;Tavor&quot;) and the MT25208 PCI Express HCA (&quot;Arbel&quot;).</help>
			</entry>
			<entry name="INFINIBAND_MTHCA_DEBUG">
				<label>Verbose debugging output&quot; if EXPERT</label>
				<help>This option causes debugging code to be compiled into the
mthca driver.  The output can be turned on via the
debug_level module parameter (which can also be set after
the driver is loaded through sysfs).
</help>
			</entry>
			<entry name="INFINIBAND_QIB">
				<label>Intel PCIe HCA support</label>
				<help>This is a low-level driver for Intel PCIe QLE InfiniBand host
channel adapters.  This driver does not support the Intel
HyperTransport card (model QHT7140).</help>
			</entry>
			<entry name="INFINIBAND_QIB_DCA">
				<label>QIB DCA support</label>
				<help>Setting this enables DCA support on some Intel chip sets
with the iba7322 HCA.
</help>
			</entry>
			<entry name="INFINIBAND_CXGB3">
				<label>Chelsio RDMA Driver</label>
				<help>This is an iWARP/RDMA driver for the Chelsio T3 1GbE and
10GbE adapters.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module, choose M here: the module
will be called iw_cxgb3.</help>
			</entry>
			<entry name="INFINIBAND_CXGB3_DEBUG">
				<label>Verbose debugging output</label>
				<help>This option causes the Chelsio RDMA driver to produce copious
amounts of debug messages.  Select this if you are developing
the driver or trying to diagnose a problem.
</help>
			</entry>
			<entry name="INFINIBAND_CXGB4">
				<label>Chelsio T4/T5 RDMA Driver</label>
				<help>This is an iWARP/RDMA driver for the Chelsio T4 and T5
1GbE, 10GbE adapters and T5 40GbE adapter.

For general information about Chelsio and our products, visit
our website at &lt;http://www.chelsio.com&gt;.

For customer support, please visit our customer support page at
&lt;http://www.chelsio.com/support.html&gt;.

Please send feedback to &lt;linux-bugs@chelsio.com&gt;.

To compile this driver as a module, choose M here: the module
will be called iw_cxgb4.
</help>
			</entry>
			<entry name="INFINIBAND_I40IW">
				<label>Intel(R) Ethernet X722 iWARP Driver</label>
				<help>Intel(R) Ethernet X722 iWARP Driver
INET &amp;&amp; I40IW &amp;&amp; INFINIBAND &amp;&amp; I40E
</help>
			</entry>
			<entry name="MLX4_INFINIBAND">
				<label>Mellanox ConnectX HCA support</label>
				<help>This driver provides low-level InfiniBand support for
Mellanox ConnectX PCI Express host channel adapters (HCAs).
This is required to use InfiniBand protocols such as
IP-over-IB or SRP with these devices.
</help>
			</entry>
			<entry name="MLX5_INFINIBAND">
				<label>Mellanox Connect-IB HCA support</label>
				<help>This driver provides low-level InfiniBand support for
Mellanox Connect-IB PCI Express host channel adapters (HCAs).
This is required to use InfiniBand protocols such as
IP-over-IB or SRP with these devices.
</help>
			</entry>
			<entry name="INFINIBAND_NES">
				<label>NetEffect RNIC Driver</label>
				<help>This is the RDMA Network Interface Card (RNIC) driver for
NetEffect Ethernet Cluster Server Adapters.</help>
			</entry>
			<entry name="INFINIBAND_NES_DEBUG">
				<label>Verbose debugging output</label>
				<help>This option enables debug messages from the NetEffect RNIC
driver.  Select this if you are diagnosing a problem.
</help>
			</entry>
			<entry name="INFINIBAND_OCRDMA">
				<label>Emulex One Connect HCA support</label>
				<help>This driver provides low-level InfiniBand over Ethernet
support for Emulex One Connect host channel adapters (HCAs).
</help>
			</entry>
			<entry name="INFINIBAND_USNIC">
				<label>Verbs support for Cisco VIC</label>
				<help>This is a low-level driver for Cisco's Virtual Interface
Cards (VICs), including the VIC 1240 and 1280 cards.
</help>
			</entry>
			<entry name="INFINIBAND_IPOIB">
				<label>IP-over-InfiniBand</label>
				<help>Support for the IP-over-InfiniBand protocol (IPoIB). This
transports IP packets over InfiniBand so you can use your IB
device as a fancy NIC.

See Documentation/infiniband/ipoib.txt for more information</help>
			</entry>
			<entry name="INFINIBAND_IPOIB_CM">
				<label>IP-over-InfiniBand Connected Mode support</label>
				<help>This option enables support for IPoIB connected mode.  After
enabling this option, you need to switch to connected mode
through /sys/class/net/ibXXX/mode to actually create
connections, and then increase the interface MTU with
e.g. ifconfig ib0 mtu 65520.

WARNING: Enabling connected mode will trigger some packet
drops for multicast and UD mode traffic from this interface,
unless you limit mtu for these destinations to 2044.</help>
			</entry>
			<entry name="INFINIBAND_IPOIB_DEBUG">
				<label>IP-over-InfiniBand debugging&quot; if EXPERT</label>
				<help>This option causes debugging code to be compiled into the
IPoIB driver.  The output can be turned on via the
debug_level and mcast_debug_level module parameters (which
can also be set after the driver is loaded through sysfs).

This option also creates a directory tree under ipoib/ in
debugfs, which contains files that expose debugging
information about IB multicast groups used by the IPoIB
driver.</help>
			</entry>
			<entry name="INFINIBAND_IPOIB_DEBUG_DATA">
				<label>IP-over-InfiniBand data path debugging</label>
				<help>This option compiles debugging code into the data path
of the IPoIB driver.  The output can be turned on via the
data_debug_level module parameter; however, even with output
turned off, this debugging code will have some performance
impact.
</help>
			</entry>
			<entry name="INFINIBAND_SRP">
				<label>InfiniBand SCSI RDMA Protocol</label>
				<help>Support for the SCSI RDMA Protocol over InfiniBand.  This
allows you to access storage devices that speak SRP over
InfiniBand.

The SRP protocol is defined by the INCITS T10 technical
committee.  See &lt;http://www.t10.org/&gt;.

</help>
			</entry>
			<entry name="INFINIBAND_SRPT">
				<label>InfiniBand SCSI RDMA Protocol target support</label>
				<help>
Support for the SCSI RDMA Protocol (SRP) Target driver. The
SRP protocol is a protocol that allows an initiator to access
a block storage device on another host (target) over a network
that supports the RDMA protocol. Currently the RDMA protocol is
supported by InfiniBand and by iWarp network hardware. More
information about the SRP protocol can be found on the website
of the INCITS T10 technical committee (http://www.t10.org/).
</help>
			</entry>
			<entry name="INFINIBAND_ISER">
				<label>iSCSI Extensions for RDMA (iSER)</label>
				<help>Support for the iSCSI Extensions for RDMA (iSER) Protocol
over InfiniBand. This allows you to access storage devices
that speak iSCSI over iSER over InfiniBand.

The iSER protocol is defined by IETF.
See &lt;http://www.ietf.org/rfc/rfc5046.txt&gt;
and &lt;http://members.infinibandta.org/kwspub/spec/Annex_iSER.PDF&gt;
</help>
			</entry>
			<entry name="INFINIBAND_ISERT">
				<label>iSCSI Extensions for RDMA (iSER) target support</label>
				<help>Support for iSCSI Extensions for RDMA (iSER) Target on Infiniband fabrics.
</help>
			</entry>
			<entry name="INFINIBAND_RDMAVT">
				<label>RDMA verbs transport library</label>
				<help>This is a common software verbs provider for RDMA networks.
</help>
			</entry>
			<entry name="RDMA_RXE">
				<label>Software RDMA over Ethernet (RoCE) driver</label>
				<help>This driver implements the InfiniBand RDMA transport over
the Linux network stack. It enables a system with a
standard Ethernet adapter to interoperate with a RoCE
adapter or with another system running the RXE driver.
Documentation on InfiniBand and RoCE can be downloaded at
www.infinibandta.org and www.openfabrics.org. (See also
siw which is a similar software driver for iWARP.)

The driver is split into two layers, one interfaces with the
Linux RDMA stack and implements a kernel or user space
verbs API. The user space verbs API requires a support
library named librxe which is loaded by the generic user
space verbs API, libibverbs. The other layer interfaces
with the Linux network stack at layer 3.

To configure and work with soft-RoCE driver please use the
following wiki page under &quot;configure Soft-RoCE (RXE)&quot; section:

https://github.com/SoftRoCE/rxe-dev/wiki/rxe-dev:-Home
</help>
			</entry>
			<entry name="INFINIBAND_HFI1">
				<label>Intel OPA Gen1 support</label>
				<help>This is a low-level driver for Intel OPA Gen1 adapter.</help>
			</entry>
			<entry name="HFI1_DEBUG_SDMA_ORDER">
				<label>HFI1 SDMA Order debug</label>
				<help>This is a debug flag to test for out of order
sdma completions for unit testing</help>
			</entry>
			<entry name="HFI1_VERBS_31BIT_PSN">
				<label>HFI1 enable 31 bit PSN</label>
				<help>Setting this enables 31 BIT PSN
For verbs RC/UC</help>
			</entry>
			<entry name="SDMA_VERBOSITY">
				<label>Config SDMA Verbosity</label>
				<help>This is a configuration flag to enable verbose
SDMA debug
</help>
			</entry>
			<entry name="EDAC_ATOMIC_SCRUB"/>
			<entry name="EDAC_SUPPORT"/>
			<entry name="EDAC">
				<label>EDAC (Error Detection And Correction) reporting</label>
				<help>EDAC is designed to report errors in the core system.
These are low-level errors that are reported in the CPU or
supporting chipset or other subsystems:
memory errors, cache errors, PCI errors, thermal throttling, etc..
If unsure, select 'Y'.

If this code is reporting problems on your system, please
see the EDAC project web pages for more information at:

&lt;http://bluesmoke.sourceforge.net/&gt;

and:

&lt;http://buttersideup.com/edacwiki&gt;

There is also a mailing list for the EDAC project, which can
be found via the sourceforge page.</help>
			</entry>
			<entry name="EDAC_LEGACY_SYSFS">
				<label>EDAC legacy sysfs</label>
				<help>Enable the compatibility sysfs nodes.
Use 'Y' if your edac utilities aren't ported to work with the newer
structures.</help>
			</entry>
			<entry name="EDAC_DEBUG">
				<label>Debugging</label>
				<help>This turns on debugging information for the entire EDAC subsystem.
You do so by inserting edac_module with &quot;edac_debug_level=x.&quot; Valid
levels are 0-4 (from low to high) and by default it is set to 2.
Usually you should select 'N' here.</help>
			</entry>
			<entry name="EDAC_DECODE_MCE">
				<label>Decode MCEs in human-readable form (only on AMD for now)</label>
				<help>Enable this option if you want to decode Machine Check Exceptions
occurring on your machine in human-readable form.

You should definitely say Y here in case you want to decode MCEs
which occur really early upon boot, before the module infrastructure
has been initialized.</help>
			</entry>
			<entry name="EDAC_MM_EDAC">
				<label>Main Memory EDAC (Error Detection And Correction) reporting</label>
				<help>Some systems are able to detect and correct errors in main
memory.  EDAC can report statistics on memory error
detection and correction (EDAC - or commonly referred to ECC
errors).  EDAC will also try to decode where these errors
occurred so that a particular failing memory module can be
replaced.  If unsure, select 'Y'.</help>
			</entry>
			<entry name="EDAC_GHES">
				<label>Output ACPI APEI/GHES BIOS detected errors via EDAC</label>
				<help>Not all machines support hardware-driven error report. Some of those
provide a BIOS-driven error report mechanism via ACPI, using the
APEI/GHES driver. By enabling this option, the error reports provided
by GHES are sent to userspace via the EDAC API.

When this option is enabled, it will disable the hardware-driven
mechanisms, if a GHES BIOS is detected, entering into the
&quot;Firmware First&quot; mode.

It should be noticed that keeping both GHES and a hardware-driven
error mechanism won't work well, as BIOS will race with OS, while
reading the error registers. So, if you want to not use &quot;Firmware
first&quot; GHES error mechanism, you should disable GHES either at
compilation time or by passing &quot;ghes.disable=1&quot; Kernel parameter
at boot time.

In doubt, say 'Y'.</help>
			</entry>
			<entry name="EDAC_AMD64">
				<label>AMD64 (Opteron, Athlon64)</label>
				<help>Support for error detection and correction of DRAM ECC errors on
the AMD64 families (&gt;= K8) of memory controllers.</help>
			</entry>
			<entry name="EDAC_AMD64_ERROR_INJECTION">
				<label>Sysfs HW Error injection facilities</label>
				<help>Recent Opterons (Family 10h and later) provide for Memory Error
Injection into the ECC detection circuits. The amd64_edac module
allows the operator/user to inject Uncorrectable and Correctable
errors into DRAM.

When enabled, in each of the respective memory controller directories
(/sys/devices/system/edac/mc/mcX), there are 3 input files:

- inject_section (0..3, 16-byte section of 64-byte cacheline),
- inject_word (0..8, 16-bit word of 16-byte section),
- inject_ecc_vector (hex ecc vector: select bits of inject word)

In addition, there are two control files, inject_read and inject_write,
which trigger the DRAM ECC Read and Write respectively.</help>
			</entry>
			<entry name="EDAC_AMD76X">
				<label>AMD 76x (760, 762, 768)</label>
				<help>Support for error detection and correction on the AMD 76x
series of chipsets used with the Athlon processor.</help>
			</entry>
			<entry name="EDAC_E7XXX">
				<label>Intel e7xxx (e7205, e7500, e7501, e7505)</label>
				<help>Support for error detection and correction on the Intel
E7205, E7500, E7501 and E7505 server chipsets.</help>
			</entry>
			<entry name="EDAC_E752X">
				<label>Intel e752x (e7520, e7525, e7320) and 3100</label>
				<help>Support for error detection and correction on the Intel
E7520, E7525, E7320 server chipsets.</help>
			</entry>
			<entry name="EDAC_I82443BXGX">
				<label>Intel 82443BX/GX (440BX/GX)</label>
				<help>Support for error detection and correction on the Intel
82443BX/GX memory controllers (440BX/GX chipsets).</help>
			</entry>
			<entry name="EDAC_I82875P">
				<label>Intel 82875p (D82875P, E7210)</label>
				<help>Support for error detection and correction on the Intel
DP82785P and E7210 server chipsets.</help>
			</entry>
			<entry name="EDAC_I82975X">
				<label>Intel 82975x (D82975x)</label>
				<help>Support for error detection and correction on the Intel
DP82975x server chipsets.</help>
			</entry>
			<entry name="EDAC_I3000">
				<label>Intel 3000/3010</label>
				<help>Support for error detection and correction on the Intel
3000 and 3010 server chipsets.</help>
			</entry>
			<entry name="EDAC_I3200">
				<label>Intel 3200</label>
				<help>Support for error detection and correction on the Intel
3200 and 3210 server chipsets.</help>
			</entry>
			<entry name="EDAC_IE31200">
				<label>Intel e312xx</label>
				<help>Support for error detection and correction on the Intel
E3-1200 based DRAM controllers.</help>
			</entry>
			<entry name="EDAC_X38">
				<label>Intel X38</label>
				<help>Support for error detection and correction on the Intel
X38 server chipsets.</help>
			</entry>
			<entry name="EDAC_I5400">
				<label>Intel 5400 (Seaburg) chipsets</label>
				<help>Support for error detection and correction the Intel
i5400 MCH chipset (Seaburg).</help>
			</entry>
			<entry name="EDAC_I7CORE">
				<label>Intel i7 Core (Nehalem) processors</label>
				<help>Support for error detection and correction the Intel
i7 Core (Nehalem) Integrated Memory Controller that exists on
newer processors like i7 Core, i7 Core Extreme, Xeon 35xx
and Xeon 55xx processors.</help>
			</entry>
			<entry name="EDAC_I82860">
				<label>Intel 82860</label>
				<help>Support for error detection and correction on the Intel
82860 chipset.</help>
			</entry>
			<entry name="EDAC_R82600">
				<label>Radisys 82600 embedded chipset</label>
				<help>Support for error detection and correction on the Radisys
82600 embedded chipset.</help>
			</entry>
			<entry name="EDAC_I5000">
				<label>Intel Greencreek/Blackford chipset</label>
				<help>Support for error detection and correction the Intel
Greekcreek/Blackford chipsets.</help>
			</entry>
			<entry name="EDAC_I5100">
				<label>Intel San Clemente MCH</label>
				<help>Support for error detection and correction the Intel
San Clemente MCH.</help>
			</entry>
			<entry name="EDAC_I7300">
				<label>Intel Clarksboro MCH</label>
				<help>Support for error detection and correction the Intel
Clarksboro MCH (Intel 7300 chipset).</help>
			</entry>
			<entry name="EDAC_SBRIDGE">
				<label>Intel Sandy-Bridge/Ivy-Bridge/Haswell Integrated MC</label>
				<help>Support for error detection and correction the Intel
Sandy Bridge, Ivy Bridge and Haswell Integrated Memory Controllers.</help>
			</entry>
			<entry name="EDAC_SKX">
				<label>Intel Skylake server Integrated MC</label>
				<help>Support for error detection and correction the Intel
Skylake server Integrated Memory Controllers.</help>
			</entry>
			<entry name="EDAC_MPC85XX">
				<label>Freescale MPC83xx / MPC85xx</label>
				<help>Support for error detection and correction on the Freescale
MPC8349, MPC8560, MPC8540, MPC8548, T4240</help>
			</entry>
			<entry name="EDAC_MV64X60">
				<label>Marvell MV64x60</label>
				<help>Support for error detection and correction on the Marvell
MV64360 and MV64460 chipsets.</help>
			</entry>
			<entry name="EDAC_PASEMI">
				<label>PA Semi PWRficient</label>
				<help>Support for error detection and correction on PA Semi
PWRficient.</help>
			</entry>
			<entry name="EDAC_CELL">
				<label>Cell Broadband Engine memory controller</label>
				<help>Support for error detection and correction on the
Cell Broadband Engine internal memory controller
on platform without a hypervisor</help>
			</entry>
			<entry name="EDAC_PPC4XX">
				<label>PPC4xx IBM DDR2 Memory Controller</label>
				<help>This enables support for EDAC on the ECC memory used
with the IBM DDR2 memory controller found in various
PowerPC 4xx embedded processors such as the 405EX[r],
440SP, 440SPe, 460EX, 460GT and 460SX.</help>
			</entry>
			<entry name="EDAC_AMD8131">
				<label>AMD8131 HyperTransport PCI-X Tunnel</label>
				<help>Support for error detection and correction on the
AMD8131 HyperTransport PCI-X Tunnel chip.
Note, add more Kconfig dependency if it's adopted
on some machine other than Maple.</help>
			</entry>
			<entry name="EDAC_AMD8111">
				<label>AMD8111 HyperTransport I/O Hub</label>
				<help>Support for error detection and correction on the
AMD8111 HyperTransport I/O Hub chip.
Note, add more Kconfig dependency if it's adopted
on some machine other than Maple.</help>
			</entry>
			<entry name="EDAC_CPC925">
				<label>IBM CPC925 Memory Controller (PPC970FX)</label>
				<help>Support for error detection and correction on the
IBM CPC925 Bridge and Memory Controller, which is
a companion chip to the PowerPC 970 family of
processors.</help>
			</entry>
			<entry name="EDAC_TILE">
				<label>Tilera Memory Controller</label>
				<help>Support for error detection and correction on the
Tilera memory controller.</help>
			</entry>
			<entry name="EDAC_HIGHBANK_MC">
				<label>Highbank Memory Controller</label>
				<help>Support for error detection and correction on the
Calxeda Highbank memory controller.</help>
			</entry>
			<entry name="EDAC_HIGHBANK_L2">
				<label>Highbank L2 Cache</label>
				<help>Support for error detection and correction on the
Calxeda Highbank memory controller.</help>
			</entry>
			<entry name="EDAC_OCTEON_PC">
				<label>Cavium Octeon Primary Caches</label>
				<help>Support for error detection and correction on the primary caches of
the cnMIPS cores of Cavium Octeon family SOCs.</help>
			</entry>
			<entry name="EDAC_OCTEON_L2C">
				<label>Cavium Octeon Secondary Caches (L2C)</label>
				<help>Support for error detection and correction on the
Cavium Octeon family of SOCs.</help>
			</entry>
			<entry name="EDAC_OCTEON_LMC">
				<label>Cavium Octeon DRAM Memory Controller (LMC)</label>
				<help>Support for error detection and correction on the
Cavium Octeon family of SOCs.</help>
			</entry>
			<entry name="EDAC_OCTEON_PCI">
				<label>Cavium Octeon PCI Controller</label>
				<help>Support for error detection and correction on the
Cavium Octeon family of SOCs.</help>
			</entry>
			<entry name="EDAC_ALTERA">
				<label>Altera SOCFPGA ECC</label>
				<help>Support for error detection and correction on the
Altera SOCs. This must be selected for SDRAM ECC.
Note that the preloader must initialize the SDRAM
before loading the kernel.</help>
			</entry>
			<entry name="EDAC_ALTERA_L2C">
				<label>Altera L2 Cache ECC</label>
				<help>Support for error detection and correction on the
Altera L2 cache Memory for Altera SoCs. This option
requires L2 cache.</help>
			</entry>
			<entry name="EDAC_ALTERA_OCRAM">
				<label>Altera On-Chip RAM ECC</label>
				<help>Support for error detection and correction on the
Altera On-Chip RAM Memory for Altera SoCs.</help>
			</entry>
			<entry name="EDAC_ALTERA_ETHERNET">
				<label>Altera Ethernet FIFO ECC</label>
				<help>Support for error detection and correction on the
Altera Ethernet FIFO Memory for Altera SoCs.</help>
			</entry>
			<entry name="EDAC_SYNOPSYS">
				<label>Synopsys DDR Memory Controller</label>
				<help>Support for error detection and correction on the Synopsys DDR
memory controller.</help>
			</entry>
			<entry name="EDAC_XGENE">
				<label>APM X-Gene SoC</label>
				<help>Support for error detection and correction on the
APM X-Gene family of SOCs.</help>
			</entry>
			<entry name="RTC_LIB"/>
			<entry name="RTC_MC146818_LIB"/>
			<entry name="RTC_CLASS">
				<label>Real Time Clock</label>
				<help>Generic RTC class support. If you say yes here, you will
be allowed to plug one or more RTCs to your system. You will
probably want to enable one or more of the interfaces below.</help>
			</entry>
			<entry name="RTC_HCTOSYS">
				<label>Set system time from RTC on startup and resume</label>
				<help>If you say yes here, the system time (wall clock) will be set using
the value read from a specified RTC device. This is useful to avoid
unnecessary fsck runs at boot time, and to network better.</help>
			</entry>
			<entry name="RTC_HCTOSYS_DEVICE">
				<label>RTC used to set the system time</label>
				<help>The RTC device that will be used to (re)initialize the system
clock, usually rtc0. Initialization is done when the system
starts up, and when it resumes from a low power state. This
device should record time in UTC, since the kernel won't do
timezone correction.

The driver for this RTC device must be loaded before late_initcall
functions run, so it must usually be statically linked.

This clock should be battery-backed, so that it reads the correct
time when the system boots from a power-off state. Otherwise, your
system will need an external clock source (like an NTP server).

If the clock you specify here is not battery backed, it may still
be useful to reinitialize system time when resuming from system
sleep states. Do not specify an RTC here unless it stays powered
during all this system's supported sleep states.</help>
			</entry>
			<entry name="RTC_SYSTOHC">
				<label>Set the RTC time based on NTP synchronization</label>
				<help>If you say yes here, the system time (wall clock) will be stored
in the RTC specified by RTC_HCTOSYS_DEVICE approximately every 11
minutes if userspace reports synchronized NTP status.</help>
			</entry>
			<entry name="RTC_SYSTOHC_DEVICE">
				<label>RTC used to synchronize NTP adjustment</label>
				<help>The RTC device used for NTP synchronization. The main difference
between RTC_HCTOSYS_DEVICE and RTC_SYSTOHC_DEVICE is that this
one can sleep when setting time, because it runs in the workqueue
context.</help>
			</entry>
			<entry name="RTC_DEBUG">
				<label>RTC debug support</label>
				<help>Say yes here to enable debugging support in the RTC framework
and individual RTC drivers.</help>
			</entry>
			<entry name="RTC_INTF_SYSFS">
				<label>/sys/class/rtc/rtcN (sysfs)</label>
				<help>Say yes here if you want to use your RTCs using sysfs interfaces,
/sys/class/rtc/rtc0 through /sys/.../rtcN.

If unsure, say Y.</help>
			</entry>
			<entry name="RTC_INTF_PROC">
				<label>/proc/driver/rtc (procfs for rtcN)</label>
				<help>Say yes here if you want to use your system clock RTC through
the proc interface, /proc/driver/rtc.
Other RTCs will not be available through that API.
If there is no RTC for the system clock, then the first RTC(rtc0)
is used by default.

If unsure, say Y.</help>
			</entry>
			<entry name="RTC_INTF_DEV">
				<label>/dev/rtcN (character devices)</label>
				<help>Say yes here if you want to use your RTCs using the /dev
interfaces, which &quot;udev&quot; sets up as /dev/rtc0 through
/dev/rtcN.

You may want to set up a symbolic link so one of these
can be accessed as /dev/rtc, which is a name
expected by &quot;hwclock&quot; and some other programs. Recent
versions of &quot;udev&quot; are known to set up the symlink for you.

If unsure, say Y.</help>
			</entry>
			<entry name="RTC_INTF_DEV_UIE_EMUL">
				<label>RTC UIE emulation on dev interface</label>
				<help>Provides an emulation for RTC_UIE if the underlying rtc chip
driver does not expose RTC_UIE ioctls. Those requests generate
once-per-second update interrupts, used for synchronization.

The emulation code will read the time from the hardware
clock several times per second, please enable this option
only if you know that you really need it.</help>
			</entry>
			<entry name="RTC_DRV_TEST">
				<label>Test driver/device</label>
				<help>If you say yes here you get support for the
RTC test driver. It's a software RTC which can be
used to test the RTC subsystem APIs. It gets
the time from the system clock.
You want this driver only if you are doing development
on the RTC subsystem. Please read the source code
for further details.

This driver can also be built as a module. If so, the module
will be called rtc-test.</help>
			</entry>
			<entry name="RTC_DRV_88PM860X">
				<label>Marvell 88PM860x</label>
				<help>If you say yes here you get support for RTC function in Marvell
88PM860x chips.

This driver can also be built as a module. If so, the module
will be called rtc-88pm860x.</help>
			</entry>
			<entry name="RTC_DRV_88PM80X">
				<label>Marvell 88PM80x</label>
				<help>If you say yes here you get support for RTC function in Marvell
88PM80x chips.

This driver can also be built as a module. If so, the module
will be called rtc-88pm80x.</help>
			</entry>
			<entry name="RTC_DRV_ABB5ZES3">
				<label>Abracon AB-RTCMC-32.768kHz-B5ZE-S3</label>
				<help>If you say yes here you get support for the Abracon
AB-RTCMC-32.768kHz-B5ZE-S3 I2C RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-ab-b5ze-s3.</help>
			</entry>
			<entry name="RTC_DRV_ABX80X">
				<label>Abracon ABx80x</label>
				<help>If you say yes here you get support for Abracon AB080X and AB180X
families of ultra-low-power  battery- and capacitor-backed real-time
clock chips.

This driver can also be built as a module. If so, the module
will be called rtc-abx80x.</help>
			</entry>
			<entry name="RTC_DRV_AS3722">
				<label>ams AS3722 RTC driver</label>
				<help>If you say yes here you get support for the RTC of ams AS3722 PMIC
chips.

This driver can also be built as a module. If so, the module
will be called rtc-as3722.</help>
			</entry>
			<entry name="RTC_DRV_DS1307">
				<label>Dallas/Maxim DS1307/37/38/39/40, ST M41T00, EPSON RX-8025</label>
				<help>If you say yes here you get support for various compatible RTC
chips (often with battery backup) connected with I2C. This driver
should handle DS1307, DS1337, DS1338, DS1339, DS1340, ST M41T00,
EPSON RX-8025 and probably other chips. In some cases the RTC
must already have been initialized (by manufacturing or a
bootloader).

The first seven registers on these chips hold an RTC, and other
registers may add features such as NVRAM, a trickle charger for
the RTC/NVRAM backup power, and alarms. NVRAM is visible in
sysfs, but other chip features may not be available.

This driver can also be built as a module. If so, the module
will be called rtc-ds1307.</help>
			</entry>
			<entry name="RTC_DRV_DS1307_HWMON">
				<label>HWMON support for rtc-ds1307</label>
				<help>Say Y here if you want to expose temperature sensor data on
rtc-ds1307 (only DS3231)</help>
			</entry>
			<entry name="RTC_DRV_DS1374">
				<label>Dallas/Maxim DS1374</label>
				<help>If you say yes here you get support for Dallas Semiconductor
DS1374 real-time clock chips. If an interrupt is associated
with the device, the alarm functionality is supported.

This driver can also be built as a module. If so, the module
will be called rtc-ds1374.</help>
			</entry>
			<entry name="RTC_DRV_DS1374_WDT">
				<label>Dallas/Maxim DS1374 watchdog timer</label>
				<help>If you say Y here you will get support for the
watchdog timer in the Dallas Semiconductor DS1374
real-time clock chips.</help>
			</entry>
			<entry name="RTC_DRV_DS1672">
				<label>Dallas/Maxim DS1672</label>
				<help>If you say yes here you get support for the
Dallas/Maxim DS1672 timekeeping chip.

This driver can also be built as a module. If so, the module
will be called rtc-ds1672.</help>
			</entry>
			<entry name="RTC_DRV_HYM8563">
				<label>Haoyu Microelectronics HYM8563</label>
				<help>Say Y to enable support for the HYM8563 I2C RTC chip. Apart
from the usual rtc functions it provides a clock output of
up to 32kHz.

This driver can also be built as a module. If so, the module
will be called rtc-hym8563.</help>
			</entry>
			<entry name="RTC_DRV_LP8788">
				<label>TI LP8788 RTC driver</label>
				<help>Say Y to enable support for the LP8788 RTC/ALARM driver.</help>
			</entry>
			<entry name="RTC_DRV_MAX6900">
				<label>Maxim MAX6900</label>
				<help>If you say yes here you will get support for the
Maxim MAX6900 I2C RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-max6900.</help>
			</entry>
			<entry name="RTC_DRV_MAX8907">
				<label>Maxim MAX8907</label>
				<help>If you say yes here you will get support for the
RTC of Maxim MAX8907 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-max8907.</help>
			</entry>
			<entry name="RTC_DRV_MAX8925">
				<label>Maxim MAX8925</label>
				<help>If you say yes here you will get support for the
RTC of Maxim MAX8925 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-max8925.</help>
			</entry>
			<entry name="RTC_DRV_MAX8998">
				<label>Maxim MAX8998</label>
				<help>If you say yes here you will get support for the
RTC of Maxim MAX8998 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-max8998.</help>
			</entry>
			<entry name="RTC_DRV_MAX8997">
				<label>Maxim MAX8997</label>
				<help>If you say yes here you will get support for the
RTC of Maxim MAX8997 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-max8997.</help>
			</entry>
			<entry name="RTC_DRV_MAX77686">
				<label>Maxim MAX77686</label>
				<help>If you say yes here you will get support for the
RTC of Maxim MAX77686/MAX77620/MAX77802 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-max77686.</help>
			</entry>
			<entry name="RTC_DRV_RK808">
				<label>Rockchip RK808 RTC</label>
				<help>If you say yes here you will get support for the
RTC of RK808 PMIC.

This driver can also be built as a module. If so, the module
will be called rk808-rtc.</help>
			</entry>
			<entry name="RTC_DRV_RS5C372">
				<label>Ricoh R2025S/D, RS5C372A/B, RV5C386, RV5C387A</label>
				<help>If you say yes here you get support for the
Ricoh R2025S/D, RS5C372A, RS5C372B, RV5C386, and RV5C387A RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-rs5c372.</help>
			</entry>
			<entry name="RTC_DRV_ISL1208">
				<label>Intersil ISL1208</label>
				<help>If you say yes here you get support for the
Intersil ISL1208 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-isl1208.</help>
			</entry>
			<entry name="RTC_DRV_ISL12022">
				<label>Intersil ISL12022</label>
				<help>If you say yes here you get support for the
Intersil ISL12022 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-isl12022.</help>
			</entry>
			<entry name="RTC_DRV_ISL12057">
				<label>Intersil ISL12057</label>
				<help>If you say yes here you get support for the Intersil ISL12057
I2C RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-isl12057.</help>
			</entry>
			<entry name="RTC_DRV_X1205">
				<label>Xicor/Intersil X1205</label>
				<help>If you say yes here you get support for the
Xicor/Intersil X1205 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-x1205.</help>
			</entry>
			<entry name="RTC_DRV_PCF8523">
				<label>NXP PCF8523</label>
				<help>If you say yes here you get support for the NXP PCF8523 RTC
chips.

This driver can also be built as a module. If so, the module
will be called rtc-pcf8523.</help>
			</entry>
			<entry name="RTC_DRV_PCF85063">
				<label>NXP PCF85063</label>
				<help>If you say yes here you get support for the PCF85063 RTC chip

This driver can also be built as a module. If so, the module
will be called rtc-pcf85063.</help>
			</entry>
			<entry name="RTC_DRV_PCF8563">
				<label>Philips PCF8563/Epson RTC8564</label>
				<help>If you say yes here you get support for the
Philips PCF8563 RTC chip. The Epson RTC8564
should work as well.

This driver can also be built as a module. If so, the module
will be called rtc-pcf8563.</help>
			</entry>
			<entry name="RTC_DRV_PCF8583">
				<label>Philips PCF8583</label>
				<help>If you say yes here you get support for the Philips PCF8583
RTC chip found on Acorn RiscPCs. This driver supports the
platform specific method of retrieving the current year from
the RTC's SRAM. It will work on other platforms with the same
chip, but the year will probably have to be tweaked.

This driver can also be built as a module. If so, the module
will be called rtc-pcf8583.</help>
			</entry>
			<entry name="RTC_DRV_M41T80">
				<label>ST M41T62/65/M41T80/81/82/83/84/85/87 and compatible</label>
				<help>If you say Y here you will get support for the ST M41T60
and M41T80 RTC chips series. Currently, the following chips are
supported: M41T62, M41T65, M41T80, M41T81, M41T82, M41T83, M41ST84,
M41ST85, M41ST87, and MicroCrystal RV4162.

This driver can also be built as a module. If so, the module
will be called rtc-m41t80.</help>
			</entry>
			<entry name="RTC_DRV_M41T80_WDT">
				<label>ST M41T65/M41T80 series RTC watchdog timer</label>
				<help>If you say Y here you will get support for the
watchdog timer in the ST M41T60 and M41T80 RTC chips series.</help>
			</entry>
			<entry name="RTC_DRV_BQ32K">
				<label>TI BQ32000</label>
				<help>If you say Y here you will get support for the TI
BQ32000 I2C RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-bq32k.</help>
			</entry>
			<entry name="RTC_DRV_DM355EVM">
				<label>TI DaVinci DM355 EVM RTC</label>
				<help>Supports the RTC firmware in the MSP430 on the DM355 EVM.</help>
			</entry>
			<entry name="RTC_DRV_TWL92330">
				<label>TI TWL92330/Menelaus</label>
				<help>If you say yes here you get support for the RTC on the
TWL92330 &quot;Menelaus&quot; power management chip, used with OMAP2
platforms. The support is integrated with the rest of
the Menelaus driver; it's not separate module.</help>
			</entry>
			<entry name="RTC_DRV_TWL4030">
				<label>TI TWL4030/TWL5030/TWL6030/TPS659x0</label>
				<help>If you say yes here you get support for the RTC on the
TWL4030/TWL5030/TWL6030 family chips, used mostly with OMAP3 platforms.

This driver can also be built as a module. If so, the module
will be called rtc-twl.</help>
			</entry>
			<entry name="RTC_DRV_PALMAS">
				<label>TI Palmas RTC driver</label>
				<help>If you say yes here you get support for the RTC of TI PALMA series PMIC
chips.

This driver can also be built as a module. If so, the module
will be called rtc-palma.</help>
			</entry>
			<entry name="RTC_DRV_TPS6586X">
				<label>TI TPS6586X RTC driver</label>
				<help>TI Power Management IC TPS6586X supports RTC functionality
along with alarm. This driver supports the RTC driver for
the TPS6586X RTC module.</help>
			</entry>
			<entry name="RTC_DRV_TPS65910">
				<label>TI TPS65910 RTC driver</label>
				<help>If you say yes here you get support for the RTC on the
TPS65910 chips.

This driver can also be built as a module. If so, the module
will be called rtc-tps65910.</help>
			</entry>
			<entry name="RTC_DRV_TPS80031">
				<label>TI TPS80031/TPS80032 RTC driver</label>
				<help>TI Power Management IC TPS80031 supports RTC functionality
along with alarm. This driver supports the RTC driver for
the TPS80031 RTC module.</help>
			</entry>
			<entry name="RTC_DRV_RC5T583">
				<label>RICOH 5T583 RTC driver</label>
				<help>If you say yes here you get support for the RTC on the
RICOH 5T583 chips.

This driver can also be built as a module. If so, the module
will be called rtc-rc5t583.</help>
			</entry>
			<entry name="RTC_DRV_S35390A">
				<label>Seiko Instruments S-35390A</label>
				<help>If you say yes here you will get support for the Seiko
Instruments S-35390A.

This driver can also be built as a module. If so the module
will be called rtc-s35390a.</help>
			</entry>
			<entry name="RTC_DRV_FM3130">
				<label>Ramtron FM3130</label>
				<help>If you say Y here you will get support for the
Ramtron FM3130 RTC chips.
Ramtron FM3130 is a chip with two separate devices inside,
RTC clock and FRAM. This driver provides only RTC functionality.

This driver can also be built as a module. If so the module
will be called rtc-fm3130.</help>
			</entry>
			<entry name="RTC_DRV_RX8010">
				<label>Epson RX8010SJ</label>
				<help>If you say yes here you get support for the Epson RX8010SJ RTC
chip.

This driver can also be built as a module. If so, the module
will be called rtc-rx8010.</help>
			</entry>
			<entry name="RTC_DRV_RX8581">
				<label>Epson RX-8581</label>
				<help>If you say yes here you will get support for the Epson RX-8581.

This driver can also be built as a module. If so the module
will be called rtc-rx8581.</help>
			</entry>
			<entry name="RTC_DRV_RX8025">
				<label>Epson RX-8025SA/NB</label>
				<help>If you say yes here you get support for the Epson
RX-8025SA/NB RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-rx8025.</help>
			</entry>
			<entry name="RTC_DRV_EM3027">
				<label>EM Microelectronic EM3027</label>
				<help>If you say yes here you get support for the EM
Microelectronic EM3027 RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-em3027.</help>
			</entry>
			<entry name="RTC_DRV_RV8803">
				<label>Micro Crystal RV8803, Epson RX8900</label>
				<help>If you say yes here you get support for the Micro Crystal RV8803 and
Epson RX8900 RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-rv8803.</help>
			</entry>
			<entry name="RTC_DRV_S5M">
				<label>Samsung S2M/S5M series</label>
				<help>If you say yes here you will get support for the
RTC of Samsung S2MPS14 and S5M PMIC series.

This driver can also be built as a module. If so, the module
will be called rtc-s5m.</help>
			</entry>
			<entry name="RTC_DRV_M41T93">
				<label>ST M41T93</label>
				<help>If you say yes here you will get support for the
ST M41T93 SPI RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-m41t93.</help>
			</entry>
			<entry name="RTC_DRV_M41T94">
				<label>ST M41T94</label>
				<help>If you say yes here you will get support for the
ST M41T94 SPI RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-m41t94.</help>
			</entry>
			<entry name="RTC_DRV_DS1302">
				<label>Dallas/Maxim DS1302</label>
				<help>If you say yes here you get support for the Dallas DS1302 RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-ds1302.</help>
			</entry>
			<entry name="RTC_DRV_DS1305">
				<label>Dallas/Maxim DS1305/DS1306</label>
				<help>Select this driver to get support for the Dallas/Maxim DS1305
and DS1306 real time clock chips. These support a trickle
charger, alarms, and NVRAM in addition to the clock.

This driver can also be built as a module. If so, the module
will be called rtc-ds1305.</help>
			</entry>
			<entry name="RTC_DRV_DS1343">
				<label>Dallas/Maxim DS1343/DS1344</label>
				<help>If you say yes here you get support for the
Dallas/Maxim DS1343 and DS1344 real time clock chips.
Support for trickle charger, alarm is provided.

This driver can also be built as a module. If so, the module
will be called rtc-ds1343.</help>
			</entry>
			<entry name="RTC_DRV_DS1347">
				<label>Dallas/Maxim DS1347</label>
				<help>If you say yes here you get support for the
Dallas/Maxim DS1347 chips.

This driver only supports the RTC feature, and not other chip
features such as alarms.

This driver can also be built as a module. If so, the module
will be called rtc-ds1347.</help>
			</entry>
			<entry name="RTC_DRV_DS1390">
				<label>Dallas/Maxim DS1390/93/94</label>
				<help>If you say yes here you get support for the
Dallas/Maxim DS1390/93/94 chips.

This driver supports the RTC feature and trickle charging but not
other chip features such as alarms.

This driver can also be built as a module. If so, the module
will be called rtc-ds1390.</help>
			</entry>
			<entry name="RTC_DRV_MAX6916">
				<label>Maxim MAX6916</label>
				<help>If you say yes here you will get support for the
Maxim MAX6916 SPI RTC chip.

This driver only supports the RTC feature, and not other chip
features such as alarms.

This driver can also be built as a module. If so, the module
will be called rtc-max6916.</help>
			</entry>
			<entry name="RTC_DRV_R9701">
				<label>Epson RTC-9701JE</label>
				<help>If you say yes here you will get support for the
Epson RTC-9701JE SPI RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-r9701.</help>
			</entry>
			<entry name="RTC_DRV_RX4581">
				<label>Epson RX-4581</label>
				<help>If you say yes here you will get support for the Epson RX-4581.

This driver can also be built as a module. If so the module
will be called rtc-rx4581.</help>
			</entry>
			<entry name="RTC_DRV_RX6110">
				<label>Epson RX-6110</label>
				<help>If you say yes here you will get support for the Epson RX-6610.

This driver can also be built as a module. If so the module
will be called rtc-rx6110.</help>
			</entry>
			<entry name="RTC_DRV_RS5C348">
				<label>Ricoh RS5C348A/B</label>
				<help>If you say yes here you get support for the
Ricoh RS5C348A and RS5C348B RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-rs5c348.</help>
			</entry>
			<entry name="RTC_DRV_MAX6902">
				<label>Maxim MAX6902</label>
				<help>If you say yes here you will get support for the
Maxim MAX6902 SPI RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-max6902.</help>
			</entry>
			<entry name="RTC_DRV_PCF2123">
				<label>NXP PCF2123</label>
				<help>If you say yes here you get support for the NXP PCF2123
RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-pcf2123.</help>
			</entry>
			<entry name="RTC_DRV_MCP795">
				<label>Microchip MCP795</label>
				<help>If you say yes here you will get support for the Microchip MCP795.

This driver can also be built as a module. If so the module
will be called rtc-mcp795.</help>
			</entry>
			<entry name="RTC_I2C_AND_SPI"/>
			<entry name="RTC_DRV_DS3232">
				<label>Dallas/Maxim DS3232/DS3234</label>
				<help>If you say yes here you get support for Dallas Semiconductor
DS3232 and DS3234 real-time clock chips. If an interrupt is associated
with the device, the alarm functionality is supported.

This driver can also be built as a module.  If so, the module
will be called rtc-ds3232.</help>
			</entry>
			<entry name="RTC_DRV_PCF2127">
				<label>NXP PCF2127</label>
				<help>If you say yes here you get support for the NXP PCF2127/29 RTC
chips.

This driver can also be built as a module. If so, the module
will be called rtc-pcf2127.</help>
			</entry>
			<entry name="RTC_DRV_RV3029C2">
				<label>Micro Crystal RV3029/3049</label>
				<help>If you say yes here you get support for the Micro Crystal
RV3029 and RV3049 RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-rv3029c2.</help>
			</entry>
			<entry name="RTC_DRV_RV3029_HWMON">
				<label>HWMON support for RV3029/3049</label>
				<help>Say Y here if you want to expose temperature sensor data on
rtc-rv3029.</help>
			</entry>
			<entry name="RTC_DRV_CMOS">
				<label>PC-style 'CMOS'</label>
				<help>Say &quot;yes&quot; here to get direct support for the real time clock
found in every PC or ACPI-based system, and some other boards.
Specifically the original MC146818, compatibles like those in
PC south bridges, the DS12887 or M48T86, some multifunction
or LPC bus chips, and so on.

Your system will need to define the platform device used by
this driver, otherwise it won't be accessible. This means
you can safely enable this driver if you don't know whether
or not your board has this kind of hardware.

This driver can also be built as a module. If so, the module
will be called rtc-cmos.</help>
			</entry>
			<entry name="RTC_DRV_ALPHA">
				<label>Alpha PC-style CMOS</label>
				<help>Direct support for the real-time clock found on every Alpha
system, specifically MC146818 compatibles.  If in doubt, say Y.</help>
			</entry>
			<entry name="RTC_DRV_VRTC">
				<label>Virtual RTC for Intel MID platforms</label>
				<help>Say &quot;yes&quot; here to get direct support for the real time clock
found on Moorestown platforms. The VRTC is a emulated RTC that
derives its clock source from a real RTC in the PMIC. The MC146818
style programming interface is mostly conserved, but any
updates are done via IPC calls to the system controller FW.</help>
			</entry>
			<entry name="RTC_DRV_DS1216">
				<label>Dallas DS1216</label>
				<help>If you say yes here you get support for the Dallas DS1216 RTC chips.</help>
			</entry>
			<entry name="RTC_DRV_DS1286">
				<label>Dallas DS1286</label>
				<help>If you say yes here you get support for the Dallas DS1286 RTC chips.</help>
			</entry>
			<entry name="RTC_DRV_DS1511">
				<label>Dallas DS1511</label>
				<help>If you say yes here you get support for the
Dallas DS1511 timekeeping/watchdog chip.

This driver can also be built as a module. If so, the module
will be called rtc-ds1511.</help>
			</entry>
			<entry name="RTC_DRV_DS1553">
				<label>Maxim/Dallas DS1553</label>
				<help>If you say yes here you get support for the
Maxim/Dallas DS1553 timekeeping chip.

This driver can also be built as a module. If so, the module
will be called rtc-ds1553.</help>
			</entry>
			<entry name="RTC_DRV_DS1685_FAMILY">
				<label>Dallas/Maxim DS1685 Family</label>
				<help>If you say yes here you get support for the Dallas/Maxim DS1685
family of real time chips.  This family includes the DS1685/DS1687,
DS1689/DS1693, DS17285/DS17287, DS17485/DS17487, and
DS17885/DS17887 chips.

This driver can also be built as a module. If so, the module
will be called rtc-ds1685.</help>
			</entry>
			<entry name="RTC_DRV_DS1685">
				<label>DS1685/DS1687</label>
				<help>This enables support for the Dallas/Maxim DS1685/DS1687 real time
clock chip.

This chip is commonly found in SGI O2 (IP32) and SGI Octane (IP30)
systems, as well as EPPC-405-UC modules by electronic system design
GmbH.</help>
			</entry>
			<entry name="RTC_DRV_DS1689">
				<label>DS1689/DS1693</label>
				<help>This enables support for the Dallas/Maxim DS1689/DS1693 real time
clock chip.

This is an older RTC chip, supplanted by the DS1685/DS1687 above,
which supports a few minor features such as Vcc, Vbat, and Power
Cycle counters, plus a customer-specific, 8-byte ROM/Serial number.

It also works for the even older DS1688/DS1691 RTC chips, which are
virtually the same and carry the same model number.  Both chips
have 114 bytes of user NVRAM.</help>
			</entry>
			<entry name="RTC_DRV_DS17285">
				<label>DS17285/DS17287</label>
				<help>This enables support for the Dallas/Maxim DS17285/DS17287 real time
clock chip.

This chip features 2kb of extended NV-SRAM.  It may possibly be
found in some SGI O2 systems (rare).</help>
			</entry>
			<entry name="RTC_DRV_DS17485">
				<label>DS17485/DS17487</label>
				<help>This enables support for the Dallas/Maxim DS17485/DS17487 real time
clock chip.

This chip features 4kb of extended NV-SRAM.</help>
			</entry>
			<entry name="RTC_DRV_DS17885">
				<label>DS17885/DS17887</label>
				<help>This enables support for the Dallas/Maxim DS17885/DS17887 real time
clock chip.

This chip features 8kb of extended NV-SRAM.</help>
			</entry>
			<entry name="RTC_DS1685_PROC_REGS">
				<label>Display register values in /proc</label>
				<help>Enable this to display a readout of all of the RTC registers in
/proc/drivers/rtc.  Keep in mind that this can potentially lead
to lost interrupts, as reading Control Register C will clear
all pending IRQ flags.

Unless you are debugging this driver, choose N.</help>
			</entry>
			<entry name="RTC_DS1685_SYSFS_REGS">
				<label>SysFS access to RTC register bits</label>
				<help>Enable this to provide access to the RTC control register bits
in /sys.  Some of the bits are read-write, others are read-only.

Keep in mind that reading Control C's bits automatically clears
all pending IRQ flags - this can cause lost interrupts.

If you know that you need access to these bits, choose Y, Else N.</help>
			</entry>
			<entry name="RTC_DRV_DS1742">
				<label>Maxim/Dallas DS1742/1743</label>
				<help>If you say yes here you get support for the
Maxim/Dallas DS1742/1743 timekeeping chip.

This driver can also be built as a module. If so, the module
will be called rtc-ds1742.</help>
			</entry>
			<entry name="RTC_DRV_DS2404">
				<label>Maxim/Dallas DS2404</label>
				<help>If you say yes here you get support for the
Dallas DS2404 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-ds2404.</help>
			</entry>
			<entry name="RTC_DRV_DA9052">
				<label>Dialog DA9052/DA9053 RTC</label>
				<help>Say y here to support the RTC driver for Dialog Semiconductor
DA9052-BC and DA9053-AA/Bx PMICs.</help>
			</entry>
			<entry name="RTC_DRV_DA9055">
				<label>Dialog Semiconductor DA9055 RTC</label>
				<help>If you say yes here you will get support for the
RTC of the Dialog DA9055 PMIC.

This driver can also be built as a module. If so, the module
will be called rtc-da9055</help>
			</entry>
			<entry name="RTC_DRV_DA9063">
				<label>Dialog Semiconductor DA9063/DA9062 RTC</label>
				<help>If you say yes here you will get support for the RTC subsystem
for the Dialog Semiconductor PMIC chips DA9063 and DA9062.

This driver can also be built as a module. If so, the module
will be called &quot;rtc-da9063&quot;.</help>
			</entry>
			<entry name="RTC_DRV_EFI">
				<label>EFI RTC</label>
				<help>If you say yes here you will get support for the EFI
Real Time Clock.

This driver can also be built as a module. If so, the module
will be called rtc-efi.</help>
			</entry>
			<entry name="RTC_DRV_STK17TA8">
				<label>Simtek STK17TA8</label>
				<help>If you say yes here you get support for the
Simtek STK17TA8 timekeeping chip.

This driver can also be built as a module. If so, the module
will be called rtc-stk17ta8.</help>
			</entry>
			<entry name="RTC_DRV_M48T86">
				<label>ST M48T86/Dallas DS12887</label>
				<help>If you say Y here you will get support for the
ST M48T86 and Dallas DS12887 RTC chips.

This driver can also be built as a module. If so, the module
will be called rtc-m48t86.</help>
			</entry>
			<entry name="RTC_DRV_M48T35">
				<label>ST M48T35</label>
				<help>If you say Y here you will get support for the
ST M48T35 RTC chip.

This driver can also be built as a module, if so, the module
will be called &quot;rtc-m48t35&quot;.</help>
			</entry>
			<entry name="RTC_DRV_M48T59">
				<label>ST M48T59/M48T08/M48T02</label>
				<help>If you say Y here you will get support for the
ST M48T59 RTC chip and compatible ST M48T08 and M48T02.

These chips are usually found in Sun SPARC and UltraSPARC
workstations.

This driver can also be built as a module, if so, the module
will be called &quot;rtc-m48t59&quot;.</help>
			</entry>
			<entry name="RTC_DRV_MSM6242">
				<label>Oki MSM6242</label>
				<help>If you say yes here you get support for the Oki MSM6242
timekeeping chip. It is used in some Amiga models (e.g. A2000).

This driver can also be built as a module. If so, the module
will be called rtc-msm6242.</help>
			</entry>
			<entry name="RTC_DRV_BQ4802">
				<label>TI BQ4802</label>
				<help>If you say Y here you will get support for the TI
BQ4802 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-bq4802.</help>
			</entry>
			<entry name="RTC_DRV_RP5C01">
				<label>Ricoh RP5C01</label>
				<help>If you say yes here you get support for the Ricoh RP5C01
timekeeping chip. It is used in some Amiga models (e.g. A3000
and A4000).

This driver can also be built as a module. If so, the module
will be called rtc-rp5c01.</help>
			</entry>
			<entry name="RTC_DRV_V3020">
				<label>EM Microelectronic V3020</label>
				<help>If you say yes here you will get support for the
EM Microelectronic v3020 RTC chip.

This driver can also be built as a module. If so, the module
will be called rtc-v3020.</help>
			</entry>
			<entry name="RTC_DRV_WM831X">
				<label>Wolfson Microelectronics WM831x RTC</label>
				<help>If you say yes here you will get support for the RTC subsystem
of the Wolfson Microelectronics WM831X series PMICs.

This driver can also be built as a module. If so, the module
will be called &quot;rtc-wm831x&quot;.</help>
			</entry>
			<entry name="RTC_DRV_WM8350">
				<label>Wolfson Microelectronics WM8350 RTC</label>
				<help>If you say yes here you will get support for the RTC subsystem
of the Wolfson Microelectronics WM8350.

This driver can also be built as a module. If so, the module
will be called &quot;rtc-wm8350&quot;.</help>
			</entry>
			<entry name="RTC_DRV_SPEAR">
				<label>SPEAR ST RTC</label>
				<help>If you say Y here you will get support for the RTC found on
spear</help>
			</entry>
			<entry name="RTC_DRV_PCF50633">
				<label>NXP PCF50633 RTC</label>
				<help>If you say yes here you get support for the RTC subsystem of the
NXP PCF50633 used in embedded systems.</help>
			</entry>
			<entry name="RTC_DRV_AB3100">
				<label>ST-Ericsson AB3100 RTC</label>
				<help>Select this to enable the ST-Ericsson AB3100 Mixed Signal IC RTC
support. This chip contains a battery- and capacitor-backed RTC.</help>
			</entry>
			<entry name="RTC_DRV_AB8500">
				<label>ST-Ericsson AB8500 RTC</label>
				<help>Select this to enable the ST-Ericsson AB8500 power management IC RTC
support. This chip contains a battery- and capacitor-backed RTC.</help>
			</entry>
			<entry name="RTC_DRV_NUC900">
				<label>NUC910/NUC920 RTC driver</label>
				<help>If you say yes here you get support for the RTC subsystem of the
NUC910/NUC920 used in embedded systems.</help>
			</entry>
			<entry name="RTC_DRV_OPAL">
				<label>IBM OPAL RTC driver</label>
				<help>If you say yes here you get support for the PowerNV platform RTC
driver based on OPAL interfaces.

This driver can also be built as a module. If so, the module
will be called rtc-opal.</help>
			</entry>
			<entry name="RTC_DRV_ZYNQMP">
				<label>Xilinx Zynq Ultrascale+ MPSoC RTC</label>
				<help>If you say yes here you get support for the RTC controller found on
Xilinx Zynq Ultrascale+ MPSoC.</help>
			</entry>
			<entry name="RTC_DRV_ASM9260">
				<label>Alphascale asm9260 RTC</label>
				<help>If you say yes here you get support for the RTC on the
Alphascale asm9260 SoC.

This driver can also be built as a module. If so, the module
will be called rtc-asm9260.</help>
			</entry>
			<entry name="RTC_DRV_DAVINCI">
				<label>TI DaVinci RTC</label>
				<help>If you say yes here you get support for the RTC on the
DaVinci platforms (DM365).

This driver can also be built as a module. If so, the module
will be called rtc-davinci.</help>
			</entry>
			<entry name="RTC_DRV_DIGICOLOR">
				<label>Conexant Digicolor RTC</label>
				<help>If you say yes here you get support for the RTC on Conexant
Digicolor platforms. This currently includes the CX92755 SoC.

This driver can also be built as a module. If so, the module
will be called rtc-digicolor.</help>
			</entry>
			<entry name="RTC_DRV_IMXDI">
				<label>Freescale IMX DryIce Real Time Clock</label>
				<help>Support for Freescale IMX DryIce RTC

This driver can also be built as a module, if so, the module
will be called &quot;rtc-imxdi&quot;.</help>
			</entry>
			<entry name="RTC_DRV_OMAP">
				<label>TI OMAP Real Time Clock</label>
				<help>Say &quot;yes&quot; here to support the on chip real time clock
present on TI OMAP1, AM33xx, DA8xx/OMAP-L13x, AM43xx and DRA7xx.

This driver can also be built as a module, if so, module
will be called rtc-omap.</help>
			</entry>
			<entry name="HAVE_S3C_RTC">
				<help>This will include RTC support for Samsung SoCs. If
you want to include RTC support for any machine, kindly
select this in the respective mach-XXXX/Kconfig file.</help>
			</entry>
			<entry name="RTC_DRV_S3C">
				<label>Samsung S3C series SoC RTC</label>
				<help>RTC (Realtime Clock) driver for the clock inbuilt into the
Samsung S3C24XX series of SoCs. This can provide periodic
interrupt rates from 1Hz to 64Hz for user programs, and
wakeup from Alarm.

The driver currently supports the common features on all the
S3C24XX range, such as the S3C2410, S3C2412, S3C2413, S3C2440
and S3C2442.

This driver can also be build as a module. If so, the module
will be called rtc-s3c.</help>
			</entry>
			<entry name="RTC_DRV_EP93XX">
				<label>Cirrus Logic EP93XX</label>
				<help>If you say yes here you get support for the
RTC embedded in the Cirrus Logic EP93XX processors.

This driver can also be built as a module. If so, the module
will be called rtc-ep93xx.</help>
			</entry>
			<entry name="RTC_DRV_SA1100">
				<label>SA11x0/PXA2xx/PXA910</label>
				<help>If you say Y here you will get access to the real time clock
built into your SA11x0 or PXA2xx CPU.

To compile this driver as a module, choose M here: the
module will be called rtc-sa1100.</help>
			</entry>
			<entry name="RTC_DRV_SH">
				<label>SuperH On-Chip RTC</label>
				<help>Say Y here to enable support for the on-chip RTC found in
most SuperH processors.

To compile this driver as a module, choose M here: the
module will be called rtc-sh.</help>
			</entry>
			<entry name="RTC_DRV_VR41XX">
				<label>NEC VR41XX</label>
				<help>If you say Y here you will get access to the real time clock
built into your NEC VR41XX CPU.

To compile this driver as a module, choose M here: the
module will be called rtc-vr41xx.</help>
			</entry>
			<entry name="RTC_DRV_PL030">
				<label>ARM AMBA PL030 RTC</label>
				<help>If you say Y here you will get access to ARM AMBA
PrimeCell PL030 RTC found on certain ARM SOCs.

To compile this driver as a module, choose M here: the
module will be called rtc-pl030.</help>
			</entry>
			<entry name="RTC_DRV_PL031">
				<label>ARM AMBA PL031 RTC</label>
				<help>If you say Y here you will get access to ARM AMBA
PrimeCell PL031 RTC found on certain ARM SOCs.

To compile this driver as a module, choose M here: the
module will be called rtc-pl031.</help>
			</entry>
			<entry name="RTC_DRV_AT32AP700X">
				<label>AT32AP700X series RTC</label>
				<help>Driver for the internal RTC (Realtime Clock) on Atmel AVR32
AT32AP700x family processors.</help>
			</entry>
			<entry name="RTC_DRV_AT91RM9200">
				<label>AT91RM9200 or some AT91SAM9 RTC</label>
				<help>Driver for the internal RTC (Realtime Clock) module found on
Atmel AT91RM9200's and some  AT91SAM9 chips. On AT91SAM9 chips
this is powered by the backup power supply.</help>
			</entry>
			<entry name="RTC_DRV_AT91SAM9">
				<label>AT91SAM9 RTT as RTC</label>
				<help>Some AT91SAM9 SoCs provide an RTT (Real Time Timer) block which
can be used as an RTC thanks to the backup power supply (e.g. a
small coin cell battery) which keeps this block and the GPBR
(General Purpose Backup Registers) block powered when the device
is shutdown.
Some AT91SAM9 SoCs provide a real RTC block, on those ones you'd
probably want to use the real RTC block instead of the &quot;RTT as an
RTC&quot; driver.</help>
			</entry>
			<entry name="RTC_DRV_AU1XXX">
				<label>Au1xxx Counter0 RTC support</label>
				<help>This is a driver for the Au1xxx on-chip Counter0 (Time-Of-Year
counter) to be used as a RTC.

This driver can also be built as a module. If so, the module
will be called rtc-au1xxx.</help>
			</entry>
			<entry name="RTC_DRV_BFIN">
				<label>Blackfin On-Chip RTC</label>
				<help>If you say yes here you will get support for the
Blackfin On-Chip Real Time Clock.

This driver can also be built as a module. If so, the module
will be called rtc-bfin.</help>
			</entry>
			<entry name="RTC_DRV_RS5C313">
				<label>Ricoh RS5C313</label>
				<help>If you say yes here you get support for the Ricoh RS5C313 RTC chips.</help>
			</entry>
			<entry name="RTC_DRV_GENERIC">
				<label>Generic RTC support</label>
				<help>Say Y or M here to enable RTC support on systems using the generic
RTC abstraction. If you do not know what you are doing, you should
just say Y.</help>
			</entry>
			<entry name="RTC_DRV_PXA">
				<label>PXA27x/PXA3xx</label>
				<help>If you say Y here you will get access to the real time clock
built into your PXA27x or PXA3xx CPU. This RTC is actually 2 RTCs
consisting of an SA1100 compatible RTC and the extended PXA RTC.

This RTC driver uses PXA RTC registers available since pxa27x
series (RDxR, RYxR) instead of legacy RCNR, RTAR.</help>
			</entry>
			<entry name="RTC_DRV_VT8500">
				<label>VIA/WonderMedia 85xx SoC RTC</label>
				<help>If you say Y here you will get access to the real time clock
built into your VIA VT8500 SoC or its relatives.</help>
			</entry>
			<entry name="RTC_DRV_SUN4V">
				<label>SUN4V Hypervisor RTC</label>
				<help>If you say Y here you will get support for the Hypervisor
based RTC on SUN4V systems.</help>
			</entry>
			<entry name="RTC_DRV_SUN6I">
				<label>Allwinner A31 RTC</label>
				<help>If you say Y here you will get support for the RTC found in
some Allwinner SoCs like the A31 or the A64.</help>
			</entry>
			<entry name="RTC_DRV_SUNXI">
				<label>Allwinner sun4i/sun7i RTC</label>
				<help>If you say Y here you will get support for the RTC found on
Allwinner A10/A20.</help>
			</entry>
			<entry name="RTC_DRV_STARFIRE">
				<label>Starfire RTC</label>
				<help>If you say Y here you will get support for the RTC found on
Starfire systems.</help>
			</entry>
			<entry name="RTC_DRV_TX4939">
				<label>TX4939 SoC</label>
				<help>Driver for the internal RTC (Realtime Clock) module found on
Toshiba TX4939 SoC.</help>
			</entry>
			<entry name="RTC_DRV_MV">
				<label>Marvell SoC RTC</label>
				<help>If you say yes here you will get support for the in-chip RTC
that can be found in some of Marvell's SoC devices, such as
the Kirkwood 88F6281 and 88F6192.

This driver can also be built as a module. If so, the module
will be called rtc-mv.</help>
			</entry>
			<entry name="RTC_DRV_ARMADA38X">
				<label>Armada 38x Marvell SoC RTC</label>
				<help>If you say yes here you will get support for the in-chip RTC
that can be found in the Armada 38x Marvell's SoC device

This driver can also be built as a module. If so, the module
will be called armada38x-rtc.</help>
			</entry>
			<entry name="RTC_DRV_GEMINI">
				<label>Gemini SoC RTC</label>
				<help>If you say Y here you will get support for the
RTC found on Gemini SoC's.

This driver can also be built as a module. If so, the module
will be called rtc-gemini.</help>
			</entry>
			<entry name="RTC_DRV_PS3">
				<label>PS3 RTC</label>
				<help>If you say yes here you will get support for the RTC on PS3.

This driver can also be built as a module. If so, the module
will be called rtc-ps3.</help>
			</entry>
			<entry name="RTC_DRV_COH901331">
				<label>ST-Ericsson COH 901 331 RTC</label>
				<help>If you say Y here you will get access to ST-Ericsson
COH 901 331 RTC clock found in some ST-Ericsson Mobile
Platforms.

This driver can also be built as a module. If so, the module
will be called &quot;rtc-coh901331&quot;.</help>
			</entry>
			<entry name="RTC_DRV_STMP">
				<label>Freescale STMP3xxx/i.MX23/i.MX28 RTC</label>
				<help>If you say yes here you will get support for the onboard
STMP3xxx/i.MX23/i.MX28 RTC.

This driver can also be built as a module. If so, the module
will be called rtc-stmp3xxx.</help>
			</entry>
			<entry name="RTC_DRV_PCAP">
				<label>PCAP RTC</label>
				<help>If you say Y here you will get support for the RTC found on
the PCAP2 ASIC used on some Motorola phones.</help>
			</entry>
			<entry name="RTC_DRV_MC13XXX">
				<label>Freescale MC13xxx RTC</label>
				<help>This enables support for the RTCs found on Freescale's PMICs
MC13783 and MC13892.</help>
			</entry>
			<entry name="RTC_DRV_MPC5121">
				<label>Freescale MPC5121 built-in RTC</label>
				<help>If you say yes here you will get support for the
built-in RTC on MPC5121 or on MPC5200.

This driver can also be built as a module. If so, the module
will be called rtc-mpc5121.</help>
			</entry>
			<entry name="RTC_DRV_JZ4740">
				<label>Ingenic JZ4740 SoC</label>
				<help>If you say yes here you get support for the Ingenic JZ4740 SoC RTC
controller.

This driver can also be buillt as a module. If so, the module
will be called rtc-jz4740.</help>
			</entry>
			<entry name="RTC_DRV_LPC24XX">
				<label>NXP RTC for LPC178x/18xx/408x/43xx</label>
				<help>This enables support for the NXP RTC found which can be found on
NXP LPC178x/18xx/408x/43xx devices.

If you have one of the devices above enable this driver to use
the hardware RTC. This driver can also be buillt as a module. If
so, the module will be called rtc-lpc24xx.</help>
			</entry>
			<entry name="RTC_DRV_LPC32XX">
				<label>NXP LPC32XX RTC</label>
				<help>This enables support for the NXP RTC in the LPC32XX

This driver can also be buillt as a module. If so, the module
will be called rtc-lpc32xx.</help>
			</entry>
			<entry name="RTC_DRV_PM8XXX">
				<label>Qualcomm PMIC8XXX RTC</label>
				<help>If you say yes here you get support for the
Qualcomm PMIC8XXX RTC.

To compile this driver as a module, choose M here: the
module will be called rtc-pm8xxx.</help>
			</entry>
			<entry name="RTC_DRV_TEGRA">
				<label>NVIDIA Tegra Internal RTC driver</label>
				<help>If you say yes here you get support for the
Tegra 200 series internal RTC module.

This drive can also be built as a module. If so, the module
will be called rtc-tegra.</help>
			</entry>
			<entry name="RTC_DRV_TILE">
				<label>Tilera hypervisor RTC support</label>
				<help>Enable support for the Linux driver side of the Tilera
hypervisor's real-time clock interface.</help>
			</entry>
			<entry name="RTC_DRV_PUV3">
				<label>PKUnity v3 RTC support</label>
				<help>This enables support for the RTC in the PKUnity-v3 SoCs.

This drive can also be built as a module. If so, the module
will be called rtc-puv3.</help>
			</entry>
			<entry name="RTC_DRV_LOONGSON1">
				<label>loongson1 RTC support</label>
				<help>This is a driver for the loongson1 on-chip Counter0 (Time-Of-Year
counter) to be used as a RTC.

This driver can also be built as a module. If so, the module
will be called rtc-ls1x.</help>
			</entry>
			<entry name="RTC_DRV_MXC">
				<label>Freescale MXC Real Time Clock</label>
				<help>If you say yes here you get support for the Freescale MXC
RTC module.

This driver can also be built as a module, if so, the module
will be called &quot;rtc-mxc&quot;.</help>
			</entry>
			<entry name="RTC_DRV_SNVS">
				<label>Freescale SNVS RTC support</label>
				<help>If you say yes here you get support for the Freescale SNVS
Low Power (LP) RTC module.

This driver can also be built as a module, if so, the module
will be called &quot;rtc-snvs&quot;.</help>
			</entry>
			<entry name="RTC_DRV_SIRFSOC">
				<label>SiRFSOC RTC</label>
				<help>Say &quot;yes&quot; here to support the real time clock on SiRF SOC chips.
This driver can also be built as a module called rtc-sirfsoc.</help>
			</entry>
			<entry name="RTC_DRV_ST_LPC">
				<label>STMicroelectronics LPC RTC</label>
				<help>Say Y here to include STMicroelectronics Low Power Controller
(LPC) based RTC support.

To compile this driver as a module, choose M here: the
module will be called rtc-st-lpc.</help>
			</entry>
			<entry name="RTC_DRV_MOXART">
				<label>MOXA ART RTC</label>
				<help>If you say yes here you get support for the MOXA ART
RTC module.

This driver can also be built as a module. If so, the module
will be called rtc-moxart</help>
			</entry>
			<entry name="RTC_DRV_MT6397">
				<label>Mediatek Real Time Clock driver</label>
				<help>This selects the Mediatek(R) RTC driver. RTC is part of Mediatek
MT6397 PMIC. You should enable MT6397 PMIC MFD before select
Mediatek(R) RTC driver.

If you want to use Mediatek(R) RTC interface, select Y or M here.</help>
			</entry>
			<entry name="RTC_DRV_XGENE">
				<label>APM X-Gene RTC</label>
				<help>If you say yes here you get support for the APM X-Gene SoC real time
clock.

This driver can also be built as a module, if so, the module
will be called &quot;rtc-xgene&quot;.</help>
			</entry>
			<entry name="RTC_DRV_PIC32">
				<label>Microchip PIC32 RTC</label>
				<help>If you say yes here you get support for the PIC32 RTC module.

This driver can also be built as a module. If so, the module
will be called rtc-pic32</help>
			</entry>
			<entry name="RTC_DRV_HID_SENSOR_TIME">
				<label>HID Sensor Time</label>
				<help>Say yes here to build support for the HID Sensors of type Time.
This drivers makes such sensors available as RTCs.

If this driver is compiled as a module, it will be named
rtc-hid-sensor-time.</help>
			</entry>
			<entry name="DMADEVICES">
				<label>DMA Engine support</label>
				<help>DMA engines can do asynchronous data transfers without
involving the host CPU.  Currently, this framework can be
used to offload memory copies in the network stack and
RAID operations in the MD driver.  This menu only presents
DMA Device drivers supported by the configured arch, it may
be empty in some cases.</help>
			</entry>
			<entry name="DMADEVICES_DEBUG">
				<label>DMA Engine debugging</label>
				<help>This is an option for use by developers; most people should
say N here.  This enables DMA engine core and driver debugging.</help>
			</entry>
			<entry name="DMADEVICES_VDEBUG">
				<label>DMA Engine verbose debugging</label>
				<help>This is an option for use by developers; most people should
say N here.  This enables deeper (more verbose) debugging of
the DMA engine core and drivers.</help>
			</entry>
			<entry name="ASYNC_TX_ENABLE_CHANNEL_SWITCH"/>
			<entry name="ARCH_HAS_ASYNC_TX_FIND_CHANNEL"/>
			<entry name="DMA_ENGINE"/>
			<entry name="DMA_VIRTUAL_CHANNELS"/>
			<entry name="DMA_ACPI"/>
			<entry name="DMA_OF"/>
			<entry name="AMBA_PL08X">
				<label>ARM PrimeCell PL080 or PL081 support</label>
				<help>Platform has a PL08x DMAC device
which can provide DMA engine support</help>
			</entry>
			<entry name="AMCC_PPC440SPE_ADMA">
				<label>AMCC PPC440SPe ADMA support</label>
				<help>Enable support for the AMCC PPC440SPe RAID engines.</help>
			</entry>
			<entry name="AT_HDMAC">
				<label>Atmel AHB DMA support</label>
				<help>Support the Atmel AHB DMA controller.</help>
			</entry>
			<entry name="AT_XDMAC">
				<label>Atmel XDMA support</label>
				<help>Support the Atmel XDMA controller.</help>
			</entry>
			<entry name="AXI_DMAC">
				<label>Analog Devices AXI-DMAC DMA support</label>
				<help>Enable support for the Analog Devices AXI-DMAC peripheral. This DMA
controller is often used in Analog Device's reference designs for FPGA
platforms.</help>
			</entry>
			<entry name="COH901318">
				<label>ST-Ericsson COH901318 DMA support</label>
				<help>Enable support for ST-Ericsson COH 901 318 DMA.</help>
			</entry>
			<entry name="DMA_BCM2835">
				<label>BCM2835 DMA engine support</label>
			</entry>
			<entry name="DMA_JZ4740">
				<label>JZ4740 DMA support</label>
			</entry>
			<entry name="DMA_JZ4780">
				<label>JZ4780 DMA support</label>
				<help>This selects support for the DMA controller in Ingenic JZ4780 SoCs.
If you have a board based on such a SoC and wish to use DMA for
devices which can use the DMA controller, say Y or M here.</help>
			</entry>
			<entry name="DMA_OMAP">
				<label>OMAP DMA support</label>
			</entry>
			<entry name="DMA_SA11X0">
				<label>SA-11x0 DMA support</label>
				<help>Support the DMA engine found on Intel StrongARM SA-1100 and
SA-1110 SoCs.  This DMA engine can only be used with on-chip
devices.</help>
			</entry>
			<entry name="DMA_SUN4I">
				<label>Allwinner A10 DMA SoCs support</label>
				<help>Enable support for the DMA controller present in the sun4i,
sun5i and sun7i Allwinner ARM SoCs.</help>
			</entry>
			<entry name="DMA_SUN6I">
				<label>Allwinner A31 SoCs DMA support</label>
				<help>Support for the DMA engine first found in Allwinner A31 SoCs.</help>
			</entry>
			<entry name="EP93XX_DMA">
				<label>Cirrus Logic EP93xx DMA support</label>
				<help>Enable support for the Cirrus Logic EP93xx M2P/M2M DMA controller.</help>
			</entry>
			<entry name="FSL_DMA">
				<label>Freescale Elo series DMA support</label>
				<help>Enable support for the Freescale Elo series DMA controllers.
The Elo is the DMA controller on some mpc82xx and mpc83xx parts, the
EloPlus is on mpc85xx and mpc86xx and Pxxx parts, and the Elo3 is on
some Txxx and Bxxx parts.</help>
			</entry>
			<entry name="FSL_EDMA">
				<label>Freescale eDMA engine support</label>
				<help>Support the Freescale eDMA engine with programmable channel
multiplexing capability for DMA request sources(slot).
This module can be found on Freescale Vybrid and LS-1 SoCs.</help>
			</entry>
			<entry name="FSL_RAID">
				<label>Freescale RAID engine Support</label>
				<help>Enable support for Freescale RAID Engine. RAID Engine is
available on some QorIQ SoCs (like P5020/P5040). It has
the capability to offload memcpy, xor and pq computation
for raid5/6.</help>
			</entry>
			<entry name="IMG_MDC_DMA">
				<label>IMG MDC support</label>
				<help>Enable support for the IMG multi-threaded DMA controller (MDC).</help>
			</entry>
			<entry name="IMX_DMA">
				<label>i.MX DMA support</label>
				<help>Support the i.MX DMA engine. This engine is integrated into
Freescale i.MX1/21/27 chips.</help>
			</entry>
			<entry name="IMX_SDMA">
				<label>i.MX SDMA support</label>
				<help>Support the i.MX SDMA engine. This engine is integrated into
Freescale i.MX25/31/35/51/53/6 chips.</help>
			</entry>
			<entry name="INTEL_IDMA64">
				<label>Intel integrated DMA 64-bit support</label>
				<help>Enable DMA support for Intel Low Power Subsystem such as found on
Intel Skylake PCH.</help>
			</entry>
			<entry name="INTEL_IOATDMA">
				<label>Intel I/OAT DMA support</label>
				<help>Enable support for the Intel(R) I/OAT DMA engine present
in recent Intel Xeon chipsets.

Say Y here if you have such a chipset.

If unsure, say N.</help>
			</entry>
			<entry name="INTEL_IOP_ADMA">
				<label>Intel IOP ADMA support</label>
				<help>Enable support for the Intel(R) IOP Series RAID engines.</help>
			</entry>
			<entry name="INTEL_MIC_X100_DMA">
				<label>Intel MIC X100 DMA Driver</label>
				<help>This enables DMA support for the Intel Many Integrated Core
(MIC) family of PCIe form factor coprocessor X100 devices that
run a 64 bit Linux OS. This driver will be used by both MIC
host and card drivers.

If you are building host kernel with a MIC device or a card
kernel for a MIC device, then say M (recommended) or Y, else
say N. If unsure say N.

More information about the Intel MIC family as well as the Linux
OS and tools for MIC to use with this driver are available from
&lt;http://software.intel.com/en-us/mic-developer&gt;.</help>
			</entry>
			<entry name="K3_DMA">
				<label>Hisilicon K3 DMA support</label>
				<help>Support the DMA engine for Hisilicon K3 platform
devices.</help>
			</entry>
			<entry name="LPC18XX_DMAMUX">
				<label>NXP LPC18xx/43xx DMA MUX for PL080</label>
				<help>Enable support for DMA on NXP LPC18xx/43xx platforms
with PL080 and multiplexed DMA request lines.</help>
			</entry>
			<entry name="MMP_PDMA">
				<label>MMP PDMA support</label>
				<help>Support the MMP PDMA engine for PXA and MMP platform.</help>
			</entry>
			<entry name="MMP_TDMA">
				<label>MMP Two-Channel DMA support</label>
				<help>Support the MMP Two-Channel DMA engine.
This engine used for MMP Audio DMA and pxa910 SQU.
It needs sram driver under mach-mmp.</help>
			</entry>
			<entry name="MOXART_DMA">
				<label>MOXART DMA support</label>
				<help>Enable support for the MOXA ART SoC DMA controller.

Say Y here if you enabled MMP ADMA, otherwise say N.</help>
			</entry>
			<entry name="MPC512X_DMA">
				<label>Freescale MPC512x built-in DMA engine support</label>
				<help>Enable support for the Freescale MPC512x built-in DMA engine.</help>
			</entry>
			<entry name="MV_XOR">
				<label>Marvell XOR engine support</label>
				<help>Enable support for the Marvell XOR engine.</help>
			</entry>
			<entry name="MV_XOR_V2">
				<label>Marvell XOR engine version 2 support </label>
				<help>Enable support for the Marvell version 2 XOR engine.

This engine provides acceleration for copy, XOR and RAID6
operations, and is available on Marvell Armada 7K and 8K
platforms.</help>
			</entry>
			<entry name="MXS_DMA">
				<label>MXS DMA support</label>
				<help>Support the MXS DMA engine. This engine including APBH-DMA
and APBX-DMA is integrated into Freescale
i.MX23/28/MX6Q/MX6DL/MX6UL chips.</help>
			</entry>
			<entry name="MX3_IPU">
				<label>MX3x Image Processing Unit support</label>
				<help>If you plan to use the Image Processing unit in the i.MX3x, say
Y here. If unsure, select Y.</help>
			</entry>
			<entry name="MX3_IPU_IRQS">
				<label>Number of dynamically mapped interrupts for IPU</label>
				<help>Out of 137 interrupt sources on i.MX31 IPU only very few are used.
To avoid bloating the irq_desc[] array we allocate a sufficient
number of IRQ slots and map them dynamically to specific sources.</help>
			</entry>
			<entry name="NBPFAXI_DMA">
				<label>Renesas Type-AXI NBPF DMA support</label>
				<help>Support for &quot;Type-AXI&quot; NBPF DMA IPs from Renesas</help>
			</entry>
			<entry name="PCH_DMA">
				<label>Intel EG20T PCH / LAPIS Semicon IOH(ML7213/ML7223/ML7831) DMA</label>
				<help>Enable support for Intel EG20T PCH DMA engine.

This driver also can be used for LAPIS Semiconductor IOH(Input/
Output Hub), ML7213, ML7223 and ML7831.
ML7213 IOH is for IVI(In-Vehicle Infotainment) use, ML7223 IOH is
for MP(Media Phone) use and ML7831 IOH is for general purpose use.
ML7213/ML7223/ML7831 is companion chip for Intel Atom E6xx series.
ML7213/ML7223/ML7831 is completely compatible for Intel EG20T PCH.</help>
			</entry>
			<entry name="PL330_DMA">
				<label>DMA API Driver for PL330</label>
				<help>Select if your platform has one or more PL330 DMACs.
You need to provide platform specific settings via
platform_data for a dma-pl330 device.</help>
			</entry>
			<entry name="PXA_DMA">
				<label>PXA DMA support</label>
				<help>Support the DMA engine for PXA. It is also compatible with MMP PDMA
platform. The internal DMA IP of all PXA variants is supported, with
16 to 32 channels for peripheral to memory or memory to memory
transfers.</help>
			</entry>
			<entry name="SIRF_DMA">
				<label>CSR SiRFprimaII/SiRFmarco DMA support</label>
				<help>Enable support for the CSR SiRFprimaII DMA engine.</help>
			</entry>
			<entry name="STE_DMA40">
				<label>ST-Ericsson DMA40 support</label>
				<help>Support for ST-Ericsson DMA40 controller</help>
			</entry>
			<entry name="STM32_DMA">
				<label>STMicroelectronics STM32 DMA support</label>
				<help>Enable support for the on-chip DMA controller on STMicroelectronics
STM32 MCUs.
If you have a board based on such a MCU and wish to use DMA say Y or M
here.</help>
			</entry>
			<entry name="S3C24XX_DMAC">
				<label>Samsung S3C24XX DMA support</label>
				<help>Support for the Samsung S3C24XX DMA controller driver. The
DMA controller is having multiple DMA channels which can be
configured for different peripherals like audio, UART, SPI.
The DMA controller can transfer data from memory to peripheral,
periphal to memory, periphal to periphal and memory to memory.</help>
			</entry>
			<entry name="TXX9_DMAC">
				<label>Toshiba TXx9 SoC DMA support</label>
				<help>Support the TXx9 SoC internal DMA controller.  This can be
integrated in chips such as the Toshiba TX4927/38/39.</help>
			</entry>
			<entry name="TEGRA20_APB_DMA">
				<label>NVIDIA Tegra20 APB DMA support</label>
				<help>Support for the NVIDIA Tegra20 APB DMA controller driver. The
DMA controller is having multiple DMA channel which can be
configured for different peripherals like audio, UART, SPI,
I2C etc which is in APB bus.
This DMA controller transfers data from memory to peripheral fifo
or vice versa. It does not support memory to memory data transfer.</help>
			</entry>
			<entry name="TEGRA210_ADMA">
				<label>NVIDIA Tegra210 ADMA support</label>
				<help>Support for the NVIDIA Tegra210 ADMA controller driver. The
DMA controller has multiple DMA channels and is used to service
various audio clients in the Tegra210 audio processing engine
(APE). This DMA controller transfers data from memory to
peripheral and vice versa. It does not support memory to
memory data transfer.</help>
			</entry>
			<entry name="TIMB_DMA">
				<label>Timberdale FPGA DMA support</label>
				<help>Enable support for the Timberdale FPGA DMA engine.</help>
			</entry>
			<entry name="TI_CPPI41">
				<label>AM33xx CPPI41 DMA support</label>
				<help>The Communications Port Programming Interface (CPPI) 4.1 DMA engine
is currently used by the USB driver on AM335x platforms.</help>
			</entry>
			<entry name="TI_DMA_CROSSBAR"/>
			<entry name="TI_EDMA">
				<label>TI EDMA support</label>
				<help>Enable support for the TI EDMA controller. This DMA
engine is found on TI DaVinci and AM33xx parts.</help>
			</entry>
			<entry name="XGENE_DMA">
				<label>APM X-Gene DMA support</label>
				<help>Enable support for the APM X-Gene SoC DMA engine.</help>
			</entry>
			<entry name="XILINX_DMA">
				<label>Xilinx AXI DMAS Engine</label>
				<help>Enable support for Xilinx AXI VDMA Soft IP.

AXI VDMA engine provides high-bandwidth direct memory access
between memory and AXI4-Stream video type target
peripherals including peripherals which support AXI4-
Stream Video Protocol.  It has two stream interfaces/
channels, Memory Mapped to Stream (MM2S) and Stream to
Memory Mapped (S2MM) for the data transfers.
AXI CDMA engine provides high-bandwidth direct memory access
between a memory-mapped source address and a memory-mapped
destination address.
AXI DMA engine provides high-bandwidth one dimensional direct
memory access between memory and AXI4-Stream target peripherals.</help>
			</entry>
			<entry name="XILINX_ZYNQMP_DMA">
				<label>Xilinx ZynqMP DMA Engine</label>
				<help>Enable support for Xilinx ZynqMP DMA controller.</help>
			</entry>
			<entry name="ZX_DMA">
				<label>ZTE ZX296702 DMA support</label>
				<help>Support the DMA engine for ZTE ZX296702 platform devices.</help>
			</entry>
			<entry name="PPC_BESTCOMM">
				<label>Bestcomm DMA engine support</label>
				<help>BestComm is the name of the communication coprocessor found
on the Freescale MPC5200 family of processor.  Its usage is
optional for some drivers (like ATA), but required for
others (like FEC).

If you want to use drivers that require DMA operations,
answer Y or M. Otherwise say N.</help>
			</entry>
			<entry name="PPC_BESTCOMM_ATA">
				<help>This option enables the support for the ATA task.</help>
			</entry>
			<entry name="PPC_BESTCOMM_FEC">
				<help>This option enables the support for the FEC tasks.</help>
			</entry>
			<entry name="PPC_BESTCOMM_GEN_BD">
				<help>This option enables the support for the GenBD tasks.

</help>
			</entry>
			<entry name="QCOM_BAM_DMA">
				<label>QCOM BAM DMA support</label>
				<help>Enable support for the QCOM BAM DMA controller.  This controller
provides DMA capabilities for a variety of on-chip devices.</help>
			</entry>
			<entry name="QCOM_HIDMA_MGMT">
				<label>Qualcomm Technologies HIDMA Management support</label>
				<help>Enable support for the Qualcomm Technologies HIDMA Management.
Each DMA device requires one management interface driver
for basic initialization before QCOM_HIDMA channel driver can
start managing the channels. In a virtualized environment,
the guest OS would run QCOM_HIDMA channel driver and the
host would run the QCOM_HIDMA_MGMT management driver.</help>
			</entry>
			<entry name="QCOM_HIDMA">
				<label>Qualcomm Technologies HIDMA Channel support</label>
				<help>Enable support for the Qualcomm Technologies HIDMA controller.
The HIDMA controller supports optimized buffer copies
(user to kernel, kernel to kernel, etc.).  It only supports
memcpy interface. The core is not intended for general
purpose slave DMA.
</help>
			</entry>
			<entry name="DW_DMAC_CORE"/>
			<entry name="DW_DMAC_BIG_ENDIAN_IO"/>
			<entry name="DW_DMAC">
				<label>Synopsys DesignWare AHB DMA platform driver</label>
				<help>Support the Synopsys DesignWare AHB DMA controller. This
can be integrated in chips such as the Atmel AT32ap7000.</help>
			</entry>
			<entry name="DW_DMAC_PCI">
				<label>Synopsys DesignWare AHB DMA PCI driver</label>
				<help>Support the Synopsys DesignWare AHB DMA controller on the
platfroms that enumerate it as a PCI device. For example,
Intel Medfield has integrated this GPDMA controller.
</help>
			</entry>
			<entry name="HSU_DMA"/>
			<entry name="HSU_DMA_PCI"/>
			<entry name="RENESAS_DMA"/>
			<entry name="SH_DMAE_BASE">
				<label>Renesas SuperH DMA Engine support</label>
				<help>Enable support for the Renesas SuperH DMA controllers.</help>
			</entry>
			<entry name="SH_DMAE">
				<label>Renesas SuperH DMAC support</label>
				<help>Enable support for the Renesas SuperH DMA controllers.</help>
			</entry>
			<entry name="SH_DMAE_R8A73A4"/>
			<entry name="RCAR_DMAC">
				<label>Renesas R-Car Gen2 DMA Controller</label>
				<help>This driver supports the general purpose DMA controller found in the
Renesas R-Car second generation SoCs.</help>
			</entry>
			<entry name="RENESAS_USB_DMAC">
				<label>Renesas USB-DMA Controller</label>
				<help>This driver supports the USB-DMA controller found in the Renesas
SoCs.</help>
			</entry>
			<entry name="SUDMAC">
				<label>Renesas SUDMAC support</label>
				<help>Enable support for the Renesas SUDMAC controllers.
</help>
			</entry>
			<entry name="ASYNC_TX_DMA">
				<label>Async_tx: Offload support for the async_tx api</label>
				<help>This allows the async_tx api to take advantage of offload engines for
memcpy, memset, xor, and raid6 p+q operations.  If your platform has
a dma engine that can perform raid operations and you have enabled
MD_RAID456 say Y.

If unsure, say N.</help>
			</entry>
			<entry name="DMATEST">
				<label>DMA Test client</label>
				<help>Simple DMA test client. Say N unless you're debugging a
DMA Device driver.</help>
			</entry>
			<entry name="DMA_ENGINE_RAID"/>
			<container name="DMABUF_options">
				<label>DMABUF options</label>
				<entry name="SYNC_FILE">
					<label>Explicit Synchronization Framework</label>
					<help>The Sync File Framework adds explicit syncronization via
userspace. It enables send/receive 'struct fence' objects to/from
userspace via Sync File fds for synchronization between drivers via
userspace components. It has been ported from Android.

The first and main user for this is graphics in which a fence is
associated with a buffer. When a job is submitted to the GPU a fence
is attached to the buffer and is transferred via userspace, using Sync
Files fds, to the DRM driver for example. More details at
Documentation/sync_file.txt.</help>
				</entry>
			</container>
			<entry name="DCA"/>
			<entry name="AUXDISPLAY">
				<label>Auxiliary Display support</label>
				<help>Say Y here to get to see options for auxiliary display drivers.
This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="KS0108">
				<label>KS0108 LCD Controller</label>
				<help>If you have a LCD controlled by one or more KS0108
controllers, say Y. You will need also another more specific
driver for your LCD.

Depends on Parallel Port support. If you say Y at
parport, you will be able to compile this as a module (M)
and built-in as well (Y).

To compile this as a module, choose M here:
the module will be called ks0108.

If unsure, say N.</help>
			</entry>
			<entry name="KS0108_DELAY">
				<label>Delay between each control writing (microseconds)</label>
				<help>Amount of time the ks0108 should wait between each control write
to the parallel port.

If your LCD seems to miss random writings, increment this.

If you don't know what I'm talking about, ignore it.

If you compile this as a module, you can still override this
value using the module parameters.</help>
			</entry>
			<entry name="CFAG12864B">
				<label>CFAG12864B LCD</label>
				<help>If you have a Crystalfontz 128x64 2-color LCD, cfag12864b Series,
say Y. You also need the ks0108 LCD Controller driver.

For help about how to wire your LCD to the parallel port,
check Documentation/auxdisplay/cfag12864b

Depends on the x86 arch and the framebuffer support.

The LCD framebuffer driver can be attached to a console.
It will work fine. However, you can't attach it to the fbdev driver
of the xorg server.

To compile this as a module, choose M here:
the modules will be called cfag12864b and cfag12864bfb.

If unsure, say N.</help>
			</entry>
			<entry name="CFAG12864B_RATE">
				<label>Refresh rate (hertz)</label>
				<help>Refresh rate of the LCD.

As the LCD is not memory mapped, the driver has to make the work by
software. This means you should be careful setting this value higher.
If your CPUs are really slow or you feel the system is slowed down,
decrease the value.

Be careful modifying this value to a very high value:
You can freeze the computer, or the LCD maybe can't draw as fast as you
are requesting.

If you don't know what I'm talking about, ignore it.

If you compile this as a module, you can still override this
value using the module parameters.</help>
			</entry>
			<entry name="UIO">
				<label>Userspace I/O drivers</label>
				<help>Enable this to allow the userspace driver core code to be
built.  This code allows userspace programs easy access to
kernel interrupts and memory locations, allowing some drivers
to be written in userspace.  Note that a small kernel driver
is also required for interrupt handling to work properly.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="UIO_CIF">
				<label>generic Hilscher CIF Card driver</label>
				<help>Driver for Hilscher CIF DeviceNet and Profibus cards.  This
driver requires a userspace component called cif that handles
all of the heavy lifting and can be found at:
&lt;http://www.osadl.org/projects/downloads/UIO/user/&gt;

To compile this driver as a module, choose M here: the module
will be called uio_cif.</help>
			</entry>
			<entry name="UIO_PDRV_GENIRQ">
				<label>Userspace I/O platform driver with generic IRQ handling</label>
				<help>Platform driver for Userspace I/O devices, including generic
interrupt handling code. Shared interrupts are not supported.

This kernel driver requires that the matching userspace driver
handles interrupts in a special way. Userspace is responsible
for acknowledging the hardware device if needed, and re-enabling
interrupts in the interrupt controller using the write() syscall.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="UIO_DMEM_GENIRQ">
				<label>Userspace platform driver with generic irq and dynamic memory</label>
				<help>Platform driver for Userspace I/O devices, including generic
interrupt handling code. Shared interrupts are not supported.

Memory regions can be specified with the same platform device
resources as the UIO_PDRV drivers, but dynamic regions can also
be specified.
The number and size of these regions is static,
but the memory allocation is not performed until
the associated device file is opened. The
memory is freed once the uio device is closed.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="UIO_AEC">
				<label>AEC video timestamp device</label>
				<help>
UIO driver for the Adrienne Electronics Corporation PCI time
code device.

This device differs from other UIO devices since it uses I/O
ports instead of memory mapped I/O. In order to make it
possible for UIO to work with this device a utility, uioport,
can be used to read and write the ports:

git clone git://ifup.org/philips/uioport.git

If you compile this as a module, it will be called uio_aec.

config UIO_SERCOS3
tristate &quot;Automata Sercos III PCI card driver&quot;
depends on PCI
help
Userspace I/O interface for the Sercos III PCI card from
Automata GmbH. The userspace part of this driver will be
available for download from the Automata GmbH web site.

Automata GmbH:        http://www.automataweb.com
Sercos III interface: http://www.sercos.com

If you compile this as a module, it will be called uio_sercos3.

config UIO_PCI_GENERIC
tristate &quot;Generic driver for PCI 2.3 and PCI Express cards&quot;
depends on PCI
help
Generic driver that you can bind, dynamically, to any
PCI 2.3 compliant and PCI Express card. It is useful,
primarily, for virtualization scenarios.
If you compile this as a module, it will be called uio_pci_generic.

config UIO_NETX
tristate &quot;Hilscher NetX Card driver&quot;
depends on PCI
help
Driver for Hilscher NetX based fieldbus cards (cifX, comX).
This driver requires a userspace component that comes with the card
or is available from Hilscher (http://www.hilscher.com).

To compile this driver as a module, choose M here; the module
will be called uio_netx.

config UIO_FSL_ELBC_GPCM
tristate &quot;eLBC/GPCM driver&quot;
depends on FSL_LBC
help
Generic driver for accessing a peripheral connected to an eLBC port
that is running in GPCM mode. GPCM is an interface for simple lower
performance memories and memory-mapped devices. For devices using
FCM or UPM eLBC modes, other device-specific drivers are available.

config UIO_FSL_ELBC_GPCM_NETX5152
bool &quot;eLBC/GPCM netX 51/52 support&quot;
depends on UIO_FSL_ELBC_GPCM
help
This will add support for netX 51/52 devices connected via eLBC/GPCM.
In particular, it implements interrupt handling. This can be used
together with the userspace netX stack from Hilscher.

Information about this hardware can be found at:
http://www.hilscher.com/netx

config UIO_PRUSS
tristate &quot;Texas Instruments PRUSS driver&quot;
select GENERIC_ALLOCATOR
depends on HAS_IOMEM &amp;&amp; HAS_DMA
help
PRUSS driver for OMAPL138/DA850/AM18XX devices
PRUSS driver requires user space components, examples and user space
driver is available from below SVN repo - you may use anonymous login

https://gforge.ti.com/gf/project/pru_sw/

More info on API is available at below wiki

http://processors.wiki.ti.com/index.php/PRU_Linux_Application_Loader

To compile this driver as a module, choose M here: the module
will be called uio_pruss.

config UIO_MF624
tristate &quot;Humusoft MF624 DAQ PCI card driver&quot;
depends on PCI
help
Userspace I/O interface for the Humusoft MF624 PCI card.
A sample userspace application using this driver is available
(among other MF624 related information and software components)
for download in a git repository:

git clone git://rtime.felk.cvut.cz/mf6xx.git

If you compile this as a module, it will be called uio_mf624.

endif
</help>
			</entry>
			<entry name="VFIO_IOMMU_TYPE1"/>
			<entry name="VFIO_IOMMU_SPAPR_TCE"/>
			<entry name="VFIO_SPAPR_EEH"/>
			<entry name="VFIO_VIRQFD"/>
			<entry name="VFIO">
				<label>VFIO Non-Privileged userspace driver framework</label>
				<help>VFIO provides a framework for secure userspace device drivers.
See Documentation/vfio.txt for more details.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_NOIOMMU">
				<label>VFIO No-IOMMU support</label>
				<help>VFIO is built on the ability to isolate devices using the IOMMU.
Only with an IOMMU can userspace access to DMA capable devices be
considered secure.  VFIO No-IOMMU mode enables IOMMU groups for
devices without IOMMU backing for the purpose of re-using the VFIO
infrastructure in a non-secure mode.  Use of this mode will result
in an unsupportable kernel and will therefore taint the kernel.
Device assignment to virtual machines is also not possible with
this mode since there is no IOMMU to provide DMA translation.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_PCI">
				<label>VFIO support for PCI devices</label>
				<help>Support for the PCI VFIO bus driver.  This is required to make
use of PCI drivers using the VFIO framework.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_PCI_VGA">
				<label>VFIO PCI support for VGA devices</label>
				<help>Support for VGA extension to VFIO PCI.  This exposes an additional
region on VGA devices for accessing legacy VGA addresses used by
BIOS and generic video drivers.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_PCI_MMAP"/>
			<entry name="VFIO_PCI_INTX"/>
			<entry name="VFIO_PCI_IGD"/>
			<entry name="VFIO_PLATFORM">
				<label>VFIO support for platform devices</label>
				<help>Support for platform devices with VFIO. This is required to make
use of platform devices present on the system using the VFIO
framework.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_AMBA">
				<label>VFIO support for AMBA devices</label>
				<help>Support for ARM AMBA devices with VFIO. This is required to make
use of ARM AMBA devices present on the system using the VFIO
framework.

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_PLATFORM_CALXEDAXGMAC_RESET">
				<label>VFIO support for calxeda xgmac reset</label>
				<help>Enables the VFIO platform driver to handle reset for Calxeda xgmac

If you don't know what to do here, say N.</help>
			</entry>
			<entry name="VFIO_PLATFORM_AMDXGBE_RESET">
				<label>VFIO support for AMD XGBE reset</label>
				<help>Enables the VFIO platform driver to handle reset for AMD XGBE

If you don't know what to do here, say N.
</help>
			</entry>
			<entry name="IRQ_BYPASS_MANAGER"/>
			<container name="TI_VLYNQ">
				<label>TI VLYNQ</label>
				<entry name="VLYNQ">
					<label>TI VLYNQ bus support</label>
					<help>Support for Texas Instruments(R) VLYNQ bus.
The VLYNQ bus is a high-speed, serial and packetized
data bus which allows external peripherals of a SoC
to appear into the system's main memory.

If unsure, say N</help>
				</entry>
				<entry name="VLYNQ_DEBUG">
					<label>VLYNQ bus debug</label>
					<help>Turn on VLYNQ bus debugging.</help>
				</entry>
			</container>
			<entry name="VIRT_DRIVERS">
				<label>Virtualization drivers</label>
				<help>Say Y here to get to see options for device drivers that support
virtualization environments.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="FSL_HV_MANAGER">
				<label>Freescale hypervisor management driver</label>
				<help>The Freescale hypervisor management driver provides several services
to drivers and applications related to the Freescale hypervisor:

1) An ioctl interface for querying and managing partitions.

2) A file interface to reading incoming doorbells.

3) An interrupt handler for shutting down the partition upon
receiving the shutdown doorbell from a manager partition.

4) A kernel interface for receiving callbacks when a managed
partition shuts down.</help>
			</entry>
			<entry name="VIRTIO">
				<help>This option is selected by any driver which implements the virtio
bus, such as CONFIG_VIRTIO_PCI, CONFIG_VIRTIO_MMIO, CONFIG_LGUEST,
CONFIG_RPMSG or CONFIG_S390_GUEST.</help>
			</entry>
			<container name="Virtio_drivers">
				<label>Virtio drivers</label>
				<entry name="VIRTIO_PCI">
					<label>PCI driver for virtio devices</label>
					<help>This driver provides support for virtio based paravirtual device
drivers over PCI.  This requires that your VMM has appropriate PCI
virtio backends.  Most QEMU based VMMs should support these devices
(like KVM or Xen).

If unsure, say M.</help>
				</entry>
				<entry name="VIRTIO_PCI_LEGACY">
					<label>Support for legacy virtio draft 0.9.X and older devices</label>
					<help>Virtio PCI Card 0.9.X Draft (circa 2014) and older device support.

This option enables building a transitional driver, supporting
both devices conforming to Virtio 1 specification, and legacy devices.
If disabled, you get a slightly smaller, non-transitional driver,
with no legacy compatibility.

So look out into your driveway.  Do you have a flying car?  If
so, you can happily disable this option and virtio will not
break.  Otherwise, leave it set.  Unless you're testing what
life will be like in The Future.

If unsure, say Y.</help>
				</entry>
				<entry name="VIRTIO_BALLOON">
					<label>Virtio balloon driver</label>
					<help>This driver supports increasing and decreasing the amount
of memory within a KVM guest.

If unsure, say M.</help>
				</entry>
				<entry name="VIRTIO_INPUT">
					<label>Virtio input driver</label>
					<help>This driver supports virtio input devices such as
keyboards, mice and tablets.

If unsure, say M.</help>
				</entry>
				<entry name="VIRTIO_MMIO">
					<label>Platform bus driver for memory mapped virtio devices</label>
					<help>This drivers provides support for memory mapped virtio</help>
				</entry>
			</container>
			<container name="Microsoft_Hyper_V_guest_support">
				<label>Microsoft Hyper-V guest support</label>
				<entry name="HYPERV">
					<label>Microsoft Hyper-V client drivers</label>
					<help>Select this option to run Linux as a Hyper-V client operating
system.</help>
				</entry>
				<entry name="HYPERV_UTILS">
					<label>Microsoft Hyper-V Utilities driver</label>
					<help>Select this option to enable the Hyper-V Utilities.</help>
				</entry>
				<entry name="HYPERV_BALLOON">
					<label>Microsoft Hyper-V Balloon driver</label>
					<help>Select this option to enable Hyper-V Balloon driver.</help>
				</entry>
			</container>
			<container name="Xen_driver_support">
				<label>Xen driver support</label>
				<entry name="XEN_BALLOON">
					<label>Xen memory balloon driver</label>
					<help>The balloon driver allows the Xen domain to request more memory from
the system to expand the domain's memory allocation, or alternatively
return unneeded memory to the system.</help>
				</entry>
				<entry name="XEN_SELFBALLOONING">
					<label>Dynamically self-balloon kernel memory to target</label>
					<help>Self-ballooning dynamically balloons available kernel memory driven
by the current usage of anonymous memory (&quot;committed AS&quot;) and
controlled by various sysfs-settable parameters.  Configuring
FRONTSWAP is highly recommended; if it is not configured, self-
ballooning is disabled by default. If FRONTSWAP is configured,
frontswap-selfshrinking is enabled by default but can be disabled
with the 'tmem.selfshrink=0' kernel boot parameter; and self-ballooning
is enabled by default but can be disabled with the 'tmem.selfballooning=0'
kernel boot parameter.  Note that systems without a sufficiently
large swap device should not enable self-ballooning.</help>
				</entry>
				<entry name="XEN_BALLOON_MEMORY_HOTPLUG">
					<label>Memory hotplug support for Xen balloon driver</label>
					<help>Memory hotplug support for Xen balloon driver allows expanding memory
available for the system above limit declared at system startup.
It is very useful on critical systems which require long
run without rebooting.

Memory could be hotplugged in following steps:

1) target domain: ensure that memory auto online policy is in
effect by checking /sys/devices/system/memory/auto_online_blocks
file (should be 'online').

2) control domain: xl mem-max &lt;target-domain&gt; &lt;maxmem&gt;
where &lt;maxmem&gt; is &gt;= requested memory size,

3) control domain: xl mem-set &lt;target-domain&gt; &lt;memory&gt;
where &lt;memory&gt; is requested memory size; alternatively memory
could be added by writing proper value to
/sys/devices/system/xen_memory/xen_memory0/target or
/sys/devices/system/xen_memory/xen_memory0/target_kb on the
target domain.

Alternatively, if memory auto onlining was not requested at step 1
the newly added memory can be manually onlined in the target domain
by doing the following:

for i in /sys/devices/system/memory/memory*/state; do \
[ &quot;`cat &quot;$i&quot;`&quot; = offline ] &amp;&amp; echo online &gt; &quot;$i&quot;; done

or by adding the following line to udev rules:

SUBSYSTEM==&quot;memory&quot;, ACTION==&quot;add&quot;, RUN+=&quot;/bin/sh -c '[ -f /sys$devpath/state ] &amp;&amp; echo online &gt; /sys$devpath/state'&quot;</help>
				</entry>
				<entry name="XEN_BALLOON_MEMORY_HOTPLUG_LIMIT">
					<label>Hotplugged memory limit (in GiB) for a PV guest</label>
					<help>Maxmium amount of memory (in GiB) that a PV guest can be
expanded to when using memory hotplug.

A PV guest can have more memory than this limit if is
started with a larger maximum.

This value is used to allocate enough space in internal
tables needed for physical memory administration.</help>
				</entry>
				<entry name="XEN_SCRUB_PAGES">
					<label>Scrub pages before returning them to system</label>
					<help>Scrub pages before returning them to the system for reuse by
other domains.  This makes sure that any confidential data
is not accidentally visible to other domains.  Is it more
secure, but slightly less efficient.
If in doubt, say yes.</help>
				</entry>
				<entry name="XEN_DEV_EVTCHN">
					<label>Xen /dev/xen/evtchn device</label>
					<help>The evtchn driver allows a userspace process to trigger event
channels and to receive notification of an event channel
firing.
If in doubt, say yes.</help>
				</entry>
				<entry name="XEN_BACKEND">
					<label>Backend driver support</label>
					<help>Support for backend device drivers that provide I/O services
to other virtual machines.</help>
				</entry>
				<entry name="XENFS">
					<label>Xen filesystem</label>
					<help>The xen filesystem provides a way for domains to share
information with each other and with the hypervisor.
For example, by reading and writing the &quot;xenbus&quot; file, guests
may pass arbitrary information to the initial domain.
If in doubt, say yes.</help>
				</entry>
				<entry name="XEN_COMPAT_XENFS">
					<label>Create compatibility mount point /proc/xen</label>
					<help>The old xenstore userspace tools expect to find &quot;xenbus&quot;
under /proc/xen, but &quot;xenbus&quot; is now found at the root of the
xenfs filesystem.  Selecting this causes the kernel to create
the compatibility mount point /proc/xen if it is running on
a xen platform.
If in doubt, say yes.</help>
				</entry>
				<entry name="XEN_SYS_HYPERVISOR">
					<label>Create xen entries under /sys/hypervisor</label>
					<help>Create entries under /sys/hypervisor describing the Xen
hypervisor environment.  When running native or in another
virtual environment, /sys/hypervisor will still be present,
but will have no xen contents.</help>
				</entry>
				<entry name="XEN_XENBUS_FRONTEND"/>
				<entry name="XEN_GNTDEV">
					<label>userspace grant access device driver</label>
					<help>Allows userspace processes to use grants.</help>
				</entry>
				<entry name="XEN_GRANT_DEV_ALLOC">
					<label>User-space grant reference allocator driver</label>
					<help>Allows userspace processes to create pages with access granted
to other domains. This can be used to implement frontend drivers
or as part of an inter-domain shared memory channel.</help>
				</entry>
				<entry name="SWIOTLB_XEN"/>
				<entry name="XEN_TMEM">
					<help>Shim to interface in-kernel Transcendent Memory hooks
(e.g. cleancache and frontswap) to Xen tmem hypercalls.</help>
				</entry>
				<entry name="XEN_PCIDEV_BACKEND">
					<label>Xen PCI-device backend driver</label>
					<help>The PCI device backend driver allows the kernel to export arbitrary
PCI devices to other guests. If you select this to be a module, you
will need to make sure no other driver has bound to the device(s)
you want to make visible to other guests.

The parameter &quot;passthrough&quot; allows you specify how you want the PCI
devices to appear in the guest. You can choose the default (0) where
PCI topology starts at 00.00.0, or (1) for passthrough if you want
the PCI devices topology appear the same as in the host.

The &quot;hide&quot; parameter (only applicable if backend driver is compiled
into the kernel) allows you to bind the PCI devices to this module
from the default device drivers. The argument is the list of PCI BDFs:
xen-pciback.hide=(03:00.0)(04:00.0)

If in doubt, say m.</help>
				</entry>
				<entry name="XEN_SCSI_BACKEND">
					<label>XEN SCSI backend driver</label>
					<help>The SCSI backend driver allows the kernel to export its SCSI Devices
to other guests via a high-performance shared-memory interface.
Only needed for systems running as XEN driver domains (e.g. Dom0) and
if guests need generic access to SCSI devices.</help>
				</entry>
				<entry name="XEN_PRIVCMD"/>
				<entry name="XEN_STUB">
					<label>Xen stub drivers</label>
					<help>Allow kernel to install stub drivers, to reserve space for Xen drivers,
i.e. memory hotplug and cpu hotplug, and to block native drivers loaded,
so that real Xen drivers can be modular.

To enable Xen features like cpu and memory hotplug, select Y here.</help>
				</entry>
				<entry name="XEN_ACPI_HOTPLUG_MEMORY">
					<label>Xen ACPI memory hotplug</label>
					<help>This is Xen ACPI memory hotplug.

Currently Xen only support ACPI memory hot-add. If you want
to hot-add memory at runtime (the hot-added memory cannot be
removed until machine stop), select Y/M here, otherwise select N.</help>
				</entry>
				<entry name="XEN_ACPI_HOTPLUG_CPU">
					<label>Xen ACPI cpu hotplug</label>
					<help>Xen ACPI cpu enumerating and hotplugging

For hotplugging, currently Xen only support ACPI cpu hotadd.
If you want to hotadd cpu at runtime (the hotadded cpu cannot
be removed until machine stop), select Y/M here.</help>
				</entry>
				<entry name="XEN_ACPI_PROCESSOR">
					<label>Xen ACPI processor</label>
					<help>This ACPI processor uploads Power Management information to the Xen
hypervisor.

To do that the driver parses the Power Management data and uploads
said information to the Xen hypervisor. Then the Xen hypervisor can
select the proper Cx and Pxx states. It also registers itself as the
SMM so that other drivers (such as ACPI cpufreq scaling driver) will
not load.

To compile this driver as a module, choose M here: the module will be
called xen_acpi_processor  If you do not know what to choose, select
M here. If the CPUFREQ drivers are built in, select Y here.</help>
				</entry>
				<entry name="XEN_MCE_LOG">
					<label>Xen platform mcelog</label>
					<help>Allow kernel fetching MCE error from Xen platform and
converting it into Linux mcelog format for mcelog tools</help>
				</entry>
				<entry name="XEN_HAVE_PVMMU"/>
				<entry name="XEN_EFI"/>
				<entry name="XEN_AUTO_XLATE">
					<help>Support for auto-translated physmap guests.</help>
				</entry>
				<entry name="XEN_ACPI"/>
				<entry name="XEN_SYMS">
					<label>Xen symbols</label>
					<help>Exports hypervisor symbols (along with their types and addresses) via
/proc/xen/xensyms file, similar to /proc/kallsyms</help>
				</entry>
				<entry name="XEN_HAVE_VPMU"/>
			</container>
			<entry name="STAGING">
				<label>Staging drivers</label>
				<help>This option allows you to select a number of drivers that are
not of the &quot;normal&quot; Linux kernel quality level.  These drivers
are placed here in order to get a wider audience to make use of
them.  Please note that these drivers are under heavy
development, may or may not work, and may contain userspace
interfaces that most likely will be changed in the near
future.

Using any of these drivers will taint your kernel which might
affect support options from both the community, and various
commercial support organizations.

If you wish to work on these drivers, to help improve them, or
to report problems you have with them, please see the
driver_name.README file in the drivers/staging/ directory to
see what needs to be worked on, and who to contact.

If in doubt, say N here.</help>
			</entry>
			<entry name="SLICOSS">
				<label>Alacritech Gigabit IS-NIC support</label>
				<help>This driver supports Alacritech's IS-NIC gigabit ethernet cards.

This includes the following devices:
Mojave cards (single port PCI Gigabit) both copper and fiber
Oasis cards (single and dual port PCI-x Gigabit) copper and fiber
Kalahari cards (dual and quad port PCI-e Gigabit) copper and fiber

To compile this driver as a module, choose M here: the module
will be called slicoss.
</help>
			</entry>
			<entry name="PRISM2_USB">
				<label>Prism2.5/3 USB driver</label>
				<help>This is the wlan-ng prism 2.5/3 USB driver for a wide range of
old USB wireless devices.

To compile this driver as a module, choose M here: the module
will be called prism2_usb.
</help>
			</entry>
			<entry name="COMEDI">
				<label>Data acquisition support (comedi)</label>
				<help>Enable support for a wide range of data acquisition devices
for Linux.</help>
			</entry>
			<entry name="COMEDI_DEBUG">
				<label>Comedi debugging</label>
				<help>This is an option for use by developers; most people should
say N here. This enables comedi core and driver debugging.</help>
			</entry>
			<entry name="COMEDI_DEFAULT_BUF_SIZE_KB">
				<label>Comedi default initial asynchronous buffer size in KiB</label>
				<help>This is the default asynchronous buffer size which is used for
commands running in the background in kernel space.  This
defaults to 2048 KiB of memory so that a 16 channel card
running at 10 kHz has of 2-4 seconds of buffer.</help>
			</entry>
			<entry name="COMEDI_DEFAULT_BUF_MAXSIZE_KB">
				<label>Comedi default maximum asynchronous buffer size in KiB</label>
				<help>This is the default maximum asynchronous buffer size which can
be requested by a userspace program without root privileges.
This is set to 20480 KiB so that a fast I/O card with 16
channels running at 100 kHz has 2-4 seconds of buffer.</help>
			</entry>
			<entry name="COMEDI_MISC_DRIVERS">
				<label>Comedi misc drivers</label>
				<help>Enable comedi misc drivers to be built

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about misc non-hardware comedi drivers.</help>
			</entry>
			<entry name="COMEDI_BOND">
				<label>Comedi device bonding support</label>
				<help>Enable support for a driver to 'bond' (merge) multiple subdevices
from multiple devices together as one.

Currently, it only handles digital I/O subdevices.

To compile this driver as a module, choose M here: the module will be
called comedi_bond.</help>
			</entry>
			<entry name="COMEDI_TEST">
				<label>Fake waveform generator support</label>
				<help>Enable support for the fake waveform generator.
This driver is mainly for testing purposes, but can also be used to
generate sample waveforms on systems that don't have data acquisition
hardware.

To compile this driver as a module, choose M here: the module will be
called comedi_test.</help>
			</entry>
			<entry name="COMEDI_PARPORT">
				<label>Parallel port support</label>
				<help>Enable support for the standard parallel port.
A cheap and easy way to get a few more digital I/O lines. Steal
additional parallel ports from old computers or your neighbors'
computers.

To compile this driver as a module, choose M here: the module will be
called comedi_parport.</help>
			</entry>
			<entry name="COMEDI_SERIAL2002">
				<label>Driver for serial connected hardware</label>
				<help>Enable support for serial connected hardware

To compile this driver as a module, choose M here: the module will be
called serial2002.</help>
			</entry>
			<entry name="COMEDI_SSV_DNP">
				<label>SSV Embedded Systems DIL/Net-PC support</label>
				<help>Enable support for SSV Embedded Systems DIL/Net-PC

To compile this driver as a module, choose M here: the module will be
called ssv_dnp.</help>
			</entry>
			<entry name="COMEDI_ISA_DRIVERS">
				<label>Comedi ISA and PC/104 drivers</label>
				<help>Enable comedi ISA and PC/104 drivers to be built

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about ISA and PC/104 comedi drivers.</help>
			</entry>
			<entry name="COMEDI_PCL711">
				<label>Advantech PCL-711/711b and ADlink ACL-8112 ISA card support</label>
				<help>Enable support for Advantech PCL-711 and 711b, ADlink ACL-8112

To compile this driver as a module, choose M here: the module will be
called pcl711.</help>
			</entry>
			<entry name="COMEDI_PCL724">
				<label>Advantech PCL-722/724/731 and ADlink ACL-7122/7124/PET-48DIO</label>
				<help>Enable support for ISA and PC/104 based 8255 digital i/o boards. This
driver provides a legacy comedi driver wrapper for the generic 8255
support driver.

Supported boards include:
Advantech PCL-724            24 channels
Advantech PCL-722            144 (or 96) channels
Advantech PCL-731            48 channels
ADlink ACL-7122              144 (or 96) channels
ADlink ACL-7124              24 channels
ADlink PET-48DIO             48 channels
WinSystems PCM-IO48          48 channels (PC/104)
Diamond Systems ONYX-MM-DIO  48 channels (PC/104)

To compile this driver as a module, choose M here: the module will be
called pcl724.</help>
			</entry>
			<entry name="COMEDI_PCL726">
				<label>Advantech PCL-726 and compatible ISA card support</label>
				<help>Enable support for Advantech PCL-726 and compatible ISA cards.

To compile this driver as a module, choose M here: the module will be
called pcl726.</help>
			</entry>
			<entry name="COMEDI_PCL730">
				<label>Simple Digital I/O board support (8-bit ports)</label>
				<help>Enable support for various simple ISA or PC/104 Digital I/O boards.
These boards all use 8-bit I/O ports.

Advantech PCL-730             iso - 16 in/16 out  ttl - 16 in/16 out
ICP ISO-730                   iso - 16 in/16 out  ttl - 16 in/16 out
ADlink ACL-7130               iso - 16 in/16 out  ttl - 16 in/16 out
Advantech PCM-3730            iso - 8 in/8 out    ttl - 16 in/16 out
Advantech PCL-725             iso - 8 in/8 out
ICP P8R8-DIO                  iso - 8 in/8 out
ADlink ACL-7225b              iso - 16 in/16 out
ICP P16R16-DIO                iso - 16 in/16 out
Advantech PCL-733             iso - 32 in
Advantech PCL-734             iso - 32 out
Diamond Systems OPMM-1616-XT  iso - 16 in/16 out
Diamond Systems PEARL-MM-P    iso - 16 out
Diamond Systems IR104-PBF     iso - 20 in/20 out

To compile this driver as a module, choose M here: the module will be
called pcl730.</help>
			</entry>
			<entry name="COMEDI_PCL812">
				<label>Advantech PCL-812/813 and ADlink ACL-8112/8113/8113/8216</label>
				<help>Enable support for Advantech PCL-812/PG, PCL-813/B, ADLink
ACL-8112DG/HG/PG, ACL-8113, ACL-8216, ICP DAS A-821PGH/PGL/PGL-NDA,
A-822PGH/PGL, A-823PGH/PGL, A-826PG and ICP DAS ISO-813 ISA cards

To compile this driver as a module, choose M here: the module will be
called pcl812.</help>
			</entry>
			<entry name="COMEDI_PCL816">
				<label>Advantech PCL-814 and PCL-816 ISA card support</label>
				<help>Enable support for Advantech PCL-814 and PCL-816 ISA cards

To compile this driver as a module, choose M here: the module will be
called pcl816.</help>
			</entry>
			<entry name="COMEDI_PCL818">
				<label>Advantech PCL-718 and PCL-818 ISA card support</label>
				<help>Enable support for Advantech PCL-818 ISA cards
PCL-818L, PCL-818H, PCL-818HD, PCL-818HG, PCL-818 and PCL-718

To compile this driver as a module, choose M here: the module will be
called pcl818.</help>
			</entry>
			<entry name="COMEDI_PCM3724">
				<label>Advantech PCM-3724 PC/104 card support</label>
				<help>Enable support for Advantech PCM-3724 PC/104 cards.

To compile this driver as a module, choose M here: the module will be
called pcm3724.</help>
			</entry>
			<entry name="COMEDI_AMPLC_DIO200_ISA">
				<label>Amplicon PC212E/PC214E/PC215E/PC218E/PC272E</label>
				<help>Enable support for Amplicon PC212E, PC214E, PC215E, PC218E and
PC272E ISA DIO boards

To compile this driver as a module, choose M here: the module will be
called amplc_dio200.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PC236_ISA">
				<label>Amplicon PC36AT DIO board support</label>
				<help>Enable support for Amplicon PC36AT ISA DIO board.

To compile this driver as a module, choose M here: the module will be
called amplc_pc236.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PC263_ISA">
				<label>Amplicon PC263 relay board support</label>
				<help>Enable support for Amplicon PC263 ISA relay board.  This board has
16 reed relay output channels.

To compile this driver as a module, choose M here: the module will be
called amplc_pc263.</help>
			</entry>
			<entry name="COMEDI_RTI800">
				<label>Analog Devices RTI-800/815 ISA card support</label>
				<help>Enable support for Analog Devices RTI-800/815 ISA cards

To compile this driver as a module, choose M here: the module will be
called rti800.</help>
			</entry>
			<entry name="COMEDI_RTI802">
				<label>Analog Devices RTI-802 ISA card support</label>
				<help>Enable support for Analog Devices RTI-802 ISA cards

To compile this driver as a module, choose M here: the module will be
called rti802.</help>
			</entry>
			<entry name="COMEDI_DAC02">
				<label>Keithley Metrabyte DAC02 compatible ISA card support</label>
				<help>Enable support for Keithley Metrabyte DAC02 compatible ISA cards.

To compile this driver as a module, choose M here: the module will be
called dac02.</help>
			</entry>
			<entry name="COMEDI_DAS16M1">
				<label>MeasurementComputing CIO-DAS16/M1DAS-16 ISA card support</label>
				<help>Enable support for Measurement Computing CIO-DAS16/M1 ISA cards.

To compile this driver as a module, choose M here: the module will be
called das16m1.</help>
			</entry>
			<entry name="COMEDI_DAS08_ISA">
				<label>DAS-08 compatible ISA and PC/104 card support</label>
				<help>Enable support for Keithley Metrabyte/ComputerBoards DAS08
and compatible ISA and PC/104 cards:
Keithley Metrabyte/ComputerBoards DAS08, DAS08-PGM, DAS08-PGH,
DAS08-PGL, DAS08-AOH, DAS08-AOL, DAS08-AOM, DAS08/JR-AO,
DAS08/JR-16-AO, PC104-DAS08, DAS08/JR/16.

To compile this driver as a module, choose M here: the module will be
called das08_isa.</help>
			</entry>
			<entry name="COMEDI_DAS16">
				<label>DAS-16 compatible ISA and PC/104 card support</label>
				<help>Enable support for Keithley Metrabyte/ComputerBoards DAS16
and compatible ISA and PC/104 cards:
Keithley Metrabyte DAS-16, DAS-16G, DAS-16F, DAS-1201, DAS-1202,
DAS-1401, DAS-1402, DAS-1601, DAS-1602 and
ComputerBoards/MeasurementComputing PC104-DAS16/JR/,
PC104-DAS16JR/16, CIO-DAS16JR/16, CIO-DAS16/JR, CIO-DAS1401/12,
CIO-DAS1402/12, CIO-DAS1402/16, CIO-DAS1601/12, CIO-DAS1602/12,
CIO-DAS1602/16, CIO-DAS16/330

To compile this driver as a module, choose M here: the module will be
called das16.</help>
			</entry>
			<entry name="COMEDI_DAS800">
				<label>DAS800 and compatible ISA card support</label>
				<help>Enable support for Keithley Metrabyte DAS800 and compatible ISA cards
Keithley Metrabyte DAS-800, DAS-801, DAS-802
Measurement Computing CIO-DAS800, CIO-DAS801, CIO-DAS802 and
CIO-DAS802/16

To compile this driver as a module, choose M here: the module will be
called das800.</help>
			</entry>
			<entry name="COMEDI_DAS1800">
				<label>DAS1800 and compatible ISA card support</label>
				<help>Enable support for DAS1800 and compatible ISA cards
Keithley Metrabyte DAS-1701ST, DAS-1701ST-DA, DAS-1701/AO,
DAS-1702ST, DAS-1702ST-DA, DAS-1702HR, DAS-1702HR-DA, DAS-1702/AO,
DAS-1801ST, DAS-1801ST-DA, DAS-1801HC, DAS-1801AO, DAS-1802ST,
DAS-1802ST-DA, DAS-1802HR, DAS-1802HR-DA, DAS-1802HC and
DAS-1802AO

To compile this driver as a module, choose M here: the module will be
called das1800.</help>
			</entry>
			<entry name="COMEDI_DAS6402">
				<label>DAS6402 and compatible ISA card support</label>
				<help>Enable support for DAS6402 and compatible ISA cards
Computerboards, Keithley Metrabyte DAS6402 and compatibles

To compile this driver as a module, choose M here: the module will be
called das6402.</help>
			</entry>
			<entry name="COMEDI_DT2801">
				<label>Data Translation DT2801 ISA card support</label>
				<help>Enable support for Data Translation DT2801 ISA cards

To compile this driver as a module, choose M here: the module will be
called dt2801.</help>
			</entry>
			<entry name="COMEDI_DT2811">
				<label>Data Translation DT2811 ISA card support</label>
				<help>Enable support for Data Translation DT2811 ISA cards

To compile this driver as a module, choose M here: the module will be
called dt2811.</help>
			</entry>
			<entry name="COMEDI_DT2814">
				<label>Data Translation DT2814 ISA card support</label>
				<help>Enable support for Data Translation DT2814 ISA cards

To compile this driver as a module, choose M here: the module will be
called dt2814.</help>
			</entry>
			<entry name="COMEDI_DT2815">
				<label>Data Translation DT2815 ISA card support</label>
				<help>Enable support for Data Translation DT2815 ISA cards

To compile this driver as a module, choose M here: the module will be
called dt2815.</help>
			</entry>
			<entry name="COMEDI_DT2817">
				<label>Data Translation DT2817 ISA card support</label>
				<help>Enable support for Data Translation DT2817 ISA cards

To compile this driver as a module, choose M here: the module will be
called dt2817.</help>
			</entry>
			<entry name="COMEDI_DT282X">
				<label>Data Translation DT2821 series and DT-EZ ISA card support</label>
				<help>Enable support for Data Translation DT2821 series including DT-EZ
DT2821, DT2821-F-16SE, DT2821-F-8DI, DT2821-G-16SE, DT2821-G-8DI,
DT2823 (dt2823), DT2824-PGH, DT2824-PGL, DT2825, DT2827, DT2828,
DT21-EZ, DT23-EZ, DT24-EZ and DT24-EZ-PGL

To compile this driver as a module, choose M here: the module will be
called dt282x.</help>
			</entry>
			<entry name="COMEDI_DMM32AT">
				<label>Diamond Systems MM-32-AT PC/104 board support</label>
				<help>Enable support for Diamond Systems MM-32-AT PC/104 boards

To compile this driver as a module, choose M here: the module will be
called dmm32at.</help>
			</entry>
			<entry name="COMEDI_FL512">
				<label>FL512 ISA card support</label>
				<help>Enable support for FL512 ISA card

To compile this driver as a module, choose M here: the module will be
called fl512.</help>
			</entry>
			<entry name="COMEDI_AIO_AIO12_8">
				<label>I/O Products PC/104 AIO12-8 Analog I/O Board support</label>
				<help>Enable support for I/O Products PC/104 AIO12-8 Analog I/O Board

To compile this driver as a module, choose M here: the module will be
called aio_aio12_8.</help>
			</entry>
			<entry name="COMEDI_AIO_IIRO_16">
				<label>I/O Products PC/104 IIRO16 Board support</label>
				<help>Enable support for I/O Products PC/104 IIRO16 Relay And Isolated
Input Board

To compile this driver as a module, choose M here: the module will be
called aio_iiro_16.</help>
			</entry>
			<entry name="COMEDI_II_PCI20KC">
				<label>Intelligent Instruments PCI-20001C carrier support</label>
				<help>Enable support for Intelligent Instruments PCI-20001C carrier
PCI-20001, PCI-20006 and PCI-20341

To compile this driver as a module, choose M here: the module will be
called ii_pci20kc.</help>
			</entry>
			<entry name="COMEDI_C6XDIGIO">
				<label>Mechatronic Systems Inc. C6x_DIGIO DSP daughter card support</label>
				<help>Enable support for Mechatronic Systems Inc. C6x_DIGIO DSP daughter
card

To compile this driver as a module, choose M here: the module will be
called c6xdigio.</help>
			</entry>
			<entry name="COMEDI_MPC624">
				<label>Micro/sys MPC-624 PC/104 board support</label>
				<help>Enable support for Micro/sys MPC-624 PC/104 board

To compile this driver as a module, choose M here: the module will be
called mpc624.</help>
			</entry>
			<entry name="COMEDI_ADQ12B">
				<label>MicroAxial ADQ12-B data acquisition and control card support</label>
				<help>Enable MicroAxial ADQ12-B daq and control card support.

To compile this driver as a module, choose M here: the module will be
called adq12b.</help>
			</entry>
			<entry name="COMEDI_NI_AT_A2150">
				<label>NI AT-A2150 ISA card support</label>
				<help>Enable support for National Instruments AT-A2150 cards

To compile this driver as a module, choose M here: the module will be
called ni_at_a2150.</help>
			</entry>
			<entry name="COMEDI_NI_AT_AO">
				<label>NI AT-AO-6/10 EISA card support</label>
				<help>Enable support for National Instruments AT-AO-6/10 cards

To compile this driver as a module, choose M here: the module will be
called ni_at_ao.</help>
			</entry>
			<entry name="COMEDI_NI_ATMIO">
				<label>NI AT-MIO E series ISA-PNP card support</label>
				<help>Enable support for National Instruments AT-MIO E series cards
National Instruments AT-MIO-16E-1 (ni_atmio),
AT-MIO-16E-2, AT-MIO-16E-10, AT-MIO-16DE-10, AT-MIO-64E-3,
AT-MIO-16XE-50, AT-MIO-16XE-10, AT-AI-16XE-10

To compile this driver as a module, choose M here: the module will be
called ni_atmio.</help>
			</entry>
			<entry name="COMEDI_NI_ATMIO16D">
				<label>NI AT-MIO-16/AT-MIO-16D series ISA card support</label>
				<help>Enable support for National Instruments AT-MIO-16/AT-MIO-16D cards.

To compile this driver as a module, choose M here: the module will be
called ni_atmio16d.</help>
			</entry>
			<entry name="COMEDI_NI_LABPC_ISA">
				<label>NI Lab-PC and compatibles ISA support</label>
				<help>Enable support for National Instruments Lab-PC and compatibles
Lab-PC-1200, Lab-PC-1200AI, Lab-PC+.
Kernel-level ISA plug-and-play support for the lab-pc-1200 boards has
not yet been added to the driver.

To compile this driver as a module, choose M here: the module will be
called ni_labpc.</help>
			</entry>
			<entry name="COMEDI_PCMAD">
				<label>Winsystems PCM-A/D12 and PCM-A/D16 PC/104 board support</label>
				<help>Enable support for Winsystems PCM-A/D12 and PCM-A/D16 PC/104 boards.

To compile this driver as a module, choose M here: the module will be
called pcmad.</help>
			</entry>
			<entry name="COMEDI_PCMDA12">
				<label>Winsystems PCM-D/A-12 8-channel AO PC/104 board support</label>
				<help>Enable support for Winsystems PCM-D/A-12 8-channel AO PC/104 boards.
Note that the board is not ISA-PNP capable and thus needs the I/O
port comedi_config parameter.

To compile this driver as a module, choose M here: the module will be
called pcmda12.</help>
			</entry>
			<entry name="COMEDI_PCMMIO">
				<label>Winsystems PCM-MIO PC/104 board support</label>
				<help>Enable support for Winsystems PCM-MIO multifunction PC/104 boards.

To compile this driver as a module, choose M here: the module will be
called pcmmio.</help>
			</entry>
			<entry name="COMEDI_PCMUIO">
				<label>Winsystems PCM-UIO48A and PCM-UIO96A PC/104 board support</label>
				<help>Enable support for PCM-UIO48A and PCM-UIO96A PC/104 boards.

To compile this driver as a module, choose M here: the module will be
called pcmuio.</help>
			</entry>
			<entry name="COMEDI_MULTIQ3">
				<label>Quanser Consulting MultiQ-3 ISA card support</label>
				<help>Enable support for Quanser Consulting MultiQ-3 ISA cards

To compile this driver as a module, choose M here: the module will be
called multiq3.</help>
			</entry>
			<entry name="COMEDI_S526">
				<label>Sensoray s526 support</label>
				<help>Enable support for Sensoray s526

To compile this driver as a module, choose M here: the module will be
called s526.</help>
			</entry>
			<entry name="COMEDI_PCI_DRIVERS">
				<label>Comedi PCI drivers</label>
				<help>Enable support for comedi PCI drivers.

To compile this support as a module, choose M here: the module will
be called comedi_pci.</help>
			</entry>
			<entry name="COMEDI_8255_PCI">
				<label>Generic PCI based 8255 digital i/o board support</label>
				<help>Enable support for PCI based 8255 digital i/o boards. This driver
provides a PCI wrapper around the generic 8255 driver.

Supported boards:
ADlink - PCI-7224, PCI-7248, and PCI-7296
Measurement Computing - PCI-DIO24, PCI-DIO24H, PCI-DIO48H and
PCI-DIO96H
National Instruments - PCI-DIO-96, PCI-DIO-96B, PXI-6508, PCI-6503,
PCI-6503B, PCI-6503X, and PXI-6503

To compile this driver as a module, choose M here: the module will
be called 8255_pci.</help>
			</entry>
			<entry name="COMEDI_ADDI_WATCHDOG">
				<help>Provides support for the watchdog subdevice found on many ADDI-DATA
boards. This module will be automatically selected when needed. The
module will be called addi_watchdog.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_1032">
				<label>ADDI-DATA APCI_1032 support</label>
				<help>Enable support for ADDI-DATA APCI_1032 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_1032.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_1500">
				<label>ADDI-DATA APCI_1500 support</label>
				<help>Enable support for ADDI-DATA APCI_1500 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_1500.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_1516">
				<label>ADDI-DATA APCI-1016/1516/2016 support</label>
				<help>Enable support for ADDI-DATA APCI-1016, APCI-1516 and APCI-2016 boards.
These are 16 channel, optically isolated, digital I/O boards. The 1516
and 2016 boards also have a watchdog for resetting the outputs to &quot;0&quot;.

To compile this driver as a module, choose M here: the module will be
called addi_apci_1516.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_1564">
				<label>ADDI-DATA APCI_1564 support</label>
				<help>Enable support for ADDI-DATA APCI_1564 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_1564.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_16XX">
				<label>ADDI-DATA APCI_16xx support</label>
				<help>Enable support for ADDI-DATA APCI_16xx cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_16xx.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_2032">
				<label>ADDI-DATA APCI_2032 support</label>
				<help>Enable support for ADDI-DATA APCI_2032 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_2032.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_2200">
				<label>ADDI-DATA APCI_2200 support</label>
				<help>Enable support for ADDI-DATA APCI_2200 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_2200.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_3120">
				<label>ADDI-DATA APCI_3120/3001 support</label>
				<help>Enable support for ADDI-DATA APCI_3120/3001 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_3120.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_3501">
				<label>ADDI-DATA APCI_3501 support</label>
				<help>Enable support for ADDI-DATA APCI_3501 cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_3501.</help>
			</entry>
			<entry name="COMEDI_ADDI_APCI_3XXX">
				<label>ADDI-DATA APCI_3xxx support</label>
				<help>Enable support for ADDI-DATA APCI_3xxx cards

To compile this driver as a module, choose M here: the module will be
called addi_apci_3xxx.</help>
			</entry>
			<entry name="COMEDI_ADL_PCI6208">
				<label>ADLink PCI-6208A support</label>
				<help>Enable support for ADLink PCI-6208A cards

To compile this driver as a module, choose M here: the module will be
called adl_pci6208.</help>
			</entry>
			<entry name="COMEDI_ADL_PCI7X3X">
				<label>ADLink PCI-723X/743X isolated digital i/o board support</label>
				<help>Enable support for ADlink PCI-723X/743X isolated digital i/o boards.
Supported boards include the 32-channel PCI-7230 (16 in/16 out),
PCI-7233 (32 in), and PCI-7234 (32 out) as well as the 64-channel
PCI-7432 (32 in/32 out), PCI-7433 (64 in), and PCI-7434 (64 out).

To compile this driver as a module, choose M here: the module will be
called adl_pci7x3x.</help>
			</entry>
			<entry name="COMEDI_ADL_PCI8164">
				<label>ADLink PCI-8164 4 Axes Motion Control board support</label>
				<help>Enable support for ADlink PCI-8164 4 Axes Motion Control board

To compile this driver as a module, choose M here: the module will be
called adl_pci8164.</help>
			</entry>
			<entry name="COMEDI_ADL_PCI9111">
				<label>ADLink PCI-9111HR support</label>
				<help>Enable support for ADlink PCI9111 cards

To compile this driver as a module, choose M here: the module will be
called adl_pci9111.</help>
			</entry>
			<entry name="COMEDI_ADL_PCI9118">
				<label>ADLink PCI-9118DG, PCI-9118HG, PCI-9118HR support</label>
				<help>Enable support for ADlink PCI-9118DG, PCI-9118HG, PCI-9118HR cards

To compile this driver as a module, choose M here: the module will be
called adl_pci9118.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI1710">
				<label>Advantech PCI-171x and PCI-1731 support</label>
				<help>Enable support for Advantech PCI-1710, PCI-1710HG, PCI-1711,
PCI-1713 and PCI-1731

To compile this driver as a module, choose M here: the module will be
called adv_pci1710.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI1720">
				<label>Advantech PCI-1720 support</label>
				<help>Enable support for Advantech PCI-1720 Analog Output board.

To compile this driver as a module, choose M here: the module will be
called adv_pci1720.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI1723">
				<label>Advantech PCI-1723 support</label>
				<help>Enable support for Advantech PCI-1723 cards

To compile this driver as a module, choose M here: the module will be
called adv_pci1723.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI1724">
				<label>Advantech PCI-1724U support</label>
				<help>Enable support for Advantech PCI-1724U cards.  These are 32-channel
analog output cards with voltage and current loop output ranges and
14-bit resolution.

To compile this driver as a module, choose M here: the module will be
called adv_pci1724.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI1760">
				<label>Advantech PCI-1760 support</label>
				<help>Enable support for Advantech PCI-1760 board.

To compile this driver as a module, choose M here: the module will be
called adv_pci1760.</help>
			</entry>
			<entry name="COMEDI_ADV_PCI_DIO">
				<label>Advantech PCI DIO card support</label>
				<help>Enable support for Advantech PCI DIO cards
PCI-1730, PCI-1733, PCI-1734, PCI-1735U, PCI-1736UP, PCI-1739U,
PCI-1750, PCI-1751, PCI-1752, PCI-1753/E, PCI-1754, PCI-1756 and
PCI-1762

To compile this driver as a module, choose M here: the module will be
called adv_pci_dio.</help>
			</entry>
			<entry name="COMEDI_AMPLC_DIO200_PCI">
				<label>Amplicon PCI215/PCI272/PCIe215/PCIe236/PCIe296 DIO support</label>
				<help>Enable support for Amplicon PCI215, PCI272, PCIe215, PCIe236
and PCIe296 DIO boards.

To compile this driver as a module, choose M here: the module will be
called amplc_dio200_pci.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PC236_PCI">
				<label>Amplicon PCI236 DIO board support</label>
				<help>Enable support for Amplicon PCI236 DIO board.

To compile this driver as a module, choose M here: the module will be
called amplc_pci236.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PC263_PCI">
				<label>Amplicon PCI263 relay board support</label>
				<help>Enable support for Amplicon PCI263 relay board.  This is a PCI board
with 16 reed relay output channels.

To compile this driver as a module, choose M here: the module will be
called amplc_pci263.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PCI224">
				<label>Amplicon PCI224 and PCI234 support</label>
				<help>Enable support for Amplicon PCI224 and PCI234 AO boards

To compile this driver as a module, choose M here: the module will be
called amplc_pci224.</help>
			</entry>
			<entry name="COMEDI_AMPLC_PCI230">
				<label>Amplicon PCI230 and PCI260 support</label>
				<help>Enable support for Amplicon PCI230 and PCI260 Multifunction I/O
boards

To compile this driver as a module, choose M here: the module will be
called amplc_pci230.</help>
			</entry>
			<entry name="COMEDI_CONTEC_PCI_DIO">
				<label>Contec PIO1616L digital I/O board support</label>
				<help>Enable support for the Contec PIO1616L digital I/O board

To compile this driver as a module, choose M here: the module will be
called contec_pci_dio.</help>
			</entry>
			<entry name="COMEDI_DAS08_PCI">
				<label>DAS-08 PCI support</label>
				<help>Enable support for PCI DAS-08 cards.

To compile this driver as a module, choose M here: the module will be
called das08_pci.</help>
			</entry>
			<entry name="COMEDI_DT3000">
				<label>Data Translation DT3000 series support</label>
				<help>Enable support for Data Translation DT3000 series
DT3001, DT3001-PGL, DT3002, DT3003, DT3003-PGL, DT3004, DT3005 and
DT3004-200

To compile this driver as a module, choose M here: the module will be
called dt3000.</help>
			</entry>
			<entry name="COMEDI_DYNA_PCI10XX">
				<label>Dynalog PCI DAQ series support</label>
				<help>Enable support for Dynalog PCI DAQ series
PCI-1050

To compile this driver as a module, choose M here: the module will be
called dyna_pci10xx.</help>
			</entry>
			<entry name="COMEDI_GSC_HPDI">
				<label>General Standards PCI-HPDI32 / PMC-HPDI32 support</label>
				<help>Enable support for General Standards Corporation high speed parallel
digital interface rs485 boards PCI-HPDI32 and PMC-HPDI32.
Only receive mode works, transmit not supported.

To compile this driver as a module, choose M here: the module will be
called gsc_hpdi.</help>
			</entry>
			<entry name="COMEDI_MF6X4">
				<label>Humusoft MF634 and MF624 DAQ Card support</label>
				<help>This driver supports both Humusoft MF634 and MF624 Data acquisition
cards. The legacy Humusoft MF614 card is not supported.</help>
			</entry>
			<entry name="COMEDI_ICP_MULTI">
				<label>Inova ICP_MULTI support</label>
				<help>Enable support for Inova ICP_MULTI card

To compile this driver as a module, choose M here: the module will be
called icp_multi.</help>
			</entry>
			<entry name="COMEDI_DAQBOARD2000">
				<label>IOtech DAQboard/2000 support</label>
				<help>Enable support for the IOtech DAQboard/2000

To compile this driver as a module, choose M here: the module will be
called daqboard2000.</help>
			</entry>
			<entry name="COMEDI_JR3_PCI">
				<label>JR3/PCI force sensor board support</label>
				<help>Enable support for JR3/PCI force sensor boards

To compile this driver as a module, choose M here: the module will be
called jr3_pci.</help>
			</entry>
			<entry name="COMEDI_KE_COUNTER">
				<label>Kolter-Electronic PCI Counter 1 card support</label>
				<help>Enable support for Kolter-Electronic PCI Counter 1 cards

To compile this driver as a module, choose M here: the module will be
called ke_counter.</help>
			</entry>
			<entry name="COMEDI_CB_PCIDAS64">
				<label>MeasurementComputing PCI-DAS 64xx, 60xx, and 4020 support</label>
				<help>Enable support for ComputerBoards/MeasurementComputing PCI-DAS 64xx,
60xx, and 4020 series with the PLX 9080 PCI controller

To compile this driver as a module, choose M here: the module will be
called cb_pcidas64.</help>
			</entry>
			<entry name="COMEDI_CB_PCIDAS">
				<label>MeasurementComputing PCI-DAS support</label>
				<help>Enable support for ComputerBoards/MeasurementComputing PCI-DAS with
AMCC S5933 PCIcontroller: PCI-DAS1602/16, PCI-DAS1602/16jr,
PCI-DAS1602/12, PCI-DAS1200, PCI-DAS1200jr, PCI-DAS1000, PCI-DAS1001
and PCI_DAS1002.

To compile this driver as a module, choose M here: the module will be
called cb_pcidas.</help>
			</entry>
			<entry name="COMEDI_CB_PCIDDA">
				<label>MeasurementComputing PCI-DDA series support</label>
				<help>Enable support for ComputerBoards/MeasurementComputing PCI-DDA
series: PCI-DDA08/12, PCI-DDA04/12, PCI-DDA02/12, PCI-DDA08/16,
PCI-DDA04/16 and PCI-DDA02/16

To compile this driver as a module, choose M here: the module will be
called cb_pcidda.</help>
			</entry>
			<entry name="COMEDI_CB_PCIMDAS">
				<label>MeasurementComputing PCIM-DAS1602/16, PCIe-DAS1602/16 support</label>
				<help>Enable support for ComputerBoards/MeasurementComputing PCI Migration
series PCIM-DAS1602/16 and PCIe-DAS1602/16.

To compile this driver as a module, choose M here: the module will be
called cb_pcimdas.</help>
			</entry>
			<entry name="COMEDI_CB_PCIMDDA">
				<label>MeasurementComputing PCIM-DDA06-16 support</label>
				<help>Enable support for ComputerBoards/MeasurementComputing PCIM-DDA06-16

To compile this driver as a module, choose M here: the module will be
called cb_pcimdda.</help>
			</entry>
			<entry name="COMEDI_ME4000">
				<label>Meilhaus ME-4000 support</label>
				<help>Enable support for Meilhaus PCI data acquisition cards
ME-4650, ME-4670i, ME-4680, ME-4680i and ME-4680is

To compile this driver as a module, choose M here: the module will be
called me4000.</help>
			</entry>
			<entry name="COMEDI_ME_DAQ">
				<label>Meilhaus ME-2000i, ME-2600i, ME-3000vm1 support</label>
				<help>Enable support for Meilhaus PCI data acquisition cards
ME-2000i, ME-2600i and ME-3000vm1

To compile this driver as a module, choose M here: the module will be
called me_daq.</help>
			</entry>
			<entry name="COMEDI_NI_6527">
				<label>NI 6527 support</label>
				<help>Enable support for the National Instruments 6527 PCI card

To compile this driver as a module, choose M here: the module will be
called ni_6527.</help>
			</entry>
			<entry name="COMEDI_NI_65XX">
				<label>NI 65xx static dio PCI card support</label>
				<help>Enable support for National Instruments 65xx static dio boards.
Supported devices: National Instruments PCI-6509 (ni_65xx),
PXI-6509, PCI-6510, PCI-6511, PXI-6511, PCI-6512, PXI-6512, PCI-6513,
PXI-6513, PCI-6514, PXI-6514, PCI-6515, PXI-6515, PCI-6516, PCI-6517,
PCI-6518, PCI-6519, PCI-6520, PCI-6521, PXI-6521, PCI-6528, PXI-6528

To compile this driver as a module, choose M here: the module will be
called ni_65xx.</help>
			</entry>
			<entry name="COMEDI_NI_660X">
				<label>NI 660x counter/timer PCI card support</label>
				<help>Enable support for National Instruments PCI-6601 (ni_660x), PCI-6602,
PXI-6602, PXI-6608 and PXI-6624.

To compile this driver as a module, choose M here: the module will be
called ni_660x.</help>
			</entry>
			<entry name="COMEDI_NI_670X">
				<label>NI 670x PCI card support</label>
				<help>Enable support for National Instruments PCI-6703 and PCI-6704

To compile this driver as a module, choose M here: the module will be
called ni_670x.</help>
			</entry>
			<entry name="COMEDI_NI_LABPC_PCI">
				<label>NI Lab-PC PCI-1200 support</label>
				<help>Enable support for National Instruments Lab-PC PCI-1200.

To compile this driver as a module, choose M here: the module will be
called ni_labpc_pci.</help>
			</entry>
			<entry name="COMEDI_NI_PCIDIO">
				<label>NI PCI-DIO32HS, PCI-6533, PCI-6534 support</label>
				<help>Enable support for National Instruments PCI-DIO-32HS, PXI-6533,
PCI-6533 and PCI-6534

To compile this driver as a module, choose M here: the module will be
called ni_pcidio.</help>
			</entry>
			<entry name="COMEDI_NI_PCIMIO">
				<label>NI PCI-MIO-E series and M series support</label>
				<help>Enable support for National Instruments PCI-MIO-E series and M series
(all boards): PCI-MIO-16XE-10, PXI-6030E, PCI-MIO-16E-1,
PCI-MIO-16E-4, PCI-6014, PCI-6040E, PXI-6040E, PCI-6030E, PCI-6031E,
PCI-6032E, PCI-6033E, PCI-6071E, PCI-6023E, PCI-6024E, PCI-6025E,
PXI-6025E, PCI-6034E, PCI-6035E, PCI-6052E, PCI-6110, PCI-6111,
PCI-6220, PCI-6221, PCI-6224, PXI-6224, PCI-6225, PXI-6225, PCI-6229,
PCI-6250, PCI-6251, PCIe-6251, PCI-6254, PCI-6259, PCIe-6259,
PCI-6280, PCI-6281, PXI-6281, PCI-6284, PCI-6289, PCI-6711, PXI-6711,
PCI-6713, PXI-6713, PXI-6071E, PCI-6070E, PXI-6070E, PXI-6052E,
PCI-6036E, PCI-6731, PCI-6733, PXI-6733, PCI-6143, PXI-6143

To compile this driver as a module, choose M here: the module will be
called ni_pcimio.</help>
			</entry>
			<entry name="COMEDI_RTD520">
				<label>Real Time Devices PCI4520/DM7520 support</label>
				<help>Enable support for Real Time Devices PCI4520/DM7520

To compile this driver as a module, choose M here: the module will be
called rtd520.</help>
			</entry>
			<entry name="COMEDI_S626">
				<label>Sensoray 626 support</label>
				<help>Enable support for Sensoray 626

To compile this driver as a module, choose M here: the module will be
called s626.</help>
			</entry>
			<entry name="COMEDI_MITE"/>
			<entry name="COMEDI_NI_TIOCMD"/>
			<entry name="COMEDI_PCMCIA_DRIVERS">
				<label>Comedi PCMCIA drivers</label>
				<help>Enable support for comedi PCMCIA drivers.

To compile this support as a module, choose M here: the module will
be called comedi_pcmcia.</help>
			</entry>
			<entry name="COMEDI_CB_DAS16_CS">
				<label>CB DAS16 series PCMCIA support</label>
				<help>Enable support for the ComputerBoards/MeasurementComputing PCMCIA
cards DAS16/16, PCM-DAS16D/12 and PCM-DAS16s/16

To compile this driver as a module, choose M here: the module will be
called cb_das16_cs.</help>
			</entry>
			<entry name="COMEDI_DAS08_CS">
				<label>CB DAS08 PCMCIA support</label>
				<help>Enable support for the ComputerBoards/MeasurementComputing DAS-08
PCMCIA card

To compile this driver as a module, choose M here: the module will be
called das08_cs.</help>
			</entry>
			<entry name="COMEDI_NI_DAQ_700_CS">
				<label>NI DAQCard-700 PCMCIA support</label>
				<help>Enable support for the National Instruments PCMCIA DAQCard-700 DIO

To compile this driver as a module, choose M here: the module will be
called ni_daq_700.</help>
			</entry>
			<entry name="COMEDI_NI_DAQ_DIO24_CS">
				<label>NI DAQ-Card DIO-24 PCMCIA support</label>
				<help>Enable support for the National Instruments PCMCIA DAQ-Card DIO-24

To compile this driver as a module, choose M here: the module will be
called ni_daq_dio24.</help>
			</entry>
			<entry name="COMEDI_NI_LABPC_CS">
				<label>NI DAQCard-1200 PCMCIA support</label>
				<help>Enable support for the National Instruments PCMCIA DAQCard-1200

To compile this driver as a module, choose M here: the module will be
called ni_labpc_cs.</help>
			</entry>
			<entry name="COMEDI_NI_MIO_CS">
				<label>NI DAQCard E series PCMCIA support</label>
				<help>Enable support for the National Instruments PCMCIA DAQCard E series
DAQCard-ai-16xe-50, DAQCard-ai-16e-4, DAQCard-6062E, DAQCard-6024E
and DAQCard-6036E

To compile this driver as a module, choose M here: the module will be
called ni_mio_cs.</help>
			</entry>
			<entry name="COMEDI_QUATECH_DAQP_CS">
				<label>Quatech DAQP PCMCIA data capture card support</label>
				<help>Enable support for the Quatech DAQP PCMCIA data capture cards
DAQP-208 and DAQP-308

To compile this driver as a module, choose M here: the module will be
called quatech_daqp_cs.</help>
			</entry>
			<entry name="COMEDI_USB_DRIVERS">
				<label>Comedi USB drivers</label>
				<help>Enable support for comedi USB drivers.

To compile this support as a module, choose M here: the module will
be called comedi_usb.</help>
			</entry>
			<entry name="COMEDI_DT9812">
				<label>DataTranslation DT9812 USB module support</label>
				<help>Enable support for the Data Translation DT9812 USB module

To compile this driver as a module, choose M here: the module will be
called dt9812.</help>
			</entry>
			<entry name="COMEDI_NI_USB6501">
				<label>NI USB-6501 support</label>
				<help>Enable support for the National Instruments USB-6501 module.

The NI USB-6501 is a Full-Speed USB 2.0 (12 Mbit/s) device that
provides 24 digital I/O lines channels and one 32-bit counter.

To compile this driver as a module, choose M here: the module will be
called ni_usb6501.</help>
			</entry>
			<entry name="COMEDI_USBDUX">
				<label>ITL USB-DUX-D support</label>
				<help>Enable support for the Incite Technology Ltd USB-DUX-D Board

To compile this driver as a module, choose M here: the module will be
called usbdux.</help>
			</entry>
			<entry name="COMEDI_USBDUXFAST">
				<label>ITL USB-DUXfast support</label>
				<help>Enable support for the Incite Technology Ltd USB-DUXfast Board

To compile this driver as a module, choose M here: the module will be
called usbduxfast.</help>
			</entry>
			<entry name="COMEDI_USBDUXSIGMA">
				<label>ITL USB-DUXsigma support</label>
				<help>Enable support for the Incite Technology Ltd USB-DUXsigma Board

To compile this driver as a module, choose M here: the module will be
called usbduxsigma.</help>
			</entry>
			<entry name="COMEDI_VMK80XX">
				<label>Velleman VM110/VM140 USB Board support</label>
				<help>Build the Velleman USB Board Low-Level Driver supporting the
K8055/K8061 aka VM110/VM140 devices

To compile this driver as a module, choose M here: the module will be
called vmk80xx.</help>
			</entry>
			<entry name="COMEDI_8254"/>
			<entry name="COMEDI_8255"/>
			<entry name="COMEDI_8255_SA">
				<label>Standalone 8255 support</label>
				<help>Enable support for 8255 digital I/O as a standalone driver.

You should enable compilation this driver if you plan to use a board
that has an 8255 chip at a known I/O base address and there are no
other Comedi drivers for the board.

Note that Comedi drivers for most multi-function boards incorporating
an 8255 chip use the 'comedi_8255' module.  Most PCI-based 8255
boards use the 8255_pci driver as a wrapper around the 'comedi_8255'
module.

To compile this driver as a module, choose M here: the module will be
called 8255.</help>
			</entry>
			<entry name="COMEDI_KCOMEDILIB">
				<label>Comedi kcomedilib</label>
				<help>Build the kcomedilib.

This is a kernel module used to open and manipulate Comedi devices
from within kernel code.  It is currently only used by the
comedi_bond driver, and its functionality has been stripped down to
the needs of that driver, so is currently not very useful for
anything else.

To compile kcomedilib as a module, choose M here: the module will be
called kcomedilib.</help>
			</entry>
			<entry name="COMEDI_AMPLC_DIO200"/>
			<entry name="COMEDI_AMPLC_PC236"/>
			<entry name="COMEDI_DAS08"/>
			<entry name="COMEDI_ISADMA"/>
			<entry name="COMEDI_NI_LABPC"/>
			<entry name="COMEDI_NI_LABPC_ISADMA"/>
			<entry name="COMEDI_NI_TIO"/>
			<entry name="FB_OLPC_DCON">
				<label>One Laptop Per Child Display CONtroller support</label>
				<help>In order to support very low power operation, the XO laptop uses a
secondary Display CONtroller, or DCON.  This secondary controller
is present in the video pipeline between the primary display
controller (integrate into the processor or chipset) and the LCD
panel.  It allows the main processor/display controller to be
completely powered off while still retaining an image on the display.
This controller is only available on OLPC platforms.  Unless you have
one of these platforms, you will want to say 'N'.</help>
			</entry>
			<entry name="FB_OLPC_DCON_1">
				<label>OLPC XO-1 DCON support</label>
				<help>Enable support for the DCON in XO-1 model laptops.  The kernel
communicates with the DCON using model-specific code.  If you
have an XO-1 (or if you're unsure what model you have), you should
say 'Y'.</help>
			</entry>
			<entry name="FB_OLPC_DCON_1_5">
				<label>OLPC XO-1.5 DCON support</label>
				<help>Enable support for the DCON in XO-1.5 model laptops.  The kernel
communicates with the DCON using model-specific code.  If you
have an XO-1.5 (or if you're unsure what model you have), you
should say 'Y'.
</help>
			</entry>
			<entry name="RTL8192U">
				<label>RealTek RTL8192U Wireless LAN NIC driver</label>
			</entry>
			<entry name="RTLLIB">
				<label>Support for rtllib wireless devices</label>
				<help>If you have a wireless card that uses rtllib, say
Y. Currently the only card is the rtl8192e.

If unsure, say N.</help>
			</entry>
			<entry name="RTLLIB_CRYPTO_CCMP">
				<label>Support for rtllib CCMP crypto</label>
				<help>CCMP crypto driver for rtllib.

If you enabled RTLLIB, you want this.</help>
			</entry>
			<entry name="RTLLIB_CRYPTO_TKIP">
				<label>Support for rtllib TKIP crypto</label>
				<help>TKIP crypto driver for rtllib.

If you enabled RTLLIB, you want this.</help>
			</entry>
			<entry name="RTLLIB_CRYPTO_WEP">
				<label>Support for rtllib WEP crypto</label>
				<help>TKIP crypto driver for rtllib.

If you enabled RTLLIB, you want this.</help>
			</entry>
			<entry name="RTL8192E">
				<label>RealTek RTL8192E Wireless LAN NIC driver</label>
			</entry>
			<entry name="R8712U">
				<label>RealTek RTL8712U (RTL8192SU) Wireless LAN NIC driver</label>
				<help>This option adds the Realtek RTL8712 USB device such as the D-Link DWA-130.
If built as a module, it will be called r8712u.</help>
			</entry>
			<entry name="R8712_TX_AGGR">
				<label>Realtek RTL8712U Transmit Aggregation code</label>
				<help>This option provides transmit aggregation for the Realtek RTL8712 USB device.


</help>
			</entry>
			<entry name="R8188EU">
				<label>Realtek RTL8188EU Wireless LAN NIC driver</label>
				<help>This option adds the Realtek RTL8188EU USB device such as TP-Link TL-WN725N.
If built as a module, it will be called r8188eu.</help>
			</entry>
			<entry name="_88EU_AP_MODE">
				<label>Realtek RTL8188EU AP mode</label>
				<help>This option enables Access Point mode. Unless you know that your system
will never be used as an AP, or the target system has limited memory,
&quot;Y&quot; should be selected.</help>
			</entry>
			<entry name="R8723AU">
				<label>Realtek RTL8723AU Wireless LAN NIC driver (deprecated)</label>
				<help>This option adds the Realtek RTL8723AU USB device such as found in
the Lenovo Yoga 13 tablet. If built as a module, it will be called r8723au.

Note: This driver is deprecated and scheduled to be removed in a
future kernel release. Please use rtl8xxxu instead.</help>
			</entry>
			<entry name="_8723AU_AP_MODE">
				<label>Realtek RTL8723AU AP mode</label>
				<help>This option enables Access Point mode. Unless you know that your system
will never be used as an AP, or the target system has limited memory,
&quot;Y&quot; should be selected.</help>
			</entry>
			<entry name="_8723AU_BT_COEXIST">
				<label>Realtek RTL8723AU BlueTooth Coexistence</label>
				<help>This option enables icoexistence with BlueTooth communications for the r8723au driver.
Unless you know that this driver will never by used with BT, or the target system has
limited memory, &quot;Y&quot; should be selected.</help>
			</entry>
			<entry name="RTS5208">
				<label>Realtek PCI-E Card Reader RTS5208/5288 support</label>
				<help>Say Y here to include driver code to support the Realtek
PCI-E card reader rts5208/rts5288.

If this driver is compiled as a module, it will be named rts5208.
</help>
			</entry>
			<entry name="OCTEON_ETHERNET">
				<label>Cavium Networks Octeon Ethernet support</label>
				<help>This driver supports the builtin ethernet ports on Cavium
Networks' products in the Octeon family. This driver supports the
CN3XXX and CN5XXX Octeon processors.

To compile this driver as a module, choose M here.  The module
will be called octeon-ethernet.

</help>
			</entry>
			<entry name="OCTEON_USB">
				<label>Cavium Networks Octeon USB support</label>
				<help>This driver supports USB host controller on some Cavium
Networks' products in the Octeon family.

To compile this driver as a module, choose M here. The module
will be called octeon-usb.

</help>
			</entry>
			<entry name="VT6655">
				<label>VIA Technologies VT6655 support</label>
				<help>This is a vendor-written driver for VIA VT6655.

</help>
			</entry>
			<entry name="VT6656">
				<label>VIA Technologies VT6656 support</label>
				<help>This is a vendor-written driver for VIA VT6656.

</help>
			</entry>
			<container name="IIO_staging_drivers">
				<label>IIO staging drivers</label>
				<container name="Accelerometers">
					<label>Accelerometers</label>
					<entry name="ADIS16201">
						<label>Analog Devices ADIS16201 Dual-Axis Digital Inclinometer and Accelerometer</label>
						<help>Say Y here to build support for Analog Devices adis16201 dual-axis
digital inclinometer and accelerometer.

To compile this driver as a module, say M here: the module will
be called adis16201.</help>
					</entry>
					<entry name="ADIS16203">
						<label>Analog Devices ADIS16203 Programmable 360 Degrees Inclinometer</label>
						<help>Say Y here to build support for Analog Devices adis16203 Programmable
360 Degrees Inclinometer.

To compile this driver as a module, say M here: the module will be
called adis16203.</help>
					</entry>
					<entry name="ADIS16209">
						<label>Analog Devices ADIS16209 Dual-Axis Digital Inclinometer and Accelerometer</label>
						<help>Say Y here to build support for Analog Devices adis16209 dual-axis digital inclinometer
and accelerometer.

To compile this driver as a module, say M here: the module will be
called adis16209.</help>
					</entry>
					<entry name="ADIS16240">
						<label>Analog Devices ADIS16240 Programmable Impact Sensor and Recorder</label>
						<help>Say Y here to build support for Analog Devices adis16240 programmable
impact Sensor and recorder.

To compile this driver as a module, say M here: the module will be
called adis16240.</help>
					</entry>
					<entry name="SCA3000">
						<label>VTI SCA3000 series accelerometers</label>
						<help>Say Y here to build support for the VTI SCA3000 series of SPI
accelerometers. These devices use a hardware ring buffer.

To compile this driver as a module, say M here: the module will be
called sca3000.</help>
					</entry>
				</container>
				<container name="Analog_to_digital_converters">
					<label>Analog to digital converters</label>
					<entry name="AD7606">
						<label>Analog Devices AD7606 ADC driver</label>
						<help>Say yes here to build support for Analog Devices:
ad7606, ad7606-6, ad7606-4 analog to digital converters (ADC).

To compile this driver as a module, choose M here: the
module will be called ad7606.</help>
					</entry>
					<entry name="AD7606_IFACE_PARALLEL">
						<label>parallel interface support</label>
						<help>Say yes here to include parallel interface support on the AD7606
ADC driver.

To compile this driver as a module, choose M here: the
module will be called ad7606_parallel.</help>
					</entry>
					<entry name="AD7606_IFACE_SPI">
						<label>spi interface support</label>
						<help>Say yes here to include parallel interface support on the AD7606
ADC driver.

To compile this driver as a module, choose M here: the
module will be called ad7606_spi.</help>
					</entry>
					<entry name="AD7780">
						<label>Analog Devices AD7780 and similar ADCs driver</label>
						<help>Say yes here to build support for Analog Devices AD7170, AD7171,
AD7780 and AD7781 SPI analog to digital converters (ADC).
If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ad7780.</help>
					</entry>
					<entry name="AD7816">
						<label>Analog Devices AD7816/7/8 temperature sensor and ADC driver</label>
						<help>Say yes here to build support for Analog Devices AD7816/7/8
temperature sensors and ADC.</help>
					</entry>
					<entry name="AD7192">
						<label>Analog Devices AD7190 AD7192 AD7193 AD7195 ADC driver</label>
						<help>Say yes here to build support for Analog Devices AD7190,
AD7192, AD7193 or AD7195 SPI analog to digital converters (ADC).
If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called ad7192.</help>
					</entry>
					<entry name="AD7280">
						<label>Analog Devices AD7280A Lithium Ion Battery Monitoring System</label>
						<help>Say yes here to build support for Analog Devices AD7280A
Lithium Ion Battery Monitoring System.

To compile this driver as a module, choose M here: the
module will be called ad7280a</help>
					</entry>
					<entry name="LPC32XX_ADC">
						<label>NXP LPC32XX ADC</label>
						<help>Say yes here to build support for the integrated ADC inside the
LPC32XX SoC. Note that this feature uses the same hardware as the
touchscreen driver, so you should either select only one of the two
drivers (lpc32xx_adc or lpc32xx_ts) or, in the OpenFirmware case,
activate only one via device tree selection.  Provides direct access
via sysfs.</help>
					</entry>
					<entry name="SPEAR_ADC">
						<label>ST SPEAr ADC</label>
						<help>Say yes here to build support for the integrated ADC inside the
ST SPEAr SoC. Provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called spear_adc.</help>
					</entry>
				</container>
				<container name="Analog_digital_bi_direction_converters">
					<label>Analog digital bi-direction converters</label>
					<entry name="ADT7316">
						<label>Analog Devices ADT7316/7/8 ADT7516/7/9 temperature sensor, ADC and DAC driver</label>
						<help>Say yes here to build support for Analog Devices ADT7316, ADT7317, ADT7318
and ADT7516, ADT7517, ADT7519 temperature sensors, ADC and DAC.

To compile this driver as a module, choose M here: the module will
be called adt7316.</help>
					</entry>
					<entry name="ADT7316_SPI">
						<label>support SPI bus connection</label>
						<help>Say yes here to build SPI bus support for Analog Devices ADT7316/7/8
and ADT7516/7/9.

To compile this driver as a module, choose M here: the module will
be called adt7316_spi.</help>
					</entry>
					<entry name="ADT7316_I2C">
						<label>support I2C bus connection</label>
						<help>Say yes here to build I2C bus support for Analog Devices ADT7316/7/8
and ADT7516/7/9.

To compile this driver as a module, choose M here: the module will
be called adt7316_i2c.</help>
					</entry>
				</container>
				<container name="Capacitance_to_digital_converters">
					<label>Capacitance to digital converters</label>
					<entry name="AD7150">
						<label>Analog Devices ad7150/1/6 capacitive sensor driver</label>
						<help>Say yes here to build support for Analog Devices capacitive sensors.
(ad7150, ad7151, ad7156) Provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad7150.</help>
					</entry>
					<entry name="AD7152">
						<label>Analog Devices ad7152/3 capacitive sensor driver</label>
						<help>Say yes here to build support for Analog Devices capacitive sensors.
(ad7152, ad7153) Provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad7152.</help>
					</entry>
					<entry name="AD7746">
						<label>Analog Devices AD7745, AD7746 AD7747 capacitive sensor driver</label>
						<help>Say yes here to build support for Analog Devices capacitive sensors.
(AD7745, AD7746, AD7747) Provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad7746.</help>
					</entry>
				</container>
				<container name="Direct_Digital_Synthesis">
					<label>Direct Digital Synthesis</label>
					<entry name="AD9832">
						<label>Analog Devices ad9832/5 driver</label>
						<help>Say yes here to build support for Analog Devices DDS chip
AD9832 and AD9835, provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad9832.</help>
					</entry>
					<entry name="AD9834">
						<label>Analog Devices AD9833/4/7/8 driver</label>
						<help>Say yes here to build support for Analog Devices DDS chip
AD9833, AD9834, AD9837 and AD9838, provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad9834.</help>
					</entry>
				</container>
				<container name="Digital_gyroscope_sensors">
					<label>Digital gyroscope sensors</label>
					<entry name="ADIS16060">
						<label>Analog Devices ADIS16060 Yaw Rate Gyroscope with SPI driver</label>
						<help>Say Y (yes) here to build support for Analog Devices adis16060 wide bandwidth
yaw rate gyroscope with SPI.

To compile this driver as a module, say M here: the module will be
called adis16060. If unsure, say N.</help>
					</entry>
				</container>
				<container name="Network_Analyzer_Impedance_Converters">
					<label>Network Analyzer, Impedance Converters</label>
					<entry name="AD5933">
						<label>Analog Devices AD5933, AD5934 driver</label>
						<help>Say yes here to build support for Analog Devices Impedance Converter,
Network Analyzer, AD5933/4, provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad5933.</help>
					</entry>
				</container>
				<container name="Light_sensors">
					<label>Light sensors</label>
					<entry name="SENSORS_ISL29018">
						<label>ISL 29018 light and proximity sensor</label>
						<help>If you say yes here you get support for ambient light sensing and
proximity infrared sensing from Intersil ISL29018.
This driver will provide the measurements of ambient light intensity
in lux, proximity infrared sensing and normal infrared sensing.
Data from sensor is accessible via sysfs.</help>
					</entry>
					<entry name="SENSORS_ISL29028">
						<label>Intersil ISL29028 Concurrent Light and Proximity Sensor</label>
						<help>Provides driver for the Intersil's ISL29028 device.
This driver supports the sysfs interface to get the ALS, IR intensity,
Proximity value via iio. The ISL29028 provides the concurrent sensing
of ambient light and proximity.</help>
					</entry>
					<entry name="TSL2583">
						<label>TAOS TSL2580, TSL2581 and TSL2583 light-to-digital converters</label>
						<help>Provides support for the TAOS tsl2580, tsl2581 and tsl2583 devices.
Access ALS data via iio, sysfs.</help>
					</entry>
					<entry name="TSL2x7x">
						<label>TAOS TSL/TMD2x71 and TSL/TMD2x72 Family of light and proximity sensors</label>
						<help>Support for: tsl2571, tsl2671, tmd2671, tsl2771, tmd2771, tsl2572, tsl2672,
tmd2672, tsl2772, tmd2772 devices.
Provides iio_events and direct access via sysfs.</help>
					</entry>
				</container>
				<container name="Active_energy_metering_IC">
					<label>Active energy metering IC</label>
					<entry name="ADE7753">
						<label>Analog Devices ADE7753/6 Single-Phase Multifunction Metering IC Driver</label>
						<help>Say yes here to build support for Analog Devices ADE7753 Single-Phase Multifunction
Metering IC with di/dt Sensor Interface.

To compile this driver as a module, choose M here: the
module will be called ade7753.</help>
					</entry>
					<entry name="ADE7754">
						<label>Analog Devices ADE7754 Polyphase Multifunction Energy Metering IC Driver</label>
						<help>Say yes here to build support for Analog Devices ADE7754 Polyphase
Multifunction Energy Metering IC Driver.

To compile this driver as a module, choose M here: the
module will be called ade7754.</help>
					</entry>
					<entry name="ADE7758">
						<label>Analog Devices ADE7758 Poly Phase Multifunction Energy Metering IC Driver</label>
						<help>Say yes here to build support for Analog Devices ADE7758 Polyphase
Multifunction Energy Metering IC with Per Phase Information Driver.

To compile this driver as a module, choose M here: the
module will be called ade7758.</help>
					</entry>
					<entry name="ADE7759">
						<label>Analog Devices ADE7759 Active Energy Metering IC Driver</label>
						<help>Say yes here to build support for Analog Devices ADE7758 Active Energy
Metering IC with di/dt Sensor Interface.

To compile this driver as a module, choose M here: the
module will be called ade7759.</help>
					</entry>
					<entry name="ADE7854">
						<label>Analog Devices ADE7854/58/68/78 Polyphase Multifunction Energy Metering IC Driver</label>
						<help>Say yes here to build support for Analog Devices ADE7854/58/68/78 Polyphase
Multifunction Energy Metering IC Driver.

To compile this driver as a module, choose M here: the
module will be called ade7854.</help>
					</entry>
					<entry name="ADE7854_I2C">
						<label>support I2C bus connection</label>
						<help>Say Y here if you have ADE7854/58/68/78 hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called ade7854-i2c.</help>
					</entry>
					<entry name="ADE7854_SPI">
						<label>support SPI bus connection</label>
						<help>Say Y here if you have ADE7854/58/68/78 hooked to a SPI bus.

To compile this driver as a module, choose M here: the
module will be called ade7854-spi.</help>
					</entry>
				</container>
				<container name="Resolver_to_digital_converters">
					<label>Resolver to digital converters</label>
					<entry name="AD2S90">
						<label>Analog Devices ad2s90 driver</label>
						<help>Say yes here to build support for Analog Devices spi resolver
to digital converters, ad2s90, provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad2s90.</help>
					</entry>
					<entry name="AD2S1200">
						<label>Analog Devices ad2s1200/ad2s1205 driver</label>
						<help>Say yes here to build support for Analog Devices spi resolver
to digital converters, ad2s1200 and ad2s1205, provides direct access
via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad2s1200.</help>
					</entry>
					<entry name="AD2S1210">
						<label>Analog Devices ad2s1210 driver</label>
						<help>Say yes here to build support for Analog Devices spi resolver
to digital converters, ad2s1210, provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad2s1210.</help>
					</entry>
				</container>
				<entry name="IIO_BFIN_TMR_TRIGGER">
					<label>Blackfin TIMER trigger</label>
					<help>Provides support for using a Blackfin timer as IIO triggers.
If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called iio-trig-bfin-timer.</help>
				</entry>
			</container>
			<entry name="FB_SM750">
				<label>Silicon Motion SM750 framebuffer support</label>
				<help>Frame buffer driver for the Silicon Motion SM750 chip
with 2D accelearion and dual head support.

This driver is also available as a module. The module will be
called sm750fb. If you want to compile it as a module, say M
here and read &lt;file:Documentation/kbuild/modules.txt&gt;.
</help>
			</entry>
			<entry name="FB_XGI">
				<label>XGI display support</label>
				<help>This driver supports notebooks with XGI Z7,Z9,Z11 PCI chips.
Say Y if you have such a graphics card.
To compile this driver as a module, choose M here: the
module will be called xgifb.ko
</help>
			</entry>
			<entry name="USB_EMXX">
				<label>EMXX USB Function Device Controller</label>
				<help>The Emma Mobile series of SoCs from Renesas Electronics and
former NEC Electronics include USB Function hardware.

Say &quot;y&quot; to link the driver statically, or &quot;m&quot; to build a
dynamically linked module called &quot;emxx_udc&quot; and force all
gadget drivers to also be dynamically linked.
</help>
			</entry>
			<container name="Speakup_console_speech">
				<label>Speakup console speech</label>
				<entry name="SPEAKUP">
					<label>Speakup core</label>
					<help>This is the Speakup screen reader.  Think of it as a
video console for blind people.  If built in to the
kernel, it can speak everything on the text console from
boot up to shutdown.  For more information on Speakup,
point your browser at &lt;http://www.linux-speakup.org/&gt;.
There is also a mailing list at the above url that you
can subscribe to.

Supported synthesizers are accent sa, accent pc,
appollo II., Auddapter, Braille 'n Speak, Dectalk
external (old), Dectalk PC (full length isa board),
Dectalk express, Doubletalk, Doubletalk LT or
Litetalk, Keynote Gold internal PC, software
synthesizers, Speakout, transport, and a dummy module
that can be used with a plain text terminal.

Speakup can either be built in or compiled as a module
by answering y or m.  If you answer y here, then you
must answer either y or m to at least one of the
synthesizer drivers below.  If you answer m here, then
the synthesizer drivers below can only be built as
modules.

These drivers are not standalone drivers, but must be
used in conjunction with Speakup.  Think of them as
video cards for blind people.


The Dectalk pc driver can only be built as a module, and
requires software to be pre-loaded on to the card before
the module can be loaded.  See the decpc choice below
for more details.

If you are not a blind person, or don't have access to
one of the listed synthesizers, you should say n.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_ACNTSA">
					<label>Accent SA synthesizer support</label>
					<help>This is the Speakup driver for the Accent SA
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_ACNTPC">
					<label>Accent PC synthesizer support</label>
					<help>This is the Speakup driver for the accent pc
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_APOLLO">
					<label>Apollo II synthesizer support</label>
					<help>This is the Speakup driver for the Apollo II
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_AUDPTR">
					<label>Audapter synthesizer support</label>
					<help>This is the Speakup driver for the Audapter synthesizer.
You can say y to build it into the kernel, or m to
build it as a module.  See the configuration help on the
Speakup choice above for more info.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_BNS">
					<label>Braille 'n' Speak synthesizer support</label>
					<help>This is the Speakup driver for the Braille 'n' Speak
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.</help>
				</entry>
				<entry name="SPEAKUP_SYNTH_DECTLK">
					<label>DECtalk Express synthesizer support</label>
					<help>
This is the Speakup driver for the DecTalk Express
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.

config SPEAKUP_SYNTH_DECEXT
tristate &quot;DECtalk External (old) synthesizer support&quot;
---help---

This is the Speakup driver for the DecTalk External
(old) synthesizer.  You can say y to build it into the
kernel, or m to build it as a module.  See the
configuration help on the Speakup choice above for more
info.

config SPEAKUP_SYNTH_DECPC
depends on m
depends on ISA || COMPILE_TEST
tristate &quot;DECtalk PC (big ISA card) synthesizer support&quot;
---help---

This is the Speakup driver for the DecTalk PC (full
length ISA) synthesizer.  You can say m to build it as
a module.  See the configuration help on the Speakup
choice above for more info.

In order to use the DecTalk PC driver, you must download
the dec_pc.tgz file from linux-speakup.org.  It is in
the pub/linux/goodies directory.  The dec_pc.tgz file
contains the software which must be pre-loaded on to the
DecTalk PC board in order to use it with this driver.
This driver must be built as a module, and can not be
loaded until the file system is mounted and the DecTalk
PC software has been pre-loaded on to the board.

See the README file in the dec_pc.tgz file for more
details.

config SPEAKUP_SYNTH_DTLK
tristate &quot;DoubleTalk PC synthesizer support&quot;
depends on ISA || COMPILE_TEST
---help---

This is the Speakup driver for the internal DoubleTalk
PC synthesizer.  You can say y to build it into the
kernel, or m to build it as a module.  See the
configuration help on the Speakup choice above for more
info.

config SPEAKUP_SYNTH_KEYPC
tristate &quot;Keynote Gold PC synthesizer support&quot;
depends on ISA || COMPILE_TEST
---help---

This is the Speakup driver for the Keynote Gold
PC synthesizer.  You can say y to build it into the
kernel, or m to build it as a module.  See the
configuration help on the Speakup choice above for more
info.

config SPEAKUP_SYNTH_LTLK
tristate &quot;DoubleTalk LT/LiteTalk synthesizer support&quot;
---help---

This is the Speakup driver for the LiteTalk/DoubleTalk
LT synthesizer.  You can say y to build it into the
kernel, or m to build it as a module.  See the
configuration help on the Speakup choice above for more
info.

config SPEAKUP_SYNTH_SOFT
tristate &quot;Userspace software synthesizer support&quot;
---help---

This is the software synthesizer device node.  It will
register a device /dev/softsynth which midware programs
and speech daemons may open and read to provide kernel
output to software synths such as espeak, festival,
flite and so forth.  You can select 'y' or 'm' to have
it built-in to the kernel or loaded as a module.

config SPEAKUP_SYNTH_SPKOUT
tristate &quot;Speak Out synthesizer support&quot;
---help---

This is the Speakup driver for the Speakout synthesizer.
You can say y to build it into the kernel, or m to
build it as a module.  See the configuration help on the
Speakup choice above for more info.

config SPEAKUP_SYNTH_TXPRT
tristate &quot;Transport synthesizer support&quot;
---help---

This is the Speakup driver for the Transport
synthesizer.  You can say y to build it into the kernel,
or m to build it as a module.  See the configuration
help on the Speakup choice above for more info.

config SPEAKUP_SYNTH_DUMMY
tristate &quot;Dummy synthesizer driver (for testing)&quot;
---help---

This is a dummy Speakup driver for plugging a mere serial
terminal.  This is handy if you want to test speakup but
don't have the hardware.  You can say y to build it into
the kernel, or m to build it as a module.  See the
configuration help on the Speakup choice above for more info.

endif	# SPEAKUP
endmenu
</help>
				</entry>
			</container>
			<entry name="MFD_NVEC">
				<label>NV Tegra Embedded Controller SMBus Interface</label>
				<help>Say Y here to enable support for a nVidia compliant embedded
controller.

To compile this driver as a module, say M here: the module will be
called mfd-nvec</help>
			</entry>
			<entry name="KEYBOARD_NVEC">
				<label>Keyboard on nVidia compliant EC</label>
				<help>Say Y here to enable support for a keyboard connected to
a nVidia compliant embedded controller.

To compile this driver as a module, say M here: the module will be
called keyboard-nvec</help>
			</entry>
			<entry name="SERIO_NVEC_PS2">
				<label>PS2 on nVidia EC</label>
				<help>Say Y here to enable support for a Touchpad / Mouse connected
to a nVidia compliant embedded controller.

To compile this driver as a module, say M here: the module will be
called serio-nvec-ps2</help>
			</entry>
			<entry name="NVEC_POWER">
				<label>NVEC charger and battery</label>
				<help>Say Y to enable support for battery and charger interface for
nVidia compliant embedded controllers.

To compile this driver as a module, say M here: the module will be
called nvec-power</help>
			</entry>
			<entry name="NVEC_PAZ00">
				<label>Support for OEM specific functions on Compal PAZ00 based devices</label>
				<help>Say Y to enable control of the yellow side leds on Compal PAZ00 based
devices, e.g. Toshbia AC100 and Dynabooks AZ netbooks.

To compile this driver as a module, say M here: the module will be
called nvec-paz00

</help>
			</entry>
			<entry name="STAGING_MEDIA">
				<label>Media staging drivers</label>
				<help>This option allows you to select a number of media drivers that
don't have the &quot;normal&quot; Linux kernel quality level.
Most of them don't follow properly the V4L, DVB and/or RC API's,
so, they won't likely work fine with the existing applications.
That also means that, once fixed, their API's will change to match
the existing ones.

If you wish to work on these drivers, to help improve them, or
to report problems you have with them, please use the
linux-media@vger.kernel.org mailing list.

If in doubt, say N here.</help>
			</entry>
			<entry name="I2C_BCM2048">
				<label>Broadcom BCM2048 FM Radio Receiver support</label>
				<help>Say Y here if you want support to BCM2048 FM Radio Receiver.
This device driver supports only i2c bus.

To compile this driver as a module, choose M here: the
module will be called radio-bcm2048.
</help>
			</entry>
			<entry name="MEDIA_CEC">
				<label>CEC API (EXPERIMENTAL)</label>
				<help>Enable the CEC API.

To compile this driver as a module, choose M here: the
module will be called cec.</help>
			</entry>
			<entry name="MEDIA_CEC_DEBUG">
				<label>CEC debugfs interface (EXPERIMENTAL)</label>
				<help>Turns on the DebugFS interface for CEC devices.
</help>
			</entry>
			<entry name="DVB_CXD2099">
				<label>CXD2099AR Common Interface driver</label>
				<help>Support for the CI module found on cards based on
- Micronas ngene PCIe bridge: cineS2 etc.
- Digital Devices PCIe bridge: Octopus series

For now, data is passed through '/dev/dvb/adapterX/sec0':
- Encrypted data must be written to 'sec0'.
- Decrypted data can be read from 'sec0'.
- Setup the CAM using device 'ca0'.
</help>
			</entry>
			<entry name="VIDEO_DM365_VPFE">
				<label>DM365 VPFE Media Controller Capture Driver</label>
				<help>Support for DM365 VPFE based Media Controller Capture driver.

To compile this driver as a module, choose M here: the
module will be called vpfe-mc-capture.
</help>
			</entry>
			<entry name="VIDEO_OMAP4">
				<label>OMAP 4 Camera support</label>
				<help>Driver for an OMAP 4 ISS controller.
</help>
			</entry>
			<entry name="USB_PULSE8_CEC">
				<label>Pulse Eight HDMI CEC</label>
				<help>This is a cec driver for the Pulse Eight HDMI CEC device.

To compile this driver as a module, choose M here: the
module will be called pulse8-cec.
</help>
			</entry>
			<entry name="VIDEO_TW686X_KH">
				<label>Intersil/Techwell TW686x Video For Linux</label>
				<help>Support for Intersil/Techwell TW686x-based frame grabber cards.

Currently supported chips:
- TW6864 (4 video channels),
- TW6865 (4 video channels, not tested, second generation chip),
- TW6868 (8 video channels but only 4 first channels using
built-in video decoder are supported, not tested),
- TW6869 (8 video channels, second generation chip).

To compile this driver as a module, choose M here: the module
will be named tw686x-kh.
</help>
			</entry>
			<entry name="VIDEO_SAMSUNG_S5P_CEC">
				<label>Samsung S5P CEC driver</label>
				<help>This is a driver for Samsung S5P HDMI CEC interface. It uses the
generic CEC framework interface.
CEC bus is present in the HDMI connector and enables communication
between compatible devices.

</help>
			</entry>
			<entry name="LIRC_STAGING">
				<label>Linux Infrared Remote Control IR receiver/transmitter drivers</label>
				<help>Say Y here, and all supported Linux Infrared Remote Control IR and
RF receiver and transmitter drivers will be displayed. When paired
with a remote control and the lirc daemon, the receiver drivers
allow control of your Linux system via remote control.</help>
			</entry>
			<entry name="LIRC_BT829">
				<label>BT829 based hardware</label>
				<help>Driver for the IR interface on BT829-based hardware</help>
			</entry>
			<entry name="LIRC_IMON">
				<label>Legacy SoundGraph iMON Receiver and Display</label>
				<help>Driver for the original SoundGraph iMON IR Receiver and Display

Current generation iMON devices use the input layer imon driver.</help>
			</entry>
			<entry name="LIRC_PARALLEL">
				<label>Homebrew Parallel Port Receiver</label>
				<help>Driver for Homebrew Parallel Port Receivers</help>
			</entry>
			<entry name="LIRC_SASEM">
				<label>Sasem USB IR Remote</label>
				<help>Driver for the Sasem OnAir Remocon-V or Dign HV5 HTPC IR/VFD Module</help>
			</entry>
			<entry name="LIRC_SERIAL">
				<label>Homebrew Serial Port Receiver</label>
				<help>Driver for Homebrew Serial Port Receivers</help>
			</entry>
			<entry name="LIRC_SERIAL_TRANSMITTER">
				<label>Serial Port Transmitter</label>
				<help>Serial Port Transmitter support</help>
			</entry>
			<entry name="LIRC_SIR">
				<label>Built-in SIR IrDA port</label>
				<help>Driver for the SIR IrDA port</help>
			</entry>
			<entry name="LIRC_ZILOG">
				<label>Zilog/Hauppauge IR Transmitter</label>
				<help>Driver for the Zilog/Hauppauge IR Transmitter, found on
PVR-150/500, HVR-1200/1250/1700/1800, HD-PVR and other cards</help>
			</entry>
			<container name="Android">
				<label>Android</label>
				<entry name="ASHMEM">
					<label>Enable the Anonymous Shared Memory Subsystem</label>
					<help>The ashmem subsystem is a new shared memory allocator, similar to
POSIX SHM but with different behavior and sporting a simpler
file-based API.

It is, in theory, a good memory allocator for low-memory devices,
because it can discard shared memory units when under memory pressure.</help>
				</entry>
				<entry name="ANDROID_LOW_MEMORY_KILLER">
					<label>Android Low Memory Killer</label>
					<help>Registers processes to be killed when low memory conditions, this is useful
as there is no particular swap space on android.

The registered process will kill according to the priorities in android init
scripts (/init.rc), and it defines priority values with minimum free memory size
for each priority.</help>
				</entry>
				<entry name="SW_SYNC">
					<label>Software synchronization framework</label>
					<help>A sync object driver that uses a 32bit counter to coordinate
synchronization.  Useful when there is no hardware primitive backing
the synchronization.

WARNING: improper use of this can result in deadlocking kernel
drivers from userspace. Intended for test and debug only.</help>
				</entry>
				<entry name="ION">
					<label>Ion Memory Manager</label>
					<help>Chose this option to enable the ION Memory Manager,
used by Android to efficiently allocate buffers
from userspace that can be shared between drivers.
If you're not using Android its probably safe to
say N here.</help>
				</entry>
				<entry name="ION_TEST">
					<label>Ion Test Device</label>
					<help>Choose this option to create a device that can be used to test the
kernel and device side ION functions.</help>
				</entry>
				<entry name="ION_DUMMY">
					<label>Dummy Ion driver</label>
					<help>Provides a dummy ION driver that registers the
/dev/ion device and some basic heaps. This can
be used for testing the ION infrastructure if
one doesn't have access to hardware drivers that
use ION.</help>
				</entry>
				<entry name="ION_TEGRA">
					<label>Ion for Tegra</label>
					<help>Choose this option if you wish to use ion on an nVidia Tegra.</help>
				</entry>
				<entry name="ION_HISI">
					<label>Ion for Hisilicon</label>
					<help>Choose this option if you wish to use ion on Hisilicon Platform.</help>
				</entry>
				<entry name="HI6220_ION">
					<label>Hi6220 ION Driver</label>
					<help>Build the Hisilicon Hi6220 ion driver.
</help>
				</entry>
			</container>
			<entry name="STAGING_BOARD">
				<label>Staging Board Support</label>
				<help>Select to enable per-board staging support code.

If in doubt, say N here.

</help>
			</entry>
			<entry name="LTE_GDM724X">
				<label>GCT GDM724x LTE support</label>
				<help>This driver supports GCT GDM724x LTE chip based USB modem devices.
It exposes 4 network devices to be used per PDN and 2 tty devices to be
used for AT commands and DM monitoring applications.
The modules will be called gdmulte.ko and gdmtty.ko

GCT-ATCx can be used for AT Commands
GCT-DMx can be used for LTE protocol monitoring
</help>
			</entry>
			<entry name="FIREWIRE_SERIAL">
				<label>TTY over Firewire</label>
				<help>This enables TTY over IEEE 1394, providing high-speed serial
connectivity to cabled peers. This driver implements a
ad-hoc transport protocol and is currently limited to
Linux-to-Linux communication.

To compile this driver as a module, say M here:  the module will
be called firewire-serial.</help>
			</entry>
			<entry name="FWTTY_MAX_TOTAL_PORTS">
				<label>Maximum number of serial ports supported</label>
				<help>Set this to the maximum number of serial ports you want the
firewire-serial driver to support.</help>
			</entry>
			<entry name="FWTTY_MAX_CARD_PORTS">
				<label>Maximum number of serial ports supported per adapter</label>
				<help>Set this to the maximum number of serial ports each firewire
adapter supports. The actual number of serial ports registered
is set with the module parameter &quot;ttys&quot;.</help>
			</entry>
			<entry name="GOLDFISH_AUDIO">
				<label>Goldfish AVD Audio Device</label>
				<help>Emulated audio channel for the Goldfish Android Virtual Device</help>
			</entry>
			<entry name="MTD_GOLDFISH_NAND">
				<label>Goldfish NAND device</label>
				<help>Drives the emulated NAND flash device on the Google Goldfish
Android virtual device.
</help>
			</entry>
			<entry name="NETLOGIC_XLR_NET">
				<label>Netlogic XLR/XLS network device</label>
				<help>This driver support Netlogic XLR/XLS on chip gigabit
Ethernet.
</help>
			</entry>
			<entry name="MTD_SPINAND_MT29F">
				<label>SPINAND Device Support for Micron</label>
				<help>This enables support for accessing Micron SPI NAND flash
devices.
If you have Micron SPI NAND chip say yes.

If unsure, say no here.</help>
			</entry>
			<entry name="MTD_SPINAND_ONDIEECC">
				<label>Use SPINAND internal ECC</label>
				<help>Internal ECC.
Enables Hardware ECC support for Micron SPI NAND.
</help>
			</entry>
			<entry name="LNET">
				<label>Lustre networking subsystem (LNet)</label>
				<help>The Lustre network layer, also known as LNet, is a networking abstaction
level API that was initially created to allow Lustre Filesystem to utilize
very different networks like tcp and ib verbs in a uniform way. In the
case of Lustre routers only the LNet layer is required. Lately other
projects are also looking into using LNet as their networking API as well.</help>
			</entry>
			<entry name="LNET_MAX_PAYLOAD">
				<label>Lustre lnet max transfer payload (default 1MB)</label>
				<help>This option defines the maximum size of payload in bytes that lnet
can put into its transport.

If unsure, use default.</help>
			</entry>
			<entry name="LNET_SELFTEST">
				<label>Lustre networking self testing</label>
				<help>Choose Y here if you want to do lnet self testing. To compile this
as a module, choose M here: the module will be called lnet_selftest.

To compile this as a kernel modules, choose M here and it will be
called lnet_selftest.

If unsure, say N.

See also http://wiki.lustre.org/</help>
			</entry>
			<entry name="LNET_XPRT_IB">
				<label>LNET infiniband support</label>
				<help>This option allows the LNET users to use infiniband as an
RDMA-enabled transport.

To compile this as a kernel module, choose M here and it will be
called ko2iblnd.

If unsure, say N.
</help>
			</entry>
			<entry name="LUSTRE_FS">
				<label>Lustre file system client support</label>
				<help>This option enables Lustre file system client support. Choose Y
here if you want to access a Lustre file system cluster. To compile
this file system support as a module, choose M here: the module will
be called lustre.

To mount Lustre file systems, you also need to install the user space
mount.lustre and other user space commands which can be found in the
lustre-client package, available from
http://downloads.whamcloud.com/public/lustre/

Lustre file system is the most popular cluster file system in high
performance computing. Source code of both kernel space and user space
Lustre components can also be found at
http://git.whamcloud.com/?p=fs/lustre-release.git;a=summary

If unsure, say N.

See also http://wiki.lustre.org/</help>
			</entry>
			<entry name="LUSTRE_OBD_MAX_IOCTL_BUFFER">
				<label>Lustre obd max ioctl buffer bytes (default 8KB)</label>
				<help>This option defines the maximum size of buffer in bytes that user space
applications can pass to Lustre kernel module through ioctl interface.

If unsure, use default.</help>
			</entry>
			<entry name="LUSTRE_DEBUG_EXPENSIVE_CHECK">
				<label>Enable Lustre DEBUG checks</label>
				<help>This option is mainly for debug purpose. It enables Lustre code to do
expensive checks that may have a performance impact.

Use with caution. If unsure, say N.</help>
			</entry>
			<entry name="LUSTRE_TRANSLATE_ERRNOS"/>
			<entry name="DGNC">
				<label>Digi Neo and Classic PCI Products</label>
				<help>Driver for the Digi International Neo and Classic PCI based product line.
</help>
			</entry>
			<entry name="GS_FPGABOOT">
				<label>Xilinx FPGA firmware download module</label>
				<help>Xilinx FPGA firmware download module
</help>
			</entry>
			<entry name="CRYPTO_SKEIN">
				<label>Skein digest algorithm</label>
				<help>Skein secure hash algorithm is one of 5 finalists from the NIST SHA3
competition.

Skein is optimized for modern, 64bit processors and is highly
customizable.  See:

http://www.skein-hash.info/sites/default/files/skein1.3.pdf

for more information. This module also contains the threefish block
cipher algorithm.
</help>
			</entry>
			<entry name="UNISYSSPAR">
				<label>Unisys SPAR driver support</label>
				<help>Support for the Unisys SPAR drivers</help>
			</entry>
			<entry name="UNISYS_VISORBUS">
				<label>Unisys visorbus driver</label>
				<help>The visorbus driver is a virtualized bus for the Unisys s-Par firmware.
Virtualized devices allow Linux guests on a system to share disks and
network cards that do not have SR-IOV support, and to be accessed using
the partition desktop application. The visorbus driver is required to
discover devices on an s-Par guest, and must be present for any other
s-Par guest driver to function correctly.
</help>
			</entry>
			<entry name="UNISYS_VISORNIC">
				<label>Unisys visornic driver</label>
				<help>The Unisys Visornic driver provides support for s-Par network
devices exposed on the s-Par visorbus. When a message is sent
to visorbus to create a network device, the probe function of
visornic is called to create the netdev device. Networking on
s-Par switches will not work if this driver is not selected.
If you say Y here, you will enable the Unisys visornic driver.

</help>
			</entry>
			<entry name="UNISYS_VISORINPUT">
				<label>Unisys visorinput driver</label>
				<help>The Unisys s-Par visorinput driver provides a virtualized system
console (keyboard and mouse) that is accessible through the
s-Par firmware's user interface. s-Par provides video using the EFI
GOP protocol, so If this driver is not present, the Linux guest should
still boot with visible output in the partition desktop, but keyboard
and mouse interaction will not be available.

</help>
			</entry>
			<entry name="UNISYS_VISORHBA">
				<label>Unisys visorhba driver</label>
				<help>The Unisys visorhba driver provides support for s-Par HBA
devices exposed on the s-Par visorbus. When a message is sent
to visorbus to create a HBA device, the probe function of
visorhba is called to create the scsi device.
If you say Y here, you will enable the Unisys visorhba driver.

</help>
			</entry>
			<entry name="COMMON_CLK_XLNX_CLKWZRD">
				<label>Xilinx Clocking Wizard</label>
				<help>Support for the Xilinx Clocking Wizard IP core clock generator.
</help>
			</entry>
			<entry name="FB_TFT">
				<label>Support for small TFT LCD display modules</label>
			</entry>
			<entry name="FB_TFT_AGM1264K_FL">
				<label>FB driver for the AGM1264K-FL LCD display</label>
				<help>Framebuffer support for the AGM1264K-FL LCD display (two Samsung KS0108 compatible chips)</help>
			</entry>
			<entry name="FB_TFT_BD663474">
				<label>FB driver for the BD663474 LCD Controller</label>
				<help>Generic Framebuffer support for BD663474</help>
			</entry>
			<entry name="FB_TFT_HX8340BN">
				<label>FB driver for the HX8340BN LCD Controller</label>
				<help>Generic Framebuffer support for HX8340BN</help>
			</entry>
			<entry name="FB_TFT_HX8347D">
				<label>FB driver for the HX8347D LCD Controller</label>
				<help>Generic Framebuffer support for HX8347D</help>
			</entry>
			<entry name="FB_TFT_HX8353D">
				<label>FB driver for the HX8353D LCD Controller</label>
				<help>Generic Framebuffer support for HX8353D</help>
			</entry>
			<entry name="FB_TFT_HX8357D">
				<label>FB driver for the HX8357D LCD Controller</label>
				<help>Generic Framebuffer support for HX8357D</help>
			</entry>
			<entry name="FB_TFT_ILI9163">
				<label>FB driver for the ILI9163 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9163</help>
			</entry>
			<entry name="FB_TFT_ILI9320">
				<label>FB driver for the ILI9320 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9320</help>
			</entry>
			<entry name="FB_TFT_ILI9325">
				<label>FB driver for the ILI9325 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9325</help>
			</entry>
			<entry name="FB_TFT_ILI9340">
				<label>FB driver for the ILI9340 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9340</help>
			</entry>
			<entry name="FB_TFT_ILI9341">
				<label>FB driver for the ILI9341 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9341</help>
			</entry>
			<entry name="FB_TFT_ILI9481">
				<label>FB driver for the ILI9481 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9481</help>
			</entry>
			<entry name="FB_TFT_ILI9486">
				<label>FB driver for the ILI9486 LCD Controller</label>
				<help>Generic Framebuffer support for ILI9486</help>
			</entry>
			<entry name="FB_TFT_PCD8544">
				<label>FB driver for the PCD8544 LCD Controller</label>
				<help>Generic Framebuffer support for PCD8544</help>
			</entry>
			<entry name="FB_TFT_RA8875">
				<label>FB driver for the RA8875 LCD Controller</label>
				<help>Generic Framebuffer support for RA8875</help>
			</entry>
			<entry name="FB_TFT_S6D02A1">
				<label>FB driver for the S6D02A1 LCD Controller</label>
				<help>Generic Framebuffer support for S6D02A1</help>
			</entry>
			<entry name="FB_TFT_S6D1121">
				<label>FB driver for the S6D1211 LCD Controller</label>
				<help>Generic Framebuffer support for S6D1121</help>
			</entry>
			<entry name="FB_TFT_SSD1289">
				<label>FB driver for the SSD1289 LCD Controller</label>
				<help>Framebuffer support for SSD1289</help>
			</entry>
			<entry name="FB_TFT_SSD1305">
				<label>FB driver for the SSD1305 OLED Controller</label>
				<help>Framebuffer support for SSD1305</help>
			</entry>
			<entry name="FB_TFT_SSD1306">
				<label>FB driver for the SSD1306 OLED Controller</label>
				<help>Framebuffer support for SSD1306</help>
			</entry>
			<entry name="FB_TFT_SSD1325">
				<label>FB driver for the SSD1325 OLED Controller</label>
				<help>Framebuffer support for SSD1305</help>
			</entry>
			<entry name="FB_TFT_SSD1331">
				<label>FB driver for the SSD1331 LCD Controller</label>
				<help>Framebuffer support for SSD1331</help>
			</entry>
			<entry name="FB_TFT_SSD1351">
				<label>FB driver for the SSD1351 LCD Controller</label>
				<help>Framebuffer support for SSD1351</help>
			</entry>
			<entry name="FB_TFT_ST7735R">
				<label>FB driver for the ST7735R LCD Controller</label>
				<help>Generic Framebuffer support for ST7735R</help>
			</entry>
			<entry name="FB_TFT_ST7789V">
				<label>FB driver for the ST7789V LCD Controller</label>
				<help>This enables generic framebuffer support for the Sitronix ST7789V
display controller. The controller is intended for small color
displays with a resolution of up to 320x240 pixels.

Say Y if you have such a display that utilizes this controller.</help>
			</entry>
			<entry name="FB_TFT_TINYLCD">
				<label>FB driver for tinylcd.com display</label>
				<help>Custom Framebuffer support for tinylcd.com display</help>
			</entry>
			<entry name="FB_TFT_TLS8204">
				<label>FB driver for the TLS8204 LCD Controller</label>
				<help>Generic Framebuffer support for TLS8204</help>
			</entry>
			<entry name="FB_TFT_UC1611">
				<label>FB driver for the UC1611 LCD controller</label>
				<help>Generic Framebuffer support for UC1611</help>
			</entry>
			<entry name="FB_TFT_UC1701">
				<label>FB driver for the UC1701 LCD Controller</label>
				<help>Generic Framebuffer support for UC1701</help>
			</entry>
			<entry name="FB_TFT_UPD161704">
				<label>FB driver for the uPD161704 LCD Controller</label>
				<help>Generic Framebuffer support for uPD161704</help>
			</entry>
			<entry name="FB_TFT_WATTEROTT">
				<label>FB driver for the WATTEROTT LCD Controller</label>
				<help>Generic Framebuffer support for WATTEROTT</help>
			</entry>
			<entry name="FB_FLEX">
				<label>Generic FB driver for TFT LCD displays</label>
				<help>Generic Framebuffer support for TFT LCD displays.</help>
			</entry>
			<entry name="FB_TFT_FBTFT_DEVICE">
				<label>Module to for adding FBTFT devices</label>
			</entry>
			<entry name="FSL_MC_BUS">
				<label>Freescale Management Complex (MC) bus driver</label>
				<help>Driver to enable the bus infrastructure for the Freescale
QorIQ Management Complex (fsl-mc). The fsl-mc is a hardware
module of the QorIQ LS2 SoCs, that does resource management
for hardware building-blocks in the SoC that can be used
to dynamically create networking hardware objects such as
network interfaces (NICs), crypto accelerator instances,
or L2 switches.

Only enable this option when building the kernel for
Freescale QorQIQ LS2xxxx SoCs.


</help>
			</entry>
			<entry name="WILC1000">
				<help>This module only support IEEE 802.11n WiFi.</help>
			</entry>
			<entry name="WILC1000_SDIO">
				<label>Atmel WILC1000 SDIO (WiFi only)</label>
				<help>This module adds support for the SDIO interface of adapters using
WILC1000 chipset. The Atmel WILC1000 SDIO is a full speed interface.
It meets SDIO card specification version 2.0. The interface supports
the 1-bit/4-bit SD transfer mode at the clock range of 0-50 MHz.
The host can use this interface to read and write from any register
within the chip as well as configure the WILC1000 for data DMA.
To use this interface, pin9 (SDIO_SPI_CFG) must be grounded. Select
this if your platform is using the SDIO bus.</help>
			</entry>
			<entry name="WILC1000_SPI">
				<label>Atmel WILC1000 SPI (WiFi only)</label>
				<help>This module adds support for the SPI interface of adapters using
WILC1000 chipset. The Atmel WILC1000 has a Serial Peripheral
Interface (SPI) that operates as a SPI slave. This SPI interface can
be used for control and for serial I/O of 802.11 data. The SPI is a
full-duplex slave synchronous serial interface that is available
immediately following reset when pin 9 (SDIO_SPI_CFG) is tied to
VDDIO. Select this if your platform is using the SPI bus.</help>
			</entry>
			<entry name="WILC1000_HW_OOB_INTR">
				<label>WILC1000 out of band interrupt</label>
				<help>This option enables out-of-band interrupt support for the WILC1000
chipset. This OOB interrupt is intended to provide a faster interrupt
mechanism for SDIO host controllers that don't support SDIO interrupt.
Select this option If the SDIO host controller in your platform
doesn't support SDIO time devision interrupt.
</help>
			</entry>
			<entry name="MOST">
				<label>MOST driver</label>
				<help>This option allows you to enable support for MOST Network transceivers.

If in doubt, say N here.</help>
			</entry>
			<entry name="MOSTCORE">
				<label>MOST Core</label>
				<help>Say Y here if you want to enable MOST support.
This device driver needs at least an additional AIM and HDM to work.

To compile this driver as a module, choose M here: the
module will be called mostcore.
</help>
			</entry>
			<entry name="AIM_CDEV">
				<label>Cdev AIM</label>
				<help>Say Y here if you want to commumicate via character devices.

To compile this driver as a module, choose M here: the
module will be called aim_cdev.
</help>
			</entry>
			<entry name="AIM_NETWORK">
				<label>Networking AIM</label>
				<help>Say Y here if you want to commumicate via a networking device.

To compile this driver as a module, choose M here: the
module will be called aim_network.
</help>
			</entry>
			<entry name="AIM_SOUND">
				<label>ALSA AIM</label>
				<help>Say Y here if you want to commumicate via ALSA/sound devices.

To compile this driver as a module, choose M here: the
module will be called aim_sound.
</help>
			</entry>
			<entry name="AIM_V4L2">
				<label>V4L2 AIM</label>
				<help>Say Y here if you want to commumicate via Video 4 Linux.

To compile this driver as a module, choose M here: the
module will be called aim_v4l2.
</help>
			</entry>
			<entry name="HDM_DIM2">
				<label>DIM2 HDM</label>
				<help>Say Y here if you want to connect via MediaLB to network transceiver.
This device driver is platform dependent and needs an additional
platform driver to be installed. For more information contact
maintainer of this driver.

To compile this driver as a module, choose M here: the
module will be called hdm_dim2.
</help>
			</entry>
			<entry name="HDM_I2C">
				<label>I2C HDM</label>
				<help>Say Y here if you want to connect via I2C to network tranceiver.

To compile this driver as a module, choose M here: the
module will be called hdm_i2c.
</help>
			</entry>
			<entry name="HDM_USB">
				<label>USB HDM</label>
				<help>Say Y here if you want to connect via USB to network tranceiver.
This device driver depends on the networking AIM.

To compile this driver as a module, choose M here: the
module will be called hdm_usb.
</help>
			</entry>
			<container name="Old_ISDN4Linux_deprecated_">
				<label>Old ISDN4Linux (deprecated)</label>
				<entry name="ISDN_DRV_ICN">
					<label>ICN 2B and 4B support</label>
					<help>This enables support for two kinds of ISDN-cards made by a German
company called ICN.  2B is the standard version for a single ISDN
line with two B-channels, 4B supports two ISDN lines.  For running
this card, additional firmware is necessary, which has to be
downloaded into the card using a utility which is distributed
separately.  See &lt;file:Documentation/isdn/README&gt; and
&lt;file:Documentation/isdn/README.icn&gt; for more
information.
</help>
				</entry>
				<entry name="ISDN_DRV_PCBIT">
					<label>PCBIT-D support</label>
					<help>This enables support for the PCBIT ISDN-card.  This card is
manufactured in Portugal by Octal.  For running this card,
additional firmware is necessary, which has to be downloaded into
the card using a utility which is distributed separately.  See
&lt;file:Documentation/isdn/README&gt; and
&lt;file:Documentation/isdn/README.pcbit&gt; for more information.
</help>
				</entry>
				<entry name="ISDN_DRV_ACT2000">
					<label>IBM Active 2000 support</label>
					<help>Say Y here if you have an IBM Active 2000 ISDN card. In order to use
this card, additional firmware is necessary, which has to be loaded
into the card using a utility which is part of the latest
isdn4k-utils package. Please read the file
&lt;file:Documentation/isdn/README.act2000&gt; for more information.
</help>
				</entry>
			</container>
			<entry name="KS7010">
				<label>KeyStream KS7010 SDIO support</label>
				<help>This is a driver for KeyStream KS7010 based SDIO WIFI cards. It is
found on at least later Spectec SDW-821 (FCC-ID &quot;S2Y-WLAN-11G-K&quot; only,
sadly not FCC-ID &quot;S2Y-WLAN-11B-G&quot;) and Spectec SDW-823 microSD cards.
</help>
			</entry>
			<entry name="X86_PLATFORM_DEVICES">
				<label>X86 Platform Specific Device Drivers</label>
				<help>Say Y here to get to see options for device drivers for various
x86 platforms, including vendor-specific laptop extension drivers.
This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="ACER_WMI">
				<label>Acer WMI Laptop Extras</label>
				<help>This is a driver for newer Acer (and Wistron) laptops. It adds
wireless radio and bluetooth control, and on some laptops,
exposes the mail LED and LCD backlight.

If you have an ACPI-WMI compatible Acer/ Wistron laptop, say Y or M
here.</help>
			</entry>
			<entry name="ACERHDF">
				<label>Acer Aspire One temperature and fan driver</label>
				<help>This is a driver for Acer Aspire One netbooks. It allows to access
the temperature sensor and to control the fan.

After loading this driver the BIOS is still in control of the fan.
To let the kernel handle the fan, do:
echo -n enabled &gt; /sys/class/thermal/thermal_zone0/mode

For more information about this driver see
&lt;http://piie.net/files/acerhdf_README.txt&gt;

If you have an Acer Aspire One netbook, say Y or M
here.</help>
			</entry>
			<entry name="ALIENWARE_WMI">
				<label>Alienware Special feature control</label>
				<help>This is a driver for controlling Alienware BIOS driven
features.  It exposes an interface for controlling the AlienFX
zones on Alienware machines that don't contain a dedicated AlienFX
USB MCU such as the X51 and X51-R2.</help>
			</entry>
			<entry name="ASUS_LAPTOP">
				<label>Asus Laptop Extras</label>
				<help>This is a driver for Asus laptops, Lenovo SL and the Pegatron
Lucid tablet. It may also support some MEDION, JVC or VICTOR
laptops. It makes all the extra buttons generate standard
ACPI events and input events, and on the Lucid the built-in
accelerometer appears as an input device.  It also adds
support for video output switching, LCD backlight control,
Bluetooth and Wlan control, and most importantly, allows you
to blink those fancy LEDs.

For more information see &lt;http://acpi4asus.sf.net&gt;.

If you have an ACPI-compatible ASUS laptop, say Y or M here.</help>
			</entry>
			<entry name="DELL_SMBIOS">
				<label>Dell SMBIOS Support</label>
				<help>This module provides common functions for kernel modules using
Dell SMBIOS.

If you have a Dell laptop, say Y or M here.</help>
			</entry>
			<entry name="DELL_LAPTOP">
				<label>Dell Laptop Extras</label>
				<help>This driver adds support for rfkill and backlight control to Dell
laptops (except for some models covered by the Compal driver).</help>
			</entry>
			<entry name="DELL_WMI">
				<label>Dell WMI extras</label>
				<help>Say Y here if you want to support WMI-based hotkeys on Dell laptops.

To compile this driver as a module, choose M here: the module will
be called dell-wmi.</help>
			</entry>
			<entry name="DELL_WMI_AIO">
				<label>WMI Hotkeys for Dell All-In-One series</label>
				<help>Say Y here if you want to support WMI-based hotkeys on Dell
All-In-One machines.

To compile this driver as a module, choose M here: the module will
be called dell-wmi-aio.</help>
			</entry>
			<entry name="DELL_SMO8800">
				<label>Dell Latitude freefall driver (ACPI SMO88XX)</label>
				<help>Say Y here if you want to support SMO88XX freefall devices
on Dell Latitude laptops.

To compile this driver as a module, choose M here: the module will
be called dell-smo8800.</help>
			</entry>
			<entry name="DELL_RBTN">
				<label>Dell Airplane Mode Switch driver</label>
				<help>Say Y here if you want to support Dell Airplane Mode Switch ACPI
device on Dell laptops. Sometimes it has names: DELLABCE or DELRBTN.
This driver register rfkill device or input hotkey device depending
on hardware type (hw switch slider or keyboard toggle button). For
rfkill devices it receive HW switch events and set correct hard
rfkill state.

To compile this driver as a module, choose M here: the module will
be called dell-rbtn.</help>
			</entry>
			<entry name="FUJITSU_LAPTOP">
				<label>Fujitsu Laptop Extras</label>
				<help>This is a driver for laptops built by Fujitsu:

* P2xxx/P5xxx/S6xxx/S7xxx series Lifebooks
* Possibly other Fujitsu laptop models
* Tested with S6410 and S7020

It adds support for LCD brightness control and some hotkeys.

If you have a Fujitsu laptop, say Y or M here.</help>
			</entry>
			<entry name="FUJITSU_LAPTOP_DEBUG">
				<label>Verbose debug mode for Fujitsu Laptop Extras</label>
				<help>Enables extra debug output from the fujitsu extras driver, at the
expense of a slight increase in driver size.

If you are not sure, say N here.</help>
			</entry>
			<entry name="FUJITSU_TABLET">
				<label>Fujitsu Tablet Extras</label>
				<help>This is a driver for tablets built by Fujitsu:

* Lifebook P1510/P1610/P1620/Txxxx
* Stylistic ST5xxx
* Possibly other Fujitsu tablet models

It adds support for the panel buttons, docking station detection,
tablet/notebook mode detection for convertible and
orientation detection for docked slates.

If you have a Fujitsu convertible or slate, say Y or M here.</help>
			</entry>
			<entry name="AMILO_RFKILL">
				<label>Fujitsu-Siemens Amilo rfkill support</label>
				<help>This is a driver for enabling wifi on some Fujitsu-Siemens Amilo
laptops.</help>
			</entry>
			<entry name="TC1100_WMI">
				<label>HP Compaq TC1100 Tablet WMI Extras</label>
				<help>This is a driver for the WMI extensions (wireless and bluetooth power
control) of the HP Compaq TC1100 tablet.</help>
			</entry>
			<entry name="HP_ACCEL">
				<label>HP laptop accelerometer</label>
				<help>This driver provides support for the &quot;Mobile Data Protection System 3D&quot;
or &quot;3D DriveGuard&quot; feature of HP laptops. On such systems the driver
should load automatically (via ACPI alias).

Support for a led indicating disk protection will be provided as
hp::hddprotect. For more information on the feature, refer to
Documentation/misc-devices/lis3lv02d.

To compile this driver as a module, choose M here: the module will
be called hp_accel.</help>
			</entry>
			<entry name="HP_WIRELESS">
				<label>HP wireless button</label>
				<help>This driver provides supports for new HP wireless button for Windows 8.
On such systems the driver should load automatically (via ACPI alias).

To compile this driver as a module, choose M here: the module will
be called hp-wireless.</help>
			</entry>
			<entry name="HP_WMI">
				<label>HP WMI extras</label>
				<help>Say Y here if you want to support WMI-based hotkeys on HP laptops and
to read data from WMI such as docking or ambient light sensor state.

To compile this driver as a module, choose M here: the module will
be called hp-wmi.</help>
			</entry>
			<entry name="MSI_LAPTOP">
				<label>MSI Laptop Extras</label>
				<help>This is a driver for laptops built by MSI (MICRO-STAR
INTERNATIONAL):

MSI MegaBook S270 (MS-1013)
Cytron/TCM/Medion/Tchibo MD96100/SAM2000

It adds support for Bluetooth, WLAN and LCD brightness control.

More information about this driver is available at
&lt;http://0pointer.de/lennart/tchibo.html&gt;.

If you have an MSI S270 laptop, say Y or M here.</help>
			</entry>
			<entry name="PANASONIC_LAPTOP">
				<label>Panasonic Laptop Extras</label>
				<help>This driver adds support for access to backlight control and hotkeys
on Panasonic Let's Note laptops.

If you have a Panasonic Let's note laptop (such as the R1(N variant),
R2, R3, R5, T2, W2 and Y2 series), say Y.</help>
			</entry>
			<entry name="COMPAL_LAPTOP">
				<label>Compal (and others) Laptop Extras</label>
				<help>This is a driver for laptops built by Compal, and some models by
other brands (e.g. Dell, Toshiba).

It adds support for rfkill, Bluetooth, WLAN, LCD brightness, hwmon
and battery charging level control.

For a (possibly incomplete) list of supported laptops, please refer
to: Documentation/platform/x86-laptop-drivers.txt</help>
			</entry>
			<entry name="SONY_LAPTOP">
				<label>Sony Laptop Extras</label>
				<help>This mini-driver drives the SNC and SPIC devices present in the ACPI
BIOS of the Sony Vaio laptops.

It gives access to some extra laptop functionalities like Bluetooth,
screen brightness control, Fn keys and allows powering on/off some
devices.

Read &lt;file:Documentation/laptops/sony-laptop.txt&gt; for more information.</help>
			</entry>
			<entry name="SONYPI_COMPAT">
				<label>Sonypi compatibility</label>
				<help>Build the sonypi driver compatibility code into the sony-laptop driver.</help>
			</entry>
			<entry name="IDEAPAD_LAPTOP">
				<label>Lenovo IdeaPad Laptop Extras</label>
				<help>This is a driver for Lenovo IdeaPad netbooks contains drivers for
rfkill switch, hotkey, fan control and backlight control.</help>
			</entry>
			<entry name="THINKPAD_ACPI">
				<label>ThinkPad ACPI Laptop Extras</label>
				<help>This is a driver for the IBM and Lenovo ThinkPad laptops. It adds
support for Fn-Fx key combinations, Bluetooth control, video
output switching, ThinkLight control, UltraBay eject and more.
For more information about this driver see
&lt;file:Documentation/laptops/thinkpad-acpi.txt&gt; and
&lt;http://ibm-acpi.sf.net/&gt; .

This driver was formerly known as ibm-acpi.

Extra functionality will be available if the rfkill (CONFIG_RFKILL)
and/or ALSA (CONFIG_SND) subsystems are available in the kernel.
Note that if you want ThinkPad-ACPI to be built-in instead of
modular, ALSA and rfkill will also have to be built-in.

If you have an IBM or Lenovo ThinkPad laptop, say Y or M here.</help>
			</entry>
			<entry name="THINKPAD_ACPI_ALSA_SUPPORT">
				<label>Console audio control ALSA interface</label>
				<help>Enables monitoring of the built-in console audio output control
(headphone and speakers), which is operated by the mute and (in
some ThinkPad models) volume hotkeys.

If this option is enabled, ThinkPad-ACPI will export an ALSA card
with a single read-only mixer control, which should be used for
on-screen-display feedback purposes by the Desktop Environment.

Optionally, the driver will also allow software control (the
ALSA mixer will be made read-write).  Please refer to the driver
documentation for details.

All IBM models have both volume and mute control.  Newer Lenovo
models only have mute control (the volume hotkeys are just normal
keys and volume control is done through the main HDA mixer).</help>
			</entry>
			<entry name="THINKPAD_ACPI_DEBUGFACILITIES">
				<label>Maintainer debug facilities</label>
				<help>Enables extra stuff in the thinkpad-acpi which is completely useless
for normal use.  Read the driver source to find out what it does.

Say N here, unless you were told by a kernel maintainer to do
otherwise.</help>
			</entry>
			<entry name="THINKPAD_ACPI_DEBUG">
				<label>Verbose debug mode</label>
				<help>Enables extra debugging information, at the expense of a slightly
increase in driver size.

If you are not sure, say N here.</help>
			</entry>
			<entry name="THINKPAD_ACPI_UNSAFE_LEDS">
				<label>Allow control of important LEDs (unsafe)</label>
				<help>Overriding LED state on ThinkPads can mask important
firmware alerts (like critical battery condition), or misled
the user into damaging the hardware (undocking or ejecting
the bay while buses are still active), etc.

LED control on the ThinkPad is write-only (with very few
exceptions on very ancient models), which makes it
impossible to know beforehand if important information will
be lost when one changes LED state.

Users that know what they are doing can enable this option
and the driver will allow control of every LED, including
the ones on the dock stations.

Never enable this option on a distribution kernel.

Say N here, unless you are building a kernel for your own
use, and need to control the important firmware LEDs.</help>
			</entry>
			<entry name="THINKPAD_ACPI_VIDEO">
				<label>Video output control support</label>
				<help>Allows the thinkpad_acpi driver to provide an interface to control
the various video output ports.

This feature often won't work well, depending on ThinkPad model,
display state, video output devices in use, whether there is a X
server running, phase of the moon, and the current mood of
Schroedinger's cat.  If you can use X.org's RandR to control
your ThinkPad's video output ports instead of this feature,
don't think twice: do it and say N here to save memory and avoid
bad interactions with X.org.

NOTE: access to this feature is limited to processes with the
CAP_SYS_ADMIN capability, to avoid local DoS issues in platforms
where it interacts badly with X.org.

If you are not sure, say Y here but do try to check if you could
be using X.org RandR instead.</help>
			</entry>
			<entry name="THINKPAD_ACPI_HOTKEY_POLL">
				<label>Support NVRAM polling for hot keys</label>
				<help>Some thinkpad models benefit from NVRAM polling to detect a few of
the hot key press events.  If you know your ThinkPad model does not
need to do NVRAM polling to support any of the hot keys you use,
unselecting this option will save about 1kB of memory.

ThinkPads T40 and newer, R52 and newer, and X31 and newer are
unlikely to need NVRAM polling in their latest BIOS versions.

NVRAM polling can detect at most the following keys: ThinkPad/Access
IBM, Zoom, Switch Display (fn+F7), ThinkLight, Volume up/down/mute,
Brightness up/down, Display Expand (fn+F8), Hibernate (fn+F12).

If you are not sure, say Y here.  The driver enables polling only if
it is strictly necessary to do so.</help>
			</entry>
			<entry name="SENSORS_HDAPS">
				<label>Thinkpad Hard Drive Active Protection System (hdaps)</label>
				<help>This driver provides support for the IBM Hard Drive Active Protection
System (hdaps), which provides an accelerometer and other misc. data.
ThinkPads starting with the R50, T41, and X40 are supported.  The
accelerometer data is readable via sysfs.

This driver also provides an absolute input class device, allowing
the laptop to act as a pinball machine-esque joystick.

If your ThinkPad is not recognized by the driver, please update to latest
BIOS. This is especially the case for some R52 ThinkPads.

Say Y here if you have an applicable laptop and want to experience
the awesome power of hdaps.</help>
			</entry>
			<entry name="INTEL_MENLOW">
				<label>Thermal Management driver for Intel menlow platform</label>
				<help>ACPI thermal management enhancement driver on
Intel Menlow platform.

If unsure, say N.</help>
			</entry>
			<entry name="EEEPC_LAPTOP">
				<label>Eee PC Hotkey Driver</label>
				<help>This driver supports the Fn-Fx keys on Eee PC laptops.

It  also gives access to some extra laptop functionalities like
Bluetooth, backlight and allows powering on/off some other
devices.

If you have an Eee PC laptop, say Y or M here. If this driver
doesn't work on your Eee PC, try eeepc-wmi instead.</help>
			</entry>
			<entry name="ASUS_WMI">
				<label>ASUS WMI Driver</label>
				<help>Say Y here if you have a WMI aware Asus laptop (like Eee PCs or new
Asus Notebooks).

To compile this driver as a module, choose M here: the module will
be called asus-wmi.</help>
			</entry>
			<entry name="ASUS_NB_WMI">
				<label>Asus Notebook WMI Driver</label>
				<help>This is a driver for newer Asus notebooks. It adds extra features
like wireless radio and bluetooth control, leds, hotkeys, backlight...

For more information, see
&lt;file:Documentation/ABI/testing/sysfs-platform-asus-wmi&gt;

If you have an ACPI-WMI compatible Asus Notebook, say Y or M
here.</help>
			</entry>
			<entry name="EEEPC_WMI">
				<label>Eee PC WMI Driver</label>
				<help>This is a driver for newer Eee PC laptops. It adds extra features
like wireless radio and bluetooth control, leds, hotkeys, backlight...

For more information, see
&lt;file:Documentation/ABI/testing/sysfs-platform-asus-wmi&gt;

If you have an ACPI-WMI compatible Eee PC laptop (&gt;= 1000), say Y or M
here.</help>
			</entry>
			<entry name="ASUS_WIRELESS">
				<label>Asus Wireless Radio Control Driver</label>
				<help>The Asus Wireless Radio Control handles the airplane mode hotkey
present on some Asus laptops.

Say Y or M here if you have an ASUS notebook with an airplane mode
hotkey.

If you choose to compile this driver as a module the module will be
called asus-wireless.</help>
			</entry>
			<entry name="ACPI_WMI">
				<label>WMI</label>
				<help>This driver adds support for the ACPI-WMI (Windows Management
Instrumentation) mapper device (PNP0C14) found on some systems.

ACPI-WMI is a proprietary extension to ACPI to expose parts of the
ACPI firmware to userspace - this is done through various vendor
defined methods and data blocks in a PNP0C14 device, which are then
made available for userspace to call.

The implementation of this in Linux currently only exposes this to
other kernel space drivers.

This driver is a required dependency to build the firmware specific
drivers needed on many machines, including Acer and HP laptops.

It is safe to enable this driver even if your DSDT doesn't define
any ACPI-WMI devices.</help>
			</entry>
			<entry name="MSI_WMI">
				<label>MSI WMI extras</label>
				<help>Say Y here if you want to support WMI-based hotkeys on MSI laptops.

To compile this driver as a module, choose M here: the module will
be called msi-wmi.</help>
			</entry>
			<entry name="TOPSTAR_LAPTOP">
				<label>Topstar Laptop Extras</label>
				<help>This driver adds support for hotkeys found on Topstar laptops.

If you have a Topstar laptop, say Y or M here.</help>
			</entry>
			<entry name="ACPI_TOSHIBA">
				<label>Toshiba Laptop Extras</label>
				<help>This driver adds support for access to certain system settings
on &quot;legacy free&quot; Toshiba laptops.  These laptops can be recognized by
their lack of a BIOS setup menu and APM support.

On these machines, all system configuration is handled through the
ACPI.  This driver is required for access to controls not covered
by the general ACPI drivers, such as LCD brightness, video output,
etc.

This driver differs from the non-ACPI Toshiba laptop driver (located
under &quot;Processor type and features&quot;) in several aspects.
Configuration is accessed by reading and writing text files in the
/proc tree instead of by program interface to /dev.  Furthermore, no
power management functions are exposed, as those are handled by the
general ACPI drivers.

More information about this driver is available at
&lt;http://memebeam.org/toys/ToshibaAcpiDriver&gt;.

If you have a legacy free Toshiba laptop (such as the Libretto L1
series), say Y.</help>
			</entry>
			<entry name="TOSHIBA_BT_RFKILL">
				<label>Toshiba Bluetooth RFKill switch support</label>
				<help>This driver adds support for Bluetooth events for the RFKill
switch on modern Toshiba laptops with full ACPI support and
an RFKill switch.

This driver handles RFKill events for the TOS6205 Bluetooth,
and re-enables it when the switch is set back to the 'on'
position.

If you have a modern Toshiba laptop with a Bluetooth and an
RFKill switch (such as the Portege R500), say Y.</help>
			</entry>
			<entry name="TOSHIBA_HAPS">
				<label>Toshiba HDD Active Protection Sensor</label>
				<help>This driver adds support for the built-in accelerometer
found on recent Toshiba laptops equipped with HID TOS620A
device.

This driver receives ACPI notify events 0x80 when the sensor
detects a sudden move or a harsh vibration, as well as an
ACPI notify event 0x81 whenever the movement or vibration has
been stabilized.

Also provides sysfs entries to get/set the desired protection
level and resetting the HDD protection interface.

If you have a recent Toshiba laptop with a built-in accelerometer
device, say Y.</help>
			</entry>
			<entry name="TOSHIBA_WMI">
				<label>Toshiba WMI Hotkeys Driver (EXPERIMENTAL)</label>
				<help>This driver adds hotkey monitoring support to some Toshiba models
that manage the hotkeys via WMI events.

WARNING: This driver is incomplete as it lacks a proper keymap and the
*notify function only prints the ACPI event type value. Be warned that
you will need to provide some information if you have a Toshiba model
with WMI event hotkeys and want to help with the develpment of this
driver.

If you have a WMI-based hotkeys Toshiba laptop, say Y or M here.</help>
			</entry>
			<entry name="ACPI_CMPC">
				<label>CMPC Laptop Extras</label>
				<help>Support for Intel Classmate PC ACPI devices, including some
keys as input device, backlight device, tablet and accelerometer
devices.</help>
			</entry>
			<entry name="INTEL_HID_EVENT">
				<label>INTEL HID Event</label>
				<help>This driver provides support for the Intel HID Event hotkey interface.
Some laptops require this driver for hotkey support.

To compile this driver as a module, choose M here: the module will
be called intel_hid.</help>
			</entry>
			<entry name="INTEL_VBTN">
				<label>INTEL VIRTUAL BUTTON</label>
				<help>This driver provides support for the Intel Virtual Button interface.
Some laptops require this driver for power button support.

To compile this driver as a module, choose M here: the module will
be called intel_vbtn.</help>
			</entry>
			<entry name="INTEL_SCU_IPC">
				<label>Intel SCU IPC Support</label>
				<help>IPC is used to bridge the communications between kernel and SCU on
some embedded Intel x86 platforms. This is not needed for PC-type
machines.</help>
			</entry>
			<entry name="INTEL_SCU_IPC_UTIL">
				<label>Intel SCU IPC utility driver</label>
				<help>The IPC Util driver provides an interface with the SCU enabling
low level access for debug work and updating the firmware. Say
N unless you will be doing this on an Intel MID platform.</help>
			</entry>
			<entry name="GPIO_INTEL_PMIC">
				<label>Intel PMIC GPIO support</label>
				<help>Say Y here to support GPIO via the SCU IPC interface
on Intel MID platforms.</help>
			</entry>
			<entry name="INTEL_MID_POWER_BUTTON">
				<label>power button driver for Intel MID platforms</label>
				<help>This driver handles the power button on the Intel MID platforms.

If unsure, say N.</help>
			</entry>
			<entry name="INTEL_MFLD_THERMAL">
				<label>Thermal driver for Intel Medfield platform</label>
				<help>Say Y here to enable thermal driver support for the  Intel Medfield
platform.</help>
			</entry>
			<entry name="INTEL_IPS">
				<label>Intel Intelligent Power Sharing</label>
				<help>Intel Calpella platforms support dynamic power sharing between the
CPU and GPU, maximizing performance in a given TDP.  This driver,
along with the CPU frequency and i915 drivers, provides that
functionality.  If in doubt, say Y here; it will only load on
supported platforms.</help>
			</entry>
			<entry name="INTEL_IMR">
				<label>Intel Isolated Memory Region support</label>
				<help>This option provides a means to manipulate Isolated Memory Regions.
IMRs are a set of registers that define read and write access masks
to prohibit certain system agents from accessing memory with 1 KiB
granularity.

IMRs make it possible to control read/write access to an address
by hardware agents inside the SoC. Read and write masks can be
defined for:
- eSRAM flush
- Dirty CPU snoop (write only)
- RMU access
- PCI Virtual Channel 0/Virtual Channel 1
- SMM mode
- Non SMM mode

Quark contains a set of eight IMR registers and makes use of those
registers during its bootup process.

If you are running on a Galileo/Quark say Y here.</help>
			</entry>
			<entry name="INTEL_PMC_CORE">
				<label>Intel PMC Core driver</label>
				<help>The Intel Platform Controller Hub for Intel Core SoCs provides access
to Power Management Controller registers via a PCI interface. This
driver can utilize debugging capabilities and supported features as
exposed by the Power Management Controller.

Supported features:
- SLP_S0_RESIDENCY counter.</help>
			</entry>
			<entry name="IBM_RTL">
				<label>Device driver to enable PRTL support</label>
				<help>Enable support for IBM Premium Real Time Mode (PRTM).
This module will allow you the enter and exit PRTM in the BIOS via
sysfs on platforms that support this feature.  System in PRTM will
not receive CPU-generated SMIs for recoverable errors.  Use of this
feature without proper support may void your hardware warranty.

If the proper BIOS support is found the driver will load and create
/sys/devices/system/ibm_rtl/.  The &quot;state&quot; variable will indicate
whether or not the BIOS is in PRTM.
state = 0 (BIOS SMIs on)
state = 1 (BIOS SMIs off)</help>
			</entry>
			<entry name="XO1_RFKILL">
				<label>OLPC XO-1 software RF kill switch</label>
				<help>Support for enabling/disabling the WLAN interface on the OLPC XO-1
laptop.</help>
			</entry>
			<entry name="XO15_EBOOK">
				<label>OLPC XO-1.5 ebook switch</label>
				<help>Support for the ebook switch on the OLPC XO-1.5 laptop.

This switch is triggered as the screen is rotated and folded down to
convert the device into ebook form.</help>
			</entry>
			<entry name="SAMSUNG_LAPTOP">
				<label>Samsung Laptop driver</label>
				<help>This module implements a driver for a wide range of different
Samsung laptops.  It offers control over the different
function keys, wireless LED, LCD backlight level.

It may also provide some sysfs files described in
&lt;file:Documentation/ABI/testing/sysfs-platform-samsung-laptop&gt;

To compile this driver as a module, choose M here: the module
will be called samsung-laptop.</help>
			</entry>
			<entry name="MXM_WMI">
				<label>WMI support for MXM Laptop Graphics</label>
				<help>MXM is a standard for laptop graphics cards, the WMI interface
is required for switchable nvidia graphics machines</help>
			</entry>
			<entry name="INTEL_OAKTRAIL">
				<label>Intel Oaktrail Platform Extras</label>
				<help>Intel Oaktrail platform need this driver to provide interfaces to
enable/disable the Camera, WiFi, BT etc. devices. If in doubt, say Y
here; it will only load on supported platforms.</help>
			</entry>
			<entry name="SAMSUNG_Q10">
				<label>Samsung Q10 Extras</label>
				<help>This driver provides support for backlight control on Samsung Q10
and related laptops, including Dell Latitude X200.</help>
			</entry>
			<entry name="APPLE_GMUX">
				<label>Apple Gmux Driver</label>
				<help>This driver provides support for the gmux device found on many
Apple laptops, which controls the display mux for the hybrid
graphics as well as the backlight. Currently only backlight
control is supported by the driver.</help>
			</entry>
			<entry name="INTEL_RST">
				<label>Intel Rapid Start Technology Driver</label>
				<help>This driver provides support for modifying paramaters on systems
equipped with Intel's Rapid Start Technology. When put in an ACPI
sleep state, these devices will wake after either a configured
timeout or when the system battery reaches a critical state,
automatically copying memory contents to disk. On resume, the
firmware will copy the memory contents back to RAM and resume the OS
as usual.</help>
			</entry>
			<entry name="INTEL_SMARTCONNECT">
				<label>Intel Smart Connect disabling driver</label>
				<help>Intel Smart Connect is a technology intended to permit devices to
update state by resuming for a short period of time at regular
intervals. If a user enables this functionality under Windows and
then reboots into Linux, the system may remain configured to resume
on suspend. In the absence of any userspace to support it, the system
will then remain awake until something triggers another suspend.

This driver checks to determine whether the device has Intel Smart
Connect enabled, and if so disables it.</help>
			</entry>
			<entry name="PVPANIC">
				<label>pvpanic device support</label>
				<help>This driver provides support for the pvpanic device.  pvpanic is
a paravirtualized device provided by QEMU; it lets a virtual machine
(guest) communicate panic events to the host.</help>
			</entry>
			<entry name="INTEL_PMC_IPC">
				<label>Intel PMC IPC Driver</label>
				<help>This driver provides support for PMC control on some Intel platforms.
The PMC is an ARC processor which defines IPC commands for communication
with other entities in the CPU.</help>
			</entry>
			<entry name="SURFACE_PRO3_BUTTON">
				<label>Power/home/volume buttons driver for Microsoft Surface Pro 3/4 tablet</label>
				<help>This driver handles the power/home/volume buttons on the Microsoft Surface Pro 3/4 tablet.</help>
			</entry>
			<entry name="INTEL_PUNIT_IPC">
				<label>Intel P-Unit IPC Driver</label>
				<help>This driver provides support for Intel P-Unit Mailbox IPC mechanism,
which is used to bridge the communications between kernel and P-Unit.</help>
			</entry>
			<entry name="INTEL_TELEMETRY">
				<label>Intel SoC Telemetry Driver</label>
				<help>This driver provides interfaces to configure and use
telemetry for INTEL SoC from APL onwards. It is also
used to get various SoC events and parameters
directly via debugfs files. Various tools may use
this interface for SoC state monitoring.</help>
			</entry>
			<entry name="MIPS_PLATFORM_DEVICES">
				<label>MIPS Platform Specific Device Drivers</label>
				<help>Say Y here to get to see options for device drivers of various
MIPS platforms, including vendor-specific netbook/laptop/desktop
extension and hardware monitor drivers. This option itself does
not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="CPU_HWMON">
				<label>Loongson CPU HWMon Driver</label>
				<help>Loongson-3A/3B CPU Hwmon (temperature sensor) driver.</help>
			</entry>
			<entry name="GOLDFISH">
				<label>Platform support for Goldfish virtual devices</label>
				<help>Say Y here to get to see options for the Goldfish virtual platform.
This option alone does not add any kernel code.

Unless you are building for the Android Goldfish emulator say N here.</help>
			</entry>
			<entry name="GOLDFISH_BUS">
				<label>Goldfish platform bus</label>
				<help>This is a virtual bus to host Goldfish Android Virtual Devices.</help>
			</entry>
			<entry name="GOLDFISH_PIPE">
				<label>Goldfish virtual device for QEMU pipes</label>
				<help>This is a virtual device to drive the QEMU pipe interface used by
the Goldfish Android Virtual Device.</help>
			</entry>
			<entry name="CHROME_PLATFORMS">
				<label>Platform support for Chrome hardware</label>
				<help>Say Y here to get to see options for platform support for
various Chromebooks and Chromeboxes. This option alone does
not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
			</entry>
			<entry name="CHROMEOS_LAPTOP">
				<label>Chrome OS Laptop</label>
				<help>This driver instantiates i2c and smbus devices such as
light sensors and touchpads.

If you have a supported Chromebook, choose Y or M here.
The module will be called chromeos_laptop.</help>
			</entry>
			<entry name="CHROMEOS_PSTORE">
				<label>Chrome OS pstore support</label>
				<help>This module instantiates the persistent storage on x86 ChromeOS
devices. It can be used to store away console logs and crash
information across reboots.

The range of memory used is 0xf00000-0x1000000, traditionally
the memory used to back VGA controller memory.

If you have a supported Chromebook, choose Y or M here.
The module will be called chromeos_pstore.</help>
			</entry>
			<entry name="CROS_EC_CHARDEV">
				<label>Chrome OS Embedded Controller userspace device interface</label>
				<help>This driver adds support to talk with the ChromeOS EC from userspace.

If you have a supported Chromebook, choose Y or M here.
The module will be called cros_ec_dev.</help>
			</entry>
			<entry name="CROS_EC_LPC">
				<label>ChromeOS Embedded Controller (LPC)</label>
				<help>If you say Y here, you get support for talking to the ChromeOS EC
over an LPC bus. This uses a simple byte-level protocol with a
checksum. This is used for userspace access only. The kernel
typically has its own communication methods.

To compile this driver as a module, choose M here: the
module will be called cros_ec_lpc.</help>
			</entry>
			<entry name="CROS_EC_PROTO">
				<help>ChromeOS EC communication protocol helpers.</help>
			</entry>
			<entry name="CROS_KBD_LED_BACKLIGHT">
				<label>Backlight LED support for Chrome OS keyboards</label>
				<help>This option enables support for the keyboard backlight LEDs on
select Chrome OS systems.

To compile this driver as a module, choose M here: the
module will be called cros_kbd_led_backlight.</help>
			</entry>
			<entry name="CLKDEV_LOOKUP"/>
			<entry name="HAVE_CLK_PREPARE"/>
			<entry name="COMMON_CLK">
				<help>The common clock framework is a single definition of struct
clk, useful across many platforms, as well as an
implementation of the clock API in include/linux/clk.h.
Architectures utilizing the common struct clk should select
this option.</help>
			</entry>
			<container name="Common_Clock_Framework">
				<label>Common Clock Framework</label>
				<entry name="COMMON_CLK_WM831X">
					<label>Clock driver for WM831x/2x PMICs</label>
					<help>Supports the clocking subsystem of the WM831x/2x series of
PMICs from Wolfson Microelectronics.</help>
				</entry>
				<entry name="COMMON_CLK_VERSATILE">
					<label>Clock driver for ARM Reference designs</label>
					<help>Supports clocking on ARM Reference designs:
- Integrator/AP and Integrator/CP
- RealView PB1176, EB, PB11MP and PBX
- Versatile Express</help>
				</entry>
				<entry name="CLK_SP810">
					<label>Clock driver for ARM SP810 System Controller</label>
					<help>Supports clock muxing (REFCLK/TIMCLK to TIMERCLKEN0-3) capabilities
of the ARM SP810 System Controller cell.</help>
				</entry>
				<entry name="CLK_VEXPRESS_OSC">
					<label>Clock driver for Versatile Express OSC clock generators</label>
					<help>Simple regmap-based driver driving clock generators on Versatile
Express platforms hidden behind its configuration infrastructure,
commonly known as OSCs.
</help>
				</entry>
				<entry name="COMMON_CLK_MAX_GEN"/>
				<entry name="COMMON_CLK_MAX77686">
					<label>Clock driver for Maxim 77686 MFD</label>
					<help>This driver supports Maxim 77686 crystal oscillator clock.</help>
				</entry>
				<entry name="COMMON_CLK_MAX77802">
					<label>Clock driver for Maxim 77802 PMIC</label>
					<help>This driver supports Maxim 77802 crystal oscillator clock.</help>
				</entry>
				<entry name="COMMON_CLK_RK808">
					<label>Clock driver for RK808/RK818</label>
					<help>This driver supports RK808 and RK818 crystal oscillator clock. These
multi-function devices have two fixed-rate oscillators,
clocked at 32KHz each. Clkout1 is always on, Clkout2 can off
by control register.</help>
				</entry>
				<entry name="COMMON_CLK_SCPI">
					<label>Clock driver controlled via SCPI interface</label>
					<help>This driver provides support for clocks that are controlled
by firmware that implements the SCPI interface.

This driver uses SCPI Message Protocol to interact with the
firmware providing all the clock controls.</help>
				</entry>
				<entry name="COMMON_CLK_SI5351">
					<label>Clock driver for SiLabs 5351A/B/C</label>
					<help>This driver supports Silicon Labs 5351A/B/C programmable clock
generators.</help>
				</entry>
				<entry name="COMMON_CLK_SI514">
					<label>Clock driver for SiLabs 514 devices</label>
					<help>---help---
This driver supports the Silicon Labs 514 programmable clock
generator.</help>
				</entry>
				<entry name="COMMON_CLK_SI570">
					<label>Clock driver for SiLabs 570 and compatible devices</label>
					<help>---help---
This driver supports Silicon Labs 570/571/598/599 programmable
clock generators.</help>
				</entry>
				<entry name="COMMON_CLK_CDCE706">
					<label>Clock driver for TI CDCE706 clock synthesizer</label>
					<help>This driver supports TI CDCE706 programmable 3-PLL clock synthesizer.</help>
				</entry>
				<entry name="COMMON_CLK_CDCE925">
					<label>Clock driver for TI CDCE925 devices</label>
					<help>---help---
This driver supports the TI CDCE925 programmable clock synthesizer.
The chip contains two PLLs with spread-spectrum clocking support and
five output dividers. The driver only supports the following setup,
and uses a fixed setting for the output muxes.
Y1 is derived from the input clock
Y2 and Y3 derive from PLL1
Y4 and Y5 derive from PLL2
Given a target output frequency, the driver will set the PLL and
divider to best approximate the desired output.</help>
				</entry>
				<entry name="COMMON_CLK_CS2000_CP">
					<label>Clock driver for CS2000 Fractional-N Clock Synthesizer &amp; Clock Multiplier</label>
					<help>If you say yes here you get support for the CS2000 clock multiplier.</help>
				</entry>
				<entry name="COMMON_CLK_S2MPS11">
					<label>Clock driver for S2MPS1X/S5M8767 MFD</label>
					<help>This driver supports S2MPS11/S2MPS14/S5M8767 crystal oscillator
clock. These multi-function devices have two (S2MPS14) or three
(S2MPS11, S5M8767) fixed-rate oscillators, clocked at 32KHz each.</help>
				</entry>
				<entry name="CLK_TWL6040">
					<label>External McPDM functional clock from twl6040</label>
					<help>Enable the external functional clock support on OMAP4+ platforms for
McPDM. McPDM module is using the external bit clock on the McPDM bus
as functional clock.</help>
				</entry>
				<entry name="COMMON_CLK_AXI_CLKGEN">
					<label>AXI clkgen driver</label>
					<help>---help---
Support for the Analog Devices axi-clkgen pcore clock generator for Xilinx
FPGAs. It is commonly used in Analog Devices' reference designs.</help>
				</entry>
				<entry name="CLK_QORIQ">
					<label>Clock driver for Freescale QorIQ platforms</label>
					<help>This adds the clock driver support for Freescale QorIQ platforms
using common clock framework.</help>
				</entry>
				<entry name="COMMON_CLK_XGENE">
					<label>Clock driver for APM XGene SoC</label>
					<help>Sypport for the APM X-Gene SoC reference, PLL, and device clocks.</help>
				</entry>
				<entry name="COMMON_CLK_KEYSTONE">
					<label>Clock drivers for Keystone based SOCs</label>
					<help>Supports clock drivers for Keystone based SOCs. These SOCs have local
a power sleep control module that gate the clock to the IPs and PLLs.</help>
				</entry>
				<entry name="COMMON_CLK_NXP">
					<help>Support for clock providers on NXP platforms.</help>
				</entry>
				<entry name="COMMON_CLK_PALMAS">
					<label>Clock driver for TI Palmas devices</label>
					<help>This driver supports TI Palmas devices 32KHz output KG and KG_AUDIO
using common clock framework.</help>
				</entry>
				<entry name="COMMON_CLK_PWM">
					<label>Clock driver for PWMs used as clock outputs</label>
					<help>Adapter driver so that any PWM output can be (mis)used as clock signal
at 50% duty cycle.</help>
				</entry>
				<entry name="COMMON_CLK_PXA">
					<help>Support for the Marvell PXA SoC.</help>
				</entry>
				<entry name="COMMON_CLK_PIC32"/>
				<entry name="COMMON_CLK_OXNAS">
					<label>Clock driver for the OXNAS SoC Family</label>
					<help>Support for the OXNAS SoC Family clocks.</help>
				</entry>
				<entry name="CLK_BCM_63XX">
					<label>Broadcom BCM63xx clock support</label>
					<help>Enable common clock framework support for Broadcom BCM63xx DSL SoCs
based on the ARM architecture</help>
				</entry>
				<entry name="CLK_BCM_KONA">
					<label>Broadcom Kona CCU clock support</label>
					<help>Enable common clock framework support for Broadcom SoCs
using &quot;Kona&quot; style clock control units, including those
in the BCM281xx and BCM21664 families.</help>
				</entry>
				<entry name="COMMON_CLK_IPROC">
					<help>Enable common clock framework support for Broadcom SoCs
based on the iProc architecture
</help>
				</entry>
				<entry name="COMMON_CLK_HI3519">
					<label>Hi3519 Clock Driver</label>
					<help>Build the clock driver for hi3519.</help>
				</entry>
				<entry name="COMMON_CLK_HI6220">
					<label>Hi6220 Clock Driver</label>
					<help>Build the Hisilicon Hi6220 clock driver based on the common clock framework.</help>
				</entry>
				<entry name="RESET_HISI">
					<label>HiSilicon Reset Controller Driver</label>
					<help>Build reset controller driver for HiSilicon device chipsets.</help>
				</entry>
				<entry name="STUB_CLK_HI6220">
					<label>Hi6220 Stub Clock Driver</label>
					<help>Build the Hisilicon Hi6220 stub clock driver.
</help>
				</entry>
				<entry name="COMMON_CLK_AMLOGIC"/>
				<entry name="COMMON_CLK_MESON8B">
					<help>Support for the clock controller on AmLogic S805 devices, aka
meson8b. Say Y if you want peripherals and CPU frequency scaling to
work.</help>
				</entry>
				<entry name="COMMON_CLK_GXBB">
					<help>Support for the clock controller on AmLogic S905 devices, aka gxbb.
Say Y if you want peripherals and CPU frequency scaling to work.
</help>
				</entry>
				<entry name="MVEBU_CLK_COMMON"/>
				<entry name="MVEBU_CLK_CPU"/>
				<entry name="MVEBU_CLK_COREDIV"/>
				<entry name="ARMADA_370_CLK"/>
				<entry name="ARMADA_375_CLK"/>
				<entry name="ARMADA_38X_CLK"/>
				<entry name="ARMADA_39X_CLK"/>
				<entry name="ARMADA_XP_CLK"/>
				<entry name="ARMADA_AP806_SYSCON"/>
				<entry name="ARMADA_CP110_SYSCON"/>
				<entry name="DOVE_CLK"/>
				<entry name="KIRKWOOD_CLK"/>
				<entry name="ORION_CLK"/>
				<entry name="QCOM_GDSC"/>
				<entry name="COMMON_CLK_QCOM">
					<label>Support for Qualcomm's clock controllers</label>
				</entry>
				<entry name="APQ_GCC_8084">
					<label>APQ8084 Global Clock Controller</label>
					<help>Support for the global clock controller on apq8084 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, SATA, PCIe, etc.</help>
				</entry>
				<entry name="APQ_MMCC_8084">
					<label>APQ8084 Multimedia Clock Controller</label>
					<help>Support for the multimedia clock controller on apq8084 devices.
Say Y if you want to support multimedia devices such as display,
graphics, video encode/decode, camera, etc.</help>
				</entry>
				<entry name="IPQ_GCC_4019">
					<label>IPQ4019 Global Clock Controller</label>
					<help>Support for the global clock controller on ipq4019 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, etc.</help>
				</entry>
				<entry name="IPQ_GCC_806X">
					<label>IPQ806x Global Clock Controller</label>
					<help>Support for the global clock controller on ipq806x devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, etc.</help>
				</entry>
				<entry name="IPQ_LCC_806X">
					<label>IPQ806x LPASS Clock Controller</label>
					<help>Support for the LPASS clock controller on ipq806x devices.
Say Y if you want to use audio devices such as i2s, pcm,
S/PDIF, etc.</help>
				</entry>
				<entry name="MSM_GCC_8660">
					<label>MSM8660 Global Clock Controller</label>
					<help>Support for the global clock controller on msm8660 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, etc.</help>
				</entry>
				<entry name="MSM_GCC_8916">
					<label>MSM8916 Global Clock Controller</label>
					<help>Support for the global clock controller on msm8916 devices.
Say Y if you want to use devices such as UART, SPI i2c, USB,
SD/eMMC, display, graphics, camera etc.</help>
				</entry>
				<entry name="MSM_GCC_8960">
					<label>APQ8064/MSM8960 Global Clock Controller</label>
					<help>Support for the global clock controller on apq8064/msm8960 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, SATA, PCIe, etc.</help>
				</entry>
				<entry name="MSM_LCC_8960">
					<label>APQ8064/MSM8960 LPASS Clock Controller</label>
					<help>Support for the LPASS clock controller on apq8064/msm8960 devices.
Say Y if you want to use audio devices such as i2s, pcm,
SLIMBus, etc.</help>
				</entry>
				<entry name="MSM_MMCC_8960">
					<label>MSM8960 Multimedia Clock Controller</label>
					<help>Support for the multimedia clock controller on msm8960 devices.
Say Y if you want to support multimedia devices such as display,
graphics, video encode/decode, camera, etc.</help>
				</entry>
				<entry name="MSM_GCC_8974">
					<label>MSM8974 Global Clock Controller</label>
					<help>Support for the global clock controller on msm8974 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, SD/eMMC, SATA, PCIe, etc.</help>
				</entry>
				<entry name="MSM_MMCC_8974">
					<label>MSM8974 Multimedia Clock Controller</label>
					<help>Support for the multimedia clock controller on msm8974 devices.
Say Y if you want to support multimedia devices such as display,
graphics, video encode/decode, camera, etc.</help>
				</entry>
				<entry name="MSM_GCC_8996">
					<label>MSM8996 Global Clock Controller</label>
					<help>Support for the global clock controller on msm8996 devices.
Say Y if you want to use peripheral devices such as UART, SPI,
i2c, USB, UFS, SD/eMMC, PCIe, etc.</help>
				</entry>
				<entry name="MSM_MMCC_8996">
					<label>MSM8996 Multimedia Clock Controller</label>
					<help>Support for the multimedia clock controller on msm8996 devices.
Say Y if you want to support multimedia devices such as display,
graphics, video encode/decode, camera, etc.
</help>
				</entry>
				<entry name="CLK_RENESAS_CPG_MSSR"/>
				<entry name="CLK_RENESAS_CPG_MSTP"/>
				<entry name="COMMON_CLK_SAMSUNG">
					<label>Samsung Exynos clock controller support&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="EXYNOS_ARM64_COMMON_CLK">
					<label>Samsung Exynos ARMv8-family clock controller support&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="EXYNOS_AUDSS_CLK_CON">
					<label>Samsung Exynos AUDSS clock controller support</label>
					<help>Support for the Audio Subsystem CLKCON clock controller present
on some Exynos SoC variants. Choose M or Y here if you want to
use audio devices such as I2S, PCM, etc.</help>
				</entry>
				<entry name="S3C2410_COMMON_CLK">
					<label>Samsung S3C2410 clock controller support&quot; if COMPILE_TEST</label>
					<help>Build the s3c2410 clock driver based on the common clock framework.</help>
				</entry>
				<entry name="S3C2410_COMMON_DCLK">
					<help>Temporary symbol to build the dclk driver based on the common clock
framework.</help>
				</entry>
				<entry name="S3C2412_COMMON_CLK">
					<label>Samsung S3C2412 clock controller support&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="S3C2443_COMMON_CLK">
					<label>Samsung S3C2443 clock controller support&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="SUNXI_CCU">
					<label>Clock support for Allwinner SoCs</label>
				</entry>
				<entry name="SUNXI_CCU_DIV"/>
				<entry name="SUNXI_CCU_FRAC"/>
				<entry name="SUNXI_CCU_GATE"/>
				<entry name="SUNXI_CCU_MUX"/>
				<entry name="SUNXI_CCU_PHASE"/>
				<entry name="SUNXI_CCU_NK"/>
				<entry name="SUNXI_CCU_NKM"/>
				<entry name="SUNXI_CCU_NKMP"/>
				<entry name="SUNXI_CCU_NM"/>
				<entry name="SUNXI_CCU_MP"/>
				<entry name="SUN8I_H3_CCU">
					<label>Support for the Allwinner H3 CCU</label>
				</entry>
				<entry name="TEGRA_CLK_EMC"/>
				<entry name="COMMON_CLK_TI_ADPLL">
					<label>Clock driver for dm814x ADPLL</label>
					<help>ADPLL clock driver for the dm814x SoC using common clock framework.
</help>
				</entry>
			</container>
			<entry name="HWSPINLOCK"/>
			<container name="Hardware_Spinlock_drivers">
				<label>Hardware Spinlock drivers</label>
				<entry name="HWSPINLOCK_OMAP">
					<label>OMAP Hardware Spinlock device</label>
					<help>Say y here to support the OMAP Hardware Spinlock device (firstly
introduced in OMAP4).

If unsure, say N.</help>
				</entry>
				<entry name="HWSPINLOCK_QCOM">
					<label>Qualcomm Hardware Spinlock device</label>
					<help>Say y here to support the Qualcomm Hardware Mutex functionality, which
provides a synchronisation mechanism for the various processors on
the SoC.

If unsure, say N.</help>
				</entry>
				<entry name="HWSPINLOCK_SIRF">
					<label>SIRF Hardware Spinlock device</label>
					<help>Say y here to support the SIRF Hardware Spinlock device, which
provides a synchronisation mechanism for the various processors
on the SoC.

It's safe to say n here if you're not interested in SIRF hardware
spinlock or just want a bare minimum kernel.</help>
				</entry>
				<entry name="HSEM_U8500">
					<label>STE Hardware Semaphore functionality</label>
					<help>Say y here to support the STE Hardware Semaphore functionality, which
provides a synchronisation mechanism for the various processor on the
SoC.

If unsure, say N.</help>
				</entry>
			</container>
			<container name="Clock_Source_drivers">
				<label>Clock Source drivers</label>
				<entry name="CLKSRC_OF"/>
				<entry name="CLKSRC_ACPI"/>
				<entry name="CLKSRC_PROBE"/>
				<entry name="CLKSRC_I8253"/>
				<entry name="CLKEVT_I8253"/>
				<entry name="I8253_LOCK"/>
				<entry name="CLKBLD_I8253"/>
				<entry name="CLKSRC_MMIO"/>
				<entry name="BCM2835_TIMER">
					<label>BCM2835 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the BCM2835 timer driver.</help>
				</entry>
				<entry name="BCM_KONA_TIMER">
					<label>BCM mobile timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the BCM Kona mobile timer driver.</help>
				</entry>
				<entry name="DIGICOLOR_TIMER">
					<label>Digicolor timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the digicolor timer driver.</help>
				</entry>
				<entry name="DW_APB_TIMER">
					<label>DW APB timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the dw_apb timer.</help>
				</entry>
				<entry name="DW_APB_TIMER_OF"/>
				<entry name="ROCKCHIP_TIMER">
					<label>Rockchip timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the rockchip timer driver.</help>
				</entry>
				<entry name="ARMADA_370_XP_TIMER">
					<label>Armada 370 and XP timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the Armada 370 and XP timer driver.</help>
				</entry>
				<entry name="MESON6_TIMER">
					<label>Meson6 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the Meson6 timer driver.</help>
				</entry>
				<entry name="ORION_TIMER">
					<label>Orion timer driver&quot; if COMPILE_TEST</label>
					<help>Enables the support for the Orion timer driver</help>
				</entry>
				<entry name="SUN4I_TIMER">
					<label>Sun4i timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Sun4i timer.</help>
				</entry>
				<entry name="SUN5I_HSTIMER">
					<label>Sun5i timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support the Sun5i timer.</help>
				</entry>
				<entry name="TEGRA_TIMER">
					<label>Tegra timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Tegra driver.</help>
				</entry>
				<entry name="VT8500_TIMER">
					<label>VT8500 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the VT8500 driver.</help>
				</entry>
				<entry name="CADENCE_TTC_TIMER">
					<label>Cadence TTC timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the cadence ttc driver.</help>
				</entry>
				<entry name="ASM9260_TIMER">
					<label>ASM9260 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the ASM9260 timer.</help>
				</entry>
				<entry name="CLKSRC_NOMADIK_MTU">
					<label>Nomakdik clocksource driver&quot; if COMPILE_TEST</label>
					<help>Support for Multi Timer Unit. MTU provides access
to multiple interrupt generating programmable
32-bit free running decrementing counters.</help>
				</entry>
				<entry name="CLKSRC_NOMADIK_MTU_SCHED_CLOCK">
					<help>Use the Multi Timer Unit as the sched_clock.</help>
				</entry>
				<entry name="CLKSRC_DBX500_PRCMU">
					<label>Clocksource PRCMU Timer&quot; if COMPILE_TEST</label>
					<help>Use the always on PRCMU Timer as clocksource</help>
				</entry>
				<entry name="CLPS711X_TIMER">
					<label>Cirrus logic timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Cirrus Logic PS711 timer.</help>
				</entry>
				<entry name="ATLAS7_TIMER">
					<label>Atlas7 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Atlas7 timer.</help>
				</entry>
				<entry name="MOXART_TIMER">
					<label>Moxart timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Moxart timer.</help>
				</entry>
				<entry name="MXS_TIMER">
					<label>Mxs timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Mxs timer.</help>
				</entry>
				<entry name="PRIMA2_TIMER">
					<label>Prima2 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Prima2 timer.</help>
				</entry>
				<entry name="U300_TIMER">
					<label>U300 timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the U300 timer.</help>
				</entry>
				<entry name="NSPIRE_TIMER">
					<label>NSpire timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Nspire timer.</help>
				</entry>
				<entry name="KEYSTONE_TIMER">
					<label>Keystone timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Keystone timer.</help>
				</entry>
				<entry name="INTEGRATOR_AP_TIMER">
					<label>Integrator-ap timer driver&quot; if COMPILE_TEST</label>
					<help>Enables support for the Integrator-ap timer.</help>
				</entry>
				<entry name="CLKSRC_DBX500_PRCMU_SCHED_CLOCK">
					<label>Clocksource PRCMU Timer sched_clock</label>
					<help>Use the always on PRCMU Timer as sched_clock</help>
				</entry>
				<entry name="CLKSRC_EFM32">
					<label>Clocksource for Energy Micro's EFM32 SoCs&quot; if !ARCH_EFM32</label>
					<help>Support to use the timers of EFM32 SoCs as clock source and clock
event device.</help>
				</entry>
				<entry name="CLKSRC_LPC32XX">
					<label>Clocksource for LPC32XX&quot; if COMPILE_TEST</label>
					<help>Support for the LPC32XX clocksource.</help>
				</entry>
				<entry name="CLKSRC_PISTACHIO">
					<label>Clocksource for Pistachio SoC&quot; if COMPILE_TEST</label>
					<help>Enables the clocksource for the Pistachio SoC.</help>
				</entry>
				<entry name="CLKSRC_TI_32K">
					<label>Texas Instruments 32.768 Hz Clocksource&quot; if COMPILE_TEST</label>
					<help>This option enables support for Texas Instruments 32.768 Hz clocksource
available on many OMAP-like platforms.</help>
				</entry>
				<entry name="CLKSRC_NPS">
					<label>NPS400 clocksource driver&quot; if COMPILE_TEST</label>
					<help>NPS400 clocksource support.
Got 64 bit counter with update rate up to 1000MHz.
This counter is accessed via couple of 32 bit memory mapped registers.</help>
				</entry>
				<entry name="CLKSRC_STM32">
					<label>Clocksource for STM32 SoCs&quot; if !ARCH_STM32</label>
				</entry>
				<entry name="CLKSRC_MPS2">
					<label>Clocksource for MPS2 SoCs&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="ARM_ARCH_TIMER"/>
				<entry name="ARM_ARCH_TIMER_EVTSTREAM">
					<label>Enable ARM architected timer event stream generation by default</label>
					<help>This option enables support by default for event stream generation
based on the ARM architected timer. It is used for waking up CPUs
executing the wfe instruction at a frequency represented as a
power-of-2 divisor of the clock rate. The behaviour can also be
overridden on the command line using the
clocksource.arm_arch_timer.evtstream parameter.
The main use of the event stream is wfe-based timeouts of userspace
locking implementations. It might also be useful for imposing timeout
on wfe to safeguard against any programming errors in case an expected
event is not generated.
This must be disabled for hardware validation purposes to detect any
hardware anomalies of missing events.</help>
				</entry>
				<entry name="ARM_GLOBAL_TIMER">
					<label>Support for the ARM global timer&quot; if COMPILE_TEST</label>
					<help>This options enables support for the ARM global timer unit</help>
				</entry>
				<entry name="ARM_TIMER_SP804">
					<label>Support for Dual Timer SP804 module</label>
				</entry>
				<entry name="CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK">
					<help>Use ARM global timer clock source as sched_clock</help>
				</entry>
				<entry name="ARMV7M_SYSTICK">
					<label>Support for the ARMv7M system time&quot; if COMPILE_TEST</label>
					<help>This options enables support for the ARMv7M system timer unit</help>
				</entry>
				<entry name="ATMEL_PIT"/>
				<entry name="ATMEL_ST">
					<label>Atmel ST timer support&quot; if COMPILE_TEST</label>
					<help>Support for the Atmel ST timer.</help>
				</entry>
				<entry name="CLKSRC_METAG_GENERIC">
					<help>This option enables support for the Meta per-thread timers.</help>
				</entry>
				<entry name="CLKSRC_EXYNOS_MCT">
					<label>Exynos multi core timer driver&quot; if COMPILE_TEST</label>
					<help>Support for Multi Core Timer controller on Exynos SoCs.</help>
				</entry>
				<entry name="CLKSRC_SAMSUNG_PWM">
					<label>PWM timer driver for Samsung S3C, S5P&quot; if COMPILE_TEST</label>
					<help>This is a new clocksource driver for the PWM timer found in
Samsung S3C, S5P and Exynos SoCs, replacing an earlier driver
for all devicetree enabled platforms. This driver will be
needed only on systems that do not have the Exynos MCT available.</help>
				</entry>
				<entry name="FSL_FTM_TIMER">
					<label>Freescale FlexTimer Module driver&quot; if COMPILE_TEST</label>
					<help>Support for Freescale FlexTimer Module (FTM) timer.</help>
				</entry>
				<entry name="VF_PIT_TIMER">
					<help>Support for Period Interrupt Timer on Freescale Vybrid Family SoCs.</help>
				</entry>
				<entry name="OXNAS_RPS_TIMER">
					<label>Oxford Semiconductor OXNAS RPS Timers driver&quot; if COMPILE_TEST</label>
					<help>This enables support for the Oxford Semiconductor OXNAS RPS timers.</help>
				</entry>
				<entry name="SYS_SUPPORTS_SH_CMT"/>
				<entry name="MTK_TIMER">
					<label>Mediatek timer driver&quot; if COMPILE_TEST</label>
					<help>Support for Mediatek timer driver.</help>
				</entry>
				<entry name="SYS_SUPPORTS_SH_MTU2"/>
				<entry name="SYS_SUPPORTS_SH_TMU"/>
				<entry name="SYS_SUPPORTS_EM_STI"/>
				<entry name="SH_TIMER_CMT">
					<label>Renesas CMT timer driver&quot; if COMPILE_TEST</label>
					<help>This enables build of a clocksource and clockevent driver for
the Compare Match Timer (CMT) hardware available in 16/32/48-bit
variants on a wide range of Mobile and Automotive SoCs from Renesas.</help>
				</entry>
				<entry name="SH_TIMER_MTU2">
					<label>Renesas MTU2 timer driver&quot; if COMPILE_TEST</label>
					<help>This enables build of a clockevent driver for the Multi-Function
Timer Pulse Unit 2 (MTU2) hardware available on SoCs from Renesas.
This hardware comes with 16 bit-timer registers.</help>
				</entry>
				<entry name="SH_TIMER_TMU">
					<label>Renesas TMU timer driver&quot; if COMPILE_TEST</label>
					<help>This enables build of a clocksource and clockevent driver for
the 32-bit Timer Unit (TMU) hardware available on a wide range
SoCs from Renesas.</help>
				</entry>
				<entry name="EM_TIMER_STI">
					<label>Renesas STI timer driver&quot; if COMPILE_TEST</label>
					<help>This enables build of a clocksource and clockevent driver for
the 48-bit System Timer (STI) hardware available on a SoCs
such as EMEV2 from former NEC Electronics.</help>
				</entry>
				<entry name="CLKSRC_QCOM">
					<label>Qualcomm MSM timer&quot; if COMPILE_TEST</label>
					<help>This enables the clocksource and the per CPU clockevent driver for the
Qualcomm SoCs.</help>
				</entry>
				<entry name="CLKSRC_VERSATILE">
					<label>ARM Versatile (Express) reference platforms clock source&quot; if COMPILE_TEST</label>
					<help>This option enables clock source based on free running
counter available in the &quot;System Registers&quot; block of
ARM Versatile, RealView and Versatile Express reference
platforms.</help>
				</entry>
				<entry name="CLKSRC_MIPS_GIC"/>
				<entry name="CLKSRC_TANGO_XTAL">
					<label>Clocksource for Tango SoC&quot; if COMPILE_TEST</label>
					<help>This enables the clocksource for Tango SoC</help>
				</entry>
				<entry name="CLKSRC_PXA">
					<label>Clocksource for PXA or SA-11x0 platform&quot; if COMPILE_TEST</label>
					<help>This enables OST0 support available on PXA and SA-11x0
platforms.</help>
				</entry>
				<entry name="H8300_TMR8">
					<label>Clockevent timer for the H8300 platform&quot; if COMPILE_TEST</label>
					<help>This enables the 8 bits timer for the H8300 platform.</help>
				</entry>
				<entry name="H8300_TMR16">
					<label>Clockevent timer for the H83069 platform&quot; if COMPILE_TEST</label>
					<help>This enables the 16 bits timer for the H8300 platform with the
H83069 cpu.</help>
				</entry>
				<entry name="H8300_TPU">
					<label>Clocksource for the H8300 platform&quot; if COMPILE_TEST</label>
					<help>This enables the clocksource for the H8300 platform with the
H8S2678 cpu.</help>
				</entry>
				<entry name="CLKSRC_IMX_GPT">
					<label>Clocksource using i.MX GPT&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="CLKSRC_ST_LPC">
					<label>Low power clocksource found in the LPC&quot; if COMPILE_TEST</label>
					<help>Enable this option to use the Low Power controller timer
as clocksource.</help>
				</entry>
			</container>
			<entry name="MAILBOX">
				<label>Mailbox Hardware Support</label>
				<help>Mailbox is a framework to control hardware communication between
on-chip processors through queued messages and interrupt driven
signals. Say Y if your platform supports hardware mailboxes.</help>
			</entry>
			<entry name="ARM_MHU">
				<label>ARM MHU Mailbox</label>
				<help>Say Y here if you want to build the ARM MHU controller driver.
The controller has 3 mailbox channels, the last of which can be
used in Secure mode only.</help>
			</entry>
			<entry name="PL320_MBOX">
				<label>ARM PL320 Mailbox</label>
				<help>An implementation of the ARM PL320 Interprocessor Communication
Mailbox (IPCM), tailored for the Calxeda Highbank. It is used to
send short messages between Highbank's A9 cores and the EnergyCore
Management Engine, primarily for cpufreq. Say Y here if you want
to use the PL320 IPCM support.</help>
			</entry>
			<entry name="OMAP2PLUS_MBOX">
				<label>OMAP2+ Mailbox framework support</label>
				<help>Mailbox implementation for OMAP family chips with hardware for
interprocessor communication involving DSP, IVA1.0 and IVA2 in
OMAP2/3; or IPU, IVA HD and DSP in OMAP4/5. Say Y here if you
want to use OMAP2+ Mailbox framework support.</help>
			</entry>
			<entry name="OMAP_MBOX_KFIFO_SIZE">
				<label>Mailbox kfifo default buffer size (bytes)</label>
				<help>Specify the default size of mailbox's kfifo buffers (bytes).
This can also be changed at runtime (via the mbox_kfifo_size
module parameter).</help>
			</entry>
			<entry name="ROCKCHIP_MBOX">
				<label>Rockchip Soc Intergrated Mailbox Support</label>
				<help>This driver provides support for inter-processor communication
between CPU cores and MCU processor on Some Rockchip SOCs.
Please check it that the Soc you use have Mailbox hardware.
Say Y here if you want to use the Rockchip Mailbox support.</help>
			</entry>
			<entry name="PCC">
				<label>Platform Communication Channel Driver</label>
				<help>ACPI 5.0+ spec defines a generic mode of communication
between the OS and a platform such as the BMC. This medium
(PCC) is typically used by CPPC (ACPI CPU Performance management),
RAS (ACPI reliability protocol) and MPST (ACPI Memory power
states). Select this driver if your platform implements the
PCC clients mentioned above.</help>
			</entry>
			<entry name="ALTERA_MBOX">
				<label>Altera Mailbox</label>
				<help>An implementation of the Altera Mailbox soft core. It is used
to send message between processors. Say Y here if you want to use the
Altera mailbox support.</help>
			</entry>
			<entry name="BCM2835_MBOX">
				<label>BCM2835 Mailbox</label>
				<help>An implementation of the BCM2385 Mailbox.  It is used to invoke
the services of the Videocore. Say Y here if you want to use the
BCM2835 Mailbox.</help>
			</entry>
			<entry name="STI_MBOX">
				<label>STI Mailbox framework support</label>
				<help>Mailbox implementation for STMicroelectonics family chips with
hardware for interprocessor communication.</help>
			</entry>
			<entry name="TI_MESSAGE_MANAGER">
				<label>Texas Instruments Message Manager Driver</label>
				<help>An implementation of Message Manager slave driver for Keystone
architecture SoCs from Texas Instruments. Message Manager is a
communication entity found on few of Texas Instrument's keystone
architecture SoCs. These may be used for communication between
multiple processors within the SoC. Select this driver if your
platform has support for the hardware block.</help>
			</entry>
			<entry name="HI6220_MBOX">
				<label>Hi6220 Mailbox</label>
				<help>An implementation of the hi6220 mailbox. It is used to send message
between application processors and MCU. Say Y here if you want to
build Hi6220 mailbox controller driver.</help>
			</entry>
			<entry name="MAILBOX_TEST">
				<label>Mailbox Test Client</label>
				<help>Test client to help with testing new Controller driver
implementations.</help>
			</entry>
			<entry name="XGENE_SLIMPRO_MBOX">
				<label>APM SoC X-Gene SLIMpro Mailbox Controller</label>
				<help>An implementation of the APM X-Gene Interprocessor Communication
Mailbox (IPCM) between the ARM 64-bit cores and SLIMpro controller.
It is used to send short messages between ARM64-bit cores and
the SLIMpro Management Engine, primarily for PM. Say Y here if you
want to use the APM X-Gene SLIMpro IPCM support.</help>
			</entry>
			<entry name="BCM_PDC_MBOX">
				<label>Broadcom PDC Mailbox</label>
				<help>Mailbox implementation for the Broadcom PDC ring manager,
which provides access to various offload engines on Broadcom
SoCs. Say Y here if you want to use the Broadcom PDC.</help>
			</entry>
			<entry name="IOMMU_API"/>
			<entry name="IOMMU_SUPPORT">
				<label>IOMMU Hardware Support</label>
				<help>Say Y here if you want to compile device drivers for IO Memory
Management Units into the kernel. These devices usually allow to
remap DMA requests and/or remap interrupts from other devices on the
system.</help>
			</entry>
			<container name="Generic_IOMMU_Pagetable_Support">
				<label>Generic IOMMU Pagetable Support</label>
				<entry name="IOMMU_IO_PGTABLE"/>
				<entry name="IOMMU_IO_PGTABLE_LPAE">
					<label>ARMv7/v8 Long Descriptor Format</label>
					<help>Enable support for the ARM long descriptor pagetable format.
This allocator supports 4K/2M/1G, 16K/32M and 64K/512M page
sizes at both stage-1 and stage-2, as well as address spaces
up to 48-bits in size.</help>
				</entry>
				<entry name="IOMMU_IO_PGTABLE_LPAE_SELFTEST">
					<label>LPAE selftests</label>
					<help>Enable self-tests for LPAE page table allocator. This performs
a series of page-table consistency checks during boot.

If unsure, say N here.</help>
				</entry>
				<entry name="IOMMU_IO_PGTABLE_ARMV7S">
					<label>ARMv7/v8 Short Descriptor Format</label>
					<help>Enable support for the ARM Short-descriptor pagetable format.
This supports 32-bit virtual and physical addresses mapped using
2-level tables with 4KB pages/1MB sections, and contiguous entries
for 64KB pages/16MB supersections if indicated by the IOMMU driver.</help>
				</entry>
				<entry name="IOMMU_IO_PGTABLE_ARMV7S_SELFTEST">
					<label>ARMv7s selftests</label>
					<help>Enable self-tests for ARMv7s page table allocator. This performs
a series of page-table consistency checks during boot.

If unsure, say N here.</help>
				</entry>
			</container>
			<entry name="IOMMU_IOVA"/>
			<entry name="OF_IOMMU"/>
			<entry name="IOMMU_DMA"/>
			<entry name="FSL_PAMU">
				<label>Freescale IOMMU support</label>
				<help>Freescale PAMU support. PAMU is the IOMMU present on Freescale QorIQ platforms.
PAMU can authorize memory access, remap the memory address, and remap I/O
transaction types.</help>
			</entry>
			<entry name="MSM_IOMMU">
				<label>MSM IOMMU Support</label>
				<help>Support for the IOMMUs found on certain Qualcomm SOCs.
These IOMMUs allow virtualization of the address space used by most
cores within the multimedia subsystem.

If unsure, say N here.</help>
			</entry>
			<entry name="IOMMU_PGTABLES_L2"/>
			<entry name="AMD_IOMMU">
				<label>AMD IOMMU support</label>
				<help>With this option you can enable support for AMD IOMMU hardware in
your system. An IOMMU is a hardware component which provides
remapping of DMA memory accesses from devices. With an AMD IOMMU you
can isolate the DMA memory of different devices and protect the
system from misbehaving device drivers or hardware.

You can find out if your system has an AMD IOMMU if you look into
your BIOS for an option to enable it or if you have an IVRS ACPI
table.</help>
			</entry>
			<entry name="AMD_IOMMU_V2">
				<label>AMD IOMMU Version 2 driver</label>
				<help>This option enables support for the AMD IOMMUv2 features of the IOMMU
hardware. Select this option if you want to use devices that support
the PCI PRI and PASID interface.</help>
			</entry>
			<entry name="DMAR_TABLE"/>
			<entry name="INTEL_IOMMU">
				<label>Support for Intel IOMMU using DMA Remapping Devices</label>
				<help>DMA remapping (DMAR) devices support enables independent address
translations for Direct Memory Access (DMA) from devices.
These DMA remapping devices are reported via ACPI tables
and include PCI device scope covered by these DMA
remapping devices.</help>
			</entry>
			<entry name="INTEL_IOMMU_SVM">
				<label>Support for Shared Virtual Memory with Intel IOMMU</label>
				<help>Shared Virtual Memory (SVM) provides a facility for devices
to access DMA resources through process address space by
means of a Process Address Space ID (PASID).</help>
			</entry>
			<entry name="INTEL_IOMMU_DEFAULT_ON">
				<label>Enable Intel DMA Remapping Devices by default</label>
				<help>Selecting this option will enable a DMAR device at boot time if
one is found. If this option is not selected, DMAR support can
be enabled by passing intel_iommu=on to the kernel.</help>
			</entry>
			<entry name="INTEL_IOMMU_BROKEN_GFX_WA">
				<label>Workaround broken graphics drivers (going away soon)</label>
				<help>Current Graphics drivers tend to use physical address
for DMA and avoid using DMA APIs. Setting this config
option permits the IOMMU driver to set a unity map for
all the OS-visible memory. Hence the driver can continue
to use physical addresses for DMA, at least until this
option is removed in the 2.6.32 kernel.</help>
			</entry>
			<entry name="INTEL_IOMMU_FLOPPY_WA">
				<help>Floppy disk drivers are known to bypass DMA API calls
thereby failing to work when IOMMU is enabled. This
workaround will setup a 1:1 mapping for the first
16MiB to make floppy (an ISA device) work.</help>
			</entry>
			<entry name="IRQ_REMAP">
				<label>Support for Interrupt Remapping</label>
				<help>Supports Interrupt remapping for IO-APIC and MSI devices.
To use x2apic mode in the CPU's which support x2APIC enhancements or
to support platforms with CPU's having &gt; 8 bit APIC ID, say Y.</help>
			</entry>
			<entry name="OMAP_IOMMU">
				<label>OMAP IOMMU Support</label>
				<help>The OMAP3 media platform drivers depend on iommu support,
if you need them say Y here.</help>
			</entry>
			<entry name="OMAP_IOMMU_DEBUG">
				<label>Export OMAP IOMMU internals in DebugFS</label>
				<help>Select this to see extensive information about
the internal state of OMAP IOMMU in debugfs.

Say N unless you know you need this.</help>
			</entry>
			<entry name="ROCKCHIP_IOMMU">
				<label>Rockchip IOMMU Support</label>
				<help>Support for IOMMUs found on Rockchip rk32xx SOCs.
These IOMMUs allow virtualization of the address space used by most
cores within the multimedia subsystem.
Say Y here if you are using a Rockchip SoC that includes an IOMMU
device.</help>
			</entry>
			<entry name="TEGRA_IOMMU_GART">
				<label>Tegra GART IOMMU Support</label>
				<help>Enables support for remapping discontiguous physical memory
shared with the operating system into contiguous I/O virtual
space through the GART (Graphics Address Relocation Table)
hardware included on Tegra SoCs.</help>
			</entry>
			<entry name="TEGRA_IOMMU_SMMU">
				<label>NVIDIA Tegra SMMU Support</label>
				<help>This driver supports the IOMMU hardware (SMMU) found on NVIDIA Tegra
SoCs (Tegra30 up to Tegra210).</help>
			</entry>
			<entry name="EXYNOS_IOMMU">
				<label>Exynos IOMMU Support</label>
				<help>Support for the IOMMU (System MMU) of Samsung Exynos application
processor family. This enables H/W multimedia accelerators to see
non-linear physical memory chunks as linear memory in their
address space.

If unsure, say N here.</help>
			</entry>
			<entry name="EXYNOS_IOMMU_DEBUG">
				<label>Debugging log for Exynos IOMMU</label>
				<help>Select this to see the detailed log message that shows what
happens in the IOMMU driver.

Say N unless you need kernel log message for IOMMU debugging.</help>
			</entry>
			<entry name="IPMMU_VMSA">
				<label>Renesas VMSA-compatible IPMMU</label>
				<help>Support for the Renesas VMSA-compatible IPMMU Renesas found in the
R-Mobile APE6 and R-Car H2/M2 SoCs.

If unsure, say N.</help>
			</entry>
			<entry name="SPAPR_TCE_IOMMU">
				<label>sPAPR TCE IOMMU Support</label>
				<help>Enables bits of IOMMU API required by VFIO. The iommu_ops
is not implemented as it is not necessary for VFIO.</help>
			</entry>
			<entry name="ARM_SMMU">
				<label>ARM Ltd. System MMU (SMMU) Support</label>
				<help>Support for implementations of the ARM System MMU architecture
versions 1 and 2.

Say Y here if your SoC includes an IOMMU device implementing
the ARM SMMU architecture.</help>
			</entry>
			<entry name="ARM_SMMU_V3">
				<label>ARM Ltd. System MMU Version 3 (SMMUv3) Support</label>
				<help>Support for implementations of the ARM System MMU architecture
version 3 providing translation support to a PCIe root complex.

Say Y here if your system includes an IOMMU device implementing
the ARM SMMUv3 architecture.</help>
			</entry>
			<entry name="S390_IOMMU">
				<help>Support for the IOMMU API for s390 PCI devices.</help>
			</entry>
			<entry name="MTK_IOMMU">
				<label>MTK IOMMU Support</label>
				<help>Support for the M4U on certain Mediatek SOCs. M4U is MultiMedia
Memory Management Unit. This option enables remapping of DMA memory
accesses for the multimedia subsystem.

If unsure, say N here.</help>
			</entry>
			<entry name="MTK_IOMMU_V1">
				<label>MTK IOMMU Version 1 (M4U gen1) Support</label>
				<help>Support for the M4U on certain Mediatek SoCs. M4U generation 1 HW is
Multimedia Memory Managememt Unit. This option enables remapping of
DMA memory accesses for the multimedia subsystem.

if unsure, say N here.</help>
			</entry>
			<container name="Remoteproc_drivers">
				<label>Remoteproc drivers</label>
				<entry name="REMOTEPROC"/>
				<entry name="OMAP_REMOTEPROC">
					<label>OMAP remoteproc support</label>
					<help>Say y here to support OMAP's remote processors (dual M3
and DSP on OMAP4) via the remote processor framework.

Currently only supported on OMAP4.

Usually you want to say y here, in order to enable multimedia
use-cases to run on your platform (multimedia codecs are
offloaded to remote DSP processors using this framework).

It's safe to say n here if you're not interested in multimedia
offloading or just want a bare minimum kernel.</help>
				</entry>
				<entry name="STE_MODEM_RPROC">
					<label>STE-Modem remoteproc support</label>
					<help>Say y or m here to support STE-Modem shared memory driver.
This can be either built-in or a loadable module.
If unsure say N.</help>
				</entry>
				<entry name="WKUP_M3_RPROC">
					<label>AMx3xx Wakeup M3 remoteproc support</label>
					<help>Say y here to support Wakeup M3 remote processor on TI AM33xx
and AM43xx family of SoCs.

Required for Suspend-to-RAM on AM33xx and AM43xx SoCs. Also needed
for deep CPUIdle states on AM33xx SoCs. Allows for loading of the
firmware onto these remote processors.
If unsure say N.</help>
				</entry>
				<entry name="DA8XX_REMOTEPROC">
					<label>DA8xx/OMAP-L13x remoteproc support</label>
					<help>Say y here to support DA8xx/OMAP-L13x remote processors via the
remote processor framework.

You want to say y here in order to enable AMP
use-cases to run on your platform (multimedia codecs are
offloaded to remote DSP processors using this framework).

This module controls the name of the firmware file that gets
loaded on the DSP.  This file must reside in the /lib/firmware
directory.  It can be specified via the module parameter
da8xx_fw_name=&lt;filename&gt;, and if not specified will default to
&quot;rproc-dsp-fw&quot;.

It's safe to say n here if you're not interested in multimedia
offloading.</help>
				</entry>
				<entry name="QCOM_MDT_LOADER"/>
				<entry name="QCOM_Q6V5_PIL">
					<label>Qualcomm Hexagon V5 Peripherial Image Loader</label>
					<help>Say y here to support the Qualcomm Peripherial Image Loader for the
Hexagon V5 based remote processors.</help>
				</entry>
				<entry name="ST_REMOTEPROC">
					<label>ST remoteproc support</label>
					<help>Say y here to support ST's adjunct processors via the remote
processor framework.
This can be either built-in or a loadable module.</help>
				</entry>
			</container>
			<container name="Rpmsg_drivers">
				<label>Rpmsg drivers</label>
				<entry name="RPMSG"/>
			</container>
			<container name="SOC_System_On_Chip_specific_Drivers">
				<label>SOC (System On Chip) specific Drivers</label>
				<container name="Broadcom_SoC_drivers">
					<label>Broadcom SoC drivers</label>
					<entry name="RASPBERRYPI_POWER">
						<label>Raspberry Pi power domain driver</label>
						<help>This enables support for the RPi power domains which can be enabled
or disabled via the RPi firmware.</help>
					</entry>
					<entry name="SOC_BRCMSTB">
						<label>Broadcom STB SoC drivers</label>
						<help>Enables drivers for the Broadcom Set-Top Box (STB) series of chips.
This option alone enables only some support code, while the drivers
can be enabled individually within this menu.

If unsure, say N.</help>
					</entry>
				</container>
				<entry name="QUICC_ENGINE">
					<label>Freescale QUICC Engine (QE) Support</label>
					<help>The QUICC Engine (QE) is a new generation of communications
coprocessors on Freescale embedded CPUs (akin to CPM in older chips).
Selecting this option means that you wish to build a kernel
for a machine with a QE coprocessor.</help>
				</entry>
				<entry name="UCC_SLOW">
					<help>This option provides qe_lib support to UCC slow
protocols: UART, BISYNC, QMC</help>
				</entry>
				<entry name="UCC_FAST">
					<help>This option provides qe_lib support to UCC fast
protocols: HDLC, Ethernet, ATM, transparent</help>
				</entry>
				<entry name="UCC"/>
				<entry name="QE_TDM"/>
				<entry name="QE_USB">
					<help>QE USB Controller support
</help>
				</entry>
				<entry name="MTK_INFRACFG">
					<label>MediaTek INFRACFG Support</label>
					<help>Say yes here to add support for the MediaTek INFRACFG controller. The
INFRACFG controller contains various infrastructure registers not
directly associated to any device.</help>
				</entry>
				<entry name="MTK_PMIC_WRAP">
					<label>MediaTek PMIC Wrapper Support</label>
					<help>Say yes here to add support for MediaTek PMIC Wrapper found
on different MediaTek SoCs. The PMIC wrapper is a proprietary
hardware to connect the PMIC.</help>
				</entry>
				<entry name="MTK_SCPSYS">
					<label>MediaTek SCPSYS Support</label>
					<help>Say yes here to add support for the MediaTek SCPSYS power domain
driver.
</help>
				</entry>
				<entry name="QCOM_GSBI">
					<label>QCOM General Serial Bus Interface</label>
					<help>Say y here to enable GSBI support.  The GSBI provides control
functions for connecting the underlying serial UART, SPI, and I2C
devices to the output pins.</help>
				</entry>
				<entry name="QCOM_PM">
					<label>Qualcomm Power Management</label>
					<help>QCOM Platform specific power driver to manage cores and L2 low power
modes. It interface with various system drivers to put the cores in
low power modes.</help>
				</entry>
				<entry name="QCOM_SMEM">
					<label>Qualcomm Shared Memory Manager (SMEM)</label>
					<help>Say y here to enable support for the Qualcomm Shared Memory Manager.
The driver provides an interface to items in a heap shared among all
processors in a Qualcomm platform.</help>
				</entry>
				<entry name="QCOM_SMD">
					<label>Qualcomm Shared Memory Driver (SMD)</label>
					<help>Say y here to enable support for the Qualcomm Shared Memory Driver
providing communication channels to remote processors in Qualcomm
platforms.</help>
				</entry>
				<entry name="QCOM_SMD_RPM">
					<label>Qualcomm Resource Power Manager (RPM) over SMD</label>
					<help>If you say yes to this option, support will be included for the
Resource Power Manager system found in the Qualcomm 8974 based
devices.

This is required to access many regulators, clocks and bus
frequencies controlled by the RPM on these devices.

Say M here if you want to include support for the Qualcomm RPM as a
module. This will build a module called &quot;qcom-smd-rpm&quot;.</help>
				</entry>
				<entry name="QCOM_SMEM_STATE"/>
				<entry name="QCOM_SMP2P">
					<label>Qualcomm Shared Memory Point to Point support</label>
					<help>Say yes here to support the Qualcomm Shared Memory Point to Point
protocol.</help>
				</entry>
				<entry name="QCOM_SMSM">
					<label>Qualcomm Shared Memory State Machine</label>
					<help>Say yes here to support the Qualcomm Shared Memory State Machine.
The state machine is represented by bits in shared memory.</help>
				</entry>
				<entry name="QCOM_WCNSS_CTRL">
					<label>Qualcomm WCNSS control driver</label>
					<help>Client driver for the WCNSS_CTRL SMD channel, used to download nv
firmware to a newly booted WCNSS chip.
</help>
				</entry>
				<entry name="ROCKCHIP_PM_DOMAINS">
					<label>Rockchip generic power domain</label>
					<help>Say y here to enable power domain support.
In order to meet high performance and low power requirements, a power
management unit is designed or saving power when RK3288 in low power
mode. The RK3288 PMU is dedicated for managing the power of the whole chip.

If unsure, say N.</help>
				</entry>
				<entry name="SOC_SAMSUNG">
					<label>Samsung SoC driver support&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="EXYNOS_PMU">
					<label>Exynos PMU controller driver&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="EXYNOS_PM_DOMAINS">
					<label>Exynos PM domains&quot; if COMPILE_TEST</label>
				</entry>
				<entry name="SUNXI_SRAM">
					<help>Say y here to enable the SRAM controller support. This
device is responsible on mapping the SRAM in the sunXi SoCs
whether to the CPU/DMA, or to the devices.
</help>
				</entry>
				<entry name="ARCH_TEGRA_2x_SOC">
					<label>Enable support for Tegra20 family</label>
					<help>Support for NVIDIA Tegra AP20 and T20 processors, based on the
ARM CortexA9MP CPU and the ARM PL310 L2 cache controller</help>
				</entry>
				<entry name="ARCH_TEGRA_3x_SOC">
					<label>Enable support for Tegra30 family</label>
					<help>Support for NVIDIA Tegra T30 processor family, based on the
ARM CortexA9MP CPU and the ARM PL310 L2 cache controller</help>
				</entry>
				<entry name="ARCH_TEGRA_114_SOC">
					<label>Enable support for Tegra114 family</label>
					<help>Support for NVIDIA Tegra T114 processor family, based on the
ARM CortexA15MP CPU</help>
				</entry>
				<entry name="ARCH_TEGRA_124_SOC">
					<label>Enable support for Tegra124 family</label>
					<help>Support for NVIDIA Tegra T124 processor family, based on the
ARM CortexA15MP CPU</help>
				</entry>
				<entry name="ARCH_TEGRA_132_SOC">
					<label>NVIDIA Tegra132 SoC</label>
					<help>Enable support for NVIDIA Tegra132 SoC, based on the Denver
ARMv8 CPU.  The Tegra132 SoC is similar to the Tegra124 SoC,
but contains an NVIDIA Denver CPU complex in place of
Tegra124's &quot;4+1&quot; Cortex-A15 CPU complex.</help>
				</entry>
				<entry name="ARCH_TEGRA_210_SOC">
					<label>NVIDIA Tegra210 SoC</label>
					<help>Enable support for the NVIDIA Tegra210 SoC. Also known as Tegra X1,
the Tegra210 has four Cortex-A57 cores paired with four Cortex-A53
cores in a switched configuration. It features a GPU of the Maxwell
architecture with support for DX11, SM4, OpenGL 4.5, OpenGL ES 3.1
and providing 256 CUDA cores. It supports hardware-accelerated en-
and decoding of various video standards including H.265, H.264 and
VP8 at 4K resolution and up to 60 fps.

Besides the multimedia features it also comes with a variety of I/O
controllers, such as GPIO, I2C, SPI, SDHCI, PCIe, SATA and XHCI, to
name only a few.</help>
				</entry>
				<entry name="SOC_TI">
					<label>TI SOC drivers support</label>
				</entry>
				<entry name="KEYSTONE_NAVIGATOR_QMSS">
					<label>Keystone Queue Manager Sub System</label>
					<help>Say y here to support the Keystone multicore Navigator Queue
Manager support. The Queue Manager is a hardware module that
is responsible for accelerating management of the packet queues.
Packets are queued/de-queued by writing/reading descriptor address
to a particular memory mapped location in the Queue Manager module.

If unsure, say N.</help>
				</entry>
				<entry name="KEYSTONE_NAVIGATOR_DMA">
					<label>TI Keystone Navigator Packet DMA support</label>
					<help>Say y tp enable support for the Keystone Navigator Packet DMA on
on Keystone family of devices. It sets up the dma channels for the
Queue Manager Sub System.

If unsure, say N.</help>
				</entry>
				<entry name="WKUP_M3_IPC">
					<label>TI AMx3 Wkup-M3 IPC Driver</label>
					<help>TI AM33XX and AM43XX have a Cortex M3, the Wakeup M3, to handle
low power transitions. This IPC driver provides the necessary API
to communicate and use the Wakeup M3 for PM features like suspend
resume and boots it using wkup_m3_rproc driver.</help>
				</entry>
				<entry name="UX500_SOC_ID">
					<label>SoC bus for ST-Ericsson ux500</label>
					<help>Include support for the SoC bus on the ARM RealView platforms
providing some sysfs information about the ASIC variant.
</help>
				</entry>
				<entry name="SOC_INTEGRATOR_CM">
					<label>SoC bus device for the ARM Integrator platform core modules</label>
					<help>Include support for the SoC bus on the ARM Integrator platform
core modules providing some sysfs information about the ASIC
variant.</help>
				</entry>
				<entry name="SOC_REALVIEW">
					<label>SoC bus device for the ARM RealView platforms</label>
					<help>Include support for the SoC bus on the ARM RealView platforms
providing some sysfs information about the ASIC variant.
</help>
				</entry>
			</container>
			<entry name="PM_DEVFREQ">
				<label>Generic Dynamic Voltage and Frequency Scaling (DVFS) support</label>
				<help>A device may have a list of frequencies and voltages available.
devfreq, a generic DVFS framework can be registered for a device
in order to let the governor provided to devfreq choose an
operating frequency based on the device driver's policy.

Each device may have its own governor and policy. Devfreq can
reevaluate the device state periodically and/or based on the
notification to &quot;nb&quot;, a notifier block, of devfreq.

Like some CPUs with CPUfreq, a device may have multiple clocks.
However, because the clock frequencies of a single device are
determined by the single device's state, an instance of devfreq
is attached to a single device and returns a &quot;representative&quot;
clock frequency of the device, which is also attached
to a device by 1-to-1. The device registering devfreq takes the
responsibility to &quot;interpret&quot; the representative frequency and
to set its every clock accordingly with the &quot;target&quot; callback
given to devfreq.

When OPP is used with the devfreq device, it is recommended to
register devfreq's nb to the OPP's notifier head.  If OPP is
used with the devfreq device, you may use OPP helper
functions defined in devfreq.h.</help>
			</entry>
			<entry name="DEVFREQ_GOV_SIMPLE_ONDEMAND">
				<label>Simple Ondemand</label>
				<help>Chooses frequency based on the recent load on the device. Works
similar as ONDEMAND governor of CPUFREQ does. A device with
Simple-Ondemand should be able to provide busy/total counter
values that imply the usage rate. A device may provide tuned
values to the governor with data field at devfreq_add_device().</help>
			</entry>
			<entry name="DEVFREQ_GOV_PERFORMANCE">
				<label>Performance</label>
				<help>Sets the frequency at the maximum available frequency.
This governor always returns UINT_MAX as frequency so that
the DEVFREQ framework returns the highest frequency available
at any time.</help>
			</entry>
			<entry name="DEVFREQ_GOV_POWERSAVE">
				<label>Powersave</label>
				<help>Sets the frequency at the minimum available frequency.
This governor always returns 0 as frequency so that
the DEVFREQ framework returns the lowest frequency available
at any time.</help>
			</entry>
			<entry name="DEVFREQ_GOV_USERSPACE">
				<label>Userspace</label>
				<help>Sets the frequency at the user specified one.
This governor returns the user configured frequency if there
has been an input to /sys/devices/.../power/devfreq_set_freq.
Otherwise, the governor does not change the frequency
given at the initialization.</help>
			</entry>
			<entry name="DEVFREQ_GOV_PASSIVE">
				<label>Passive</label>
				<help>Sets the frequency based on the frequency of its parent devfreq
device. This governor does not change the frequency by itself
through sysfs entries. The passive governor recommends that
devfreq device uses the OPP table to get the frequency/voltage.</help>
			</entry>
			<entry name="ARM_EXYNOS_BUS_DEVFREQ">
				<label>ARM EXYNOS Generic Memory Bus DEVFREQ Driver</label>
				<help>This adds the common DEVFREQ driver for Exynos Memory bus. Exynos
Memory bus has one more group of memory bus (e.g, MIF and INT block).
Each memory bus group could contain many memoby bus block. It reads
PPMU counters of memory controllers by using DEVFREQ-event device
and adjusts the operating frequencies and voltages with OPP support.
This does not yet operate with optimal voltages.</help>
			</entry>
			<entry name="ARM_TEGRA_DEVFREQ">
				<label>Tegra DEVFREQ Driver</label>
				<help>This adds the DEVFREQ driver for the Tegra family of SoCs.
It reads ACTMON counters of memory controllers and adjusts the
operating frequencies and voltages with OPP support.</help>
			</entry>
			<entry name="PM_DEVFREQ_EVENT">
				<label>DEVFREQ-Event device Support</label>
				<help>The devfreq-event device provide the raw data and events which
indicate the current state of devfreq-event device. The provided
data from devfreq-event device is used to monitor the state of
device and determine the suitable size of resource to reduce the
wasted resource.

The devfreq-event device can support the various type of events
(e.g., raw data, utilization, latency, bandwidth). The events
may be used by devfreq governor and other subsystem.</help>
			</entry>
			<entry name="DEVFREQ_EVENT_EXYNOS_NOCP">
				<label>EXYNOS NoC (Network On Chip) Probe DEVFREQ event Driver</label>
				<help>This add the devfreq-event driver for Exynos SoC. It provides NoC
(Network on Chip) Probe counters to measure the bandwidth of AXI bus.</help>
			</entry>
			<entry name="DEVFREQ_EVENT_EXYNOS_PPMU">
				<label>EXYNOS PPMU (Platform Performance Monitoring Unit) DEVFREQ event Driver</label>
				<help>This add the devfreq-event driver for Exynos SoC. It provides PPMU
(Platform Performance Monitoring Unit) counters to estimate the
utilization of each module.</help>
			</entry>
			<entry name="EXTCON">
				<label>External Connector Class (extcon) support</label>
				<help>Say Y here to enable external connector class (extcon) support.
This allows monitoring external connectors by userspace
via sysfs and uevent and supports external connectors with
multiple states; i.e., an extcon that may have multiple
cables attached. For example, an external connector of a device
may be used to connect an HDMI cable and a AC adaptor, and to
host USB ports. Many of 30-pin connectors including PDMI are
also good examples.</help>
			</entry>
			<entry name="EXTCON_ADC_JACK">
				<label>ADC Jack extcon support</label>
				<help>Say Y here to enable extcon device driver based on ADC values.</help>
			</entry>
			<entry name="EXTCON_ARIZONA">
				<label>Wolfson Arizona EXTCON support</label>
				<help>Say Y here to enable support for external accessory detection
with Wolfson Arizona devices. These are audio CODECs with
advanced audio accessory detection support.</help>
			</entry>
			<entry name="EXTCON_AXP288">
				<label>X-Power AXP288 EXTCON support</label>
				<help>Say Y here to enable support for USB peripheral detection
and USB MUX switching by X-Power AXP288 PMIC.</help>
			</entry>
			<entry name="EXTCON_GPIO">
				<label>GPIO extcon support</label>
				<help>Say Y here to enable GPIO based extcon support. Note that GPIO
extcon supports single state per extcon instance.</help>
			</entry>
			<entry name="EXTCON_MAX14577">
				<label>Maxim MAX14577/77836 EXTCON Support</label>
				<help>If you say yes here you get support for the MUIC device of
Maxim MAX14577/77836. The MAX14577/77836 MUIC is a USB port accessory
detector and switch.</help>
			</entry>
			<entry name="EXTCON_MAX3355">
				<label>Maxim MAX3355 USB OTG EXTCON Support</label>
				<help>If you say yes here you get support for the USB OTG role detection by
MAX3355. The MAX3355 chip integrates a charge pump and comparators to
enable a system with an integrated USB OTG dual-role transceiver to
function as an USB OTG dual-role device.</help>
			</entry>
			<entry name="EXTCON_MAX77693">
				<label>Maxim MAX77693 EXTCON Support</label>
				<help>If you say yes here you get support for the MUIC device of
Maxim MAX77693 PMIC. The MAX77693 MUIC is a USB port accessory
detector and switch.</help>
			</entry>
			<entry name="EXTCON_MAX77843">
				<label>Maxim MAX77843 EXTCON Support</label>
				<help>If you say yes here you get support for the MUIC device of
Maxim MAX77843. The MAX77843 MUIC is a USB port accessory
detector add switch.</help>
			</entry>
			<entry name="EXTCON_MAX8997">
				<label>Maxim MAX8997 EXTCON Support</label>
				<help>If you say yes here you get support for the MUIC device of
Maxim MAX8997 PMIC. The MAX8997 MUIC is a USB port accessory
detector and switch.</help>
			</entry>
			<entry name="EXTCON_PALMAS">
				<label>Palmas USB EXTCON support</label>
				<help>Say Y here to enable support for USB peripheral and USB host
detection by palmas usb.</help>
			</entry>
			<entry name="EXTCON_RT8973A">
				<label>Richtek RT8973A EXTCON support</label>
				<help>If you say yes here you get support for the MUIC device of
Richtek RT8973A. The RT8973A is a USB port accessory detector
and switch that is optimized to protect low voltage system
from abnormal high input voltage (up to 28V).</help>
			</entry>
			<entry name="EXTCON_SM5502">
				<label>Silicon Mitus SM5502 EXTCON support</label>
				<help>If you say yes here you get support for the MUIC device of
Silicon Mitus SM5502. The SM5502 is a USB port accessory
detector and switch.</help>
			</entry>
			<entry name="EXTCON_USB_GPIO">
				<label>USB GPIO extcon support</label>
				<help>Say Y here to enable GPIO based USB cable detection extcon support.
Used typically if GPIO is used for USB ID pin detection.</help>
			</entry>
			<entry name="MEMORY">
				<label>Memory Controller drivers</label>
			</entry>
			<entry name="ARM_PL172_MPMC">
				<label>ARM PL172 MPMC driver</label>
				<help>This selects the ARM PrimeCell PL172 MultiPort Memory Controller.
If you have an embedded system with an AMBA bus and a PL172
controller, say Y or M here.</help>
			</entry>
			<entry name="ATMEL_SDRAMC">
				<label>Atmel (Multi-port DDR-)SDRAM Controller</label>
				<help>This driver is for Atmel SDRAM Controller or Atmel Multi-port
DDR-SDRAM Controller available on Atmel AT91SAM9 and SAMA5 SoCs.
Starting with the at91sam9g45, this controller supports SDR, DDR and
LP-DDR memories.</help>
			</entry>
			<entry name="ATMEL_EBI">
				<label>Atmel EBI driver</label>
				<help>Driver for Atmel EBI controller.
Used to configure the EBI (external bus interface) when the device-
tree is used. This bus supports NANDs, external ethernet controller,
SRAMs, ATA devices, etc.</help>
			</entry>
			<entry name="TI_AEMIF">
				<label>Texas Instruments AEMIF driver</label>
				<help>This driver is for the AEMIF module available in Texas Instruments
SoCs. AEMIF stands for Asynchronous External Memory Interface and
is intended to provide a glue-less interface to a variety of
asynchronuous memory devices like ASRAM, NOR and NAND memory. A total
of 256M bytes of any of these memories can be accessed at a given
time via four chip selects with 64M byte access per chip select.</help>
			</entry>
			<entry name="TI_EMIF">
				<label>Texas Instruments EMIF driver</label>
				<help>This driver is for the EMIF module available in Texas Instruments
SoCs. EMIF is an SDRAM controller that, based on its revision,
supports one or more of DDR2, DDR3, and LPDDR2 SDRAM protocols.
This driver takes care of only LPDDR2 memories presently. The
functions of the driver includes re-configuring AC timing
parameters and other settings during frequency, voltage and
temperature changes</help>
			</entry>
			<entry name="OMAP_GPMC">
				<help>This driver is for the General Purpose Memory Controller (GPMC)
present on Texas Instruments SoCs (e.g. OMAP2+). GPMC allows
interfacing to a variety of asynchronous as well as synchronous
memory drives like NOR, NAND, OneNAND, SRAM.</help>
			</entry>
			<entry name="OMAP_GPMC_DEBUG">
				<label>Enable GPMC debug output and skip reset of GPMC during init</label>
				<help>Enables verbose debugging mostly to decode the bootloader provided
timings. To preserve the bootloader provided timings, the reset
of GPMC is skipped during init. Enable this during development to
configure devices connected to the GPMC bus.

NOTE: In addition to matching the register setup with the bootloader
you also need to match the GPMC FCLK frequency used by the
bootloader or else the GPMC timings won't be identical with the
bootloader timings.</help>
			</entry>
			<entry name="MVEBU_DEVBUS">
				<label>Marvell EBU Device Bus Controller</label>
				<help>This driver is for the Device Bus controller available in some
Marvell EBU SoCs such as Discovery (mv78xx0), Orion (88f5xxx) and
Armada 370 and Armada XP. This controller allows to handle flash
devices such as NOR, NAND, SRAM, and FPGA.</help>
			</entry>
			<entry name="TEGRA20_MC">
				<label>Tegra20 Memory Controller(MC) driver</label>
				<help>This driver is for the Memory Controller(MC) module available
in Tegra20 SoCs, mainly for a address translation fault
analysis, especially for IOMMU/GART(Graphics Address
Relocation Table) module.</help>
			</entry>
			<entry name="FSL_CORENET_CF">
				<label>Freescale CoreNet Error Reporting</label>
				<help>Say Y for reporting of errors from the Freescale CoreNet
Coherency Fabric.  Errors reported include accesses to
physical addresses that mapped by no local access window
(LAW) or an invalid LAW, as well as bad cache state that
represents a coherency violation.</help>
			</entry>
			<entry name="FSL_IFC"/>
			<entry name="JZ4780_NEMC">
				<label>Ingenic JZ4780 SoC NEMC driver</label>
				<help>This driver is for the NAND/External Memory Controller (NEMC) in
the Ingenic JZ4780. This controller is used to handle external
memory devices such as NAND and SRAM.</help>
			</entry>
			<entry name="MTK_SMI">
				<help>This driver is for the Memory Controller module in MediaTek SoCs,
mainly help enable/disable iommu and control the power domain and
clocks for each local arbiter.</help>
			</entry>
			<entry name="SAMSUNG_MC">
				<label>Samsung Exynos Memory Controller support&quot; if COMPILE_TEST</label>
				<help>Support for the Memory Controller (MC) devices found on
Samsung Exynos SoCs.</help>
			</entry>
			<entry name="EXYNOS_SROM">
				<label>Exynos SROM controller driver&quot; if COMPILE_TEST</label>
			</entry>
			<entry name="TEGRA_MC">
				<label>NVIDIA Tegra Memory Controller support</label>
				<help>This driver supports the Memory Controller (MC) hardware found on
NVIDIA Tegra SoCs.</help>
			</entry>
			<entry name="TEGRA124_EMC">
				<label>NVIDIA Tegra124 External Memory Controller driver</label>
				<help>This driver is for the External Memory Controller (EMC) found on
Tegra124 chips. The EMC controls the external DRAM on the board.
This driver is required to change memory timings / clock rate for
external memory.
</help>
			</entry>
			<entry name="IIO">
				<label>Industrial I/O support</label>
				<help>The industrial I/O subsystem provides a unified framework for
drivers for many different types of embedded sensors using a
number of different physical interfaces (i2c, spi, etc).</help>
			</entry>
			<entry name="IIO_BUFFER">
				<label>Enable buffer support within IIO</label>
				<help>Provide core support for various buffer based data
acquisition methods.</help>
			</entry>
			<entry name="IIO_BUFFER_CB">
				<label>IIO callback buffer used for push in-kernel interfaces</label>
				<help>Should be selected by any drivers that do in-kernel push
usage.  That is, those where the data is pushed to the consumer.</help>
			</entry>
			<entry name="IIO_BUFFER_DMA">
				<help>Provides the generic IIO DMA buffer infrastructure that can be used by
drivers for devices with DMA support to implement the IIO buffer.

Should be selected by drivers that want to use the generic DMA buffer
infrastructure.</help>
			</entry>
			<entry name="IIO_BUFFER_DMAENGINE">
				<help>Provides a bonding of the generic IIO DMA buffer infrastructure with the
DMAengine framework. This can be used by converter drivers with a DMA port
connected to an external DMA controller which is supported by the
DMAengine framework.

Should be selected by drivers that want to use this functionality.</help>
			</entry>
			<entry name="IIO_KFIFO_BUF">
				<label>Industrial I/O buffering based on kfifo</label>
				<help>A simple fifo based on kfifo.  Note that this currently provides
no buffer events so it is up to userspace to work out how
often to read from the buffer.</help>
			</entry>
			<entry name="IIO_TRIGGERED_BUFFER">
				<help>Provides helper functions for setting up triggered buffers.
</help>
			</entry>
			<entry name="IIO_CONFIGFS">
				<label>Enable IIO configuration via configfs</label>
				<help>This allows configuring various IIO bits through configfs
(e.g. software triggers). For more info see
Documentation/iio/iio_configfs.txt.</help>
			</entry>
			<entry name="IIO_TRIGGER">
				<label>Enable triggered sampling support</label>
				<help>Provides IIO core support for triggers.  Currently these
are used to initialize capture of samples to push into
buffers.  The triggers are effectively a 'capture
data now' interrupt.</help>
			</entry>
			<entry name="IIO_CONSUMERS_PER_TRIGGER">
				<label>Maximum number of consumers per trigger</label>
				<help>This value controls the maximum number of consumers that a
given trigger may handle. Default is 2.</help>
			</entry>
			<entry name="IIO_SW_DEVICE">
				<label>Enable software IIO device support</label>
				<help>Provides IIO core support for software devices. A software
device can be created via configfs or directly by a driver
using the API provided.</help>
			</entry>
			<entry name="IIO_SW_TRIGGER">
				<label>Enable software triggers support</label>
				<help>Provides IIO core support for software triggers. A software
trigger can be created via configfs or directly by a driver
using the API provided.</help>
			</entry>
			<entry name="IIO_TRIGGERED_EVENT">
				<help>Provides helper functions for setting up triggered events.</help>
			</entry>
			<container name="Accelerometers">
				<label>Accelerometers</label>
				<entry name="BMA180">
					<label>Bosch BMA180/BMA250 3-Axis Accelerometer Driver</label>
					<help>Say Y here if you want to build a driver for the Bosch BMA180 or
BMA250 triaxial acceleration sensor.

To compile this driver as a module, choose M here: the
module will be called bma180.</help>
				</entry>
				<entry name="BMA220">
					<label>Bosch BMA220 3-Axis Accelerometer Driver</label>
					<help>Say yes here to add support for the Bosch BMA220 triaxial
acceleration sensor.

To compile this driver as a module, choose M here: the
module will be called bma220_spi.</help>
				</entry>
				<entry name="BMC150_ACCEL">
					<label>Bosch BMC150 Accelerometer Driver</label>
					<help>Say yes here to build support for the following Bosch accelerometers:
BMC150, BMI055, BMA250E, BMA222E, BMA255, BMA280.

This is a combo module with both accelerometer and magnetometer.
This driver is only implementing accelerometer part, which has
its own address and register map.</help>
				</entry>
				<entry name="BMC150_ACCEL_I2C"/>
				<entry name="BMC150_ACCEL_SPI"/>
				<entry name="HID_SENSOR_ACCEL_3D">
					<label>HID Accelerometers 3D</label>
					<help>Say yes here to build support for the HID SENSOR
accelerometers 3D.

To compile this driver as a module, choose M here: the
module will be called hid-sensor-accel-3d.</help>
				</entry>
				<entry name="IIO_ST_ACCEL_3AXIS">
					<label>STMicroelectronics accelerometers 3-Axis Driver</label>
					<help>Say yes here to build support for STMicroelectronics accelerometers:
LSM303DLH, LSM303DLHC, LIS3DH, LSM330D, LSM330DL, LSM330DLC,
LIS331DLH, LSM303DL, LSM303DLM, LSM330, LIS2DH12, H3LIS331DL.

This driver can also be built as a module. If so, these modules
will be created:
- st_accel (core functions for the driver [it is mandatory]);
- st_accel_i2c (necessary for the I2C devices [optional*]);
- st_accel_spi (necessary for the SPI devices [optional*]);

(*) one of these is necessary to do something.</help>
				</entry>
				<entry name="IIO_ST_ACCEL_I2C_3AXIS"/>
				<entry name="IIO_ST_ACCEL_SPI_3AXIS"/>
				<entry name="KXSD9">
					<label>Kionix KXSD9 Accelerometer Driver</label>
					<help>Say yes here to build support for the Kionix KXSD9 accelerometer.
Currently this only supports the device via an SPI interface.

To compile this driver as a module, choose M here: the module
will be called kxsd9.</help>
				</entry>
				<entry name="KXCJK1013">
					<label>Kionix 3-Axis Accelerometer Driver</label>
					<help>Say Y here if you want to build a driver for the Kionix KXCJK-1013
triaxial acceleration sensor. This driver also supports KXCJ9-1008
and KXTJ2-1009.

To compile this driver as a module, choose M here: the module will
be called kxcjk-1013.</help>
				</entry>
				<entry name="MMA7455"/>
				<entry name="MMA7455_I2C">
					<label>Freescale MMA7455L/MMA7456L Accelerometer I2C Driver</label>
					<help>Say yes here to build support for the Freescale MMA7455L and
MMA7456L 3-axis accelerometer.

To compile this driver as a module, choose M here: the module
will be called mma7455_i2c.</help>
				</entry>
				<entry name="MMA7455_SPI">
					<label>Freescale MMA7455L/MMA7456L Accelerometer SPI Driver</label>
					<help>Say yes here to build support for the Freescale MMA7455L and
MMA7456L 3-axis accelerometer.

To compile this driver as a module, choose M here: the module
will be called mma7455_spi.</help>
				</entry>
				<entry name="MMA7660">
					<label>Freescale MMA7660FC 3-Axis Accelerometer Driver</label>
					<help>Say yes here to get support for the Freescale MMA7660FC 3-Axis
accelerometer.

Choosing M will build the driver as a module. If so, the module
will be called mma7660.</help>
				</entry>
				<entry name="MMA8452">
					<label>Freescale / NXP MMA8452Q and similar Accelerometers Driver</label>
					<help>Say yes here to build support for the following Freescale / NXP 3-axis
accelerometers: MMA8451Q, MMA8452Q, MMA8453Q, MMA8652FC, MMA8653FC,
FXLS8471Q.

To compile this driver as a module, choose M here: the module
will be called mma8452.</help>
				</entry>
				<entry name="MMA9551_CORE"/>
				<entry name="MMA9551">
					<label>Freescale MMA9551L Intelligent Motion-Sensing Platform Driver</label>
					<help>Say yes here to build support for the Freescale MMA9551L
Intelligent Motion-Sensing Platform Driver.

To compile this driver as a module, choose M here: the module
will be called mma9551.</help>
				</entry>
				<entry name="MMA9553">
					<label>Freescale MMA9553L Intelligent Pedometer Platform Driver</label>
					<help>Say yes here to build support for the Freescale MMA9553L
Intelligent Pedometer Platform Driver.

To compile this driver as a module, choose M here: the module
will be called mma9553.</help>
				</entry>
				<entry name="MXC4005">
					<label>Memsic MXC4005XC 3-Axis Accelerometer Driver</label>
					<help>Say yes here to build support for the Memsic MXC4005XC 3-axis
accelerometer.

To compile this driver as a module, choose M. The module will be
called mxc4005.</help>
				</entry>
				<entry name="MXC6255">
					<label>Memsic MXC6255 Orientation Sensing Accelerometer Driver</label>
					<help>Say yes here to build support for the Memsic MXC6255 Orientation
Sensing Accelerometer Driver.

To compile this driver as a module, choose M here: the module will be
called mxc6255.</help>
				</entry>
				<entry name="STK8312">
					<label>Sensortek STK8312 3-Axis Accelerometer Driver</label>
					<help>Say yes here to get support for the Sensortek STK8312 3-axis
accelerometer.

Choosing M will build the driver as a module. If so, the module
will be called stk8312.</help>
				</entry>
				<entry name="STK8BA50">
					<label>Sensortek STK8BA50 3-Axis Accelerometer Driver</label>
					<help>Say yes here to get support for the Sensortek STK8BA50 3-axis
accelerometer.

Choosing M will build the driver as a module. If so, the module
will be called stk8ba50.</help>
				</entry>
			</container>
			<container name="Analog_to_digital_converters">
				<label>Analog to digital converters</label>
				<entry name="AD_SIGMA_DELTA"/>
				<entry name="AD7266">
					<label>Analog Devices AD7265/AD7266 ADC driver</label>
					<help>Say yes here to build support for Analog Devices AD7265 and AD7266
ADCs.

To compile this driver as a module, choose M here: the module will be
called ad7266.</help>
				</entry>
				<entry name="AD7291">
					<label>Analog Devices AD7291 ADC driver</label>
					<help>Say yes here to build support for Analog Devices AD7291
8 Channel ADC with temperature sensor.

To compile this driver as a module, choose M here: the
module will be called ad7291.</help>
				</entry>
				<entry name="AD7298">
					<label>Analog Devices AD7298 ADC driver</label>
					<help>Say yes here to build support for Analog Devices AD7298
8 Channel ADC with temperature sensor.

To compile this driver as a module, choose M here: the
module will be called ad7298.</help>
				</entry>
				<entry name="AD7476">
					<label>Analog Devices AD7476 and similar 1-channel ADCs driver</label>
					<help>Say yes here to build support for Analog Devices AD7273, AD7274, AD7276,
AD7277, AD7278, AD7475, AD7476, AD7477, AD7478, AD7466, AD7467, AD7468,
AD7495, AD7910, AD7920, AD7920 SPI analog to digital converters (ADC).

To compile this driver as a module, choose M here: the
module will be called ad7476.</help>
				</entry>
				<entry name="AD7791">
					<label>Analog Devices AD7791 ADC driver</label>
					<help>Say yes here to build support for Analog Devices AD7787, AD7788, AD7789,
AD7790 and AD7791 SPI analog to digital converters (ADC).

To compile this driver as a module, choose M here: the module will be
called ad7791.</help>
				</entry>
				<entry name="AD7793">
					<label>Analog Devices AD7793 and similar ADCs driver</label>
					<help>Say yes here to build support for Analog Devices AD7785, AD7792, AD7793,
AD7794 and AD7795 SPI analog to digital converters (ADC).

To compile this driver as a module, choose M here: the
module will be called AD7793.</help>
				</entry>
				<entry name="AD7887">
					<label>Analog Devices AD7887 ADC driver</label>
					<help>Say yes here to build support for Analog Devices
AD7887 SPI analog to digital converter (ADC).

To compile this driver as a module, choose M here: the
module will be called ad7887.</help>
				</entry>
				<entry name="AD7923">
					<label>Analog Devices AD7923 and similar ADCs driver</label>
					<help>Say yes here to build support for Analog Devices
AD7904, AD7914, AD7923, AD7924 4 Channel ADCs.

To compile this driver as a module, choose M here: the
module will be called ad7923.</help>
				</entry>
				<entry name="AD799X">
					<label>Analog Devices AD799x ADC driver</label>
					<help>Say yes here to build support for Analog Devices:
ad7991, ad7995, ad7999, ad7992, ad7993, ad7994, ad7997, ad7998
i2c analog to digital converters (ADC). Provides direct access
via sysfs.

To compile this driver as a module, choose M here: the module will be
called ad799x.</help>
				</entry>
				<entry name="AT91_ADC">
					<label>Atmel AT91 ADC</label>
					<help>Say yes here to build support for Atmel AT91 ADC.

To compile this driver as a module, choose M here: the module will be
called at91_adc.</help>
				</entry>
				<entry name="AT91_SAMA5D2_ADC">
					<label>Atmel AT91 SAMA5D2 ADC</label>
					<help>Say yes here to build support for Atmel SAMA5D2 ADC which is
available on SAMA5D2 SoC family.

To compile this driver as a module, choose M here: the module will be
called at91-sama5d2_adc.</help>
				</entry>
				<entry name="AXP288_ADC">
					<label>X-Powers AXP288 ADC driver</label>
					<help>Say yes here to have support for X-Powers power management IC (PMIC) ADC
device. Depending on platform configuration, this general purpose ADC can
be used for sampling sensors such as thermal resistors.

To compile this driver as a module, choose M here: the module will be
called axp288_adc.</help>
				</entry>
				<entry name="BCM_IPROC_ADC">
					<label>Broadcom IPROC ADC driver</label>
					<help>Say Y here if you want to add support for the Broadcom static
ADC driver.

Broadcom iProc ADC driver. Broadcom iProc ADC controller has 8
channels. The driver allows the user to read voltage values.</help>
				</entry>
				<entry name="BERLIN2_ADC">
					<label>Marvell Berlin2 ADC driver</label>
					<help>Marvell Berlin2 ADC driver. This ADC has 8 channels, with one used for
temperature measurement.</help>
				</entry>
				<entry name="CC10001_ADC">
					<label>Cosmic Circuits 10001 ADC driver</label>
					<help>Say yes here to build support for Cosmic Circuits 10001 ADC.

This driver can also be built as a module. If so, the module will be
called cc10001_adc.</help>
				</entry>
				<entry name="DA9150_GPADC">
					<label>Dialog DA9150 GPADC driver support</label>
					<help>Say yes here to build support for Dialog DA9150 GPADC.

This driver can also be built as a module. If chosen, the module name
will be da9150-gpadc.

To compile this driver as a module, choose M here: the module will be
called berlin2-adc.</help>
				</entry>
				<entry name="EXYNOS_ADC">
					<label>Exynos ADC driver support</label>
					<help>Core support for the ADC block found in the Samsung EXYNOS series
of SoCs for drivers such as the touchscreen and hwmon to use to share
this resource.

To compile this driver as a module, choose M here: the module will be
called exynos_adc.</help>
				</entry>
				<entry name="FSL_MX25_ADC">
					<label>Freescale MX25 ADC driver</label>
					<help>Generic Conversion Queue driver used for general purpose ADC in the
MX25. This driver supports single measurements using the MX25 ADC.</help>
				</entry>
				<entry name="HI8435">
					<label>Holt Integrated Circuits HI-8435 threshold detector</label>
					<help>If you say yes here you get support for Holt Integrated Circuits
HI-8435 chip.

This driver can also be built as a module. If so, the module will be
called hi8435.</help>
				</entry>
				<entry name="INA2XX_ADC">
					<label>Texas Instruments INA2xx Power Monitors IIO driver</label>
					<help>Say yes here to build support for TI INA2xx family of Power Monitors.
This driver is mutually exclusive with the HWMON version.</help>
				</entry>
				<entry name="IMX7D_ADC">
					<label>IMX7D ADC driver</label>
					<help>Say yes here to build support for IMX7D ADC.

This driver can also be built as a module. If so, the module will be
called imx7d_adc.</help>
				</entry>
				<entry name="LP8788_ADC">
					<label>LP8788 ADC driver</label>
					<help>Say yes here to build support for TI LP8788 ADC.

To compile this driver as a module, choose M here: the module will be
called lp8788_adc.</help>
				</entry>
				<entry name="LPC18XX_ADC">
					<label>NXP LPC18xx ADC driver</label>
					<help>Say yes here to build support for NXP LPC18XX ADC.

To compile this driver as a module, choose M here: the module will be
called lpc18xx_adc.</help>
				</entry>
				<entry name="MAX1027">
					<label>Maxim max1027 ADC driver</label>
					<help>Say yes here to build support for Maxim SPI ADC models
max1027, max1029 and max1031.

To compile this driver as a module, choose M here: the module will be
called max1027.</help>
				</entry>
				<entry name="MAX1363">
					<label>Maxim max1363 ADC driver</label>
					<help>Say yes here to build support for many Maxim i2c analog to digital
converters (ADC). (max1361, max1362, max1363, max1364, max1036,
max1037, max1038, max1039, max1136, max1136, max1137, max1138,
max1139, max1236, max1237, max11238, max1239, max11600, max11601,
max11602, max11603, max11604, max11605, max11606, max11607,
max11608, max11609, max11610, max11611, max11612, max11613,
max11614, max11615, max11616, max11617, max11644, max11645,
max11646, max11647) Provides direct access via sysfs and buffered
data via the iio dev interface.

To compile this driver as a module, choose M here: the module will be
called max1363.</help>
				</entry>
				<entry name="MCP320X">
					<label>Microchip Technology MCP3x01/02/04/08</label>
					<help>Say yes here to build support for Microchip Technology's
MCP3001, MCP3002, MCP3004, MCP3008, MCP3201, MCP3202, MCP3204,
MCP3208 or MCP3301 analog to digital converter.

This driver can also be built as a module. If so, the module will be
called mcp320x.</help>
				</entry>
				<entry name="MCP3422">
					<label>Microchip Technology MCP3421/2/3/4/5/6/7/8 driver</label>
					<help>Say yes here to build support for Microchip Technology's MCP3421
MCP3422, MCP3423, MCP3424, MCP3425, MCP3426, MCP3427 or MCP3428
analog to digital converters.

This driver can also be built as a module. If so, the module will be
called mcp3422.</help>
				</entry>
				<entry name="MEN_Z188_ADC">
					<label>MEN 16z188 ADC IP Core support</label>
					<help>Say yes here to enable support for the MEN 16z188 ADC IP-Core on a MCB
carrier.

This driver can also be built as a module. If so, the module will be
called men_z188_adc.</help>
				</entry>
				<entry name="MXS_LRADC">
					<label>Freescale i.MX23/i.MX28 LRADC</label>
					<help>Say yes here to build support for i.MX23/i.MX28 LRADC convertor
built into these chips.

To compile this driver as a module, choose M here: the
module will be called mxs-lradc.</help>
				</entry>
				<entry name="NAU7802">
					<label>Nuvoton NAU7802 ADC driver</label>
					<help>Say yes here to build support for Nuvoton NAU7802 ADC.

To compile this driver as a module, choose M here: the
module will be called nau7802.</help>
				</entry>
				<entry name="PALMAS_GPADC">
					<label>TI Palmas General Purpose ADC</label>
					<help>Palmas series pmic chip by Texas Instruments (twl6035/6037)
is used in smartphones and tablets and supports a 16 channel
general purpose ADC.</help>
				</entry>
				<entry name="QCOM_SPMI_IADC">
					<label>Qualcomm SPMI PMIC current ADC</label>
					<help>This is the IIO Current ADC driver for Qualcomm QPNP IADC Chip.

The driver supports single mode operation to read from one of two
channels (external or internal). Hardware have additional
channels internally used for gain and offset calibration.

To compile this driver as a module, choose M here: the module will
be called qcom-spmi-iadc.</help>
				</entry>
				<entry name="QCOM_SPMI_VADC">
					<label>Qualcomm SPMI PMIC voltage ADC</label>
					<help>This is the IIO Voltage ADC driver for Qualcomm QPNP VADC Chip.

The driver supports multiple channels read. The VADC is a 15-bit
sigma-delta ADC. Some of the channels are internally used for
calibration.

To compile this driver as a module, choose M here: the module will
be called qcom-spmi-vadc.</help>
				</entry>
				<entry name="ROCKCHIP_SARADC">
					<label>Rockchip SARADC driver</label>
					<help>Say yes here to build support for the SARADC found in SoCs from
Rockchip.

To compile this driver as a module, choose M here: the
module will be called rockchip_saradc.</help>
				</entry>
				<entry name="TI_ADC081C">
					<label>Texas Instruments ADC081C/ADC101C/ADC121C family</label>
					<help>If you say yes here you get support for Texas Instruments ADC081C,
ADC101C and ADC121C ADC chips.

This driver can also be built as a module. If so, the module will be
called ti-adc081c.</help>
				</entry>
				<entry name="TI_ADC0832">
					<label>Texas Instruments ADC0831/ADC0832/ADC0834/ADC0838</label>
					<help>If you say yes here you get support for Texas Instruments ADC0831,
ADC0832, ADC0834, ADC0838 ADC chips.

This driver can also be built as a module. If so, the module will be
called ti-adc0832.</help>
				</entry>
				<entry name="TI_ADC128S052">
					<label>Texas Instruments ADC128S052/ADC122S021/ADC124S021</label>
					<help>If you say yes here you get support for Texas Instruments ADC128S052,
ADC122S021 and ADC124S021 chips.

This driver can also be built as a module. If so, the module will be
called ti-adc128s052.</help>
				</entry>
				<entry name="TI_ADS1015">
					<label>Texas Instruments ADS1015 ADC</label>
					<help>If you say yes here you get support for Texas Instruments ADS1015
ADC chip.

This driver can also be built as a module. If so, the module will be
called ti-ads1015.</help>
				</entry>
				<entry name="TI_ADS8688">
					<label>Texas Instruments ADS8688</label>
					<help>If you say yes here you get support for Texas Instruments ADS8684 and
and ADS8688 ADC chips

This driver can also be built as a module. If so, the module will be
called ti-ads8688.</help>
				</entry>
				<entry name="TI_AM335X_ADC">
					<label>TI's AM335X ADC driver</label>
					<help>Say yes here to build support for Texas Instruments ADC
driver which is also a MFD client.

To compile this driver as a module, choose M here: the module will be
called ti_am335x_adc.</help>
				</entry>
				<entry name="TWL4030_MADC">
					<label>TWL4030 MADC (Monitoring A/D Converter)</label>
					<help>This driver provides support for Triton TWL4030-MADC. The
driver supports both RT and SW conversion methods.

This driver can also be built as a module. If so, the module will be
called twl4030-madc.</help>
				</entry>
				<entry name="TWL6030_GPADC">
					<label>TWL6030 GPADC (General Purpose A/D Converter) Support</label>
					<help>Say yes here if you want support for the TWL6030/TWL6032 General
Purpose A/D Converter. This will add support for battery type
detection, battery voltage and temperature measurement, die
temperature measurement, system supply voltage, audio accessory,
USB ID detection.

This driver can also be built as a module. If so, the module will be
called twl6030-gpadc.</help>
				</entry>
				<entry name="VF610_ADC">
					<label>Freescale vf610 ADC driver</label>
					<help>Say yes here to support for Vybrid board analog-to-digital converter.
Since the IP is used for i.MX6SLX, the driver also support i.MX6SLX.

This driver can also be built as a module. If so, the module will be
called vf610_adc.</help>
				</entry>
				<entry name="VIPERBOARD_ADC">
					<label>Viperboard ADC support</label>
					<help>Say yes here to access the ADC part of the Nano River
Technologies Viperboard.

To compile this driver as a module, choose M here: the module will be
called viperboard_adc.</help>
				</entry>
				<entry name="XILINX_XADC">
					<label>Xilinx XADC driver</label>
					<help>Say yes here to have support for the Xilinx XADC. The driver does support
both the ZYNQ interface to the XADC as well as the AXI-XADC interface.

The driver can also be build as a module. If so, the module will be called
xilinx-xadc.</help>
				</entry>
			</container>
			<container name="Amplifiers">
				<label>Amplifiers</label>
				<entry name="AD8366">
					<label>Analog Devices AD8366 VGA</label>
					<help>Say yes here to build support for Analog Devices AD8366
SPI Dual-Digital Variable Gain Amplifier (VGA).

To compile this driver as a module, choose M here: the
module will be called ad8366.</help>
				</entry>
			</container>
			<container name="Chemical_Sensors">
				<label>Chemical Sensors</label>
				<entry name="ATLAS_PH_SENSOR">
					<label>Atlas Scientific OEM SM sensors</label>
					<help>Say Y here to build I2C interface support for the following
Atlas Scientific OEM SM sensors:
* pH SM sensor
* EC SM sensor

To compile this driver as module, choose M here: the
module will be called atlas-ph-sensor.</help>
				</entry>
				<entry name="IAQCORE">
					<label>AMS iAQ-Core VOC sensors</label>
					<help>Say Y here to build I2C interface support for the AMS
iAQ-Core Continuous/Pulsed VOC (Volatile Organic Compounds)
sensors</help>
				</entry>
				<entry name="VZ89X">
					<label>SGX Sensortech MiCS VZ89X VOC sensor</label>
					<help>Say Y here to build I2C interface support for the SGX
Sensortech MiCS VZ89X VOC (Volatile Organic Compounds)
sensors</help>
				</entry>
			</container>
			<container name="Hid_Sensor_IIO_Common">
				<label>Hid Sensor IIO Common</label>
				<entry name="HID_SENSOR_IIO_COMMON">
					<label>Common modules for all HID Sensor IIO drivers</label>
					<help>Say yes here to build support for HID sensor to use
HID sensor common processing for attributes and IIO triggers.
There are many attributes which can be shared among multiple
HID sensor drivers, this module contains processing for those
attributes.</help>
				</entry>
				<entry name="HID_SENSOR_IIO_TRIGGER">
					<label>Common module (trigger) for all HID Sensor IIO drivers</label>
					<help>Say yes here to build trigger support for HID sensors.
Triggers will be send if all requested attributes were read.

If this driver is compiled as a module, it will be named
hid-sensor-trigger.</help>
				</entry>
			</container>
			<entry name="IIO_MS_SENSORS_I2C"/>
			<container name="SSP_Sensor_Common">
				<label>SSP Sensor Common</label>
				<entry name="IIO_SSP_SENSORS_COMMONS">
					<label>Commons for all SSP Sensor IIO drivers</label>
					<help>Say yes here to build commons for SSP sensors.
To compile this as a module, choose M here: the module
will be called ssp_iio.</help>
				</entry>
				<entry name="IIO_SSP_SENSORHUB">
					<label>Samsung Sensorhub driver</label>
					<help>SSP driver for sensorhub.
If you say yes here you get ssp support for sensorhub.
To compile this driver as a module, choose M here: the
module will be called sensorhub.</help>
				</entry>
			</container>
			<entry name="IIO_ST_SENSORS_I2C"/>
			<entry name="IIO_ST_SENSORS_SPI"/>
			<entry name="IIO_ST_SENSORS_CORE"/>
			<container name="Digital_to_analog_converters">
				<label>Digital to analog converters</label>
				<entry name="AD5064">
					<label>Analog Devices AD5064 and similar multi-channel DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5024, AD5025, AD5044,
AD5045, AD5064, AD5064-1, AD5065, AD5625, AD5625R, AD5627, AD5627R,
AD5628, AD5629R, AD5645R, AD5647R, AD5648, AD5665, AD5665R, AD5666,
AD5667, AD5667R, AD5668, AD5669R, LTC2606, LTC2607, LTC2609, LTC2616,
LTC2617, LTC2619, LTC2626, LTC2627, LTC2629 Digital to Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5064.</help>
				</entry>
				<entry name="AD5360">
					<label>Analog Devices AD5360/61/62/63/70/71/73 DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5360, AD5361,
AD5362, AD5363, AD5370, AD5371, AD5373 multi-channel
Digital to Analog Converters (DAC).

To compile this driver as module choose M here: the module will be called
ad5360.</help>
				</entry>
				<entry name="AD5380">
					<label>Analog Devices AD5380/81/82/83/84/90/91/92 DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5380, AD5381,
AD5382, AD5383, AD5384, AD5390, AD5391, AD5392 multi-channel
Digital to Analog Converters (DAC).

To compile this driver as module choose M here: the module will be called
ad5380.</help>
				</entry>
				<entry name="AD5421">
					<label>Analog Devices AD5421 DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5421 loop-powered
digital-to-analog convertors (DAC).

To compile this driver as module choose M here: the module will be called
ad5421.</help>
				</entry>
				<entry name="AD5446">
					<label>Analog Devices AD5446 and similar single channel DACs driver</label>
					<help>Say yes here to build support for Analog Devices AD5300, AD5301, AD5310,
AD5311, AD5320, AD5321, AD5444, AD5446, AD5450, AD5451, AD5452, AD5453,
AD5512A, AD5541A, AD5542A, AD5543, AD5553, AD5601, AD5602, AD5611, AD5612,
AD5620, AD5621, AD5622, AD5640, AD5641, AD5660, AD5662 DACs.

To compile this driver as a module, choose M here: the
module will be called ad5446.</help>
				</entry>
				<entry name="AD5449">
					<label>Analog Devices AD5449 and similar DACs driver</label>
					<help>Say yes here to build support for Analog Devices AD5415, AD5426, AD5429,
AD5432, AD5439, AD5443, AD5449 Digital to Analog Converters.

To compile this driver as a module, choose M here: the
module will be called ad5449.</help>
				</entry>
				<entry name="AD5592R_BASE"/>
				<entry name="AD5592R">
					<label>Analog Devices AD5592R ADC/DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5592R
Digital to Analog / Analog to Digital Converter.

To compile this driver as a module, choose M here: the
module will be called ad5592r.</help>
				</entry>
				<entry name="AD5593R">
					<label>Analog Devices AD5593R ADC/DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5593R
Digital to Analog / Analog to Digital Converter.

To compile this driver as a module, choose M here: the
module will be called ad5593r.</help>
				</entry>
				<entry name="AD5504">
					<label>Analog Devices AD5504/AD5501 DAC SPI driver</label>
					<help>Say yes here to build support for Analog Devices AD5504, AD5501,
High Voltage Digital to Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5504.</help>
				</entry>
				<entry name="AD5624R_SPI">
					<label>Analog Devices AD5624/44/64R DAC spi driver</label>
					<help>Say yes here to build support for Analog Devices AD5624R, AD5644R and
AD5664R converters (DAC). This driver uses the common SPI interface.</help>
				</entry>
				<entry name="AD5686">
					<label>Analog Devices AD5686R/AD5685R/AD5684R DAC SPI driver</label>
					<help>Say yes here to build support for Analog Devices AD5686R, AD5685R,
AD5684R, AD5791 Voltage Output Digital to
Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5686.</help>
				</entry>
				<entry name="AD5755">
					<label>Analog Devices AD5755/AD5755-1/AD5757/AD5735/AD5737 DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5755, AD5755-1,
AD5757, AD5735, AD5737 quad channel Digital to
Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5755.</help>
				</entry>
				<entry name="AD5761">
					<label>Analog Devices AD5761/61R/21/21R DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5761, AD5761R, AD5721,
AD5721R Digital to Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5761.</help>
				</entry>
				<entry name="AD5764">
					<label>Analog Devices AD5764/64R/44/44R DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD5764, AD5764R, AD5744,
AD5744R Digital to Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5764.</help>
				</entry>
				<entry name="AD5791">
					<label>Analog Devices AD5760/AD5780/AD5781/AD5790/AD5791 DAC SPI driver</label>
					<help>Say yes here to build support for Analog Devices AD5760, AD5780,
AD5781, AD5790, AD5791 High Resolution Voltage Output Digital to
Analog Converter.

To compile this driver as a module, choose M here: the
module will be called ad5791.</help>
				</entry>
				<entry name="AD7303">
					<label>Analog Devices AD7303 DAC driver</label>
					<help>Say yes here to build support for Analog Devices AD7303 Digital to Analog
Converters (DAC).

To compile this driver as module choose M here: the module will be called
ad7303.</help>
				</entry>
				<entry name="LPC18XX_DAC">
					<label>NXP LPC18xx DAC driver</label>
					<help>Say yes here to build support for NXP LPC18XX DAC.

To compile this driver as a module, choose M here: the module will be
called lpc18xx_dac.</help>
				</entry>
				<entry name="M62332">
					<label>Mitsubishi M62332 DAC driver</label>
					<help>If you say yes here you get support for the Mitsubishi M62332
(I2C 8-Bit DACs with rail-to-rail outputs).

This driver can also be built as a module.  If so, the module
will be called m62332.</help>
				</entry>
				<entry name="MAX517">
					<label>Maxim MAX517/518/519/520/521 DAC driver</label>
					<help>If you say yes here you get support for the following Maxim chips
(I2C 8-Bit DACs with rail-to-rail outputs):
MAX517 - Single channel, single reference
MAX518 - Dual channel, ref=Vdd
MAX519 - Dual channel, dual reference
MAX520 - Quad channel, quad reference
MAX521 - Octal channel, independent ref for ch0-3, shared ref for ch4-7

This driver can also be built as a module.  If so, the module
will be called max517.</help>
				</entry>
				<entry name="MAX5821">
					<label>Maxim MAX5821 DAC driver</label>
					<help>Say yes here to build support for Maxim MAX5821
10 bits DAC.</help>
				</entry>
				<entry name="MCP4725">
					<label>MCP4725/6 DAC driver</label>
					<help>Say Y here if you want to build a driver for the Microchip
MCP 4725/6 12-bit digital-to-analog converter (DAC) with I2C
interface.

To compile this driver as a module, choose M here: the module
will be called mcp4725.</help>
				</entry>
				<entry name="MCP4922">
					<label>MCP4902, MCP4912, MCP4922 DAC driver</label>
					<help>Say yes here to build the driver for the Microchip MCP4902
MCP4912, and MCP4922 DAC devices.

To compile this driver as a module, choose M here: the module
will be called mcp4922.</help>
				</entry>
				<entry name="STX104">
					<label>Apex Embedded Systems STX104 DAC driver</label>
					<help>Say yes here to build support for the 2-channel DAC and GPIO on the
Apex Embedded Systems STX104 integrated analog PC/104 card. The base
port addresses for the devices may be configured via the base array
module parameter.</help>
				</entry>
				<entry name="VF610_DAC">
					<label>Vybrid vf610 DAC driver</label>
					<help>Say yes here to support Vybrid board digital-to-analog converter.

This driver can also be built as a module. If so, the module will
be called vf610_dac.</help>
				</entry>
			</container>
			<container name="IIO_dummy_driver">
				<label>IIO dummy driver</label>
				<entry name="IIO_DUMMY_EVGEN"/>
				<entry name="IIO_SIMPLE_DUMMY">
					<label>An example driver with no hardware requirements</label>
					<help>Driver intended mainly as documentation for how to write
a driver. May also be useful for testing userspace code
without hardware.</help>
				</entry>
				<entry name="IIO_SIMPLE_DUMMY_EVENTS">
					<label>Event generation support</label>
					<help>Add some dummy events to the simple dummy driver.</help>
				</entry>
				<entry name="IIO_SIMPLE_DUMMY_BUFFER">
					<label>Buffered capture support</label>
					<help>Add buffered data capture to the simple dummy driver.</help>
				</entry>
			</container>
			<container name="Frequency_Synthesizers_DDS_PLL">
				<label>Frequency Synthesizers DDS/PLL</label>
				<container name="Clock_Generator_Distribution">
					<label>Clock Generator/Distribution</label>
					<entry name="AD9523">
						<label>Analog Devices AD9523 Low Jitter Clock Generator</label>
						<help>Say yes here to build support for Analog Devices AD9523 Low Jitter
Clock Generator. The driver provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called ad9523.</help>
					</entry>
				</container>
				<container name="Phase_Locked_Loop_PLL_frequency_synthesizers">
					<label>Phase-Locked Loop (PLL) frequency synthesizers</label>
					<entry name="ADF4350">
						<label>Analog Devices ADF4350/ADF4351 Wideband Synthesizers</label>
						<help>Say yes here to build support for Analog Devices  ADF4350/ADF4351
Wideband Synthesizers. The driver provides direct access via sysfs.

To compile this driver as a module, choose M here: the
module will be called adf4350.</help>
					</entry>
				</container>
			</container>
			<container name="Digital_gyroscope_sensors">
				<label>Digital gyroscope sensors</label>
				<entry name="ADIS16080">
					<label>Analog Devices ADIS16080/100 Yaw Rate Gyroscope with SPI driver</label>
					<help>Say yes here to build support for Analog Devices ADIS16080, ADIS16100 Yaw
Rate Gyroscope with SPI.</help>
				</entry>
				<entry name="ADIS16130">
					<label>Analog Devices ADIS16130 High Precision Angular Rate Sensor driver</label>
					<help>Say yes here to build support for Analog Devices ADIS16130 High Precision
Angular Rate Sensor driver.</help>
				</entry>
				<entry name="ADIS16136">
					<label>Analog devices ADIS16136 and similar gyroscopes driver</label>
					<help>Say yes here to build support for the Analog Devices ADIS16133, ADIS16135,
ADIS16136 gyroscope devices.</help>
				</entry>
				<entry name="ADIS16260">
					<label>Analog Devices ADIS16260 Digital Gyroscope Sensor SPI driver</label>
					<help>Say yes here to build support for Analog Devices ADIS16260 ADIS16265
ADIS16250 ADIS16255 and ADIS16251 programmable digital gyroscope sensors.

This driver can also be built as a module.  If so, the module
will be called adis16260.</help>
				</entry>
				<entry name="ADXRS450">
					<label>Analog Devices ADXRS450/3 Digital Output Gyroscope SPI driver</label>
					<help>Say yes here to build support for Analog Devices ADXRS450 and ADXRS453
programmable digital output gyroscope.

This driver can also be built as a module.  If so, the module
will be called adxrs450.</help>
				</entry>
				<entry name="BMG160">
					<label>BOSCH BMG160 Gyro Sensor</label>
					<help>Say yes here to build support for BOSCH BMG160 Tri-axis Gyro Sensor
driver connected via I2C or SPI. This driver also supports BMI055
gyroscope.

This driver can also be built as a module.  If so, the module
will be called bmg160_i2c or bmg160_spi.</help>
				</entry>
				<entry name="BMG160_I2C"/>
				<entry name="BMG160_SPI"/>
				<entry name="HID_SENSOR_GYRO_3D">
					<label>HID Gyroscope 3D</label>
					<help>Say yes here to build support for the HID SENSOR
Gyroscope 3D.</help>
				</entry>
				<entry name="IIO_ST_GYRO_3AXIS">
					<label>STMicroelectronics gyroscopes 3-Axis Driver</label>
					<help>Say yes here to build support for STMicroelectronics gyroscopes:
L3G4200D, LSM330DL, L3GD20, LSM330DLC, L3G4IS, LSM330, LSM9DS0.

This driver can also be built as a module. If so, these modules
will be created:
- st_gyro (core functions for the driver [it is mandatory]);
- st_gyro_i2c (necessary for the I2C devices [optional*]);
- st_gyro_spi (necessary for the SPI devices [optional*]);

(*) one of these is necessary to do something.</help>
				</entry>
				<entry name="IIO_ST_GYRO_I2C_3AXIS"/>
				<entry name="IIO_ST_GYRO_SPI_3AXIS"/>
				<entry name="ITG3200">
					<label>InvenSense ITG3200 Digital 3-Axis Gyroscope I2C driver</label>
					<help>Say yes here to add support for the InvenSense ITG3200 digital
3-axis gyroscope sensor.</help>
				</entry>
			</container>
			<container name="Health_Sensors">
				<label>Health Sensors</label>
				<container name="Heart_Rate_Monitors">
					<label>Heart Rate Monitors</label>
					<entry name="AFE4403">
						<label>TI AFE4403 Heart Rate Monitor</label>
						<help>Say yes to choose the Texas Instruments AFE4403
heart rate monitor and low-cost pulse oximeter.

To compile this driver as a module, choose M here: the
module will be called afe4403.</help>
					</entry>
					<entry name="AFE4404">
						<label>TI AFE4404 heart rate and pulse oximeter sensor</label>
						<help>Say yes to choose the Texas Instruments AFE4404
heart rate monitor and low-cost pulse oximeter.

To compile this driver as a module, choose M here: the
module will be called afe4404.</help>
					</entry>
					<entry name="MAX30100">
						<label>MAX30100 heart rate and pulse oximeter sensor</label>
						<help>Say Y here to build I2C interface support for the Maxim
MAX30100 heart rate, and pulse oximeter sensor.

To compile this driver as a module, choose M here: the
module will be called max30100.</help>
					</entry>
				</container>
			</container>
			<container name="Humidity_sensors">
				<label>Humidity sensors</label>
				<entry name="AM2315">
					<label>Aosong AM2315 relative humidity and temperature sensor</label>
					<help>If you say yes here you get support for the Aosong AM2315
relative humidity and ambient temperature sensor.

This driver can also be built as a module. If so, the module will
be called am2315.</help>
				</entry>
				<entry name="DHT11">
					<label>DHT11 (and compatible sensors) driver</label>
					<help>This driver supports reading data via a single interrupt
generating GPIO line. Currently tested are DHT11 and DHT22.
Other sensors should work as well as long as they speak the
same protocol.</help>
				</entry>
				<entry name="HDC100X">
					<label>TI HDC100x relative humidity and temperature sensor</label>
					<help>Say yes here to build support for the TI HDC100x series of
relative humidity and temperature sensors.

To compile this driver as a module, choose M here: the module
will be called hdc100x.</help>
				</entry>
				<entry name="HTU21">
					<label>Measurement Specialties HTU21 humidity &amp; temperature sensor</label>
					<help>If you say yes here you get support for the Measurement Specialties
HTU21 humidity and temperature sensor.
This driver is also used for MS8607 temperature, pressure &amp; humidity
sensor

This driver can also be built as a module. If so, the module will
be called htu21.</help>
				</entry>
				<entry name="SI7005">
					<label>SI7005 relative humidity and temperature sensor</label>
					<help>Say yes here to build support for the Silabs Si7005 relative
humidity and temperature sensor.

To compile this driver as a module, choose M here: the module
will be called si7005. This driver also
supports Hoperf TH02 Humidity and Temperature Sensor.</help>
				</entry>
				<entry name="SI7020">
					<label>Si7013/20/21 Relative Humidity and Temperature Sensors</label>
					<help>Say yes here to build support for the Silicon Labs Si7013/20/21
Relative Humidity and Temperature Sensors. This driver also
supports Hoperf TH06 Humidity and Temperature Sensor.

To compile this driver as a module, choose M here: the module
will be called si7020.</help>
				</entry>
			</container>
			<container name="Inertial_measurement_units">
				<label>Inertial measurement units</label>
				<entry name="ADIS16400">
					<label>Analog Devices ADIS16400 and similar IMU SPI driver</label>
					<help>Say yes here to build support for Analog Devices adis16300, adis16344,
adis16350, adis16354, adis16355, adis16360, adis16362, adis16364,
adis16365, adis16400 and adis16405 triaxial inertial sensors
(adis16400 series also have magnetometers).</help>
				</entry>
				<entry name="ADIS16480">
					<label>Analog Devices ADIS16480 and similar IMU driver</label>
					<help>Say yes here to build support for Analog Devices ADIS16375, ADIS16480,
ADIS16485, ADIS16488 inertial sensors.</help>
				</entry>
				<entry name="BMI160"/>
				<entry name="BMI160_I2C">
					<label>Bosch BMI160 I2C driver</label>
					<help>If you say yes here you get support for BMI160 IMU on I2C with
accelerometer, gyroscope and external BMG160 magnetometer.

This driver can also be built as a module. If so, the module will be
called bmi160_i2c.</help>
				</entry>
				<entry name="BMI160_SPI">
					<label>Bosch BMI160 SPI driver</label>
					<help>If you say yes here you get support for BMI160 IMU on SPI with
accelerometer, gyroscope and external BMG160 magnetometer.

This driver can also be built as a module. If so, the module will be
called bmi160_spi.
</help>
				</entry>
				<entry name="KMX61">
					<label>Kionix KMX61 6-axis accelerometer and magnetometer</label>
					<help>Say Y here if you want to build a driver for Kionix KMX61 6-axis
accelerometer and magnetometer.
To compile this driver as module, choose M here: the module will
be called kmx61.</help>
				</entry>
				<entry name="INV_MPU6050_IIO"/>
				<entry name="INV_MPU6050_I2C">
					<label>Invensense MPU6050 devices (I2C)</label>
					<help>This driver supports the Invensense MPU6050/6500/9150 and ICM20608
motion tracking devices over I2C.
This driver can be built as a module. The module will be called
inv-mpu6050-i2c.</help>
				</entry>
				<entry name="INV_MPU6050_SPI">
					<label>Invensense MPU6050 devices (SPI)</label>
					<help>This driver supports the Invensense MPU6050/6500/9150 and ICM20608
motion tracking devices over SPI.
This driver can be built as a module. The module will be called
inv-mpu6050-spi.
</help>
				</entry>
			</container>
			<entry name="IIO_ADIS_LIB">
				<help>A set of IO helper functions for the Analog Devices ADIS* device family.</help>
			</entry>
			<entry name="IIO_ADIS_LIB_BUFFER">
				<help>A set of buffer helper functions for the Analog Devices ADIS* device
family.
</help>
			</entry>
			<container name="Light_sensors">
				<label>Light sensors</label>
				<entry name="ACPI_ALS">
					<label>ACPI Ambient Light Sensor</label>
					<help>Say Y here if you want to build a driver for the ACPI0008
Ambient Light Sensor.

To compile this driver as a module, choose M here: the module will
be called acpi-als.</help>
				</entry>
				<entry name="ADJD_S311">
					<label>ADJD-S311-CR999 digital color sensor</label>
					<help>If you say yes here you get support for the Avago ADJD-S311-CR999
digital color light sensor.

This driver can also be built as a module.  If so, the module
will be called adjd_s311.</help>
				</entry>
				<entry name="AL3320A">
					<label>AL3320A ambient light sensor</label>
					<help>Say Y here if you want to build a driver for the Dyna Image AL3320A
ambient light sensor.

To compile this driver as a module, choose M here: the
module will be called al3320a.</help>
				</entry>
				<entry name="APDS9300">
					<label>APDS9300 ambient light sensor</label>
					<help>Say Y here if you want to build a driver for the Avago APDS9300
ambient light sensor.

To compile this driver as a module, choose M here: the
module will be called apds9300.</help>
				</entry>
				<entry name="APDS9960">
					<label>Avago APDS9960 gesture/RGB/ALS/proximity sensor</label>
					<help>Say Y here to build I2C interface support for the Avago
APDS9960 gesture/RGB/ALS/proximity sensor.

To compile this driver as a module, choose M here: the
module will be called apds9960</help>
				</entry>
				<entry name="BH1750">
					<label>ROHM BH1750 ambient light sensor</label>
					<help>Say Y here to build support for the ROHM BH1710, BH1715, BH1721,
BH1750, BH1751 ambient light sensors.

To compile this driver as a module, choose M here: the module will
be called bh1750.</help>
				</entry>
				<entry name="BH1780">
					<label>ROHM BH1780 ambient light sensor</label>
					<help>Say Y here to build support for the ROHM BH1780GLI ambient
light sensor.

To compile this driver as a module, choose M here: the module will
be called bh1780.</help>
				</entry>
				<entry name="CM32181">
					<label>CM32181 driver</label>
					<help>Say Y here if you use cm32181.
This option enables ambient light sensor using
Capella cm32181 device driver.

To compile this driver as a module, choose M here:
the module will be called cm32181.</help>
				</entry>
				<entry name="CM3232">
					<label>CM3232 ambient light sensor</label>
					<help>Say Y here if you use cm3232.
This option enables ambient light sensor using
Capella Microsystems cm3232 device driver.

To compile this driver as a module, choose M here:
the module will be called cm3232.</help>
				</entry>
				<entry name="CM3323">
					<label>Capella CM3323 color light sensor</label>
					<help>Say Y here if you want to build a driver for Capella CM3323
color sensor.

To compile this driver as a module, choose M here: the module will
be called cm3323.</help>
				</entry>
				<entry name="CM36651">
					<label>CM36651 driver</label>
					<help>Say Y here if you use cm36651.
This option enables proximity &amp; RGB sensor using
Capella cm36651 device driver.

To compile this driver as a module, choose M here:
the module will be called cm36651.</help>
				</entry>
				<entry name="GP2AP020A00F">
					<label>Sharp GP2AP020A00F Proximity/ALS sensor</label>
					<help>Say Y here if you have a Sharp GP2AP020A00F proximity/ALS combo-chip
hooked to an I2C bus.

To compile this driver as a module, choose M here: the
module will be called gp2ap020a00f.</help>
				</entry>
				<entry name="ISL29125">
					<label>Intersil ISL29125 digital color light sensor</label>
					<help>Say Y here if you want to build a driver for the Intersil ISL29125
RGB light sensor for I2C.

To compile this driver as a module, choose M here: the module will be
called isl29125.</help>
				</entry>
				<entry name="HID_SENSOR_ALS">
					<label>HID ALS</label>
					<help>Say yes here to build support for the HID SENSOR
Ambient light sensor.

To compile this driver as a module, choose M here: the
module will be called hid-sensor-als.</help>
				</entry>
				<entry name="HID_SENSOR_PROX">
					<label>HID PROX</label>
					<help>Say yes here to build support for the HID SENSOR
Proximity sensor.

To compile this driver as a module, choose M here: the
module will be called hid-sensor-prox.</help>
				</entry>
				<entry name="JSA1212">
					<label>JSA1212 ALS and proximity sensor driver</label>
					<help>Say Y here if you want to build a IIO driver for JSA1212
proximity &amp; ALS sensor device.

To compile this driver as a module, choose M here:
the module will be called jsa1212.</help>
				</entry>
				<entry name="RPR0521">
					<label>ROHM RPR0521 ALS and proximity sensor driver</label>
					<help>Say Y here if you want to build support for ROHM's RPR0521
ambient light and proximity sensor device.

To compile this driver as a module, choose M here:
the module will be called rpr0521.</help>
				</entry>
				<entry name="SENSORS_LM3533">
					<label>LM3533 ambient light sensor</label>
					<help>If you say yes here you get support for the ambient light sensor
interface on National Semiconductor / TI LM3533 Lighting Power
chips.

The sensor interface can be used to control the LEDs and backlights
of the chip through defining five light zones and three sets of
corresponding output-current values.

The driver provides raw and mean adc readings along with the current
light zone through sysfs. A threshold event can be generated on zone
changes. The ALS-control output values can be set per zone for the
three current output channels.</help>
				</entry>
				<entry name="LTR501">
					<label>LTR-501ALS-01 light sensor</label>
					<help>If you say yes here you get support for the Lite-On LTR-501ALS-01
ambient light and proximity sensor. This driver also supports LTR-559
ALS/PS or LTR-301 ALS sensors.

This driver can also be built as a module.  If so, the module
will be called ltr501.</help>
				</entry>
				<entry name="MAX44000">
					<label>MAX44000 Ambient and Infrared Proximity Sensor</label>
					<help>Say Y here if you want to build support for Maxim Integrated's
MAX44000 ambient and infrared proximity sensor device.

To compile this driver as a module, choose M here:
the module will be called max44000.</help>
				</entry>
				<entry name="OPT3001">
					<label>Texas Instruments OPT3001 Light Sensor</label>
					<help>If you say Y or M here, you get support for Texas Instruments
OPT3001 Ambient Light Sensor.

If built as a dynamically linked module, it will be called
opt3001.</help>
				</entry>
				<entry name="PA12203001">
					<label>TXC PA12203001 light and proximity sensor</label>
					<help>If you say yes here you get support for the TXC PA12203001
ambient light and proximity sensor.

This driver can also be built as a module.  If so, the module
will be called pa12203001.</help>
				</entry>
				<entry name="STK3310">
					<label>STK3310 ALS and proximity sensor</label>
					<help>Say yes here to get support for the Sensortek STK3310 ambient light
and proximity sensor. The STK3311 model is also supported by this
driver.

Choosing M will build the driver as a module. If so, the module
will be called stk3310.</help>
				</entry>
				<entry name="TCS3414">
					<label>TAOS TCS3414 digital color sensor</label>
					<help>If you say yes here you get support for the TAOS TCS3414
family of digital color sensors.

This driver can also be built as a module.  If so, the module
will be called tcs3414.</help>
				</entry>
				<entry name="TCS3472">
					<label>TAOS TCS3472 color light-to-digital converter</label>
					<help>If you say yes here you get support for the TAOS TCS3472
family of color light-to-digital converters with IR filter.

This driver can also be built as a module.  If so, the module
will be called tcs3472.</help>
				</entry>
				<entry name="SENSORS_TSL2563">
					<label>TAOS TSL2560, TSL2561, TSL2562 and TSL2563 ambient light sensors</label>
					<help>If you say yes here you get support for the Taos TSL2560,
TSL2561, TSL2562 and TSL2563 ambient light sensors.

This driver can also be built as a module.  If so, the module
will be called tsl2563.</help>
				</entry>
				<entry name="TSL4531">
					<label>TAOS TSL4531 ambient light sensors</label>
					<help>Say Y here if you want to build a driver for the TAOS TSL4531 family
of ambient light sensors with direct lux output.

To compile this driver as a module, choose M here: the
module will be called tsl4531.</help>
				</entry>
				<entry name="US5182D">
					<label>UPISEMI light and proximity sensor</label>
					<help>If you say yes here you get support for the UPISEMI US5182D
ambient light and proximity sensor.

This driver can also be built as a module.  If so, the module
will be called us5182d.</help>
				</entry>
				<entry name="VCNL4000">
					<label>VCNL4000 combined ALS and proximity sensor</label>
					<help>Say Y here if you want to build a driver for the Vishay VCNL4000
combined ambient light and proximity sensor.

To compile this driver as a module, choose M here: the
module will be called vcnl4000.</help>
				</entry>
				<entry name="VEML6070">
					<label>VEML6070 UV A light sensor</label>
					<help>Say Y here if you want to build a driver for the Vishay VEML6070 UV A
light sensor.

To compile this driver as a module, choose M here: the
module will be called veml6070.</help>
				</entry>
			</container>
			<container name="Magnetometer_sensors">
				<label>Magnetometer sensors</label>
				<entry name="AK8975">
					<label>Asahi Kasei AK 3-Axis Magnetometer</label>
					<help>Say yes here to build support for Asahi Kasei AK8975, AK8963,
AK09911 or AK09912 3-Axis Magnetometer.

To compile this driver as a module, choose M here: the module
will be called ak8975.</help>
				</entry>
				<entry name="AK09911">
					<label>Asahi Kasei AK09911 3-axis Compass</label>
					<help>Deprecated: AK09911 is now supported by AK8975 driver.</help>
				</entry>
				<entry name="BMC150_MAGN"/>
				<entry name="BMC150_MAGN_I2C">
					<label>Bosch BMC150 I2C Magnetometer Driver</label>
					<help>Say yes here to build support for the BMC150 magnetometer with
I2C interface.

This is a combo module with both accelerometer and magnetometer.
This driver is only implementing magnetometer part, which has
its own address and register map.

This driver also supports I2C Bosch BMC156 and BMM150 chips.
To compile this driver as a module, choose M here: the module will be
called bmc150_magn_i2c.</help>
				</entry>
				<entry name="BMC150_MAGN_SPI">
					<label>Bosch BMC150 SPI Magnetometer Driver</label>
					<help>Say yes here to build support for the BMC150 magnetometer with
SPI interface.

This is a combo module with both accelerometer and magnetometer.
This driver is only implementing magnetometer part, which has
its own address and register map.

This driver also supports SPI Bosch BMC156 and BMM150 chips.
To compile this driver as a module, choose M here: the module will be
called bmc150_magn_spi.</help>
				</entry>
				<entry name="MAG3110">
					<label>Freescale MAG3110 3-Axis Magnetometer</label>
					<help>Say yes here to build support for the Freescale MAG3110 3-Axis
magnetometer.

To compile this driver as a module, choose M here: the module
will be called mag3110.</help>
				</entry>
				<entry name="HID_SENSOR_MAGNETOMETER_3D">
					<label>HID Magenetometer 3D</label>
					<help>Say yes here to build support for the HID SENSOR
Magnetometer 3D.</help>
				</entry>
				<entry name="MMC35240">
					<label>MEMSIC MMC35240 3-axis magnetic sensor</label>
					<help>Say yes here to build support for the MEMSIC MMC35240 3-axis
magnetic sensor.

To compile this driver as a module, choose M here: the module
will be called mmc35240.</help>
				</entry>
				<entry name="IIO_ST_MAGN_3AXIS">
					<label>STMicroelectronics magnetometers 3-Axis Driver</label>
					<help>Say yes here to build support for STMicroelectronics magnetometers:
LSM303DLHC, LSM303DLM, LIS3MDL.

This driver can also be built as a module. If so, these modules
will be created:
- st_magn (core functions for the driver [it is mandatory]);
- st_magn_i2c (necessary for the I2C devices [optional*]);
- st_magn_spi (necessary for the SPI devices [optional*]);

(*) one of these is necessary to do something.</help>
				</entry>
				<entry name="IIO_ST_MAGN_I2C_3AXIS"/>
				<entry name="IIO_ST_MAGN_SPI_3AXIS"/>
				<entry name="SENSORS_HMC5843"/>
				<entry name="SENSORS_HMC5843_I2C">
					<label>Honeywell HMC5843/5883/5883L 3-Axis Magnetometer (I2C)</label>
					<help>Say Y here to add support for the Honeywell HMC5843, HMC5883 and
HMC5883L 3-Axis Magnetometer (digital compass).

This driver can also be compiled as a set of modules.
If so, these modules will be created:
- hmc5843_core (core functions)
- hmc5843_i2c (support for HMC5843, HMC5883, HMC5883L and HMC5983)</help>
				</entry>
				<entry name="SENSORS_HMC5843_SPI">
					<label>Honeywell HMC5983 3-Axis Magnetometer (SPI)</label>
					<help>Say Y here to add support for the Honeywell HMC5983 3-Axis Magnetometer
(digital compass).

This driver can also be compiled as a set of modules.
If so, these modules will be created:
- hmc5843_core (core functions)
- hmc5843_spi (support for HMC5983)</help>
				</entry>
			</container>
			<container name="Inclinometer_sensors">
				<label>Inclinometer sensors</label>
				<entry name="HID_SENSOR_INCLINOMETER_3D">
					<label>HID Inclinometer 3D</label>
					<help>Say yes here to build support for the HID SENSOR
Inclinometer 3D.</help>
				</entry>
				<entry name="HID_SENSOR_DEVICE_ROTATION">
					<label>HID Device Rotation</label>
					<help>Say yes here to build support for the HID SENSOR
device rotation. The output of a device rotation sensor
is presented using quaternion format.</help>
				</entry>
			</container>
			<container name="Triggers_standalone">
				<label>Triggers - standalone</label>
				<entry name="IIO_HRTIMER_TRIGGER">
					<label>High resolution timer trigger</label>
					<help>Provides a frequency based IIO trigger using high resolution
timers as interrupt source.

To compile this driver as a module, choose M here: the
module will be called iio-trig-hrtimer.</help>
				</entry>
				<entry name="IIO_INTERRUPT_TRIGGER">
					<label>Generic interrupt trigger</label>
					<help>Provides support for using an interrupt of any type as an IIO
trigger.  This may be provided by a gpio driver for example.

To compile this driver as a module, choose M here: the
module will be called iio-trig-interrupt.</help>
				</entry>
				<entry name="IIO_TIGHTLOOP_TRIGGER">
					<label>A kthread based hammering loop trigger</label>
					<help>An experimental trigger, used to allow sensors to be sampled as fast
as possible under the limitations of whatever else is going on.
Uses a tight loop in a kthread.  Will only work with lower half only
trigger consumers.

To compile this driver as a module, choose M here: the
module will be called iio-trig-loop.</help>
				</entry>
				<entry name="IIO_SYSFS_TRIGGER">
					<label>SYSFS trigger</label>
					<help>Provides support for using SYSFS entries as IIO triggers.
If unsure, say N (but it's safe to say &quot;Y&quot;).

To compile this driver as a module, choose M here: the
module will be called iio-trig-sysfs.</help>
				</entry>
			</container>
			<container name="Digital_potentiometers">
				<label>Digital potentiometers</label>
				<entry name="DS1803">
					<label>Maxim Integrated DS1803 Digital Potentiometer driver</label>
					<help>Say yes here to build support for the Maxim Integrated DS1803
digital potentiometer chip.

To compile this driver as a module, choose M here: the
module will be called ds1803.</help>
				</entry>
				<entry name="MAX5487">
					<label>Maxim MAX5487/MAX5488/MAX5489 Digital Potentiometer driver</label>
					<help>Say yes here to build support for the Maxim
MAX5487, MAX5488, MAX5489 digital potentiometer
chips.

To compile this driver as a module, choose M here: the
module will be called max5487.</help>
				</entry>
				<entry name="MCP4131">
					<label>Microchip MCP413X/414X/415X/416X/423X/424X/425X/426X Digital Potentiometer driver</label>
					<help>Say yes here to build support for the Microchip
MCP4131, MCP4132,
MCP4141, MCP4142,
MCP4151, MCP4152,
MCP4161, MCP4162,
MCP4231, MCP4232,
MCP4241, MCP4242,
MCP4251, MCP4252,
MCP4261, MCP4262,
digital potentiometer chips.

To compile this driver as a module, choose M here: the
module will be called mcp4131.</help>
				</entry>
				<entry name="MCP4531">
					<label>Microchip MCP45xx/MCP46xx Digital Potentiometer driver</label>
					<help>Say yes here to build support for the Microchip
MCP4531, MCP4532, MCP4541, MCP4542,
MCP4551, MCP4552, MCP4561, MCP4562,
MCP4631, MCP4632, MCP4641, MCP4642,
MCP4651, MCP4652, MCP4661, MCP4662
digital potentiometer chips.

To compile this driver as a module, choose M here: the
module will be called mcp4531.</help>
				</entry>
				<entry name="TPL0102">
					<label>Texas Instruments digital potentiometer driver</label>
					<help>Say yes here to build support for the Texas Instruments
TPL0102, TPL0402
digital potentiometer chips.

To compile this driver as a module, choose M here: the
module will be called tpl0102.</help>
				</entry>
			</container>
			<container name="Pressure_sensors">
				<label>Pressure sensors</label>
				<entry name="BMP280">
					<label>Bosch Sensortec BMP180/BMP280 pressure sensor I2C driver</label>
					<help>Say yes here to build support for Bosch Sensortec BMP180 and BMP280
pressure and temperature sensors. Also supports the BE280 with
an additional humidity sensor channel.

To compile this driver as a module, choose M here: the core module
will be called bmp280 and you will also get bmp280-i2c for I2C
and/or bmp280-spi for SPI support.</help>
				</entry>
				<entry name="BMP280_I2C"/>
				<entry name="BMP280_SPI"/>
				<entry name="HID_SENSOR_PRESS">
					<label>HID PRESS</label>
					<help>Say yes here to build support for the HID SENSOR
Pressure driver

To compile this driver as a module, choose M here: the module
will be called hid-sensor-press.</help>
				</entry>
				<entry name="HP03">
					<label>Hope RF HP03 temperature and pressure sensor driver</label>
					<help>Say yes here to build support for Hope RF HP03 pressure and
temperature sensor.

To compile this driver as a module, choose M here: the module
will be called hp03.</help>
				</entry>
				<entry name="MPL115"/>
				<entry name="MPL115_I2C">
					<label>Freescale MPL115A2 pressure sensor driver</label>
					<help>Say yes here to build support for the Freescale MPL115A2
pressure sensor connected via I2C.

To compile this driver as a module, choose M here: the module
will be called mpl115_i2c.</help>
				</entry>
				<entry name="MPL115_SPI">
					<label>Freescale MPL115A1 pressure sensor driver</label>
					<help>Say yes here to build support for the Freescale MPL115A1
pressure sensor connected via SPI.

To compile this driver as a module, choose M here: the module
will be called mpl115_spi.</help>
				</entry>
				<entry name="MPL3115">
					<label>Freescale MPL3115A2 pressure sensor driver</label>
					<help>Say yes here to build support for the Freescale MPL3115A2
pressure sensor / altimeter.

To compile this driver as a module, choose M here: the module
will be called mpl3115.</help>
				</entry>
				<entry name="MS5611">
					<label>Measurement Specialties MS5611 pressure sensor driver</label>
					<help>Say Y here to build support for the Measurement Specialties
MS5611, MS5607 pressure and temperature sensors.

To compile this driver as a module, choose M here: the module will
be called ms5611_core.</help>
				</entry>
				<entry name="MS5611_I2C">
					<label>support I2C bus connection</label>
					<help>Say Y here to build I2C bus support for MS5611.

To compile this driver as a module, choose M here: the module will
be called ms5611_i2c.</help>
				</entry>
				<entry name="MS5611_SPI">
					<label>support SPI bus connection</label>
					<help>Say Y here to build SPI bus support for MS5611.

To compile this driver as a module, choose M here: the module will
be called ms5611_spi.</help>
				</entry>
				<entry name="MS5637">
					<label>Measurement Specialties MS5637 pressure &amp; temperature sensor</label>
					<help>If you say yes here you get support for the Measurement Specialties
MS5637 pressure and temperature sensor.
This driver is also used for MS8607 temperature, pressure &amp; humidity
sensor

This driver can also be built as a module. If so, the module will
be called ms5637.</help>
				</entry>
				<entry name="IIO_ST_PRESS">
					<label>STMicroelectronics pressure sensor Driver</label>
					<help>Say yes here to build support for STMicroelectronics pressure
sensors: LPS001WP, LPS25H, LPS331AP, LPS22HB.

This driver can also be built as a module. If so, these modules
will be created:
- st_pressure (core functions for the driver [it is mandatory]);
- st_pressure_i2c (necessary for the I2C devices [optional*]);
- st_pressure_spi (necessary for the SPI devices [optional*]);

(*) one of these is necessary to do something.</help>
				</entry>
				<entry name="IIO_ST_PRESS_I2C"/>
				<entry name="IIO_ST_PRESS_SPI"/>
				<entry name="T5403">
					<label>EPCOS T5403 digital barometric pressure sensor driver</label>
					<help>Say yes here to build support for the EPCOS T5403 pressure sensor
connected via I2C.

To compile this driver as a module, choose M here: the module
will be called t5403.</help>
				</entry>
				<entry name="HP206C">
					<label>HOPERF HP206C precision barometer and altimeter sensor</label>
					<help>Say yes here to build support for the HOPREF HP206C precision
barometer and altimeter sensor.

This driver can also be built as a module. If so, the module will
be called hp206c.</help>
				</entry>
			</container>
			<container name="Lightning_sensors">
				<label>Lightning sensors</label>
				<entry name="AS3935">
					<label>AS3935 Franklin lightning sensor</label>
					<help>Say Y here to build SPI interface support for the Austrian
Microsystems AS3935 lightning detection sensor.

To compile this driver as a module, choose M here: the
module will be called as3935</help>
				</entry>
			</container>
			<container name="Proximity_sensors">
				<label>Proximity sensors</label>
				<entry name="LIDAR_LITE_V2">
					<label>PulsedLight LIDAR sensor</label>
					<help>Say Y to build a driver for PulsedLight LIDAR range finding
sensor.

To compile this driver as a module, choose M here: the
module will be called pulsedlight-lite-v2</help>
				</entry>
				<entry name="SX9500">
					<label>SX9500 Semtech proximity sensor</label>
					<help>Say Y here to build a driver for Semtech's SX9500 capacitive
proximity/button sensor.

To compile this driver as a module, choose M here: the
module will be called sx9500.</help>
				</entry>
			</container>
			<container name="Temperature_sensors">
				<label>Temperature sensors</label>
				<entry name="MLX90614">
					<label>MLX90614 contact-less infrared sensor</label>
					<help>If you say yes here you get support for the Melexis
MLX90614 contact-less infrared sensor connected with I2C.

This driver can also be built as a module. If so, the module will
be called mlx90614.</help>
				</entry>
				<entry name="TMP006">
					<label>TMP006 infrared thermopile sensor</label>
					<help>If you say yes here you get support for the Texas Instruments
TMP006 infrared thermopile sensor.

This driver can also be built as a module. If so, the module will
be called tmp006.</help>
				</entry>
				<entry name="TSYS01">
					<label>Measurement Specialties TSYS01 temperature sensor using I2C bus connection</label>
					<help>If you say yes here you get support for the Measurement Specialties
TSYS01 I2C temperature sensor.

This driver can also be built as a module. If so, the module will
be called tsys01.</help>
				</entry>
				<entry name="TSYS02D">
					<label>Measurement Specialties TSYS02D temperature sensor</label>
					<help>If you say yes here you get support for the Measurement Specialties
TSYS02D temperature sensor.

This driver can also be built as a module. If so, the module will
be called tsys02d.</help>
				</entry>
			</container>
			<entry name="NTB">
				<label>Non-Transparent Bridge support</label>
				<help>The PCI-E Non-transparent bridge hardware is a point-to-point PCI-E bus
connecting 2 systems.  When configured, writes to the device's PCI
mapped memory will be mirrored to a buffer on the remote system.  The
ntb Linux driver uses this point-to-point communication as a method to
transfer data from one system to the other.

If unsure, say N.</help>
			</entry>
			<entry name="NTB_AMD">
				<label>AMD Non-Transparent Bridge support</label>
				<help>This driver supports AMD NTB on capable Zeppelin hardware.

If unsure, say N.
</help>
			</entry>
			<entry name="NTB_INTEL">
				<label>Intel Non-Transparent Bridge support</label>
				<help>This driver supports Intel NTB on capable Xeon and Atom hardware.

If unsure, say N.
</help>
			</entry>
			<entry name="NTB_PINGPONG">
				<label>NTB Ping Pong Test Client</label>
				<help>This is a simple ping pong driver that exercises the scratchpads and
doorbells of the ntb hardware.  This driver may be used to test that
your ntb hardware and drivers are functioning at a basic level.

If unsure, say N.</help>
			</entry>
			<entry name="NTB_TOOL">
				<label>NTB Debugging Tool Test Client</label>
				<help>This is a simple debugging driver that enables the doorbell and
scratchpad registers to be read and written from the debugfs.  This
enables more complicated debugging to be scripted from user space.
This driver may be used to test that your ntb hardware and drivers are
functioning at a basic level.

If unsure, say N.</help>
			</entry>
			<entry name="NTB_PERF">
				<label>NTB RAW Perf Measuring Tool</label>
				<help>This is a tool to measure raw NTB performance by transferring data
to and from the window without additional software interaction.

If unsure, say N.
</help>
			</entry>
			<entry name="NTB_TRANSPORT">
				<label>NTB Transport Client</label>
				<help>This is a transport driver that enables connected systems to exchange
messages over the ntb hardware.  The transport exposes a queue pair api
to client drivers.

If unsure, say N.</help>
			</entry>
			<entry name="VME_BUS">
				<label>VME bridge support</label>
				<help>If you say Y here you get support for the VME bridge Framework.</help>
			</entry>
			<entry name="VME_CA91CX42">
				<label>Universe II</label>
				<help>If you say Y here you get support for the Tundra CA91C142
(Universe II) VME bridge chip.</help>
			</entry>
			<entry name="VME_TSI148">
				<label>Tempe</label>
				<help>If you say Y here you get support for the Tundra TSI148 VME bridge
chip.
</help>
			</entry>
			<entry name="VMIVME_7805">
				<label>VMIVME-7805</label>
				<help>If you say Y here you get support for the VMIVME-7805 board.
This board has an additional control interface to the Universe II
chip. This driver has to be included if you want to access VME bus
with VMIVME-7805 board.
</help>
			</entry>
			<entry name="VME_USER">
				<label>VME user space access driver</label>
				<help>If you say Y here you want to be able to access a limited number of
VME windows in a manner at least semi-compatible with the interface
provided with the original driver at &lt;http://www.vmelinux.org/&gt;.

To compile this driver as a module, choose M here. The module will
be called vme_user. If unsure, say N.</help>
			</entry>
			<entry name="VME_PIO2">
				<label>GE PIO2 VME</label>
				<help>Say Y here to include support for the GE PIO2. The PIO2 is a 6U VME
slave card, implementing 32 solid-state relay switched IO lines, in
4 groups of 8. Each bank of IO lines is built to function as input,
output or both depending on the variant of the card.

To compile this driver as a module, choose M here. The module will
be called vme_pio2. If unsure, say N.

</help>
			</entry>
			<entry name="PWM">
				<label>Pulse-Width Modulation (PWM) Support</label>
				<help>Generic Pulse-Width Modulation (PWM) support.

In Pulse-Width Modulation, a variation of the width of pulses
in a rectangular pulse signal is used as a means to alter the
average power of the signal. Applications include efficient
power delivery and voltage regulation. In computer systems,
PWMs are commonly used to control fans or the brightness of
display backlights.

This framework provides a generic interface to PWM devices
within the Linux kernel. On the driver side it provides an API
to register and unregister a PWM chip, an abstraction of a PWM
controller, that supports one or more PWM devices. Client
drivers can request PWM devices and use the generic framework
to configure as well as enable and disable them.

This generic framework replaces the legacy PWM framework which
allows only a single driver implementing the required API. Not
all legacy implementations have been ported to the framework
yet. The framework provides an API that is backward compatible
with the legacy framework so that existing client drivers
continue to work as expected.

If unsure, say no.</help>
			</entry>
			<entry name="PWM_SYSFS"/>
			<entry name="PWM_AB8500">
				<label>AB8500 PWM support</label>
				<help>Generic PWM framework driver for Analog Baseband AB8500.

To compile this driver as a module, choose M here: the module
will be called pwm-ab8500.</help>
			</entry>
			<entry name="PWM_ATMEL">
				<label>Atmel PWM support</label>
				<help>Generic PWM framework driver for Atmel SoC.

To compile this driver as a module, choose M here: the module
will be called pwm-atmel.</help>
			</entry>
			<entry name="PWM_ATMEL_HLCDC_PWM">
				<label>Atmel HLCDC PWM support</label>
				<help>Generic PWM framework driver for the PWM output of the HLCDC
(Atmel High-end LCD Controller). This PWM output is mainly used
to control the LCD backlight.

To compile this driver as a module, choose M here: the module
will be called pwm-atmel-hlcdc.</help>
			</entry>
			<entry name="PWM_ATMEL_TCB">
				<label>Atmel TC Block PWM support</label>
				<help>Generic PWM framework driver for Atmel Timer Counter Block.

A Timer Counter Block provides 6 PWM devices grouped by 2.
Devices in a given group must have the same period.

To compile this driver as a module, choose M here: the module
will be called pwm-atmel-tcb.</help>
			</entry>
			<entry name="PWM_BCM_IPROC">
				<label>iProc PWM support</label>
				<help>Generic PWM framework driver for Broadcom iProc PWM block. This
block is used in Broadcom iProc SoC's.

To compile this driver as a module, choose M here: the module
will be called pwm-bcm-iproc.</help>
			</entry>
			<entry name="PWM_BCM_KONA">
				<label>Kona PWM support</label>
				<help>Generic PWM framework driver for Broadcom Kona PWM block.

To compile this driver as a module, choose M here: the module
will be called pwm-bcm-kona.</help>
			</entry>
			<entry name="PWM_BCM2835">
				<label>BCM2835 PWM support</label>
				<help>PWM framework driver for BCM2835 controller (Raspberry Pi)

To compile this driver as a module, choose M here: the module
will be called pwm-bcm2835.</help>
			</entry>
			<entry name="PWM_BERLIN">
				<label>Marvell Berlin PWM support</label>
				<help>PWM framework driver for Marvell Berlin SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-berlin.</help>
			</entry>
			<entry name="PWM_BFIN">
				<label>Blackfin PWM support</label>
				<help>Generic PWM framework driver for Blackfin.

To compile this driver as a module, choose M here: the module
will be called pwm-bfin.</help>
			</entry>
			<entry name="PWM_BRCMSTB">
				<label>Broadcom STB PWM support</label>
				<help>Generic PWM framework driver for the Broadcom Set-top-Box
SoCs (BCM7xxx).

To compile this driver as a module, choose M Here: the module
will be called pwm-brcmstb.c.</help>
			</entry>
			<entry name="PWM_CLPS711X">
				<label>CLPS711X PWM support</label>
				<help>Generic PWM framework driver for Cirrus Logic CLPS711X.

To compile this driver as a module, choose M here: the module
will be called pwm-clps711x.</help>
			</entry>
			<entry name="PWM_CRC">
				<label>Intel Crystalcove (CRC) PWM support</label>
				<help>Generic PWM framework driver for Crystalcove (CRC) PMIC based PWM
control.</help>
			</entry>
			<entry name="PWM_CROS_EC">
				<label>ChromeOS EC PWM driver</label>
				<help>PWM driver for exposing a PWM attached to the ChromeOS Embedded
Controller.</help>
			</entry>
			<entry name="PWM_EP93XX">
				<label>Cirrus Logic EP93xx PWM support</label>
				<help>Generic PWM framework driver for Cirrus Logic EP93xx.

To compile this driver as a module, choose M here: the module
will be called pwm-ep93xx.</help>
			</entry>
			<entry name="PWM_FSL_FTM">
				<label>Freescale FlexTimer Module (FTM) PWM support</label>
				<help>Generic FTM PWM framework driver for Freescale VF610 and
Layerscape LS-1 SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-fsl-ftm.</help>
			</entry>
			<entry name="PWM_IMG">
				<label>Imagination Technologies PWM driver</label>
				<help>Generic PWM framework driver for Imagination Technologies
PWM block which supports 4 channels.

To compile this driver as a module, choose M here: the module
will be called pwm-img</help>
			</entry>
			<entry name="PWM_IMX">
				<label>i.MX PWM support</label>
				<help>Generic PWM framework driver for i.MX.

To compile this driver as a module, choose M here: the module
will be called pwm-imx.</help>
			</entry>
			<entry name="PWM_JZ4740">
				<label>Ingenic JZ4740 PWM support</label>
				<help>Generic PWM framework driver for Ingenic JZ4740 based
machines.

To compile this driver as a module, choose M here: the module
will be called pwm-jz4740.</help>
			</entry>
			<entry name="PWM_LP3943">
				<label>TI/National Semiconductor LP3943 PWM support</label>
				<help>Generic PWM framework driver for LP3943 which supports two PWM
channels.

To compile this driver as a module, choose M here: the module
will be called pwm-lp3943.</help>
			</entry>
			<entry name="PWM_LPC18XX_SCT">
				<label>LPC18xx/43xx PWM/SCT support</label>
				<help>Generic PWM framework driver for NXP LPC18xx PWM/SCT which
supports 16 channels.
A maximum of 15 channels can be requested simultaneously and
must have the same period.

To compile this driver as a module, choose M here: the module
will be called pwm-lpc18xx-sct.</help>
			</entry>
			<entry name="PWM_LPC32XX">
				<label>LPC32XX PWM support</label>
				<help>Generic PWM framework driver for LPC32XX. The LPC32XX SOC has two
PWM controllers.

To compile this driver as a module, choose M here: the module
will be called pwm-lpc32xx.</help>
			</entry>
			<entry name="PWM_LPSS"/>
			<entry name="PWM_LPSS_PCI">
				<label>Intel LPSS PWM PCI driver</label>
				<help>The PCI driver for Intel Low Power Subsystem PWM controller.

To compile this driver as a module, choose M here: the module
will be called pwm-lpss-pci.</help>
			</entry>
			<entry name="PWM_LPSS_PLATFORM">
				<label>Intel LPSS PWM platform driver</label>
				<help>The platform driver for Intel Low Power Subsystem PWM controller.

To compile this driver as a module, choose M here: the module
will be called pwm-lpss-platform.</help>
			</entry>
			<entry name="PWM_MTK_DISP">
				<label>MediaTek display PWM driver</label>
				<help>Generic PWM framework driver for MediaTek disp-pwm device.
The PWM is used to control the backlight brightness for display.

To compile this driver as a module, choose M here: the module
will be called pwm-mtk-disp.</help>
			</entry>
			<entry name="PWM_MXS">
				<label>Freescale MXS PWM support</label>
				<help>Generic PWM framework driver for Freescale MXS.

To compile this driver as a module, choose M here: the module
will be called pwm-mxs.</help>
			</entry>
			<entry name="PWM_OMAP_DMTIMER">
				<label>OMAP Dual-Mode Timer PWM support</label>
				<help>Generic PWM framework driver for OMAP Dual-Mode Timer PWM output

To compile this driver as a module, choose M here: the module
will be called pwm-omap-dmtimer</help>
			</entry>
			<entry name="PWM_PCA9685">
				<label>NXP PCA9685 PWM driver</label>
				<help>Generic PWM framework driver for NXP PCA9685 LED controller.

To compile this driver as a module, choose M here: the module
will be called pwm-pca9685.</help>
			</entry>
			<entry name="PWM_PUV3">
				<label>PKUnity NetBook-0916 PWM support</label>
				<help>Generic PWM framework driver for PKUnity NetBook-0916.

To compile this driver as a module, choose M here: the module
will be called pwm-puv3.</help>
			</entry>
			<entry name="PWM_PXA">
				<label>PXA PWM support</label>
				<help>Generic PWM framework driver for PXA.

To compile this driver as a module, choose M here: the module
will be called pwm-pxa.</help>
			</entry>
			<entry name="PWM_RCAR">
				<label>Renesas R-Car PWM support</label>
				<help>This driver exposes the PWM Timer controller found in Renesas
R-Car chips through the PWM API.

To compile this driver as a module, choose M here: the module
will be called pwm-rcar.</help>
			</entry>
			<entry name="PWM_RENESAS_TPU">
				<label>Renesas TPU PWM support</label>
				<help>This driver exposes the Timer Pulse Unit (TPU) PWM controller found
in Renesas chips through the PWM API.

To compile this driver as a module, choose M here: the module
will be called pwm-renesas-tpu.</help>
			</entry>
			<entry name="PWM_ROCKCHIP">
				<label>Rockchip PWM support</label>
				<help>Generic PWM framework driver for the PWM controller found on
Rockchip SoCs.</help>
			</entry>
			<entry name="PWM_SAMSUNG">
				<label>Samsung PWM support</label>
				<help>Generic PWM framework driver for Samsung.

To compile this driver as a module, choose M here: the module
will be called pwm-samsung.</help>
			</entry>
			<entry name="PWM_SPEAR">
				<label>STMicroelectronics SPEAr PWM support</label>
				<help>Generic PWM framework driver for the PWM controller on ST
SPEAr SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-spear.</help>
			</entry>
			<entry name="PWM_STI">
				<label>STiH4xx PWM support</label>
				<help>Generic PWM framework driver for STiH4xx SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-sti.</help>
			</entry>
			<entry name="PWM_STMPE">
				<label>STMPE expander PWM export</label>
				<help>This enables support for the PWMs found in the STMPE I/O
expanders.</help>
			</entry>
			<entry name="PWM_SUN4I">
				<label>Allwinner PWM support</label>
				<help>Generic PWM framework driver for Allwinner SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-sun4i.</help>
			</entry>
			<entry name="PWM_TEGRA">
				<label>NVIDIA Tegra PWM support</label>
				<help>Generic PWM framework driver for the PWFM controller found on NVIDIA
Tegra SoCs.

To compile this driver as a module, choose M here: the module
will be called pwm-tegra.</help>
			</entry>
			<entry name="PWM_TIECAP">
				<label>ECAP PWM support</label>
				<help>PWM driver support for the ECAP APWM controller found on AM33XX
TI SOC

To compile this driver as a module, choose M here: the module
will be called pwm-tiecap.</help>
			</entry>
			<entry name="PWM_TIEHRPWM">
				<label>EHRPWM PWM support</label>
				<help>PWM driver support for the EHRPWM controller found on AM33XX
TI SOC

To compile this driver as a module, choose M here: the module
will be called pwm-tiehrpwm.</help>
			</entry>
			<entry name="PWM_TIPWMSS">
				<help>PWM Subsystem driver support for AM33xx SOC.

PWM submodules require PWM config space access from submodule
drivers and require common parent driver support.</help>
			</entry>
			<entry name="PWM_TWL">
				<label>TWL4030/6030 PWM support</label>
				<help>Generic PWM framework driver for TWL4030/6030.

To compile this driver as a module, choose M here: the module
will be called pwm-twl.</help>
			</entry>
			<entry name="PWM_TWL_LED">
				<label>TWL4030/6030 PWM support for LED drivers</label>
				<help>Generic PWM framework driver for TWL4030/6030 LED terminals.

To compile this driver as a module, choose M here: the module
will be called pwm-twl-led.</help>
			</entry>
			<entry name="PWM_VT8500">
				<label>vt8500 PWM support</label>
				<help>Generic PWM framework driver for vt8500.

To compile this driver as a module, choose M here: the module
will be called pwm-vt8500.</help>
			</entry>
			<entry name="IRQCHIP"/>
			<entry name="ARM_GIC"/>
			<entry name="ARM_GIC_PM"/>
			<entry name="ARM_GIC_MAX_NR"/>
			<entry name="ARM_GIC_V2M"/>
			<entry name="GIC_NON_BANKED"/>
			<entry name="ARM_GIC_V3"/>
			<entry name="ARM_GIC_V3_ITS"/>
			<entry name="ARM_NVIC"/>
			<entry name="ARM_VIC"/>
			<entry name="ARM_VIC_NR">
				<help>The maximum number of VICs available in the system, for
power management.</help>
			</entry>
			<entry name="ARMADA_370_XP_IRQ"/>
			<entry name="ALPINE_MSI"/>
			<entry name="ATMEL_AIC_IRQ"/>
			<entry name="ATMEL_AIC5_IRQ"/>
			<entry name="I8259"/>
			<entry name="BCM6345_L1_IRQ"/>
			<entry name="BCM7038_L1_IRQ"/>
			<entry name="BCM7120_L2_IRQ"/>
			<entry name="BRCMSTB_L2_IRQ"/>
			<entry name="DW_APB_ICTL"/>
			<entry name="HISILICON_IRQ_MBIGEN"/>
			<entry name="IMGPDC_IRQ"/>
			<entry name="IRQ_MIPS_CPU"/>
			<entry name="CLPS711X_IRQCHIP"/>
			<entry name="OR1K_PIC"/>
			<entry name="OMAP_IRQCHIP"/>
			<entry name="ORION_IRQCHIP"/>
			<entry name="PIC32_EVIC"/>
			<entry name="RENESAS_INTC_IRQPIN"/>
			<entry name="RENESAS_IRQC"/>
			<entry name="ST_IRQCHIP">
				<help>Enables SysCfg Controlled IRQs on STi based platforms.</help>
			</entry>
			<entry name="TANGO_IRQ"/>
			<entry name="TB10X_IRQC"/>
			<entry name="TS4800_IRQ">
				<label>TS-4800 IRQ controller</label>
				<help>Support for the TS-4800 FPGA IRQ controller</help>
			</entry>
			<entry name="VERSATILE_FPGA_IRQ"/>
			<entry name="VERSATILE_FPGA_IRQ_NR"/>
			<entry name="XTENSA_MX"/>
			<entry name="IRQ_CROSSBAR">
				<help>Support for a CROSSBAR ip that precedes the main interrupt controller.
The primary irqchip invokes the crossbar's callback which inturn allocates
a free irq and configures the IP. Thus the peripheral interrupts are
routed to one of the free irqchip interrupt lines.</help>
			</entry>
			<entry name="KEYSTONE_IRQ">
				<label>Keystone 2 IRQ controller IP</label>
				<help>Support for Texas Instruments Keystone 2 IRQ controller IP which
is part of the Keystone 2 IPC mechanism</help>
			</entry>
			<entry name="MIPS_GIC"/>
			<entry name="INGENIC_IRQ"/>
			<entry name="RENESAS_H8300H_INTC"/>
			<entry name="RENESAS_H8S_INTC"/>
			<entry name="IMX_GPCV2">
				<help>Enables the wakeup IRQs for IMX platforms with GPCv2 block</help>
			</entry>
			<entry name="IRQ_MXS"/>
			<entry name="MVEBU_ODMI"/>
			<entry name="LS_SCFG_MSI"/>
			<entry name="PARTITION_PERCPU"/>
			<entry name="EZNPS_GIC">
				<label>NPS400 Global Interrupt Manager (GIM)</label>
				<help>Support the EZchip NPS400 global interrupt controller
</help>
			</entry>
			<entry name="IPACK_BUS">
				<label>IndustryPack bus support</label>
				<help>This option provides support for the IndustryPack framework.  There
are IndustryPack carrier boards, which interface another bus (such as
PCI) to an IndustryPack bus, and IndustryPack modules, that are
hosted on these buses.  While IndustryPack modules can provide a
large variety of functionality, they are most often found in
industrial control applications.

Say N if unsure.</help>
			</entry>
			<entry name="BOARD_TPCI200">
				<label>Support for the TEWS TPCI-200 IndustryPack carrier board</label>
				<help>This driver adds support for the TEWS TPCI200 IndustryPack carrier board.</help>
			</entry>
			<entry name="SERIAL_IPOCTAL">
				<label>IndustryPack IP-OCTAL uart support</label>
				<help>This driver supports the IPOCTAL serial port device for the IndustryPack bus.</help>
			</entry>
			<entry name="ARCH_HAS_RESET_CONTROLLER"/>
			<entry name="RESET_CONTROLLER">
				<label>Reset Controller Support</label>
				<help>Generic Reset Controller support.

This framework is designed to abstract reset handling of devices
via GPIOs or SoC-internal reset controller modules.

If unsure, say no.</help>
			</entry>
			<entry name="RESET_OXNAS"/>
			<entry name="TI_SYSCON_RESET">
				<label>TI SYSCON Reset Driver</label>
				<help>This enables the reset driver support for TI devices with
memory-mapped reset registers as part of a syscon device node. If
you wish to use the reset framework for such memory-mapped devices,
say Y here. Otherwise, say N.</help>
			</entry>
			<entry name="STI_RESET_SYSCFG"/>
			<entry name="STIH415_RESET"/>
			<entry name="STIH416_RESET"/>
			<entry name="STIH407_RESET"/>
			<entry name="COMMON_RESET_HI6220">
				<label>Hi6220 Reset Driver</label>
				<help>Build the Hisilicon Hi6220 reset driver.
</help>
			</entry>
			<entry name="FMC">
				<label>FMC support</label>
				<help>
FMC (FPGA Mezzanine Carrier) is a mechanical and electrical
standard for mezzanine cards that plug into a carrier board.
This kernel subsystem supports the matching between carrier
and mezzanine based on identifiers stored in the internal I2C
EEPROM, as well as having carrier-independent drivers.

The framework was born outside of the kernel and at this time
the off-tree code base is more complete.  Code and documentation
is at git://ohwr.org/fmc-projects/fmc-bus.git .

if FMC

config FMC_FAKEDEV
tristate &quot;FMC fake device (software testing)&quot;
help
This is a fake carrier, bringing a default EEPROM content
that can be rewritten at run time and usef for matching
mezzanines.

config FMC_TRIVIAL
tristate &quot;FMC trivial mezzanine driver (software testing)&quot;
help
This is a fake mezzanine driver, to show how FMC works and test it.
The driver also handles interrupts (we used it with a real carrier
before the mezzanines were produced)

config FMC_WRITE_EEPROM
tristate &quot;FMC mezzanine driver to write I2C EEPROM&quot;
help
This driver matches every mezzanine device and can write the
internal EEPROM of the PCB, using the firmware loader to get
its binary and the function carrier-&gt;reprogram to actually do it.
It is useful when the mezzanines are produced.

config FMC_CHARDEV
tristate &quot;FMC mezzanine driver that registers a char device&quot;
help
This driver matches every mezzanine device and allows user
space to read and write registers using a char device. It
can be used to write user-space drivers, or just get
acquainted with a mezzanine before writing its specific driver.

endif # FMC
</help>
			</entry>
			<container name="PHY_Subsystem">
				<label>PHY Subsystem</label>
				<entry name="GENERIC_PHY">
					<label>PHY Core</label>
					<help>Generic PHY support.

This framework is designed to provide a generic interface for PHY
devices present in the kernel. This layer will have the generic
API by which phy drivers can create PHY using the phy framework and
phy users can obtain reference to the PHY. All the users of this
framework should select this config.</help>
				</entry>
				<entry name="PHY_BCM_NS_USB2">
					<label>Broadcom Northstar USB 2.0 PHY Driver</label>
					<help>Enable this to support Broadcom USB 2.0 PHY connected to the USB
controller on Northstar family.</help>
				</entry>
				<entry name="PHY_BERLIN_USB">
					<label>Marvell Berlin USB PHY Driver</label>
					<help>Enable this to support the USB PHY on Marvell Berlin SoCs.</help>
				</entry>
				<entry name="PHY_BERLIN_SATA">
					<label>Marvell Berlin SATA PHY driver</label>
					<help>Enable this to support the SATA PHY on Marvell Berlin SoCs.</help>
				</entry>
				<entry name="ARMADA375_USBCLUSTER_PHY"/>
				<entry name="PHY_DA8XX_USB">
					<label>TI DA8xx USB PHY Driver</label>
					<help>Enable this to support the USB PHY on DA8xx SoCs.

This driver controls both the USB 1.1 PHY and the USB 2.0 PHY.</help>
				</entry>
				<entry name="PHY_DM816X_USB">
					<label>TI dm816x USB PHY driver</label>
					<help>Enable this for dm816x USB to work.</help>
				</entry>
				<entry name="PHY_EXYNOS_MIPI_VIDEO">
					<label>S5P/EXYNOS SoC series MIPI CSI-2/DSI PHY driver</label>
					<help>Support for MIPI CSI-2 and MIPI DSI DPHY found on Samsung S5P
and EXYNOS SoCs.</help>
				</entry>
				<entry name="PHY_LPC18XX_USB_OTG">
					<label>NXP LPC18xx/43xx SoC USB OTG PHY driver</label>
					<help>Enable this to support NXP LPC18xx/43xx internal USB OTG PHY.

This driver is need for USB0 support on LPC18xx/43xx and takes
care of enabling and clock setup.</help>
				</entry>
				<entry name="PHY_PXA_28NM_HSIC">
					<label>Marvell USB HSIC 28nm PHY Driver</label>
					<help>Enable this to support Marvell USB HSIC PHY driver for Marvell
SoC. This driver will do the PHY initialization and shutdown.
The PHY driver will be used by Marvell ehci driver.

To compile this driver as a module, choose M here.</help>
				</entry>
				<entry name="PHY_PXA_28NM_USB2">
					<label>Marvell USB 2.0 28nm PHY Driver</label>
					<help>Enable this to support Marvell USB 2.0 PHY driver for Marvell
SoC. This driver will do the PHY initialization and shutdown.
The PHY driver will be used by Marvell udc/ehci/otg driver.

To compile this driver as a module, choose M here.</help>
				</entry>
				<entry name="PHY_MVEBU_SATA"/>
				<entry name="PHY_MIPHY28LP">
					<label>STMicroelectronics MIPHY28LP PHY driver for STiH407</label>
					<help>Enable this to support the miphy transceiver (for SATA/PCIE/USB3)
that is part of STMicroelectronics STiH407 SoC.</help>
				</entry>
				<entry name="PHY_MIPHY365X">
					<label>STMicroelectronics MIPHY365X PHY driver for STiH41x series</label>
					<help>Enable this to support the miphy transceiver (for SATA/PCIE)
that is part of STMicroelectronics STiH41x SoC series.</help>
				</entry>
				<entry name="PHY_RCAR_GEN2">
					<label>Renesas R-Car generation 2 USB PHY driver</label>
					<help>Support for USB PHY found on Renesas R-Car generation 2 SoCs.</help>
				</entry>
				<entry name="PHY_RCAR_GEN3_USB2">
					<label>Renesas R-Car generation 3 USB 2.0 PHY driver</label>
					<help>Support for USB 2.0 PHY found on Renesas R-Car generation 3 SoCs.</help>
				</entry>
				<entry name="OMAP_CONTROL_PHY">
					<label>OMAP CONTROL PHY Driver</label>
					<help>Enable this to add support for the PHY part present in the control
module. This driver has API to power on the USB2 PHY and to write to
the mailbox. The mailbox is present only in omap4 and the register to
power on the USB2 PHY is present in OMAP4 and OMAP5. OMAP5 has an
additional register to power on USB3 PHY/SATA PHY/PCIE PHY
(PIPE3 PHY).</help>
				</entry>
				<entry name="OMAP_USB2">
					<label>OMAP USB2 PHY Driver</label>
					<help>Enable this to support the transceiver that is part of SOC. This
driver takes care of all the PHY functionality apart from comparator.
The USB OTG controller communicates with the comparator using this
driver.</help>
				</entry>
				<entry name="TI_PIPE3">
					<label>TI PIPE3 PHY Driver</label>
					<help>Enable this to support the PIPE3 PHY that is part of TI SOCs. This
driver takes care of all the PHY functionality apart from comparator.
This driver interacts with the &quot;OMAP Control PHY Driver&quot; to power
on/off the PHY.</help>
				</entry>
				<entry name="TWL4030_USB">
					<label>TWL4030 USB Transceiver Driver</label>
					<help>Enable this to support the USB OTG transceiver on TWL4030
family chips (including the TWL5030 and TPS659x0 devices).
This transceiver supports high and full speed devices plus,
in host mode, low speed.</help>
				</entry>
				<entry name="PHY_EXYNOS_DP_VIDEO">
					<label>EXYNOS SoC series Display Port PHY driver</label>
					<help>Support for Display Port PHY found on Samsung EXYNOS SoCs.</help>
				</entry>
				<entry name="BCM_KONA_USB2_PHY">
					<label>Broadcom Kona USB2 PHY Driver</label>
					<help>Enable this to support the Broadcom Kona USB 2.0 PHY.</help>
				</entry>
				<entry name="PHY_EXYNOS5250_SATA">
					<label>Exynos5250 Sata SerDes/PHY driver</label>
					<help>Enable this to support SATA SerDes/Phy found on Samsung's
Exynos5250 based SoCs.This SerDes/Phy supports SATA 1.5 Gb/s,
SATA 3.0 Gb/s, SATA 6.0 Gb/s speeds. It supports one SATA host
port to accept one SATA device.</help>
				</entry>
				<entry name="PHY_HIX5HD2_SATA">
					<label>HIX5HD2 SATA PHY Driver</label>
					<help>Support for SATA PHY on Hisilicon hix5hd2 Soc.</help>
				</entry>
				<entry name="PHY_MT65XX_USB3">
					<label>Mediatek USB3.0 PHY Driver</label>
					<help>Say 'Y' here to add support for Mediatek USB3.0 PHY driver,
it supports multiple usb2.0 and usb3.0 ports.</help>
				</entry>
				<entry name="PHY_HI6220_USB">
					<label>hi6220 USB PHY support</label>
					<help>Enable this to support the HISILICON HI6220 USB PHY.

To compile this driver as a module, choose M here.</help>
				</entry>
				<entry name="PHY_SUN4I_USB">
					<label>Allwinner sunxi SoC USB PHY driver</label>
					<help>Enable this to support the transceiver that is part of Allwinner
sunxi SoCs.

This driver controls the entire USB PHY block, both the USB OTG
parts, as well as the 2 regular USB 2 host PHYs.</help>
				</entry>
				<entry name="PHY_SUN9I_USB">
					<label>Allwinner sun9i SoC USB PHY driver</label>
					<help>Enable this to support the transceiver that is part of Allwinner
sun9i SoCs.

This driver controls each individual USB 2 host PHY.</help>
				</entry>
				<entry name="PHY_SAMSUNG_USB2">
					<label>Samsung USB 2.0 PHY driver</label>
					<help>Enable this to support the Samsung USB 2.0 PHY driver for Samsung
SoCs. This driver provides the interface for USB 2.0 PHY. Support
for particular PHYs will be enabled based on the SoC type in addition
to this driver.</help>
				</entry>
				<entry name="PHY_S5PV210_USB2">
					<label>Support for S5PV210</label>
					<help>Enable USB PHY support for S5PV210. This option requires that Samsung
USB 2.0 PHY driver is enabled and means that support for this
particular SoC is compiled in the driver. In case of S5PV210 two phys
are available - device and host.</help>
				</entry>
				<entry name="PHY_EXYNOS4210_USB2"/>
				<entry name="PHY_EXYNOS4X12_USB2"/>
				<entry name="PHY_EXYNOS5250_USB2"/>
				<entry name="PHY_EXYNOS5_USBDRD">
					<label>Exynos5 SoC series USB DRD PHY driver</label>
					<help>Enable USB DRD PHY support for Exynos 5 SoC series.
This driver provides PHY interface for USB 3.0 DRD controller
present on Exynos5 SoC series.</help>
				</entry>
				<entry name="PHY_PISTACHIO_USB">
					<label>IMG Pistachio USB2.0 PHY driver</label>
					<help>Enable this to support the USB2.0 PHY on the IMG Pistachio SoC.</help>
				</entry>
				<entry name="PHY_QCOM_APQ8064_SATA">
					<label>Qualcomm APQ8064 SATA SerDes/PHY driver</label>
				</entry>
				<entry name="PHY_QCOM_IPQ806X_SATA">
					<label>Qualcomm IPQ806x SATA SerDes/PHY driver</label>
				</entry>
				<entry name="PHY_ROCKCHIP_USB">
					<label>Rockchip USB2 PHY Driver</label>
					<help>Enable this to support the Rockchip USB 2.0 PHY.</help>
				</entry>
				<entry name="PHY_ROCKCHIP_EMMC">
					<label>Rockchip EMMC PHY Driver</label>
					<help>Enable this to support the Rockchip EMMC PHY.</help>
				</entry>
				<entry name="PHY_ROCKCHIP_DP">
					<label>Rockchip Display Port PHY Driver</label>
					<help>Enable this to support the Rockchip Display Port PHY.</help>
				</entry>
				<entry name="PHY_ST_SPEAR1310_MIPHY">
					<label>ST SPEAR1310-MIPHY driver</label>
					<help>Support for ST SPEAr1310 MIPHY which can be used for PCIe and SATA.</help>
				</entry>
				<entry name="PHY_ST_SPEAR1340_MIPHY">
					<label>ST SPEAR1340-MIPHY driver</label>
					<help>Support for ST SPEAr1340 MIPHY which can be used for PCIe and SATA.</help>
				</entry>
				<entry name="PHY_XGENE">
					<label>APM X-Gene 15Gbps PHY support</label>
					<help>This option enables support for APM X-Gene SoC multi-purpose PHY.</help>
				</entry>
				<entry name="PHY_STIH407_USB">
					<label>STMicroelectronics USB2 picoPHY driver for STiH407 family</label>
					<help>Enable this support to enable the picoPHY device used by USB2
and USB3 controllers on STMicroelectronics STiH407 SoC families.</help>
				</entry>
				<entry name="PHY_STIH41X_USB">
					<label>STMicroelectronics USB2 PHY driver for STiH41x series</label>
					<help>Enable this to support the USB transceiver that is part of
STMicroelectronics STiH41x SoC series.</help>
				</entry>
				<entry name="PHY_QCOM_UFS">
					<label>Qualcomm UFS PHY driver</label>
					<help>Support for UFS PHY on QCOM chipsets.</help>
				</entry>
				<entry name="PHY_TUSB1210">
					<label>TI TUSB1210 ULPI PHY module</label>
					<help>Support for TI TUSB1210 USB ULPI PHY.</help>
				</entry>
				<entry name="PHY_BRCM_SATA">
					<label>Broadcom SATA PHY driver</label>
					<help>Enable this to support the Broadcom SATA PHY.
If unsure, say N.</help>
				</entry>
				<entry name="PHY_CYGNUS_PCIE">
					<label>Broadcom Cygnus PCIe PHY driver</label>
					<help>Enable this to support the Broadcom Cygnus PCIe PHY.
If unsure, say N.</help>
				</entry>
				<entry name="PHY_TEGRA_XUSB">
					<label>NVIDIA Tegra XUSB pad controller driver</label>
					<help>Choose this option if you have an NVIDIA Tegra SoC.

To compile this driver as a module, choose M here: the module will
be called phy-tegra-xusb.
</help>
				</entry>
				<entry name="PHY_NS2_PCIE">
					<label>Broadcom Northstar2 PCIe PHY driver</label>
					<help>Enable this to support the Broadcom Northstar2 PCIe PHY.
If unsure, say N.</help>
				</entry>
			</container>
			<entry name="POWERCAP">
				<label>Generic powercap sysfs driver</label>
				<help>The power capping sysfs interface allows kernel subsystems to expose power
capping settings to user space in a consistent way.  Usually, it consists
of multiple control types that determine which settings may be exposed and
power zones representing parts of the system that can be subject to power
capping.

If you want this code to be compiled in, say Y here.</help>
			</entry>
			<entry name="INTEL_RAPL">
				<label>Intel RAPL Support</label>
				<help>This enables support for the Intel Running Average Power Limit (RAPL)
technology which allows power limits to be enforced and monitored on
modern Intel processors (Sandy Bridge and later).

In RAPL, the platform level settings are divided into domains for
fine grained control. These domains include processor package, DRAM
controller, CPU core (Power Plance 0), graphics uncore (Power Plane
1), etc.</help>
			</entry>
			<entry name="MCB">
				<label>MCB support</label>
				<help>
The MCB (MEN Chameleon Bus) is a Bus specific to MEN Mikroelektronik
FPGA based devices. It is used to identify MCB based IP-Cores within
an FPGA and provide the necessary framework for instantiating drivers
for these devices.

If build as a module, the module is called mcb.ko

if MCB
config MCB_PCI
tristate &quot;PCI based MCB carrier&quot;
default n
depends on PCI
help

This is a MCB carrier on a PCI device. Both PCI attached on-board
FPGAs as well as CompactPCI attached MCB FPGAs are supported with
this driver.

If build as a module, the module is called mcb-pci.ko

endif # MCB
</help>
			</entry>
			<container name="Performance_monitor_support">
				<label>Performance monitor support</label>
				<entry name="ARM_PMU">
					<label>ARM PMU framework</label>
					<help>Say y if you want to use CPU performance monitors on ARM-based
systems.</help>
				</entry>
			</container>
			<entry name="RAS">
				<label>Reliability, Availability and Serviceability (RAS) features</label>
				<help>Reliability, availability and serviceability (RAS) is a computer
hardware engineering term. Computers designed with higher levels
of RAS have a multitude of features that protect data integrity
and help them stay available for long periods of time without
failure.

Reliability can be defined as the probability that the system will
produce correct outputs up to some given time. Reliability is
enhanced by features that help to avoid, detect and repair hardware
faults.

Availability is the probability a system is operational at a given
time, i.e. the amount of time a device is actually operating as the
percentage of total time it should be operating.

Serviceability or maintainability is the simplicity and speed with
which a system can be repaired or maintained; if the time to repair
a failed system increases, then availability will decrease.

Note that Reliability and Availability are distinct concepts:
Reliability is a measure of the ability of a system to function
correctly, including avoiding data corruption, whereas Availability
measures how often it is available for use, even though it may not
be functioning correctly. For example, a server may run forever and
so have ideal availability, but may be unreliable, with frequent
data corruption.</help>
			</entry>
			<entry name="MCE_AMD_INJ">
				<label>Simple MCE injection interface for AMD processors</label>
				<help>This is a simple debugfs interface to inject MCEs and test different
aspects of the MCE handling code.

WARNING: Do not even assume this interface is staying stable!
</help>
			</entry>
			<entry name="THUNDERBOLT">
				<label>Thunderbolt support for Apple devices</label>
				<help>Cactus Ridge Thunderbolt Controller driver
This driver is required if you want to hotplug Thunderbolt devices on
Apple hardware.

Device chaining is currently not supported.

To compile this driver a module, choose M here. The module will be
called thunderbolt.
</help>
			</entry>
			<container name="Android">
				<label>Android</label>
				<entry name="ANDROID">
					<label>Android Drivers</label>
					<help>Enable support for various drivers needed on the Android platform</help>
				</entry>
				<entry name="ANDROID_BINDER_IPC">
					<label>Android Binder IPC Driver</label>
					<help>Binder is used in Android for both communication between processes,
and remote method invocation.

This means one Android process can call a method/routine in another
Android process, using Binder to identify, invoke and pass arguments
between said processes.</help>
				</entry>
				<entry name="ANDROID_BINDER_IPC_32BIT">
					<help>The Binder API has been changed to support both 32 and 64bit
applications in a mixed environment.

Enable this to support an old 32-bit Android user-space (v4.4 and
earlier).

Note that enabling this will break newer Android user-space.</help>
				</entry>
			</container>
			<entry name="LIBNVDIMM">
				<label>NVDIMM (Non-Volatile Memory Device) Support</label>
				<help>Generic support for non-volatile memory devices including
ACPI-6-NFIT defined resources.  On platforms that define an
NFIT, or otherwise can discover NVDIMM resources, a libnvdimm
bus is registered to advertise PMEM (persistent memory)
namespaces (/dev/pmemX) and BLK (sliding mmio window(s))
namespaces (/dev/ndblkX.Y). A PMEM namespace refers to a
memory resource that may span multiple DIMMs and support DAX
(see CONFIG_DAX).  A BLK namespace refers to an NVDIMM control
region which exposes an mmio register set for windowed access
mode to non-volatile memory.</help>
			</entry>
			<entry name="BLK_DEV_PMEM">
				<label>PMEM: Persistent memory block device support</label>
				<help>Memory ranges for PMEM are described by either an NFIT
(NVDIMM Firmware Interface Table, see CONFIG_NFIT_ACPI), a
non-standard OEM-specific E820 memory type (type-12, see
CONFIG_X86_PMEM_LEGACY), or it is manually specified by the
'memmap=nn[KMG]!ss[KMG]' kernel command line (see
Documentation/kernel-parameters.txt).  This driver converts
these persistent memory ranges into block devices that are
capable of DAX (direct-access) file system mappings.  See
Documentation/nvdimm/nvdimm.txt for more details.

Say Y if you want to use an NVDIMM</help>
			</entry>
			<entry name="ND_BLK">
				<label>BLK: Block data window (aperture) device support</label>
				<help>Support NVDIMMs, or other devices, that implement a BLK-mode
access capability.  BLK-mode access uses memory-mapped-i/o
apertures to access persistent media.

Say Y if your platform firmware emits an ACPI.NFIT table
(CONFIG_ACPI_NFIT), or otherwise exposes BLK-mode
capabilities.</help>
			</entry>
			<entry name="ND_CLAIM"/>
			<entry name="ND_BTT"/>
			<entry name="BTT">
				<label>BTT: Block Translation Table (atomic sector updates)</label>
				<help>The Block Translation Table (BTT) provides atomic sector
update semantics for persistent memory devices, so that
applications that rely on sector writes not being torn (a
guarantee that typical disks provide) can continue to do so.
The BTT manifests itself as an alternate personality for an
NVDIMM namespace, i.e. a namespace can be in raw mode (pmemX,
ndblkX.Y, etc...), or 'sectored' mode, (pmemXs, ndblkX.Ys,
etc...).

Select Y if unsure</help>
			</entry>
			<entry name="ND_PFN"/>
			<entry name="NVDIMM_PFN">
				<label>PFN: Map persistent (device) memory</label>
				<help>Map persistent memory, i.e. advertise it to the memory
management sub-system.  By default persistent memory does
not support direct I/O, RDMA, or any other usage that
requires a 'struct page' to mediate an I/O request.  This
driver allocates and initializes the infrastructure needed
to support those use cases.

Select Y if unsure</help>
			</entry>
			<entry name="NVDIMM_DAX">
				<label>NVDIMM DAX: Raw access to persistent memory</label>
				<help>Support raw device dax access to a persistent memory
namespace.  For environments that want to hard partition
peristent memory, this capability provides a mechanism to
sub-divide a namespace into character devices that can only be
accessed via DAX (mmap(2)).

Select Y if unsure</help>
			</entry>
			<entry name="DEV_DAX">
				<label>DAX: direct access to differentiated memory</label>
				<help>Support raw access to differentiated (persistence, bandwidth,
latency...) memory via an mmap(2) capable character
device.  Platform firmware or a device driver may identify a
platform memory resource that is differentiated from the
baseline memory pool.  Mappings of a /dev/daxX.Y device impose
restrictions that make the mapping behavior deterministic.</help>
			</entry>
			<entry name="DEV_DAX_PMEM">
				<label>PMEM DAX: direct access to persistent memory</label>
				<help>Support raw access to persistent memory.  Note that this
driver consumes memory ranges allocated and exported by the
libnvdimm sub-system.

Say Y if unsure</help>
			</entry>
			<entry name="NVMEM">
				<label>NVMEM Support</label>
				<help>Support for NVMEM(Non Volatile Memory) devices like EEPROM, EFUSES...

This framework is designed to provide a generic interface to NVMEM
from both the Linux Kernel and the userspace.

This driver can also be built as a module. If so, the module
will be called nvmem_core.

If unsure, say no.</help>
			</entry>
			<entry name="NVMEM_IMX_OCOTP">
				<label>i.MX6 On-Chip OTP Controller support</label>
				<help>This is a driver for the On-Chip OTP Controller (OCOTP) available on
i.MX6 SoCs, providing access to 4 Kbits of one-time programmable
eFuses.

This driver can also be built as a module. If so, the module
will be called nvmem-imx-ocotp.</help>
			</entry>
			<entry name="NVMEM_LPC18XX_EEPROM">
				<label>NXP LPC18XX EEPROM Memory Support</label>
				<help>Say Y here to include support for NXP LPC18xx EEPROM memory found in
NXP LPC185x/3x and LPC435x/3x/2x/1x devices.
To compile this driver as a module, choose M here: the module
will be called nvmem_lpc18xx_eeprom.</help>
			</entry>
			<entry name="NVMEM_MXS_OCOTP">
				<label>Freescale MXS On-Chip OTP Memory Support</label>
				<help>If you say Y here, you will get readonly access to the
One Time Programmable memory pages that are stored
on the Freescale i.MX23/i.MX28 processor.

This driver can also be built as a module. If so, the module
will be called nvmem-mxs-ocotp.</help>
			</entry>
			<entry name="MTK_EFUSE">
				<label>Mediatek SoCs EFUSE support</label>
				<help>This is a driver to access hardware related data like sensor
calibration, HDMI impedance etc.

This driver can also be built as a module. If so, the module
will be called efuse-mtk.</help>
			</entry>
			<entry name="QCOM_QFPROM">
				<label>QCOM QFPROM Support</label>
				<help>Say y here to enable QFPROM support. The QFPROM provides access
functions for QFPROM data to rest of the drivers via nvmem interface.

This driver can also be built as a module. If so, the module
will be called nvmem_qfprom.</help>
			</entry>
			<entry name="ROCKCHIP_EFUSE">
				<label>Rockchip eFuse Support</label>
				<help>This is a simple drive to dump specified values of Rockchip SoC
from eFuse, such as cpu-leakage.

This driver can also be built as a module. If so, the module
will be called nvmem_rockchip_efuse.</help>
			</entry>
			<entry name="NVMEM_SUNXI_SID">
				<label>Allwinner SoCs SID support</label>
				<help>This is a driver for the 'security ID' available on various Allwinner
devices.

This driver can also be built as a module. If so, the module
will be called nvmem_sunxi_sid.</help>
			</entry>
			<entry name="NVMEM_VF610_OCOTP">
				<label>VF610 SoC OCOTP support</label>
				<help>This is a driver for the 'OCOTP' peripheral available on Vybrid
devices like VF5xx and VF6xx.

This driver can also be build as a module. If so, the module will
be called nvmem-vf610-ocotp.</help>
			</entry>
			<entry name="STM">
				<label>System Trace Module devices</label>
				<help>A System Trace Module (STM) is a device exporting data in System
Trace Protocol (STP) format as defined by MIPI STP standards.
Examples of such devices are Intel(R) Trace Hub and Coresight STM.

Say Y here to enable System Trace Module device support.</help>
			</entry>
			<entry name="STM_DUMMY">
				<label>Dummy STM driver</label>
				<help>This is a simple dummy device that pretends to be an stm device
and discards your data. Use for stm class testing.

If you don't know what this is, say N.</help>
			</entry>
			<entry name="STM_SOURCE_CONSOLE">
				<label>Kernel console over STM devices</label>
				<help>This is a kernel space trace source that sends kernel log
messages to trace hosts over STM devices.

If you want to send kernel console messages over STM devices,
say Y.</help>
			</entry>
			<entry name="STM_SOURCE_HEARTBEAT">
				<label>Heartbeat over STM devices</label>
				<help>This is a kernel space trace source that sends periodic
heartbeat messages to trace hosts over STM devices. It is
also useful for testing stm class drivers and the stm class
framework itself.

If you want to send heartbeat messages over STM devices,
say Y.</help>
			</entry>
			<entry name="INTEL_TH">
				<label>Intel(R) Trace Hub controller</label>
				<help>Intel(R) Trace Hub (TH) is a set of hardware blocks (subdevices) that
produce, switch and output trace data from multiple hardware and
software sources over several types of trace output ports encoded
in System Trace Protocol (MIPI STPv2) and is intended to perform
full system debugging.

This option enables intel_th bus and common code used by TH
subdevices to interact with each other and hardware and for
platform glue layers to drive Intel TH devices.

Say Y here to enable Intel(R) Trace Hub controller support.</help>
			</entry>
			<entry name="INTEL_TH_PCI">
				<label>Intel(R) Trace Hub PCI controller</label>
				<help>Intel(R) Trace Hub may exist as a PCI device. This option enables
support glue layer for PCI-based Intel TH.

Say Y here to enable PCI Intel TH support.</help>
			</entry>
			<entry name="INTEL_TH_GTH">
				<label>Intel(R) Trace Hub Global Trace Hub</label>
				<help>Global Trace Hub (GTH) is the central component of the
Intel TH infrastructure and acts as a switch for source
and output devices. This driver is required for other
Intel TH subdevices to initialize.

Say Y here to enable GTH subdevice of Intel(R) Trace Hub.</help>
			</entry>
			<entry name="INTEL_TH_STH">
				<label>Intel(R) Trace Hub Software Trace Hub support</label>
				<help>Software Trace Hub (STH) enables trace data from software
trace sources to be sent out via Intel(R) Trace Hub. It
uses stm class device to interface with its sources.

Say Y here to enable STH subdevice of Intel(R) Trace Hub.</help>
			</entry>
			<entry name="INTEL_TH_MSU">
				<label>Intel(R) Trace Hub Memory Storage Unit</label>
				<help>Memory Storage Unit (MSU) trace output device enables
storing STP traces to system memory. It supports single
and multiblock modes of operation and provides read()
and mmap() access to the collected data.

Say Y here to enable MSU output device for Intel TH.</help>
			</entry>
			<entry name="INTEL_TH_PTI">
				<label>Intel(R) Trace Hub PTI output</label>
				<help>Parallel Trace Interface unit (PTI) is a trace output device
of Intel TH architecture that facilitates STP trace output via
a PTI port.

Say Y to enable PTI output of Intel TH data.</help>
			</entry>
			<entry name="INTEL_TH_DEBUG">
				<label>Intel(R) Trace Hub debugging</label>
				<help>Say Y here to enable debugging.</help>
			</entry>
			<container name="FPGA_Configuration_Support">
				<label>FPGA Configuration Support</label>
				<entry name="FPGA">
					<label>FPGA Configuration Framework</label>
					<help>Say Y here if you want support for configuring FPGAs from the
kernel.  The FPGA framework adds a FPGA manager class and FPGA
manager drivers.</help>
				</entry>
				<entry name="FPGA_MGR_SOCFPGA">
					<label>Altera SOCFPGA FPGA Manager</label>
					<help>FPGA manager driver support for Altera SOCFPGA.</help>
				</entry>
				<entry name="FPGA_MGR_ZYNQ_FPGA">
					<label>Xilinx Zynq FPGA</label>
					<help>FPGA manager driver support for Xilinx Zynq FPGAs.</help>
				</entry>
			</container>
		</container>
		<container name="Ubuntu_Supplied_Third_Party_Device_Drivers">
			<label>Ubuntu Supplied Third-Party Device Drivers</label>
		</container>
		<container name="Firmware_Drivers">
			<label>Firmware Drivers</label>
			<entry name="ARM_PSCI_FW"/>
			<entry name="ARM_SCPI_PROTOCOL">
				<label>ARM System Control and Power Interface (SCPI) Message Protocol</label>
				<help>System Control and Power Interface (SCPI) Message Protocol is
defined for the purpose of communication between the Application
Cores(AP) and the System Control Processor(SCP). The MHU peripheral
provides a mechanism for inter-processor communication between SCP
and AP.

SCP controls most of the power managament on the Application
Processors. It offers control and management of: the core/cluster
power states, various power domain DVFS including the core/cluster,
certain system clocks configuration, thermal sensors and many
others.

This protocol library provides interface for all the client drivers
making use of the features offered by the SCP.</help>
			</entry>
			<entry name="ARM_SCPI_POWER_DOMAIN">
				<label>SCPI power domain driver</label>
				<help>This enables support for the SCPI power domains which can be
enabled or disabled via the SCP firmware</help>
			</entry>
			<entry name="EDD">
				<label>BIOS Enhanced Disk Drive calls determine boot disk</label>
				<help>Say Y or M here if you want to enable BIOS Enhanced Disk Drive
Services real mode BIOS calls to determine which disk
BIOS tries boot from.  This information is then exported via sysfs.

This option is experimental and is known to fail to boot on some
obscure configurations. Most disk controller BIOS vendors do
not yet implement this feature.</help>
			</entry>
			<entry name="EDD_OFF">
				<label>Sets default behavior for EDD detection to off</label>
				<help>Say Y if you want EDD disabled by default, even though it is compiled into the
kernel. Say N if you want EDD enabled by default. EDD can be dynamically set
using the kernel parameter 'edd={on|skipmbr|off}'.</help>
			</entry>
			<entry name="FIRMWARE_MEMMAP">
				<label>Add firmware-provided memory map to sysfs&quot; if EXPERT</label>
				<help>Add the firmware-provided (unmodified) memory map to /sys/firmware/memmap.
That memory map is used for example by kexec to set up parameter area
for the next kernel, but can also be used for debugging purposes.

See also Documentation/ABI/testing/sysfs-firmware-memmap.</help>
			</entry>
			<entry name="EFI_PCDP">
				<label>Console device selection via EFI PCDP or HCDP table</label>
				<help>If your firmware supplies the PCDP table, and you want to
automatically use the primary console device it describes
as the Linux console, say Y here.

If your firmware supplies the HCDP table, and you want to
use the first serial port it describes as the Linux console,
say Y here.  If your EFI ConOut path contains only a UART
device, it will become the console automatically.  Otherwise,
you must specify the &quot;console=hcdp&quot; kernel boot argument.

Neither the PCDP nor the HCDP affects naming of serial devices,
so a serial console may be /dev/ttyS0, /dev/ttyS1, etc, depending
on how the driver discovers devices.

You must also enable the appropriate drivers (serial, VGA, etc.)

See DIG64_HCDPv20_042804.pdf available from
&lt;http://www.dig64.org/specifications/&gt;</help>
			</entry>
			<entry name="DELL_RBU">
				<label>BIOS update support for DELL systems via sysfs</label>
				<help>Say m if you want to have the option of updating the BIOS for your
DELL system. Note you need a Dell OpenManage or Dell Update package (DUP)
supporting application to communicate with the BIOS regarding the new
image for the image update to take effect.
See &lt;file:Documentation/dell_rbu.txt&gt; for more details on the driver.</help>
			</entry>
			<entry name="DCDBAS">
				<label>Dell Systems Management Base Driver</label>
				<help>The Dell Systems Management Base Driver provides a sysfs interface
for systems management software to perform System Management
Interrupts (SMIs) and Host Control Actions (system power cycle or
power off after OS shutdown) on certain Dell systems.

See &lt;file:Documentation/dcdbas.txt&gt; for more details on the driver
and the Dell systems on which Dell systems management software makes
use of this driver.

Say Y or M here to enable the driver for use by Dell systems
management software such as Dell OpenManage.</help>
			</entry>
			<entry name="DMIID">
				<label>Export DMI identification via sysfs to userspace</label>
				<help>Say Y here if you want to query SMBIOS/DMI system identification
information from userspace through /sys/class/dmi/id/ or if you want
DMI-based module auto-loading.</help>
			</entry>
			<entry name="DMI_SYSFS">
				<label>DMI table support in sysfs</label>
				<help>Say Y or M here to enable the exporting of the raw DMI table
data via sysfs.  This is useful for consuming the data without
requiring any access to /dev/mem at all.  Tables are found
under /sys/firmware/dmi when this option is enabled and
loaded.</help>
			</entry>
			<entry name="DMI_SCAN_MACHINE_NON_EFI_FALLBACK"/>
			<entry name="ISCSI_IBFT_FIND">
				<label>iSCSI Boot Firmware Table Attributes</label>
				<help>This option enables the kernel to find the region of memory
in which the ISCSI Boot Firmware Table (iBFT) resides. This
is necessary for iSCSI Boot Firmware Table Attributes module to work
properly.</help>
			</entry>
			<entry name="ISCSI_IBFT">
				<label>iSCSI Boot Firmware Table Attributes module</label>
				<help>This option enables support for detection and exposing of iSCSI
Boot Firmware Table (iBFT) via sysfs to userspace. If you wish to
detect iSCSI boot parameters dynamically during system boot, say Y.
Otherwise, say N.</help>
			</entry>
			<entry name="RASPBERRYPI_FIRMWARE">
				<label>Raspberry Pi Firmware Driver</label>
				<help>This option enables support for communicating with the firmware on the
Raspberry Pi.</help>
			</entry>
			<entry name="FW_CFG_SYSFS">
				<label>QEMU fw_cfg device support in sysfs</label>
				<help>Say Y or M here to enable the exporting of the QEMU firmware
configuration (fw_cfg) file entries via sysfs. Entries are
found under /sys/firmware/fw_cfg when this option is enabled
and loaded.</help>
			</entry>
			<entry name="FW_CFG_SYSFS_CMDLINE">
				<label>QEMU fw_cfg device parameter parsing</label>
				<help>Allow the qemu_fw_cfg device to be initialized via the kernel
command line or using a module parameter.
WARNING: Using incorrect parameters (base address in particular)
may crash your system.</help>
			</entry>
			<entry name="QCOM_SCM"/>
			<entry name="QCOM_SCM_32"/>
			<entry name="QCOM_SCM_64"/>
			<entry name="HAVE_ARM_SMCCC"/>
			<entry name="BCM47XX_NVRAM">
				<label>Broadcom NVRAM driver</label>
				<help>Broadcom home routers contain flash partition called &quot;nvram&quot; with all
important hardware configuration as well as some minor user setup.
NVRAM partition contains a text-like data representing name=value
pairs.
This driver provides an easy way to get value of requested parameter.
It simply reads content of NVRAM and parses it. It doesn't control any
hardware part itself.</help>
			</entry>
			<entry name="BCM47XX_SPROM">
				<label>Broadcom SPROM driver</label>
				<help>Broadcom devices store configuration data in SPROM. Accessing it is
specific to the bus host type, e.g. PCI(e) devices have it mapped in
a PCI BAR.
In case of SoC devices SPROM content is stored on a flash used by
bootloader firmware CFE. This driver provides method to ssb and bcma
drivers to read SPROM on SoC.
</help>
			</entry>
			<entry name="GOOGLE_FIRMWARE">
				<label>Google Firmware Drivers</label>
				<help>These firmware drivers are used by Google's servers.  They are
only useful if you are working directly on one of their
proprietary servers.  If in doubt, say &quot;N&quot;.</help>
			</entry>
			<container name="Google_Firmware_Drivers">
				<label>Google Firmware Drivers</label>
				<entry name="GOOGLE_SMI">
					<label>SMI interface for Google platforms</label>
					<help>Say Y here if you want to enable SMI callbacks for Google
platforms.  This provides an interface for writing to and
clearing the EFI event log and reading and writing NVRAM
variables.</help>
				</entry>
				<entry name="GOOGLE_MEMCONSOLE">
					<label>Firmware Memory Console</label>
					<help>This option enables the kernel to search for a firmware log in
the EBDA on Google servers.  If found, this log is exported to
userland in the file /sys/firmware/log.</help>
				</entry>
			</container>
			<container name="EFI_Extensible_Firmware_Interface_Support">
				<label>EFI (Extensible Firmware Interface) Support</label>
				<entry name="EFI_VARS">
					<label>EFI Variable Support via sysfs</label>
					<help>If you say Y here, you are able to get EFI (Extensible Firmware
Interface) variable information via sysfs.  You may read,
write, create, and destroy EFI variables through this interface.

Note that using this driver in concert with efibootmgr requires
at least test release version 0.5.0-test3 or later, which is
available from:
&lt;http://linux.dell.com/efibootmgr/testing/efibootmgr-0.5.0-test3.tar.gz&gt;

Subsequent efibootmgr releases may be found at:
&lt;http://github.com/vathpela/efibootmgr&gt;</help>
				</entry>
				<entry name="EFI_ESRT"/>
				<entry name="EFI_VARS_PSTORE">
					<label>Register efivars backend for pstore</label>
					<help>Say Y here to enable use efivars as a backend to pstore. This
will allow writing console messages, crash dumps, or anything
else supported by pstore to EFI variables.</help>
				</entry>
				<entry name="EFI_VARS_PSTORE_DEFAULT_DISABLE">
					<label>Disable using efivars as a pstore backend by default</label>
					<help>Saying Y here will disable the use of efivars as a storage
backend for pstore by default. This setting can be overridden
using the efivars module's pstore_disable parameter.</help>
				</entry>
				<entry name="EFI_RUNTIME_MAP">
					<label>Export efi runtime maps to sysfs</label>
					<help>Export efi runtime memory maps to /sys/firmware/efi/runtime-map.
That memory map is used for example by kexec to set up efi virtual
mapping the 2nd kernel, but can also be used for debugging purposes.

See also Documentation/ABI/testing/sysfs-firmware-efi-runtime-map.</help>
				</entry>
				<entry name="EFI_FAKE_MEMMAP">
					<label>Enable EFI fake memory map</label>
					<help>Saying Y here will enable &quot;efi_fake_mem&quot; boot option.
By specifying this parameter, you can add arbitrary attribute
to specific memory range by updating original (firmware provided)
EFI memmap.
This is useful for debugging of EFI memmap related feature.
e.g. Address Range Mirroring feature.</help>
				</entry>
				<entry name="EFI_MAX_FAKE_MEM">
					<label>maximum allowable number of ranges in efi_fake_mem boot option</label>
					<help>Maximum allowable number of ranges in efi_fake_mem boot option.
Ranges can be set up to this value using comma-separated list.
The default value is 8.</help>
				</entry>
				<entry name="EFI_PARAMS_FROM_FDT">
					<help>Select this config option from the architecture Kconfig if
the EFI runtime support gets system table address, memory
map address, and other parameters from the device tree.</help>
				</entry>
				<entry name="EFI_RUNTIME_WRAPPERS"/>
				<entry name="EFI_ARMSTUB"/>
				<entry name="EFI_BOOTLOADER_CONTROL">
					<label>EFI Bootloader Control</label>
					<help>This module installs a reboot hook, such that if reboot() is
invoked with a string argument NNN, &quot;NNN&quot; is copied to the
&quot;LoaderEntryOneShot&quot; EFI variable, to be read by the
bootloader. If the string matches one of the boot labels
defined in its configuration, the bootloader will boot once
to that label. The &quot;LoaderEntryRebootReason&quot; EFI variable is
set with the reboot reason: &quot;reboot&quot; or &quot;shutdown&quot;. The
bootloader reads this reboot reason and takes particular
action according to its policy.</help>
				</entry>
				<entry name="EFI_CAPSULE_LOADER">
					<label>EFI capsule loader</label>
					<help>This option exposes a loader interface &quot;/dev/efi_capsule_loader&quot; for
users to load EFI capsules. This driver requires working runtime
capsule support in the firmware, which many OEMs do not provide.

Most users should say N.</help>
				</entry>
				<entry name="EFI_TEST">
					<label>EFI Runtime Service Tests Support</label>
					<help>This driver uses the efi.&lt;service&gt; function pointers directly instead
of going through the efivar API, because it is not trying to test the
kernel subsystem, just for testing the UEFI runtime service
interfaces which are provided by the firmware. This driver is used
by the Firmware Test Suite (FWTS) for testing the UEFI runtime
interfaces readiness of the firmware.
Details for FWTS are available from:
&lt;https://wiki.ubuntu.com/FirmwareTestSuite&gt;

Say Y here to enable the runtime services support via /dev/efi_test.
If unsure, say N.</help>
				</entry>
			</container>
			<entry name="UEFI_CPER"/>
		</container>
		<container name="File_systems">
			<label>File systems</label>
			<entry name="DCACHE_WORD_ACCESS"/>
			<entry name="FS_IOMAP"/>
			<entry name="EXT2_FS">
				<label>Second extended fs support</label>
				<help>Ext2 is a standard Linux file system for hard disks.

To compile this file system support as a module, choose M here: the
module will be called ext2.

If unsure, say Y.</help>
			</entry>
			<entry name="EXT2_FS_XATTR">
				<label>Ext2 extended attributes</label>
				<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).

If unsure, say N.</help>
			</entry>
			<entry name="EXT2_FS_POSIX_ACL">
				<label>Ext2 POSIX Access Control Lists</label>
				<help>Posix Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the Posix ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="EXT2_FS_SECURITY">
				<label>Ext2 Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the ext2 filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.
</help>
			</entry>
			<entry name="EXT3_FS">
				<label>The Extended 3 (ext3) filesystem</label>
				<help>This config option is here only for backward compatibility. ext3
filesystem is now handled by the ext4 driver.</help>
			</entry>
			<entry name="EXT3_FS_POSIX_ACL">
				<label>Ext3 POSIX Access Control Lists</label>
				<help>This config option is here only for backward compatibility. ext3
filesystem is now handled by the ext4 driver.</help>
			</entry>
			<entry name="EXT3_FS_SECURITY">
				<label>Ext3 Security Labels</label>
				<help>This config option is here only for backward compatibility. ext3
filesystem is now handled by the ext4 driver.</help>
			</entry>
			<entry name="EXT4_FS">
				<label>The Extended 4 (ext4) filesystem</label>
				<help>This is the next generation of the ext3 filesystem.

Unlike the change from ext2 filesystem to ext3 filesystem,
the on-disk format of ext4 is not forwards compatible with
ext3; it is based on extent maps and it supports 48-bit
physical block numbers.  The ext4 filesystem also supports delayed
allocation, persistent preallocation, high resolution time stamps,
and a number of other features to improve performance and speed
up fsck time.  For more information, please see the web pages at
http://ext4.wiki.kernel.org.

The ext4 filesystem supports mounting an ext3 filesystem; while there
are some performance gains from the delayed allocation and inode
table readahead, the best performance gains require enabling ext4
features in the filesystem using tune2fs, or formatting a new
filesystem as an ext4 filesystem initially. Without explicit enabling
of ext4 features, the on disk filesystem format stays fully backward
compatible.

To compile this file system support as a module, choose M here. The
module will be called ext4.

If unsure, say N.</help>
			</entry>
			<entry name="EXT4_USE_FOR_EXT2">
				<label>Use ext4 for ext2 file systems</label>
				<help>Allow the ext4 file system driver code to be used for ext2
file system mounts.  This allows users to reduce their
compiled kernel size by using one file system driver for
ext2, ext3, and ext4 file systems.</help>
			</entry>
			<entry name="EXT4_FS_POSIX_ACL">
				<label>Ext4 POSIX Access Control Lists</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="EXT4_FS_SECURITY">
				<label>Ext4 Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the ext4 filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.</help>
			</entry>
			<entry name="EXT4_ENCRYPTION">
				<label>Ext4 Encryption</label>
				<help>Enable encryption of ext4 files and directories.  This
feature is similar to ecryptfs, but it is more memory
efficient since it avoids caching the encrypted and
decrypted pages in the page cache.</help>
			</entry>
			<entry name="EXT4_FS_ENCRYPTION"/>
			<entry name="EXT4_DEBUG">
				<label>EXT4 debugging support</label>
				<help>Enables run-time debugging support for the ext4 filesystem.

If you select Y here, then you will be able to turn on debugging
with a command such as:
echo 1 &gt; /sys/module/ext4/parameters/mballoc_debug
</help>
			</entry>
			<entry name="JBD2">
				<help>This is a generic journaling layer for block devices that support
both 32-bit and 64-bit block numbers.  It is currently used by
the ext4 and OCFS2 filesystems, but it could also be used to add
journal support to other file systems or block devices such
as RAID or LVM.

If you are using ext4 or OCFS2, you need to say Y here.
If you are not using ext4 or OCFS2 then you will
probably want to say N.

To compile this device as a module, choose M here. The module will be
called jbd2.  If you are compiling ext4 or OCFS2 into the kernel,
you cannot compile this code as a module.</help>
			</entry>
			<entry name="JBD2_DEBUG">
				<label>JBD2 (ext4) debugging support</label>
				<help>If you are using the ext4 journaled file system (or
potentially any other filesystem/device using JBD2), this option
allows you to enable debugging output while the system is running,
in order to help track down any problems you are having.
By default, the debugging output will be turned off.

If you select Y here, then you will be able to turn on debugging
with &quot;echo N &gt; /sys/module/jbd2/parameters/jbd2_debug&quot;, where N is a
number between 1 and 5. The higher the number, the more debugging
output is generated.  To turn debugging off again, do
&quot;echo 0 &gt; /sys/module/jbd2/parameters/jbd2_debug&quot;.
</help>
			</entry>
			<entry name="FS_MBCACHE"/>
			<entry name="REISERFS_FS">
				<label>Reiserfs support</label>
				<help>Stores not just filenames but the files themselves in a balanced
tree.  Uses journalling.

Balanced trees are more efficient than traditional file system
architectural foundations.

In general, ReiserFS is as fast as ext2, but is very efficient with
large directories and small files.  Additional patches are needed
for NFS and quotas, please see
&lt;https://reiser4.wiki.kernel.org/index.php/Main_Page&gt; for links.

It is more easily extended to have features currently found in
database and keyword search systems than block allocation based file
systems are.  The next version will be so extended, and will support
plugins consistent with our motto ``It takes more than a license to
make source code open.''

Read &lt;https://reiser4.wiki.kernel.org/index.php/Main_Page&gt;
to learn more about reiserfs.

Sponsored by Threshold Networks, Emusic.com, and Bigstorage.com.

If you like it, you can pay us to add new features to it that you
need, buy a support contract, or pay us to port it to another OS.</help>
			</entry>
			<entry name="REISERFS_CHECK">
				<label>Enable reiserfs debug mode</label>
				<help>If you set this to Y, then ReiserFS will perform every check it can
possibly imagine of its internal consistency throughout its
operation.  It will also go substantially slower.  More than once we
have forgotten that this was on, and then gone despondent over the
latest benchmarks.:-) Use of this option allows our team to go all
out in checking for consistency when debugging without fear of its
effect on end users.  If you are on the verge of sending in a bug
report, say Y and you might get a useful error message.  Almost
everyone should say N.</help>
			</entry>
			<entry name="REISERFS_PROC_INFO">
				<label>Stats in /proc/fs/reiserfs</label>
				<help>Create under /proc/fs/reiserfs a hierarchy of files, displaying
various ReiserFS statistics and internal data at the expense of
making your kernel or module slightly larger (+8 KB). This also
increases the amount of kernel memory required for each mount.
Almost everyone but ReiserFS developers and people fine-tuning
reiserfs or tracing problems should say N.</help>
			</entry>
			<entry name="REISERFS_FS_XATTR">
				<label>ReiserFS extended attributes</label>
				<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).

If unsure, say N.</help>
			</entry>
			<entry name="REISERFS_FS_POSIX_ACL">
				<label>ReiserFS POSIX Access Control Lists</label>
				<help>Posix Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the Posix ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="REISERFS_FS_SECURITY">
				<label>ReiserFS Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the ReiserFS filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.
</help>
			</entry>
			<entry name="JFS_FS">
				<label>JFS filesystem support</label>
				<help>This is a port of IBM's Journaled Filesystem .  More information is
available in the file &lt;file:Documentation/filesystems/jfs.txt&gt;.

If you do not intend to use the JFS filesystem, say N.</help>
			</entry>
			<entry name="JFS_POSIX_ACL">
				<label>JFS POSIX Access Control Lists</label>
				<help>Posix Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the Posix ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="JFS_SECURITY">
				<label>JFS Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the jfs filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.</help>
			</entry>
			<entry name="JFS_DEBUG">
				<label>JFS debugging</label>
				<help>If you are experiencing any problems with the JFS filesystem, say
Y here.  This will result in additional debugging messages to be
written to the system log.  Under normal circumstances, this
results in very little overhead.</help>
			</entry>
			<entry name="JFS_STATISTICS">
				<label>JFS statistics</label>
				<help>Enabling this option will cause statistics from the JFS file system
to be made available to the user in the /proc/fs/jfs/ directory.
</help>
			</entry>
			<entry name="XFS_FS">
				<label>XFS filesystem support</label>
				<help>XFS is a high performance journaling filesystem which originated
on the SGI IRIX platform.  It is completely multi-threaded, can
support large files and large filesystems, extended attributes,
variable block sizes, is extent based, and makes extensive use of
Btrees (directories, extents, free space) to aid both performance
and scalability.

Refer to the documentation at &lt;http://oss.sgi.com/projects/xfs/&gt;
for complete details.  This implementation is on-disk compatible
with the IRIX version of XFS.

To compile this file system support as a module, choose M here: the
module will be called xfs.  Be aware, however, that if the file
system of your root partition is compiled as a module, you'll need
to use an initial ramdisk (initrd) to boot.</help>
			</entry>
			<entry name="XFS_QUOTA">
				<label>XFS Quota support</label>
				<help>If you say Y here, you will be able to set limits for disk usage on
a per user and/or a per group basis under XFS.  XFS considers quota
information as filesystem metadata and uses journaling to provide a
higher level guarantee of consistency.  The on-disk data format for
quota is also compatible with the IRIX version of XFS, allowing a
filesystem to be migrated between Linux and IRIX without any need
for conversion.

If unsure, say N.  More comprehensive documentation can be found in
README.quota in the xfsprogs package.  XFS quota can be used either
with or without the generic quota support enabled (CONFIG_QUOTA) -
they are completely independent subsystems.</help>
			</entry>
			<entry name="XFS_POSIX_ACL">
				<label>XFS POSIX ACL support</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N.</help>
			</entry>
			<entry name="XFS_RT">
				<label>XFS Realtime subvolume support</label>
				<help>If you say Y here you will be able to mount and use XFS filesystems
which contain a realtime subvolume.  The realtime subvolume is a
separate area of disk space where only file data is stored.  It was
originally designed to provide deterministic data rates suitable
for media streaming applications, but is also useful as a generic
mechanism for ensuring data and metadata/log I/Os are completely
separated.  Regular file I/Os are isolated to a separate device
from all other requests, and this can be done quite transparently
to applications via the inherit-realtime directory inode flag.

See the xfs man page in section 5 for additional information.

If unsure, say N.</help>
			</entry>
			<entry name="XFS_WARN">
				<label>XFS Verbose Warnings</label>
				<help>Say Y here to get an XFS build with many additional warnings.
It converts ASSERT checks to WARN, so will log any out-of-bounds
conditions that occur that would otherwise be missed. It is much
lighter weight than XFS_DEBUG and does not modify algorithms and will
not cause the kernel to panic on non-fatal errors.

However, similar to XFS_DEBUG, it is only advisable to use this if you
are debugging a particular problem.</help>
			</entry>
			<entry name="XFS_DEBUG">
				<label>XFS Debugging support</label>
				<help>Say Y here to get an XFS build with many debugging features,
including ASSERT checks, function wrappers around macros,
and extra sanity-checking functions in various code paths.

Note that the resulting code will be HUGE and SLOW, and probably
not useful unless you are debugging a particular problem.

Say N unless you are an XFS developer, or you play one on TV.
</help>
			</entry>
			<entry name="GFS2_FS">
				<label>GFS2 file system support</label>
				<help>A cluster filesystem.

Allows a cluster of computers to simultaneously use a block device
that is shared between them (with FC, iSCSI, NBD, etc...).  GFS reads
and writes to the block device like a local filesystem, but also uses
a lock module to allow the computers coordinate their I/O so
filesystem consistency is maintained.  One of the nifty features of
GFS is perfect consistency -- changes made to the filesystem on one
machine show up immediately on all other machines in the cluster.

To use the GFS2 filesystem in a cluster, you will need to enable
the locking module below. Documentation and utilities for GFS2 can
be found here: http://sources.redhat.com/cluster

The &quot;nolock&quot; lock module is now built in to GFS2 by default. If
you want to use the DLM, be sure to enable IPv4/6 networking.</help>
			</entry>
			<entry name="GFS2_FS_LOCKING_DLM">
				<label>GFS2 DLM locking</label>
				<help>Multiple node locking module for GFS2

Most users of GFS2 will require this. It provides the locking
interface between GFS2 and the DLM, which is required to use GFS2
in a cluster environment.
</help>
			</entry>
			<entry name="OCFS2_FS">
				<label>OCFS2 file system support</label>
				<help>OCFS2 is a general purpose extent based shared disk cluster file
system with many similarities to ext3. It supports 64 bit inode
numbers, and has automatically extending metadata groups which may
also make it attractive for non-clustered use.

You'll want to install the ocfs2-tools package in order to at least
get &quot;mount.ocfs2&quot;.

Project web page:    http://oss.oracle.com/projects/ocfs2
Tools web page:      http://oss.oracle.com/projects/ocfs2-tools
OCFS2 mailing lists: http://oss.oracle.com/projects/ocfs2/mailman/

For more information on OCFS2, see the file
&lt;file:Documentation/filesystems/ocfs2.txt&gt;.</help>
			</entry>
			<entry name="OCFS2_FS_O2CB">
				<label>O2CB Kernelspace Clustering</label>
				<help>OCFS2 includes a simple kernelspace clustering package, the OCFS2
Cluster Base.  It only requires a very small userspace component
to configure it. This comes with the standard ocfs2-tools package.
O2CB is limited to maintaining a cluster for OCFS2 file systems.
It cannot manage any other cluster applications.

It is always safe to say Y here, as the clustering method is
run-time selectable.</help>
			</entry>
			<entry name="OCFS2_FS_USERSPACE_CLUSTER">
				<label>OCFS2 Userspace Clustering</label>
				<help>This option will allow OCFS2 to use userspace clustering services
in conjunction with the DLM in fs/dlm.  If you are using a
userspace cluster manager, say Y here.

It is safe to say Y, as the clustering method is run-time
selectable.</help>
			</entry>
			<entry name="OCFS2_FS_STATS">
				<label>OCFS2 statistics</label>
				<help>This option allows some fs statistics to be captured. Enabling
this option may increase the memory consumption.</help>
			</entry>
			<entry name="OCFS2_DEBUG_MASKLOG">
				<label>OCFS2 logging support</label>
				<help>The ocfs2 filesystem has an extensive logging system.  The system
allows selection of events to log via files in /sys/o2cb/logmask/.
This option will enlarge your kernel, but it allows debugging of
ocfs2 filesystem issues.</help>
			</entry>
			<entry name="OCFS2_DEBUG_FS">
				<label>OCFS2 expensive checks</label>
				<help>This option will enable expensive consistency checks. Enable
this option for debugging only as it is likely to decrease
performance of the filesystem.
</help>
			</entry>
			<entry name="BTRFS_FS">
				<label>Btrfs filesystem support</label>
				<help>Btrfs is a general purpose copy-on-write filesystem with extents,
writable snapshotting, support for multiple devices and many more
features focused on fault tolerance, repair and easy administration.

The filesystem disk format is no longer unstable, and it's not
expected to change unless there are strong reasons to do so. If there
is a format change, file systems with a unchanged format will
continue to be mountable and usable by newer kernels.

For more information, please see the web pages at
http://btrfs.wiki.kernel.org.

To compile this file system support as a module, choose M here. The
module will be called btrfs.

If unsure, say N.</help>
			</entry>
			<entry name="BTRFS_FS_POSIX_ACL">
				<label>Btrfs POSIX Access Control Lists</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="BTRFS_FS_CHECK_INTEGRITY">
				<label>Btrfs with integrity check tool compiled in (DANGEROUS)</label>
				<help>Adds code that examines all block write requests (including
writes of the super block). The goal is to verify that the
state of the filesystem on disk is always consistent, i.e.,
after a power-loss or kernel panic event the filesystem is
in a consistent state.

If the integrity check tool is included and activated in
the mount options, plenty of kernel memory is used, and
plenty of additional CPU cycles are spent. Enabling this
functionality is not intended for normal use.

In most cases, unless you are a btrfs developer who needs
to verify the integrity of (super)-block write requests
during the run of a regression test, say N</help>
			</entry>
			<entry name="BTRFS_FS_RUN_SANITY_TESTS">
				<label>Btrfs will run sanity tests upon loading</label>
				<help>This will run some basic sanity tests on the free space cache
code to make sure it is acting as it should.  These are mostly
regression tests and are only really interesting to btrfs
developers.

If unsure, say N.</help>
			</entry>
			<entry name="BTRFS_DEBUG">
				<label>Btrfs debugging support</label>
				<help>Enable run-time debugging support for the btrfs filesystem. This may
enable additional and expensive checks with negative impact on
performance, or export extra information via sysfs.

If unsure, say N.</help>
			</entry>
			<entry name="BTRFS_ASSERT">
				<label>Btrfs assert support</label>
				<help>Enable run-time assertion checking.  This will result in panics if
any of the assertions trip.  This is meant for btrfs developers only.

If unsure, say N.
</help>
			</entry>
			<entry name="NILFS2_FS">
				<label>NILFS2 file system support</label>
				<help>NILFS2 is a log-structured file system (LFS) supporting continuous
snapshotting.  In addition to versioning capability of the entire
file system, users can even restore files mistakenly overwritten or
destroyed just a few seconds ago.  Since this file system can keep
consistency like conventional LFS, it achieves quick recovery after
system crashes.

NILFS2 creates a number of checkpoints every few seconds or per
synchronous write basis (unless there is no change).  Users can
select significant versions among continuously created checkpoints,
and can change them into snapshots which will be preserved for long
periods until they are changed back to checkpoints.  Each
snapshot is mountable as a read-only file system concurrently with
its writable mount, and this feature is convenient for online backup.

Some features including atime, extended attributes, and POSIX ACLs,
are not supported yet.

To compile this file system support as a module, choose M here: the
module will be called nilfs2.  If unsure, say N.
</help>
			</entry>
			<entry name="F2FS_FS">
				<label>F2FS filesystem support</label>
				<help>F2FS is based on Log-structured File System (LFS), which supports
versatile &quot;flash-friendly&quot; features. The design has been focused on
addressing the fundamental issues in LFS, which are snowball effect
of wandering tree and high cleaning overhead.

Since flash-based storages show different characteristics according to
the internal geometry or flash memory management schemes aka FTL, F2FS
and tools support various parameters not only for configuring on-disk
layout, but also for selecting allocation and cleaning algorithms.

If unsure, say N.</help>
			</entry>
			<entry name="F2FS_STAT_FS">
				<label>F2FS Status Information</label>
				<help>/sys/kernel/debug/f2fs/ contains information about all the partitions
mounted as f2fs. Each file shows the whole f2fs information.

/sys/kernel/debug/f2fs/status includes:
- major filesystem information managed by f2fs currently
- average SIT information about whole segments
- current memory footprint consumed by f2fs.</help>
			</entry>
			<entry name="F2FS_FS_XATTR">
				<label>F2FS extended attributes</label>
				<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).

If unsure, say N.</help>
			</entry>
			<entry name="F2FS_FS_POSIX_ACL">
				<label>F2FS Access Control Lists</label>
				<help>Posix Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="F2FS_FS_SECURITY">
				<label>F2FS Security Labels</label>
				<help>Security labels provide an access control facility to support Linux
Security Models (LSMs) accepted by AppArmor, SELinux, Smack and TOMOYO
Linux. This option enables an extended attribute handler for file
security labels in the f2fs filesystem, so that it requires enabling
the extended attribute support in advance.

If you are not using a security module, say N.</help>
			</entry>
			<entry name="F2FS_CHECK_FS">
				<label>F2FS consistency checking feature</label>
				<help>Enables BUG_ONs which check the filesystem consistency in runtime.

If you want to improve the performance, say N.</help>
			</entry>
			<entry name="F2FS_FS_ENCRYPTION">
				<label>F2FS Encryption</label>
				<help>Enable encryption of f2fs files and directories.  This
feature is similar to ecryptfs, but it is more memory
efficient since it avoids caching the encrypted and
decrypted pages in the page cache.</help>
			</entry>
			<entry name="F2FS_IO_TRACE">
				<label>F2FS IO tracer</label>
				<help>F2FS IO trace is based on a function trace, which gathers process
information and block IO patterns in the filesystem level.

If unsure, say N.</help>
			</entry>
			<entry name="F2FS_FAULT_INJECTION">
				<label>F2FS fault injection facility</label>
				<help>Test F2FS to inject faults such as ENOMEM, ENOSPC, and so on.

If unsure, say N.
</help>
			</entry>
			<entry name="FS_DAX">
				<label>Direct Access (DAX) support</label>
				<help>Direct Access (DAX) can be used on memory-backed block devices.
If the block device supports DAX and the filesystem supports DAX,
then you can avoid using the pagecache to buffer I/Os.  Turning
on this option will compile in support for DAX; you will need to
mount the filesystem using the -o dax option.

If you do not have a block device that is capable of using this,
or if unsure, say N.  Saying Y will increase the size of the kernel
by about 5kB.</help>
			</entry>
			<entry name="FS_DAX_PMD"/>
			<entry name="FS_POSIX_ACL"/>
			<entry name="EXPORTFS"/>
			<entry name="EXPORTFS_BLOCK_OPS">
				<label>Enable filesystem export operations for block IO</label>
				<help>This option enables the export operations for a filesystem to support
external block IO.</help>
			</entry>
			<entry name="FILE_LOCKING">
				<label>Enable POSIX file locking API&quot; if EXPERT</label>
				<help>This option enables standard file locking support, required
for filesystems like NFS and for the flock() system
call. Disabling this option saves about 11k.</help>
			</entry>
			<entry name="MANDATORY_FILE_LOCKING">
				<label>Enable Mandatory file locking</label>
				<help>This option enables files appropriately marked files on appropriely
mounted filesystems to support mandatory locking.

To the best of my knowledge this is dead code that no one cares about.</help>
			</entry>
			<entry name="FS_ENCRYPTION">
				<label>FS Encryption (Per-file encryption)</label>
				<help>Enable encryption of files and directories.  This
feature is similar to ecryptfs, but it is more memory
efficient since it avoids caching the encrypted and
decrypted pages in the page cache.
</help>
			</entry>
			<entry name="FSNOTIFY"/>
			<entry name="DNOTIFY">
				<label>Dnotify support</label>
				<help>Dnotify is a directory-based per-fd file change notification system
that uses signals to communicate events to user-space.  There exist
superior alternatives, but some applications may still rely on
dnotify.

If unsure, say Y.
</help>
			</entry>
			<entry name="INOTIFY_USER">
				<label>Inotify support for userspace</label>
				<help>Say Y here to enable inotify support for userspace, including the
associated system calls.  Inotify allows monitoring of both files and
directories via a single open fd.  Events are read from the file
descriptor, which is also select()- and poll()-able.
Inotify fixes numerous shortcomings in dnotify and introduces several
new features including multiple file events, one-shot support, and
unmount notification.

For more information, see &lt;file:Documentation/filesystems/inotify.txt&gt;

If unsure, say Y.
</help>
			</entry>
			<entry name="FANOTIFY">
				<label>Filesystem wide access notification</label>
				<help>Say Y here to enable fanotify support.  fanotify is a file access
notification system which differs from inotify in that it sends
an open file descriptor to the userspace listener along with
the event.

If unsure, say Y.</help>
			</entry>
			<entry name="FANOTIFY_ACCESS_PERMISSIONS">
				<label>fanotify permissions checking</label>
				<help>Say Y here is you want fanotify listeners to be able to make permissions
decisions concerning filesystem events.  This is used by some fanotify
listeners which need to scan files before allowing the system access to
use those files.  This is used by some anti-malware vendors and by some
hierarchical storage managent systems.

If unsure, say N.
</help>
			</entry>
			<entry name="QUOTA">
				<label>Quota support</label>
				<help>If you say Y here, you will be able to set per user limits for disk
usage (also called disk quotas). Currently, it works for the
ext2, ext3, ext4, jfs, ocfs2 and reiserfs file systems.
Note that gfs2 and xfs use their own quota system.
Ext3, ext4 and reiserfs also support journaled quotas for which
you don't need to run quotacheck(8) after an unclean shutdown.
For further details, read the Quota mini-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, or the documentation provided
with the quota tools. Probably the quota support is only useful for
multi user systems. If unsure, say N.</help>
			</entry>
			<entry name="QUOTA_NETLINK_INTERFACE">
				<label>Report quota messages through netlink interface</label>
				<help>If you say Y here, quota warnings (about exceeding softlimit, reaching
hardlimit, etc.) will be reported through netlink interface. If unsure,
say Y.</help>
			</entry>
			<entry name="PRINT_QUOTA_WARNING">
				<label>Print quota warnings to console (OBSOLETE)</label>
				<help>If you say Y here, quota warnings (about exceeding softlimit, reaching
hardlimit, etc.) will be printed to the process' controlling terminal.
Note that this behavior is currently deprecated and may go away in
future. Please use notification via netlink socket instead.</help>
			</entry>
			<entry name="QUOTA_DEBUG">
				<label>Additional quota sanity checks</label>
				<help>If you say Y here, quota subsystem will perform some additional
sanity checks of quota internal structures. If unsure, say N.</help>
			</entry>
			<entry name="QUOTA_TREE"/>
			<entry name="QFMT_V1">
				<label>Old quota format support</label>
				<help>This quota format was (is) used by kernels earlier than 2.4.22. If
you have quota working and you don't want to convert to new quota
format say Y here.</help>
			</entry>
			<entry name="QFMT_V2">
				<label>Quota format vfsv0 and vfsv1 support</label>
				<help>This config option enables kernel support for vfsv0 and vfsv1 quota
formats. Both these formats support 32-bit UIDs/GIDs and vfsv1 format
also supports 64-bit inode and block quota limits. If you need this
functionality say Y here.</help>
			</entry>
			<entry name="QUOTACTL"/>
			<entry name="QUOTACTL_COMPAT"/>
			<entry name="AUTOFS4_FS">
				<label>Kernel automounter version 4 support (also supports v3)</label>
				<help>The automounter is a tool to automatically mount remote file systems
on demand. This implementation is partially kernel-based to reduce
overhead in the already-mounted case; this is unlike the BSD
automounter (amd), which is a pure user space daemon.

To use the automounter you need the user-space tools from
&lt;ftp://ftp.kernel.org/pub/linux/daemons/autofs/v4/&gt;; you also
want to answer Y to &quot;NFS file system support&quot;, below.

To compile this support as a module, choose M here: the module will be
called autofs4.  You will need to add &quot;alias autofs autofs4&quot; to your
modules configuration file.

If you are not a part of a fairly large, distributed network or
don't have a laptop which needs to dynamically reconfigure to the
local network, you probably do not need an automounter, and can say
N here.
</help>
			</entry>
			<entry name="FUSE_FS">
				<label>FUSE (Filesystem in Userspace) support</label>
				<help>With FUSE it is possible to implement a fully functional filesystem
in a userspace program.

There's also a companion library: libfuse2.  This library is available
from the FUSE homepage:
&lt;http://fuse.sourceforge.net/&gt;
although chances are your distribution already has that library
installed if you've installed the &quot;fuse&quot; package itself.

See &lt;file:Documentation/filesystems/fuse.txt&gt; for more information.
See &lt;file:Documentation/Changes&gt; for needed library/utility version.

If you want to develop a userspace FS, or if you want to use
a filesystem based on FUSE, answer Y or M.</help>
			</entry>
			<entry name="CUSE">
				<label>Character device in Userspace support</label>
				<help>This FUSE extension allows character devices to be
implemented in userspace.

If you want to develop or use a userspace character device
based on CUSE, answer Y or M.
</help>
			</entry>
			<entry name="OVERLAY_FS">
				<label>Overlay filesystem support</label>
				<help>An overlay filesystem combines two filesystems - an 'upper' filesystem
and a 'lower' filesystem.  When a name exists in both filesystems, the
object in the 'upper' filesystem is visible while the object in the
'lower' filesystem is either hidden or, in the case of directories,
merged with the 'upper' object.

For more information see Documentation/filesystems/overlayfs.txt
</help>
			</entry>
			<container name="Caches">
				<label>Caches</label>
				<entry name="FSCACHE">
					<label>General filesystem local caching manager</label>
					<help>This option enables a generic filesystem caching manager that can be
used by various network and other filesystems to cache data locally.
Different sorts of caches can be plugged in, depending on the
resources available.

See Documentation/filesystems/caching/fscache.txt for more information.</help>
				</entry>
				<entry name="FSCACHE_STATS">
					<label>Gather statistical information on local caching</label>
					<help>This option causes statistical information to be gathered on local
caching and exported through file:

/proc/fs/fscache/stats

The gathering of statistics adds a certain amount of overhead to
execution as there are a quite a few stats gathered, and on a
multi-CPU system these may be on cachelines that keep bouncing
between CPUs.  On the other hand, the stats are very useful for
debugging purposes.  Saying 'Y' here is recommended.

See Documentation/filesystems/caching/fscache.txt for more information.</help>
				</entry>
				<entry name="FSCACHE_HISTOGRAM">
					<label>Gather latency information on local caching</label>
					<help>This option causes latency information to be gathered on local
caching and exported through file:

/proc/fs/fscache/histogram

The generation of this histogram adds a certain amount of overhead to
execution as there are a number of points at which data is gathered,
and on a multi-CPU system these may be on cachelines that keep
bouncing between CPUs.  On the other hand, the histogram may be
useful for debugging purposes.  Saying 'N' here is recommended.

See Documentation/filesystems/caching/fscache.txt for more information.</help>
				</entry>
				<entry name="FSCACHE_DEBUG">
					<label>Debug FS-Cache</label>
					<help>This permits debugging to be dynamically enabled in the local caching
management module.  If this is set, the debugging output may be
enabled by setting bits in /sys/modules/fscache/parameter/debug.

See Documentation/filesystems/caching/fscache.txt for more information.</help>
				</entry>
				<entry name="FSCACHE_OBJECT_LIST">
					<label>Maintain global object list for debugging purposes</label>
					<help>Maintain a global list of active fscache objects that can be
retrieved through /proc/fs/fscache/objects for debugging purposes
</help>
				</entry>
				<entry name="CACHEFILES">
					<label>Filesystem caching on files</label>
					<help>This permits use of a mounted filesystem as a cache for other
filesystems - primarily networking filesystems - thus allowing fast
local disk to enhance the speed of slower devices.

See Documentation/filesystems/caching/cachefiles.txt for more
information.</help>
				</entry>
				<entry name="CACHEFILES_DEBUG">
					<label>Debug CacheFiles</label>
					<help>This permits debugging to be dynamically enabled in the filesystem
caching on files module.  If this is set, the debugging output may be
enabled by setting bits in /sys/modules/cachefiles/parameter/debug or
by including a debugging specifier in /etc/cachefilesd.conf.</help>
				</entry>
				<entry name="CACHEFILES_HISTOGRAM">
					<label>Gather latency information on CacheFiles</label>
					<help>
This option causes latency information to be gathered on CacheFiles
operation and exported through file:

/proc/fs/cachefiles/histogram

The generation of this histogram adds a certain amount of overhead to
execution as there are a number of points at which data is gathered,
and on a multi-CPU system these may be on cachelines that keep
bouncing between CPUs.  On the other hand, the histogram may be
useful for debugging purposes.  Saying 'N' here is recommended.

See Documentation/filesystems/caching/cachefiles.txt for more
information.
</help>
				</entry>
			</container>
			<container name="CD_ROM_DVD_Filesystems">
				<label>CD-ROM/DVD Filesystems</label>
				<entry name="ISO9660_FS">
					<label>ISO 9660 CDROM file system support</label>
					<help>This is the standard file system used on CD-ROMs.  It was previously
known as &quot;High Sierra File System&quot; and is called &quot;hsfs&quot; on other
Unix systems.  The so-called Rock-Ridge extensions which allow for
long Unix filenames and symbolic links are also supported by this
driver.  If you have a CD-ROM drive and want to do more with it than
just listen to audio CDs and watch its LEDs, say Y (and read
&lt;file:Documentation/filesystems/isofs.txt&gt; and the CD-ROM-HOWTO,
available from &lt;http://www.tldp.org/docs.html#howto&gt;), thereby
enlarging your kernel by about 27 KB; otherwise say N.

To compile this file system support as a module, choose M here: the
module will be called isofs.</help>
				</entry>
				<entry name="JOLIET">
					<label>Microsoft Joliet CDROM extensions</label>
					<help>Joliet is a Microsoft extension for the ISO 9660 CD-ROM file system
which allows for long filenames in unicode format (unicode is the
new 16 bit character code, successor to ASCII, which encodes the
characters of almost all languages of the world; see
&lt;http://www.unicode.org/&gt; for more information).  Say Y here if you
want to be able to read Joliet CD-ROMs under Linux.</help>
				</entry>
				<entry name="ZISOFS">
					<label>Transparent decompression extension</label>
					<help>This is a Linux-specific extension to RockRidge which lets you store
data in compressed form on a CD-ROM and have it transparently
decompressed when the CD-ROM is accessed.  See
&lt;http://www.kernel.org/pub/linux/utils/fs/zisofs/&gt; for the tools
necessary to create such a filesystem.  Say Y here if you want to be
able to read such compressed CD-ROMs.
</help>
				</entry>
				<entry name="UDF_FS">
					<label>UDF file system support</label>
					<help>This is a file system used on some CD-ROMs and DVDs. Since the
file system is supported by multiple operating systems and is more
compatible with standard unix file systems, it is also suitable for
removable USB disks. Say Y if you intend to mount DVD discs or CDRW's
written in packet mode, or if you want to use UDF for removable USB
disks. Please read &lt;file:Documentation/filesystems/udf.txt&gt;.

To compile this file system support as a module, choose M here: the
module will be called udf.

If unsure, say N.</help>
				</entry>
				<entry name="UDF_NLS"/>
			</container>
			<container name="DOS_FAT_NT_Filesystems">
				<label>DOS/FAT/NT Filesystems</label>
				<entry name="FAT_FS">
					<help>If you want to use one of the FAT-based file systems (the MS-DOS and
VFAT (Windows 95) file systems), then you must say Y or M here
to include FAT support. You will then be able to mount partitions or
diskettes with FAT-based file systems and transparently access the
files on them, i.e. MSDOS files will look and behave just like all
other Unix files.

This FAT support is not a file system in itself, it only provides
the foundation for the other file systems. You will have to say Y or
M to at least one of &quot;MSDOS fs support&quot; or &quot;VFAT fs support&quot; in
order to make use of it.

Another way to read and write MSDOS floppies and hard drive
partitions from within Linux (but not transparently) is with the
mtools (&quot;man mtools&quot;) program suite. You don't need to say Y here in
order to do that.

If you need to move large files on floppies between a DOS and a
Linux box, say Y here, mount the floppy under Linux with an MSDOS
file system and use GNU tar's M option. GNU tar is a program
available for Unix and DOS (&quot;man tar&quot; or &quot;info tar&quot;).

The FAT support will enlarge your kernel by about 37 KB. If unsure,
say Y.

To compile this as a module, choose M here: the module will be called
fat.  Note that if you compile the FAT support as a module, you
cannot compile any of the FAT-based file systems into the kernel
-- they will have to be modules as well.</help>
				</entry>
				<entry name="MSDOS_FS">
					<label>MSDOS fs support</label>
					<help>This allows you to mount MSDOS partitions of your hard drive (unless
they are compressed; to access compressed MSDOS partitions under
Linux, you can either use the DOS emulator DOSEMU, described in the
DOSEMU-HOWTO, available from
&lt;http://www.tldp.org/docs.html#howto&gt;, or try dmsdosfs in
&lt;ftp://ibiblio.org/pub/Linux/system/filesystems/dosfs/&gt;. If you
intend to use dosemu with a non-compressed MSDOS partition, say Y
here) and MSDOS floppies. This means that file access becomes
transparent, i.e. the MSDOS files look and behave just like all
other Unix files.

If you have Windows 95 or Windows NT installed on your MSDOS
partitions, you should use the VFAT file system (say Y to &quot;VFAT fs
support&quot; below), or you will not be able to see the long filenames
generated by Windows 95 / Windows NT.

This option will enlarge your kernel by about 7 KB. If unsure,
answer Y. This will only work if you said Y to &quot;DOS FAT fs support&quot;
as well. To compile this as a module, choose M here: the module will
be called msdos.</help>
				</entry>
				<entry name="VFAT_FS">
					<label>VFAT (Windows-95) fs support</label>
					<help>This option provides support for normal Windows file systems with
long filenames.  That includes non-compressed FAT-based file systems
used by Windows 95, Windows 98, Windows NT 4.0, and the Unix
programs from the mtools package.

The VFAT support enlarges your kernel by about 10 KB and it only
works if you said Y to the &quot;DOS FAT fs support&quot; above.  Please read
the file &lt;file:Documentation/filesystems/vfat.txt&gt; for details.  If
unsure, say Y.

To compile this as a module, choose M here: the module will be called
vfat.</help>
				</entry>
				<entry name="FAT_DEFAULT_CODEPAGE">
					<label>Default codepage for FAT</label>
					<help>This option should be set to the codepage of your FAT filesystems.
It can be overridden with the &quot;codepage&quot; mount option.
See &lt;file:Documentation/filesystems/vfat.txt&gt; for more information.</help>
				</entry>
				<entry name="FAT_DEFAULT_IOCHARSET">
					<label>Default iocharset for FAT</label>
					<help>Set this to the default input/output character set you'd
like FAT to use. It should probably match the character set
that most of your FAT filesystems use, and can be overridden
with the &quot;iocharset&quot; mount option for FAT filesystems.
Note that &quot;utf8&quot; is not recommended for FAT filesystems.
If unsure, you shouldn't set &quot;utf8&quot; here - select the next option
instead if you would like to use UTF-8 encoded file names by default.
See &lt;file:Documentation/filesystems/vfat.txt&gt; for more information.

Enable any character sets you need in File Systems/Native Language
Support.</help>
				</entry>
				<entry name="FAT_DEFAULT_UTF8">
					<label>Enable FAT UTF-8 option by default</label>
					<help>Set this if you would like to have &quot;utf8&quot; mount option set
by default when mounting FAT filesystems.

Even if you say Y here can always disable UTF-8 for
particular mount by adding &quot;utf8=0&quot; to mount options.

Say Y if you use UTF-8 encoding for file names, N otherwise.

See &lt;file:Documentation/filesystems/vfat.txt&gt; for more information.
</help>
				</entry>
				<entry name="NTFS_FS">
					<label>NTFS file system support</label>
					<help>NTFS is the file system of Microsoft Windows NT, 2000, XP and 2003.

Saying Y or M here enables read support.  There is partial, but
safe, write support available.  For write support you must also
say Y to &quot;NTFS write support&quot; below.

There are also a number of user-space tools available, called
ntfsprogs.  These include ntfsundelete and ntfsresize, that work
without NTFS support enabled in the kernel.

This is a rewrite from scratch of Linux NTFS support and replaced
the old NTFS code starting with Linux 2.5.11.  A backport to
the Linux 2.4 kernel series is separately available as a patch
from the project web site.

For more information see &lt;file:Documentation/filesystems/ntfs.txt&gt;
and &lt;http://www.linux-ntfs.org/&gt;.

To compile this file system support as a module, choose M here: the
module will be called ntfs.

If you are not using Windows NT, 2000, XP or 2003 in addition to
Linux on your computer it is safe to say N.</help>
				</entry>
				<entry name="NTFS_DEBUG">
					<label>NTFS debugging support</label>
					<help>If you are experiencing any problems with the NTFS file system, say
Y here.  This will result in additional consistency checks to be
performed by the driver as well as additional debugging messages to
be written to the system log.  Note that debugging messages are
disabled by default.  To enable them, supply the option debug_msgs=1
at the kernel command line when booting the kernel or as an option
to insmod when loading the ntfs module.  Once the driver is active,
you can enable debugging messages by doing (as root):
echo 1 &gt; /proc/sys/fs/ntfs-debug
Replacing the &quot;1&quot; with &quot;0&quot; would disable debug messages.

If you leave debugging messages disabled, this results in little
overhead, but enabling debug messages results in very significant
slowdown of the system.

When reporting bugs, please try to have available a full dump of
debugging messages while the misbehaviour was occurring.</help>
				</entry>
				<entry name="NTFS_RW">
					<label>NTFS write support</label>
					<help>This enables the partial, but safe, write support in the NTFS driver.

The only supported operation is overwriting existing files, without
changing the file length.  No file or directory creation, deletion or
renaming is possible.  Note only non-resident files can be written to
so you may find that some very small files (&lt;500 bytes or so) cannot
be written to.

While we cannot guarantee that it will not damage any data, we have
so far not received a single report where the driver would have
damaged someones data so we assume it is perfectly safe to use.

Note:  While write support is safe in this version (a rewrite from
scratch of the NTFS support), it should be noted that the old NTFS
write support, included in Linux 2.5.10 and before (since 1997),
is not safe.

This is currently useful with TopologiLinux.  TopologiLinux is run
on top of any DOS/Microsoft Windows system without partitioning your
hard disk.  Unlike other Linux distributions TopologiLinux does not
need its own partition.  For more information see
&lt;http://topologi-linux.sourceforge.net/&gt;

It is perfectly safe to say N here.
</help>
				</entry>
			</container>
			<container name="Pseudo_filesystems">
				<label>Pseudo filesystems</label>
				<entry name="PROC_FS">
					<label>/proc file system support&quot; if EXPERT</label>
					<help>This is a virtual file system providing information about the status
of the system. &quot;Virtual&quot; means that it doesn't take up any space on
your hard disk: the files are created on the fly by the kernel when
you try to access them. Also, you cannot read the files with older
version of the program less: you need to use more or cat.

It's totally cool; for example, &quot;cat /proc/interrupts&quot; gives
information about what the different IRQs are used for at the moment
(there is a small number of Interrupt ReQuest lines in your computer
that are used by the attached devices to gain the CPU's attention --
often a source of trouble if two devices are mistakenly configured
to use the same IRQ). The program procinfo to display some
information about your system gathered from the /proc file system.

Before you can use the /proc file system, it has to be mounted,
meaning it has to be given a location in the directory hierarchy.
That location should be /proc. A command such as &quot;mount -t proc proc
/proc&quot; or the equivalent line in /etc/fstab does the job.

The /proc file system is explained in the file
&lt;file:Documentation/filesystems/proc.txt&gt; and on the proc(5) manpage
(&quot;man 5 proc&quot;).

This option will enlarge your kernel by about 67 KB. Several
programs depend on this, so everyone should say Y here.</help>
				</entry>
				<entry name="PROC_KCORE">
					<label>/proc/kcore support&quot; if !ARM</label>
					<help>Provides a virtual ELF core file of the live kernel.  This can
be read with gdb and other ELF tools.  No modifications can be
made using this mechanism.</help>
				</entry>
				<entry name="PROC_VMCORE">
					<label>/proc/vmcore support</label>
					<help>Exports the dump image of crashed kernel in ELF format.</help>
				</entry>
				<entry name="PROC_SYSCTL">
					<label>Sysctl support (/proc/sys)&quot; if EXPERT</label>
					<help>The sysctl interface provides a means of dynamically changing
certain kernel parameters and variables on the fly without requiring
a recompile of the kernel or reboot of the system.  The primary
interface is through /proc/sys.  If you say Y here a tree of
modifiable sysctl entries will be generated beneath the
/proc/sys directory. They are explained in the files
in &lt;file:Documentation/sysctl/&gt;.  Note that enabling this
option will enlarge the kernel by at least 8 KB.

As it is generally a good thing, you should say Y here unless
building a kernel for install/rescue disks or your system is very
limited in memory.</help>
				</entry>
				<entry name="PROC_PAGE_MONITOR">
					<label>Enable /proc page monitoring&quot; if EXPERT</label>
					<help>Various /proc files exist to monitor process memory utilization:
/proc/pid/smaps, /proc/pid/clear_refs, /proc/pid/pagemap,
/proc/kpagecount, and /proc/kpageflags. Disabling these
interfaces will reduce the size of the kernel by approximately 4kb.</help>
				</entry>
				<entry name="PROC_CHILDREN">
					<label>Include /proc/&lt;pid&gt;/task/&lt;tid&gt;/children file</label>
					<help>Provides a fast way to retrieve first level children pids of a task. See
&lt;file:Documentation/filesystems/proc.txt&gt; for more information.

Say Y if you are running any user-space software which takes benefit from
this interface. For example, rkt is such a piece of software.
</help>
				</entry>
				<entry name="KERNFS"/>
				<entry name="SYSFS">
					<label>sysfs file system support&quot; if EXPERT</label>
					<help>The sysfs filesystem is a virtual filesystem that the kernel uses to
export internal kernel objects, their attributes, and their
relationships to one another.

Users can use sysfs to ascertain useful information about the running
kernel, such as the devices the kernel has discovered on each bus and
which driver each is bound to. sysfs can also be used to tune devices
and other kernel subsystems.

Some system agents rely on the information in sysfs to operate.
/sbin/hotplug uses device and object attributes in sysfs to assist in
delegating policy decisions, like persistently naming devices.

sysfs is currently used by the block subsystem to mount the root
partition.  If sysfs is disabled you must specify the boot device on
the kernel boot command line via its major and minor numbers.  For
example, &quot;root=03:01&quot; for /dev/hda1.

Designers of embedded systems may wish to say N here to conserve space.
</help>
				</entry>
				<entry name="TMPFS">
					<label>Tmpfs virtual memory file system support (former shm fs)</label>
					<help>Tmpfs is a file system which keeps all files in virtual memory.

Everything in tmpfs is temporary in the sense that no files will be
created on your hard drive. The files live in memory and swap
space. If you unmount a tmpfs instance, everything stored therein is
lost.

See &lt;file:Documentation/filesystems/tmpfs.txt&gt; for details.</help>
				</entry>
				<entry name="TMPFS_POSIX_ACL">
					<label>Tmpfs POSIX Access Control Lists</label>
					<help>POSIX Access Control Lists (ACLs) support additional access rights
for users and groups beyond the standard owner/group/world scheme,
and this option selects support for ACLs specifically for tmpfs
filesystems.

If you've selected TMPFS, it's possible that you'll also need
this option as there are a number of Linux distros that require
POSIX ACL support under /dev for certain features to work properly.
For example, some distros need this feature for ALSA-related /dev
files for sound to work properly.  In short, if you're not sure,
say Y.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.</help>
				</entry>
				<entry name="TMPFS_XATTR">
					<label>Tmpfs extended attributes</label>
					<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).

Currently this enables support for the trusted.* and
security.* namespaces.

You need this for POSIX ACL support on tmpfs.

If unsure, say N.</help>
				</entry>
				<entry name="HUGETLBFS">
					<label>HugeTLB file system support</label>
					<help>hugetlbfs is a filesystem backing for HugeTLB pages, based on
ramfs. For architectures that support it, say Y here and read
&lt;file:Documentation/vm/hugetlbpage.txt&gt; for details.

If unsure, say N.</help>
				</entry>
				<entry name="HUGETLB_PAGE"/>
				<entry name="CONFIGFS_FS">
					<label>Userspace-driven configuration filesystem</label>
					<help>configfs is a RAM-based filesystem that provides the converse
of sysfs's functionality. Where sysfs is a filesystem-based
view of kernel objects, configfs is a filesystem-based manager
of kernel objects, or config_items.

Both sysfs and configfs can and should exist together on the
same system. One is not a replacement for the other.
</help>
				</entry>
				<entry name="EFIVAR_FS">
					<label>EFI Variable filesystem</label>
					<help>efivarfs is a replacement filesystem for the old EFI
variable support via sysfs, as it doesn't suffer from the
same 1024-byte variable size limit.

To compile this file system support as a module, choose M
here. The module will be called efivarfs.

If unsure, say N.
</help>
				</entry>
			</container>
			<entry name="MISC_FILESYSTEMS">
				<label>Miscellaneous filesystems</label>
				<help>Say Y here to get to see options for various miscellaneous
filesystems, such as filesystems that came from other
operating systems.

This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and
disabled; if unsure, say Y here.</help>
			</entry>
			<entry name="ORANGEFS_FS">
				<label>ORANGEFS (Powered by PVFS) support</label>
				<help>Orange is a parallel file system designed for use on high end
computing (HEC) systems.
</help>
			</entry>
			<entry name="ADFS_FS">
				<label>ADFS file system support</label>
				<help>The Acorn Disc Filing System is the standard file system of the
RiscOS operating system which runs on Acorn's ARM-based Risc PC
systems and the Acorn Archimedes range of machines. If you say Y
here, Linux will be able to read from ADFS partitions on hard drives
and from ADFS-formatted floppy discs. If you also want to be able to
write to those devices, say Y to &quot;ADFS write support&quot; below.

The ADFS partition should be the first partition (i.e.,
/dev/[hs]d?1) on each of your drives. Please read the file
&lt;file:Documentation/filesystems/adfs.txt&gt; for further details.

To compile this code as a module, choose M here: the module will be
called adfs.

If unsure, say N.</help>
			</entry>
			<entry name="ADFS_FS_RW">
				<label>ADFS write support (DANGEROUS)</label>
				<help>If you say Y here, you will be able to write to ADFS partitions on
hard drives and ADFS-formatted floppy disks. This is experimental
codes, so if you're unsure, say N.
</help>
			</entry>
			<entry name="AFFS_FS">
				<label>Amiga FFS file system support</label>
				<help>The Fast File System (FFS) is the common file system used on hard
disks by Amiga(tm) systems since AmigaOS Version 1.3 (34.20).  Say Y
if you want to be able to read and write files from and to an Amiga
FFS partition on your hard drive.  Amiga floppies however cannot be
read with this driver due to an incompatibility of the floppy
controller used in an Amiga and the standard floppy controller in
PCs and workstations. Read &lt;file:Documentation/filesystems/affs.txt&gt;
and &lt;file:fs/affs/Changes&gt;.

With this driver you can also mount disk files used by Bernd
Schmidt's Un*X Amiga Emulator
(&lt;http://www.freiburg.linux.de/~uae/&gt;).
If you want to do this, you will also need to say Y or M to &quot;Loop
device support&quot;, above.

To compile this file system support as a module, choose M here: the
module will be called affs.  If unsure, say N.
</help>
			</entry>
			<entry name="ECRYPT_FS">
				<label>eCrypt filesystem layer support</label>
				<help>Encrypted filesystem that operates on the VFS layer.  See
&lt;file:Documentation/filesystems/ecryptfs.txt&gt; to learn more about
eCryptfs.  Userspace components are required and can be
obtained from &lt;http://ecryptfs.sf.net&gt;.

To compile this file system support as a module, choose M here: the
module will be called ecryptfs.</help>
			</entry>
			<entry name="ECRYPT_FS_MESSAGING">
				<label>Enable notifications for userspace key wrap/unwrap</label>
				<help>Enables the /dev/ecryptfs entry for use by ecryptfsd. This allows
for userspace to wrap/unwrap file encryption keys by other
backends, like OpenSSL.
</help>
			</entry>
			<entry name="HFS_FS">
				<label>Apple Macintosh file system support</label>
				<help>If you say Y here, you will be able to mount Macintosh-formatted
floppy disks and hard drive partitions with full read-write access.
Please read &lt;file:Documentation/filesystems/hfs.txt&gt; to learn about
the available mount options.

To compile this file system support as a module, choose M here: the
module will be called hfs.
</help>
			</entry>
			<entry name="HFSPLUS_FS">
				<label>Apple Extended HFS file system support</label>
				<help>If you say Y here, you will be able to mount extended format
Macintosh-formatted hard drive partitions with full read-write access.

This file system is often called HFS+ and was introduced with
MacOS 8. It includes all Mac specific filesystem data such as
data forks and creator codes, but it also has several UNIX
style features such as file ownership and permissions.</help>
			</entry>
			<entry name="HFSPLUS_FS_POSIX_ACL">
				<label>HFS+ POSIX Access Control Lists</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

It needs to understand that POSIX ACLs are treated only under
Linux. POSIX ACLs doesn't mean something under Mac OS X.
Mac OS X beginning with version 10.4 (&quot;Tiger&quot;) support NFSv4 ACLs,
which are part of the NFSv4 standard.

If you don't know what Access Control Lists are, say N
</help>
			</entry>
			<entry name="BEFS_FS">
				<label>BeOS file system (BeFS) support (read only)</label>
				<help>The BeOS File System (BeFS) is the native file system of Be, Inc's
BeOS. Notable features include support for arbitrary attributes
on files and directories, and database-like indices on selected
attributes. (Also note that this driver doesn't make those features
available at this time). It is a 64 bit filesystem, so it supports
extremely large volumes and files.

If you use this filesystem, you should also say Y to at least one
of the NLS (native language support) options below.

If you don't know what this is about, say N.

To compile this as a module, choose M here: the module will be
called befs.</help>
			</entry>
			<entry name="BEFS_DEBUG">
				<label>Debug BeFS</label>
				<help>If you say Y here, you can use the 'debug' mount option to enable
debugging output from the driver.
</help>
			</entry>
			<entry name="BFS_FS">
				<label>BFS file system support</label>
				<help>Boot File System (BFS) is a file system used under SCO UnixWare to
allow the bootloader access to the kernel image and other important
files during the boot process.  It is usually mounted under /stand
and corresponds to the slice marked as &quot;STAND&quot; in the UnixWare
partition.  You should say Y if you want to read or write the files
on your /stand slice from within Linux.  You then also need to say Y
to &quot;UnixWare slices support&quot;, below.  More information about the BFS
file system is contained in the file
&lt;file:Documentation/filesystems/bfs.txt&gt;.

If you don't know what this is about, say N.

To compile this as a module, choose M here: the module will be called
bfs.  Note that the file system of your root partition (the one
containing the directory /) cannot be compiled as a module.
</help>
			</entry>
			<entry name="EFS_FS">
				<label>EFS file system support (read only)</label>
				<help>EFS is an older file system used for non-ISO9660 CD-ROMs and hard
disk partitions by SGI's IRIX operating system (IRIX 6.0 and newer
uses the XFS file system for hard disk partitions however).

This implementation only offers read-only access. If you don't know
what all this is about, it's safe to say N. For more information
about EFS see its home page at &lt;http://aeschi.ch.eu.org/efs/&gt;.

To compile the EFS file system support as a module, choose M here: the
module will be called efs.
</help>
			</entry>
			<entry name="JFFS2_FS">
				<label>Journalling Flash File System v2 (JFFS2) support</label>
				<help>JFFS2 is the second generation of the Journalling Flash File System
for use on diskless embedded devices. It provides improved wear
levelling, compression and support for hard links. You cannot use
this on normal block devices, only on 'MTD' devices.

Further information on the design and implementation of JFFS2 is
available at &lt;http://sources.redhat.com/jffs2/&gt;.</help>
			</entry>
			<entry name="JFFS2_FS_DEBUG">
				<label>JFFS2 debugging verbosity (0 = quiet, 2 = noisy)</label>
				<help>This controls the amount of debugging messages produced by the JFFS2
code. Set it to zero for use in production systems. For evaluation,
testing and debugging, it's advisable to set it to one. This will
enable a few assertions and will print debugging messages at the
KERN_DEBUG loglevel, where they won't normally be visible. Level 2
is unlikely to be useful - it enables extra debugging in certain
areas which at one point needed debugging, but when the bugs were
located and fixed, the detailed messages were relegated to level 2.

If reporting bugs, please try to have available a full dump of the
messages at debug level 1 while the misbehaviour was occurring.</help>
			</entry>
			<entry name="JFFS2_FS_WRITEBUFFER">
				<label>JFFS2 write-buffering support</label>
				<help>This enables the write-buffering support in JFFS2.

This functionality is required to support JFFS2 on the following
types of flash devices:
- NAND flash
- NOR flash with transparent ECC
- DataFlash</help>
			</entry>
			<entry name="JFFS2_FS_WBUF_VERIFY">
				<label>Verify JFFS2 write-buffer reads</label>
				<help>This causes JFFS2 to read back every page written through the
write-buffer, and check for errors.</help>
			</entry>
			<entry name="JFFS2_SUMMARY">
				<label>JFFS2 summary support</label>
				<help>This feature makes it possible to use summary information
for faster filesystem mount.

The summary information can be inserted into a filesystem image
by the utility 'sumtool'.

If unsure, say 'N'.</help>
			</entry>
			<entry name="JFFS2_FS_XATTR">
				<label>JFFS2 XATTR support</label>
				<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).

If unsure, say N.</help>
			</entry>
			<entry name="JFFS2_FS_POSIX_ACL">
				<label>JFFS2 POSIX Access Control Lists</label>
				<help>Posix Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the Posix ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="JFFS2_FS_SECURITY">
				<label>JFFS2 Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the jffs2 filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.</help>
			</entry>
			<entry name="JFFS2_COMPRESSION_OPTIONS">
				<label>Advanced compression options for JFFS2</label>
				<help>Enabling this option allows you to explicitly choose which
compression modules, if any, are enabled in JFFS2. Removing
compressors can mean you cannot read existing file systems,
and enabling experimental compressors can mean that you
write a file system which cannot be read by a standard kernel.

If unsure, you should _definitely_ say 'N'.</help>
			</entry>
			<entry name="JFFS2_ZLIB">
				<label>JFFS2 ZLIB compression support&quot; if JFFS2_COMPRESSION_OPTIONS</label>
				<help>Zlib is designed to be a free, general-purpose, legally unencumbered,
lossless data-compression library for use on virtually any computer
hardware and operating system. See &lt;http://www.gzip.org/zlib/&gt; for
further information.

Say 'Y' if unsure.</help>
			</entry>
			<entry name="JFFS2_LZO">
				<label>JFFS2 LZO compression support&quot; if JFFS2_COMPRESSION_OPTIONS</label>
				<help>minilzo-based compression. Generally works better than Zlib.

This feature was added in July, 2007. Say 'N' if you need
compatibility with older bootloaders or kernels.</help>
			</entry>
			<entry name="JFFS2_RTIME">
				<label>JFFS2 RTIME compression support&quot; if JFFS2_COMPRESSION_OPTIONS</label>
				<help>Rtime does manage to recompress already-compressed data. Say 'Y' if unsure.</help>
			</entry>
			<entry name="JFFS2_RUBIN">
				<label>JFFS2 RUBIN compression support&quot; if JFFS2_COMPRESSION_OPTIONS</label>
				<help>RUBINMIPS and DYNRUBIN compressors. Say 'N' if unsure.</help>
			</entry>
			<entry name="JFFS2_CMODE_NONE">
				<label>no compression</label>
				<help>Uses no compression.</help>
			</entry>
			<entry name="JFFS2_CMODE_PRIORITY">
				<label>priority</label>
				<help>Tries the compressors in a predefined order and chooses the first
successful one.</help>
			</entry>
			<entry name="JFFS2_CMODE_SIZE">
				<label>size</label>
				<help>Tries all compressors and chooses the one which has the smallest
result.</help>
			</entry>
			<entry name="JFFS2_CMODE_FAVOURLZO">
				<label>Favour LZO</label>
				<help>Tries all compressors and chooses the one which has the smallest
result but gives some preference to LZO (which has faster
decompression) at the expense of size.</help>
			</entry>
			<entry name="UBIFS_FS">
				<label>UBIFS file system support</label>
				<help>UBIFS is a file system for flash devices which works on top of UBI.</help>
			</entry>
			<entry name="UBIFS_FS_ADVANCED_COMPR">
				<label>Advanced compression options</label>
				<help>This option allows to explicitly choose which compressions, if any,
are enabled in UBIFS. Removing compressors means inability to read
existing file systems.

If unsure, say 'N'.</help>
			</entry>
			<entry name="UBIFS_FS_LZO">
				<label>LZO compression support&quot; if UBIFS_FS_ADVANCED_COMPR</label>
				<help>LZO compressor is generally faster than zlib but compresses worse.
Say 'Y' if unsure.</help>
			</entry>
			<entry name="UBIFS_FS_ZLIB">
				<label>ZLIB compression support&quot; if UBIFS_FS_ADVANCED_COMPR</label>
				<help>Zlib compresses better than LZO but it is slower. Say 'Y' if unsure.</help>
			</entry>
			<entry name="UBIFS_ATIME_SUPPORT">
				<label>Access time support&quot; if UBIFS_FS</label>
				<help>Originally UBIFS did not support atime, because it looked like a bad idea due
increased flash wear. This option adds atime support and it is disabled by default
to preserve the old behavior. If you enable this option, UBIFS starts updating atime,
which means that file-system read operations will cause writes (inode atime
updates). This may affect file-system performance and increase flash device wear,
so be careful. How often atime is updated depends on the selected strategy:
strictatime is the &quot;heavy&quot;, relatime is &quot;lighter&quot;, etc.

If unsure, say 'N'
</help>
			</entry>
			<entry name="LOGFS">
				<label>LogFS file system</label>
				<help>Flash filesystem aimed to scale efficiently to large devices.
In comparison to JFFS2 it offers significantly faster mount
times and potentially less RAM usage, although the latter has
not been measured yet.

In its current state it is still very experimental and should
not be used for other than testing purposes.

If unsure, say N.
</help>
			</entry>
			<entry name="CRAMFS">
				<label>Compressed ROM file system support (cramfs) (OBSOLETE)</label>
				<help>Saying Y here includes support for CramFs (Compressed ROM File
System).  CramFs is designed to be a simple, small, and compressed
file system for ROM based embedded systems.  CramFs is read-only,
limited to 256MB file systems (with 16MB files), and doesn't support
16/32 bits uid/gid, hard links and timestamps.

See &lt;file:Documentation/filesystems/cramfs.txt&gt; and
&lt;file:fs/cramfs/README&gt; for further information.

To compile this as a module, choose M here: the module will be called
cramfs.  Note that the root file system (the one containing the
directory /) cannot be compiled as a module.

This filesystem is obsoleted by SquashFS, which is much better
in terms of performance and features.

If unsure, say N.
</help>
			</entry>
			<entry name="SQUASHFS">
				<label>SquashFS 4.0 - Squashed file system support</label>
				<help>Saying Y here includes support for SquashFS 4.0 (a Compressed
Read-Only File System).  Squashfs is a highly compressed read-only
filesystem for Linux.  It uses zlib, lzo or xz compression to
compress both files, inodes and directories.  Inodes in the system
are very small and all blocks are packed to minimise data overhead.
Block sizes greater than 4K are supported up to a maximum of 1 Mbytes
(default block size 128K).  SquashFS 4.0 supports 64 bit filesystems
and files (larger than 4GB), full uid/gid information, hard links and
timestamps.

Squashfs is intended for general read-only filesystem use, for
archival use (i.e. in cases where a .tar.gz file may be used), and in
embedded systems where low overhead is needed.  Further information
and tools are available from http://squashfs.sourceforge.net.

If you want to compile this as a module ( = code which can be
inserted in and removed from the running kernel whenever you want),
say M here.  The module will be called squashfs.  Note that the root
file system (the one containing the directory /) cannot be compiled
as a module.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_FILE_CACHE">
				<label>Decompress file data into an intermediate buffer</label>
				<help>Decompress file data into an intermediate buffer and then
memcopy it into the page cache.</help>
			</entry>
			<entry name="SQUASHFS_FILE_DIRECT">
				<label>Decompress files directly into the page cache</label>
				<help>Directly decompress file data into the page cache.
Doing so can significantly improve performance because
it eliminates a memcpy and it also removes the lock contention
on the single buffer.</help>
			</entry>
			<entry name="SQUASHFS_DECOMP_SINGLE">
				<label>Single threaded compression</label>
				<help>Traditionally Squashfs has used single-threaded decompression.
Only one block (data or metadata) can be decompressed at any
one time.  This limits CPU and memory usage to a minimum.</help>
			</entry>
			<entry name="SQUASHFS_DECOMP_MULTI">
				<label>Use multiple decompressors for parallel I/O</label>
				<help>By default Squashfs uses a single decompressor but it gives
poor performance on parallel I/O workloads when using multiple CPU
machines due to waiting on decompressor availability.

If you have a parallel I/O workload and your system has enough memory,
using this option may improve overall I/O performance.

This decompressor implementation uses up to two parallel
decompressors per core.  It dynamically allocates decompressors
on a demand basis.</help>
			</entry>
			<entry name="SQUASHFS_DECOMP_MULTI_PERCPU">
				<label>Use percpu multiple decompressors for parallel I/O</label>
				<help>By default Squashfs uses a single decompressor but it gives
poor performance on parallel I/O workloads when using multiple CPU
machines due to waiting on decompressor availability.

This decompressor implementation uses a maximum of one
decompressor per core.  It uses percpu variables to ensure
decompression is load-balanced across the cores.</help>
			</entry>
			<entry name="SQUASHFS_XATTR">
				<label>Squashfs XATTR support</label>
				<help>Saying Y here includes support for extended attributes (xattrs).
Xattrs are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page).

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_ZLIB">
				<label>Include support for ZLIB compressed file systems</label>
				<help>ZLIB compression is the standard compression used by Squashfs
file systems.  It offers a good trade-off between compression
achieved and the amount of CPU time and memory necessary to
compress and decompress.

If unsure, say Y.</help>
			</entry>
			<entry name="SQUASHFS_LZ4">
				<label>Include support for LZ4 compressed file systems</label>
				<help>Saying Y here includes support for reading Squashfs file systems
compressed with LZ4 compression.  LZ4 compression is mainly
aimed at embedded systems with slower CPUs where the overheads
of zlib are too high.

LZ4 is not the standard compression used in Squashfs and so most
file systems will be readable without selecting this option.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_LZO">
				<label>Include support for LZO compressed file systems</label>
				<help>Saying Y here includes support for reading Squashfs file systems
compressed with LZO compression.  LZO compression is mainly
aimed at embedded systems with slower CPUs where the overheads
of zlib are too high.

LZO is not the standard compression used in Squashfs and so most
file systems will be readable without selecting this option.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_XZ">
				<label>Include support for XZ compressed file systems</label>
				<help>Saying Y here includes support for reading Squashfs file systems
compressed with XZ compression.  XZ gives better compression than
the default zlib compression, at the expense of greater CPU and
memory overhead.

XZ is not the standard compression used in Squashfs and so most
file systems will be readable without selecting this option.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_4K_DEVBLK_SIZE">
				<label>Use 4K device block size?</label>
				<help>By default Squashfs sets the dev block size (sb_min_blocksize)
to 1K or the smallest block size supported by the block device
(if larger).  This, because blocks are packed together and
unaligned in Squashfs, should reduce latency.

This, however, gives poor performance on MTD NAND devices where
the optimal I/O size is 4K (even though the devices can support
smaller block sizes).

Using a 4K device block size may also improve overall I/O
performance for some file access patterns (e.g. sequential
accesses of files in filesystem order) on all media.

Setting this option will force Squashfs to use a 4K device block
size by default.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_EMBEDDED">
				<label>Additional option for memory-constrained systems</label>
				<help>Saying Y here allows you to specify cache size.

If unsure, say N.</help>
			</entry>
			<entry name="SQUASHFS_FRAGMENT_CACHE_SIZE">
				<label>Number of fragments cached&quot; if SQUASHFS_EMBEDDED</label>
				<help>By default SquashFS caches the last 3 fragments read from
the filesystem.  Increasing this amount may mean SquashFS
has to re-read fragments less often from disk, at the expense
of extra system memory.  Decreasing this amount will mean
SquashFS uses less memory at the expense of extra reads from disk.

Note there must be at least one cached fragment.  Anything
much more than three will probably not make much difference.
</help>
			</entry>
			<entry name="VXFS_FS">
				<label>FreeVxFS file system support (VERITAS VxFS(TM) compatible)</label>
				<help>FreeVxFS is a file system driver that support the VERITAS VxFS(TM)
file system format.  VERITAS VxFS(TM) is the standard file system
of SCO UnixWare (and possibly others) and optionally available
for Sunsoft Solaris, HP-UX and many other operating systems. However
these particular OS implementations of vxfs may differ in on-disk
data endianess and/or superblock offset. The vxfs module has been
tested with SCO UnixWare and HP-UX B.10.20 (pa-risc 1.1 arch.)
Currently only readonly access is supported and VxFX versions
2, 3 and 4. Tests were performed with HP-UX VxFS version 3.

NOTE: the file system type as used by mount(1), mount(2) and
fstab(5) is 'vxfs' as it describes the file system format, not
the actual driver.

There is a userspace utility for HP-UX logical volumes which makes
creating HP-UX logical volumes easy from HP-UX disk block device file
or regular file with image of the disk. See:
https://sourceforge.net/projects/linux-vxfs/

To compile this as a module, choose M here: the module will be
called freevxfs.  If unsure, say N.
</help>
			</entry>
			<entry name="MINIX_FS">
				<label>Minix file system support</label>
				<help>Minix is a simple operating system used in many classes about OS's.
The minix file system (method to organize files on a hard disk
partition or a floppy disk) was the original file system for Linux,
but has been superseded by the second extended file system ext2fs.
You don't want to use the minix file system on your hard disk
because of certain built-in restrictions, but it is sometimes found
on older Linux floppy disks.  This option will enlarge your kernel
by about 28 KB. If unsure, say N.

To compile this file system support as a module, choose M here: the
module will be called minix.  Note that the file system of your root
partition (the one containing the directory /) cannot be compiled as
a module.</help>
			</entry>
			<entry name="MINIX_FS_NATIVE_ENDIAN"/>
			<entry name="MINIX_FS_BIG_ENDIAN_16BIT_INDEXED"/>
			<entry name="OMFS_FS">
				<label>SonicBlue Optimized MPEG File System support</label>
				<help>This is the proprietary file system used by the Rio Karma music
player and ReplayTV DVR.  Despite the name, this filesystem is not
more efficient than a standard FS for MPEG files, in fact likely
the opposite is true.  Say Y if you have either of these devices
and wish to mount its disk.

To compile this file system support as a module, choose M here: the
module will be called omfs.  If unsure, say N.
</help>
			</entry>
			<entry name="HPFS_FS">
				<label>OS/2 HPFS file system support</label>
				<help>OS/2 is IBM's operating system for PC's, the same as Warp, and HPFS
is the file system used for organizing files on OS/2 hard disk
partitions. Say Y if you want to be able to read files from and
write files to an OS/2 HPFS partition on your hard drive. OS/2
floppies however are in regular MSDOS format, so you don't need this
option in order to be able to read them. Read
&lt;file:Documentation/filesystems/hpfs.txt&gt;.

To compile this file system support as a module, choose M here: the
module will be called hpfs.  If unsure, say N.
</help>
			</entry>
			<entry name="QNX4FS_FS">
				<label>QNX4 file system support (read only)</label>
				<help>This is the file system used by the real-time operating systems
QNX 4 and QNX 6 (the latter is also called QNX RTP).
Further information is available at &lt;http://www.qnx.com/&gt;.
Say Y if you intend to mount QNX hard disks or floppies.

To compile this file system support as a module, choose M here: the
module will be called qnx4.

If you don't know whether you need it, then you don't need it:
answer N.
</help>
			</entry>
			<entry name="QNX6FS_FS">
				<label>QNX6 file system support (read only)</label>
				<help>This is the file system used by the real-time operating systems
QNX 6 (also called QNX RTP).
Further information is available at &lt;http://www.qnx.com/&gt;.
Say Y if you intend to mount QNX hard disks or floppies formatted
with a mkqnx6fs.
However, keep in mind that this currently is a readonly driver!

To compile this file system support as a module, choose M here: the
module will be called qnx6.

If you don't know whether you need it, then you don't need it:
answer N.</help>
			</entry>
			<entry name="QNX6FS_DEBUG">
				<label>QNX6 debugging information</label>
				<help>Turns on extended debugging output.

If you are not a developer working on the QNX6FS, you probably don't
want this:
answer N.
</help>
			</entry>
			<entry name="ROMFS_FS">
				<label>ROM file system support</label>
				<help>This is a very small read-only file system mainly intended for
initial ram disks of installation disks, but it could be used for
other read-only media as well.  Read
&lt;file:Documentation/filesystems/romfs.txt&gt; for details.

To compile this file system support as a module, choose M here: the
module will be called romfs.  Note that the file system of your
root partition (the one containing the directory /) cannot be a
module.

If you don't know whether you need it, then you don't need it:
answer N.</help>
			</entry>
			<entry name="ROMFS_BACKED_BY_BLOCK">
				<label>Block device-backed ROM file system support</label>
				<help>This permits ROMFS to use block devices buffered through the page
cache as the medium from which to retrieve data.  It does not allow
direct mapping of the medium.

If unsure, answer Y.</help>
			</entry>
			<entry name="ROMFS_BACKED_BY_MTD">
				<label>MTD-backed ROM file system support</label>
				<help>This permits ROMFS to use MTD based devices directly, without the
intercession of the block layer (which may have been disabled).  It
also allows direct mapping of MTD devices through romfs files under
NOMMU conditions if the underlying device is directly addressable by
the CPU.

If unsure, answer Y.</help>
			</entry>
			<entry name="ROMFS_BACKED_BY_BOTH">
				<label>Both the above</label>
			</entry>
			<entry name="ROMFS_ON_BLOCK"/>
			<entry name="ROMFS_ON_MTD"/>
			<entry name="PSTORE">
				<label>Persistent store support</label>
				<help>This option enables generic access to platform level
persistent storage via &quot;pstore&quot; filesystem that can
be mounted as /dev/pstore.  Only useful if you have
a platform level driver that registers with pstore to
provide the data, so you probably should just go say &quot;Y&quot;
(or &quot;M&quot;) to a platform specific persistent store driver
(e.g. ACPI_APEI on X86) which will select this for you.
If you don't have a platform persistent store driver,
say N.</help>
			</entry>
			<entry name="PSTORE_ZLIB_COMPRESS">
				<label>ZLIB</label>
				<help>This option enables ZLIB compression algorithm support.</help>
			</entry>
			<entry name="PSTORE_LZO_COMPRESS">
				<label>LZO</label>
				<help>This option enables LZO compression algorithm support.</help>
			</entry>
			<entry name="PSTORE_LZ4_COMPRESS">
				<label>LZ4</label>
				<help>This option enables LZ4 compression algorithm support.</help>
			</entry>
			<entry name="PSTORE_CONSOLE">
				<label>Log kernel console messages</label>
				<help>When the option is enabled, pstore will log all kernel
messages, even if no oops or panic happened.</help>
			</entry>
			<entry name="PSTORE_PMSG">
				<label>Log user space messages</label>
				<help>When the option is enabled, pstore will export a character
interface /dev/pmsg0 to log user space messages. On reboot
data can be retrieved from /sys/fs/pstore/pmsg-ramoops-[ID].

If unsure, say N.</help>
			</entry>
			<entry name="PSTORE_FTRACE">
				<label>Persistent function tracer</label>
				<help>With this option kernel traces function calls into a persistent
ram buffer that can be decoded and dumped after reboot through
pstore filesystem. It can be used to determine what function
was last called before a reset or panic.

If unsure, say N.</help>
			</entry>
			<entry name="PSTORE_RAM">
				<label>Log panic/oops to a RAM buffer</label>
				<help>This enables panic and oops messages to be logged to a circular
buffer in RAM where it can be read back at some later point.

Note that for historical reasons, the module will be named
&quot;ramoops.ko&quot;.

For more information, see Documentation/ramoops.txt.
</help>
			</entry>
			<entry name="SYSV_FS">
				<label>System V/Xenix/V7/Coherent file system support</label>
				<help>SCO, Xenix and Coherent are commercial Unix systems for Intel
machines, and Version 7 was used on the DEC PDP-11. Saying Y
here would allow you to read from their floppies and hard disk
partitions.

If you have floppies or hard disk partitions like that, it is likely
that they contain binaries from those other Unix systems; in order
to run these binaries, you will want to install linux-abi which is
a set of kernel modules that lets you run SCO, Xenix, Wyse,
UnixWare, Dell Unix and System V programs under Linux.  It is
available via FTP (user: ftp) from
&lt;ftp://ftp.openlinux.org/pub/people/hch/linux-abi/&gt;).
NOTE: that will work only for binaries from Intel-based systems;
PDP ones will have to wait until somebody ports Linux to -11 ;-)

If you only intend to mount files from some other Unix over the
network using NFS, you don't need the System V file system support
(but you need NFS file system support obviously).

Note that this option is generally not needed for floppies, since a
good portable way to transport files and directories between unixes
(and even other operating systems) is given by the tar program (&quot;man
tar&quot; or preferably &quot;info tar&quot;).  Note also that this option has
nothing whatsoever to do with the option &quot;System V IPC&quot;. Read about
the System V file system in
&lt;file:Documentation/filesystems/sysv-fs.txt&gt;.
Saying Y here will enlarge your kernel by about 27 KB.

To compile this as a module, choose M here: the module will be called
sysv.

If you haven't heard about all of this before, it's safe to say N.
</help>
			</entry>
			<entry name="UFS_FS">
				<label>UFS file system support (read only)</label>
				<help>BSD and derivate versions of Unix (such as SunOS, FreeBSD, NetBSD,
OpenBSD and NeXTstep) use a file system called UFS. Some System V
Unixes can create and mount hard disk partitions and diskettes using
this file system as well. Saying Y here will allow you to read from
these partitions; if you also want to write to them, say Y to the
experimental &quot;UFS file system write support&quot;, below. Please read the
file &lt;file:Documentation/filesystems/ufs.txt&gt; for more information.

The recently released UFS2 variant (used in FreeBSD 5.x) is
READ-ONLY supported.

Note that this option is generally not needed for floppies, since a
good portable way to transport files and directories between unixes
(and even other operating systems) is given by the tar program (&quot;man
tar&quot; or preferably &quot;info tar&quot;).

When accessing NeXTstep files, you may need to convert them from the
NeXT character set to the Latin1 character set; use the program
recode (&quot;info recode&quot;) for this purpose.

To compile the UFS file system support as a module, choose M here: the
module will be called ufs.

If you haven't heard about all of this before, it's safe to say N.</help>
			</entry>
			<entry name="UFS_FS_WRITE">
				<label>UFS file system write support (DANGEROUS)</label>
				<help>Say Y here if you want to try writing to UFS partitions. This is
experimental, so you should back up your UFS partitions beforehand.</help>
			</entry>
			<entry name="UFS_DEBUG">
				<label>UFS debugging</label>
				<help>If you are experiencing any problems with the UFS filesystem, say
Y here.  This will result in _many_ additional debugging messages to be
written to the system log.
</help>
			</entry>
			<entry name="EXOFS_FS">
				<label>exofs: OSD based file system support</label>
				<help>EXOFS is a file system that uses an OSD storage device,
as its backing storage.</help>
			</entry>
			<entry name="EXOFS_DEBUG">
				<label>Enable debugging</label>
				<help>This option enables EXOFS debug prints.
</help>
			</entry>
			<entry name="AUFS_FS">
				<label>Aufs (Advanced multi layered unification filesystem) support</label>
				<help>Aufs is a stackable unification filesystem such as Unionfs,
which unifies several directories and provides a merged single
directory.
In the early days, aufs was entirely re-designed and
re-implemented Unionfs Version 1.x series. Introducing many
original ideas, approaches and improvements, it becomes totally
different from Unionfs while keeping the basic features.</help>
			</entry>
			<entry name="AUFS_BRANCH_MAX_127">
				<label>127</label>
				<help>Specifies the maximum number of branches (or member directories)
in a single aufs. The larger value consumes more system
resources and has a minor impact to performance.</help>
			</entry>
			<entry name="AUFS_BRANCH_MAX_511">
				<label>511</label>
				<help>Specifies the maximum number of branches (or member directories)
in a single aufs. The larger value consumes more system
resources and has a minor impact to performance.</help>
			</entry>
			<entry name="AUFS_BRANCH_MAX_1023">
				<label>1023</label>
				<help>Specifies the maximum number of branches (or member directories)
in a single aufs. The larger value consumes more system
resources and has a minor impact to performance.</help>
			</entry>
			<entry name="AUFS_BRANCH_MAX_32767">
				<label>32767</label>
				<help>Specifies the maximum number of branches (or member directories)
in a single aufs. The larger value consumes more system
resources and has a minor impact to performance.</help>
			</entry>
			<entry name="AUFS_SBILIST">
				<help>Automatic configuration for internal use.
When aufs supports Magic SysRq or /proc, enabled automatically.</help>
			</entry>
			<entry name="AUFS_HNOTIFY">
				<label>Detect direct branch access (bypassing aufs)</label>
				<help>If you want to modify files on branches directly, eg. bypassing aufs,
and want aufs to detect the changes of them fully, then enable this
option and use 'udba=notify' mount option.
Currently there is only one available configuration, &quot;fsnotify&quot;.
It will have a negative impact to the performance.
See detail in aufs.5.</help>
			</entry>
			<entry name="AUFS_HFSNOTIFY">
				<label>fsnotify</label>
			</entry>
			<entry name="AUFS_EXPORT">
				<label>NFS-exportable aufs</label>
				<help>If you want to export your mounted aufs via NFS, then enable this
option. There are several requirements for this configuration.
See detail in aufs.5.</help>
			</entry>
			<entry name="AUFS_INO_T_64">
				<help>Automatic configuration for internal use.
/* typedef unsigned long/int __kernel_ino_t */
/* alpha and s390x are int */</help>
			</entry>
			<entry name="AUFS_XATTR">
				<label>support for XATTR/EA (including Security Labels)</label>
				<help>If your branch fs supports XATTR/EA and you want to make them
available in aufs too, then enable this opsion and specify the
branch attributes for EA.
See detail in aufs.5.</help>
			</entry>
			<entry name="AUFS_FHSM">
				<label>File-based Hierarchical Storage Management</label>
				<help>Hierarchical Storage Management (or HSM) is a well-known feature
in the storage world. Aufs provides this feature as file-based.
with multiple branches.
These multiple branches are prioritized, ie. the topmost one
should be the fastest drive and be used heavily.</help>
			</entry>
			<entry name="AUFS_RDU">
				<label>Readdir in userspace</label>
				<help>Aufs has two methods to provide a merged view for a directory,
by a user-space library and by kernel-space natively. The latter
is always enabled but sometimes large and slow.
If you enable this option, install the library in aufs2-util
package, and set some environment variables for your readdir(3),
then the work will be handled in user-space which generally
shows better performance in most cases.
See detail in aufs.5.</help>
			</entry>
			<entry name="AUFS_SHWH">
				<label>Show whiteouts</label>
				<help>If you want to make the whiteouts in aufs visible, then enable
this option and specify 'shwh' mount option. Although it may
sounds like philosophy or something, but in technically it
simply shows the name of whiteout with keeping its behaviour.</help>
			</entry>
			<entry name="AUFS_BR_RAMFS">
				<label>Ramfs (initramfs/rootfs) as an aufs branch</label>
				<help>If you want to use ramfs as an aufs branch fs, then enable this
option. Generally tmpfs is recommended.
Aufs prohibited them to be a branch fs by default, because
initramfs becomes unusable after switch_root or something
generally. If you sets initramfs as an aufs branch and boot your
system by switch_root, you will meet a problem easily since the
files in initramfs may be inaccessible.
Unless you are going to use ramfs as an aufs branch fs without
switch_root or something, leave it N.</help>
			</entry>
			<entry name="AUFS_BR_FUSE">
				<label>Fuse fs as an aufs branch</label>
				<help>If you want to use fuse-based userspace filesystem as an aufs
branch fs, then enable this option.
It implements the internal poll(2) operation which is
implemented by fuse only (curretnly).</help>
			</entry>
			<entry name="AUFS_POLL">
				<help>Automatic configuration for internal use.</help>
			</entry>
			<entry name="AUFS_BR_HFSPLUS">
				<label>Hfsplus as an aufs branch</label>
				<help>If you want to use hfsplus fs as an aufs branch fs, then enable
this option. This option introduces a small overhead at
copying-up a file on hfsplus.</help>
			</entry>
			<entry name="AUFS_BDEV_LOOP">
				<help>Automatic configuration for internal use.
Convert =[ym] into =y.</help>
			</entry>
			<entry name="AUFS_DEBUG">
				<label>Debug aufs</label>
				<help>Enable this to compile aufs internal debug code.
It will have a negative impact to the performance.</help>
			</entry>
			<entry name="AUFS_MAGIC_SYSRQ">
				<help>Automatic configuration for internal use.
When aufs supports Magic SysRq, enabled automatically.</help>
			</entry>
			<entry name="ORE"/>
			<entry name="NETWORK_FILESYSTEMS">
				<label>Network File Systems</label>
				<help>Say Y here to get to see options for network filesystems and
filesystem-related networking code, such as NFS daemon and
RPCSEC security modules.

This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and
disabled; if unsure, say Y here.</help>
			</entry>
			<entry name="NFS_FS">
				<label>NFS client support</label>
				<help>Choose Y here if you want to access files residing on other
computers using Sun's Network File System protocol.  To compile
this file system support as a module, choose M here: the module
will be called nfs.

To mount file systems exported by NFS servers, you also need to
install the user space mount.nfs command which can be found in
the Linux nfs-utils package, available from http://linux-nfs.org/.
Information about using the mount command is available in the
mount(8) man page.  More detail about the Linux NFS client
implementation is available via the nfs(5) man page.

Below you can choose which versions of the NFS protocol are
available in the kernel to mount NFS servers.  Support for NFS
version 2 (RFC 1094) is always available when NFS_FS is selected.

To configure a system which mounts its root file system via NFS
at boot time, say Y here, select &quot;Kernel level IP
autoconfiguration&quot; in the NETWORK menu, and select &quot;Root file
system on NFS&quot; below.  You cannot compile this file system as a
module in this case.

If unsure, say N.</help>
			</entry>
			<entry name="NFS_V2">
				<label>NFS client support for NFS version 2</label>
				<help>This option enables support for version 2 of the NFS protocol
(RFC 1094) in the kernel's NFS client.

If unsure, say Y.</help>
			</entry>
			<entry name="NFS_V3">
				<label>NFS client support for NFS version 3</label>
				<help>This option enables support for version 3 of the NFS protocol
(RFC 1813) in the kernel's NFS client.

If unsure, say Y.</help>
			</entry>
			<entry name="NFS_V3_ACL">
				<label>NFS client support for the NFSv3 ACL protocol extension</label>
				<help>Some NFS servers support an auxiliary NFSv3 ACL protocol that
Sun added to Solaris but never became an official part of the
NFS version 3 protocol.  This protocol extension allows
applications on NFS clients to manipulate POSIX Access Control
Lists on files residing on NFS servers.  NFS servers enforce
ACLs on local files whether this protocol is available or not.

Choose Y here if your NFS server supports the Solaris NFSv3 ACL
protocol extension and you want your NFS client to allow
applications to access and modify ACLs on files on the server.

Most NFS servers don't support the Solaris NFSv3 ACL protocol
extension.  You can choose N here or specify the &quot;noacl&quot; mount
option to prevent your NFS client from trying to use the NFSv3
ACL protocol.

If unsure, say N.</help>
			</entry>
			<entry name="NFS_V4">
				<label>NFS client support for NFS version 4</label>
				<help>This option enables support for version 4 of the NFS protocol
(RFC 3530) in the kernel's NFS client.

To mount NFS servers using NFSv4, you also need to install user
space programs which can be found in the Linux nfs-utils package,
available from http://linux-nfs.org/.

If unsure, say Y.</help>
			</entry>
			<entry name="NFS_SWAP">
				<label>Provide swap over NFS support</label>
				<help>This option enables swapon to work on files located on NFS mounts.</help>
			</entry>
			<entry name="NFS_V4_1">
				<label>NFS client support for NFSv4.1</label>
				<help>This option enables support for minor version 1 of the NFSv4 protocol
(RFC 5661) in the kernel's NFS client.

If unsure, say N.</help>
			</entry>
			<entry name="NFS_V4_2">
				<label>NFS client support for NFSv4.2</label>
				<help>This option enables support for minor version 2 of the NFSv4 protocol
in the kernel's NFS client.

If unsure, say N.</help>
			</entry>
			<entry name="PNFS_FILE_LAYOUT"/>
			<entry name="PNFS_BLOCK"/>
			<entry name="PNFS_OBJLAYOUT"/>
			<entry name="PNFS_FLEXFILE_LAYOUT"/>
			<entry name="NFS_V4_1_IMPLEMENTATION_ID_DOMAIN">
				<label>NFSv4.1 Implementation ID Domain</label>
				<help>This option defines the domain portion of the implementation ID that
may be sent in the NFS exchange_id operation.  The value must be in
the format of a DNS domain name and should be set to the DNS domain
name of the distribution.
If the NFS client is unchanged from the upstream kernel, this
option should be set to the default &quot;kernel.org&quot;.</help>
			</entry>
			<entry name="NFS_V4_1_MIGRATION">
				<label>NFSv4.1 client support for migration</label>
				<help>This option makes the NFS client advertise to NFSv4.1 servers that
it can support NFSv4 migration.

The NFSv4.1 pieces of the Linux NFSv4 migration implementation are
still experimental.  If you are not an NFSv4 developer, say N here.</help>
			</entry>
			<entry name="NFS_V4_SECURITY_LABEL"/>
			<entry name="ROOT_NFS">
				<label>Root file system on NFS</label>
				<help>If you want your system to mount its root file system via NFS,
choose Y here.  This is common practice for managing systems
without local permanent storage.  For details, read
&lt;file:Documentation/filesystems/nfs/nfsroot.txt&gt;.

Most people say N here.</help>
			</entry>
			<entry name="NFS_FSCACHE">
				<label>Provide NFS client caching support</label>
				<help>Say Y here if you want NFS data to be cached locally on disc through
the general filesystem cache manager</help>
			</entry>
			<entry name="NFS_USE_LEGACY_DNS">
				<label>Use the legacy NFS DNS resolver</label>
				<help>The kernel now provides a method for translating a host name into an
IP address.  Select Y here if you would rather use your own DNS
resolver script.

If unsure, say N</help>
			</entry>
			<entry name="NFS_USE_KERNEL_DNS"/>
			<entry name="NFS_DEBUG"/>
			<entry name="NFSD">
				<label>NFS server support</label>
				<help>Choose Y here if you want to allow other computers to access
files residing on this system using Sun's Network File System
protocol.  To compile the NFS server support as a module,
choose M here: the module will be called nfsd.

You may choose to use a user-space NFS server instead, in which
case you can choose N here.

To export local file systems using NFS, you also need to install
user space programs which can be found in the Linux nfs-utils
package, available from http://linux-nfs.org/.  More detail about
the Linux NFS server implementation is available via the
exports(5) man page.

Below you can choose which versions of the NFS protocol are
available to clients mounting the NFS server on this system.
Support for NFS version 2 (RFC 1094) is always available when
CONFIG_NFSD is selected.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_V2_ACL"/>
			<entry name="NFSD_V3">
				<label>NFS server support for NFS version 3</label>
				<help>This option enables support in your system's NFS server for
version 3 of the NFS protocol (RFC 1813).

If unsure, say Y.</help>
			</entry>
			<entry name="NFSD_V3_ACL">
				<label>NFS server support for the NFSv3 ACL protocol extension</label>
				<help>Solaris NFS servers support an auxiliary NFSv3 ACL protocol that
never became an official part of the NFS version 3 protocol.
This protocol extension allows applications on NFS clients to
manipulate POSIX Access Control Lists on files residing on NFS
servers.  NFS servers enforce POSIX ACLs on local files whether
this protocol is available or not.

This option enables support in your system's NFS server for the
NFSv3 ACL protocol extension allowing NFS clients to manipulate
POSIX ACLs on files exported by your system's NFS server.  NFS
clients which support the Solaris NFSv3 ACL protocol can then
access and modify ACLs on your NFS server.

To store ACLs on your NFS server, you also need to enable ACL-
related CONFIG options for your local file systems of choice.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_V4">
				<label>NFS server support for NFS version 4</label>
				<help>This option enables support in your system's NFS server for
version 4 of the NFS protocol (RFC 3530).

To export files using NFSv4, you need to install additional user
space programs which can be found in the Linux nfs-utils package,
available from http://linux-nfs.org/.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_PNFS"/>
			<entry name="NFSD_BLOCKLAYOUT">
				<label>NFSv4.1 server support for pNFS block layouts</label>
				<help>This option enables support for the exporting pNFS block layouts
in the kernel's NFS server. The pNFS block layout enables NFS
clients to directly perform I/O to block devices accesible to both
the server and the clients.  See RFC 5663 for more details.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_SCSILAYOUT">
				<label>NFSv4.1 server support for pNFS SCSI layouts</label>
				<help>This option enables support for the exporting pNFS SCSI layouts
in the kernel's NFS server. The pNFS SCSI layout enables NFS
clients to directly perform I/O to SCSI devices accesible to both
the server and the clients.  See draft-ietf-nfsv4-scsi-layout for
more details.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_FLEXFILELAYOUT">
				<label>NFSv4.1 server support for pNFS Flex File layouts</label>
				<help>This option enables support for the exporting pNFS Flex File
layouts in the kernel's NFS server. The pNFS Flex File  layout
enables NFS clients to directly perform I/O to NFSv3 devices
accesible to both the server and the clients.  See
draft-ietf-nfsv4-flex-files for more details.

Warning, this server implements the bare minimum functionality
to be a flex file server - it is for testing the client,
not for use in production.

If unsure, say N.</help>
			</entry>
			<entry name="NFSD_V4_SECURITY_LABEL">
				<label>Provide Security Label support for NFSv4 server</label>
				<help>
Say Y here if you want enable fine-grained security label attribute
support for NFS version 4.  Security labels allow security modules like
SELinux and Smack to label files to facilitate enforcement of their policies.
Without this an NFSv4 mount will have the same label on each file.

If you do not wish to enable fine-grained security labels SELinux or
Smack policies on NFSv4 files, say N.

config NFSD_FAULT_INJECTION
bool &quot;NFS server manual fault injection&quot;
depends on NFSD_V4 &amp;&amp; DEBUG_KERNEL &amp;&amp; DEBUG_FS
help
This option enables support for manually injecting faults
into the NFS server.  This is intended to be used for
testing error recovery on the NFS client.

If unsure, say N.
</help>
			</entry>
			<entry name="GRACE_PERIOD"/>
			<entry name="LOCKD"/>
			<entry name="LOCKD_V4"/>
			<entry name="NFS_ACL_SUPPORT"/>
			<entry name="NFS_COMMON"/>
			<entry name="SUNRPC"/>
			<entry name="SUNRPC_GSS"/>
			<entry name="SUNRPC_BACKCHANNEL"/>
			<entry name="SUNRPC_SWAP"/>
			<entry name="RPCSEC_GSS_KRB5">
				<label>Secure RPC: Kerberos V mechanism</label>
				<help>Choose Y here to enable Secure RPC using the Kerberos version 5
GSS-API mechanism (RFC 1964).

Secure RPC calls with Kerberos require an auxiliary user-space
daemon which may be found in the Linux nfs-utils package
available from http://linux-nfs.org/.  In addition, user-space
Kerberos support should be installed.

If unsure, say Y.</help>
			</entry>
			<entry name="SUNRPC_DEBUG">
				<label>RPC: Enable dprintk debugging</label>
				<help>This option enables a sysctl-based debugging interface
that is be used by the 'rpcdebug' utility to turn on or off
logging of different aspects of the kernel RPC activity.

Disabling this option will make your kernel slightly smaller,
but makes troubleshooting NFS issues significantly harder.

If unsure, say Y.</help>
			</entry>
			<entry name="SUNRPC_XPRT_RDMA">
				<label>RPC-over-RDMA transport</label>
				<help>This option allows the NFS client and server to use RDMA
transports (InfiniBand, iWARP, or RoCE).

To compile this support as a module, choose M. The module
will be called rpcrdma.ko.

If unsure, or you know there is no RDMA capability on your
hardware platform, say N.
</help>
			</entry>
			<entry name="CEPH_FS">
				<label>Ceph distributed file system</label>
				<help>Choose Y or M here to include support for mounting the
experimental Ceph distributed file system.  Ceph is an extremely
scalable file system designed to provide high performance,
reliable access to petabytes of storage.

More information at http://ceph.newdream.net/.

If unsure, say N.</help>
			</entry>
			<entry name="CEPH_FSCACHE">
				<label>Enable Ceph client caching support</label>
				<help>Choose Y here to enable persistent, read-only local
caching support for Ceph clients using FS-Cache</help>
			</entry>
			<entry name="CEPH_FS_POSIX_ACL">
				<label>Ceph POSIX Access Control Lists</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N
</help>
			</entry>
			<entry name="CIFS">
				<label>CIFS support (advanced network filesystem, SMBFS successor)</label>
				<help>This is the client VFS module for the Common Internet File System
(CIFS) protocol which is the successor to the Server Message Block
(SMB) protocol, the native file sharing mechanism for most early
PC operating systems.  The CIFS protocol is fully supported by
file servers such as Windows 2000 (including Windows 2003, Windows 2008,
NT 4 and Windows XP) as well by Samba (which provides excellent CIFS
server support for Linux and many other operating systems). Limited
support for OS/2 and Windows ME and similar servers is provided as
well.

The module also provides optional support for the followon
protocols for CIFS including SMB3, which enables
useful performance and security features (see the description
of CONFIG_CIFS_SMB2).

The cifs module provides an advanced network file system
client for mounting to CIFS compliant servers.  It includes
support for DFS (hierarchical name space), secure per-user
session establishment via Kerberos or NTLM or NTLMv2,
safe distributed caching (oplock), optional packet
signing, Unicode and other internationalization improvements.
If you need to mount to Samba or Windows from this machine, say Y.</help>
			</entry>
			<entry name="CIFS_STATS">
				<label>CIFS statistics</label>
				<help>Enabling this option will cause statistics for each server share
mounted by the cifs client to be displayed in /proc/fs/cifs/Stats</help>
			</entry>
			<entry name="CIFS_STATS2">
				<label>Extended statistics</label>
				<help>Enabling this option will allow more detailed statistics on SMB
request timing to be displayed in /proc/fs/cifs/DebugData and also
allow optional logging of slow responses to dmesg (depending on the
value of /proc/fs/cifs/cifsFYI, see fs/cifs/README for more details).
These additional statistics may have a minor effect on performance
and memory utilization.

Unless you are a developer or are doing network performance analysis
or tuning, say N.</help>
			</entry>
			<entry name="CIFS_WEAK_PW_HASH">
				<label>Support legacy servers which use weaker LANMAN security</label>
				<help>Modern CIFS servers including Samba and most Windows versions
(since 1997) support stronger NTLM (and even NTLMv2 and Kerberos)
security mechanisms. These hash the password more securely
than the mechanisms used in the older LANMAN version of the
SMB protocol but LANMAN based authentication is needed to
establish sessions with some old SMB servers.

Enabling this option allows the cifs module to mount to older
LANMAN based servers such as OS/2 and Windows 95, but such
mounts may be less secure than mounts using NTLM or more recent
security mechanisms if you are on a public network.  Unless you
have a need to access old SMB servers (and are on a private
network) you probably want to say N.  Even if this support
is enabled in the kernel build, LANMAN authentication will not be
used automatically. At runtime LANMAN mounts are disabled but
can be set to required (or optional) either in
/proc/fs/cifs (see fs/cifs/README for more detail) or via an
option on the mount command. This support is disabled by
default in order to reduce the possibility of a downgrade
attack.

If unsure, say N.</help>
			</entry>
			<entry name="CIFS_UPCALL">
				<label>Kerberos/SPNEGO advanced session setup</label>
				<help>Enables an upcall mechanism for CIFS which accesses userspace helper
utilities to provide SPNEGO packaged (RFC 4178) Kerberos tickets
which are needed to mount to certain secure servers (for which more
secure Kerberos authentication is required). If unsure, say N.</help>
			</entry>
			<entry name="CIFS_XATTR">
				<label>CIFS extended attributes</label>
				<help>Extended attributes are name:value pairs associated with inodes by
the kernel or by users (see the attr(5) manual page, or visit
&lt;http://acl.bestbits.at/&gt; for details).  CIFS maps the name of
extended attributes beginning with the user namespace prefix
to SMB/CIFS EAs. EAs are stored on Windows servers without the
user namespace prefix, but their names are seen by Linux cifs clients
prefaced by the user namespace prefix. The system namespace
(used by some filesystems to store ACLs) is not supported at
this time.

If unsure, say N.</help>
			</entry>
			<entry name="CIFS_POSIX">
				<label>CIFS POSIX Extensions</label>
				<help>Enabling this option will cause the cifs client to attempt to
negotiate a newer dialect with servers, such as Samba 3.0.5
or later, that optionally can handle more POSIX like (rather
than Windows like) file behavior.  It also enables
support for POSIX ACLs (getfacl and setfacl) to servers
(such as Samba 3.10 and later) which can negotiate
CIFS POSIX ACL support.  If unsure, say N.</help>
			</entry>
			<entry name="CIFS_ACL">
				<label>Provide CIFS ACL support</label>
				<help>Allows fetching CIFS/NTFS ACL from the server.  The DACL blob
is handed over to the application/caller.  See the man
page for getcifsacl for more information.</help>
			</entry>
			<entry name="CIFS_DEBUG">
				<label>Enable CIFS debugging routines</label>
				<help>Enabling this option adds helpful debugging messages to
the cifs code which increases the size of the cifs module.
If unsure, say Y.</help>
			</entry>
			<entry name="CIFS_DEBUG2">
				<label>Enable additional CIFS debugging routines</label>
				<help>Enabling this option adds a few more debugging routines
to the cifs code which slightly increases the size of
the cifs module and can cause additional logging of debug
messages in some error paths, slowing performance. This
option can be turned off unless you are debugging
cifs problems.  If unsure, say N.</help>
			</entry>
			<entry name="CIFS_DFS_UPCALL">
				<label>DFS feature support</label>
				<help>Distributed File System (DFS) support is used to access shares
transparently in an enterprise name space, even if the share
moves to a different server.  This feature also enables
an upcall mechanism for CIFS which contacts userspace helper
utilities to provide server name resolution (host names to
IP addresses) which is needed for implicit mounts of DFS junction
points. If unsure, say N.</help>
			</entry>
			<entry name="CIFS_NFSD_EXPORT">
				<label>Allow nfsd to export CIFS file system</label>
				<help>Allows NFS server to export a CIFS mounted share (nfsd over cifs)</help>
			</entry>
			<entry name="CIFS_SMB2">
				<label>SMB2 and SMB3 network file system support</label>
				<help>This enables support for the Server Message Block version 2
family of protocols, including SMB3.  SMB3 support is
enabled on mount by specifying &quot;vers=3.0&quot; in the mount
options. These protocols are the successors to the popular
CIFS and SMB network file sharing protocols. SMB3 is the
native file sharing mechanism for the more recent
versions of Windows (Windows 8 and Windows 2012 and
later) and Samba server and many others support SMB3 well.
In general SMB3 enables better performance, security
and features, than would be possible with CIFS (Note that
when mounting to Samba, due to the CIFS POSIX extensions,
CIFS mounts can provide slightly better POSIX compatibility
than SMB3 mounts do though). Note that SMB2/SMB3 mount
options are also slightly simpler (compared to CIFS) due
to protocol improvements.</help>
			</entry>
			<entry name="CIFS_SMB311">
				<label>SMB3.1.1 network file system support (Experimental)</label>
				<help>This enables experimental support for the newest, SMB3.1.1, dialect.
This dialect includes improved security negotiation features.
If unsure, say N</help>
			</entry>
			<entry name="CIFS_FSCACHE">
				<label>Provide CIFS client caching support</label>
				<help>Makes CIFS FS-Cache capable. Say Y here if you want your CIFS data
to be cached locally on disk through the general filesystem cache
manager. If unsure, say N.

</help>
			</entry>
			<entry name="NCP_FS">
				<label>NCP file system support (to mount NetWare volumes)</label>
				<help>NCP (NetWare Core Protocol) is a protocol that runs over IPX and is
used by Novell NetWare clients to talk to file servers.  It is to
IPX what NFS is to TCP/IP, if that helps.  Saying Y here allows you
to mount NetWare file server volumes and to access them just like
any other Unix directory.  For details, please read the file
&lt;file:Documentation/filesystems/ncpfs.txt&gt; in the kernel source and
the IPX-HOWTO from &lt;http://www.tldp.org/docs.html#howto&gt;.

You do not have to say Y here if you want your Linux box to act as a
file *server* for Novell NetWare clients.

General information about how to connect Linux, Windows machines and
Macs is on the WWW at &lt;http://www.eats.com/linux_mac_win.html&gt;.

To compile this as a module, choose M here: the module will be called
ncpfs.  Say N unless you are connected to a Novell network.</help>
			</entry>
			<entry name="NCPFS_PACKET_SIGNING">
				<label>Packet signatures</label>
				<help>NCP allows packets to be signed for stronger security. If you want
security, say Y.  Normal users can leave it off.  To be able to use
packet signing you must use ncpfs &gt; 2.0.12.</help>
			</entry>
			<entry name="NCPFS_IOCTL_LOCKING">
				<label>Proprietary file locking</label>
				<help>Allows locking of records on remote volumes.  Say N unless you have
special applications which are able to utilize this locking scheme.</help>
			</entry>
			<entry name="NCPFS_STRONG">
				<label>Clear remove/delete inhibit when needed</label>
				<help>Allows manipulation of files flagged as Delete or Rename Inhibit.
To use this feature you must mount volumes with the ncpmount
parameter &quot;-s&quot; (ncpfs-2.0.12 and newer).  Say Y unless you are not
mounting volumes with -f 444.</help>
			</entry>
			<entry name="NCPFS_NFS_NS">
				<label>Use NFS namespace if available</label>
				<help>Allows you to utilize NFS namespace on NetWare servers.  It brings
you case sensitive filenames.  Say Y.  You can disable it at
mount-time with the `-N nfs' parameter of ncpmount.</help>
			</entry>
			<entry name="NCPFS_OS2_NS">
				<label>Use LONG (OS/2) namespace if available</label>
				<help>Allows you to utilize OS2/LONG namespace on NetWare servers.
Filenames in this namespace are limited to 255 characters, they are
case insensitive, and case in names is preserved.  Say Y.  You can
disable it at mount time with the -N os2 parameter of ncpmount.</help>
			</entry>
			<entry name="NCPFS_SMALLDOS">
				<label>Lowercase DOS filenames</label>
				<help>If you say Y here, every filename on a NetWare server volume using
the OS2/LONG namespace and created under DOS or on a volume using
DOS namespace will be converted to lowercase characters.
Saying N here will give you these filenames in uppercase.

This is only a cosmetic option since the OS2/LONG namespace is case
insensitive. The only major reason for this option is backward
compatibility when moving from DOS to OS2/LONG namespace support.
Long filenames (created by Win95) will not be affected.

This option does not solve the problem that filenames appear
differently under Linux and under Windows, since Windows does an
additional conversions on the client side. You can achieve similar
effects by saying Y to &quot;Allow using of Native Language Support&quot;
below.</help>
			</entry>
			<entry name="NCPFS_NLS">
				<label>Use Native Language Support</label>
				<help>Allows you to use codepages and I/O charsets for file name
translation between the server file system and input/output. This
may be useful, if you want to access the server with other operating
systems, e.g. Windows 95. See also NLS for more Information.

To select codepages and I/O charsets use ncpfs-2.2.0.13 or newer.</help>
			</entry>
			<entry name="NCPFS_EXTRAS">
				<label>Enable symbolic links and execute flags</label>
				<help>This enables the use of symbolic links and an execute permission
bit on NCPFS. The file server need not have long name space or NFS
name space loaded for these to work.

To use the new attributes, it is recommended to use the flags
'-f 600 -d 755' on the ncpmount command line.

</help>
			</entry>
			<entry name="CODA_FS">
				<label>Coda file system support (advanced network fs)</label>
				<help>Coda is an advanced network file system, similar to NFS in that it
enables you to mount file systems of a remote server and access them
with regular Unix commands as if they were sitting on your hard
disk.  Coda has several advantages over NFS: support for
disconnected operation (e.g. for laptops), read/write server
replication, security model for authentication and encryption,
persistent client caches and write back caching.

If you say Y here, your Linux box will be able to act as a Coda
*client*.  You will need user level code as well, both for the
client and server.  Servers are currently user level, i.e. they need
no kernel support.  Please read
&lt;file:Documentation/filesystems/coda.txt&gt; and check out the Coda
home page &lt;http://www.coda.cs.cmu.edu/&gt;.

To compile the coda client support as a module, choose M here: the
module will be called coda.
</help>
			</entry>
			<entry name="AFS_FS">
				<label>Andrew File System support (AFS)</label>
				<help>If you say Y here, you will get an experimental Andrew File System
driver. It currently only supports unsecured read-only AFS access.

See &lt;file:Documentation/filesystems/afs.txt&gt; for more information.

If unsure, say N.</help>
			</entry>
			<entry name="AFS_DEBUG">
				<label>AFS dynamic debugging</label>
				<help>Say Y here to make runtime controllable debugging messages appear.

See &lt;file:Documentation/filesystems/afs.txt&gt; for more information.

If unsure, say N.</help>
			</entry>
			<entry name="AFS_FSCACHE">
				<label>Provide AFS client caching support</label>
				<help>Say Y here if you want AFS data to be cached locally on disk through
the generic filesystem cache manager
</help>
			</entry>
			<entry name="_9P_FS">
				<label>Plan 9 Resource Sharing Support (9P2000)</label>
				<help>If you say Y here, you will get experimental support for
Plan 9 resource sharing via the 9P2000 protocol.

See &lt;http://v9fs.sf.net&gt; for more information.

If unsure, say N.</help>
			</entry>
			<entry name="_9P_FSCACHE">
				<label>Enable 9P client caching support</label>
				<help>Choose Y here to enable persistent, read-only local
caching support for 9p clients using FS-Cache</help>
			</entry>
			<entry name="_9P_FS_POSIX_ACL">
				<label>9P POSIX Access Control Lists</label>
				<help>POSIX Access Control Lists (ACLs) support permissions for users and
groups beyond the owner/group/world scheme.

To learn more about Access Control Lists, visit the POSIX ACLs for
Linux website &lt;http://acl.bestbits.at/&gt;.

If you don't know what Access Control Lists are, say N</help>
			</entry>
			<entry name="_9P_FS_SECURITY">
				<label>9P Security Labels</label>
				<help>Security labels support alternative access control models
implemented by security modules like SELinux.  This option
enables an extended attribute handler for file security
labels in the 9P filesystem.

If you are not using a security module that requires using
extended attributes for file security labels, say N.
</help>
			</entry>
			<entry name="NLS">
				<label>Native language support</label>
				<help>The base Native Language Support. A number of filesystems
depend on it (e.g. FAT, JOLIET, NT, BEOS filesystems), as well
as the ability of some filesystems to use native languages
(NCP, SMB).

If unsure, say Y.

To compile this code as a module, choose M here: the module
will be called nls_base.</help>
			</entry>
			<entry name="NLS_DEFAULT">
				<label>Default NLS Option</label>
				<help>The default NLS used when mounting file system. Note, that this is
the NLS used by your console, not the NLS used by a specific file
system (if different) to store data (filenames) on a disk.
Currently, the valid values are:
big5, cp437, cp737, cp775, cp850, cp852, cp855, cp857, cp860, cp861,
cp862, cp863, cp864, cp865, cp866, cp869, cp874, cp932, cp936,
cp949, cp950, cp1251, cp1255, euc-jp, euc-kr, gb2312, iso8859-1,
iso8859-2, iso8859-3, iso8859-4, iso8859-5, iso8859-6, iso8859-7,
iso8859-8, iso8859-9, iso8859-13, iso8859-14, iso8859-15,
koi8-r, koi8-ru, koi8-u, sjis, tis-620, macroman, utf8.
If you specify a wrong value, it will use the built-in NLS;
compatible with iso8859-1.

If unsure, specify it as &quot;iso8859-1&quot;.</help>
			</entry>
			<entry name="NLS_CODEPAGE_437">
				<label>Codepage 437 (United States, Canada)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored
in so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage that is used in
the United States and parts of Canada. This is recommended.</help>
			</entry>
			<entry name="NLS_CODEPAGE_737">
				<label>Codepage 737 (Greek)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored
in so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage that is used for
Greek. If unsure, say N.</help>
			</entry>
			<entry name="NLS_CODEPAGE_775">
				<label>Codepage 775 (Baltic Rim)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored
in so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage that is used
for the Baltic Rim Languages (Latvian and Lithuanian). If unsure,
say N.</help>
			</entry>
			<entry name="NLS_CODEPAGE_850">
				<label>Codepage 850 (Europe)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage that is used for
much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
more countries here]. It has some characters useful to many European
languages that are not part of the US codepage 437.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_CODEPAGE_852">
				<label>Codepage 852 (Central/Eastern Europe)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Latin 2 codepage used by DOS
for much of Central and Eastern Europe. It has all the required
characters for these languages: Albanian, Croatian, Czech, English,
Finnish, Hungarian, Irish, German, Polish, Romanian, Serbian (Latin
transcription), Slovak, Slovenian, and Sorbian.</help>
			</entry>
			<entry name="NLS_CODEPAGE_855">
				<label>Codepage 855 (Cyrillic)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Cyrillic.</help>
			</entry>
			<entry name="NLS_CODEPAGE_857">
				<label>Codepage 857 (Turkish)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Turkish.</help>
			</entry>
			<entry name="NLS_CODEPAGE_860">
				<label>Codepage 860 (Portuguese)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Portuguese.</help>
			</entry>
			<entry name="NLS_CODEPAGE_861">
				<label>Codepage 861 (Icelandic)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Icelandic.</help>
			</entry>
			<entry name="NLS_CODEPAGE_862">
				<label>Codepage 862 (Hebrew)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Hebrew.</help>
			</entry>
			<entry name="NLS_CODEPAGE_863">
				<label>Codepage 863 (Canadian French)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Canadian
French.</help>
			</entry>
			<entry name="NLS_CODEPAGE_864">
				<label>Codepage 864 (Arabic)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Arabic.</help>
			</entry>
			<entry name="NLS_CODEPAGE_865">
				<label>Codepage 865 (Norwegian, Danish)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for the Nordic
European countries.</help>
			</entry>
			<entry name="NLS_CODEPAGE_866">
				<label>Codepage 866 (Cyrillic/Russian)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for
Cyrillic/Russian.</help>
			</entry>
			<entry name="NLS_CODEPAGE_869">
				<label>Codepage 869 (Greek)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Greek.</help>
			</entry>
			<entry name="NLS_CODEPAGE_936">
				<label>Simplified Chinese charset (CP936, GB2312)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Simplified
Chinese(GBK).</help>
			</entry>
			<entry name="NLS_CODEPAGE_950">
				<label>Traditional Chinese charset (Big5)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Traditional
Chinese(Big5).</help>
			</entry>
			<entry name="NLS_CODEPAGE_932">
				<label>Japanese charsets (Shift-JIS, EUC-JP)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Shift-JIS
or EUC-JP. To use EUC-JP, you can use 'euc-jp' as mount option or
NLS Default value during kernel configuration, instead of 'cp932'.</help>
			</entry>
			<entry name="NLS_CODEPAGE_949">
				<label>Korean charset (CP949, EUC-KR)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for UHC.</help>
			</entry>
			<entry name="NLS_CODEPAGE_874">
				<label>Thai charset (CP874, TIS-620)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Thai.</help>
			</entry>
			<entry name="NLS_ISO8859_8">
				<label>Hebrew charsets (ISO-8859-8, CP1255)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for ISO8859-8, the Hebrew
character set.</help>
			</entry>
			<entry name="NLS_CODEPAGE_1250">
				<label>Windows CP1250 (Slavic/Central European Languages)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CDROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Windows CP-1250
character set, which works for most Latin-written Slavic and Central
European languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
Slovak, Slovene.</help>
			</entry>
			<entry name="NLS_CODEPAGE_1251">
				<label>Windows CP1251 (Bulgarian, Belarusian)</label>
				<help>The Microsoft FAT file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called DOS codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
DOS/Windows partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the DOS codepage for Russian and
Bulgarian and Belarusian.</help>
			</entry>
			<entry name="NLS_ASCII">
				<label>ASCII (United States)</label>
				<help>An ASCII NLS module is needed if you want to override the
DEFAULT NLS with this very basic charset and don't want any
non-ASCII characters to be translated.</help>
			</entry>
			<entry name="NLS_ISO8859_1">
				<label>NLS ISO 8859-1  (Latin 1; Western European Languages)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 1 character
set, which covers most West European languages such as Albanian,
Catalan, Danish, Dutch, English, Faeroese, Finnish, French, German,
Galician, Irish, Icelandic, Italian, Norwegian, Portuguese, Spanish,
and Swedish. It is also the default for the US. If unsure, say Y.</help>
			</entry>
			<entry name="NLS_ISO8859_2">
				<label>NLS ISO 8859-2  (Latin 2; Slavic/Central European Languages)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 2 character
set, which works for most Latin-written Slavic and Central European
languages: Czech, German, Hungarian, Polish, Rumanian, Croatian,
Slovak, Slovene.</help>
			</entry>
			<entry name="NLS_ISO8859_3">
				<label>NLS ISO 8859-3  (Latin 3; Esperanto, Galician, Maltese, Turkish)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 3 character
set, which is popular with authors of Esperanto, Galician, Maltese,
and Turkish.</help>
			</entry>
			<entry name="NLS_ISO8859_4">
				<label>NLS ISO 8859-4  (Latin 4; old Baltic charset)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 4 character
set which introduces letters for Estonian, Latvian, and
Lithuanian. It is an incomplete predecessor of Latin 7.</help>
			</entry>
			<entry name="NLS_ISO8859_5">
				<label>NLS ISO 8859-5  (Cyrillic)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for ISO8859-5, a Cyrillic
character set with which you can type Bulgarian, Belarusian,
Macedonian, Russian, Serbian, and Ukrainian. Note that the charset
KOI8-R is preferred in Russia.</help>
			</entry>
			<entry name="NLS_ISO8859_6">
				<label>NLS ISO 8859-6  (Arabic)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for ISO8859-6, the Arabic
character set.</help>
			</entry>
			<entry name="NLS_ISO8859_7">
				<label>NLS ISO 8859-7  (Modern Greek)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for ISO8859-7, the Modern
Greek character set.</help>
			</entry>
			<entry name="NLS_ISO8859_9">
				<label>NLS ISO 8859-9  (Latin 5; Turkish)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 5 character
set, and it replaces the rarely needed Icelandic letters in Latin 1
with the Turkish ones. Useful in Turkey.</help>
			</entry>
			<entry name="NLS_ISO8859_13">
				<label>NLS ISO 8859-13 (Latin 7; Baltic)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 7 character
set, which supports modern Baltic languages including Latvian
and Lithuanian.</help>
			</entry>
			<entry name="NLS_ISO8859_14">
				<label>NLS ISO 8859-14 (Latin 8; Celtic)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 8 character
set, which adds the last accented vowels for Welsh (aka Cymraeg)
(and Manx Gaelic) that were missing in Latin 1.
&lt;http://linux.speech.cymru.org/&gt; has further information.</help>
			</entry>
			<entry name="NLS_ISO8859_15">
				<label>NLS ISO 8859-15 (Latin 9; Western European Languages with Euro)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the Latin 9 character
set, which covers most West European languages such as Albanian,
Catalan, Danish, Dutch, English, Estonian, Faeroese, Finnish,
French, German, Galician, Irish, Icelandic, Italian, Norwegian,
Portuguese, Spanish, and Swedish. Latin 9 is an update to
Latin 1 (ISO 8859-1) that removes a handful of rarely used
characters and instead adds support for Estonian, corrects the
support for French and Finnish, and adds the new Euro character.
If unsure, say Y.</help>
			</entry>
			<entry name="NLS_KOI8_R">
				<label>NLS KOI8-R (Russian)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the preferred Russian
character set.</help>
			</entry>
			<entry name="NLS_KOI8_U">
				<label>NLS KOI8-U/RU (Ukrainian, Belarusian)</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the preferred Ukrainian
(koi8-u) and Belarusian (koi8-ru) character sets.</help>
			</entry>
			<entry name="NLS_MAC_ROMAN">
				<label>Codepage macroman</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
much of Europe -- United Kingdom, Germany, Spain, Italy, and [add
more countries here].

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_CELTIC">
				<label>Codepage macceltic</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Celtic.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_CENTEURO">
				<label>Codepage maccenteuro</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Central Europe.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_CROATIAN">
				<label>Codepage maccroatian</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Croatian.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_CYRILLIC">
				<label>Codepage maccyrillic</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Cyrillic.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_GAELIC">
				<label>Codepage macgaelic</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Gaelic.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_GREEK">
				<label>Codepage macgreek</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Greek.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_ICELAND">
				<label>Codepage maciceland</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Iceland.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_INUIT">
				<label>Codepage macinuit</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Inuit.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_ROMANIAN">
				<label>Codepage macromanian</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Romanian.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_MAC_TURKISH">
				<label>Codepage macturkish</label>
				<help>The Apple HFS file system family can deal with filenames in
native language character sets. These character sets are stored in
so-called MAC codepages. You need to include the appropriate
codepage if you want to be able to read/write these filenames on
Mac partitions correctly. This does apply to the filenames
only, not to the file contents. You can include several codepages;
say Y here if you want to include the Mac codepage that is used for
Turkish.

If unsure, say Y.</help>
			</entry>
			<entry name="NLS_UTF8">
				<label>NLS UTF-8</label>
				<help>If you want to display filenames with native language characters
from the Microsoft FAT file system family or from JOLIET CD-ROMs
correctly on the screen, you need to include the appropriate
input/output character sets. Say Y here for the UTF-8 encoding of
the Unicode/ISO9646 universal character set.</help>
			</entry>
			<entry name="DLM">
				<label>Distributed Lock Manager (DLM)</label>
				<help>A general purpose distributed lock manager for kernel or userspace
applications.</help>
			</entry>
			<entry name="DLM_DEBUG">
				<label>DLM debugging</label>
				<help>Under the debugfs mount point, the name of each lockspace will
appear as a file in the &quot;dlm&quot; directory.  The output is the
list of resource and locks the local node knows about.
</help>
			</entry>
		</container>
		<container name="Kernel_hacking">
			<label>Kernel hacking</label>
			<entry name="TRACE_IRQFLAGS_SUPPORT"/>
			<container name="printk_and_dmesg_options">
				<label>printk and dmesg options</label>
				<entry name="PRINTK_TIME">
					<label>Show timing information on printks</label>
					<help>Selecting this option causes time stamps of the printk()
messages to be added to the output of the syslog() system
call and at the console.

The timestamp is always recorded internally, and exported
to /dev/kmsg. This flag just specifies if the timestamp should
be included, not that the timestamp is recorded.

The behavior is also controlled by the kernel command line
parameter printk.time=1. See Documentation/kernel-parameters.txt</help>
				</entry>
				<entry name="MESSAGE_LOGLEVEL_DEFAULT">
					<label>Default message log level (1-7)</label>
					<help>Default log level for printk statements with no specified priority.

This was hard-coded to KERN_WARNING since at least 2.6.10 but folks
that are auditing their logs closely may want to set it to a lower
priority.</help>
				</entry>
				<entry name="BOOT_PRINTK_DELAY">
					<label>Delay each boot printk message by N milliseconds</label>
					<help>This build option allows you to read kernel boot messages
by inserting a short delay after each one.  The delay is
specified in milliseconds on the kernel command line,
using &quot;boot_delay=N&quot;.

It is likely that you would also need to use &quot;lpj=M&quot; to preset
the &quot;loops per jiffie&quot; value.
See a previous boot log for the &quot;lpj&quot; value to use for your
system, and then set &quot;lpj=M&quot; before setting &quot;boot_delay=N&quot;.
NOTE:  Using this option may adversely affect SMP systems.
I.e., processors other than the first one may not boot up.
BOOT_PRINTK_DELAY also may cause LOCKUP_DETECTOR to detect
what it believes to be lockup conditions.</help>
				</entry>
				<entry name="DYNAMIC_DEBUG">
					<label>Enable dynamic printk() support</label>
					<help>
Compiles debug level messages into the kernel, which would not
otherwise be available at runtime. These messages can then be
enabled/disabled based on various levels of scope - per source file,
function, module, format string, and line number. This mechanism
implicitly compiles in all pr_debug() and dev_dbg() calls, which
enlarges the kernel text size by about 2%.

If a source file is compiled with DEBUG flag set, any
pr_debug() calls in it are enabled by default, but can be
disabled at runtime as below.  Note that DEBUG flag is
turned on by many CONFIG_*DEBUG* options.

Usage:

Dynamic debugging is controlled via the 'dynamic_debug/control' file,
which is contained in the 'debugfs' filesystem. Thus, the debugfs
filesystem must first be mounted before making use of this feature.
We refer the control file as: &lt;debugfs&gt;/dynamic_debug/control. This
file contains a list of the debug statements that can be enabled. The
format for each line of the file is:

filename:lineno [module]function flags format

filename : source file of the debug statement
lineno : line number of the debug statement
module : module that contains the debug statement
function : function that contains the debug statement
flags : '=p' means the line is turned 'on' for printing
format : the format used for the debug statement

From a live system:

nullarbor:~ # cat &lt;debugfs&gt;/dynamic_debug/control
# filename:lineno [module]function flags format
fs/aio.c:222 [aio]__put_ioctx =_ &quot;__put_ioctx:\040freeing\040%p\012&quot;
fs/aio.c:248 [aio]ioctx_alloc =_ &quot;ENOMEM:\040nr_events\040too\040high\012&quot;
fs/aio.c:1770 [aio]sys_io_cancel =_ &quot;calling\040cancel\012&quot;

Example usage:

// enable the message at line 1603 of file svcsock.c
nullarbor:~ # echo -n 'file svcsock.c line 1603 +p' &gt;
&lt;debugfs&gt;/dynamic_debug/control

// enable all the messages in file svcsock.c
nullarbor:~ # echo -n 'file svcsock.c +p' &gt;
&lt;debugfs&gt;/dynamic_debug/control

// enable all the messages in the NFS server module
nullarbor:~ # echo -n 'module nfsd +p' &gt;
&lt;debugfs&gt;/dynamic_debug/control

// enable all 12 messages in the function svc_process()
nullarbor:~ # echo -n 'func svc_process +p' &gt;
&lt;debugfs&gt;/dynamic_debug/control

// disable all 12 messages in the function svc_process()
nullarbor:~ # echo -n 'func svc_process -p' &gt;
&lt;debugfs&gt;/dynamic_debug/control

See Documentation/dynamic-debug-howto.txt for additional information.

endmenu # &quot;printk and dmesg options&quot;

menu &quot;Compile-time checks and compiler options&quot;

config DEBUG_INFO
bool &quot;Compile the kernel with debug info&quot;
depends on DEBUG_KERNEL &amp;&amp; !COMPILE_TEST
help
If you say Y here the resulting kernel image will include
debugging info resulting in a larger kernel image.
This adds debug symbols to the kernel and modules (gcc -g), and
is needed if you intend to use kernel crashdump or binary object
tools like crash, kgdb, LKCD, gdb, etc on the kernel.
Say Y here only if you plan to debug the kernel.

If unsure, say N.

config DEBUG_INFO_REDUCED
bool &quot;Reduce debugging information&quot;
depends on DEBUG_INFO
help
If you say Y here gcc is instructed to generate less debugging
information for structure types. This means that tools that
need full debugging information (like kgdb or systemtap) won't
be happy. But if you merely need debugging information to
resolve line numbers there is no loss. Advantage is that
build directory object sizes shrink dramatically over a full
DEBUG_INFO build and compile times are reduced too.
Only works with newer gcc versions.

config DEBUG_INFO_SPLIT
bool &quot;Produce split debuginfo in .dwo files&quot;
depends on DEBUG_INFO
help
Generate debug info into separate .dwo files. This significantly
reduces the build directory size for builds with DEBUG_INFO,
because it stores the information only once on disk in .dwo
files instead of multiple times in object files and executables.
In addition the debug information is also compressed.

Requires recent gcc (4.7+) and recent gdb/binutils.
Any tool that packages or reads debug information would need
to know about the .dwo files and include them.
Incompatible with older versions of ccache.

config DEBUG_INFO_DWARF4
bool &quot;Generate dwarf4 debuginfo&quot;
depends on DEBUG_INFO
help
Generate dwarf4 debug info. This requires recent versions
of gcc and gdb. It makes the debug information larger.
But it significantly improves the success of resolving
variables in gdb on optimized code.

config GDB_SCRIPTS
bool &quot;Provide GDB scripts for kernel debugging&quot;
depends on DEBUG_INFO
help
This creates the required links to GDB helper scripts in the
build directory. If you load vmlinux into gdb, the helper
scripts will be automatically imported by gdb as well, and
additional functions are available to analyze a Linux kernel
instance. See Documentation/gdb-kernel-debugging.txt for further
details.

config ENABLE_WARN_DEPRECATED
bool &quot;Enable __deprecated logic&quot;
default y
help
Enable the __deprecated logic in the kernel build.
Disable this to suppress the &quot;warning: 'foo' is deprecated
(declared at kernel/power/somefile.c:1234)&quot; messages.

config ENABLE_MUST_CHECK
bool &quot;Enable __must_check logic&quot;
default y
help
Enable the __must_check logic in the kernel build.  Disable this to
suppress the &quot;warning: ignoring return value of 'foo', declared with
attribute warn_unused_result&quot; messages.

config FRAME_WARN
int &quot;Warn for stack frames larger than (needs gcc 4.4)&quot;
range 0 8192
default 0 if KASAN
default 1024 if !64BIT
default 2048 if 64BIT
help
Tell gcc to warn at build time for stack frames larger than this.
Setting this too low will cause a lot of warnings.
Setting it to 0 disables the warning.
Requires gcc 4.4

config STRIP_ASM_SYMS
bool &quot;Strip assembler-generated symbols during link&quot;
default n
help
Strip internal assembler-generated symbols during a link (symbols
that look like '.Lxxx') so they don't pollute the output of
get_wchan() and suchlike.

config READABLE_ASM
bool &quot;Generate readable assembler code&quot;
depends on DEBUG_KERNEL
help
Disable some compiler optimizations that tend to generate human unreadable
assembler output. This may make the kernel slightly slower, but it helps
to keep kernel developers who have to stare a lot at assembler listings
sane.

config UNUSED_SYMBOLS
bool &quot;Enable unused/obsolete exported symbols&quot;
default y if X86
help
Unused but exported symbols make the kernel needlessly bigger.  For
that reason most of these unused exports will soon be removed.  This
option is provided temporarily to provide a transition period in case
some external kernel module needs one of these symbols anyway. If you
encounter such a case in your module, consider if you are actually
using the right API.  (rationale: since nobody in the kernel is using
this in a module, there is a pretty good chance it's actually the
wrong interface to use).  If you really need the symbol, please send a
mail to the linux kernel mailing list mentioning the symbol and why
you really need it, and what the merge plan to the mainline kernel for
your module is.

config PAGE_OWNER
bool &quot;Track page owner&quot;
depends on DEBUG_KERNEL &amp;&amp; STACKTRACE_SUPPORT
select DEBUG_FS
select STACKTRACE
select STACKDEPOT
select PAGE_EXTENSION
help
This keeps track of what call chain is the owner of a page, may
help to find bare alloc_page(s) leaks. Even if you include this
feature on your build, it is disabled in default. You should pass
&quot;page_owner=on&quot; to boot parameter in order to enable it. Eats
a fair amount of memory if enabled. See tools/vm/page_owner_sort.c
for user-space helper.

If unsure, say N.

config DEBUG_FS
bool &quot;Debug Filesystem&quot;
select SRCU
help
debugfs is a virtual file system that kernel developers use to put
debugging files into.  Enable this option to be able to read and
write to these files.

For detailed documentation on the debugfs API, see
Documentation/DocBook/filesystems.

If unsure, say N.

config HEADERS_CHECK
bool &quot;Run 'make headers_check' when building vmlinux&quot;
depends on !UML
help
This option will extract the user-visible kernel headers whenever
building the kernel, and will run basic sanity checks on them to
ensure that exported files do not attempt to include files which
were not exported, etc.

If you're making modifications to header files which are
relevant for userspace, say 'Y', and check the headers
exported to $(INSTALL_HDR_PATH) (usually 'usr/include' in
your build tree), to make sure they're suitable.

config DEBUG_SECTION_MISMATCH
bool &quot;Enable full Section mismatch analysis&quot;
help
The section mismatch analysis checks if there are illegal
references from one section to another section.
During linktime or runtime, some sections are dropped;
any use of code/data previously in these sections would
most likely result in an oops.
In the code, functions and variables are annotated with
__init,, etc. (see the full list in include/linux/init.h),
which results in the code/data being placed in specific sections.
The section mismatch analysis is always performed after a full
kernel build, and enabling this option causes the following
additional steps to occur:
- Add the option -fno-inline-functions-called-once to gcc commands.
When inlining a function annotated with __init in a non-init
function, we would lose the section information and thus
the analysis would not catch the illegal reference.
This option tells gcc to inline less (but it does result in
a larger kernel).
- Run the section mismatch analysis for each module/built-in.o file.
When we run the section mismatch analysis on vmlinux.o, we
lose valueble information about where the mismatch was
introduced.
Running the analysis for each module/built-in.o file
tells where the mismatch happens much closer to the
source. The drawback is that the same mismatch is
reported at least twice.
- Enable verbose reporting from modpost in order to help resolve
the section mismatches that are reported.

config SECTION_MISMATCH_WARN_ONLY
bool &quot;Make section mismatch errors non-fatal&quot;
default y
help
If you say N here, the build process will fail if there are any
section mismatch, instead of just throwing warnings.

If unsure, say Y.

#
# Select this config option from the architecture Kconfig, if it
# is preferred to always offer frame pointers as a config
# option on the architecture (regardless of KERNEL_DEBUG):
#
config ARCH_WANT_FRAME_POINTERS
bool
help

config FRAME_POINTER
bool &quot;Compile the kernel with frame pointers&quot;
depends on DEBUG_KERNEL &amp;&amp; \
(CRIS || M68K || FRV || UML || \
AVR32 || SUPERH || BLACKFIN || MN10300 || METAG) || \
ARCH_WANT_FRAME_POINTERS
default y if (DEBUG_INFO &amp;&amp; UML) || ARCH_WANT_FRAME_POINTERS
help
If you say Y here the resulting kernel image will be slightly
larger and slower, but it gives very useful debugging information
in case of kernel bugs. (precise oopses/stacktraces/warnings)

config STACK_VALIDATION
bool &quot;Compile-time stack metadata validation&quot;
depends on HAVE_STACK_VALIDATION
default n
help
Add compile-time checks to validate stack metadata, including frame
pointers (if CONFIG_FRAME_POINTER is enabled).  This helps ensure
that runtime stack traces are more reliable.

For more information, see
tools/objtool/Documentation/stack-validation.txt.

config DEBUG_FORCE_WEAK_PER_CPU
bool &quot;Force weak per-cpu definitions&quot;
depends on DEBUG_KERNEL
help
s390 and alpha require percpu variables in modules to be
defined weak to work around addressing range issue which
puts the following two restrictions on percpu variable
definitions.

1. percpu symbols must be unique whether static or not
2. percpu variables can't be defined inside a function

To ensure that generic code follows the above rules, this
option forces all percpu variables to be defined as weak.

endmenu # &quot;Compiler options&quot;

config MAGIC_SYSRQ
bool &quot;Magic SysRq key&quot;
depends on !UML
help
If you say Y here, you will have some control over the system even
if the system crashes for example during kernel debugging (e.g., you
will be able to flush the buffer cache to disk, reboot the system
immediately or dump some status information). This is accomplished
by pressing various keys while holding SysRq (Alt+PrintScreen). It
also works on a serial console (on PC hardware at least), if you
send a BREAK and then within 5 seconds a command keypress. The
keys are documented in &lt;file:Documentation/sysrq.txt&gt;. Don't say Y
unless you really know what this hack does.

config MAGIC_SYSRQ_DEFAULT_ENABLE
hex &quot;Enable magic SysRq key functions by default&quot;
depends on MAGIC_SYSRQ
default 0x1
help
Specifies which SysRq key functions are enabled by default.
This may be set to 1 or 0 to enable or disable them all, or
to a bitmask as described in Documentation/sysrq.txt.

config DEBUG_KERNEL
bool &quot;Kernel debugging&quot;
help
Say Y here if you are developing drivers or trying to debug and
identify kernel problems.

menu &quot;Memory Debugging&quot;

source mm/Kconfig.debug

config DEBUG_OBJECTS
bool &quot;Debug object operations&quot;
depends on DEBUG_KERNEL
help
If you say Y here, additional code will be inserted into the
kernel to track the life time of various objects and validate
the operations on those objects.

config DEBUG_OBJECTS_SELFTEST
bool &quot;Debug objects selftest&quot;
depends on DEBUG_OBJECTS
help
This enables the selftest of the object debug code.

config DEBUG_OBJECTS_FREE
bool &quot;Debug objects in freed memory&quot;
depends on DEBUG_OBJECTS
help
This enables checks whether a k/v free operation frees an area
which contains an object which has not been deactivated
properly. This can make kmalloc/kfree-intensive workloads
much slower.

config DEBUG_OBJECTS_TIMERS
bool &quot;Debug timer objects&quot;
depends on DEBUG_OBJECTS
help
If you say Y here, additional code will be inserted into the
timer routines to track the life time of timer objects and
validate the timer operations.

config DEBUG_OBJECTS_WORK
bool &quot;Debug work objects&quot;
depends on DEBUG_OBJECTS
help
If you say Y here, additional code will be inserted into the
work queue routines to track the life time of work objects and
validate the work operations.

config DEBUG_OBJECTS_RCU_HEAD
bool &quot;Debug RCU callbacks objects&quot;
depends on DEBUG_OBJECTS
help
Enable this to turn on debugging of RCU list heads (call_rcu() usage).

config DEBUG_OBJECTS_PERCPU_COUNTER
bool &quot;Debug percpu counter objects&quot;
depends on DEBUG_OBJECTS
help
If you say Y here, additional code will be inserted into the
percpu counter routines to track the life time of percpu counter
objects and validate the percpu counter operations.

config DEBUG_OBJECTS_ENABLE_DEFAULT
int &quot;debug_objects bootup default value (0-1)&quot;
range 0 1
default &quot;1&quot;
depends on DEBUG_OBJECTS
help
Debug objects boot parameter default value

config DEBUG_SLAB
bool &quot;Debug slab memory allocations&quot;
depends on DEBUG_KERNEL &amp;&amp; SLAB &amp;&amp; !KMEMCHECK
help
Say Y here to have the kernel do limited verification on memory
allocation as well as poisoning memory on free to catch use of freed
memory. This can make kmalloc/kfree-intensive workloads much slower.

config DEBUG_SLAB_LEAK
bool &quot;Memory leak debugging&quot;
depends on DEBUG_SLAB

config SLUB_DEBUG_ON
bool &quot;SLUB debugging on by default&quot;
depends on SLUB &amp;&amp; SLUB_DEBUG &amp;&amp; !KMEMCHECK
default n
help
Boot with debugging on by default. SLUB boots by default with
the runtime debug capabilities switched off. Enabling this is
equivalent to specifying the &quot;slub_debug&quot; parameter on boot.
There is no support for more fine grained debug control like
possible with slub_debug=xxx. SLUB debugging may be switched
off in a kernel built with CONFIG_SLUB_DEBUG_ON by specifying
&quot;slub_debug=-&quot;.

config SLUB_STATS
default n
bool &quot;Enable SLUB performance statistics&quot;
depends on SLUB &amp;&amp; SYSFS
help
SLUB statistics are useful to debug SLUBs allocation behavior in
order find ways to optimize the allocator. This should never be
enabled for production use since keeping statistics slows down
the allocator by a few percentage points. The slabinfo command
supports the determination of the most active slabs to figure
out which slabs are relevant to a particular load.
Try running: slabinfo -DA

config HAVE_DEBUG_KMEMLEAK
bool

config DEBUG_KMEMLEAK
bool &quot;Kernel memory leak detector&quot;
depends on DEBUG_KERNEL &amp;&amp; HAVE_DEBUG_KMEMLEAK
select DEBUG_FS
select STACKTRACE if STACKTRACE_SUPPORT
select KALLSYMS
select CRC32
help
Say Y here if you want to enable the memory leak
detector. The memory allocation/freeing is traced in a way
similar to the Boehm's conservative garbage collector, the
difference being that the orphan objects are not freed but
only shown in /sys/kernel/debug/kmemleak. Enabling this
feature will introduce an overhead to memory
allocations. See Documentation/kmemleak.txt for more
details.

Enabling DEBUG_SLAB or SLUB_DEBUG may increase the chances
of finding leaks due to the slab objects poisoning.

In order to access the kmemleak file, debugfs needs to be
mounted (usually at /sys/kernel/debug).

config DEBUG_KMEMLEAK_EARLY_LOG_SIZE
int &quot;Maximum kmemleak early log entries&quot;
depends on DEBUG_KMEMLEAK
range 200 40000
default 400
help
Kmemleak must track all the memory allocations to avoid
reporting false positives. Since memory may be allocated or
freed before kmemleak is initialised, an early log buffer is
used to store these actions. If kmemleak reports &quot;early log
buffer exceeded&quot;, please increase this value.

config DEBUG_KMEMLEAK_TEST
tristate &quot;Simple test for the kernel memory leak detector&quot;
depends on DEBUG_KMEMLEAK &amp;&amp; m
help
This option enables a module that explicitly leaks memory.

If unsure, say N.

config DEBUG_KMEMLEAK_DEFAULT_OFF
bool &quot;Default kmemleak to off&quot;
depends on DEBUG_KMEMLEAK
help
Say Y here to disable kmemleak by default. It can then be enabled
on the command line via kmemleak=on.

config DEBUG_STACK_USAGE
bool &quot;Stack utilization instrumentation&quot;
depends on DEBUG_KERNEL &amp;&amp; !IA64
help
Enables the display of the minimum amount of free stack which each
task has ever had available in the sysrq-T and sysrq-P debug output.

This option will slow down process creation somewhat.

config DEBUG_VM
bool &quot;Debug VM&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on extended checks in the virtual-memory system
that may impact performance.

If unsure, say N.

config DEBUG_VM_VMACACHE
bool &quot;Debug VMA caching&quot;
depends on DEBUG_VM
help
Enable this to turn on VMA caching debug information. Doing so
can cause significant overhead, so only enable it in non-production
environments.

If unsure, say N.

config DEBUG_VM_RB
bool &quot;Debug VM red-black trees&quot;
depends on DEBUG_VM
help
Enable VM red-black tree debugging information and extra validations.

If unsure, say N.

config DEBUG_VM_PGFLAGS
bool &quot;Debug page-flags operations&quot;
depends on DEBUG_VM
help
Enables extra validation on page flags operations.

If unsure, say N.

config DEBUG_VIRTUAL
bool &quot;Debug VM translations&quot;
depends on DEBUG_KERNEL &amp;&amp; X86
help
Enable some costly sanity checks in virtual to page code. This can
catch mistakes with virt_to_page() and friends.

If unsure, say N.

config DEBUG_NOMMU_REGIONS
bool &quot;Debug the global anon/private NOMMU mapping region tree&quot;
depends on DEBUG_KERNEL &amp;&amp; !MMU
help
This option causes the global tree of anonymous and private mapping
regions to be regularly checked for invalid topology.

config DEBUG_MEMORY_INIT
bool &quot;Debug memory initialisation&quot; if EXPERT
default !EXPERT
help
Enable this for additional checks during memory initialisation.
The sanity checks verify aspects of the VM such as the memory model
and other information provided by the architecture. Verbose
information will be printed at KERN_DEBUG loglevel depending
on the mminit_loglevel= command-line option.

If unsure, say Y

config MEMORY_NOTIFIER_ERROR_INJECT
tristate &quot;Memory hotplug notifier error injection module&quot;
depends on MEMORY_HOTPLUG_SPARSE &amp;&amp; NOTIFIER_ERROR_INJECTION
help
This option provides the ability to inject artificial errors to
memory hotplug notifier chain callbacks.  It is controlled through
debugfs interface under /sys/kernel/debug/notifier-error-inject/memory

If the notifier call chain should be failed with some events
notified, write the error code to &quot;actions/&lt;notifier event&gt;/error&quot;.

Example: Inject memory hotplug offline error (-12 == -ENOMEM)

# cd /sys/kernel/debug/notifier-error-inject/memory
# echo -12 &gt; actions/MEM_GOING_OFFLINE/error
# echo offline &gt; /sys/devices/system/memory/memoryXXX/state
bash: echo: write error: Cannot allocate memory

To compile this code as a module, choose M here: the module will
be called memory-notifier-error-inject.

If unsure, say N.

config DEBUG_PER_CPU_MAPS
bool &quot;Debug access to per_cpu maps&quot;
depends on DEBUG_KERNEL
depends on SMP
help
Say Y to verify that the per_cpu map being accessed has
been set up. This adds a fair amount of code to kernel memory
and decreases performance.

Say N if unsure.

config DEBUG_HIGHMEM
bool &quot;Highmem debugging&quot;
depends on DEBUG_KERNEL &amp;&amp; HIGHMEM
help
This option enables additional error checking for high memory
systems.  Disable for production systems.

config HAVE_DEBUG_STACKOVERFLOW
bool

config DEBUG_STACKOVERFLOW
bool &quot;Check for stack overflows&quot;
depends on DEBUG_KERNEL &amp;&amp; HAVE_DEBUG_STACKOVERFLOW
---help---
Say Y here if you want to check for overflows of kernel, IRQ
and exception stacks (if your architecture uses them). This
option will show detailed messages if free stack space drops
below a certain limit.

These kinds of bugs usually occur when call-chains in the
kernel get too deep, especially when interrupts are
involved.

Use this in cases where you see apparently random memory
corruption, especially if it appears in 'struct thread_info'

If in doubt, say &quot;N&quot;.

source &quot;lib/Kconfig.kmemcheck&quot;

source &quot;lib/Kconfig.kasan&quot;

endmenu # &quot;Memory Debugging&quot;

config ARCH_HAS_KCOV
bool
help
KCOV does not have any arch-specific code, but currently it is enabled
only for x86_64. KCOV requires testing on other archs, and most likely
disabling of instrumentation for some early boot code.

config KCOV
bool &quot;Code coverage for fuzzing&quot;
depends on ARCH_HAS_KCOV
select DEBUG_FS
select GCC_PLUGINS if !COMPILE_TEST
select GCC_PLUGIN_SANCOV if !COMPILE_TEST
help
KCOV exposes kernel code coverage information in a form suitable
for coverage-guided fuzzing (randomized testing).

If RANDOMIZE_BASE is enabled, PC values will not be stable across
different machines and across reboots. If you need stable PC values,
disable RANDOMIZE_BASE.

For more details, see Documentation/kcov.txt.

config KCOV_INSTRUMENT_ALL
bool &quot;Instrument all code by default&quot;
depends on KCOV
default y if KCOV
help
If you are doing generic system call fuzzing (like e.g. syzkaller),
then you will want to instrument the whole kernel and you should
say y here. If you are doing more targeted fuzzing (like e.g.
filesystem fuzzing with AFL) then you will want to enable coverage
for more specific subsets of files, and should say n here.

config DEBUG_SHIRQ
bool &quot;Debug shared IRQ handlers&quot;
depends on DEBUG_KERNEL
help
Enable this to generate a spurious interrupt as soon as a shared
interrupt handler is registered, and just before one is deregistered.
Drivers ought to be able to handle interrupts coming in at those
points; some don't and need to be caught.

menu &quot;Debug Lockups and Hangs&quot;

config LOCKUP_DETECTOR
bool &quot;Detect Hard and Soft Lockups&quot;
depends on DEBUG_KERNEL &amp;&amp; !S390
help
Say Y here to enable the kernel to act as a watchdog to detect
hard and soft lockups.

Softlockups are bugs that cause the kernel to loop in kernel
mode for more than 20 seconds, without giving other tasks a
chance to run.  The current stack trace is displayed upon
detection and the system will stay locked up.

Hardlockups are bugs that cause the CPU to loop in kernel mode
for more than 10 seconds, without letting other interrupts have a
chance to run.  The current stack trace is displayed upon detection
and the system will stay locked up.

The overhead should be minimal.  A periodic hrtimer runs to
generate interrupts and kick the watchdog task every 4 seconds.
An NMI is generated every 10 seconds or so to check for hardlockups.

The frequency of hrtimer and NMI events and the soft and hard lockup
thresholds can be controlled through the sysctl watchdog_thresh.

config HARDLOCKUP_DETECTOR
def_bool y
depends on LOCKUP_DETECTOR &amp;&amp; !HAVE_NMI_WATCHDOG
depends on PERF_EVENTS &amp;&amp; HAVE_PERF_EVENTS_NMI

config BOOTPARAM_HARDLOCKUP_PANIC
bool &quot;Panic (Reboot) On Hard Lockups&quot;
depends on HARDLOCKUP_DETECTOR
help
Say Y here to enable the kernel to panic on &quot;hard lockups&quot;,
which are bugs that cause the kernel to loop in kernel
mode with interrupts disabled for more than 10 seconds (configurable
using the watchdog_thresh sysctl).

Say N if unsure.

config BOOTPARAM_HARDLOCKUP_PANIC_VALUE
int
depends on HARDLOCKUP_DETECTOR
range 0 1
default 0 if !BOOTPARAM_HARDLOCKUP_PANIC
default 1 if BOOTPARAM_HARDLOCKUP_PANIC

config BOOTPARAM_SOFTLOCKUP_PANIC
bool &quot;Panic (Reboot) On Soft Lockups&quot;
depends on LOCKUP_DETECTOR
help
Say Y here to enable the kernel to panic on &quot;soft lockups&quot;,
which are bugs that cause the kernel to loop in kernel
mode for more than 20 seconds (configurable using the watchdog_thresh
sysctl), without giving other tasks a chance to run.

The panic can be used in combination with panic_timeout,
to cause the system to reboot automatically after a
lockup has been detected. This feature is useful for
high-availability systems that have uptime guarantees and
where a lockup must be resolved ASAP.

Say N if unsure.

config BOOTPARAM_SOFTLOCKUP_PANIC_VALUE
int
depends on LOCKUP_DETECTOR
range 0 1
default 0 if !BOOTPARAM_SOFTLOCKUP_PANIC
default 1 if BOOTPARAM_SOFTLOCKUP_PANIC

config DETECT_HUNG_TASK
bool &quot;Detect Hung Tasks&quot;
depends on DEBUG_KERNEL
default LOCKUP_DETECTOR
help
Say Y here to enable the kernel to detect &quot;hung tasks&quot;,
which are bugs that cause the task to be stuck in
uninterruptible &quot;D&quot; state indefinitely.

When a hung task is detected, the kernel will print the
current stack trace (which you should report), but the
task will stay in uninterruptible state. If lockdep is
enabled then all held locks will also be reported. This
feature has negligible overhead.

config DEFAULT_HUNG_TASK_TIMEOUT
int &quot;Default timeout for hung task detection (in seconds)&quot;
depends on DETECT_HUNG_TASK
default 120
help
This option controls the default timeout (in seconds) used
to determine when a task has become non-responsive and should
be considered hung.

It can be adjusted at runtime via the kernel.hung_task_timeout_secs
sysctl or by writing a value to
/proc/sys/kernel/hung_task_timeout_secs.

A timeout of 0 disables the check.  The default is two minutes.
Keeping the default should be fine in most cases.

config BOOTPARAM_HUNG_TASK_PANIC
bool &quot;Panic (Reboot) On Hung Tasks&quot;
depends on DETECT_HUNG_TASK
help
Say Y here to enable the kernel to panic on &quot;hung tasks&quot;,
which are bugs that cause the kernel to leave a task stuck
in uninterruptible &quot;D&quot; state.

The panic can be used in combination with panic_timeout,
to cause the system to reboot automatically after a
hung task has been detected. This feature is useful for
high-availability systems that have uptime guarantees and
where a hung tasks must be resolved ASAP.

Say N if unsure.

config BOOTPARAM_HUNG_TASK_PANIC_VALUE
int
depends on DETECT_HUNG_TASK
range 0 1
default 0 if !BOOTPARAM_HUNG_TASK_PANIC
default 1 if BOOTPARAM_HUNG_TASK_PANIC

config WQ_WATCHDOG
bool &quot;Detect Workqueue Stalls&quot;
depends on DEBUG_KERNEL
help
Say Y here to enable stall detection on workqueues.  If a
worker pool doesn't make forward progress on a pending work
item for over a given amount of time, 30s by default, a
warning message is printed along with dump of workqueue
state.  This can be configured through kernel parameter
&quot;workqueue.watchdog_thresh&quot; and its sysfs counterpart.

endmenu # &quot;Debug lockups and hangs&quot;

config PANIC_ON_OOPS
bool &quot;Panic on Oops&quot;
help
Say Y here to enable the kernel to panic when it oopses. This
has the same effect as setting oops=panic on the kernel command
line.

This feature is useful to ensure that the kernel does not do
anything erroneous after an oops which could result in data
corruption or other issues.

Say N if unsure.

config PANIC_ON_OOPS_VALUE
int
range 0 1
default 0 if !PANIC_ON_OOPS
default 1 if PANIC_ON_OOPS

config PANIC_TIMEOUT
int &quot;panic timeout&quot;
default 0
help
Set the timeout value (in seconds) until a reboot occurs when the
the kernel panics. If n = 0, then we wait forever. A timeout
value n &gt; 0 will wait n seconds before rebooting, while a timeout
value n &lt; 0 will reboot immediately.

config SCHED_DEBUG
bool &quot;Collect scheduler debugging info&quot;
depends on DEBUG_KERNEL &amp;&amp; PROC_FS
default y
help
If you say Y here, the /proc/sched_debug file will be provided
that can help debug the scheduler. The runtime overhead of this
option is minimal.

config SCHED_INFO
bool
default n

config SCHEDSTATS
bool &quot;Collect scheduler statistics&quot;
depends on DEBUG_KERNEL &amp;&amp; PROC_FS
select SCHED_INFO
help
If you say Y here, additional code will be inserted into the
scheduler and related routines to collect statistics about
scheduler behavior and provide them in /proc/schedstat.  These
stats may be useful for both tuning and debugging the scheduler
If you aren't debugging the scheduler or trying to tune a specific
application, you can say N to avoid the very slight overhead
this adds.

config SCHED_STACK_END_CHECK
bool &quot;Detect stack corruption on calls to schedule()&quot;
depends on DEBUG_KERNEL
default n
help
This option checks for a stack overrun on calls to schedule().
If the stack end location is found to be over written always panic as
the content of the corrupted region can no longer be trusted.
This is to ensure no erroneous behaviour occurs which could result in
data corruption or a sporadic crash at a later stage once the region
is examined. The runtime overhead introduced is minimal.

config DEBUG_TIMEKEEPING
bool &quot;Enable extra timekeeping sanity checking&quot;
help
This option will enable additional timekeeping sanity checks
which may be helpful when diagnosing issues where timekeeping
problems are suspected.

This may include checks in the timekeeping hotpaths, so this
option may have a (very small) performance impact to some
workloads.

If unsure, say N.

config TIMER_STATS
bool &quot;Collect kernel timers statistics&quot;
depends on DEBUG_KERNEL &amp;&amp; PROC_FS
help
If you say Y here, additional code will be inserted into the
timer routines to collect statistics about kernel timers being
reprogrammed. The statistics can be read from /proc/timer_stats.
The statistics collection is started by writing 1 to /proc/timer_stats,
writing 0 stops it. This feature is useful to collect information
about timer usage patterns in kernel and userspace. This feature
is lightweight if enabled in the kernel config but not activated
(it defaults to deactivated on bootup and will only be activated
if some application like powertop activates it explicitly).

config DEBUG_PREEMPT
bool &quot;Debug preemptible kernel&quot;
depends on DEBUG_KERNEL &amp;&amp; PREEMPT &amp;&amp; TRACE_IRQFLAGS_SUPPORT
default y
help
If you say Y here then the kernel will use a debug variant of the
commonly used smp_processor_id() function and will print warnings
if kernel code uses it in a preemption-unsafe way. Also, the kernel
will detect preemption count underflows.

menu &quot;Lock Debugging (spinlocks, mutexes, etc...)&quot;

config DEBUG_RT_MUTEXES
bool &quot;RT Mutex debugging, deadlock detection&quot;
depends on DEBUG_KERNEL &amp;&amp; RT_MUTEXES
help
This allows rt mutex semantics violations and rt mutex related
deadlocks (lockups) to be detected and reported automatically.

config DEBUG_SPINLOCK
bool &quot;Spinlock and rw-lock debugging: basic checks&quot;
depends on DEBUG_KERNEL
select UNINLINE_SPIN_UNLOCK
help
Say Y here and build SMP to catch missing spinlock initialization
and certain other kinds of spinlock errors commonly made.  This is
best used in conjunction with the NMI watchdog so that spinlock
deadlocks are also debuggable.

config DEBUG_MUTEXES
bool &quot;Mutex debugging: basic checks&quot;
depends on DEBUG_KERNEL
help
This feature allows mutex semantics violations to be detected and
reported.

config DEBUG_WW_MUTEX_SLOWPATH
bool &quot;Wait/wound mutex debugging: Slowpath testing&quot;
depends on DEBUG_KERNEL &amp;&amp; TRACE_IRQFLAGS_SUPPORT &amp;&amp; STACKTRACE_SUPPORT &amp;&amp; LOCKDEP_SUPPORT
select DEBUG_LOCK_ALLOC
select DEBUG_SPINLOCK
select DEBUG_MUTEXES
help
This feature enables slowpath testing for w/w mutex users by
injecting additional -EDEADLK wound/backoff cases. Together with
the full mutex checks enabled with (CONFIG_PROVE_LOCKING) this
will test all possible w/w mutex interface abuse with the
exception of simply not acquiring all the required locks.
Note that this feature can introduce significant overhead, so
it really should not be enabled in a production or distro kernel,
even a debug kernel.  If you are a driver writer, enable it.  If
you are a distro, do not.

config DEBUG_LOCK_ALLOC
bool &quot;Lock debugging: detect incorrect freeing of live locks&quot;
depends on DEBUG_KERNEL &amp;&amp; TRACE_IRQFLAGS_SUPPORT &amp;&amp; STACKTRACE_SUPPORT &amp;&amp; LOCKDEP_SUPPORT
select DEBUG_SPINLOCK
select DEBUG_MUTEXES
select LOCKDEP
help
This feature will check whether any held lock (spinlock, rwlock,
mutex or rwsem) is incorrectly freed by the kernel, via any of the
memory-freeing routines (kfree(), kmem_cache_free(), free_pages(),
vfree(), etc.), whether a live lock is incorrectly reinitialized via
spin_lock_init()/mutex_init()/etc., or whether there is any lock
held during task exit.

config PROVE_LOCKING
bool &quot;Lock debugging: prove locking correctness&quot;
depends on DEBUG_KERNEL &amp;&amp; TRACE_IRQFLAGS_SUPPORT &amp;&amp; STACKTRACE_SUPPORT &amp;&amp; LOCKDEP_SUPPORT
select LOCKDEP
select DEBUG_SPINLOCK
select DEBUG_MUTEXES
select DEBUG_LOCK_ALLOC
select TRACE_IRQFLAGS
default n
help
This feature enables the kernel to prove that all locking
that occurs in the kernel runtime is mathematically
correct: that under no circumstance could an arbitrary (and
not yet triggered) combination of observed locking
sequences (on an arbitrary number of CPUs, running an
arbitrary number of tasks and interrupt contexts) cause a
deadlock.

In short, this feature enables the kernel to report locking
related deadlocks before they actually occur.

The proof does not depend on how hard and complex a
deadlock scenario would be to trigger: how many
participant CPUs, tasks and irq-contexts would be needed
for it to trigger. The proof also does not depend on
timing: if a race and a resulting deadlock is possible
theoretically (no matter how unlikely the race scenario
is), it will be proven so and will immediately be
reported by the kernel (once the event is observed that
makes the deadlock theoretically possible).

If a deadlock is impossible (i.e. the locking rules, as
observed by the kernel, are mathematically correct), the
kernel reports nothing.

NOTE: this feature can also be enabled for rwlocks, mutexes
and rwsems - in which case all dependencies between these
different locking variants are observed and mapped too, and
the proof of observed correctness is also maintained for an
arbitrary combination of these separate locking variants.

For more details, see Documentation/locking/lockdep-design.txt.

config LOCKDEP
bool
depends on DEBUG_KERNEL &amp;&amp; TRACE_IRQFLAGS_SUPPORT &amp;&amp; STACKTRACE_SUPPORT &amp;&amp; LOCKDEP_SUPPORT
select STACKTRACE
select FRAME_POINTER if !MIPS &amp;&amp; !PPC &amp;&amp; !ARM_UNWIND &amp;&amp; !S390 &amp;&amp; !MICROBLAZE &amp;&amp; !ARC &amp;&amp; !SCORE
select KALLSYMS
select KALLSYMS_ALL

config LOCK_STAT
bool &quot;Lock usage statistics&quot;
depends on DEBUG_KERNEL &amp;&amp; TRACE_IRQFLAGS_SUPPORT &amp;&amp; STACKTRACE_SUPPORT &amp;&amp; LOCKDEP_SUPPORT
select LOCKDEP
select DEBUG_SPINLOCK
select DEBUG_MUTEXES
select DEBUG_LOCK_ALLOC
default n
help
This feature enables tracking lock contention points

For more details, see Documentation/locking/lockstat.txt

This also enables lock events required by &quot;perf lock&quot;,
subcommand of perf.
If you want to use &quot;perf lock&quot;, you also need to turn on
CONFIG_EVENT_TRACING.

CONFIG_LOCK_STAT defines &quot;contended&quot; and &quot;acquired&quot; lock events.
(CONFIG_LOCKDEP defines &quot;acquire&quot; and &quot;release&quot; events.)

config DEBUG_LOCKDEP
bool &quot;Lock dependency engine debugging&quot;
depends on DEBUG_KERNEL &amp;&amp; LOCKDEP
help
If you say Y here, the lock dependency engine will do
additional runtime checks to debug itself, at the price
of more runtime overhead.

config DEBUG_ATOMIC_SLEEP
bool &quot;Sleep inside atomic section checking&quot;
select PREEMPT_COUNT
depends on DEBUG_KERNEL
help
If you say Y here, various routines which may sleep will become very
noisy if they are called inside atomic sections: when a spinlock is
held, inside an rcu read side critical section, inside preempt disabled
sections, inside an interrupt, etc...

config DEBUG_LOCKING_API_SELFTESTS
bool &quot;Locking API boot-time self-tests&quot;
depends on DEBUG_KERNEL
help
Say Y here if you want the kernel to run a short self-test during
bootup. The self-test checks whether common types of locking bugs
are detected by debugging mechanisms or not. (if you disable
lock debugging then those bugs wont be detected of course.)
The following locking APIs are covered: spinlocks, rwlocks,
mutexes and rwsems.

config LOCK_TORTURE_TEST
tristate &quot;torture tests for locking&quot;
depends on DEBUG_KERNEL
select TORTURE_TEST
default n
help
This option provides a kernel module that runs torture tests
on kernel locking primitives.  The kernel module may be built
after the fact on the running kernel to be tested, if desired.

Say Y here if you want kernel locking-primitive torture tests
to be built into the kernel.
Say M if you want these torture tests to build as a module.
Say N if you are unsure.

endmenu # lock debugging

config TRACE_IRQFLAGS
bool
help
Enables hooks to interrupt enabling and disabling for
either tracing or lock debugging.

config STACKTRACE
bool &quot;Stack backtrace support&quot;
depends on STACKTRACE_SUPPORT
help
This option causes the kernel to create a /proc/pid/stack for
every process, showing its current stack trace.
It is also used by various kernel debugging features that require
stack trace generation.

config DEBUG_KOBJECT
bool &quot;kobject debugging&quot;
depends on DEBUG_KERNEL
help
If you say Y here, some extra kobject debugging messages will be sent
to the syslog.

config DEBUG_KOBJECT_RELEASE
bool &quot;kobject release debugging&quot;
depends on DEBUG_OBJECTS_TIMERS
help
kobjects are reference counted objects.  This means that their
last reference count put is not predictable, and the kobject can
live on past the point at which a driver decides to drop it's
initial reference to the kobject gained on allocation.  An
example of this would be a struct device which has just been
unregistered.

However, some buggy drivers assume that after such an operation,
the memory backing the kobject can be immediately freed.  This
goes completely against the principles of a refcounted object.

If you say Y here, the kernel will delay the release of kobjects
on the last reference count to improve the visibility of this
kind of kobject release bug.

config HAVE_DEBUG_BUGVERBOSE
bool

config DEBUG_BUGVERBOSE
bool &quot;Verbose BUG() reporting (adds 70K)&quot; if DEBUG_KERNEL &amp;&amp; EXPERT
depends on BUG &amp;&amp; (GENERIC_BUG || HAVE_DEBUG_BUGVERBOSE)
default y
help
Say Y here to make BUG() panics output the file name and line number
of the BUG call as well as the EIP and oops trace.  This aids
debugging but costs about 70-100K of memory.

config DEBUG_LIST
bool &quot;Debug linked list manipulation&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on extended checks in the linked-list
walking routines.

If unsure, say N.

config DEBUG_PI_LIST
bool &quot;Debug priority linked list manipulation&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on extended checks in the priority-ordered
linked-list (plist) walking routines.  This checks the entire
list multiple times during each manipulation.

If unsure, say N.

config DEBUG_SG
bool &quot;Debug SG table operations&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on checks on scatter-gather tables. This can
help find problems with drivers that do not properly initialize
their sg tables.

If unsure, say N.

config DEBUG_NOTIFIERS
bool &quot;Debug notifier call chains&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on sanity checking for notifier call chains.
This is most useful for kernel developers to make sure that
modules properly unregister themselves from notifier chains.
This is a relatively cheap check but if you care about maximum
performance, say N.

config DEBUG_CREDENTIALS
bool &quot;Debug credential management&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on some debug checking for credential
management.  The additional code keeps track of the number of
pointers from task_structs to any given cred struct, and checks to
see that this number never exceeds the usage count of the cred
struct.

Furthermore, if SELinux is enabled, this also checks that the
security pointer in the cred struct is never seen to be invalid.

If unsure, say N.

menu &quot;RCU Debugging&quot;

config PROVE_RCU
def_bool PROVE_LOCKING

config PROVE_RCU_REPEATEDLY
bool &quot;RCU debugging: don't disable PROVE_RCU on first splat&quot;
depends on PROVE_RCU
default n
help
By itself, PROVE_RCU will disable checking upon issuing the
first warning (or &quot;splat&quot;).  This feature prevents such
disabling, allowing multiple RCU-lockdep warnings to be printed
on a single reboot.

Say Y to allow multiple RCU-lockdep warnings per boot.

Say N if you are unsure.

config SPARSE_RCU_POINTER
bool &quot;RCU debugging: sparse-based checks for pointer usage&quot;
default n
help
This feature enables the __rcu sparse annotation for
RCU-protected pointers.  This annotation will cause sparse
to flag any non-RCU used of annotated pointers.  This can be
helpful when debugging RCU usage.  Please note that this feature
is not intended to enforce code cleanliness; it is instead merely
a debugging aid.

Say Y to make sparse flag questionable use of RCU-protected pointers

Say N if you are unsure.

config TORTURE_TEST
tristate
default n

config RCU_PERF_TEST
tristate &quot;performance tests for RCU&quot;
depends on DEBUG_KERNEL
select TORTURE_TEST
select SRCU
select TASKS_RCU
default n
help
This option provides a kernel module that runs performance
tests on the RCU infrastructure.  The kernel module may be built
after the fact on the running kernel to be tested, if desired.

Say Y here if you want RCU performance tests to be built into
the kernel.
Say M if you want the RCU performance tests to build as a module.
Say N if you are unsure.

config RCU_TORTURE_TEST
tristate &quot;torture tests for RCU&quot;
depends on DEBUG_KERNEL
select TORTURE_TEST
select SRCU
select TASKS_RCU
default n
help
This option provides a kernel module that runs torture tests
on the RCU infrastructure.  The kernel module may be built
after the fact on the running kernel to be tested, if desired.

Say Y here if you want RCU torture tests to be built into
the kernel.
Say M if you want the RCU torture tests to build as a module.
Say N if you are unsure.

config RCU_TORTURE_TEST_SLOW_PREINIT
bool &quot;Slow down RCU grace-period pre-initialization to expose races&quot;
depends on RCU_TORTURE_TEST
help
This option delays grace-period pre-initialization (the
propagation of CPU-hotplug changes up the rcu_node combining
tree) for a few jiffies between initializing each pair of
consecutive rcu_node structures.  This helps to expose races
involving grace-period pre-initialization, in other words, it
makes your kernel less stable.  It can also greatly increase
grace-period latency, especially on systems with large numbers
of CPUs.  This is useful when torture-testing RCU, but in
almost no other circumstance.

Say Y here if you want your system to crash and hang more often.
Say N if you want a sane system.

config RCU_TORTURE_TEST_SLOW_PREINIT_DELAY
int &quot;How much to slow down RCU grace-period pre-initialization&quot;
range 0 5
default 3
depends on RCU_TORTURE_TEST_SLOW_PREINIT
help
This option specifies the number of jiffies to wait between
each rcu_node structure pre-initialization step.

config RCU_TORTURE_TEST_SLOW_INIT
bool &quot;Slow down RCU grace-period initialization to expose races&quot;
depends on RCU_TORTURE_TEST
help
This option delays grace-period initialization for a few
jiffies between initializing each pair of consecutive
rcu_node structures.	This helps to expose races involving
grace-period initialization, in other words, it makes your
kernel less stable.  It can also greatly increase grace-period
latency, especially on systems with large numbers of CPUs.
This is useful when torture-testing RCU, but in almost no
other circumstance.

Say Y here if you want your system to crash and hang more often.
Say N if you want a sane system.

config RCU_TORTURE_TEST_SLOW_INIT_DELAY
int &quot;How much to slow down RCU grace-period initialization&quot;
range 0 5
default 3
depends on RCU_TORTURE_TEST_SLOW_INIT
help
This option specifies the number of jiffies to wait between
each rcu_node structure initialization.

config RCU_TORTURE_TEST_SLOW_CLEANUP
bool &quot;Slow down RCU grace-period cleanup to expose races&quot;
depends on RCU_TORTURE_TEST
help
This option delays grace-period cleanup for a few jiffies
between cleaning up each pair of consecutive rcu_node
structures.  This helps to expose races involving grace-period
cleanup, in other words, it makes your kernel less stable.
It can also greatly increase grace-period latency, especially
on systems with large numbers of CPUs.  This is useful when
torture-testing RCU, but in almost no other circumstance.

Say Y here if you want your system to crash and hang more often.
Say N if you want a sane system.

config RCU_TORTURE_TEST_SLOW_CLEANUP_DELAY
int &quot;How much to slow down RCU grace-period cleanup&quot;
range 0 5
default 3
depends on RCU_TORTURE_TEST_SLOW_CLEANUP
help
This option specifies the number of jiffies to wait between
each rcu_node structure cleanup operation.

config RCU_CPU_STALL_TIMEOUT
int &quot;RCU CPU stall timeout in seconds&quot;
depends on RCU_STALL_COMMON
range 3 300
default 21
help
If a given RCU grace period extends more than the specified
number of seconds, a CPU stall warning is printed.  If the
RCU grace period persists, additional CPU stall warnings are
printed at more widely spaced intervals.

config RCU_TRACE
bool &quot;Enable tracing for RCU&quot;
depends on DEBUG_KERNEL
select TRACE_CLOCK
help
This option provides tracing in RCU which presents stats
in debugfs for debugging RCU implementation.

Say Y here if you want to enable RCU tracing
Say N if you are unsure.

config RCU_EQS_DEBUG
bool &quot;Provide debugging asserts for adding NO_HZ support to an arch&quot;
depends on DEBUG_KERNEL
help
This option provides consistency checks in RCU's handling of
NO_HZ.  These checks have proven quite helpful in detecting
bugs in arch-specific NO_HZ code.

Say N here if you need ultimate kernel/user switch latencies
Say Y if you are unsure

endmenu # &quot;RCU Debugging&quot;

config DEBUG_WQ_FORCE_RR_CPU
bool &quot;Force round-robin CPU selection for unbound work items&quot;
depends on DEBUG_KERNEL
default n
help
Workqueue used to implicitly guarantee that work items queued
without explicit CPU specified are put on the local CPU.  This
guarantee is no longer true and while local CPU is still
preferred work items may be put on foreign CPUs.  Kernel
parameter &quot;workqueue.debug_force_rr_cpu&quot; is added to force
round-robin CPU selection to flush out usages which depend on the
now broken guarantee.  This config option enables the debug
feature by default.  When enabled, memory and cache locality will
be impacted.

config DEBUG_BLOCK_EXT_DEVT
bool &quot;Force extended block device numbers and spread them&quot;
depends on DEBUG_KERNEL
depends on BLOCK
default n
help
BIG FAT WARNING: ENABLING THIS OPTION MIGHT BREAK BOOTING ON
SOME DISTRIBUTIONS.  DO NOT ENABLE THIS UNLESS YOU KNOW WHAT
YOU ARE DOING.  Distros, please enable this and fix whatever
is broken.

Conventionally, block device numbers are allocated from
predetermined contiguous area.  However, extended block area
may introduce non-contiguous block device numbers.  This
option forces most block device numbers to be allocated from
the extended space and spreads them to discover kernel or
userland code paths which assume predetermined contiguous
device number allocation.

Note that turning on this debug option shuffles all the
device numbers for all IDE and SCSI devices including libata
ones, so root partition specified using device number
directly (via rdev or root=MAJ:MIN) won't work anymore.
Textual device names (root=/dev/sdXn) will continue to work.

Say N if you are unsure.

config CPU_HOTPLUG_STATE_CONTROL
bool &quot;Enable CPU hotplug state control&quot;
depends on DEBUG_KERNEL
depends on HOTPLUG_CPU
default n
help
Allows to write steps between &quot;offline&quot; and &quot;online&quot; to the CPUs
sysfs target file so states can be stepped granular. This is a debug
option for now as the hotplug machinery cannot be stopped and
restarted at arbitrary points yet.

Say N if your are unsure.

config NOTIFIER_ERROR_INJECTION
tristate &quot;Notifier error injection&quot;
depends on DEBUG_KERNEL
select DEBUG_FS
help
This option provides the ability to inject artificial errors to
specified notifier chain callbacks. It is useful to test the error
handling of notifier call chain failures.

Say N if unsure.

config CPU_NOTIFIER_ERROR_INJECT
tristate &quot;CPU notifier error injection module&quot;
depends on HOTPLUG_CPU &amp;&amp; NOTIFIER_ERROR_INJECTION
help
This option provides a kernel module that can be used to test
the error handling of the cpu notifiers by injecting artificial
errors to CPU notifier chain callbacks.  It is controlled through
debugfs interface under /sys/kernel/debug/notifier-error-inject/cpu

If the notifier call chain should be failed with some events
notified, write the error code to &quot;actions/&lt;notifier event&gt;/error&quot;.

Example: Inject CPU offline error (-1 == -EPERM)

# cd /sys/kernel/debug/notifier-error-inject/cpu
# echo -1 &gt; actions/CPU_DOWN_PREPARE/error
# echo 0 &gt; /sys/devices/system/cpu/cpu1/online
bash: echo: write error: Operation not permitted

To compile this code as a module, choose M here: the module will
be called cpu-notifier-error-inject.

If unsure, say N.

config PM_NOTIFIER_ERROR_INJECT
tristate &quot;PM notifier error injection module&quot;
depends on PM &amp;&amp; NOTIFIER_ERROR_INJECTION
default m if PM_DEBUG
help
This option provides the ability to inject artificial errors to
PM notifier chain callbacks.  It is controlled through debugfs
interface /sys/kernel/debug/notifier-error-inject/pm

If the notifier call chain should be failed with some events
notified, write the error code to &quot;actions/&lt;notifier event&gt;/error&quot;.

Example: Inject PM suspend error (-12 = -ENOMEM)

# cd /sys/kernel/debug/notifier-error-inject/pm/
# echo -12 &gt; actions/PM_SUSPEND_PREPARE/error
# echo mem &gt; /sys/power/state
bash: echo: write error: Cannot allocate memory

To compile this code as a module, choose M here: the module will
be called pm-notifier-error-inject.

If unsure, say N.

config OF_RECONFIG_NOTIFIER_ERROR_INJECT
tristate &quot;OF reconfig notifier error injection module&quot;
depends on OF_DYNAMIC &amp;&amp; NOTIFIER_ERROR_INJECTION
help
This option provides the ability to inject artificial errors to
OF reconfig notifier chain callbacks.  It is controlled
through debugfs interface under
/sys/kernel/debug/notifier-error-inject/OF-reconfig/

If the notifier call chain should be failed with some events
notified, write the error code to &quot;actions/&lt;notifier event&gt;/error&quot;.

To compile this code as a module, choose M here: the module will
be called of-reconfig-notifier-error-inject.

If unsure, say N.

config NETDEV_NOTIFIER_ERROR_INJECT
tristate &quot;Netdev notifier error injection module&quot;
depends on NET &amp;&amp; NOTIFIER_ERROR_INJECTION
help
This option provides the ability to inject artificial errors to
netdevice notifier chain callbacks.  It is controlled through debugfs
interface /sys/kernel/debug/notifier-error-inject/netdev

If the notifier call chain should be failed with some events
notified, write the error code to &quot;actions/&lt;notifier event&gt;/error&quot;.

Example: Inject netdevice mtu change error (-22 = -EINVAL)

# cd /sys/kernel/debug/notifier-error-inject/netdev
# echo -22 &gt; actions/NETDEV_CHANGEMTU/error
# ip link set eth0 mtu 1024
RTNETLINK answers: Invalid argument

To compile this code as a module, choose M here: the module will
be called netdev-notifier-error-inject.

If unsure, say N.

config FAULT_INJECTION
bool &quot;Fault-injection framework&quot;
depends on DEBUG_KERNEL
help
Provide fault-injection framework.
For more details, see Documentation/fault-injection/.

config FAILSLAB
bool &quot;Fault-injection capability for kmalloc&quot;
depends on FAULT_INJECTION
depends on SLAB || SLUB
help
Provide fault-injection capability for kmalloc.

config FAIL_PAGE_ALLOC
bool &quot;Fault-injection capabilitiy for alloc_pages()&quot;
depends on FAULT_INJECTION
help
Provide fault-injection capability for alloc_pages().

config FAIL_MAKE_REQUEST
bool &quot;Fault-injection capability for disk IO&quot;
depends on FAULT_INJECTION &amp;&amp; BLOCK
help
Provide fault-injection capability for disk IO.

config FAIL_IO_TIMEOUT
bool &quot;Fault-injection capability for faking disk interrupts&quot;
depends on FAULT_INJECTION &amp;&amp; BLOCK
help
Provide fault-injection capability on end IO handling. This
will make the block layer &quot;forget&quot; an interrupt as configured,
thus exercising the error handling.

Only works with drivers that use the generic timeout handling,
for others it wont do anything.

config FAIL_MMC_REQUEST
bool &quot;Fault-injection capability for MMC IO&quot;
depends on FAULT_INJECTION_DEBUG_FS &amp;&amp; MMC
help
Provide fault-injection capability for MMC IO.
This will make the mmc core return data errors. This is
useful to test the error handling in the mmc block device
and to test how the mmc host driver handles retries from
the block device.

config FAIL_FUTEX
bool &quot;Fault-injection capability for futexes&quot;
select DEBUG_FS
depends on FAULT_INJECTION &amp;&amp; FUTEX
help
Provide fault-injection capability for futexes.

config FAULT_INJECTION_DEBUG_FS
bool &quot;Debugfs entries for fault-injection capabilities&quot;
depends on FAULT_INJECTION &amp;&amp; SYSFS &amp;&amp; DEBUG_FS
help
Enable configuration of fault-injection capabilities via debugfs.

config FAULT_INJECTION_STACKTRACE_FILTER
bool &quot;stacktrace filter for fault-injection capabilities&quot;
depends on FAULT_INJECTION_DEBUG_FS &amp;&amp; STACKTRACE_SUPPORT
depends on !X86_64
select STACKTRACE
select FRAME_POINTER if !MIPS &amp;&amp; !PPC &amp;&amp; !S390 &amp;&amp; !MICROBLAZE &amp;&amp; !ARM_UNWIND &amp;&amp; !ARC &amp;&amp; !SCORE
help
Provide stacktrace filter for fault-injection capabilities

config LATENCYTOP
bool &quot;Latency measuring infrastructure&quot;
depends on DEBUG_KERNEL
depends on STACKTRACE_SUPPORT
depends on PROC_FS
select FRAME_POINTER if !MIPS &amp;&amp; !PPC &amp;&amp; !S390 &amp;&amp; !MICROBLAZE &amp;&amp; !ARM_UNWIND &amp;&amp; !ARC
select KALLSYMS
select KALLSYMS_ALL
select STACKTRACE
select SCHEDSTATS
select SCHED_DEBUG
help
Enable this option if you want to use the LatencyTOP tool
to find out which userspace is blocking on what kernel operations.

source kernel/trace/Kconfig

menu &quot;Runtime Testing&quot;

config LKDTM
tristate &quot;Linux Kernel Dump Test Tool Module&quot;
depends on DEBUG_FS
depends on BLOCK
default n
help
This module enables testing of the different dumping mechanisms by
inducing system failures at predefined crash points.
If you don't need it: say N
Choose M here to compile this code as a module. The module will be
called lkdtm.

Documentation on how to use the module can be found in
Documentation/fault-injection/provoke-crashes.txt

config TEST_LIST_SORT
bool &quot;Linked list sorting test&quot;
depends on DEBUG_KERNEL
help
Enable this to turn on 'list_sort()' function test. This test is
executed only once during system boot, so affects only boot time.

If unsure, say N.

config KPROBES_SANITY_TEST
bool &quot;Kprobes sanity tests&quot;
depends on DEBUG_KERNEL
depends on KPROBES
default n
help
This option provides for testing basic kprobes functionality on
boot. A sample kprobe, jprobe and kretprobe are inserted and
verified for functionality.

Say N if you are unsure.

config BACKTRACE_SELF_TEST
tristate &quot;Self test for the backtrace code&quot;
depends on DEBUG_KERNEL
default n
help
This option provides a kernel module that can be used to test
the kernel stack backtrace code. This option is not useful
for distributions or general kernels, but only for kernel
developers working on architecture code.

Note that if you want to also test saved backtraces, you will
have to enable STACKTRACE as well.

Say N if you are unsure.

config RBTREE_TEST
tristate &quot;Red-Black tree test&quot;
depends on DEBUG_KERNEL
help
A benchmark measuring the performance of the rbtree library.
Also includes rbtree invariant checks.

config INTERVAL_TREE_TEST
tristate &quot;Interval tree test&quot;
depends on m &amp;&amp; DEBUG_KERNEL
select INTERVAL_TREE
help
A benchmark measuring the performance of the interval tree library

config PERCPU_TEST
tristate &quot;Per cpu operations test&quot;
depends on m &amp;&amp; DEBUG_KERNEL
help
Enable this option to build test module which validates per-cpu
operations.

If unsure, say N.

config ATOMIC64_SELFTEST
bool &quot;Perform an atomic64_t self-test at boot&quot;
help
Enable this option to test the atomic64_t functions at boot.

If unsure, say N.

config ASYNC_RAID6_TEST
tristate &quot;Self test for hardware accelerated raid6 recovery&quot;
depends on ASYNC_RAID6_RECOV
select ASYNC_MEMCPY
---help---
This is a one-shot self test that permutes through the
recovery of all the possible two disk failure scenarios for a
N-disk array.  Recovery is performed with the asynchronous
raid6 recovery routines, and will optionally use an offload
engine if one is available.

If unsure, say N.

config TEST_HEXDUMP
tristate &quot;Test functions located in the hexdump module at runtime&quot;

config TEST_STRING_HELPERS
tristate &quot;Test functions located in the string_helpers module at runtime&quot;

config TEST_KSTRTOX
tristate &quot;Test kstrto*() family of functions at runtime&quot;

config TEST_PRINTF
tristate &quot;Test printf() family of functions at runtime&quot;

config TEST_BITMAP
tristate &quot;Test bitmap_*() family of functions at runtime&quot;
default n
help
Enable this option to test the bitmap functions at boot.

If unsure, say N.

config TEST_UUID
tristate &quot;Test functions located in the uuid module at runtime&quot;

config TEST_RHASHTABLE
tristate &quot;Perform selftest on resizable hash table&quot;
default n
help
Enable this option to test the rhashtable functions at boot.

If unsure, say N.

config TEST_HASH
tristate &quot;Perform selftest on hash functions&quot;
default n
help
Enable this option to test the kernel's integer (&lt;linux/hash,h&gt;)
and string (&lt;linux/stringhash.h&gt;) hash functions on boot
(or module load).

This is intended to help people writing architecture-specific
optimized versions.  If unsure, say N.

endmenu # runtime tests

config PROVIDE_OHCI1394_DMA_INIT
bool &quot;Remote debugging over FireWire early on boot&quot;
depends on PCI &amp;&amp; X86
help
If you want to debug problems which hang or crash the kernel early
on boot and the crashing machine has a FireWire port, you can use
this feature to remotely access the memory of the crashed machine
over FireWire. This employs remote DMA as part of the OHCI1394
specification which is now the standard for FireWire controllers.

With remote DMA, you can monitor the printk buffer remotely using
firescope and access all memory below 4GB using fireproxy from gdb.
Even controlling a kernel debugger is possible using remote DMA.

Usage:

If ohci1394_dma=early is used as boot parameter, it will initialize
all OHCI1394 controllers which are found in the PCI config space.

As all changes to the FireWire bus such as enabling and disabling
devices cause a bus reset and thereby disable remote DMA for all
devices, be sure to have the cable plugged and FireWire enabled on
the debugging host before booting the debug target for debugging.

This code (~1k) is freed after boot. By then, the firewire stack
in charge of the OHCI-1394 controllers should be used instead.

See Documentation/debugging-via-ohci1394.txt for more information.

config BUILD_DOCSRC
bool &quot;Build targets in Documentation/ tree&quot;
depends on HEADERS_CHECK
help
This option attempts to build objects from the source files in the
kernel Documentation/ tree.

Say N if you are unsure.

config DMA_API_DEBUG
bool &quot;Enable debugging of DMA-API usage&quot;
depends on HAVE_DMA_API_DEBUG
help
Enable this option to debug the use of the DMA API by device drivers.
With this option you will be able to detect common bugs in device
drivers like double-freeing of DMA mappings or freeing mappings that
were never allocated.

This also attempts to catch cases where a page owned by DMA is
accessed by the cpu in a way that could cause data corruption.  For
example, this enables cow_user_page() to check that the source page is
not undergoing DMA.

This option causes a performance degradation.  Use only if you want to
debug device drivers and dma interactions.

If unsure, say N.

config TEST_LKM
tristate &quot;Test module loading with 'hello world' module&quot;
default n
depends on m
help
This builds the &quot;test_module&quot; module that emits &quot;Hello, world&quot;
on printk when loaded. It is designed to be used for basic
evaluation of the module loading subsystem (for example when
validating module verification). It lacks any extra dependencies,
and will not normally be loaded by the system unless explicitly
requested by name.

If unsure, say N.

config TEST_USER_COPY
tristate &quot;Test user/kernel boundary protections&quot;
default n
depends on m
help
This builds the &quot;test_user_copy&quot; module that runs sanity checks
on the copy_to/from_user infrastructure, making sure basic
user/kernel boundary testing is working. If it fails to load,
a regression has been detected in the user/kernel memory boundary
protections.

If unsure, say N.

config TEST_BPF
tristate &quot;Test BPF filter functionality&quot;
default n
depends on m &amp;&amp; NET
help
This builds the &quot;test_bpf&quot; module that runs various test vectors
against the BPF interpreter or BPF JIT compiler depending on the
current setting. This is in particular useful for BPF JIT compiler
development, but also to run regression tests against changes in
the interpreter code. It also enables test stubs for eBPF maps and
verifier used by user space verifier testsuite.

If unsure, say N.

config TEST_FIRMWARE
tristate &quot;Test firmware loading via userspace interface&quot;
default n
depends on FW_LOADER
help
This builds the &quot;test_firmware&quot; module that creates a userspace
interface for testing firmware loading. This can be used to
control the triggering of firmware loading without needing an
actual firmware-using device. The contents can be rechecked by
userspace.

If unsure, say N.

config TEST_UDELAY
tristate &quot;udelay test driver&quot;
default n
help
This builds the &quot;udelay_test&quot; module that helps to make sure
that udelay() is working properly.

If unsure, say N.

config MEMTEST
bool &quot;Memtest&quot;
depends on HAVE_MEMBLOCK
---help---
This option adds a kernel parameter 'memtest', which allows memtest
to be set.
memtest=0, mean disabled; -- default
memtest=1, mean do 1 test pattern;
...
memtest=17, mean do 17 test patterns.
If you are unsure how to answer this question, answer N.

config TEST_STATIC_KEYS
tristate &quot;Test static keys&quot;
default n
depends on m
help
Test the static key interfaces.

If unsure, say N.

source &quot;samples/Kconfig&quot;

source &quot;lib/Kconfig.kgdb&quot;

source &quot;lib/Kconfig.ubsan&quot;

config ARCH_HAS_DEVMEM_IS_ALLOWED
bool

config STRICT_DEVMEM
bool &quot;Filter access to /dev/mem&quot;
depends on MMU
depends on ARCH_HAS_DEVMEM_IS_ALLOWED
default y if TILE || PPC
---help---
If this option is disabled, you allow userspace (root) access to all
of memory, including kernel and userspace memory. Accidental
access to this is obviously disastrous, but specific access can
be used by people debugging the kernel. Note that with PAT support
enabled, even in this case there are restrictions on /dev/mem
use due to the cache aliasing requirements.

If this option is switched on, and IO_STRICT_DEVMEM=n, the /dev/mem
file only allows userspace access to PCI space and the BIOS code and
data regions.  This is sufficient for dosemu and X and all common
users of /dev/mem.

If in doubt, say Y.

config IO_STRICT_DEVMEM
bool &quot;Filter I/O access to /dev/mem&quot;
depends on STRICT_DEVMEM
---help---
If this option is disabled, you allow userspace (root) access to all
io-memory regardless of whether a driver is actively using that
range.  Accidental access to this is obviously disastrous, but
specific access can be used by people debugging kernel drivers.

If this option is switched on, the /dev/mem file only allows
userspace access to *idle* io-memory ranges (see /proc/iomem) This
may break traditional users of /dev/mem (dosemu, legacy X, etc...)
if the driver using a given range cannot be disabled.

If in doubt, say Y.
</help>
				</entry>
			</container>
			<entry name="X86_VERBOSE_BOOTUP">
				<label>Enable verbose x86 bootup info messages</label>
				<help>Enables the informational output from the decompression stage
(e.g. bzImage) of the boot. If you disable this you will still
see errors. Disable this if you want silent bootup.</help>
			</entry>
			<entry name="EARLY_PRINTK">
				<label>Early printk&quot; if EXPERT</label>
				<help>Write kernel log output directly into the VGA buffer or to a serial
port.

This is useful for kernel debugging when your machine crashes very
early before the console code is initialized. For normal operation
it is not recommended because it looks ugly and doesn't cooperate
with klogd/syslogd or the X server. You should normally N here,
unless you want to debug such a crash.</help>
			</entry>
			<entry name="EARLY_PRINTK_DBGP">
				<label>Early printk via EHCI debug port</label>
				<help>Write kernel log output directly into the EHCI debug port.

This is useful for kernel debugging when your machine crashes very
early before the console code is initialized. For normal operation
it is not recommended because it looks ugly and doesn't cooperate
with klogd/syslogd or the X server. You should normally N here,
unless you want to debug such a crash. You need usb debug device.</help>
			</entry>
			<entry name="EARLY_PRINTK_EFI">
				<label>Early printk via the EFI framebuffer</label>
				<help>Write kernel log output directly into the EFI framebuffer.

This is useful for kernel debugging when your machine crashes very
early before the console code is initialized.</help>
			</entry>
			<entry name="X86_PTDUMP_CORE"/>
			<entry name="X86_PTDUMP">
				<label>Export kernel pagetable layout to userspace via debugfs</label>
				<help>Say Y here if you want to show the kernel pagetable layout in a
debugfs file. This information is only useful for kernel developers
who are working in architecture specific areas of the kernel.
It is probably not a good idea to enable this feature in a production
kernel.
If in doubt, say &quot;N&quot;</help>
			</entry>
			<entry name="EFI_PGT_DUMP">
				<label>Dump the EFI pagetable</label>
				<help>Enable this if you want to dump the EFI page table before
enabling virtual mode. This can be used to debug miscellaneous
issues with the mapping of the EFI runtime regions into that
table.</help>
			</entry>
			<entry name="DEBUG_RODATA_TEST">
				<label>Testcase for the marking rodata read-only</label>
				<help>This option enables a testcase for the setting rodata read-only
as well as for the change_page_attr() infrastructure.
If in doubt, say &quot;N&quot;</help>
			</entry>
			<entry name="DEBUG_WX">
				<label>Warn on W+X mappings at boot</label>
				<help>Generate a warning if any W+X mappings are found at boot.

This is useful for discovering cases where the kernel is leaving
W+X mappings after applying NX, as such mappings are a security risk.

Look for a message in dmesg output like this:

x86/mm: Checked W+X mappings: passed, no W+X pages found.

or like this, if the check failed:

x86/mm: Checked W+X mappings: FAILED, &lt;N&gt; W+X pages found.

Note that even if the check fails, your kernel is possibly
still fine, as W+X mappings are not a security hole in
themselves, what they do is that they make the exploitation
of other unfixed kernel bugs easier.

There is no runtime or memory usage effect of this option
once the kernel has booted up - it's a one time check.

If in doubt, say &quot;Y&quot;.</help>
			</entry>
			<entry name="DEBUG_SET_MODULE_RONX">
				<label>Set loadable kernel module data as NX and text as RO</label>
				<help>This option helps catch unintended modifications to loadable
kernel module's text and read-only data. It also prevents execution
of module data. Such protection may interfere with run-time code
patching and dynamic kernel tracing - and they might also protect
against certain classes of kernel exploits.
If in doubt, say &quot;N&quot;.</help>
			</entry>
			<entry name="DEBUG_NX_TEST">
				<label>Testcase for the NX non-executable stack feature</label>
				<help>This option enables a testcase for the CPU NX capability
and the software setup of this feature.
If in doubt, say &quot;N&quot;</help>
			</entry>
			<entry name="DOUBLEFAULT">
				<label>Enable doublefault exception handler&quot; if EXPERT</label>
				<help>This option allows trapping of rare doublefault exceptions that
would otherwise cause a system to silently reboot. Disabling this
option saves about 4k and might cause you much additional grey
hair.</help>
			</entry>
			<entry name="DEBUG_TLBFLUSH">
				<label>Set upper limit of TLB entries to flush one-by-one</label>
				<help>
X86-only for now.

This option allows the user to tune the amount of TLB entries the
kernel flushes one-by-one instead of doing a full TLB flush. In
certain situations, the former is cheaper. This is controlled by the
tlb_flushall_shift knob under /sys/kernel/debug/x86. If you set it
to -1, the code flushes the whole TLB unconditionally. Otherwise,
for positive values of it, the kernel will use single TLB entry
invalidating instructions according to the following formula:

flush_entries &lt;= active_tlb_entries / 2^tlb_flushall_shift

If in doubt, say &quot;N&quot;.

config IOMMU_DEBUG
bool &quot;Enable IOMMU debugging&quot;
depends on GART_IOMMU &amp;&amp; DEBUG_KERNEL
depends on X86_64
---help---
Force the IOMMU to on even when you have less than 4GB of
memory and add debugging code. On overflow always panic. And
allow to enable IOMMU leak tracing. Can be disabled at boot
time with iommu=noforce. This will also enable scatter gather
list merging.  Currently not recommended for production
code. When you use it make sure you have a big enough
IOMMU/AGP aperture.  Most of the options enabled by this can
be set more finegrained using the iommu= command line
options. See Documentation/x86/x86_64/boot-options.txt for more
details.

config IOMMU_STRESS
bool &quot;Enable IOMMU stress-test mode&quot;
---help---
This option disables various optimizations in IOMMU related
code to do real stress testing of the IOMMU code. This option
will cause a performance drop and should only be enabled for
testing.

config IOMMU_LEAK
bool &quot;IOMMU leak tracing&quot;
depends on IOMMU_DEBUG &amp;&amp; DMA_API_DEBUG
---help---
Add a simple leak tracer to the IOMMU code. This is useful when you
are debugging a buggy device driver that leaks IOMMU mappings.

config HAVE_MMIOTRACE_SUPPORT
def_bool y

config X86_DECODER_SELFTEST
bool &quot;x86 instruction decoder selftest&quot;
depends on DEBUG_KERNEL &amp;&amp; KPROBES
depends on !COMPILE_TEST
---help---
Perform x86 instruction decoder selftests at build time.
This option is useful for checking the sanity of x86 instruction
decoder code.
If unsure, say &quot;N&quot;.

#
# IO delay types:
#

config IO_DELAY_TYPE_0X80
int
default &quot;0&quot;

config IO_DELAY_TYPE_0XED
int
default &quot;1&quot;

config IO_DELAY_TYPE_UDELAY
int
default &quot;2&quot;

config IO_DELAY_TYPE_NONE
int
default &quot;3&quot;

choice
prompt &quot;IO delay type&quot;
default IO_DELAY_0X80

config IO_DELAY_0X80
bool &quot;port 0x80 based port-IO delay [recommended]&quot;
---help---
This is the traditional Linux IO delay used for in/out_p.
It is the most tested hence safest selection here.

config IO_DELAY_0XED
bool &quot;port 0xed based port-IO delay&quot;
---help---
Use port 0xed as the IO delay. This frees up port 0x80 which is
often used as a hardware-debug port.

config IO_DELAY_UDELAY
bool &quot;udelay based port-IO delay&quot;
---help---
Use udelay(2) as the IO delay method. This provides the delay
while not having any side-effect on the IO port space.

config IO_DELAY_NONE
bool &quot;no port-IO delay&quot;
---help---
No port-IO delay. Will break on old boxes that require port-IO
delay for certain operations. Should work on most new machines.

endchoice

if IO_DELAY_0X80
config DEFAULT_IO_DELAY_TYPE
int
default IO_DELAY_TYPE_0X80
endif

if IO_DELAY_0XED
config DEFAULT_IO_DELAY_TYPE
int
default IO_DELAY_TYPE_0XED
endif

if IO_DELAY_UDELAY
config DEFAULT_IO_DELAY_TYPE
int
default IO_DELAY_TYPE_UDELAY
endif

if IO_DELAY_NONE
config DEFAULT_IO_DELAY_TYPE
int
default IO_DELAY_TYPE_NONE
endif

config DEBUG_BOOT_PARAMS
bool &quot;Debug boot parameters&quot;
depends on DEBUG_KERNEL
depends on DEBUG_FS
---help---
This option will cause struct boot_params to be exported via debugfs.

config CPA_DEBUG
bool &quot;CPA self-test code&quot;
depends on DEBUG_KERNEL
---help---
Do change_page_attr() self-tests every 30 seconds.

config OPTIMIZE_INLINING
bool &quot;Allow gcc to uninline functions marked 'inline'&quot;
---help---
This option determines if the kernel forces gcc to inline the functions
developers have marked 'inline'. Doing so takes away freedom from gcc to
do what it thinks is best, which is desirable for the gcc 3.x series of
compilers. The gcc 4.x series have a rewritten inlining algorithm and
enabling this option will generate a smaller kernel there. Hopefully
this algorithm is so good that allowing gcc 4.x and above to make the
decision will become the default in the future. Until then this option
is there to test gcc for this.

If unsure, say N.

config DEBUG_ENTRY
bool &quot;Debug low-level entry code&quot;
depends on DEBUG_KERNEL
---help---
This option enables sanity checks in x86's low-level entry code.
Some of these sanity checks may slow down kernel entries and
exits or otherwise impact performance.

This is currently used to help test NMI code.

If unsure, say N.

config DEBUG_NMI_SELFTEST
bool &quot;NMI Selftest&quot;
depends on DEBUG_KERNEL &amp;&amp; X86_LOCAL_APIC
---help---
Enabling this option turns on a quick NMI selftest to verify
that the NMI behaves correctly.

This might help diagnose strange hangs that rely on NMI to
function properly.

If unsure, say N.

config DEBUG_IMR_SELFTEST
bool &quot;Isolated Memory Region self test&quot;
default n
depends on INTEL_IMR
---help---
This option enables automated sanity testing of the IMR code.
Some simple tests are run to verify IMR bounds checking, alignment
and overlapping. This option is really only useful if you are
debugging an IMR memory map or are modifying the IMR code and want to
test your changes.

If unsure say N here.

config X86_DEBUG_FPU
bool &quot;Debug the x86 FPU code&quot;
depends on DEBUG_KERNEL
default y
---help---
If this option is enabled then there will be extra sanity
checks and (boot time) debug printouts added to the kernel.
This debugging adds some small amount of runtime overhead
to the kernel.

If unsure, say N.

config PUNIT_ATOM_DEBUG
tristate &quot;ATOM Punit debug driver&quot;
select DEBUG_FS
select IOSF_MBI
---help---
This is a debug driver, which gets the power states
of all Punit North Complex devices. The power states of
each device is exposed as part of the debugfs interface.
The current power state can be read from
/sys/kernel/debug/punit_atom/dev_power_state

endmenu
</help>
			</entry>
		</container>
		<container name="Security_options">
			<label>Security options</label>
			<entry name="KEYS">
				<label>Enable access key retention support</label>
				<help>This option provides support for retaining authentication tokens and
access keys in the kernel.

It also includes provision of methods by which such keys might be
associated with a process so that network filesystems, encryption
support and the like can find them.

Furthermore, a special type of key is available that acts as keyring:
a searchable sequence of keys. Each process is equipped with access
to five standard keyrings: UID-specific, GID-specific, session,
process and thread.

If you are unsure as to whether this is required, answer N.</help>
			</entry>
			<entry name="PERSISTENT_KEYRINGS">
				<label>Enable register of persistent per-UID keyrings</label>
				<help>This option provides a register of persistent per-UID keyrings,
primarily aimed at Kerberos key storage.  The keyrings are persistent
in the sense that they stay around after all processes of that UID
have exited, not that they survive the machine being rebooted.

A particular keyring may be accessed by either the user whose keyring
it is or by a process with administrative privileges.  The active
LSMs gets to rule on which admin-level processes get to access the
cache.

Keyrings are created and added into the register upon demand and get
removed if they expire (a default timeout is set upon creation).</help>
			</entry>
			<entry name="BIG_KEYS">
				<label>Large payload keys</label>
				<help>This option provides support for holding large keys within the kernel
(for example Kerberos ticket caches).  The data may be stored out to
swapspace by tmpfs.

If you are unsure as to whether this is required, answer N.</help>
			</entry>
			<entry name="TRUSTED_KEYS">
				<label>TRUSTED KEYS</label>
				<help>This option provides support for creating, sealing, and unsealing
keys in the kernel. Trusted keys are random number symmetric keys,
generated and RSA-sealed by the TPM. The TPM only unseals the keys,
if the boot PCRs and other criteria match.  Userspace will only ever
see encrypted blobs.

If you are unsure as to whether this is required, answer N.</help>
			</entry>
			<entry name="ENCRYPTED_KEYS">
				<label>ENCRYPTED KEYS</label>
				<help>This option provides support for create/encrypting/decrypting keys
in the kernel.  Encrypted keys are kernel generated random numbers,
which are encrypted/decrypted with a 'master' symmetric key. The
'master' key can be either a trusted-key or user-key type.
Userspace only ever sees/stores encrypted blobs.

If you are unsure as to whether this is required, answer N.</help>
			</entry>
			<entry name="KEY_DH_OPERATIONS">
				<label>Diffie-Hellman operations on retained keys</label>
				<help>This option provides support for calculating Diffie-Hellman
public keys and shared secrets using values stored as keys
in the kernel.

If you are unsure as to whether this is required, answer N.
</help>
			</entry>
			<entry name="SECURITY_DMESG_RESTRICT">
				<label>Restrict unprivileged access to the kernel syslog</label>
				<help>This enforces restrictions on unprivileged users reading the kernel
syslog via dmesg(8).

If this option is not selected, no restrictions will be enforced
unless the dmesg_restrict sysctl is explicitly set to (1).

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_PERF_EVENTS_RESTRICT">
				<label>Restrict unprivileged use of performance events</label>
				<help>If you say Y here, the kernel.perf_event_paranoid sysctl
will be set to 3 by default, and no unprivileged use of the
perf_event_open syscall will be permitted unless it is
changed.</help>
			</entry>
			<entry name="SECURITY">
				<label>Enable different security models</label>
				<help>This allows you to choose different security modules to be
configured into your kernel.

If this option is not selected, the default Linux security
model will be used.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITYFS">
				<label>Enable the securityfs filesystem</label>
				<help>This will build the securityfs filesystem.  It is currently used by
the TPM bios character driver and IMA, an integrity provider.  It is
not used by SELinux or SMACK.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_NETWORK">
				<label>Socket and Networking Security Hooks</label>
				<help>This enables the socket and networking security hooks.
If enabled, a security module can use these hooks to
implement socket and networking access controls.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_NETWORK_XFRM">
				<label>XFRM (IPSec) Networking Security Hooks</label>
				<help>This enables the XFRM (IPSec) networking security hooks.
If enabled, a security module can use these hooks to
implement per-packet access controls based on labels
derived from IPSec policy.  Non-IPSec communications are
designated as unlabelled, and only sockets authorized
to communicate unlabelled data can send without using
IPSec.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_PATH">
				<label>Security hooks for pathname based access control</label>
				<help>This enables the security hooks for pathname based access control.
If enabled, a security module can use these hooks to
implement pathname based access controls.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="INTEL_TXT">
				<label>Enable Intel(R) Trusted Execution Technology (Intel(R) TXT)</label>
				<help>This option enables support for booting the kernel with the
Trusted Boot (tboot) module. This will utilize
Intel(R) Trusted Execution Technology to perform a measured launch
of the kernel. If the system does not support Intel(R) TXT, this
will have no effect.

Intel TXT will provide higher assurance of system configuration and
initial state as well as data reset protection.  This is used to
create a robust initial kernel measurement and verification, which
helps to ensure that kernel security mechanisms are functioning
correctly. This level of protection requires a root of trust outside
of the kernel itself.

Intel TXT also helps solve real end user concerns about having
confidence that their hardware is running the VMM or kernel that
it was configured with, especially since they may be responsible for
providing such assurances to VMs and services running on it.

See &lt;http://www.intel.com/technology/security/&gt; for more information
about Intel(R) TXT.
See &lt;http://tboot.sourceforge.net&gt; for more information about tboot.
See Documentation/intel_txt.txt for a description of how to enable
Intel TXT support in a kernel boot.

If you are unsure as to whether this is required, answer N.</help>
			</entry>
			<entry name="LSM_MMAP_MIN_ADDR">
				<label>Low address space for LSM to protect from user allocation</label>
				<help>This is the portion of low virtual memory which should be protected
from userspace allocation.  Keeping a user from writing to low pages
can help reduce the impact of kernel NULL pointer bugs.

For most ia64, ppc64 and x86 users with lots of address space
a value of 65536 is reasonable and should cause no problems.
On arm and other archs it should not be higher than 32768.
Programs which use vm86 functionality or have some need to map
this low address space will need the permission specific to the
systems running LSM.</help>
			</entry>
			<entry name="HAVE_HARDENED_USERCOPY_ALLOCATOR">
				<help>The heap allocator implements __check_heap_object() for
validating memory ranges against heap object sizes in
support of CONFIG_HARDENED_USERCOPY.</help>
			</entry>
			<entry name="HAVE_ARCH_HARDENED_USERCOPY">
				<help>The architecture supports CONFIG_HARDENED_USERCOPY by
calling check_object_size() just before performing the
userspace copies in the low level implementation of
copy_to_user() and copy_from_user().</help>
			</entry>
			<entry name="HARDENED_USERCOPY">
				<label>Harden memory copies between kernel and userspace</label>
				<help>This option checks for obviously wrong memory regions when
copying memory to/from the kernel (via copy_to_user() and
copy_from_user() functions) by rejecting memory ranges that
are larger than the specified heap object, span multiple
separately allocates pages, are not on the process stack,
or are part of the kernel text. This kills entire classes
of heap overflow exploits and similar kernel memory exposures.</help>
			</entry>
			<entry name="HARDENED_USERCOPY_PAGESPAN">
				<label>Refuse to copy allocations that span multiple pages</label>
				<help>When a multi-page allocation is done without __GFP_COMP,
hardened usercopy will reject attempts to copy it. There are,
however, several cases of this in the kernel that have not all
been removed. This config is intended to be used only while
trying to find such users.</help>
			</entry>
			<entry name="SECURITY_SELINUX">
				<label>NSA SELinux Support</label>
				<help>This selects NSA Security-Enhanced Linux (SELinux).
You will also need a policy configuration and a labeled filesystem.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SELINUX_BOOTPARAM">
				<label>NSA SELinux boot parameter</label>
				<help>This option adds a kernel parameter 'selinux', which allows SELinux
to be disabled at boot.  If this option is selected, SELinux
functionality can be disabled with selinux=0 on the kernel
command line.  The purpose of this option is to allow a single
kernel image to be distributed with SELinux built in, but not
necessarily enabled.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SELINUX_BOOTPARAM_VALUE">
				<label>NSA SELinux boot parameter default value</label>
				<help>This option sets the default value for the kernel parameter
'selinux', which allows SELinux to be disabled at boot.  If this
option is set to 0 (zero), the SELinux kernel parameter will
default to 0, disabling SELinux at bootup.  If this option is
set to 1 (one), the SELinux kernel parameter will default to 1,
enabling SELinux at bootup.

If you are unsure how to answer this question, answer 1.</help>
			</entry>
			<entry name="SECURITY_SELINUX_DISABLE">
				<label>NSA SELinux runtime disable</label>
				<help>This option enables writing to a selinuxfs node 'disable', which
allows SELinux to be disabled at runtime prior to the policy load.
SELinux will then remain disabled until the next boot.
This option is similar to the selinux=0 boot parameter, but is to
support runtime disabling of SELinux, e.g. from /sbin/init, for
portability across platforms where boot parameters are difficult
to employ.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SELINUX_DEVELOP">
				<label>NSA SELinux Development Support</label>
				<help>This enables the development support option of NSA SELinux,
which is useful for experimenting with SELinux and developing
policies.  If unsure, say Y.  With this option enabled, the
kernel will start in permissive mode (log everything, deny nothing)
unless you specify enforcing=1 on the kernel command line.  You
can interactively toggle the kernel between enforcing mode and
permissive mode (if permitted by the policy) via /selinux/enforce.</help>
			</entry>
			<entry name="SECURITY_SELINUX_AVC_STATS">
				<label>NSA SELinux AVC Statistics</label>
				<help>This option collects access vector cache statistics to
/selinux/avc/cache_stats, which may be monitored via
tools such as avcstat.</help>
			</entry>
			<entry name="SECURITY_SELINUX_CHECKREQPROT_VALUE">
				<label>NSA SELinux checkreqprot default value</label>
				<help>This option sets the default value for the 'checkreqprot' flag
that determines whether SELinux checks the protection requested
by the application or the protection that will be applied by the
kernel (including any implied execute for read-implies-exec) for
mmap and mprotect calls.  If this option is set to 0 (zero),
SELinux will default to checking the protection that will be applied
by the kernel.  If this option is set to 1 (one), SELinux will
default to checking the protection requested by the application.
The checkreqprot flag may be changed from the default via the
'checkreqprot=' boot parameter.  It may also be changed at runtime
via /selinux/checkreqprot if authorized by policy.

If you are unsure how to answer this question, answer 0.</help>
			</entry>
			<entry name="SECURITY_SELINUX_POLICYDB_VERSION_MAX">
				<label>NSA SELinux maximum supported policy format version</label>
				<help>This option enables the maximum policy format version supported
by SELinux to be set to a particular value.  This value is reported
to userspace via /selinux/policyvers and used at policy load time.
It can be adjusted downward to support legacy userland (init) that
does not correctly handle kernels that support newer policy versions.

Examples:
For the Fedora Core 3 or 4 Linux distributions, enable this option
and set the value via the next option. For Fedora Core 5 and later,
do not enable this option.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE">
				<label>NSA SELinux maximum supported policy format version value</label>
				<help>This option sets the value for the maximum policy format version
supported by SELinux.

Examples:
For Fedora Core 3, use 18.
For Fedora Core 4, use 19.

If you are unsure how to answer this question, look for the
policy format version supported by your policy toolchain, by
running 'checkpolicy -V'. Or look at what policy you have
installed under /etc/selinux/$SELINUXTYPE/policy, where
SELINUXTYPE is defined in your /etc/selinux/config.

</help>
			</entry>
			<entry name="SECURITY_SMACK">
				<label>Simplified Mandatory Access Control Kernel Support</label>
				<help>This selects the Simplified Mandatory Access Control Kernel.
Smack is useful for sensitivity, integrity, and a variety
of other mandatory security schemes.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SMACK_BRINGUP">
				<label>Reporting on access granted by Smack rules</label>
				<help>Enable the bring-up (&quot;b&quot;) access mode in Smack rules.
When access is granted by a rule with the &quot;b&quot; mode a
message about the access requested is generated. The
intention is that a process can be granted a wide set
of access initially with the bringup mode set on the
rules. The developer can use the information to
identify which rules are necessary and what accesses
may be inappropriate. The developer can reduce the
access rule set once the behavior is well understood.
This is a superior mechanism to the oft abused
&quot;permissive&quot; mode of other systems.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_SMACK_NETFILTER">
				<label>Packet marking using secmarks for netfilter</label>
				<help>This enables security marking of network packets using
Smack labels.
If you are unsure how to answer this question, answer N.
</help>
			</entry>
			<entry name="SECURITY_TOMOYO">
				<label>TOMOYO Linux Support</label>
				<help>This selects TOMOYO Linux, pathname-based access control.
Required userspace tools and further information may be
found at &lt;http://tomoyo.sourceforge.jp/&gt;.
If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_TOMOYO_MAX_ACCEPT_ENTRY">
				<label>Default maximal count for learning mode</label>
				<help>This is the default value for maximal ACL entries
that are automatically appended into policy at &quot;learning mode&quot;.
Some programs access thousands of objects, so running
such programs in &quot;learning mode&quot; dulls the system response
and consumes much memory.
This is the safeguard for such programs.</help>
			</entry>
			<entry name="SECURITY_TOMOYO_MAX_AUDIT_LOG">
				<label>Default maximal count for audit log</label>
				<help>This is the default value for maximal entries for
audit logs that the kernel can hold on memory.
You can read the log via /sys/kernel/security/tomoyo/audit.
If you don't need audit logs, you may set this value to 0.</help>
			</entry>
			<entry name="SECURITY_TOMOYO_OMIT_USERSPACE_LOADER">
				<label>Activate without calling userspace policy loader.</label>
				<help>Say Y here if you want to activate access control as soon as built-in
policy was loaded. This option will be useful for systems where
operations which can lead to the hijacking of the boot sequence are
needed before loading the policy. For example, you can activate
immediately after loading the fixed part of policy which will allow
only operations needed for mounting a partition which contains the
variant part of policy and verifying (e.g. running GPG check) and
loading the variant part of policy. Since you can start using
enforcing mode from the beginning, you can reduce the possibility of
hijacking the boot sequence.</help>
			</entry>
			<entry name="SECURITY_TOMOYO_POLICY_LOADER">
				<label>Location of userspace policy loader</label>
				<help>This is the default pathname of policy loader which is called before
activation. You can override this setting via TOMOYO_loader= kernel
command line option.</help>
			</entry>
			<entry name="SECURITY_TOMOYO_ACTIVATION_TRIGGER">
				<label>Trigger for calling userspace policy loader</label>
				<help>This is the default pathname of activation trigger.
You can override this setting via TOMOYO_trigger= kernel command line
option. For example, if you pass init=/bin/systemd option, you may
want to also pass TOMOYO_trigger=/bin/systemd option.
</help>
			</entry>
			<entry name="SECURITY_APPARMOR">
				<label>AppArmor support</label>
				<help>This enables the AppArmor security module.
Required userspace tools (if they are not included in your
distribution) and further information may be found at
http://apparmor.wiki.kernel.org

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_APPARMOR_BOOTPARAM_VALUE">
				<label>AppArmor boot parameter default value</label>
				<help>This option sets the default value for the kernel parameter
'apparmor', which allows AppArmor to be enabled or disabled
at boot.  If this option is set to 0 (zero), the AppArmor
kernel parameter will default to 0, disabling AppArmor at
boot.  If this option is set to 1 (one), the AppArmor
kernel parameter will default to 1, enabling AppArmor at
boot.

If you are unsure how to answer this question, answer 1.</help>
			</entry>
			<entry name="SECURITY_APPARMOR_STATS">
				<label>enable debug statistics</label>
				<help>This enables keeping statistics on various internal structures
and functions in apparmor.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="SECURITY_APPARMOR_UNCONFINED_INIT">
				<label>Set init to unconfined on boot</label>
				<help>This option determines policy behavior during early boot by
placing the init process in the unconfined state, or the
'default' profile.

This option determines policy behavior during early boot by
placing the init process in the unconfined state, or the
'default' profile.

'Y' means init and its children are not confined, unless the
init process is re-execed after a policy load; loaded policy
will only apply to processes started after the load.

'N' means init and its children are confined in a profile
named 'default', which can be replaced later and thus
provide for confinement for processes started early at boot,
though not confined during early boot.

If you are unsure how to answer this question, answer Y.</help>
			</entry>
			<entry name="SECURITY_APPARMOR_HASH">
				<label>Enable introspection of sha1 hashes for loaded profiles</label>
				<help>This option selects whether introspection of loaded policy
is available to userspace via the apparmor filesystem.</help>
			</entry>
			<entry name="SECURITY_APPARMOR_HASH_DEFAULT">
				<label>Enable policy hash introspection by default</label>
				<help>This option selects whether sha1 hashing of loaded policy
is enabled by default. The generation of sha1 hashes for
loaded policy provide system administrators a quick way
to verify that policy in the kernel matches what is expected,
however it can slow down policy load on some devices. In
these cases policy hashing can be disabled by default and
enabled only if needed.
</help>
			</entry>
			<entry name="SECURITY_LOADPIN">
				<label>Pin load of kernel files (modules, fw, etc) to one filesystem</label>
				<help>Any files read through the kernel file reading interface
(kernel modules, firmware, kexec images, security policy)
can be pinned to the first filesystem used for loading. When
enabled, any files that come from other filesystems will be
rejected. This is best used on systems without an initrd that
have a root filesystem backed by a read-only device such as
dm-verity or a CDROM.</help>
			</entry>
			<entry name="SECURITY_LOADPIN_ENABLED">
				<label>Enforce LoadPin at boot</label>
				<help>If selected, LoadPin will enforce pinning at boot. If not
selected, it can be enabled at boot with the kernel parameter
&quot;loadpin.enabled=1&quot;.
</help>
			</entry>
			<entry name="SECURITY_YAMA">
				<label>Yama support</label>
				<help>This selects Yama, which extends DAC support with additional
system-wide security settings beyond regular Linux discretionary
access controls. Currently available is ptrace scope restriction.
Like capabilities, this security module stacks with other LSMs.
Further information can be found in Documentation/security/Yama.txt.

If you are unsure how to answer this question, answer N.
</help>
			</entry>
			<entry name="INTEGRITY">
				<label>Integrity subsystem</label>
				<help>This option enables the integrity subsystem, which is comprised
of a number of different components including the Integrity
Measurement Architecture (IMA), Extended Verification Module
(EVM), IMA-appraisal extension, digital signature verification
extension and audit measurement log support.

Each of these components can be enabled/disabled separately.
Refer to the individual components for additional details.</help>
			</entry>
			<entry name="INTEGRITY_SIGNATURE">
				<label>Digital signature verification using multiple keyrings</label>
				<help>This option enables digital signature verification support
using multiple keyrings. It defines separate keyrings for each
of the different use cases - evm, ima, and modules.
Different keyrings improves search performance, but also allow
to &quot;lock&quot; certain keyring to prevent adding new keys.
This is useful for evm and module keyrings, when keys are
usually only added from initramfs.</help>
			</entry>
			<entry name="INTEGRITY_ASYMMETRIC_KEYS">
				<label>Enable asymmetric keys support</label>
				<help>This option enables digital signature verification using
asymmetric keys.</help>
			</entry>
			<entry name="INTEGRITY_TRUSTED_KEYRING">
				<label>Require all keys on the integrity keyrings be signed</label>
				<help>This option requires that all keys added to the .ima and
.evm keyrings be signed by a key on the system trusted
keyring.</help>
			</entry>
			<entry name="INTEGRITY_AUDIT">
				<label>Enables integrity auditing support </label>
				<help>In addition to enabling integrity auditing support, this
option adds a kernel parameter 'integrity_audit', which
controls the level of integrity auditing messages.
0 - basic integrity auditing messages (default)
1 - additional integrity auditing messages

Additional informational integrity auditing messages would
be enabled by specifying 'integrity_audit=1' on the kernel
command line.</help>
			</entry>
			<entry name="IMA">
				<label>Integrity Measurement Architecture(IMA)</label>
				<help>The Trusted Computing Group(TCG) runtime Integrity
Measurement Architecture(IMA) maintains a list of hash
values of executables and other sensitive system files,
as they are read or executed. If an attacker manages
to change the contents of an important system file
being measured, we can tell.

If your system has a TPM chip, then IMA also maintains
an aggregate integrity value over this list inside the
TPM hardware, so that the TPM can prove to a third party
whether or not critical system files have been modified.
Read &lt;http://www.usenix.org/events/sec04/tech/sailer.html&gt;
to learn more about IMA.
If unsure, say N.</help>
			</entry>
			<entry name="IMA_MEASURE_PCR_IDX">
				<help>IMA_MEASURE_PCR_IDX determines the TPM PCR register index
that IMA uses to maintain the integrity aggregate of the
measurement list.  If unsure, use the default 10.</help>
			</entry>
			<entry name="IMA_LSM_RULES">
				<help>Disabling this option will disregard LSM based policy rules.</help>
			</entry>
			<entry name="IMA_TEMPLATE">
				<label>ima</label>
			</entry>
			<entry name="IMA_NG_TEMPLATE">
				<label>ima-ng (default)</label>
			</entry>
			<entry name="IMA_SIG_TEMPLATE">
				<label>ima-sig</label>
			</entry>
			<entry name="IMA_DEFAULT_TEMPLATE"/>
			<entry name="IMA_DEFAULT_HASH_SHA1">
				<label>SHA1 (default)</label>
			</entry>
			<entry name="IMA_DEFAULT_HASH_SHA256">
				<label>SHA256</label>
			</entry>
			<entry name="IMA_DEFAULT_HASH_SHA512">
				<label>SHA512</label>
			</entry>
			<entry name="IMA_DEFAULT_HASH_WP512">
				<label>WP512</label>
			</entry>
			<entry name="IMA_DEFAULT_HASH"/>
			<entry name="IMA_WRITE_POLICY">
				<label>Enable multiple writes to the IMA policy</label>
				<help>IMA policy can now be updated multiple times.  The new rules get
appended to the original policy.  Have in mind that the rules are
scanned in FIFO order so be careful when you design and add new ones.

If unsure, say N.</help>
			</entry>
			<entry name="IMA_READ_POLICY">
				<label>Enable reading back the current IMA policy</label>
				<help>It is often useful to be able to read back the IMA policy.  It is
even more important after introducing CONFIG_IMA_WRITE_POLICY.
This option allows the root user to see the current policy rules.</help>
			</entry>
			<entry name="IMA_APPRAISE">
				<label>Appraise integrity measurements</label>
				<help>This option enables local measurement integrity appraisal.
It requires the system to be labeled with a security extended
attribute containing the file hash measurement.  To protect
the security extended attributes from offline attack, enable
and configure EVM.

For more information on integrity appraisal refer to:
&lt;http://linux-ima.sourceforge.net&gt;
If unsure, say N.</help>
			</entry>
			<entry name="IMA_TRUSTED_KEYRING">
				<label>Require all keys on the .ima keyring be signed (deprecated)</label>
				<help>This option requires that all keys added to the .ima
keyring be signed by a key on the system trusted keyring.

This option is deprecated in favor of INTEGRITY_TRUSTED_KEYRING</help>
			</entry>
			<entry name="IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY">
				<label>Permit keys validly signed by a built-in or secondary CA cert (EXPERIMENTAL)</label>
				<help>Keys may be added to the IMA or IMA blacklist keyrings, if the
key is validly signed by a CA cert in the system built-in or
secondary trusted keyrings.

Intermediate keys between those the kernel has compiled in and the
IMA keys to be added may be added to the system secondary keyring,
provided they are validly signed by a key already resident in the
built-in or secondary trusted keyrings.</help>
			</entry>
			<entry name="IMA_BLACKLIST_KEYRING">
				<label>Create IMA machine owner blacklist keyrings (EXPERIMENTAL)</label>
				<help>This option creates an IMA blacklist keyring, which contains all
revoked IMA keys.  It is consulted before any other keyring.  If
the search is successful the requested operation is rejected and
an error is returned to the caller.</help>
			</entry>
			<entry name="IMA_LOAD_X509">
				<label>Load X509 certificate onto the '.ima' trusted keyring</label>
				<help>File signature verification is based on the public keys
loaded on the .ima trusted keyring. These public keys are
X509 certificates signed by a trusted key on the
.system keyring.  This option enables X509 certificate
loading from the kernel onto the '.ima' trusted keyring.</help>
			</entry>
			<entry name="IMA_X509_PATH">
				<label>IMA X509 certificate path</label>
				<help>This option defines IMA X509 certificate path.</help>
			</entry>
			<entry name="IMA_APPRAISE_SIGNED_INIT">
				<label>Require signed user-space initialization</label>
				<help>This option requires user-space init to be signed.
</help>
			</entry>
			<entry name="EVM">
				<label>EVM support</label>
				<help>EVM protects a file's security extended attributes against
integrity attacks.

If you are unsure how to answer this question, answer N.</help>
			</entry>
			<entry name="EVM_ATTR_FSUUID">
				<label>FSUUID (version 2)</label>
				<help>Include filesystem UUID for HMAC calculation.

Default value is 'selected', which is former version 2.
if 'not selected', it is former version 1

WARNING: changing the HMAC calculation method or adding
additional info to the calculation, requires existing EVM
labeled file systems to be relabeled.</help>
			</entry>
			<entry name="EVM_EXTRA_SMACK_XATTRS">
				<label>Additional SMACK xattrs</label>
				<help>Include additional SMACK xattrs for HMAC calculation.

In addition to the original security xattrs (eg. security.selinux,
security.SMACK64, security.capability, and security.ima) included
in the HMAC calculation, enabling this option includes newly defined
Smack xattrs: security.SMACK64EXEC, security.SMACK64TRANSMUTE and
security.SMACK64MMAP.

WARNING: changing the HMAC calculation method or adding
additional info to the calculation, requires existing EVM
labeled file systems to be relabeled.</help>
			</entry>
			<entry name="EVM_LOAD_X509">
				<label>Load an X509 certificate onto the '.evm' trusted keyring</label>
				<help>Load an X509 certificate onto the '.evm' trusted keyring.

This option enables X509 certificate loading from the kernel
onto the '.evm' trusted keyring.  A public key can be used to
verify EVM integrity starting from the 'init' process.</help>
			</entry>
			<entry name="EVM_X509_PATH">
				<label>EVM X509 certificate path</label>
				<help>This option defines X509 certificate path.
</help>
			</entry>
			<entry name="DEFAULT_SECURITY_SELINUX">
				<label>SELinux&quot; if SECURITY_SELINUX=y</label>
			</entry>
			<entry name="DEFAULT_SECURITY_SMACK">
				<label>Simplified Mandatory Access Control&quot; if SECURITY_SMACK=y</label>
			</entry>
			<entry name="DEFAULT_SECURITY_TOMOYO">
				<label>TOMOYO&quot; if SECURITY_TOMOYO=y</label>
			</entry>
			<entry name="DEFAULT_SECURITY_APPARMOR">
				<label>AppArmor&quot; if SECURITY_APPARMOR=y</label>
			</entry>
			<entry name="DEFAULT_SECURITY_DAC">
				<label>Unix Discretionary Access Controls</label>
			</entry>
			<entry name="DEFAULT_SECURITY"/>
		</container>
		<entry name="XOR_BLOCKS"/>
		<entry name="ASYNC_CORE"/>
		<entry name="ASYNC_MEMCPY"/>
		<entry name="ASYNC_XOR"/>
		<entry name="ASYNC_PQ"/>
		<entry name="ASYNC_RAID6_RECOV"/>
		<entry name="ASYNC_TX_DISABLE_PQ_VAL_DMA"/>
		<entry name="ASYNC_TX_DISABLE_XOR_VAL_DMA"/>
		<entry name="CRYPTO">
			<label>Cryptographic API</label>
			<help>This option provides the core Cryptographic API.</help>
		</entry>
		<entry name="CRYPTO_FIPS">
			<label>FIPS 200 compliance</label>
			<help>This options enables the fips boot option which is
required if you want to system to operate in a FIPS 200
certification.  You should say no unless you know what
this is.</help>
		</entry>
		<entry name="CRYPTO_ALGAPI">
			<help>This option provides the API for cryptographic algorithms.</help>
		</entry>
		<entry name="CRYPTO_ALGAPI2"/>
		<entry name="CRYPTO_AEAD"/>
		<entry name="CRYPTO_AEAD2"/>
		<entry name="CRYPTO_BLKCIPHER"/>
		<entry name="CRYPTO_BLKCIPHER2"/>
		<entry name="CRYPTO_HASH"/>
		<entry name="CRYPTO_HASH2"/>
		<entry name="CRYPTO_RNG"/>
		<entry name="CRYPTO_RNG2"/>
		<entry name="CRYPTO_RNG_DEFAULT"/>
		<entry name="CRYPTO_AKCIPHER2"/>
		<entry name="CRYPTO_AKCIPHER"/>
		<entry name="CRYPTO_KPP2"/>
		<entry name="CRYPTO_KPP"/>
		<entry name="CRYPTO_RSA">
			<label>RSA algorithm</label>
			<help>Generic implementation of the RSA public key algorithm.</help>
		</entry>
		<entry name="CRYPTO_DH">
			<label>Diffie-Hellman algorithm</label>
			<help>Generic implementation of the Diffie-Hellman algorithm.</help>
		</entry>
		<entry name="CRYPTO_ECDH">
			<label>ECDH algorithm</label>
			<help>Generic implementation of the ECDH algorithm</help>
		</entry>
		<entry name="CRYPTO_MANAGER">
			<label>Cryptographic algorithm manager</label>
			<help>Create default cryptographic template instantiations such as
cbc(aes).</help>
		</entry>
		<entry name="CRYPTO_MANAGER2"/>
		<entry name="CRYPTO_USER">
			<label>Userspace cryptographic algorithm configuration</label>
			<help>Userspace configuration for cryptographic instantiations such as
cbc(aes).</help>
		</entry>
		<entry name="CRYPTO_MANAGER_DISABLE_TESTS">
			<label>Disable run-time self tests</label>
			<help>Disable run-time self tests that normally take place at
algorithm registration.</help>
		</entry>
		<entry name="CRYPTO_GF128MUL">
			<label>GF(2^128) multiplication functions</label>
			<help>Efficient table driven implementation of multiplications in the
field GF(2^128).  This is needed by some cypher modes. This
option will be selected automatically if you select such a
cipher mode.  Only select this option by hand if you expect to load
an external module that requires these functions.</help>
		</entry>
		<entry name="CRYPTO_NULL">
			<label>Null algorithms</label>
			<help>These are 'Null' algorithms, used by IPsec, which do nothing.</help>
		</entry>
		<entry name="CRYPTO_NULL2"/>
		<entry name="CRYPTO_PCRYPT">
			<label>Parallel crypto engine</label>
			<help>This converts an arbitrary crypto algorithm into a parallel
algorithm that executes in kernel threads.</help>
		</entry>
		<entry name="CRYPTO_WORKQUEUE"/>
		<entry name="CRYPTO_CRYPTD">
			<label>Software async crypto daemon</label>
			<help>This is a generic software asynchronous crypto daemon that
converts an arbitrary synchronous software crypto algorithm
into an asynchronous algorithm that executes in a kernel thread.</help>
		</entry>
		<entry name="CRYPTO_MCRYPTD">
			<label>Software async multi-buffer crypto daemon</label>
			<help>This is a generic software asynchronous crypto daemon that
provides the kernel thread to assist multi-buffer crypto
algorithms for submitting jobs and flushing jobs in multi-buffer
crypto algorithms.  Multi-buffer crypto algorithms are executed
in the context of this kernel thread and drivers can post
their crypto request asynchronously to be processed by this daemon.</help>
		</entry>
		<entry name="CRYPTO_AUTHENC">
			<label>Authenc support</label>
			<help>Authenc: Combined mode wrapper for IPsec.
This is required for IPSec.</help>
		</entry>
		<entry name="CRYPTO_TEST">
			<label>Testing module</label>
			<help>Quick &amp; dirty crypto test module.</help>
		</entry>
		<entry name="CRYPTO_ABLK_HELPER"/>
		<entry name="CRYPTO_GLUE_HELPER_X86"/>
		<entry name="CRYPTO_ENGINE"/>
		<entry name="CRYPTO_CCM">
			<label>CCM support</label>
			<help>Support for Counter with CBC MAC. Required for IPsec.</help>
		</entry>
		<entry name="CRYPTO_GCM">
			<label>GCM/GMAC support</label>
			<help>Support for Galois/Counter Mode (GCM) and Galois Message
Authentication Code (GMAC). Required for IPSec.</help>
		</entry>
		<entry name="CRYPTO_CHACHA20POLY1305">
			<label>ChaCha20-Poly1305 AEAD support</label>
			<help>ChaCha20-Poly1305 AEAD support, RFC7539.

Support for the AEAD wrapper using the ChaCha20 stream cipher combined
with the Poly1305 authenticator. It is defined in RFC7539 for use in
IETF protocols.</help>
		</entry>
		<entry name="CRYPTO_SEQIV">
			<label>Sequence Number IV Generator</label>
			<help>This IV generator generates an IV based on a sequence number by
xoring it with a salt.  This algorithm is mainly useful for CTR</help>
		</entry>
		<entry name="CRYPTO_ECHAINIV">
			<label>Encrypted Chain IV Generator</label>
			<help>This IV generator generates an IV based on the encryption of
a sequence number xored with a salt.  This is the default
algorithm for CBC.</help>
		</entry>
		<entry name="CRYPTO_CBC">
			<label>CBC support</label>
			<help>CBC: Cipher Block Chaining mode
This block cipher algorithm is required for IPSec.</help>
		</entry>
		<entry name="CRYPTO_CTR">
			<label>CTR support</label>
			<help>CTR: Counter mode
This block cipher algorithm is required for IPSec.</help>
		</entry>
		<entry name="CRYPTO_CTS">
			<label>CTS support</label>
			<help>CTS: Cipher Text Stealing
This is the Cipher Text Stealing mode as described by
Section 8 of rfc2040 and referenced by rfc3962.
(rfc3962 includes errata information in its Appendix A)
This mode is required for Kerberos gss mechanism support
for AES encryption.</help>
		</entry>
		<entry name="CRYPTO_ECB">
			<label>ECB support</label>
			<help>ECB: Electronic CodeBook mode
This is the simplest block cipher algorithm.  It simply encrypts
the input block by block.</help>
		</entry>
		<entry name="CRYPTO_LRW">
			<label>LRW support</label>
			<help>LRW: Liskov Rivest Wagner, a tweakable, non malleable, non movable
narrow block cipher mode for dm-crypt.  Use it with cipher
specification string aes-lrw-benbi, the key must be 256, 320 or 384.
The first 128, 192 or 256 bits in the key are used for AES and the
rest is used to tie each cipher block to its logical position.</help>
		</entry>
		<entry name="CRYPTO_PCBC">
			<label>PCBC support</label>
			<help>PCBC: Propagating Cipher Block Chaining mode
This block cipher algorithm is required for RxRPC.</help>
		</entry>
		<entry name="CRYPTO_XTS">
			<label>XTS support</label>
			<help>XTS: IEEE1619/D16 narrow block cipher use with aes-xts-plain,
key size 256, 384 or 512 bits. This implementation currently
can't handle a sectorsize which is not a multiple of 16 bytes.</help>
		</entry>
		<entry name="CRYPTO_KEYWRAP">
			<label>Key wrapping support</label>
			<help>Support for key wrapping (NIST SP800-38F / RFC3394) without
padding.</help>
		</entry>
		<entry name="CRYPTO_CMAC">
			<label>CMAC support</label>
			<help>Cipher-based Message Authentication Code (CMAC) specified by
The National Institute of Standards and Technology (NIST).

https://tools.ietf.org/html/rfc4493
http://csrc.nist.gov/publications/nistpubs/800-38B/SP_800-38B.pdf</help>
		</entry>
		<entry name="CRYPTO_HMAC">
			<label>HMAC support</label>
			<help>HMAC: Keyed-Hashing for Message Authentication (RFC2104).
This is required for IPSec.</help>
		</entry>
		<entry name="CRYPTO_XCBC">
			<label>XCBC support</label>
			<help>XCBC: Keyed-Hashing with encryption algorithm
http://www.ietf.org/rfc/rfc3566.txt
http://csrc.nist.gov/encryption/modes/proposedmodes/
xcbc-mac/xcbc-mac-spec.pdf</help>
		</entry>
		<entry name="CRYPTO_VMAC">
			<label>VMAC support</label>
			<help>VMAC is a message authentication algorithm designed for
very high speed on 64-bit architectures.

See also:
&lt;http://fastcrypto.org/vmac&gt;</help>
		</entry>
		<entry name="CRYPTO_CRC32C">
			<label>CRC32c CRC algorithm</label>
			<help>Castagnoli, et al Cyclic Redundancy-Check Algorithm.  Used
by iSCSI for header and data digests and by others.
See Castagnoli93.  Module will be crc32c.</help>
		</entry>
		<entry name="CRYPTO_CRC32C_INTEL">
			<label>CRC32c INTEL hardware acceleration</label>
			<help>In Intel processor with SSE4.2 supported, the processor will
support CRC32C implementation using hardware accelerated CRC32
instruction. This option will create 'crc32c-intel' module,
which will enable any routine to use the CRC32 instruction to
gain performance compared with software implementation.
Module will be crc32c-intel.</help>
		</entry>
		<entry name="CRYPT_CRC32C_VPMSUM">
			<label>CRC32c CRC algorithm (powerpc64)</label>
			<help>CRC32c algorithm implemented using vector polynomial multiply-sum
(vpmsum) instructions, introduced in POWER8. Enable on POWER8
and newer processors for improved performance.</help>
		</entry>
		<entry name="CRYPTO_CRC32C_SPARC64">
			<label>CRC32c CRC algorithm (SPARC64)</label>
			<help>CRC32c CRC algorithm implemented using sparc64 crypto instructions,
when available.</help>
		</entry>
		<entry name="CRYPTO_CRC32">
			<label>CRC32 CRC algorithm</label>
			<help>CRC-32-IEEE 802.3 cyclic redundancy-check algorithm.
Shash crypto api wrappers to crc32_le function.</help>
		</entry>
		<entry name="CRYPTO_CRC32_PCLMUL">
			<label>CRC32 PCLMULQDQ hardware acceleration</label>
			<help>From Intel Westmere and AMD Bulldozer processor with SSE4.2
and PCLMULQDQ supported, the processor will support
CRC32 PCLMULQDQ implementation using hardware accelerated PCLMULQDQ
instruction. This option will create 'crc32-plcmul' module,
which will enable any routine to use the CRC-32-IEEE 802.3 checksum
and gain better performance as compared with the table implementation.</help>
		</entry>
		<entry name="CRYPTO_CRCT10DIF">
			<label>CRCT10DIF algorithm</label>
			<help>CRC T10 Data Integrity Field computation is being cast as
a crypto transform.  This allows for faster crc t10 diff
transforms to be used if they are available.</help>
		</entry>
		<entry name="CRYPTO_CRCT10DIF_PCLMUL">
			<label>CRCT10DIF PCLMULQDQ hardware acceleration</label>
			<help>For x86_64 processors with SSE4.2 and PCLMULQDQ supported,
CRC T10 DIF PCLMULQDQ computation can be hardware
accelerated PCLMULQDQ instruction. This option will create
'crct10dif-plcmul' module, which is faster when computing the
crct10dif checksum as compared with the generic table implementation.</help>
		</entry>
		<entry name="CRYPTO_GHASH">
			<label>GHASH digest algorithm</label>
			<help>GHASH is message digest algorithm for GCM (Galois/Counter Mode).</help>
		</entry>
		<entry name="CRYPTO_POLY1305">
			<label>Poly1305 authenticator algorithm</label>
			<help>Poly1305 authenticator algorithm, RFC7539.

Poly1305 is an authenticator algorithm designed by Daniel J. Bernstein.
It is used for the ChaCha20-Poly1305 AEAD, specified in RFC7539 for use
in IETF protocols. This is the portable C implementation of Poly1305.</help>
		</entry>
		<entry name="CRYPTO_POLY1305_X86_64">
			<label>Poly1305 authenticator algorithm (x86_64/SSE2/AVX2)</label>
			<help>Poly1305 authenticator algorithm, RFC7539.

Poly1305 is an authenticator algorithm designed by Daniel J. Bernstein.
It is used for the ChaCha20-Poly1305 AEAD, specified in RFC7539 for use
in IETF protocols. This is the x86_64 assembler implementation using SIMD
instructions.</help>
		</entry>
		<entry name="CRYPTO_MD4">
			<label>MD4 digest algorithm</label>
			<help>MD4 message digest algorithm (RFC1320).</help>
		</entry>
		<entry name="CRYPTO_MD5">
			<label>MD5 digest algorithm</label>
			<help>MD5 message digest algorithm (RFC1321).</help>
		</entry>
		<entry name="CRYPTO_MD5_OCTEON">
			<label>MD5 digest algorithm (OCTEON)</label>
			<help>MD5 message digest algorithm (RFC1321) implemented
using OCTEON crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_MD5_PPC">
			<label>MD5 digest algorithm (PPC)</label>
			<help>MD5 message digest algorithm (RFC1321) implemented
in PPC assembler.</help>
		</entry>
		<entry name="CRYPTO_MD5_SPARC64">
			<label>MD5 digest algorithm (SPARC64)</label>
			<help>MD5 message digest algorithm (RFC1321) implemented
using sparc64 crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_MICHAEL_MIC">
			<label>Michael MIC keyed digest algorithm</label>
			<help>Michael MIC is used for message integrity protection in TKIP
(IEEE 802.11i). This algorithm is required for TKIP, but it
should not be used for other purposes because of the weakness
of the algorithm.</help>
		</entry>
		<entry name="CRYPTO_RMD128">
			<label>RIPEMD-128 digest algorithm</label>
			<help>RIPEMD-128 (ISO/IEC 10118-3:2004).

RIPEMD-128 is a 128-bit cryptographic hash function. It should only
be used as a secure replacement for RIPEMD. For other use cases,
RIPEMD-160 should be used.

Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
See &lt;http://homes.esat.kuleuven.be/~bosselae/ripemd160.html&gt;</help>
		</entry>
		<entry name="CRYPTO_RMD160">
			<label>RIPEMD-160 digest algorithm</label>
			<help>RIPEMD-160 (ISO/IEC 10118-3:2004).

RIPEMD-160 is a 160-bit cryptographic hash function. It is intended
to be used as a secure replacement for the 128-bit hash functions
MD4, MD5 and it's predecessor RIPEMD
(not to be confused with RIPEMD-128).

It's speed is comparable to SHA1 and there are no known attacks
against RIPEMD-160.

Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
See &lt;http://homes.esat.kuleuven.be/~bosselae/ripemd160.html&gt;</help>
		</entry>
		<entry name="CRYPTO_RMD256">
			<label>RIPEMD-256 digest algorithm</label>
			<help>RIPEMD-256 is an optional extension of RIPEMD-128 with a
256 bit hash. It is intended for applications that require
longer hash-results, without needing a larger security level
(than RIPEMD-128).

Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
See &lt;http://homes.esat.kuleuven.be/~bosselae/ripemd160.html&gt;</help>
		</entry>
		<entry name="CRYPTO_RMD320">
			<label>RIPEMD-320 digest algorithm</label>
			<help>RIPEMD-320 is an optional extension of RIPEMD-160 with a
320 bit hash. It is intended for applications that require
longer hash-results, without needing a larger security level
(than RIPEMD-160).

Developed by Hans Dobbertin, Antoon Bosselaers and Bart Preneel.
See &lt;http://homes.esat.kuleuven.be/~bosselae/ripemd160.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SHA1">
			<label>SHA1 digest algorithm</label>
			<help>SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).</help>
		</entry>
		<entry name="CRYPTO_SHA1_SSSE3">
			<label>SHA1 digest algorithm (SSSE3/AVX/AVX2/SHA-NI)</label>
			<help>SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using Supplemental SSE3 (SSSE3) instructions or Advanced Vector
Extensions (AVX/AVX2) or SHA-NI(SHA Extensions New Instructions),
when available.</help>
		</entry>
		<entry name="CRYPTO_SHA256_SSSE3">
			<label>SHA256 digest algorithm (SSSE3/AVX/AVX2/SHA-NI)</label>
			<help>SHA-256 secure hash standard (DFIPS 180-2) implemented
using Supplemental SSE3 (SSSE3) instructions, or Advanced Vector
Extensions version 1 (AVX1), or Advanced Vector Extensions
version 2 (AVX2) instructions, or SHA-NI (SHA Extensions New
Instructions) when available.</help>
		</entry>
		<entry name="CRYPTO_SHA512_SSSE3">
			<label>SHA512 digest algorithm (SSSE3/AVX/AVX2)</label>
			<help>SHA-512 secure hash standard (DFIPS 180-2) implemented
using Supplemental SSE3 (SSSE3) instructions, or Advanced Vector
Extensions version 1 (AVX1), or Advanced Vector Extensions
version 2 (AVX2) instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA1_OCTEON">
			<label>SHA1 digest algorithm (OCTEON)</label>
			<help>SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using OCTEON crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA1_SPARC64">
			<label>SHA1 digest algorithm (SPARC64)</label>
			<help>SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using sparc64 crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA1_PPC">
			<label>SHA1 digest algorithm (powerpc)</label>
			<help>This is the powerpc hardware accelerated implementation of the
SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).</help>
		</entry>
		<entry name="CRYPTO_SHA1_PPC_SPE">
			<label>SHA1 digest algorithm (PPC SPE)</label>
			<help>SHA-1 secure hash standard (DFIPS 180-4) implemented
using powerpc SPE SIMD instruction set.</help>
		</entry>
		<entry name="CRYPTO_SHA1_MB">
			<label>SHA1 digest algorithm (x86_64 Multi-Buffer, Experimental)</label>
			<help>SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using multi-buffer technique.  This algorithm computes on
multiple data lanes concurrently with SIMD instructions for
better throughput.  It should not be enabled by default but
used when there is significant amount of work to keep the keep
the data lanes filled to get performance benefit.  If the data
lanes remain unfilled, a flush operation will be initiated to
process the crypto jobs, adding a slight latency.</help>
		</entry>
		<entry name="CRYPTO_SHA256_MB">
			<label>SHA256 digest algorithm (x86_64 Multi-Buffer, Experimental)</label>
			<help>SHA-256 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using multi-buffer technique.  This algorithm computes on
multiple data lanes concurrently with SIMD instructions for
better throughput.  It should not be enabled by default but
used when there is significant amount of work to keep the keep
the data lanes filled to get performance benefit.  If the data
lanes remain unfilled, a flush operation will be initiated to
process the crypto jobs, adding a slight latency.</help>
		</entry>
		<entry name="CRYPTO_SHA512_MB">
			<label>SHA512 digest algorithm (x86_64 Multi-Buffer, Experimental)</label>
			<help>SHA-512 secure hash standard (FIPS 180-1/DFIPS 180-2) implemented
using multi-buffer technique.  This algorithm computes on
multiple data lanes concurrently with SIMD instructions for
better throughput.  It should not be enabled by default but
used when there is significant amount of work to keep the keep
the data lanes filled to get performance benefit.  If the data
lanes remain unfilled, a flush operation will be initiated to
process the crypto jobs, adding a slight latency.</help>
		</entry>
		<entry name="CRYPTO_SHA256">
			<label>SHA224 and SHA256 digest algorithm</label>
			<help>SHA256 secure hash standard (DFIPS 180-2).

This version of SHA implements a 256 bit hash with 128 bits of
security against collision attacks.

This code also includes SHA-224, a 224 bit hash with 112 bits
of security against collision attacks.</help>
		</entry>
		<entry name="CRYPTO_SHA256_PPC_SPE">
			<label>SHA224 and SHA256 digest algorithm (PPC SPE)</label>
			<help>SHA224 and SHA256 secure hash standard (DFIPS 180-2)
implemented using powerpc SPE SIMD instruction set.</help>
		</entry>
		<entry name="CRYPTO_SHA256_OCTEON">
			<label>SHA224 and SHA256 digest algorithm (OCTEON)</label>
			<help>SHA-256 secure hash standard (DFIPS 180-2) implemented
using OCTEON crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA256_SPARC64">
			<label>SHA224 and SHA256 digest algorithm (SPARC64)</label>
			<help>SHA-256 secure hash standard (DFIPS 180-2) implemented
using sparc64 crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA512">
			<label>SHA384 and SHA512 digest algorithms</label>
			<help>SHA512 secure hash standard (DFIPS 180-2).

This version of SHA implements a 512 bit hash with 256 bits of
security against collision attacks.

This code also includes SHA-384, a 384 bit hash with 192 bits
of security against collision attacks.</help>
		</entry>
		<entry name="CRYPTO_SHA512_OCTEON">
			<label>SHA384 and SHA512 digest algorithms (OCTEON)</label>
			<help>SHA-512 secure hash standard (DFIPS 180-2) implemented
using OCTEON crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA512_SPARC64">
			<label>SHA384 and SHA512 digest algorithm (SPARC64)</label>
			<help>SHA-512 secure hash standard (DFIPS 180-2) implemented
using sparc64 crypto instructions, when available.</help>
		</entry>
		<entry name="CRYPTO_SHA3">
			<label>SHA3 digest algorithm</label>
			<help>SHA-3 secure hash standard (DFIPS 202). It's based on
cryptographic sponge function family called Keccak.

References:
http://keccak.noekeon.org/</help>
		</entry>
		<entry name="CRYPTO_TGR192">
			<label>Tiger digest algorithms</label>
			<help>Tiger hash algorithm 192, 160 and 128-bit hashes

Tiger is a hash function optimized for 64-bit processors while
still having decent performance on 32-bit processors.
Tiger was developed by Ross Anderson and Eli Biham.

See also:
&lt;http://www.cs.technion.ac.il/~biham/Reports/Tiger/&gt;.</help>
		</entry>
		<entry name="CRYPTO_WP512">
			<label>Whirlpool digest algorithms</label>
			<help>Whirlpool hash algorithm 512, 384 and 256-bit hashes

Whirlpool-512 is part of the NESSIE cryptographic primitives.
Whirlpool will be part of the ISO/IEC 10118-3:2003(E) standard

See also:
&lt;http://www.larc.usp.br/~pbarreto/WhirlpoolPage.html&gt;</help>
		</entry>
		<entry name="CRYPTO_GHASH_CLMUL_NI_INTEL">
			<label>GHASH digest algorithm (CLMUL-NI accelerated)</label>
			<help>GHASH is message digest algorithm for GCM (Galois/Counter Mode).
The implementation is accelerated by CLMUL-NI of Intel.</help>
		</entry>
		<entry name="CRYPTO_AES">
			<label>AES cipher algorithms</label>
			<help>AES cipher algorithms (FIPS-197). AES uses the Rijndael
algorithm.

Rijndael appears to be consistently a very good performer in
both hardware and software across a wide range of computing
environments regardless of its use in feedback or non-feedback
modes. Its key setup time is excellent, and its key agility is
good. Rijndael's very low memory requirements make it very well
suited for restricted-space environments, in which it also
demonstrates excellent performance. Rijndael's operations are
among the easiest to defend against power and timing attacks.

The AES specifies three key sizes: 128, 192 and 256 bits

See &lt;http://csrc.nist.gov/CryptoToolkit/aes/&gt; for more information.</help>
		</entry>
		<entry name="CRYPTO_AES_586">
			<label>AES cipher algorithms (i586)</label>
			<help>AES cipher algorithms (FIPS-197). AES uses the Rijndael
algorithm.

Rijndael appears to be consistently a very good performer in
both hardware and software across a wide range of computing
environments regardless of its use in feedback or non-feedback
modes. Its key setup time is excellent, and its key agility is
good. Rijndael's very low memory requirements make it very well
suited for restricted-space environments, in which it also
demonstrates excellent performance. Rijndael's operations are
among the easiest to defend against power and timing attacks.

The AES specifies three key sizes: 128, 192 and 256 bits

See &lt;http://csrc.nist.gov/encryption/aes/&gt; for more information.</help>
		</entry>
		<entry name="CRYPTO_AES_X86_64">
			<label>AES cipher algorithms (x86_64)</label>
			<help>AES cipher algorithms (FIPS-197). AES uses the Rijndael
algorithm.

Rijndael appears to be consistently a very good performer in
both hardware and software across a wide range of computing
environments regardless of its use in feedback or non-feedback
modes. Its key setup time is excellent, and its key agility is
good. Rijndael's very low memory requirements make it very well
suited for restricted-space environments, in which it also
demonstrates excellent performance. Rijndael's operations are
among the easiest to defend against power and timing attacks.

The AES specifies three key sizes: 128, 192 and 256 bits

See &lt;http://csrc.nist.gov/encryption/aes/&gt; for more information.</help>
		</entry>
		<entry name="CRYPTO_AES_NI_INTEL">
			<label>AES cipher algorithms (AES-NI)</label>
			<help>Use Intel AES-NI instructions for AES algorithm.

AES cipher algorithms (FIPS-197). AES uses the Rijndael
algorithm.

Rijndael appears to be consistently a very good performer in
both hardware and software across a wide range of computing
environments regardless of its use in feedback or non-feedback
modes. Its key setup time is excellent, and its key agility is
good. Rijndael's very low memory requirements make it very well
suited for restricted-space environments, in which it also
demonstrates excellent performance. Rijndael's operations are
among the easiest to defend against power and timing attacks.

The AES specifies three key sizes: 128, 192 and 256 bits

See &lt;http://csrc.nist.gov/encryption/aes/&gt; for more information.

In addition to AES cipher algorithm support, the acceleration
for some popular block cipher mode is supported too, including
ECB, CBC, LRW, PCBC, XTS. The 64 bit version has additional
acceleration for CTR.</help>
		</entry>
		<entry name="CRYPTO_AES_SPARC64">
			<label>AES cipher algorithms (SPARC64)</label>
			<help>Use SPARC64 crypto opcodes for AES algorithm.

AES cipher algorithms (FIPS-197). AES uses the Rijndael
algorithm.

Rijndael appears to be consistently a very good performer in
both hardware and software across a wide range of computing
environments regardless of its use in feedback or non-feedback
modes. Its key setup time is excellent, and its key agility is
good. Rijndael's very low memory requirements make it very well
suited for restricted-space environments, in which it also
demonstrates excellent performance. Rijndael's operations are
among the easiest to defend against power and timing attacks.

The AES specifies three key sizes: 128, 192 and 256 bits

See &lt;http://csrc.nist.gov/encryption/aes/&gt; for more information.

In addition to AES cipher algorithm support, the acceleration
for some popular block cipher mode is supported too, including
ECB and CBC.</help>
		</entry>
		<entry name="CRYPTO_AES_PPC_SPE">
			<label>AES cipher algorithms (PPC SPE)</label>
			<help>AES cipher algorithms (FIPS-197). Additionally the acceleration
for popular block cipher modes ECB, CBC, CTR and XTS is supported.
This module should only be used for low power (router) devices
without hardware AES acceleration (e.g. caam crypto). It reduces the
size of the AES tables from 16KB to 8KB + 256 bytes and mitigates
timining attacks. Nevertheless it might be not as secure as other
architecture specific assembler implementations that work on 1KB
tables or 256 bytes S-boxes.</help>
		</entry>
		<entry name="CRYPTO_ANUBIS">
			<label>Anubis cipher algorithm</label>
			<help>Anubis cipher algorithm.

Anubis is a variable key length cipher which can use keys from
128 bits to 320 bits in length.  It was evaluated as a entrant
in the NESSIE competition.

See also:
&lt;https://www.cosic.esat.kuleuven.be/nessie/reports/&gt;
&lt;http://www.larc.usp.br/~pbarreto/AnubisPage.html&gt;</help>
		</entry>
		<entry name="CRYPTO_ARC4">
			<label>ARC4 cipher algorithm</label>
			<help>ARC4 cipher algorithm.

ARC4 is a stream cipher using keys ranging from 8 bits to 2048
bits in length.  This algorithm is required for driver-based
WEP, but it should not be for other purposes because of the
weakness of the algorithm.</help>
		</entry>
		<entry name="CRYPTO_BLOWFISH">
			<label>Blowfish cipher algorithm</label>
			<help>Blowfish cipher algorithm, by Bruce Schneier.

This is a variable key length cipher which can use keys from 32
bits to 448 bits in length.  It's fast, simple and specifically
designed for use on &quot;large microprocessors&quot;.

See also:
&lt;http://www.schneier.com/blowfish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_BLOWFISH_COMMON">
			<help>Common parts of the Blowfish cipher algorithm shared by the
generic c and the assembler implementations.

See also:
&lt;http://www.schneier.com/blowfish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_BLOWFISH_X86_64">
			<label>Blowfish cipher algorithm (x86_64)</label>
			<help>Blowfish cipher algorithm (x86_64), by Bruce Schneier.

This is a variable key length cipher which can use keys from 32
bits to 448 bits in length.  It's fast, simple and specifically
designed for use on &quot;large microprocessors&quot;.

See also:
&lt;http://www.schneier.com/blowfish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAMELLIA">
			<label>Camellia cipher algorithms</label>
			<help>Camellia cipher algorithms module.

Camellia is a symmetric key block cipher developed jointly
at NTT and Mitsubishi Electric Corporation.

The Camellia specifies three key sizes: 128, 192 and 256 bits.

See also:
&lt;https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAMELLIA_X86_64">
			<label>Camellia cipher algorithm (x86_64)</label>
			<help>Camellia cipher algorithm module (x86_64).

Camellia is a symmetric key block cipher developed jointly
at NTT and Mitsubishi Electric Corporation.

The Camellia specifies three key sizes: 128, 192 and 256 bits.

See also:
&lt;https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAMELLIA_AESNI_AVX_X86_64">
			<label>Camellia cipher algorithm (x86_64/AES-NI/AVX)</label>
			<help>Camellia cipher algorithm module (x86_64/AES-NI/AVX).

Camellia is a symmetric key block cipher developed jointly
at NTT and Mitsubishi Electric Corporation.

The Camellia specifies three key sizes: 128, 192 and 256 bits.

See also:
&lt;https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAMELLIA_AESNI_AVX2_X86_64">
			<label>Camellia cipher algorithm (x86_64/AES-NI/AVX2)</label>
			<help>Camellia cipher algorithm module (x86_64/AES-NI/AVX2).

Camellia is a symmetric key block cipher developed jointly
at NTT and Mitsubishi Electric Corporation.

The Camellia specifies three key sizes: 128, 192 and 256 bits.

See also:
&lt;https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAMELLIA_SPARC64">
			<label>Camellia cipher algorithm (SPARC64)</label>
			<help>Camellia cipher algorithm module (SPARC64).

Camellia is a symmetric key block cipher developed jointly
at NTT and Mitsubishi Electric Corporation.

The Camellia specifies three key sizes: 128, 192 and 256 bits.

See also:
&lt;https://info.isl.ntt.co.jp/crypt/eng/camellia/index_s.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CAST_COMMON">
			<help>Common parts of the CAST cipher algorithms shared by the
generic c and the assembler implementations.</help>
		</entry>
		<entry name="CRYPTO_CAST5">
			<label>CAST5 (CAST-128) cipher algorithm</label>
			<help>The CAST5 encryption algorithm (synonymous with CAST-128) is
described in RFC2144.</help>
		</entry>
		<entry name="CRYPTO_CAST5_AVX_X86_64">
			<label>CAST5 (CAST-128) cipher algorithm (x86_64/AVX)</label>
			<help>The CAST5 encryption algorithm (synonymous with CAST-128) is
described in RFC2144.

This module provides the Cast5 cipher algorithm that processes
sixteen blocks parallel using the AVX instruction set.</help>
		</entry>
		<entry name="CRYPTO_CAST6">
			<label>CAST6 (CAST-256) cipher algorithm</label>
			<help>The CAST6 encryption algorithm (synonymous with CAST-256) is
described in RFC2612.</help>
		</entry>
		<entry name="CRYPTO_CAST6_AVX_X86_64">
			<label>CAST6 (CAST-256) cipher algorithm (x86_64/AVX)</label>
			<help>The CAST6 encryption algorithm (synonymous with CAST-256) is
described in RFC2612.

This module provides the Cast6 cipher algorithm that processes
eight blocks parallel using the AVX instruction set.</help>
		</entry>
		<entry name="CRYPTO_DES">
			<label>DES and Triple DES EDE cipher algorithms</label>
			<help>DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3).</help>
		</entry>
		<entry name="CRYPTO_DES_SPARC64">
			<label>DES and Triple DES EDE cipher algorithms (SPARC64)</label>
			<help>DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3),
optimized using SPARC64 crypto opcodes.</help>
		</entry>
		<entry name="CRYPTO_DES3_EDE_X86_64">
			<label>Triple DES EDE cipher algorithm (x86-64)</label>
			<help>Triple DES EDE (FIPS 46-3) algorithm.

This module provides implementation of the Triple DES EDE cipher
algorithm that is optimized for x86-64 processors. Two versions of
algorithm are provided; regular processing one input block and
one that processes three blocks parallel.</help>
		</entry>
		<entry name="CRYPTO_FCRYPT">
			<label>FCrypt cipher algorithm</label>
			<help>FCrypt algorithm used by RxRPC.</help>
		</entry>
		<entry name="CRYPTO_KHAZAD">
			<label>Khazad cipher algorithm</label>
			<help>Khazad cipher algorithm.

Khazad was a finalist in the initial NESSIE competition.  It is
an algorithm optimized for 64-bit processors with good performance
on 32-bit processors.  Khazad uses an 128 bit key size.

See also:
&lt;http://www.larc.usp.br/~pbarreto/KhazadPage.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SALSA20">
			<label>Salsa20 stream cipher algorithm</label>
			<help>Salsa20 stream cipher algorithm.

Salsa20 is a stream cipher submitted to eSTREAM, the ECRYPT
Stream Cipher Project. See &lt;http://www.ecrypt.eu.org/stream/&gt;

The Salsa20 stream cipher algorithm is designed by Daniel J.
Bernstein &lt;djb@cr.yp.to&gt;. See &lt;http://cr.yp.to/snuffle.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SALSA20_586">
			<label>Salsa20 stream cipher algorithm (i586)</label>
			<help>Salsa20 stream cipher algorithm.

Salsa20 is a stream cipher submitted to eSTREAM, the ECRYPT
Stream Cipher Project. See &lt;http://www.ecrypt.eu.org/stream/&gt;

The Salsa20 stream cipher algorithm is designed by Daniel J.
Bernstein &lt;djb@cr.yp.to&gt;. See &lt;http://cr.yp.to/snuffle.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SALSA20_X86_64">
			<label>Salsa20 stream cipher algorithm (x86_64)</label>
			<help>Salsa20 stream cipher algorithm.

Salsa20 is a stream cipher submitted to eSTREAM, the ECRYPT
Stream Cipher Project. See &lt;http://www.ecrypt.eu.org/stream/&gt;

The Salsa20 stream cipher algorithm is designed by Daniel J.
Bernstein &lt;djb@cr.yp.to&gt;. See &lt;http://cr.yp.to/snuffle.html&gt;</help>
		</entry>
		<entry name="CRYPTO_CHACHA20">
			<label>ChaCha20 cipher algorithm</label>
			<help>ChaCha20 cipher algorithm, RFC7539.

ChaCha20 is a 256-bit high-speed stream cipher designed by Daniel J.
Bernstein and further specified in RFC7539 for use in IETF protocols.
This is the portable C implementation of ChaCha20.

See also:
&lt;http://cr.yp.to/chacha/chacha-20080128.pdf&gt;</help>
		</entry>
		<entry name="CRYPTO_CHACHA20_X86_64">
			<label>ChaCha20 cipher algorithm (x86_64/SSSE3/AVX2)</label>
			<help>ChaCha20 cipher algorithm, RFC7539.

ChaCha20 is a 256-bit high-speed stream cipher designed by Daniel J.
Bernstein and further specified in RFC7539 for use in IETF protocols.
This is the x86_64 assembler implementation using SIMD instructions.

See also:
&lt;http://cr.yp.to/chacha/chacha-20080128.pdf&gt;</help>
		</entry>
		<entry name="CRYPTO_SEED">
			<label>SEED cipher algorithm</label>
			<help>SEED cipher algorithm (RFC4269).

SEED is a 128-bit symmetric key block cipher that has been
developed by KISA (Korea Information Security Agency) as a
national standard encryption algorithm of the Republic of Korea.
It is a 16 round block cipher with the key size of 128 bit.

See also:
&lt;http://www.kisa.or.kr/kisa/seed/jsp/seed_eng.jsp&gt;</help>
		</entry>
		<entry name="CRYPTO_SERPENT">
			<label>Serpent cipher algorithm</label>
			<help>Serpent cipher algorithm, by Anderson, Biham &amp; Knudsen.

Keys are allowed to be from 0 to 256 bits in length, in steps
of 8 bits.  Also includes the 'Tnepres' algorithm, a reversed
variant of Serpent for compatibility with old kerneli.org code.

See also:
&lt;http://www.cl.cam.ac.uk/~rja14/serpent.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SERPENT_SSE2_X86_64">
			<label>Serpent cipher algorithm (x86_64/SSE2)</label>
			<help>Serpent cipher algorithm, by Anderson, Biham &amp; Knudsen.

Keys are allowed to be from 0 to 256 bits in length, in steps
of 8 bits.

This module provides Serpent cipher algorithm that processes eight
blocks parallel using SSE2 instruction set.

See also:
&lt;http://www.cl.cam.ac.uk/~rja14/serpent.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SERPENT_SSE2_586">
			<label>Serpent cipher algorithm (i586/SSE2)</label>
			<help>Serpent cipher algorithm, by Anderson, Biham &amp; Knudsen.

Keys are allowed to be from 0 to 256 bits in length, in steps
of 8 bits.

This module provides Serpent cipher algorithm that processes four
blocks parallel using SSE2 instruction set.

See also:
&lt;http://www.cl.cam.ac.uk/~rja14/serpent.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SERPENT_AVX_X86_64">
			<label>Serpent cipher algorithm (x86_64/AVX)</label>
			<help>Serpent cipher algorithm, by Anderson, Biham &amp; Knudsen.

Keys are allowed to be from 0 to 256 bits in length, in steps
of 8 bits.

This module provides the Serpent cipher algorithm that processes
eight blocks parallel using the AVX instruction set.

See also:
&lt;http://www.cl.cam.ac.uk/~rja14/serpent.html&gt;</help>
		</entry>
		<entry name="CRYPTO_SERPENT_AVX2_X86_64">
			<label>Serpent cipher algorithm (x86_64/AVX2)</label>
			<help>Serpent cipher algorithm, by Anderson, Biham &amp; Knudsen.

Keys are allowed to be from 0 to 256 bits in length, in steps
of 8 bits.

This module provides Serpent cipher algorithm that processes 16
blocks parallel using AVX2 instruction set.

See also:
&lt;http://www.cl.cam.ac.uk/~rja14/serpent.html&gt;</help>
		</entry>
		<entry name="CRYPTO_TEA">
			<label>TEA, XTEA and XETA cipher algorithms</label>
			<help>TEA cipher algorithm.

Tiny Encryption Algorithm is a simple cipher that uses
many rounds for security.  It is very fast and uses
little memory.

Xtendend Tiny Encryption Algorithm is a modification to
the TEA algorithm to address a potential key weakness
in the TEA algorithm.

Xtendend Encryption Tiny Algorithm is a mis-implementation
of the XTEA algorithm for compatibility purposes.</help>
		</entry>
		<entry name="CRYPTO_TWOFISH">
			<label>Twofish cipher algorithm</label>
			<help>Twofish cipher algorithm.

Twofish was submitted as an AES (Advanced Encryption Standard)
candidate cipher by researchers at CounterPane Systems.  It is a
16 round block cipher supporting key sizes of 128, 192, and 256
bits.

See also:
&lt;http://www.schneier.com/twofish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_TWOFISH_COMMON">
			<help>Common parts of the Twofish cipher algorithm shared by the
generic c and the assembler implementations.</help>
		</entry>
		<entry name="CRYPTO_TWOFISH_586">
			<label>Twofish cipher algorithms (i586)</label>
			<help>Twofish cipher algorithm.

Twofish was submitted as an AES (Advanced Encryption Standard)
candidate cipher by researchers at CounterPane Systems.  It is a
16 round block cipher supporting key sizes of 128, 192, and 256
bits.

See also:
&lt;http://www.schneier.com/twofish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_TWOFISH_X86_64">
			<label>Twofish cipher algorithm (x86_64)</label>
			<help>Twofish cipher algorithm (x86_64).

Twofish was submitted as an AES (Advanced Encryption Standard)
candidate cipher by researchers at CounterPane Systems.  It is a
16 round block cipher supporting key sizes of 128, 192, and 256
bits.

See also:
&lt;http://www.schneier.com/twofish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_TWOFISH_X86_64_3WAY">
			<label>Twofish cipher algorithm (x86_64, 3-way parallel)</label>
			<help>Twofish cipher algorithm (x86_64, 3-way parallel).

Twofish was submitted as an AES (Advanced Encryption Standard)
candidate cipher by researchers at CounterPane Systems.  It is a
16 round block cipher supporting key sizes of 128, 192, and 256
bits.

This module provides Twofish cipher algorithm that processes three
blocks parallel, utilizing resources of out-of-order CPUs better.

See also:
&lt;http://www.schneier.com/twofish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_TWOFISH_AVX_X86_64">
			<label>Twofish cipher algorithm (x86_64/AVX)</label>
			<help>Twofish cipher algorithm (x86_64/AVX).

Twofish was submitted as an AES (Advanced Encryption Standard)
candidate cipher by researchers at CounterPane Systems.  It is a
16 round block cipher supporting key sizes of 128, 192, and 256
bits.

This module provides the Twofish cipher algorithm that processes
eight blocks parallel using the AVX Instruction Set.

See also:
&lt;http://www.schneier.com/twofish.html&gt;</help>
		</entry>
		<entry name="CRYPTO_DEFLATE">
			<label>Deflate compression algorithm</label>
			<help>This is the Deflate algorithm (RFC1951), specified for use in
IPSec with the IPCOMP protocol (RFC3173, RFC2394).

You will most probably want this if using IPSec.</help>
		</entry>
		<entry name="CRYPTO_LZO">
			<label>LZO compression algorithm</label>
			<help>This is the LZO algorithm.</help>
		</entry>
		<entry name="CRYPTO_842">
			<label>842 compression algorithm</label>
			<help>This is the 842 algorithm.</help>
		</entry>
		<entry name="CRYPTO_LZ4">
			<label>LZ4 compression algorithm</label>
			<help>This is the LZ4 algorithm.</help>
		</entry>
		<entry name="CRYPTO_LZ4HC">
			<label>LZ4HC compression algorithm</label>
			<help>This is the LZ4 high compression mode algorithm.</help>
		</entry>
		<entry name="CRYPTO_ANSI_CPRNG">
			<label>Pseudo Random Number Generation for Cryptographic modules</label>
			<help>This option enables the generic pseudo random number generator
for cryptographic modules.  Uses the Algorithm specified in
ANSI X9.31 A.2.4. Note that this option must be enabled if
CRYPTO_FIPS is selected</help>
		</entry>
		<entry name="CRYPTO_DRBG_MENU">
			<label>NIST SP800-90A DRBG</label>
			<help>NIST SP800-90A compliant DRBG. In the following submenu, one or
more of the DRBG types must be selected.</help>
		</entry>
		<entry name="CRYPTO_DRBG_HMAC"/>
		<entry name="CRYPTO_DRBG_HASH">
			<label>Enable Hash DRBG</label>
			<help>Enable the Hash DRBG variant as defined in NIST SP800-90A.</help>
		</entry>
		<entry name="CRYPTO_DRBG_CTR">
			<label>Enable CTR DRBG</label>
			<help>Enable the CTR DRBG variant as defined in NIST SP800-90A.</help>
		</entry>
		<entry name="CRYPTO_DRBG"/>
		<entry name="CRYPTO_JITTERENTROPY">
			<label>Jitterentropy Non-Deterministic Random Number Generator</label>
			<help>The Jitterentropy RNG is a noise that is intended
to provide seed to another RNG. The RNG does not
perform any cryptographic whitening of the generated
random numbers. This Jitterentropy RNG registers with
the kernel crypto API and can be used by any caller.</help>
		</entry>
		<entry name="CRYPTO_USER_API"/>
		<entry name="CRYPTO_USER_API_HASH">
			<label>User-space interface for hash algorithms</label>
			<help>This option enables the user-spaces interface for hash
algorithms.</help>
		</entry>
		<entry name="CRYPTO_USER_API_SKCIPHER">
			<label>User-space interface for symmetric key cipher algorithms</label>
			<help>This option enables the user-spaces interface for symmetric
key cipher algorithms.</help>
		</entry>
		<entry name="CRYPTO_USER_API_RNG">
			<label>User-space interface for random number generator algorithms</label>
			<help>This option enables the user-spaces interface for random
number generator algorithms.</help>
		</entry>
		<entry name="CRYPTO_USER_API_AEAD">
			<label>User-space interface for AEAD cipher algorithms</label>
			<help>This option enables the user-spaces interface for AEAD
cipher algorithms.</help>
		</entry>
		<entry name="CRYPTO_HASH_INFO"/>
		<entry name="CRYPTO_HW">
			<label>Hardware crypto devices</label>
			<help>Say Y here to get to see options for hardware crypto devices and
processors. This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
		</entry>
		<entry name="CRYPTO_DEV_PADLOCK">
			<label>Support for VIA PadLock ACE</label>
			<help>Some VIA processors come with an integrated crypto engine
(so called VIA PadLock ACE, Advanced Cryptography Engine)
that provides instructions for very fast cryptographic
operations with supported algorithms.

The instructions are used only when the CPU supports them.
Otherwise software encryption is used.</help>
		</entry>
		<entry name="CRYPTO_DEV_PADLOCK_AES">
			<label>PadLock driver for AES algorithm</label>
			<help>Use VIA PadLock for AES algorithm.

Available in VIA C3 and newer CPUs.

If unsure say M. The compiled module will be
called padlock-aes.</help>
		</entry>
		<entry name="CRYPTO_DEV_PADLOCK_SHA">
			<label>PadLock driver for SHA1 and SHA256 algorithms</label>
			<help>Use VIA PadLock for SHA1/SHA256 algorithms.

Available in VIA C7 and newer processors.

If unsure say M. The compiled module will be
called padlock-sha.</help>
		</entry>
		<entry name="CRYPTO_DEV_GEODE">
			<label>Support for the Geode LX AES engine</label>
			<help>Say 'Y' here to use the AMD Geode LX processor on-board AES
engine for the CryptoAPI AES algorithm.

To compile this driver as a module, choose M here: the module
will be called geode-aes.</help>
		</entry>
		<entry name="ZCRYPT">
			<label>Support for PCI-attached cryptographic adapters</label>
			<help>Select this option if you want to use a PCI-attached cryptographic
adapter like:
+ PCI Cryptographic Accelerator (PCICA)
+ PCI Cryptographic Coprocessor (PCICC)
+ PCI-X Cryptographic Coprocessor (PCIXCC)
+ Crypto Express2 Coprocessor (CEX2C)
+ Crypto Express2 Accelerator (CEX2A)
+ Crypto Express3 Coprocessor (CEX3C)
+ Crypto Express3 Accelerator (CEX3A)</help>
		</entry>
		<entry name="CRYPTO_SHA1_S390">
			<label>SHA1 digest algorithm</label>
			<help>This is the s390 hardware accelerated implementation of the
SHA-1 secure hash standard (FIPS 180-1/DFIPS 180-2).

It is available as of z990.</help>
		</entry>
		<entry name="CRYPTO_SHA256_S390">
			<label>SHA256 digest algorithm</label>
			<help>This is the s390 hardware accelerated implementation of the
SHA256 secure hash standard (DFIPS 180-2).

It is available as of z9.</help>
		</entry>
		<entry name="CRYPTO_SHA512_S390">
			<label>SHA384 and SHA512 digest algorithm</label>
			<help>This is the s390 hardware accelerated implementation of the
SHA512 secure hash standard.

It is available as of z10.</help>
		</entry>
		<entry name="CRYPTO_DES_S390">
			<label>DES and Triple DES cipher algorithms</label>
			<help>This is the s390 hardware accelerated implementation of the
DES cipher algorithm (FIPS 46-2), and Triple DES EDE (FIPS 46-3).

As of z990 the ECB and CBC mode are hardware accelerated.
As of z196 the CTR mode is hardware accelerated.</help>
		</entry>
		<entry name="CRYPTO_AES_S390">
			<label>AES cipher algorithms</label>
			<help>This is the s390 hardware accelerated implementation of the
AES cipher algorithms (FIPS-197).

As of z9 the ECB and CBC modes are hardware accelerated
for 128 bit keys.
As of z10 the ECB and CBC modes are hardware accelerated
for all AES key sizes.
As of z196 the CTR mode is hardware accelerated for all AES
key sizes and XTS mode is hardware accelerated for 256 and
512 bit keys.</help>
		</entry>
		<entry name="S390_PRNG">
			<label>Pseudo random number generator device driver</label>
			<help>Select this option if you want to use the s390 pseudo random number
generator. The PRNG is part of the cryptographic processor functions
and uses triple-DES to generate secure random numbers like the
ANSI X9.17 standard. User-space programs access the
pseudo-random-number device through the char device /dev/prandom.

It is available as of z9.</help>
		</entry>
		<entry name="CRYPTO_GHASH_S390">
			<label>GHASH digest algorithm</label>
			<help>This is the s390 hardware accelerated implementation of the
GHASH message digest algorithm for GCM (Galois/Counter Mode).

It is available as of z196.</help>
		</entry>
		<entry name="CRYPTO_CRC32_S390">
			<label>CRC-32 algorithms</label>
			<help>Select this option if you want to use hardware accelerated
implementations of CRC algorithms.  With this option, you
can optimize the computation of CRC-32 (IEEE 802.3 Ethernet)
and CRC-32C (Castagnoli).

It is available with IBM z13 or later.</help>
		</entry>
		<entry name="CRYPTO_DEV_MV_CESA">
			<label>Marvell's Cryptographic Engine</label>
			<help>This driver allows you to utilize the Cryptographic Engines and
Security Accelerator (CESA) which can be found on the Marvell Orion
and Kirkwood SoCs, such as QNAP's TS-209.

Currently the driver supports AES in ECB and CBC mode without DMA.</help>
		</entry>
		<entry name="CRYPTO_DEV_MARVELL_CESA">
			<label>New Marvell's Cryptographic Engine driver</label>
			<help>This driver allows you to utilize the Cryptographic Engines and
Security Accelerator (CESA) which can be found on the Armada 370.
This driver supports CPU offload through DMA transfers.

This driver is aimed at replacing the mv_cesa driver. This will only
happen once it has received proper testing.</help>
		</entry>
		<entry name="CRYPTO_DEV_NIAGARA2">
			<label>Niagara2 Stream Processing Unit driver</label>
			<help>Each core of a Niagara2 processor contains a Stream
Processing Unit, which itself contains several cryptographic
sub-units.  One set provides the Modular Arithmetic Unit,
used for SSL offload.  The other set provides the Cipher
Group, which can perform encryption, decryption, hashing,
checksumming, and raw copies.</help>
		</entry>
		<entry name="CRYPTO_DEV_HIFN_795X">
			<label>Driver HIFN 795x crypto accelerator chips</label>
			<help>This option allows you to have support for HIFN 795x crypto adapters.</help>
		</entry>
		<entry name="CRYPTO_DEV_HIFN_795X_RNG">
			<label>HIFN 795x random number generator</label>
			<help>Select this option if you want to enable the random number generator
on the HIFN 795x crypto adapters.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM">
			<label>Freescale CAAM-Multicore driver backend</label>
			<help>Enables the driver module for Freescale's Cryptographic Accelerator
and Assurance Module (CAAM), also known as the SEC version 4 (SEC4).
This module creates job ring devices, and configures h/w
to operate as a DPAA component automatically, depending
on h/w feature availability.

To compile this driver as a module, choose M here: the module
will be called caam.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_JR">
			<label>Freescale CAAM Job Ring driver backend</label>
			<help>Enables the driver module for Job Rings which are part of
Freescale's Cryptographic Accelerator
and Assurance Module (CAAM). This module adds a job ring operation
interface.

To compile this driver as a module, choose M here: the module
will be called caam_jr.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_RINGSIZE">
			<label>Job Ring size</label>
			<help>Select size of Job Rings as a power of 2, within the
range 2-9 (ring size 4-512).
Examples:
2 =&gt; 4
3 =&gt; 8
4 =&gt; 16
5 =&gt; 32
6 =&gt; 64
7 =&gt; 128
8 =&gt; 256
9 =&gt; 512</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_INTC">
			<label>Job Ring interrupt coalescing</label>
			<help>Enable the Job Ring's interrupt coalescing feature.

Note: the driver already provides adequate
interrupt coalescing in software.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD">
			<label>Job Ring interrupt coalescing count threshold</label>
			<help>Select number of descriptor completions to queue before
raising an interrupt, in the range 1-255. Note that a selection
of 1 functionally defeats the coalescing feature, and a selection
equal or greater than the job ring size will force timeouts.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD">
			<label>Job Ring interrupt coalescing timer threshold</label>
			<help>Select number of bus clocks/64 to timeout in the case that one or
more descriptor completions are queued without reaching the count
threshold. Range is 1-65535.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_CRYPTO_API">
			<label>Register algorithm implementations with the Crypto API</label>
			<help>Selecting this will offload crypto for users of the
scatterlist crypto API (such as the linux native IPSec
stack) to the SEC4 via job ring.

To compile this as a module, choose M here: the module
will be called caamalg.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_AHASH_API">
			<label>Register hash algorithm implementations with Crypto API</label>
			<help>Selecting this will offload ahash for users of the
scatterlist crypto API to the SEC4 via job ring.

To compile this as a module, choose M here: the module
will be called caamhash.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_PKC_API">
			<label>Register public key cryptography implementations with Crypto API</label>
			<help>Selecting this will allow SEC Public key support for RSA.
Supported cryptographic primitives: encryption, decryption,
signature and verification.
To compile this as a module, choose M here: the module
will be called caam_pkc.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_RNG_API">
			<label>Register caam device for hwrng API</label>
			<help>Selecting this will register the SEC4 hardware rng to
the hw_random API for suppying the kernel entropy pool.

To compile this as a module, choose M here: the module
will be called caamrng.</help>
		</entry>
		<entry name="CRYPTO_DEV_FSL_CAAM_IMX"/>
		<entry name="CRYPTO_DEV_FSL_CAAM_DEBUG">
			<label>Enable debug output in CAAM driver</label>
			<help>Selecting this will enable printing of various debug
information in the CAAM driver.
</help>
		</entry>
		<entry name="CRYPTO_DEV_TALITOS">
			<label>Talitos Freescale Security Engine (SEC)</label>
			<help>Say 'Y' here to use the Freescale Security Engine (SEC)
to offload cryptographic algorithm computation.

The Freescale SEC is present on PowerQUICC 'E' processors, such
as the MPC8349E and MPC8548E.

To compile this driver as a module, choose M here: the module
will be called talitos.</help>
		</entry>
		<entry name="CRYPTO_DEV_TALITOS1">
			<label>SEC1 (SEC 1.0 and SEC Lite 1.2)</label>
			<help>Say 'Y' here to use the Freescale Security Engine (SEC) version 1.0
found on MPC82xx or the Freescale Security Engine (SEC Lite)
version 1.2 found on MPC8xx</help>
		</entry>
		<entry name="CRYPTO_DEV_TALITOS2">
			<label>SEC2+ (SEC version 2.0 or upper)</label>
			<help>Say 'Y' here to use the Freescale Security Engine (SEC)
version 2 and following as found on MPC83xx, MPC85xx, etc ...</help>
		</entry>
		<entry name="CRYPTO_DEV_IXP4XX">
			<label>Driver for IXP4xx crypto hardware acceleration</label>
			<help>Driver for the IXP4xx NPE crypto engine.</help>
		</entry>
		<entry name="CRYPTO_DEV_PPC4XX">
			<label>Driver AMCC PPC4xx crypto accelerator</label>
			<help>This option allows you to have support for AMCC crypto acceleration.</help>
		</entry>
		<entry name="HW_RANDOM_PPC4XX">
			<label>PowerPC 4xx generic true random number generator support</label>
			<help>This option provides the kernel-side support for the TRNG hardware
found in the security function of some PowerPC 4xx SoCs.</help>
		</entry>
		<entry name="CRYPTO_DEV_OMAP_SHAM">
			<label>Support for OMAP MD5/SHA1/SHA2 hw accelerator</label>
			<help>OMAP processors have MD5/SHA1/SHA2 hw accelerator. Select this if you
want to use the OMAP module for MD5/SHA1/SHA2 algorithms.</help>
		</entry>
		<entry name="CRYPTO_DEV_OMAP_AES">
			<label>Support for OMAP AES hw engine</label>
			<help>OMAP processors have AES module accelerator. Select this if you
want to use the OMAP module for AES algorithms.</help>
		</entry>
		<entry name="CRYPTO_DEV_OMAP_DES">
			<label>Support for OMAP DES/3DES hw engine</label>
			<help>OMAP processors have DES/3DES module accelerator. Select this if you
want to use the OMAP module for DES and 3DES algorithms. Currently
the ECB and CBC modes of operation are supported by the driver. Also
accesses made on unaligned boundaries are supported.</help>
		</entry>
		<entry name="CRYPTO_DEV_PICOXCELL">
			<label>Support for picoXcell IPSEC and Layer2 crypto engines</label>
			<help>This option enables support for the hardware offload engines in the
Picochip picoXcell SoC devices. Select this for IPSEC ESP offload
and for 3gpp Layer 2 ciphering support.

Saying m here will build a module named pipcoxcell_crypto.</help>
		</entry>
		<entry name="CRYPTO_DEV_SAHARA">
			<label>Support for SAHARA crypto accelerator</label>
			<help>This option enables support for the SAHARA HW crypto accelerator
found in some Freescale i.MX chips.</help>
		</entry>
		<entry name="CRYPTO_DEV_MXC_SCC">
			<label>Support for Freescale Security Controller (SCC)</label>
			<help>This option enables support for the Security Controller (SCC)
found in Freescale i.MX25 chips.</help>
		</entry>
		<entry name="CRYPTO_DEV_S5P">
			<label>Support for Samsung S5PV210/Exynos crypto accelerator</label>
			<help>This option allows you to have support for S5P crypto acceleration.
Select this to offload Samsung S5PV210 or S5PC110, Exynos from AES
algorithms execution.</help>
		</entry>
		<entry name="CRYPTO_DEV_NX">
			<label>Support for IBM PowerPC Nest (NX) cryptographic acceleration</label>
			<help>This enables support for the NX hardware cryptographic accelerator
coprocessor that is in IBM PowerPC P7+ or later processors.  This
does not actually enable any drivers, it only allows you to select
which acceleration type (encryption and/or compression) to enable.</help>
		</entry>
		<entry name="CRYPTO_DEV_NX_ENCRYPT">
			<label>Encryption acceleration support on pSeries platform</label>
			<help>Support for PowerPC Nest (NX) encryption acceleration. This
module supports acceleration for AES and SHA2 algorithms on
the pSeries platform.  If you choose 'M' here, this module
will be called nx_crypto.</help>
		</entry>
		<entry name="CRYPTO_DEV_NX_COMPRESS">
			<label>Compression acceleration support</label>
			<help>Support for PowerPC Nest (NX) compression acceleration. This
module supports acceleration for compressing memory with the 842
algorithm using the cryptographic API.  One of the platform
drivers must be selected also.  If you choose 'M' here, this
module will be called nx_compress.</help>
		</entry>
		<entry name="CRYPTO_DEV_NX_COMPRESS_PSERIES">
			<label>Compression acceleration support on pSeries platform</label>
			<help>Support for PowerPC Nest (NX) compression acceleration. This
module supports acceleration for compressing memory with the 842
algorithm.  This supports NX hardware on the pSeries platform.
If you choose 'M' here, this module will be called nx_compress_pseries.</help>
		</entry>
		<entry name="CRYPTO_DEV_NX_COMPRESS_POWERNV">
			<label>Compression acceleration support on PowerNV platform</label>
			<help>Support for PowerPC Nest (NX) compression acceleration. This
module supports acceleration for compressing memory with the 842
algorithm.  This supports NX hardware on the PowerNV platform.
If you choose 'M' here, this module will be called nx_compress_powernv.</help>
		</entry>
		<entry name="CRYPTO_DEV_UX500">
			<label>Driver for ST-Ericsson UX500 crypto hardware acceleration</label>
			<help>Driver for ST-Ericsson UX500 crypto engine.</help>
		</entry>
		<entry name="CRYPTO_DEV_UX500_CRYP">
			<label>UX500 crypto driver for CRYP block</label>
			<help>This selects the crypto driver for the UX500_CRYP hardware. It supports
AES-ECB, CBC and CTR with keys sizes of 128, 192 and 256 bit sizes.</help>
		</entry>
		<entry name="CRYPTO_DEV_UX500_HASH">
			<label>UX500 crypto driver for HASH block</label>
			<help>This selects the hash driver for the UX500_HASH hardware.
Depends on UX500/STM DMA if running in DMA mode.</help>
		</entry>
		<entry name="CRYPTO_DEV_UX500_DEBUG">
			<label>Activate ux500 platform debug-mode for crypto and hash block</label>
			<help>Say Y if you want to add debug prints to ux500_hash and
ux500_cryp devices.
</help>
		</entry>
		<entry name="CRYPTO_DEV_BFIN_CRC">
			<label>Support for Blackfin CRC hardware</label>
			<help>Newer Blackfin processors have CRC hardware. Select this if you
want to use the Blackfin CRC module.</help>
		</entry>
		<entry name="CRYPTO_DEV_ATMEL_AES">
			<label>Support for Atmel AES hw accelerator</label>
			<help>Some Atmel processors have AES hw accelerator.
Select this if you want to use the Atmel module for
AES algorithms.

To compile this driver as a module, choose M here: the module
will be called atmel-aes.</help>
		</entry>
		<entry name="CRYPTO_DEV_ATMEL_TDES">
			<label>Support for Atmel DES/TDES hw accelerator</label>
			<help>Some Atmel processors have DES/TDES hw accelerator.
Select this if you want to use the Atmel module for
DES/TDES algorithms.

To compile this driver as a module, choose M here: the module
will be called atmel-tdes.</help>
		</entry>
		<entry name="CRYPTO_DEV_ATMEL_SHA">
			<label>Support for Atmel SHA hw accelerator</label>
			<help>Some Atmel processors have SHA1/SHA224/SHA256/SHA384/SHA512
hw accelerator.
Select this if you want to use the Atmel module for
SHA1/SHA224/SHA256/SHA384/SHA512 algorithms.

To compile this driver as a module, choose M here: the module
will be called atmel-sha.</help>
		</entry>
		<entry name="CRYPTO_DEV_CCP">
			<label>Support for AMD Cryptographic Coprocessor</label>
			<help>The AMD Cryptographic Coprocessor provides hardware offload support
for encryption, hashing and related operations.</help>
		</entry>
		<entry name="CRYPTO_DEV_CCP_DD">
			<label>Cryptographic Coprocessor device driver</label>
			<help>Provides the interface to use the AMD Cryptographic Coprocessor
which can be used to offload encryption operations such as SHA,
AES and more. If you choose 'M' here, this module will be called
ccp.</help>
		</entry>
		<entry name="CRYPTO_DEV_CCP_CRYPTO">
			<label>Encryption and hashing offload support</label>
			<help>Support for using the cryptographic API with the AMD Cryptographic
Coprocessor. This module supports offload of SHA and AES algorithms.
If you choose 'M' here, this module will be called ccp_crypto.
</help>
		</entry>
		<entry name="CRYPTO_DEV_MXS_DCP">
			<label>Support for Freescale MXS DCP</label>
			<help>The Freescale i.MX23/i.MX28 has SHA1/SHA256 and AES128 CBC/ECB
co-processor on the die.

To compile this driver as a module, choose M here: the module
will be called mxs-dcp.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT"/>
		<entry name="CRYPTO_DEV_QAT_DH895xCC">
			<label>Support for Intel(R) DH895xCC</label>
			<help>Support for Intel(R) DH895xcc with Intel(R) QuickAssist Technology
for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_dh895xcc.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT_C3XXX">
			<label>Support for Intel(R) C3XXX</label>
			<help>Support for Intel(R) C3xxx with Intel(R) QuickAssist Technology
for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_c3xxx.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT_C62X">
			<label>Support for Intel(R) C62X</label>
			<help>Support for Intel(R) C62x with Intel(R) QuickAssist Technology
for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_c62x.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT_DH895xCCVF">
			<label>Support for Intel(R) DH895xCC Virtual Function</label>
			<help>Support for Intel(R) DH895xcc with Intel(R) QuickAssist Technology
Virtual Function for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_dh895xccvf.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT_C3XXXVF">
			<label>Support for Intel(R) C3XXX Virtual Function</label>
			<help>Support for Intel(R) C3xxx with Intel(R) QuickAssist Technology
Virtual Function for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_c3xxxvf.</help>
		</entry>
		<entry name="CRYPTO_DEV_QAT_C62XVF">
			<label>Support for Intel(R) C62X Virtual Function</label>
			<help>Support for Intel(R) C62x with Intel(R) QuickAssist Technology
Virtual Function for accelerating crypto and compression workloads.

To compile this as a module, choose M here: the module
will be called qat_c62xvf.
</help>
		</entry>
		<entry name="CRYPTO_DEV_QCE">
			<label>Qualcomm crypto engine accelerator</label>
			<help>This driver supports Qualcomm crypto engine accelerator
hardware. To compile this driver as a module, choose M here. The
module will be called qcrypto.</help>
		</entry>
		<entry name="CRYPTO_DEV_VMX">
			<label>Support for VMX cryptographic acceleration instructions</label>
			<help>Support for VMX cryptographic acceleration instructions.</help>
		</entry>
		<entry name="CRYPTO_DEV_VMX_ENCRYPT">
			<label>Encryption acceleration support on P8 CPU</label>
			<help>Support for VMX cryptographic acceleration instructions on Power8 CPU.
This module supports acceleration for AES and GHASH in hardware. If you
choose 'M' here, this module will be called vmx-crypto.
</help>
		</entry>
		<entry name="CRYPTO_DEV_IMGTEC_HASH">
			<label>Imagination Technologies hardware hash accelerator</label>
			<help>This driver interfaces with the Imagination Technologies
hardware hash accelerator. Supporting MD5/SHA1/SHA224/SHA256
hashing algorithms.</help>
		</entry>
		<entry name="CRYPTO_DEV_SUN4I_SS">
			<label>Support for Allwinner Security System cryptographic accelerator</label>
			<help>Some Allwinner SoC have a crypto accelerator named
Security System. Select this if you want to use it.
The Security System handle AES/DES/3DES ciphers in CBC mode
and SHA1 and MD5 hash algorithms.

To compile this driver as a module, choose M here: the module
will be called sun4i-ss.</help>
		</entry>
		<entry name="CRYPTO_DEV_ROCKCHIP">
			<label>Rockchip's Cryptographic Engine driver</label>
			<help>This driver interfaces with the hardware crypto accelerator.
Supporting cbc/ecb chainmode, and aes/des/des3_ede cipher mode.</help>
		</entry>
		<entry name="ASYMMETRIC_KEY_TYPE">
			<label>Asymmetric (public-key cryptographic) key type</label>
			<help>This option provides support for a key type that holds the data for
the asymmetric keys used for public key cryptographic operations such
as encryption, decryption, signature generation and signature
verification.</help>
		</entry>
		<entry name="ASYMMETRIC_PUBLIC_KEY_SUBTYPE">
			<label>Asymmetric public-key crypto algorithm subtype</label>
			<help>This option provides support for asymmetric public key type handling.
If signature generation and/or verification are to be used,
appropriate hash algorithms (such as SHA-1) must be available.
ENOPKG will be reported if the requisite algorithm is unavailable.</help>
		</entry>
		<entry name="X509_CERTIFICATE_PARSER">
			<label>X.509 certificate parser</label>
			<help>This option provides support for parsing X.509 format blobs for key
data and provides the ability to instantiate a crypto key from a
public key packet found inside the certificate.</help>
		</entry>
		<entry name="PKCS7_MESSAGE_PARSER">
			<label>PKCS</label>
			<help>This option provides support for parsing PKCS#7 format messages for
signature data and provides the ability to verify the signature.</help>
		</entry>
		<entry name="PKCS7_TEST_KEY">
			<label>PKCS</label>
			<help>This option provides a type of key that can be loaded up from a
PKCS#7 message - provided the message is signed by a trusted key.  If
it is, the PKCS#7 wrapper is discarded and reading the key returns
just the payload.  If it isn't, adding the key will fail with an
error.

This is intended for testing the PKCS#7 parser.</help>
		</entry>
		<entry name="SIGNED_PE_FILE_VERIFICATION">
			<label>Support for PE file signature verification</label>
			<help>This option provides support for verifying the signature(s) on a
signed PE binary.</help>
		</entry>
		<entry name="EFI_SIGNATURE_LIST_PARSER">
			<label>EFI signature list parser</label>
			<help>This option provides support for parsing EFI signature lists for
X.509 certificates and turning them into keys.</help>
		</entry>
		<container name="Certificates_for_signature_checking">
			<label>Certificates for signature checking</label>
			<entry name="MODULE_SIG_KEY">
				<label>File name or PKCS</label>
				<help>Provide the file name of a private key/certificate in PEM format,
or a PKCS#11 URI according to RFC7512. The file should contain, or
the URI should identify, both the certificate and its corresponding
private key.

If this option is unchanged from its default &quot;certs/signing_key.pem&quot;,
then the kernel will automatically generate the private key and
certificate as described in Documentation/module-signing.txt</help>
			</entry>
			<entry name="SYSTEM_TRUSTED_KEYRING">
				<label>Provide system-wide ring of trusted keys</label>
				<help>Provide a system keyring to which trusted keys can be added.  Keys in
the keyring are considered to be trusted.  Keys may be added at will
by the kernel from compiled-in data and from hardware key stores, but
userspace may only add extra keys if those keys can be verified by
keys already in the keyring.

Keys in this keyring are used by module signature checking.</help>
			</entry>
			<entry name="SYSTEM_TRUSTED_KEYS">
				<label>Additional X.509 keys for default system keyring</label>
				<help>If set, this option should be the filename of a PEM-formatted file
containing trusted X.509 certificates to be included in the default
system keyring. Any certificate used for module signing is implicitly
also trusted.

NOTE: If you previously provided keys for the system keyring in the
form of DER-encoded *.x509 files in the top-level build directory,
those are no longer used. You will need to set this option instead.</help>
			</entry>
			<entry name="SYSTEM_EXTRA_CERTIFICATE">
				<label>Reserve area for inserting a certificate without recompiling</label>
				<help>If set, space for an extra certificate will be reserved in the kernel
image. This allows introducing a trusted certificate to the default
system keyring without recompiling the kernel.</help>
			</entry>
			<entry name="SYSTEM_EXTRA_CERTIFICATE_SIZE">
				<label>Number of bytes to reserve for the extra certificate</label>
				<help>This is the number of bytes reserved in the kernel image for a
certificate to be inserted.</help>
			</entry>
			<entry name="SECONDARY_TRUSTED_KEYRING">
				<label>Provide a keyring to which extra trustable keys may be added</label>
				<help>If set, provide a keyring to which extra keys may be added, provided
those keys are not blacklisted and are vouched for by a key built
into the kernel or already in the secondary trusted keyring.</help>
			</entry>
		</container>
		<entry name="HAVE_KVM"/>
		<entry name="HAVE_KVM_IRQCHIP"/>
		<entry name="HAVE_KVM_IRQFD"/>
		<entry name="HAVE_KVM_IRQ_ROUTING"/>
		<entry name="HAVE_KVM_EVENTFD"/>
		<entry name="KVM_MMIO"/>
		<entry name="KVM_ASYNC_PF"/>
		<entry name="KVM_ASYNC_PF_SYNC"/>
		<entry name="HAVE_KVM_MSI"/>
		<entry name="HAVE_KVM_CPU_RELAX_INTERCEPT"/>
		<entry name="KVM_VFIO"/>
		<entry name="HAVE_KVM_ARCH_TLB_FLUSH_ALL"/>
		<entry name="HAVE_KVM_INVALID_WAKEUPS"/>
		<entry name="KVM_GENERIC_DIRTYLOG_READ_PROTECT"/>
		<entry name="KVM_COMPAT"/>
		<entry name="HAVE_KVM_IRQ_BYPASS"/>
		<entry name="VIRTUALIZATION">
			<label>Virtualization</label>
			<help>Say Y here to get to see options for using your Linux host to run other
operating systems inside virtual machines (guests).
This option alone does not add any kernel code.

If you say N, all options in this submenu will be skipped and disabled.</help>
		</entry>
		<entry name="KVM">
			<label>Kernel-based Virtual Machine (KVM) support</label>
			<help>Support hosting fully virtualized guest machines using hardware
virtualization extensions.  You will need a fairly recent
processor equipped with virtualization extensions. You will also
need to select one or more of the processor modules below.

This module provides access to the hardware capabilities through
a character device node named /dev/kvm.

To compile this as a module, choose M here: the module
will be called kvm.

If unsure, say N.</help>
		</entry>
		<entry name="KVM_INTEL">
			<label>KVM for Intel processors support</label>
			<help>Provides support for KVM on Intel processors equipped with the VT
extensions.

To compile this as a module, choose M here: the module
will be called kvm-intel.</help>
		</entry>
		<entry name="KVM_AMD">
			<label>KVM for AMD processors support</label>
			<help>Provides support for KVM on AMD processors equipped with the AMD-V
(SVM) extensions.

To compile this as a module, choose M here: the module
will be called kvm-amd.</help>
		</entry>
		<entry name="KVM_MMU_AUDIT">
			<label>Audit KVM MMU</label>
			<help>This option adds a R/W kVM module parameter 'mmu_audit', which allows
auditing of KVM MMU events at runtime.</help>
		</entry>
		<entry name="KVM_DEVICE_ASSIGNMENT">
			<label>KVM legacy PCI device assignment support (DEPRECATED)</label>
			<help>Provide support for legacy PCI device assignment through KVM.  The
kernel now also supports a full featured userspace device driver
framework through VFIO, which supersedes this support and provides
better security.

If unsure, say N.</help>
		</entry>
		<entry name="VHOST_NET">
			<label>Host kernel accelerator for virtio net</label>
			<help>This kernel module can be loaded in host kernel to accelerate
guest networking with virtio_net. Not to be confused with virtio_net
module itself which needs to be loaded in guest kernel.

To compile this driver as a module, choose M here: the module will
be called vhost_net.</help>
		</entry>
		<entry name="VHOST_SCSI">
			<label>VHOST_SCSI TCM fabric driver</label>
			<help>Say M here to enable the vhost_scsi TCM fabric module
for use with virtio-scsi guests</help>
		</entry>
		<entry name="VHOST_VSOCK">
			<label>vhost virtio-vsock driver</label>
			<help>This kernel module can be loaded in the host kernel to provide AF_VSOCK
sockets for communicating with guests.  The guests must have the
virtio_transport.ko driver loaded to use the virtio-vsock device.

To compile this driver as a module, choose M here: the module will be called
vhost_vsock.</help>
		</entry>
		<entry name="VHOST">
			<help>This option is selected by any driver which needs to access
the core of vhost.</help>
		</entry>
		<entry name="VHOST_CROSS_ENDIAN_LEGACY">
			<label>Cross-endian support for vhost</label>
			<help>This option allows vhost to support guests with a different byte
ordering from host while using legacy virtio.

Userspace programs can control the feature using the
VHOST_SET_VRING_ENDIAN and VHOST_GET_VRING_ENDIAN ioctls.

This is only useful on a few platforms (ppc64 and arm64). Since it
adds some overhead, it is disabled by default.

If unsure, say &quot;N&quot;.
</help>
		</entry>
		<entry name="LGUEST">
			<label>Linux hypervisor example code</label>
			<help>This is a very simple module which allows you to run
multiple instances of the same Linux kernel, using the
&quot;lguest&quot; command found in the tools/lguest directory.

Note that &quot;lguest&quot; is pronounced to rhyme with &quot;fell quest&quot;,
not &quot;rustyvisor&quot;. See tools/lguest/lguest.txt.

If unsure, say N.  If curious, say M.  If masochistic, say Y.
</help>
		</entry>
		<entry name="BINARY_PRINTF"/>
		<container name="Library_routines">
			<label>Library routines</label>
			<entry name="RAID6_PQ"/>
			<entry name="BITREVERSE"/>
			<entry name="HAVE_ARCH_BITREVERSE">
				<help>This option enables the use of hardware bit-reversal instructions on
architectures which support such operations.</help>
			</entry>
			<entry name="RATIONAL"/>
			<entry name="GENERIC_STRNCPY_FROM_USER"/>
			<entry name="GENERIC_STRNLEN_USER"/>
			<entry name="GENERIC_NET_UTILS"/>
			<entry name="GENERIC_FIND_FIRST_BIT"/>
			<entry name="NO_GENERIC_PCI_IOPORT_MAP"/>
			<entry name="GENERIC_PCI_IOMAP"/>
			<entry name="GENERIC_IOMAP"/>
			<entry name="GENERIC_IO"/>
			<entry name="STMP_DEVICE"/>
			<entry name="ARCH_USE_CMPXCHG_LOCKREF"/>
			<entry name="ARCH_HAS_FAST_MULTIPLIER"/>
			<entry name="CRC_CCITT">
				<label>CRC-CCITT functions</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC-CCITT functions, but a module built outside
the kernel tree does. Such modules that use library CRC-CCITT
functions require M here.</help>
			</entry>
			<entry name="CRC16">
				<label>CRC16 functions</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC16 functions, but a module built outside
the kernel tree does. Such modules that use library CRC16
functions require M here.</help>
			</entry>
			<entry name="CRC_T10DIF">
				<label>CRC calculation for the T10 Data Integrity Field</label>
				<help>This option is only needed if a module that's not in the
kernel tree needs to calculate CRC checks for use with the
SCSI data integrity subsystem.</help>
			</entry>
			<entry name="CRC_ITU_T">
				<label>CRC ITU-T V.41 functions</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC ITU-T V.41 functions, but a module built outside
the kernel tree does. Such modules that use library CRC ITU-T V.41
functions require M here.</help>
			</entry>
			<entry name="CRC32">
				<label>CRC32/CRC32c functions</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC32/CRC32c functions, but a module built outside
the kernel tree does. Such modules that use library CRC32/CRC32c
functions require M here.</help>
			</entry>
			<entry name="CRC32_SELFTEST">
				<label>CRC32 perform self test on init</label>
				<help>This option enables the CRC32 library functions to perform a
self test on initialization. The self test computes crc32_le
and crc32_be over byte strings with random alignment and length
and computes the total elapsed time and number of bytes processed.</help>
			</entry>
			<entry name="CRC32_SLICEBY8">
				<label>Slice by 8 bytes</label>
				<help>Calculate checksum 8 bytes at a time with a clever slicing algorithm.
This is the fastest algorithm, but comes with a 8KiB lookup table.
Most modern processors have enough cache to hold this table without
thrashing the cache.

This is the default implementation choice.  Choose this one unless
you have a good reason not to.</help>
			</entry>
			<entry name="CRC32_SLICEBY4">
				<label>Slice by 4 bytes</label>
				<help>Calculate checksum 4 bytes at a time with a clever slicing algorithm.
This is a bit slower than slice by 8, but has a smaller 4KiB lookup
table.

Only choose this option if you know what you are doing.</help>
			</entry>
			<entry name="CRC32_SARWATE">
				<label>Sarwate's Algorithm (one byte at a time)</label>
				<help>Calculate checksum a byte at a time using Sarwate's algorithm.  This
is not particularly fast, but has a small 256 byte lookup table.

Only choose this option if you know what you are doing.</help>
			</entry>
			<entry name="CRC32_BIT">
				<label>Classic Algorithm (one bit at a time)</label>
				<help>Calculate checksum one bit at a time.  This is VERY slow, but has
no lookup table.  This is provided as a debugging option.

Only choose this option if you are debugging crc32.</help>
			</entry>
			<entry name="CRC7">
				<label>CRC7 functions</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC7 functions, but a module built outside
the kernel tree does. Such modules that use library CRC7
functions require M here.</help>
			</entry>
			<entry name="LIBCRC32C">
				<label>CRC32c (Castagnoli, et al) Cyclic Redundancy-Check</label>
				<help>This option is provided for the case where no in-kernel-tree
modules require CRC32c functions, but a module built outside the
kernel tree does. Such modules that use library CRC32c functions
require M here.  See Castagnoli93.
Module will be libcrc32c.</help>
			</entry>
			<entry name="CRC8">
				<label>CRC8 function</label>
				<help>This option provides CRC8 function. Drivers may select this
when they need to do cyclic redundancy check according CRC8
algorithm. Module will be called crc8.</help>
			</entry>
			<entry name="AUDIT_GENERIC"/>
			<entry name="AUDIT_ARCH_COMPAT_GENERIC"/>
			<entry name="AUDIT_COMPAT_GENERIC"/>
			<entry name="RANDOM32_SELFTEST">
				<label>PRNG perform self test on init</label>
				<help>This option enables the 32 bit PRNG library functions to perform a
self test on initialization.</help>
			</entry>
			<entry name="_842_COMPRESS"/>
			<entry name="_842_DECOMPRESS"/>
			<entry name="ZLIB_INFLATE"/>
			<entry name="ZLIB_DEFLATE"/>
			<entry name="LZO_COMPRESS"/>
			<entry name="LZO_DECOMPRESS"/>
			<entry name="LZ4_COMPRESS"/>
			<entry name="LZ4HC_COMPRESS"/>
			<entry name="LZ4_DECOMPRESS"/>
			<entry name="XZ_DEC">
				<label>XZ decompression support</label>
				<help>LZMA2 compression algorithm and BCJ filters are supported using
the .xz file format as the container. For integrity checking,
CRC32 is supported. See Documentation/xz.txt for more information.</help>
			</entry>
			<entry name="XZ_DEC_X86">
				<label>x86 BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_POWERPC">
				<label>PowerPC BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_IA64">
				<label>IA-64 BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_ARM">
				<label>ARM BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_ARMTHUMB">
				<label>ARM-Thumb BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_SPARC">
				<label>SPARC BCJ filter decoder&quot; if EXPERT</label>
			</entry>
			<entry name="XZ_DEC_BCJ"/>
			<entry name="XZ_DEC_TEST">
				<label>XZ decompressor tester</label>
				<help>This allows passing .xz files to the in-kernel XZ decoder via
a character special file. It calculates CRC32 of the decompressed
data and writes diagnostics to the system log.

Unless you are developing the XZ decoder, you don't need this
and should say N.
</help>
			</entry>
			<entry name="DECOMPRESS_GZIP"/>
			<entry name="DECOMPRESS_BZIP2"/>
			<entry name="DECOMPRESS_LZMA"/>
			<entry name="DECOMPRESS_XZ"/>
			<entry name="DECOMPRESS_LZO"/>
			<entry name="DECOMPRESS_LZ4"/>
			<entry name="GENERIC_ALLOCATOR"/>
			<entry name="REED_SOLOMON"/>
			<entry name="REED_SOLOMON_ENC8"/>
			<entry name="REED_SOLOMON_DEC8"/>
			<entry name="REED_SOLOMON_ENC16"/>
			<entry name="REED_SOLOMON_DEC16"/>
			<entry name="BCH"/>
			<entry name="BCH_CONST_PARAMS">
				<help>Drivers may select this option to force specific constant
values for parameters 'm' (Galois field order) and 't'
(error correction capability). Those specific values must
be set by declaring default values for symbols BCH_CONST_M
and BCH_CONST_T.
Doing so will enable extra compiler optimizations,
improving encoding and decoding performance up to 2x for
usual (m,t) values (typically such that m*t &lt; 200).
When this option is selected, the BCH library supports
only a single (m,t) configuration. This is mainly useful
for NAND flash board drivers requiring known, fixed BCH
parameters.</help>
			</entry>
			<entry name="BCH_CONST_M">
				<help>Constant value for Galois field order 'm'. If 'k' is the
number of data bits to protect, 'm' should be chosen such
that (k + m*t) &lt;= 2**m - 1.
Drivers should declare a default value for this symbol if
they select option BCH_CONST_PARAMS.</help>
			</entry>
			<entry name="BCH_CONST_T">
				<help>Constant value for error correction capability in bits 't'.
Drivers should declare a default value for this symbol if
they select option BCH_CONST_PARAMS.</help>
			</entry>
			<entry name="TEXTSEARCH"/>
			<entry name="TEXTSEARCH_KMP"/>
			<entry name="TEXTSEARCH_BM"/>
			<entry name="TEXTSEARCH_FSM"/>
			<entry name="BTREE"/>
			<entry name="INTERVAL_TREE">
				<help>Simple, embeddable, interval-tree. Can find the start of an
overlapping range in log(n) time and then iterate over all
overlapping nodes. The algorithm is implemented as an
augmented rbtree.

See:

Documentation/rbtree.txt

for more information.</help>
			</entry>
			<entry name="RADIX_TREE_MULTIORDER"/>
			<entry name="ASSOCIATIVE_ARRAY">
				<help>Generic associative array.  Can be searched and iterated over whilst
it is being modified.  It is also reasonably quick to search and
modify.  The algorithms are non-recursive, and the trees are highly
capacious.

See:

Documentation/assoc_array.txt

for more information.</help>
			</entry>
			<entry name="HAS_IOMEM"/>
			<entry name="HAS_IOPORT_MAP"/>
			<entry name="HAS_DMA"/>
			<entry name="CHECK_SIGNATURE"/>
			<entry name="CPUMASK_OFFSTACK">
				<label>Force CPU masks off stack&quot; if DEBUG_PER_CPU_MAPS</label>
				<help>Use dynamic allocation for cpumask_var_t, instead of putting
them on the stack.  This is a bit more expensive, but avoids
stack overflow.</help>
			</entry>
			<entry name="CPU_RMAP"/>
			<entry name="DQL"/>
			<entry name="GLOB">
				<help>This option provides a glob_match function for performing
simple text pattern matching.  It originated in the ATA code
to blacklist particular drive models, but other device drivers
may need similar functionality.

All drivers in the Linux kernel tree that require this function
should automatically select this option.  Say N unless you
are compiling an out-of tree driver which tells you that it
depends on this.</help>
			</entry>
			<entry name="GLOB_SELFTEST">
				<label>glob self-test on init</label>
				<help>This option enables a simple self-test of the glob_match
function on startup.	It is primarily useful for people
working on the code to ensure they haven't introduced any
regressions.

It only adds a little bit of code and slows kernel boot (or
module load) by a small amount, so you're welcome to play with
it, but you probably don't need it.</help>
			</entry>
			<entry name="NLATTR"/>
			<entry name="GENERIC_ATOMIC64"/>
			<entry name="ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE"/>
			<entry name="LRU_CACHE"/>
			<entry name="CLZ_TAB"/>
			<entry name="CORDIC">
				<label>CORDIC algorithm</label>
				<help>This option provides an implementation of the CORDIC algorithm;
calculations are in fixed point. Module will be called cordic.</help>
			</entry>
			<entry name="DDR">
				<label>JEDEC DDR data</label>
				<help>Data from JEDEC specs for DDR SDRAM memories,
particularly the AC timing parameters and addressing
information. This data is useful for drivers handling
DDR SDRAM controllers.</help>
			</entry>
			<entry name="IRQ_POLL">
				<label>IRQ polling library</label>
				<help>Helper library to poll interrupt mitigation using polling.</help>
			</entry>
			<entry name="MPILIB">
				<help>Multiprecision maths library from GnuPG.
It is used to implement RSA digital signature verification,
which is used by IMA/EVM digital signature extension.</help>
			</entry>
			<entry name="SIGNATURE">
				<help>Digital signature verification. Currently only RSA is supported.
Implementation is done using GnuPG MPI library</help>
			</entry>
			<entry name="LIBFDT"/>
			<entry name="OID_REGISTRY">
				<help>Enable fast lookup object identifier registry.</help>
			</entry>
			<entry name="UCS2_STRING"/>
			<entry name="FONT_SUPPORT"/>
			<entry name="FONTS">
				<label>Select compiled-in fonts</label>
				<help>Say Y here if you would like to use fonts other than the default
your frame buffer console usually use.

Note that the answer to this question won't directly affect the
kernel: saying N will just cause the configurator to skip all
the questions about foreign fonts.

If unsure, say N (the default choices are safe).</help>
			</entry>
			<entry name="FONT_8x8">
				<label>VGA 8x8 font&quot; if FONTS</label>
				<help>This is the &quot;high resolution&quot; font for the VGA frame buffer (the one
provided by the text console 80x50 (and higher) modes).

Note that this is a poor quality font. The VGA 8x16 font is quite a
lot more readable.

Given the resolution provided by the frame buffer device, answer N
here is safe.</help>
			</entry>
			<entry name="FONT_8x16">
				<label>VGA 8x16 font&quot; if FONTS</label>
				<help>This is the &quot;high resolution&quot; font for the VGA frame buffer (the one
provided by the VGA text console 80x25 mode.

If unsure, say Y.</help>
			</entry>
			<entry name="FONT_6x11">
				<label>Mac console 6x11 font (not supported by all drivers)&quot; if FONTS</label>
				<help>Small console font with Macintosh-style high-half glyphs.  Some Mac
framebuffer drivers don't support this one at all.</help>
			</entry>
			<entry name="FONT_7x14">
				<label>console 7x14 font (not supported by all drivers)&quot; if FONTS</label>
				<help>Console font with characters just a bit smaller than the default.
If the standard 8x16 font is a little too big for you, say Y.
Otherwise, say N.</help>
			</entry>
			<entry name="FONT_PEARL_8x8">
				<label>Pearl (old m68k) console 8x8 font&quot; if FONTS</label>
				<help>Small console font with PC-style control-character and high-half
glyphs.</help>
			</entry>
			<entry name="FONT_ACORN_8x8">
				<label>Acorn console 8x8 font&quot; if FONTS</label>
				<help>Small console font with PC-style control characters and high-half
glyphs.</help>
			</entry>
			<entry name="FONT_MINI_4x6">
				<label>Mini 4x6 font</label>
			</entry>
			<entry name="FONT_6x10">
				<label>Medium-size 6x10 font</label>
				<help>Medium-size console font. Suitable for framebuffer consoles on
embedded devices with a 320x240 screen, to get a reasonable number
of characters (53x24) that are still at a readable size.</help>
			</entry>
			<entry name="FONT_SUN8x16">
				<label>Sparc console 8x16 font</label>
				<help>This is the high resolution console font for Sun machines. Say Y.</help>
			</entry>
			<entry name="FONT_SUN12x22">
				<label>Sparc console 12x22 font (not supported by all drivers)</label>
				<help>This is the high resolution console font for Sun machines with very
big letters (like the letters used in the SPARC PROM). If the
standard font is unreadable for you, say Y, otherwise say N.</help>
			</entry>
			<entry name="FONT_10x18">
				<label>console 10x18 font (not supported by all drivers)&quot; if FONTS</label>
				<help>This is a high resolution console font for machines with very
big letters. It fits between the sun 12x22 and the normal 8x16 font.
If other fonts are too big or too small for you, say Y, otherwise say N.</help>
			</entry>
			<entry name="FONT_AUTOSELECT"/>
			<entry name="SG_SPLIT">
				<help>Provides a helper to split scatterlists into chunks, each chunk being
a scatterlist. This should be selected by a driver or an API which
whishes to split a scatterlist amongst multiple DMA channels.</help>
			</entry>
			<entry name="SG_POOL">
				<help>Provides a helper to allocate chained scatterlists. This should be
selected by a driver or an API which whishes to allocate chained
scatterlist.</help>
			</entry>
			<entry name="ARCH_HAS_SG_CHAIN"/>
			<entry name="ARCH_HAS_PMEM_API"/>
			<entry name="ARCH_HAS_MMIO_FLUSH"/>
			<entry name="STACKDEPOT"/>
		</container>
	</container>
</freeconf-help>
