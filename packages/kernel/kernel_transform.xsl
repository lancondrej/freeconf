<?xml version="1.0" ?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output indent="no" method="text"/>
	<xsl:template match="_64BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">64BIT=y</xsl:when>
			<xsl:otherwise># 64BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_32=y</xsl:when>
			<xsl:otherwise># X86_32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_64=y</xsl:when>
			<xsl:otherwise># X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86=y</xsl:when>
			<xsl:otherwise># X86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INSTRUCTION_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INSTRUCTION_DECODER=y</xsl:when>
			<xsl:otherwise># INSTRUCTION_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OUTPUT_FORMAT">
		OUTPUT_FORMAT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_DEFCONFIG">
		ARCH_DEFCONFIG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="LOCKDEP_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOCKDEP_SUPPORT=y</xsl:when>
			<xsl:otherwise># LOCKDEP_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STACKTRACE_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STACKTRACE_SUPPORT=y</xsl:when>
			<xsl:otherwise># STACKTRACE_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMU=y</xsl:when>
			<xsl:otherwise># MMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBUS=y</xsl:when>
			<xsl:otherwise># SBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_DMA_MAP_STATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_DMA_MAP_STATE=y</xsl:when>
			<xsl:otherwise># NEED_DMA_MAP_STATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_SG_DMA_LENGTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_SG_DMA_LENGTH=y</xsl:when>
			<xsl:otherwise># NEED_SG_DMA_LENGTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_ISA_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_ISA_DMA=y</xsl:when>
			<xsl:otherwise># GENERIC_ISA_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_BUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_BUG=y</xsl:when>
			<xsl:otherwise># GENERIC_BUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_BUG_RELATIVE_POINTERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_BUG_RELATIVE_POINTERS=y</xsl:when>
			<xsl:otherwise># GENERIC_BUG_RELATIVE_POINTERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_HWEIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_HWEIGHT=y</xsl:when>
			<xsl:otherwise># GENERIC_HWEIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MAY_HAVE_PC_FDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_MAY_HAVE_PC_FDC=y</xsl:when>
			<xsl:otherwise># ARCH_MAY_HAVE_PC_FDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RWSEM_XCHGADD_ALGORITHM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RWSEM_XCHGADD_ALGORITHM=y</xsl:when>
			<xsl:otherwise># RWSEM_XCHGADD_ALGORITHM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CALIBRATE_DELAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CALIBRATE_DELAY=y</xsl:when>
			<xsl:otherwise># GENERIC_CALIBRATE_DELAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_CPU_RELAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_CPU_RELAX=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_CPU_RELAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_CACHE_LINE_SIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_CACHE_LINE_SIZE=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_CACHE_LINE_SIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_SETUP_PER_CPU_AREA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_SETUP_PER_CPU_AREA=y</xsl:when>
			<xsl:otherwise># HAVE_SETUP_PER_CPU_AREA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_PER_CPU_EMBED_FIRST_CHUNK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_PER_CPU_EMBED_FIRST_CHUNK=y</xsl:when>
			<xsl:otherwise># NEED_PER_CPU_EMBED_FIRST_CHUNK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_PER_CPU_PAGE_FIRST_CHUNK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_PER_CPU_PAGE_FIRST_CHUNK=y</xsl:when>
			<xsl:otherwise># NEED_PER_CPU_PAGE_FIRST_CHUNK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HIBERNATION_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HIBERNATION_POSSIBLE=y</xsl:when>
			<xsl:otherwise># ARCH_HIBERNATION_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUSPEND_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUSPEND_POSSIBLE=y</xsl:when>
			<xsl:otherwise># ARCH_SUSPEND_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_HUGE_PMD_SHARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_HUGE_PMD_SHARE=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_HUGE_PMD_SHARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_GENERAL_HUGETLB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_GENERAL_HUGETLB=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_GENERAL_HUGETLB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZONE_DMA32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZONE_DMA32=y</xsl:when>
			<xsl:otherwise># ZONE_DMA32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_ARCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_ARCH=y</xsl:when>
			<xsl:otherwise># AUDIT_ARCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_OPTIMIZED_INLINING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_OPTIMIZED_INLINING=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_OPTIMIZED_INLINING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_DEBUG_PAGEALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_DEBUG_PAGEALLOC=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_DEBUG_PAGEALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_INTEL_TXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_INTEL_TXT=y</xsl:when>
			<xsl:otherwise># HAVE_INTEL_TXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_32_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_32_SMP=y</xsl:when>
			<xsl:otherwise># X86_32_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_64_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_64_SMP=y</xsl:when>
			<xsl:otherwise># X86_64_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_32_LAZY_GS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_32_LAZY_GS=y</xsl:when>
			<xsl:otherwise># X86_32_LAZY_GS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_UPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_UPROBES=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_UPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIX_EARLYCON_MEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIX_EARLYCON_MEM=y</xsl:when>
			<xsl:otherwise># FIX_EARLYCON_MEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_RODATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_RODATA=y</xsl:when>
			<xsl:otherwise># DEBUG_RODATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PGTABLE_LEVELS">
		PGTABLE_LEVELS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH">
		ARCH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="KERNELVERSION">
		KERNELVERSION=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DEFCONFIG_LIST">
		DEFCONFIG_LIST=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CONSTRUCTORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONSTRUCTORS=y</xsl:when>
			<xsl:otherwise># CONSTRUCTORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_WORK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_WORK=y</xsl:when>
			<xsl:otherwise># IRQ_WORK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BUILDTIME_EXTABLE_SORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BUILDTIME_EXTABLE_SORT=y</xsl:when>
			<xsl:otherwise># BUILDTIME_EXTABLE_SORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BROKEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BROKEN=y</xsl:when>
			<xsl:otherwise># BROKEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BROKEN_ON_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BROKEN_ON_SMP=y</xsl:when>
			<xsl:otherwise># BROKEN_ON_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INIT_ENV_ARG_LIMIT">
		INIT_ENV_ARG_LIMIT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CROSS_COMPILE">
		CROSS_COMPILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="COMPILE_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPILE_TEST=y</xsl:when>
			<xsl:otherwise># COMPILE_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOCALVERSION">
		LOCALVERSION=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="LOCALVERSION_AUTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOCALVERSION_AUTO=y</xsl:when>
			<xsl:otherwise># LOCALVERSION_AUTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_GZIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_GZIP=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_GZIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_BZIP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_BZIP2=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_BZIP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_LZMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_LZMA=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_LZMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_XZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_XZ=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_XZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_LZO=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KERNEL_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KERNEL_LZ4=y</xsl:when>
			<xsl:otherwise># HAVE_KERNEL_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_GZIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_GZIP=y</xsl:when>
			<xsl:otherwise># KERNEL_GZIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_BZIP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_BZIP2=y</xsl:when>
			<xsl:otherwise># KERNEL_BZIP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_LZMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_LZMA=y</xsl:when>
			<xsl:otherwise># KERNEL_LZMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_XZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_XZ=y</xsl:when>
			<xsl:otherwise># KERNEL_XZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_LZO=y</xsl:when>
			<xsl:otherwise># KERNEL_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNEL_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNEL_LZ4=y</xsl:when>
			<xsl:otherwise># KERNEL_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_HOSTNAME">
		DEFAULT_HOSTNAME=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="VERSION_SIGNATURE">
		VERSION_SIGNATURE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SWAP=y</xsl:when>
			<xsl:otherwise># SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSVIPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSVIPC=y</xsl:when>
			<xsl:otherwise># SYSVIPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSVIPC_SYSCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSVIPC_SYSCTL=y</xsl:when>
			<xsl:otherwise># SYSVIPC_SYSCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POSIX_MQUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POSIX_MQUEUE=y</xsl:when>
			<xsl:otherwise># POSIX_MQUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POSIX_MQUEUE_SYSCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POSIX_MQUEUE_SYSCTL=y</xsl:when>
			<xsl:otherwise># POSIX_MQUEUE_SYSCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CROSS_MEMORY_ATTACH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CROSS_MEMORY_ATTACH=y</xsl:when>
			<xsl:otherwise># CROSS_MEMORY_ATTACH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FHANDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FHANDLE=y</xsl:when>
			<xsl:otherwise># FHANDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USELIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USELIB=y</xsl:when>
			<xsl:otherwise># USELIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT=y</xsl:when>
			<xsl:otherwise># AUDIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_AUDITSYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_AUDITSYSCALL=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_AUDITSYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDITSYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDITSYSCALL=y</xsl:when>
			<xsl:otherwise># AUDITSYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_WATCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_WATCH=y</xsl:when>
			<xsl:otherwise># AUDIT_WATCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_TREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_TREE=y</xsl:when>
			<xsl:otherwise># AUDIT_TREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAY_HAVE_SPARSE_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAY_HAVE_SPARSE_IRQ=y</xsl:when>
			<xsl:otherwise># MAY_HAVE_SPARSE_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_LEGACY=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_PROBE=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_SHOW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_SHOW=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_SHOW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_SHOW_LEVEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_SHOW_LEVEL=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_SHOW_LEVEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_LEGACY_ALLOC_HWIRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_LEGACY_ALLOC_HWIRQ=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_LEGACY_ALLOC_HWIRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_PENDING_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_PENDING_IRQ=y</xsl:when>
			<xsl:otherwise># GENERIC_PENDING_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_MIGRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_MIGRATION=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_MIGRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUTO_IRQ_AFFINITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUTO_IRQ_AFFINITY=y</xsl:when>
			<xsl:otherwise># AUTO_IRQ_AFFINITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HARDIRQS_SW_RESEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HARDIRQS_SW_RESEND=y</xsl:when>
			<xsl:otherwise># HARDIRQS_SW_RESEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_PREFLOW_FASTEOI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_PREFLOW_FASTEOI=y</xsl:when>
			<xsl:otherwise># IRQ_PREFLOW_FASTEOI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_EDGE_EOI_HANDLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_EDGE_EOI_HANDLER=y</xsl:when>
			<xsl:otherwise># IRQ_EDGE_EOI_HANDLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_CHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_CHIP=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_CHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_DOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_DOMAIN=y</xsl:when>
			<xsl:otherwise># IRQ_DOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_DOMAIN_HIERARCHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_DOMAIN_HIERARCHY=y</xsl:when>
			<xsl:otherwise># IRQ_DOMAIN_HIERARCHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IRQ_IPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IRQ_IPI=y</xsl:when>
			<xsl:otherwise># GENERIC_IRQ_IPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_MSI_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_MSI_IRQ=y</xsl:when>
			<xsl:otherwise># GENERIC_MSI_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_MSI_IRQ_DOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_MSI_IRQ_DOMAIN=y</xsl:when>
			<xsl:otherwise># GENERIC_MSI_IRQ_DOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HANDLE_DOMAIN_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HANDLE_DOMAIN_IRQ=y</xsl:when>
			<xsl:otherwise># HANDLE_DOMAIN_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_DOMAIN_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_DOMAIN_DEBUG=y</xsl:when>
			<xsl:otherwise># IRQ_DOMAIN_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_FORCED_THREADING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_FORCED_THREADING=y</xsl:when>
			<xsl:otherwise># IRQ_FORCED_THREADING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_FORCED_THREADING_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_FORCED_THREADING_DEFAULT=y</xsl:when>
			<xsl:otherwise># IRQ_FORCED_THREADING_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSE_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSE_IRQ=y</xsl:when>
			<xsl:otherwise># SPARSE_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLOCKSOURCE_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLOCKSOURCE_WATCHDOG=y</xsl:when>
			<xsl:otherwise># CLOCKSOURCE_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_CLOCKSOURCE_DATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_CLOCKSOURCE_DATA=y</xsl:when>
			<xsl:otherwise># ARCH_CLOCKSOURCE_DATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLOCKSOURCE_VALIDATE_LAST_CYCLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLOCKSOURCE_VALIDATE_LAST_CYCLE=y</xsl:when>
			<xsl:otherwise># CLOCKSOURCE_VALIDATE_LAST_CYCLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_TIME_VSYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_TIME_VSYSCALL=y</xsl:when>
			<xsl:otherwise># GENERIC_TIME_VSYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_TIME_VSYSCALL_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_TIME_VSYSCALL_OLD=y</xsl:when>
			<xsl:otherwise># GENERIC_TIME_VSYSCALL_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_USES_GETTIMEOFFSET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_USES_GETTIMEOFFSET=y</xsl:when>
			<xsl:otherwise># ARCH_USES_GETTIMEOFFSET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CLOCKEVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CLOCKEVENTS=y</xsl:when>
			<xsl:otherwise># GENERIC_CLOCKEVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_TICK_BROADCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_TICK_BROADCAST=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_TICK_BROADCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CLOCKEVENTS_BROADCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CLOCKEVENTS_BROADCAST=y</xsl:when>
			<xsl:otherwise># GENERIC_CLOCKEVENTS_BROADCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CLOCKEVENTS_MIN_ADJUST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CLOCKEVENTS_MIN_ADJUST=y</xsl:when>
			<xsl:otherwise># GENERIC_CLOCKEVENTS_MIN_ADJUST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CMOS_UPDATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CMOS_UPDATE=y</xsl:when>
			<xsl:otherwise># GENERIC_CMOS_UPDATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TICK_ONESHOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TICK_ONESHOT=y</xsl:when>
			<xsl:otherwise># TICK_ONESHOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ_COMMON=y</xsl:when>
			<xsl:otherwise># NO_HZ_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ_PERIODIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HZ_PERIODIC=y</xsl:when>
			<xsl:otherwise># HZ_PERIODIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ_IDLE=y</xsl:when>
			<xsl:otherwise># NO_HZ_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_FULL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ_FULL=y</xsl:when>
			<xsl:otherwise># NO_HZ_FULL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_FULL_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ_FULL_ALL=y</xsl:when>
			<xsl:otherwise># NO_HZ_FULL_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_FULL_SYSIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ_FULL_SYSIDLE=y</xsl:when>
			<xsl:otherwise># NO_HZ_FULL_SYSIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_HZ_FULL_SYSIDLE_SMALL">
		NO_HZ_FULL_SYSIDLE_SMALL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NO_HZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_HZ=y</xsl:when>
			<xsl:otherwise># NO_HZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIGH_RES_TIMERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIGH_RES_TIMERS=y</xsl:when>
			<xsl:otherwise># HIGH_RES_TIMERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRT_CPU_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRT_CPU_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># VIRT_CPU_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TICK_CPU_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TICK_CPU_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># TICK_CPU_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRT_CPU_ACCOUNTING_NATIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRT_CPU_ACCOUNTING_NATIVE=y</xsl:when>
			<xsl:otherwise># VIRT_CPU_ACCOUNTING_NATIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRT_CPU_ACCOUNTING_GEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRT_CPU_ACCOUNTING_GEN=y</xsl:when>
			<xsl:otherwise># VIRT_CPU_ACCOUNTING_GEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_TIME_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_TIME_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># IRQ_TIME_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BSD_PROCESS_ACCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BSD_PROCESS_ACCT=y</xsl:when>
			<xsl:otherwise># BSD_PROCESS_ACCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BSD_PROCESS_ACCT_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BSD_PROCESS_ACCT_V3=y</xsl:when>
			<xsl:otherwise># BSD_PROCESS_ACCT_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TASKSTATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TASKSTATS=y</xsl:when>
			<xsl:otherwise># TASKSTATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TASK_DELAY_ACCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TASK_DELAY_ACCT=y</xsl:when>
			<xsl:otherwise># TASK_DELAY_ACCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TASK_XACCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TASK_XACCT=y</xsl:when>
			<xsl:otherwise># TASK_XACCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TASK_IO_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TASK_IO_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># TASK_IO_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TREE_RCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TREE_RCU=y</xsl:when>
			<xsl:otherwise># TREE_RCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PREEMPT_RCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PREEMPT_RCU=y</xsl:when>
			<xsl:otherwise># PREEMPT_RCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TINY_RCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TINY_RCU=y</xsl:when>
			<xsl:otherwise># TINY_RCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_EXPERT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_EXPERT=y</xsl:when>
			<xsl:otherwise># RCU_EXPERT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SRCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SRCU=y</xsl:when>
			<xsl:otherwise># SRCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TASKS_RCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TASKS_RCU=y</xsl:when>
			<xsl:otherwise># TASKS_RCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_STALL_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_STALL_COMMON=y</xsl:when>
			<xsl:otherwise># RCU_STALL_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONTEXT_TRACKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONTEXT_TRACKING=y</xsl:when>
			<xsl:otherwise># CONTEXT_TRACKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONTEXT_TRACKING_FORCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONTEXT_TRACKING_FORCE=y</xsl:when>
			<xsl:otherwise># CONTEXT_TRACKING_FORCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_FANOUT">
		RCU_FANOUT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RCU_FANOUT_LEAF">
		RCU_FANOUT_LEAF=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RCU_FAST_NO_HZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_FAST_NO_HZ=y</xsl:when>
			<xsl:otherwise># RCU_FAST_NO_HZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TREE_RCU_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TREE_RCU_TRACE=y</xsl:when>
			<xsl:otherwise># TREE_RCU_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_BOOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_BOOST=y</xsl:when>
			<xsl:otherwise># RCU_BOOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_KTHREAD_PRIO">
		RCU_KTHREAD_PRIO=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RCU_BOOST_DELAY">
		RCU_BOOST_DELAY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RCU_NOCB_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_NOCB_CPU=y</xsl:when>
			<xsl:otherwise># RCU_NOCB_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_NOCB_CPU_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_NOCB_CPU_NONE=y</xsl:when>
			<xsl:otherwise># RCU_NOCB_CPU_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_NOCB_CPU_ZERO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_NOCB_CPU_ZERO=y</xsl:when>
			<xsl:otherwise># RCU_NOCB_CPU_ZERO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_NOCB_CPU_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_NOCB_CPU_ALL=y</xsl:when>
			<xsl:otherwise># RCU_NOCB_CPU_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCU_EXPEDITE_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCU_EXPEDITE_BOOT=y</xsl:when>
			<xsl:otherwise># RCU_EXPEDITE_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BUILD_BIN2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BUILD_BIN2C=y</xsl:when>
			<xsl:otherwise># BUILD_BIN2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IKCONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IKCONFIG=y</xsl:when>
			<xsl:when test=". = 'module'">IKCONFIG=m</xsl:when>
			<xsl:otherwise># IKCONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IKCONFIG_PROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IKCONFIG_PROC=y</xsl:when>
			<xsl:otherwise># IKCONFIG_PROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOG_BUF_SHIFT">
		LOG_BUF_SHIFT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="LOG_CPU_MAX_BUF_SHIFT">
		LOG_CPU_MAX_BUF_SHIFT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NMI_LOG_BUF_SHIFT">
		NMI_LOG_BUF_SHIFT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HAVE_UNSTABLE_SCHED_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_UNSTABLE_SCHED_CLOCK=y</xsl:when>
			<xsl:otherwise># HAVE_UNSTABLE_SCHED_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_SCHED_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_SCHED_CLOCK=y</xsl:when>
			<xsl:otherwise># GENERIC_SCHED_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_NUMA_BALANCING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_NUMA_BALANCING=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_NUMA_BALANCING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_BATCHED_UNMAP_TLB_FLUSH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_INT128">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_INT128=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_INT128 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_NUMA_VARIABLE_LOCALITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_NUMA_VARIABLE_LOCALITY=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_NUMA_VARIABLE_LOCALITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NUMA_BALANCING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NUMA_BALANCING=y</xsl:when>
			<xsl:otherwise># NUMA_BALANCING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NUMA_BALANCING_DEFAULT_ENABLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NUMA_BALANCING_DEFAULT_ENABLED=y</xsl:when>
			<xsl:otherwise># NUMA_BALANCING_DEFAULT_ENABLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUPS=y</xsl:when>
			<xsl:otherwise># CGROUPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PAGE_COUNTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PAGE_COUNTER=y</xsl:when>
			<xsl:otherwise># PAGE_COUNTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMCG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMCG=y</xsl:when>
			<xsl:otherwise># MEMCG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMCG_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMCG_SWAP=y</xsl:when>
			<xsl:otherwise># MEMCG_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMCG_SWAP_ENABLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMCG_SWAP_ENABLED=y</xsl:when>
			<xsl:otherwise># MEMCG_SWAP_ENABLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_CGROUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_CGROUP=y</xsl:when>
			<xsl:otherwise># BLK_CGROUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_BLK_CGROUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_BLK_CGROUP=y</xsl:when>
			<xsl:otherwise># DEBUG_BLK_CGROUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_WRITEBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_WRITEBACK=y</xsl:when>
			<xsl:otherwise># CGROUP_WRITEBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_SCHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_SCHED=y</xsl:when>
			<xsl:otherwise># CGROUP_SCHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FAIR_GROUP_SCHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FAIR_GROUP_SCHED=y</xsl:when>
			<xsl:otherwise># FAIR_GROUP_SCHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFS_BANDWIDTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFS_BANDWIDTH=y</xsl:when>
			<xsl:otherwise># CFS_BANDWIDTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT_GROUP_SCHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT_GROUP_SCHED=y</xsl:when>
			<xsl:otherwise># RT_GROUP_SCHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_PIDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_PIDS=y</xsl:when>
			<xsl:otherwise># CGROUP_PIDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_FREEZER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_FREEZER=y</xsl:when>
			<xsl:otherwise># CGROUP_FREEZER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_HUGETLB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_HUGETLB=y</xsl:when>
			<xsl:otherwise># CGROUP_HUGETLB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPUSETS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPUSETS=y</xsl:when>
			<xsl:otherwise># CPUSETS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_PID_CPUSET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_PID_CPUSET=y</xsl:when>
			<xsl:otherwise># PROC_PID_CPUSET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_DEVICE=y</xsl:when>
			<xsl:otherwise># CGROUP_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_CPUACCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_CPUACCT=y</xsl:when>
			<xsl:otherwise># CGROUP_CPUACCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_PERF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_PERF=y</xsl:when>
			<xsl:otherwise># CGROUP_PERF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_DEBUG=y</xsl:when>
			<xsl:otherwise># CGROUP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHECKPOINT_RESTORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHECKPOINT_RESTORE=y</xsl:when>
			<xsl:otherwise># CHECKPOINT_RESTORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NAMESPACES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NAMESPACES=y</xsl:when>
			<xsl:otherwise># NAMESPACES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UTS_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UTS_NS=y</xsl:when>
			<xsl:otherwise># UTS_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPC_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPC_NS=y</xsl:when>
			<xsl:otherwise># IPC_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USER_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USER_NS=y</xsl:when>
			<xsl:otherwise># USER_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PID_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PID_NS=y</xsl:when>
			<xsl:otherwise># PID_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_NS=y</xsl:when>
			<xsl:otherwise># NET_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCHED_AUTOGROUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCHED_AUTOGROUP=y</xsl:when>
			<xsl:otherwise># SCHED_AUTOGROUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSFS_DEPRECATED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSFS_DEPRECATED=y</xsl:when>
			<xsl:otherwise># SYSFS_DEPRECATED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSFS_DEPRECATED_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSFS_DEPRECATED_V2=y</xsl:when>
			<xsl:otherwise># SYSFS_DEPRECATED_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RELAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RELAY=y</xsl:when>
			<xsl:otherwise># RELAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_INITRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_INITRD=y</xsl:when>
			<xsl:otherwise># BLK_DEV_INITRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INITRAMFS_SOURCE">
		INITRAMFS_SOURCE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="INITRAMFS_ROOT_UID">
		INITRAMFS_ROOT_UID=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="INITRAMFS_ROOT_GID">
		INITRAMFS_ROOT_GID=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RD_GZIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_GZIP=y</xsl:when>
			<xsl:otherwise># RD_GZIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RD_BZIP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_BZIP2=y</xsl:when>
			<xsl:otherwise># RD_BZIP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RD_LZMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_LZMA=y</xsl:when>
			<xsl:otherwise># RD_LZMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RD_XZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_XZ=y</xsl:when>
			<xsl:otherwise># RD_XZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RD_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_LZO=y</xsl:when>
			<xsl:otherwise># RD_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RD_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RD_LZ4=y</xsl:when>
			<xsl:otherwise># RD_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_OPTIMIZE_FOR_PERFORMANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_OPTIMIZE_FOR_PERFORMANCE=y</xsl:when>
			<xsl:otherwise># CC_OPTIMIZE_FOR_PERFORMANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_OPTIMIZE_FOR_SIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_OPTIMIZE_FOR_SIZE=y</xsl:when>
			<xsl:otherwise># CC_OPTIMIZE_FOR_SIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCTL=y</xsl:when>
			<xsl:otherwise># SYSCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANON_INODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANON_INODES=y</xsl:when>
			<xsl:otherwise># ANON_INODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_UID16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_UID16=y</xsl:when>
			<xsl:otherwise># HAVE_UID16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCTL_EXCEPTION_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCTL_EXCEPTION_TRACE=y</xsl:when>
			<xsl:otherwise># SYSCTL_EXCEPTION_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCTL_ARCH_UNALIGN_NO_WARN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCTL_ARCH_UNALIGN_NO_WARN=y</xsl:when>
			<xsl:otherwise># SYSCTL_ARCH_UNALIGN_NO_WARN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCTL_ARCH_UNALIGN_ALLOW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCTL_ARCH_UNALIGN_ALLOW=y</xsl:when>
			<xsl:otherwise># SYSCTL_ARCH_UNALIGN_ALLOW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PCSPKR_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PCSPKR_PLATFORM=y</xsl:when>
			<xsl:otherwise># HAVE_PCSPKR_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BPF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BPF=y</xsl:when>
			<xsl:otherwise># BPF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXPERT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXPERT=y</xsl:when>
			<xsl:otherwise># EXPERT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UID16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UID16=y</xsl:when>
			<xsl:otherwise># UID16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MULTIUSER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MULTIUSER=y</xsl:when>
			<xsl:otherwise># MULTIUSER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGETMASK_SYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGETMASK_SYSCALL=y</xsl:when>
			<xsl:otherwise># SGETMASK_SYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSFS_SYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSFS_SYSCALL=y</xsl:when>
			<xsl:otherwise># SYSFS_SYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCTL_SYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCTL_SYSCALL=y</xsl:when>
			<xsl:otherwise># SYSCTL_SYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KALLSYMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KALLSYMS=y</xsl:when>
			<xsl:otherwise># KALLSYMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KALLSYMS_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KALLSYMS_ALL=y</xsl:when>
			<xsl:otherwise># KALLSYMS_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KALLSYMS_ABSOLUTE_PERCPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KALLSYMS_ABSOLUTE_PERCPU=y</xsl:when>
			<xsl:otherwise># KALLSYMS_ABSOLUTE_PERCPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KALLSYMS_BASE_RELATIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KALLSYMS_BASE_RELATIVE=y</xsl:when>
			<xsl:otherwise># KALLSYMS_BASE_RELATIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRINTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRINTK=y</xsl:when>
			<xsl:otherwise># PRINTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRINTK_NMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRINTK_NMI=y</xsl:when>
			<xsl:otherwise># PRINTK_NMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BUG=y</xsl:when>
			<xsl:otherwise># BUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ELF_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ELF_CORE=y</xsl:when>
			<xsl:otherwise># ELF_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCSPKR_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCSPKR_PLATFORM=y</xsl:when>
			<xsl:otherwise># PCSPKR_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BASE_FULL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BASE_FULL=y</xsl:when>
			<xsl:otherwise># BASE_FULL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUTEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUTEX=y</xsl:when>
			<xsl:otherwise># FUTEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_FUTEX_CMPXCHG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_FUTEX_CMPXCHG=y</xsl:when>
			<xsl:otherwise># HAVE_FUTEX_CMPXCHG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EPOLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EPOLL=y</xsl:when>
			<xsl:otherwise># EPOLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIGNALFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIGNALFD=y</xsl:when>
			<xsl:otherwise># SIGNALFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIMERFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIMERFD=y</xsl:when>
			<xsl:otherwise># TIMERFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVENTFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EVENTFD=y</xsl:when>
			<xsl:otherwise># EVENTFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BPF_SYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BPF_SYSCALL=y</xsl:when>
			<xsl:otherwise># BPF_SYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SHMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SHMEM=y</xsl:when>
			<xsl:otherwise># SHMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIO=y</xsl:when>
			<xsl:otherwise># AIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADVISE_SYSCALLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADVISE_SYSCALLS=y</xsl:when>
			<xsl:otherwise># ADVISE_SYSCALLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USERFAULTFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USERFAULTFD=y</xsl:when>
			<xsl:otherwise># USERFAULTFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_QUIRKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_QUIRKS=y</xsl:when>
			<xsl:otherwise># PCI_QUIRKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMBARRIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMBARRIER=y</xsl:when>
			<xsl:otherwise># MEMBARRIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EMBEDDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EMBEDDED=y</xsl:when>
			<xsl:otherwise># EMBEDDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PERF_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PERF_EVENTS=y</xsl:when>
			<xsl:otherwise># HAVE_PERF_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_USE_VMALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_USE_VMALLOC=y</xsl:when>
			<xsl:otherwise># PERF_USE_VMALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_EVENTS=y</xsl:when>
			<xsl:otherwise># PERF_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_PERF_USE_VMALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_PERF_USE_VMALLOC=y</xsl:when>
			<xsl:otherwise># DEBUG_PERF_USE_VMALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VM_EVENT_COUNTERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VM_EVENT_COUNTERS=y</xsl:when>
			<xsl:otherwise># VM_EVENT_COUNTERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLUB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLUB_DEBUG=y</xsl:when>
			<xsl:otherwise># SLUB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_BRK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_BRK=y</xsl:when>
			<xsl:otherwise># COMPAT_BRK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLAB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLAB=y</xsl:when>
			<xsl:otherwise># SLAB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLUB=y</xsl:when>
			<xsl:otherwise># SLUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLOB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLOB=y</xsl:when>
			<xsl:otherwise># SLOB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLAB_FREELIST_RANDOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLAB_FREELIST_RANDOM=y</xsl:when>
			<xsl:otherwise># SLAB_FREELIST_RANDOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLUB_CPU_PARTIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLUB_CPU_PARTIAL=y</xsl:when>
			<xsl:otherwise># SLUB_CPU_PARTIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMAP_ALLOW_UNINITIALIZED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMAP_ALLOW_UNINITIALIZED=y</xsl:when>
			<xsl:otherwise># MMAP_ALLOW_UNINITIALIZED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSTEM_DATA_VERIFICATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSTEM_DATA_VERIFICATION=y</xsl:when>
			<xsl:otherwise># SYSTEM_DATA_VERIFICATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSTEM_BLACKLIST_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSTEM_BLACKLIST_KEYRING=y</xsl:when>
			<xsl:otherwise># SYSTEM_BLACKLIST_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROFILING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROFILING=y</xsl:when>
			<xsl:otherwise># PROFILING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRACEPOINTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRACEPOINTS=y</xsl:when>
			<xsl:otherwise># TRACEPOINTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC_CORE=y</xsl:when>
			<xsl:otherwise># KEXEC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPROFILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPROFILE=y</xsl:when>
			<xsl:when test=". = 'module'">OPROFILE=m</xsl:when>
			<xsl:otherwise># OPROFILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPROFILE_EVENT_MULTIPLEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPROFILE_EVENT_MULTIPLEX=y</xsl:when>
			<xsl:otherwise># OPROFILE_EVENT_MULTIPLEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_OPROFILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_OPROFILE=y</xsl:when>
			<xsl:otherwise># HAVE_OPROFILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPROFILE_NMI_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPROFILE_NMI_TIMER=y</xsl:when>
			<xsl:otherwise># OPROFILE_NMI_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KPROBES=y</xsl:when>
			<xsl:otherwise># KPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JUMP_LABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JUMP_LABEL=y</xsl:when>
			<xsl:otherwise># JUMP_LABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STATIC_KEYS_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STATIC_KEYS_SELFTEST=y</xsl:when>
			<xsl:otherwise># STATIC_KEYS_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPTPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPTPROBES=y</xsl:when>
			<xsl:otherwise># OPTPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KPROBES_ON_FTRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KPROBES_ON_FTRACE=y</xsl:when>
			<xsl:otherwise># KPROBES_ON_FTRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UPROBES=y</xsl:when>
			<xsl:otherwise># UPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_64BIT_ALIGNED_ACCESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_64BIT_ALIGNED_ACCESS=y</xsl:when>
			<xsl:otherwise># HAVE_64BIT_ALIGNED_ACCESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_EFFICIENT_UNALIGNED_ACCESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_EFFICIENT_UNALIGNED_ACCESS=y</xsl:when>
			<xsl:otherwise># HAVE_EFFICIENT_UNALIGNED_ACCESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_USE_BUILTIN_BSWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_USE_BUILTIN_BSWAP=y</xsl:when>
			<xsl:otherwise># ARCH_USE_BUILTIN_BSWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KRETPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KRETPROBES=y</xsl:when>
			<xsl:otherwise># KRETPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USER_RETURN_NOTIFIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USER_RETURN_NOTIFIER=y</xsl:when>
			<xsl:otherwise># USER_RETURN_NOTIFIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_IOREMAP_PROT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_IOREMAP_PROT=y</xsl:when>
			<xsl:otherwise># HAVE_IOREMAP_PROT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KPROBES=y</xsl:when>
			<xsl:otherwise># HAVE_KPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KRETPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KRETPROBES=y</xsl:when>
			<xsl:otherwise># HAVE_KRETPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_OPTPROBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_OPTPROBES=y</xsl:when>
			<xsl:otherwise># HAVE_OPTPROBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KPROBES_ON_FTRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KPROBES_ON_FTRACE=y</xsl:when>
			<xsl:otherwise># HAVE_KPROBES_ON_FTRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_NMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_NMI=y</xsl:when>
			<xsl:otherwise># HAVE_NMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_NMI_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_NMI_WATCHDOG=y</xsl:when>
			<xsl:otherwise># HAVE_NMI_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_TRACEHOOK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_TRACEHOOK=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_TRACEHOOK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_DMA_CONTIGUOUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_DMA_CONTIGUOUS=y</xsl:when>
			<xsl:otherwise># HAVE_DMA_CONTIGUOUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_SMP_IDLE_THREAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_SMP_IDLE_THREAD=y</xsl:when>
			<xsl:otherwise># GENERIC_SMP_IDLE_THREAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IDLE_POLL_SETUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IDLE_POLL_SETUP=y</xsl:when>
			<xsl:otherwise># GENERIC_IDLE_POLL_SETUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_INIT_TASK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_INIT_TASK=y</xsl:when>
			<xsl:otherwise># ARCH_INIT_TASK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TASK_STRUCT_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TASK_STRUCT_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># ARCH_TASK_STRUCT_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_THREAD_STACK_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_THREAD_STACK_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># ARCH_THREAD_STACK_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANTS_DYNAMIC_TASK_STRUCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANTS_DYNAMIC_TASK_STRUCT=y</xsl:when>
			<xsl:otherwise># ARCH_WANTS_DYNAMIC_TASK_STRUCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_REGS_AND_STACK_ACCESS_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_REGS_AND_STACK_ACCESS_API=y</xsl:when>
			<xsl:otherwise># HAVE_REGS_AND_STACK_ACCESS_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CLK=y</xsl:when>
			<xsl:otherwise># HAVE_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_DMA_API_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_DMA_API_DEBUG=y</xsl:when>
			<xsl:otherwise># HAVE_DMA_API_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_HW_BREAKPOINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_HW_BREAKPOINT=y</xsl:when>
			<xsl:otherwise># HAVE_HW_BREAKPOINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MIXED_BREAKPOINTS_REGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MIXED_BREAKPOINTS_REGS=y</xsl:when>
			<xsl:otherwise># HAVE_MIXED_BREAKPOINTS_REGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_USER_RETURN_NOTIFIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_USER_RETURN_NOTIFIER=y</xsl:when>
			<xsl:otherwise># HAVE_USER_RETURN_NOTIFIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PERF_EVENTS_NMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PERF_EVENTS_NMI=y</xsl:when>
			<xsl:otherwise># HAVE_PERF_EVENTS_NMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PERF_REGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PERF_REGS=y</xsl:when>
			<xsl:otherwise># HAVE_PERF_REGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PERF_USER_STACK_DUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PERF_USER_STACK_DUMP=y</xsl:when>
			<xsl:otherwise># HAVE_PERF_USER_STACK_DUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_JUMP_LABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_JUMP_LABEL=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_JUMP_LABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_RCU_TABLE_FREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_RCU_TABLE_FREE=y</xsl:when>
			<xsl:otherwise># HAVE_RCU_TABLE_FREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAVE_NMI_SAFE_CMPXCHG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAVE_NMI_SAFE_CMPXCHG=y</xsl:when>
			<xsl:otherwise># ARCH_HAVE_NMI_SAFE_CMPXCHG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ALIGNED_STRUCT_PAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ALIGNED_STRUCT_PAGE=y</xsl:when>
			<xsl:otherwise># HAVE_ALIGNED_STRUCT_PAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CMPXCHG_LOCAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CMPXCHG_LOCAL=y</xsl:when>
			<xsl:otherwise># HAVE_CMPXCHG_LOCAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CMPXCHG_DOUBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CMPXCHG_DOUBLE=y</xsl:when>
			<xsl:otherwise># HAVE_CMPXCHG_DOUBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_IPC_PARSE_VERSION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_IPC_PARSE_VERSION=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_IPC_PARSE_VERSION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_COMPAT_IPC_PARSE_VERSION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_COMPAT_IPC_PARSE_VERSION=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_COMPAT_IPC_PARSE_VERSION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_OLD_COMPAT_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_OLD_COMPAT_IPC=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_OLD_COMPAT_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_SECCOMP_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_SECCOMP_FILTER=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_SECCOMP_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECCOMP_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECCOMP_FILTER=y</xsl:when>
			<xsl:otherwise># SECCOMP_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_GCC_PLUGINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_GCC_PLUGINS=y</xsl:when>
			<xsl:otherwise># HAVE_GCC_PLUGINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCC_PLUGINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCC_PLUGINS=y</xsl:when>
			<xsl:otherwise># GCC_PLUGINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCC_PLUGIN_CYC_COMPLEXITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCC_PLUGIN_CYC_COMPLEXITY=y</xsl:when>
			<xsl:otherwise># GCC_PLUGIN_CYC_COMPLEXITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCC_PLUGIN_SANCOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCC_PLUGIN_SANCOV=y</xsl:when>
			<xsl:otherwise># GCC_PLUGIN_SANCOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CC_STACKPROTECTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CC_STACKPROTECTOR=y</xsl:when>
			<xsl:otherwise># HAVE_CC_STACKPROTECTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_STACKPROTECTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_STACKPROTECTOR=y</xsl:when>
			<xsl:otherwise># CC_STACKPROTECTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_STACKPROTECTOR_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_STACKPROTECTOR_NONE=y</xsl:when>
			<xsl:otherwise># CC_STACKPROTECTOR_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_STACKPROTECTOR_REGULAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_STACKPROTECTOR_REGULAR=y</xsl:when>
			<xsl:otherwise># CC_STACKPROTECTOR_REGULAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC_STACKPROTECTOR_STRONG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC_STACKPROTECTOR_STRONG=y</xsl:when>
			<xsl:otherwise># CC_STACKPROTECTOR_STRONG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_WITHIN_STACK_FRAMES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_WITHIN_STACK_FRAMES=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_WITHIN_STACK_FRAMES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CONTEXT_TRACKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CONTEXT_TRACKING=y</xsl:when>
			<xsl:otherwise># HAVE_CONTEXT_TRACKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_VIRT_CPU_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_VIRT_CPU_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># HAVE_VIRT_CPU_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_VIRT_CPU_ACCOUNTING_GEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_VIRT_CPU_ACCOUNTING_GEN=y</xsl:when>
			<xsl:otherwise># HAVE_VIRT_CPU_ACCOUNTING_GEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_IRQ_TIME_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_IRQ_TIME_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># HAVE_IRQ_TIME_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_TRANSPARENT_HUGEPAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_TRANSPARENT_HUGEPAGE=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_TRANSPARENT_HUGEPAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_HUGE_VMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_HUGE_VMAP=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_HUGE_VMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_SOFT_DIRTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_SOFT_DIRTY=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_SOFT_DIRTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MOD_ARCH_SPECIFIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MOD_ARCH_SPECIFIC=y</xsl:when>
			<xsl:otherwise># HAVE_MOD_ARCH_SPECIFIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULES_USE_ELF_RELA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULES_USE_ELF_RELA=y</xsl:when>
			<xsl:otherwise># MODULES_USE_ELF_RELA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULES_USE_ELF_REL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULES_USE_ELF_REL=y</xsl:when>
			<xsl:otherwise># MODULES_USE_ELF_REL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_UNDERSCORE_SYMBOL_PREFIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_UNDERSCORE_SYMBOL_PREFIX=y</xsl:when>
			<xsl:otherwise># HAVE_UNDERSCORE_SYMBOL_PREFIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_IRQ_EXIT_ON_IRQ_STACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_IRQ_EXIT_ON_IRQ_STACK=y</xsl:when>
			<xsl:otherwise># HAVE_IRQ_EXIT_ON_IRQ_STACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PGTABLE_LEVELS">
		PGTABLE_LEVELS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_HAS_ELF_RANDOMIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_ELF_RANDOMIZE=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_ELF_RANDOMIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_MMAP_RND_BITS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_MMAP_RND_BITS=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_MMAP_RND_BITS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_EXIT_THREAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_EXIT_THREAD=y</xsl:when>
			<xsl:otherwise># HAVE_EXIT_THREAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_BITS_MIN">
		ARCH_MMAP_RND_BITS_MIN=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_BITS_MAX">
		ARCH_MMAP_RND_BITS_MAX=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_BITS_DEFAULT">
		ARCH_MMAP_RND_BITS_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_BITS">
		ARCH_MMAP_RND_BITS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_MMAP_RND_COMPAT_BITS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_MMAP_RND_COMPAT_BITS=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_MMAP_RND_COMPAT_BITS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_COMPAT_BITS_MIN">
		ARCH_MMAP_RND_COMPAT_BITS_MIN=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_COMPAT_BITS_MAX">
		ARCH_MMAP_RND_COMPAT_BITS_MAX=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_COMPAT_BITS_DEFAULT">
		ARCH_MMAP_RND_COMPAT_BITS_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_MMAP_RND_COMPAT_BITS">
		ARCH_MMAP_RND_COMPAT_BITS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HAVE_COPY_THREAD_TLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_COPY_THREAD_TLS=y</xsl:when>
			<xsl:otherwise># HAVE_COPY_THREAD_TLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_STACK_VALIDATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_STACK_VALIDATION=y</xsl:when>
			<xsl:otherwise># HAVE_STACK_VALIDATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_HASH=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISA_BUS_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISA_BUS_API=y</xsl:when>
			<xsl:otherwise># ISA_BUS_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLONE_BACKWARDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLONE_BACKWARDS=y</xsl:when>
			<xsl:otherwise># CLONE_BACKWARDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLONE_BACKWARDS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLONE_BACKWARDS2=y</xsl:when>
			<xsl:otherwise># CLONE_BACKWARDS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLONE_BACKWARDS3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLONE_BACKWARDS3=y</xsl:when>
			<xsl:otherwise># CLONE_BACKWARDS3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ODD_RT_SIGACTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ODD_RT_SIGACTION=y</xsl:when>
			<xsl:otherwise># ODD_RT_SIGACTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLD_SIGSUSPEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLD_SIGSUSPEND=y</xsl:when>
			<xsl:otherwise># OLD_SIGSUSPEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLD_SIGSUSPEND3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLD_SIGSUSPEND3=y</xsl:when>
			<xsl:otherwise># OLD_SIGSUSPEND3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLD_SIGACTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLD_SIGACTION=y</xsl:when>
			<xsl:otherwise># OLD_SIGACTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_OLD_SIGACTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_OLD_SIGACTION=y</xsl:when>
			<xsl:otherwise># COMPAT_OLD_SIGACTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_NO_COHERENT_DMA_MMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_NO_COHERENT_DMA_MMAP=y</xsl:when>
			<xsl:otherwise># ARCH_NO_COHERENT_DMA_MMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_NO_EFFICIENT_FFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_NO_EFFICIENT_FFS=y</xsl:when>
			<xsl:otherwise># CPU_NO_EFFICIENT_FFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCOV_KERNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCOV_KERNEL=y</xsl:when>
			<xsl:otherwise># GCOV_KERNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_GCOV_PROFILE_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_GCOV_PROFILE_ALL=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_GCOV_PROFILE_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCOV_PROFILE_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCOV_PROFILE_ALL=y</xsl:when>
			<xsl:otherwise># GCOV_PROFILE_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCOV_FORMAT_AUTODETECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCOV_FORMAT_AUTODETECT=y</xsl:when>
			<xsl:otherwise># GCOV_FORMAT_AUTODETECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCOV_FORMAT_3_4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCOV_FORMAT_3_4=y</xsl:when>
			<xsl:otherwise># GCOV_FORMAT_3_4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GCOV_FORMAT_4_7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GCOV_FORMAT_4_7=y</xsl:when>
			<xsl:otherwise># GCOV_FORMAT_4_7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_GENERIC_DMA_COHERENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_GENERIC_DMA_COHERENT=y</xsl:when>
			<xsl:otherwise># HAVE_GENERIC_DMA_COHERENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLABINFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLABINFO=y</xsl:when>
			<xsl:otherwise># SLABINFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT_MUTEXES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT_MUTEXES=y</xsl:when>
			<xsl:otherwise># RT_MUTEXES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BASE_SMALL">
		BASE_SMALL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MODULES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULES=y</xsl:when>
			<xsl:otherwise># MODULES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_FORCE_LOAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_FORCE_LOAD=y</xsl:when>
			<xsl:otherwise># MODULE_FORCE_LOAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_UNLOAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_UNLOAD=y</xsl:when>
			<xsl:otherwise># MODULE_UNLOAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_FORCE_UNLOAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_FORCE_UNLOAD=y</xsl:when>
			<xsl:otherwise># MODULE_FORCE_UNLOAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODVERSIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODVERSIONS=y</xsl:when>
			<xsl:otherwise># MODVERSIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SRCVERSION_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SRCVERSION_ALL=y</xsl:when>
			<xsl:otherwise># MODULE_SRCVERSION_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG=y</xsl:when>
			<xsl:otherwise># MODULE_SIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_FORCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_FORCE=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_FORCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_ALL=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_UEFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_UEFI=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_UEFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_SHA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_SHA1=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_SHA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_SHA224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_SHA224=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_SHA224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_SHA256">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_SHA256=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_SHA256 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_SHA384">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_SHA384=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_SHA384 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_SHA512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_SIG_SHA512=y</xsl:when>
			<xsl:otherwise># MODULE_SIG_SHA512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_HASH">
		MODULE_SIG_HASH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MODULE_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODULE_COMPRESS=y</xsl:when>
			<xsl:otherwise># MODULE_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FREEZER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FREEZER=y</xsl:when>
			<xsl:otherwise># FREEZER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZONE_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZONE_DMA=y</xsl:when>
			<xsl:otherwise># ZONE_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMP=y</xsl:when>
			<xsl:otherwise># SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_FEATURE_NAMES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_FEATURE_NAMES=y</xsl:when>
			<xsl:otherwise># X86_FEATURE_NAMES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_FAST_FEATURE_TESTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_FAST_FEATURE_TESTS=y</xsl:when>
			<xsl:otherwise># X86_FAST_FEATURE_TESTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_X2APIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_X2APIC=y</xsl:when>
			<xsl:otherwise># X86_X2APIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MPPARSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MPPARSE=y</xsl:when>
			<xsl:otherwise># X86_MPPARSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_BIGSMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_BIGSMP=y</xsl:when>
			<xsl:otherwise># X86_BIGSMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOLDFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH=y</xsl:when>
			<xsl:otherwise># GOLDFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_EXTENDED_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_EXTENDED_PLATFORM=y</xsl:when>
			<xsl:otherwise># X86_EXTENDED_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_EXTENDED_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_EXTENDED_PLATFORM=y</xsl:when>
			<xsl:otherwise># X86_EXTENDED_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_NUMACHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_NUMACHIP=y</xsl:when>
			<xsl:otherwise># X86_NUMACHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_VSMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_VSMP=y</xsl:when>
			<xsl:otherwise># X86_VSMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_UV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_UV=y</xsl:when>
			<xsl:otherwise># X86_UV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_GOLDFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_GOLDFISH=y</xsl:when>
			<xsl:otherwise># X86_GOLDFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_CE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_CE=y</xsl:when>
			<xsl:otherwise># X86_INTEL_CE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_MID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_MID=y</xsl:when>
			<xsl:otherwise># X86_INTEL_MID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_QUARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_QUARK=y</xsl:when>
			<xsl:otherwise># X86_INTEL_QUARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_LPSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_LPSS=y</xsl:when>
			<xsl:otherwise># X86_INTEL_LPSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_AMD_PLATFORM_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_AMD_PLATFORM_DEVICE=y</xsl:when>
			<xsl:otherwise># X86_AMD_PLATFORM_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOSF_MBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOSF_MBI=y</xsl:when>
			<xsl:when test=". = 'module'">IOSF_MBI=m</xsl:when>
			<xsl:otherwise># IOSF_MBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOSF_MBI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOSF_MBI_DEBUG=y</xsl:when>
			<xsl:otherwise># IOSF_MBI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_RDC321X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_RDC321X=y</xsl:when>
			<xsl:otherwise># X86_RDC321X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_32_NON_STANDARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_32_NON_STANDARD=y</xsl:when>
			<xsl:otherwise># X86_32_NON_STANDARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SUPPORTS_MEMORY_FAILURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SUPPORTS_MEMORY_FAILURE=y</xsl:when>
			<xsl:otherwise># X86_SUPPORTS_MEMORY_FAILURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STA2X11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STA2X11=y</xsl:when>
			<xsl:otherwise># STA2X11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_32_IRIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_32_IRIS=y</xsl:when>
			<xsl:when test=". = 'module'">X86_32_IRIS=m</xsl:when>
			<xsl:otherwise># X86_32_IRIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCHED_OMIT_FRAME_POINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCHED_OMIT_FRAME_POINTER=y</xsl:when>
			<xsl:otherwise># SCHED_OMIT_FRAME_POINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERVISOR_GUEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERVISOR_GUEST=y</xsl:when>
			<xsl:otherwise># HYPERVISOR_GUEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARAVIRT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARAVIRT=y</xsl:when>
			<xsl:otherwise># PARAVIRT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARAVIRT_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARAVIRT_DEBUG=y</xsl:when>
			<xsl:otherwise># PARAVIRT_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARAVIRT_SPINLOCKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARAVIRT_SPINLOCKS=y</xsl:when>
			<xsl:otherwise># PARAVIRT_SPINLOCKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUEUED_LOCK_STAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUEUED_LOCK_STAT=y</xsl:when>
			<xsl:otherwise># QUEUED_LOCK_STAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN=y</xsl:when>
			<xsl:otherwise># XEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_DOM0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_DOM0=y</xsl:when>
			<xsl:otherwise># XEN_DOM0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_PVHVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_PVHVM=y</xsl:when>
			<xsl:otherwise># XEN_PVHVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_512GB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_512GB=y</xsl:when>
			<xsl:otherwise># XEN_512GB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SAVE_RESTORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SAVE_RESTORE=y</xsl:when>
			<xsl:otherwise># XEN_SAVE_RESTORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># XEN_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_PVH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_PVH=y</xsl:when>
			<xsl:otherwise># XEN_PVH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_GUEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_GUEST=y</xsl:when>
			<xsl:otherwise># KVM_GUEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># KVM_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LGUEST_GUEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LGUEST_GUEST=y</xsl:when>
			<xsl:otherwise># LGUEST_GUEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARAVIRT_TIME_ACCOUNTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARAVIRT_TIME_ACCOUNTING=y</xsl:when>
			<xsl:otherwise># PARAVIRT_TIME_ACCOUNTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARAVIRT_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARAVIRT_CLOCK=y</xsl:when>
			<xsl:otherwise># PARAVIRT_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_BOOTMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_BOOTMEM=y</xsl:when>
			<xsl:otherwise># NO_BOOTMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M486">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M486=y</xsl:when>
			<xsl:otherwise># M486 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M586=y</xsl:when>
			<xsl:otherwise># M586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M586TSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M586TSC=y</xsl:when>
			<xsl:otherwise># M586TSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M586MMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M586MMX=y</xsl:when>
			<xsl:otherwise># M586MMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M686=y</xsl:when>
			<xsl:otherwise># M686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPENTIUMII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPENTIUMII=y</xsl:when>
			<xsl:otherwise># MPENTIUMII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPENTIUMIII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPENTIUMIII=y</xsl:when>
			<xsl:otherwise># MPENTIUMIII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPENTIUMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPENTIUMM=y</xsl:when>
			<xsl:otherwise># MPENTIUMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPENTIUM4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPENTIUM4=y</xsl:when>
			<xsl:otherwise># MPENTIUM4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MK6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MK6=y</xsl:when>
			<xsl:otherwise># MK6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MK7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MK7=y</xsl:when>
			<xsl:otherwise># MK7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MK8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MK8=y</xsl:when>
			<xsl:otherwise># MK8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCRUSOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCRUSOE=y</xsl:when>
			<xsl:otherwise># MCRUSOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEFFICEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEFFICEON=y</xsl:when>
			<xsl:otherwise># MEFFICEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWINCHIPC6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWINCHIPC6=y</xsl:when>
			<xsl:otherwise># MWINCHIPC6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWINCHIP3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWINCHIP3D=y</xsl:when>
			<xsl:otherwise># MWINCHIP3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MELAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MELAN=y</xsl:when>
			<xsl:otherwise># MELAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MGEODEGX1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MGEODEGX1=y</xsl:when>
			<xsl:otherwise># MGEODEGX1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MGEODE_LX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MGEODE_LX=y</xsl:when>
			<xsl:otherwise># MGEODE_LX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCYRIXIII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCYRIXIII=y</xsl:when>
			<xsl:otherwise># MCYRIXIII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVIAC3_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVIAC3_2=y</xsl:when>
			<xsl:otherwise># MVIAC3_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVIAC7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVIAC7=y</xsl:when>
			<xsl:otherwise># MVIAC7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPSC=y</xsl:when>
			<xsl:otherwise># MPSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCORE2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCORE2=y</xsl:when>
			<xsl:otherwise># MCORE2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPET_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPET_TIMER=y</xsl:when>
			<xsl:otherwise># HPET_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPET_EMULATE_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPET_EMULATE_RTC=y</xsl:when>
			<xsl:otherwise># HPET_EMULATE_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APB_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APB_TIMER=y</xsl:when>
			<xsl:otherwise># APB_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMI=y</xsl:when>
			<xsl:otherwise># DMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GART_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GART_IOMMU=y</xsl:when>
			<xsl:otherwise># GART_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CALGARY_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CALGARY_IOMMU=y</xsl:when>
			<xsl:otherwise># CALGARY_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CALGARY_IOMMU_ENABLED_BY_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CALGARY_IOMMU_ENABLED_BY_DEFAULT=y</xsl:when>
			<xsl:otherwise># CALGARY_IOMMU_ENABLED_BY_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SWIOTLB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SWIOTLB=y</xsl:when>
			<xsl:otherwise># SWIOTLB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_HELPER=y</xsl:when>
			<xsl:otherwise># IOMMU_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAXSMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAXSMP=y</xsl:when>
			<xsl:otherwise># MAXSMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NR_CPUS">
		NR_CPUS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCHED_SMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCHED_SMT=y</xsl:when>
			<xsl:otherwise># SCHED_SMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCHED_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCHED_MC=y</xsl:when>
			<xsl:otherwise># SCHED_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PREEMPT_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PREEMPT_NONE=y</xsl:when>
			<xsl:otherwise># PREEMPT_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PREEMPT_VOLUNTARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PREEMPT_VOLUNTARY=y</xsl:when>
			<xsl:otherwise># PREEMPT_VOLUNTARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PREEMPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PREEMPT=y</xsl:when>
			<xsl:otherwise># PREEMPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UP_LATE_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UP_LATE_INIT=y</xsl:when>
			<xsl:otherwise># UP_LATE_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_UP_APIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_UP_APIC=y</xsl:when>
			<xsl:otherwise># X86_UP_APIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_UP_IOAPIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_UP_IOAPIC=y</xsl:when>
			<xsl:otherwise># X86_UP_IOAPIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_LOCAL_APIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_LOCAL_APIC=y</xsl:when>
			<xsl:otherwise># X86_LOCAL_APIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_IO_APIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_IO_APIC=y</xsl:when>
			<xsl:otherwise># X86_IO_APIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_REROUTE_FOR_BROKEN_BOOT_IRQS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_REROUTE_FOR_BROKEN_BOOT_IRQS=y</xsl:when>
			<xsl:otherwise># X86_REROUTE_FOR_BROKEN_BOOT_IRQS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MCE=y</xsl:when>
			<xsl:otherwise># X86_MCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MCE_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MCE_INTEL=y</xsl:when>
			<xsl:otherwise># X86_MCE_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MCE_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MCE_AMD=y</xsl:when>
			<xsl:otherwise># X86_MCE_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_ANCIENT_MCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_ANCIENT_MCE=y</xsl:when>
			<xsl:otherwise># X86_ANCIENT_MCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MCE_THRESHOLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MCE_THRESHOLD=y</xsl:when>
			<xsl:otherwise># X86_MCE_THRESHOLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MCE_INJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MCE_INJECT=y</xsl:when>
			<xsl:when test=". = 'module'">X86_MCE_INJECT=m</xsl:when>
			<xsl:otherwise># X86_MCE_INJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_THERMAL_VECTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_THERMAL_VECTOR=y</xsl:when>
			<xsl:otherwise># X86_THERMAL_VECTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_EVENTS_INTEL_UNCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_EVENTS_INTEL_UNCORE=y</xsl:when>
			<xsl:when test=". = 'module'">PERF_EVENTS_INTEL_UNCORE=m</xsl:when>
			<xsl:otherwise># PERF_EVENTS_INTEL_UNCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_EVENTS_INTEL_RAPL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_EVENTS_INTEL_RAPL=y</xsl:when>
			<xsl:when test=". = 'module'">PERF_EVENTS_INTEL_RAPL=m</xsl:when>
			<xsl:otherwise># PERF_EVENTS_INTEL_RAPL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_EVENTS_INTEL_CSTATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_EVENTS_INTEL_CSTATE=y</xsl:when>
			<xsl:when test=". = 'module'">PERF_EVENTS_INTEL_CSTATE=m</xsl:when>
			<xsl:otherwise># PERF_EVENTS_INTEL_CSTATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERF_EVENTS_AMD_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERF_EVENTS_AMD_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">PERF_EVENTS_AMD_POWER=m</xsl:when>
			<xsl:otherwise># PERF_EVENTS_AMD_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_LEGACY_VM86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_LEGACY_VM86=y</xsl:when>
			<xsl:otherwise># X86_LEGACY_VM86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VM86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VM86=y</xsl:when>
			<xsl:otherwise># VM86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_16BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_16BIT=y</xsl:when>
			<xsl:otherwise># X86_16BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_ESPFIX32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_ESPFIX32=y</xsl:when>
			<xsl:otherwise># X86_ESPFIX32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_ESPFIX64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_ESPFIX64=y</xsl:when>
			<xsl:otherwise># X86_ESPFIX64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_VSYSCALL_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_VSYSCALL_EMULATION=y</xsl:when>
			<xsl:otherwise># X86_VSYSCALL_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOSHIBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOSHIBA=y</xsl:when>
			<xsl:when test=". = 'module'">TOSHIBA=m</xsl:when>
			<xsl:otherwise># TOSHIBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I8K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I8K=y</xsl:when>
			<xsl:when test=". = 'module'">I8K=m</xsl:when>
			<xsl:otherwise># I8K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_REBOOTFIXUPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_REBOOTFIXUPS=y</xsl:when>
			<xsl:otherwise># X86_REBOOTFIXUPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICROCODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICROCODE=y</xsl:when>
			<xsl:otherwise># MICROCODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICROCODE_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICROCODE_INTEL=y</xsl:when>
			<xsl:otherwise># MICROCODE_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICROCODE_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICROCODE_AMD=y</xsl:when>
			<xsl:otherwise># MICROCODE_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICROCODE_OLD_INTERFACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICROCODE_OLD_INTERFACE=y</xsl:when>
			<xsl:otherwise># MICROCODE_OLD_INTERFACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_MSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_MSR=y</xsl:when>
			<xsl:when test=". = 'module'">X86_MSR=m</xsl:when>
			<xsl:otherwise># X86_MSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_CPUID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_CPUID=y</xsl:when>
			<xsl:when test=". = 'module'">X86_CPUID=m</xsl:when>
			<xsl:otherwise># X86_CPUID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOHIGHMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NOHIGHMEM=y</xsl:when>
			<xsl:otherwise># NOHIGHMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIGHMEM4G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIGHMEM4G=y</xsl:when>
			<xsl:otherwise># HIGHMEM4G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIGHMEM64G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIGHMEM64G=y</xsl:when>
			<xsl:otherwise># HIGHMEM64G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMSPLIT_3G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMSPLIT_3G=y</xsl:when>
			<xsl:otherwise># VMSPLIT_3G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMSPLIT_3G_OPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMSPLIT_3G_OPT=y</xsl:when>
			<xsl:otherwise># VMSPLIT_3G_OPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMSPLIT_2G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMSPLIT_2G=y</xsl:when>
			<xsl:otherwise># VMSPLIT_2G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMSPLIT_2G_OPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMSPLIT_2G_OPT=y</xsl:when>
			<xsl:otherwise># VMSPLIT_2G_OPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMSPLIT_1G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMSPLIT_1G=y</xsl:when>
			<xsl:otherwise># VMSPLIT_1G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIGHMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIGHMEM=y</xsl:when>
			<xsl:otherwise># HIGHMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PAE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PAE=y</xsl:when>
			<xsl:otherwise># X86_PAE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_PHYS_ADDR_T_64BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_PHYS_ADDR_T_64BIT=y</xsl:when>
			<xsl:otherwise># ARCH_PHYS_ADDR_T_64BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_DMA_ADDR_T_64BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_DMA_ADDR_T_64BIT=y</xsl:when>
			<xsl:otherwise># ARCH_DMA_ADDR_T_64BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_DIRECT_GBPAGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_DIRECT_GBPAGES=y</xsl:when>
			<xsl:otherwise># X86_DIRECT_GBPAGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NUMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NUMA=y</xsl:when>
			<xsl:otherwise># NUMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_NUMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_NUMA=y</xsl:when>
			<xsl:otherwise># AMD_NUMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_64_ACPI_NUMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_64_ACPI_NUMA=y</xsl:when>
			<xsl:otherwise># X86_64_ACPI_NUMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NODES_SPAN_OTHER_NODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NODES_SPAN_OTHER_NODES=y</xsl:when>
			<xsl:otherwise># NODES_SPAN_OTHER_NODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NUMA_EMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NUMA_EMU=y</xsl:when>
			<xsl:otherwise># NUMA_EMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NODES_SHIFT">
		NODES_SHIFT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_HAVE_MEMORY_PRESENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAVE_MEMORY_PRESENT=y</xsl:when>
			<xsl:otherwise># ARCH_HAVE_MEMORY_PRESENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_NODE_MEMMAP_SIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_NODE_MEMMAP_SIZE=y</xsl:when>
			<xsl:otherwise># NEED_NODE_MEMMAP_SIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_FLATMEM_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_FLATMEM_ENABLE=y</xsl:when>
			<xsl:otherwise># ARCH_FLATMEM_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_DISCONTIGMEM_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_DISCONTIGMEM_ENABLE=y</xsl:when>
			<xsl:otherwise># ARCH_DISCONTIGMEM_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_DISCONTIGMEM_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_DISCONTIGMEM_DEFAULT=y</xsl:when>
			<xsl:otherwise># ARCH_DISCONTIGMEM_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SPARSEMEM_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SPARSEMEM_ENABLE=y</xsl:when>
			<xsl:otherwise># ARCH_SPARSEMEM_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SPARSEMEM_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SPARSEMEM_DEFAULT=y</xsl:when>
			<xsl:otherwise># ARCH_SPARSEMEM_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SELECT_MEMORY_MODEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SELECT_MEMORY_MODEL=y</xsl:when>
			<xsl:otherwise># ARCH_SELECT_MEMORY_MODEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MEMORY_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_MEMORY_PROBE=y</xsl:when>
			<xsl:otherwise># ARCH_MEMORY_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_PROC_KCORE_TEXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_PROC_KCORE_TEXT=y</xsl:when>
			<xsl:otherwise># ARCH_PROC_KCORE_TEXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SELECT_MEMORY_MODEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SELECT_MEMORY_MODEL=y</xsl:when>
			<xsl:otherwise># SELECT_MEMORY_MODEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FLATMEM_MANUAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FLATMEM_MANUAL=y</xsl:when>
			<xsl:otherwise># FLATMEM_MANUAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DISCONTIGMEM_MANUAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DISCONTIGMEM_MANUAL=y</xsl:when>
			<xsl:otherwise># DISCONTIGMEM_MANUAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_MANUAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_MANUAL=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_MANUAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DISCONTIGMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DISCONTIGMEM=y</xsl:when>
			<xsl:otherwise># DISCONTIGMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM=y</xsl:when>
			<xsl:otherwise># SPARSEMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FLATMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FLATMEM=y</xsl:when>
			<xsl:otherwise># FLATMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FLAT_NODE_MEM_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FLAT_NODE_MEM_MAP=y</xsl:when>
			<xsl:otherwise># FLAT_NODE_MEM_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_MULTIPLE_NODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_MULTIPLE_NODES=y</xsl:when>
			<xsl:otherwise># NEED_MULTIPLE_NODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MEMORY_PRESENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MEMORY_PRESENT=y</xsl:when>
			<xsl:otherwise># HAVE_MEMORY_PRESENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_STATIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_STATIC=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_STATIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_EXTREME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_EXTREME=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_EXTREME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_VMEMMAP_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_VMEMMAP_ENABLE=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_VMEMMAP_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_ALLOC_MEM_MAP_TOGETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_ALLOC_MEM_MAP_TOGETHER=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_ALLOC_MEM_MAP_TOGETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARSEMEM_VMEMMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARSEMEM_VMEMMAP=y</xsl:when>
			<xsl:otherwise># SPARSEMEM_VMEMMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MEMBLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MEMBLOCK=y</xsl:when>
			<xsl:otherwise># HAVE_MEMBLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MEMBLOCK_NODE_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MEMBLOCK_NODE_MAP=y</xsl:when>
			<xsl:otherwise># HAVE_MEMBLOCK_NODE_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_MEMBLOCK_PHYS_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_MEMBLOCK_PHYS_MAP=y</xsl:when>
			<xsl:otherwise># HAVE_MEMBLOCK_PHYS_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_GENERIC_RCU_GUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_GENERIC_RCU_GUP=y</xsl:when>
			<xsl:otherwise># HAVE_GENERIC_RCU_GUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_DISCARD_MEMBLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_DISCARD_MEMBLOCK=y</xsl:when>
			<xsl:otherwise># ARCH_DISCARD_MEMBLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_BOOTMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_BOOTMEM=y</xsl:when>
			<xsl:otherwise># NO_BOOTMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_ISOLATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_ISOLATION=y</xsl:when>
			<xsl:otherwise># MEMORY_ISOLATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOVABLE_NODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOVABLE_NODE=y</xsl:when>
			<xsl:otherwise># MOVABLE_NODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_BOOTMEM_INFO_NODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_BOOTMEM_INFO_NODE=y</xsl:when>
			<xsl:otherwise># HAVE_BOOTMEM_INFO_NODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_HOTPLUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_HOTPLUG=y</xsl:when>
			<xsl:otherwise># MEMORY_HOTPLUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_HOTPLUG_SPARSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_HOTPLUG_SPARSE=y</xsl:when>
			<xsl:otherwise># MEMORY_HOTPLUG_SPARSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_HOTPLUG_DEFAULT_ONLINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_HOTPLUG_DEFAULT_ONLINE=y</xsl:when>
			<xsl:otherwise># MEMORY_HOTPLUG_DEFAULT_ONLINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_HOTREMOVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_HOTREMOVE=y</xsl:when>
			<xsl:otherwise># MEMORY_HOTREMOVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPLIT_PTLOCK_CPUS">
		SPLIT_PTLOCK_CPUS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_SPLIT_PMD_PTLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_SPLIT_PMD_PTLOCK=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_SPLIT_PMD_PTLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_BALLOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_BALLOON=y</xsl:when>
			<xsl:otherwise># MEMORY_BALLOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BALLOON_COMPACTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BALLOON_COMPACTION=y</xsl:when>
			<xsl:otherwise># BALLOON_COMPACTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPACTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPACTION=y</xsl:when>
			<xsl:otherwise># COMPACTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIGRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIGRATION=y</xsl:when>
			<xsl:otherwise># MIGRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_HUGEPAGE_MIGRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_HUGEPAGE_MIGRATION=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_HUGEPAGE_MIGRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHYS_ADDR_T_64BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHYS_ADDR_T_64BIT=y</xsl:when>
			<xsl:otherwise># PHYS_ADDR_T_64BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BOUNCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BOUNCE=y</xsl:when>
			<xsl:otherwise># BOUNCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_BOUNCE_POOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_BOUNCE_POOL=y</xsl:when>
			<xsl:otherwise># NEED_BOUNCE_POOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NR_QUICK">
		NR_QUICK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="VIRT_TO_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRT_TO_BUS=y</xsl:when>
			<xsl:otherwise># VIRT_TO_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMU_NOTIFIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMU_NOTIFIER=y</xsl:when>
			<xsl:otherwise># MMU_NOTIFIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KSM=y</xsl:when>
			<xsl:otherwise># KSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_MMAP_MIN_ADDR">
		DEFAULT_MMAP_MIN_ADDR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_MEMORY_FAILURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_MEMORY_FAILURE=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_MEMORY_FAILURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY_FAILURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY_FAILURE=y</xsl:when>
			<xsl:otherwise># MEMORY_FAILURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWPOISON_INJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWPOISON_INJECT=y</xsl:when>
			<xsl:when test=". = 'module'">HWPOISON_INJECT=m</xsl:when>
			<xsl:otherwise># HWPOISON_INJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOMMU_INITIAL_TRIM_EXCESS">
		NOMMU_INITIAL_TRIM_EXCESS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="TRANSPARENT_HUGEPAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRANSPARENT_HUGEPAGE=y</xsl:when>
			<xsl:otherwise># TRANSPARENT_HUGEPAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRANSPARENT_HUGEPAGE_ALWAYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRANSPARENT_HUGEPAGE_ALWAYS=y</xsl:when>
			<xsl:otherwise># TRANSPARENT_HUGEPAGE_ALWAYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRANSPARENT_HUGEPAGE_MADVISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRANSPARENT_HUGEPAGE_MADVISE=y</xsl:when>
			<xsl:otherwise># TRANSPARENT_HUGEPAGE_MADVISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRANSPARENT_HUGE_PAGECACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRANSPARENT_HUGE_PAGECACHE=y</xsl:when>
			<xsl:otherwise># TRANSPARENT_HUGE_PAGECACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEED_PER_CPU_KM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEED_PER_CPU_KM=y</xsl:when>
			<xsl:otherwise># NEED_PER_CPU_KM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLEANCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLEANCACHE=y</xsl:when>
			<xsl:otherwise># CLEANCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FRONTSWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FRONTSWAP=y</xsl:when>
			<xsl:otherwise># FRONTSWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA=y</xsl:when>
			<xsl:otherwise># CMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_DEBUG=y</xsl:when>
			<xsl:otherwise># CMA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_DEBUGFS=y</xsl:when>
			<xsl:otherwise># CMA_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_AREAS">
		CMA_AREAS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MEM_SOFT_DIRTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEM_SOFT_DIRTY=y</xsl:when>
			<xsl:otherwise># MEM_SOFT_DIRTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZSWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZSWAP=y</xsl:when>
			<xsl:otherwise># ZSWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZPOOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZPOOL=y</xsl:when>
			<xsl:when test=". = 'module'">ZPOOL=m</xsl:when>
			<xsl:otherwise># ZPOOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZBUD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZBUD=y</xsl:when>
			<xsl:when test=". = 'module'">ZBUD=m</xsl:when>
			<xsl:otherwise># ZBUD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="Z3FOLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">Z3FOLD=y</xsl:when>
			<xsl:when test=". = 'module'">Z3FOLD=m</xsl:when>
			<xsl:otherwise># Z3FOLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZSMALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZSMALLOC=y</xsl:when>
			<xsl:when test=". = 'module'">ZSMALLOC=m</xsl:when>
			<xsl:otherwise># ZSMALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PGTABLE_MAPPING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PGTABLE_MAPPING=y</xsl:when>
			<xsl:otherwise># PGTABLE_MAPPING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZSMALLOC_STAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZSMALLOC_STAT=y</xsl:when>
			<xsl:otherwise># ZSMALLOC_STAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_EARLY_IOREMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_EARLY_IOREMAP=y</xsl:when>
			<xsl:otherwise># GENERIC_EARLY_IOREMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX_STACK_SIZE_MB">
		MAX_STACK_SIZE_MB=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT=y</xsl:when>
			<xsl:otherwise># ARCH_SUPPORTS_DEFERRED_STRUCT_PAGE_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFERRED_STRUCT_PAGE_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFERRED_STRUCT_PAGE_INIT=y</xsl:when>
			<xsl:otherwise># DEFERRED_STRUCT_PAGE_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDLE_PAGE_TRACKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDLE_PAGE_TRACKING=y</xsl:when>
			<xsl:otherwise># IDLE_PAGE_TRACKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZONE_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZONE_DEVICE=y</xsl:when>
			<xsl:otherwise># ZONE_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FRAME_VECTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FRAME_VECTOR=y</xsl:when>
			<xsl:otherwise># FRAME_VECTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_USES_HIGH_VMA_FLAGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_USES_HIGH_VMA_FLAGS=y</xsl:when>
			<xsl:otherwise># ARCH_USES_HIGH_VMA_FLAGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_PKEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_PKEYS=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_PKEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PMEM_LEGACY_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PMEM_LEGACY_DEVICE=y</xsl:when>
			<xsl:otherwise># X86_PMEM_LEGACY_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PMEM_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PMEM_LEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">X86_PMEM_LEGACY=m</xsl:when>
			<xsl:otherwise># X86_PMEM_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIGHPTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIGHPTE=y</xsl:when>
			<xsl:otherwise># HIGHPTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_CHECK_BIOS_CORRUPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_CHECK_BIOS_CORRUPTION=y</xsl:when>
			<xsl:otherwise># X86_CHECK_BIOS_CORRUPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK=y</xsl:when>
			<xsl:otherwise># X86_BOOTPARAM_MEMORY_CORRUPTION_CHECK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_RESERVE_LOW">
		X86_RESERVE_LOW=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MATH_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MATH_EMULATION=y</xsl:when>
			<xsl:otherwise># MATH_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTRR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTRR=y</xsl:when>
			<xsl:otherwise># MTRR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTRR_SANITIZER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTRR_SANITIZER=y</xsl:when>
			<xsl:otherwise># MTRR_SANITIZER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTRR_SANITIZER_ENABLE_DEFAULT">
		MTRR_SANITIZER_ENABLE_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTRR_SANITIZER_SPARE_REG_NR_DEFAULT">
		MTRR_SANITIZER_SPARE_REG_NR_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="X86_PAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PAT=y</xsl:when>
			<xsl:otherwise># X86_PAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_USES_PG_UNCACHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_USES_PG_UNCACHED=y</xsl:when>
			<xsl:otherwise># ARCH_USES_PG_UNCACHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_RANDOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_RANDOM=y</xsl:when>
			<xsl:otherwise># ARCH_RANDOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SMAP=y</xsl:when>
			<xsl:otherwise># X86_SMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_MPX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_MPX=y</xsl:when>
			<xsl:otherwise># X86_INTEL_MPX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_MEMORY_PROTECTION_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_MEMORY_PROTECTION_KEYS=y</xsl:when>
			<xsl:otherwise># X86_INTEL_MEMORY_PROTECTION_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI=y</xsl:when>
			<xsl:otherwise># EFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_STUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_STUB=y</xsl:when>
			<xsl:otherwise># EFI_STUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_MIXED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_MIXED=y</xsl:when>
			<xsl:otherwise># EFI_MIXED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_SECURE_BOOT_SIG_ENFORCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_SECURE_BOOT_SIG_ENFORCE=y</xsl:when>
			<xsl:otherwise># EFI_SECURE_BOOT_SIG_ENFORCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECCOMP=y</xsl:when>
			<xsl:otherwise># SECCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ_100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HZ_100=y</xsl:when>
			<xsl:otherwise># HZ_100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ_250">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HZ_250=y</xsl:when>
			<xsl:otherwise># HZ_250 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ_300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HZ_300=y</xsl:when>
			<xsl:otherwise># HZ_300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ_1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HZ_1000=y</xsl:when>
			<xsl:otherwise># HZ_1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HZ">
		HZ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCHED_HRTICK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCHED_HRTICK=y</xsl:when>
			<xsl:otherwise># SCHED_HRTICK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC=y</xsl:when>
			<xsl:otherwise># KEXEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC_FILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC_FILE=y</xsl:when>
			<xsl:otherwise># KEXEC_FILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC_VERIFY_SIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC_VERIFY_SIG=y</xsl:when>
			<xsl:otherwise># KEXEC_VERIFY_SIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC_BZIMAGE_VERIFY_SIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC_BZIMAGE_VERIFY_SIG=y</xsl:when>
			<xsl:otherwise># KEXEC_BZIMAGE_VERIFY_SIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRASH_DUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRASH_DUMP=y</xsl:when>
			<xsl:otherwise># CRASH_DUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEXEC_JUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEXEC_JUMP=y</xsl:when>
			<xsl:otherwise># KEXEC_JUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RELOCATABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RELOCATABLE=y</xsl:when>
			<xsl:otherwise># RELOCATABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RANDOMIZE_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RANDOMIZE_BASE=y</xsl:when>
			<xsl:otherwise># RANDOMIZE_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_NEED_RELOCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_NEED_RELOCS=y</xsl:when>
			<xsl:otherwise># X86_NEED_RELOCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RANDOMIZE_MEMORY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RANDOMIZE_MEMORY=y</xsl:when>
			<xsl:otherwise># RANDOMIZE_MEMORY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_CPU=y</xsl:when>
			<xsl:otherwise># HOTPLUG_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BOOTPARAM_HOTPLUG_CPU0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BOOTPARAM_HOTPLUG_CPU0=y</xsl:when>
			<xsl:otherwise># BOOTPARAM_HOTPLUG_CPU0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_HOTPLUG_CPU0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_HOTPLUG_CPU0=y</xsl:when>
			<xsl:otherwise># DEBUG_HOTPLUG_CPU0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_VDSO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_VDSO=y</xsl:when>
			<xsl:otherwise># COMPAT_VDSO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEGACY_VSYSCALL_NATIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEGACY_VSYSCALL_NATIVE=y</xsl:when>
			<xsl:otherwise># LEGACY_VSYSCALL_NATIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEGACY_VSYSCALL_EMULATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEGACY_VSYSCALL_EMULATE=y</xsl:when>
			<xsl:otherwise># LEGACY_VSYSCALL_EMULATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEGACY_VSYSCALL_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEGACY_VSYSCALL_NONE=y</xsl:when>
			<xsl:otherwise># LEGACY_VSYSCALL_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMDLINE_BOOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMDLINE_BOOL=y</xsl:when>
			<xsl:otherwise># CMDLINE_BOOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMDLINE">
		CMDLINE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CMDLINE_OVERRIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMDLINE_OVERRIDE=y</xsl:when>
			<xsl:otherwise># CMDLINE_OVERRIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODIFY_LDT_SYSCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MODIFY_LDT_SYSCALL=y</xsl:when>
			<xsl:otherwise># MODIFY_LDT_SYSCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_LIVEPATCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_LIVEPATCH=y</xsl:when>
			<xsl:otherwise># HAVE_LIVEPATCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIVEPATCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIVEPATCH=y</xsl:when>
			<xsl:otherwise># LIVEPATCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_MEMORY_HOTPLUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_MEMORY_HOTPLUG=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_MEMORY_HOTPLUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_MEMORY_HOTREMOVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_MEMORY_HOTREMOVE=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_MEMORY_HOTREMOVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USE_PERCPU_NUMA_NODE_ID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USE_PERCPU_NUMA_NODE_ID=y</xsl:when>
			<xsl:otherwise># USE_PERCPU_NUMA_NODE_ID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_SPLIT_PMD_PTLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_SPLIT_PMD_PTLOCK=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_SPLIT_PMD_PTLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_ENABLE_HUGEPAGE_MIGRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_ENABLE_HUGEPAGE_MIGRATION=y</xsl:when>
			<xsl:otherwise># ARCH_ENABLE_HUGEPAGE_MIGRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HIBERNATION_HEADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HIBERNATION_HEADER=y</xsl:when>
			<xsl:otherwise># ARCH_HIBERNATION_HEADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUSPEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUSPEND=y</xsl:when>
			<xsl:otherwise># SUSPEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUSPEND_FREEZER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUSPEND_FREEZER=y</xsl:when>
			<xsl:otherwise># SUSPEND_FREEZER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUSPEND_SKIP_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUSPEND_SKIP_SYNC=y</xsl:when>
			<xsl:otherwise># SUSPEND_SKIP_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIBERNATE_CALLBACKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIBERNATE_CALLBACKS=y</xsl:when>
			<xsl:otherwise># HIBERNATE_CALLBACKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIBERNATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIBERNATION=y</xsl:when>
			<xsl:otherwise># HIBERNATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_SAVE_PAGE_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_SAVE_PAGE_KEYS=y</xsl:when>
			<xsl:otherwise># ARCH_SAVE_PAGE_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_STD_PARTITION">
		PM_STD_PARTITION=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PM_SLEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_SLEEP=y</xsl:when>
			<xsl:otherwise># PM_SLEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_SLEEP_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_SLEEP_SMP=y</xsl:when>
			<xsl:otherwise># PM_SLEEP_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_AUTOSLEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_AUTOSLEEP=y</xsl:when>
			<xsl:otherwise># PM_AUTOSLEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_WAKELOCKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_WAKELOCKS=y</xsl:when>
			<xsl:otherwise># PM_WAKELOCKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_WAKELOCKS_LIMIT">
		PM_WAKELOCKS_LIMIT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PM_WAKELOCKS_GC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_WAKELOCKS_GC=y</xsl:when>
			<xsl:otherwise># PM_WAKELOCKS_GC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM=y</xsl:when>
			<xsl:otherwise># PM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_DEBUG=y</xsl:when>
			<xsl:otherwise># PM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_ADVANCED_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_ADVANCED_DEBUG=y</xsl:when>
			<xsl:otherwise># PM_ADVANCED_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_TEST_SUSPEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_TEST_SUSPEND=y</xsl:when>
			<xsl:otherwise># PM_TEST_SUSPEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_SLEEP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_SLEEP_DEBUG=y</xsl:when>
			<xsl:otherwise># PM_SLEEP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DPM_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DPM_WATCHDOG=y</xsl:when>
			<xsl:otherwise># DPM_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DPM_WATCHDOG_TIMEOUT">
		DPM_WATCHDOG_TIMEOUT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PM_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_TRACE=y</xsl:when>
			<xsl:otherwise># PM_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_TRACE_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_TRACE_RTC=y</xsl:when>
			<xsl:otherwise># PM_TRACE_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_EMULATION=y</xsl:when>
			<xsl:when test=". = 'module'">APM_EMULATION=m</xsl:when>
			<xsl:otherwise># APM_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_OPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_OPP=y</xsl:when>
			<xsl:otherwise># PM_OPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_CLK=y</xsl:when>
			<xsl:otherwise># PM_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_GENERIC_DOMAINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_GENERIC_DOMAINS=y</xsl:when>
			<xsl:otherwise># PM_GENERIC_DOMAINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WQ_POWER_EFFICIENT_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WQ_POWER_EFFICIENT_DEFAULT=y</xsl:when>
			<xsl:otherwise># WQ_POWER_EFFICIENT_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_GENERIC_DOMAINS_SLEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_GENERIC_DOMAINS_SLEEP=y</xsl:when>
			<xsl:otherwise># PM_GENERIC_DOMAINS_SLEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_GENERIC_DOMAINS_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_GENERIC_DOMAINS_OF=y</xsl:when>
			<xsl:otherwise># PM_GENERIC_DOMAINS_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_PM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_PM=y</xsl:when>
			<xsl:otherwise># CPU_PM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI=y</xsl:when>
			<xsl:otherwise># ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_LEGACY_TABLES_LOOKUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_LEGACY_TABLES_LOOKUP=y</xsl:when>
			<xsl:otherwise># ACPI_LEGACY_TABLES_LOOKUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MIGHT_HAVE_ACPI_PDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_MIGHT_HAVE_ACPI_PDC=y</xsl:when>
			<xsl:otherwise># ARCH_MIGHT_HAVE_ACPI_PDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_GENERIC_GSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_GENERIC_GSI=y</xsl:when>
			<xsl:otherwise># ACPI_GENERIC_GSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_SYSTEM_POWER_STATES_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_SYSTEM_POWER_STATES_SUPPORT=y</xsl:when>
			<xsl:otherwise># ACPI_SYSTEM_POWER_STATES_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CCA_REQUIRED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CCA_REQUIRED=y</xsl:when>
			<xsl:otherwise># ACPI_CCA_REQUIRED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_DEBUGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_DEBUGGER=y</xsl:when>
			<xsl:otherwise># ACPI_DEBUGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_DEBUGGER_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_DEBUGGER_USER=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_DEBUGGER_USER=m</xsl:when>
			<xsl:otherwise># ACPI_DEBUGGER_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_SPCR_TABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_SPCR_TABLE=y</xsl:when>
			<xsl:otherwise># ACPI_SPCR_TABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_SLEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_SLEEP=y</xsl:when>
			<xsl:otherwise># ACPI_SLEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PROCFS_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PROCFS_POWER=y</xsl:when>
			<xsl:otherwise># ACPI_PROCFS_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_REV_OVERRIDE_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_REV_OVERRIDE_POSSIBLE=y</xsl:when>
			<xsl:otherwise># ACPI_REV_OVERRIDE_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_EC_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_EC_DEBUGFS=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_EC_DEBUGFS=m</xsl:when>
			<xsl:otherwise># ACPI_EC_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_AC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_AC=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_AC=m</xsl:when>
			<xsl:otherwise># ACPI_AC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_BATTERY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_BATTERY=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_BATTERY=m</xsl:when>
			<xsl:otherwise># ACPI_BATTERY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_BUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_BUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_BUTTON=m</xsl:when>
			<xsl:otherwise># ACPI_BUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_VIDEO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_VIDEO=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_VIDEO=m</xsl:when>
			<xsl:otherwise># ACPI_VIDEO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_FAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_FAN=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_FAN=m</xsl:when>
			<xsl:otherwise># ACPI_FAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_DOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_DOCK=y</xsl:when>
			<xsl:otherwise># ACPI_DOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CPU_FREQ_PSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CPU_FREQ_PSS=y</xsl:when>
			<xsl:otherwise># ACPI_CPU_FREQ_PSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PROCESSOR_CSTATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PROCESSOR_CSTATE=y</xsl:when>
			<xsl:otherwise># ACPI_PROCESSOR_CSTATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PROCESSOR_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PROCESSOR_IDLE=y</xsl:when>
			<xsl:otherwise># ACPI_PROCESSOR_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_MCFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_MCFG=y</xsl:when>
			<xsl:otherwise># ACPI_MCFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CPPC_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CPPC_LIB=y</xsl:when>
			<xsl:otherwise># ACPI_CPPC_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PROCESSOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PROCESSOR=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_PROCESSOR=m</xsl:when>
			<xsl:otherwise># ACPI_PROCESSOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_IPMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_IPMI=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_IPMI=m</xsl:when>
			<xsl:otherwise># ACPI_IPMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_HOTPLUG_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_HOTPLUG_CPU=y</xsl:when>
			<xsl:otherwise># ACPI_HOTPLUG_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PROCESSOR_AGGREGATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PROCESSOR_AGGREGATOR=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_PROCESSOR_AGGREGATOR=m</xsl:when>
			<xsl:otherwise># ACPI_PROCESSOR_AGGREGATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_THERMAL=m</xsl:when>
			<xsl:otherwise># ACPI_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_NUMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_NUMA=y</xsl:when>
			<xsl:otherwise># ACPI_NUMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CUSTOM_DSDT_FILE">
		ACPI_CUSTOM_DSDT_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ACPI_CUSTOM_DSDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CUSTOM_DSDT=y</xsl:when>
			<xsl:otherwise># ACPI_CUSTOM_DSDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_ACPI_TABLE_UPGRADE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_ACPI_TABLE_UPGRADE=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_ACPI_TABLE_UPGRADE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_TABLE_UPGRADE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_TABLE_UPGRADE=y</xsl:when>
			<xsl:otherwise># ACPI_TABLE_UPGRADE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_DEBUG=y</xsl:when>
			<xsl:otherwise># ACPI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_PCI_SLOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_PCI_SLOT=y</xsl:when>
			<xsl:otherwise># ACPI_PCI_SLOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PM_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PM_TIMER=y</xsl:when>
			<xsl:otherwise># X86_PM_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CONTAINER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CONTAINER=y</xsl:when>
			<xsl:otherwise># ACPI_CONTAINER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_HOTPLUG_MEMORY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_HOTPLUG_MEMORY=y</xsl:when>
			<xsl:otherwise># ACPI_HOTPLUG_MEMORY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_HOTPLUG_IOAPIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_HOTPLUG_IOAPIC=y</xsl:when>
			<xsl:otherwise># ACPI_HOTPLUG_IOAPIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_SBS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_SBS=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_SBS=m</xsl:when>
			<xsl:otherwise># ACPI_SBS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_HED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_HED=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_HED=m</xsl:when>
			<xsl:otherwise># ACPI_HED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CUSTOM_METHOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CUSTOM_METHOD=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_CUSTOM_METHOD=m</xsl:when>
			<xsl:otherwise># ACPI_CUSTOM_METHOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_BGRT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_BGRT=y</xsl:when>
			<xsl:otherwise># ACPI_BGRT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_REDUCED_HARDWARE_ONLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_REDUCED_HARDWARE_ONLY=y</xsl:when>
			<xsl:otherwise># ACPI_REDUCED_HARDWARE_ONLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_NFIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_NFIT=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_NFIT=m</xsl:when>
			<xsl:otherwise># ACPI_NFIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_NFIT_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_NFIT_DEBUG=y</xsl:when>
			<xsl:otherwise># ACPI_NFIT_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ACPI_APEI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ACPI_APEI=y</xsl:when>
			<xsl:otherwise># HAVE_ACPI_APEI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ACPI_APEI_NMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ACPI_APEI_NMI=y</xsl:when>
			<xsl:otherwise># HAVE_ACPI_APEI_NMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI=y</xsl:when>
			<xsl:otherwise># ACPI_APEI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI_GHES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI_GHES=y</xsl:when>
			<xsl:otherwise># ACPI_APEI_GHES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI_PCIEAER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI_PCIEAER=y</xsl:when>
			<xsl:otherwise># ACPI_APEI_PCIEAER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI_MEMORY_FAILURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI_MEMORY_FAILURE=y</xsl:when>
			<xsl:otherwise># ACPI_APEI_MEMORY_FAILURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI_EINJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI_EINJ=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_APEI_EINJ=m</xsl:when>
			<xsl:otherwise># ACPI_APEI_EINJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_APEI_ERST_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_APEI_ERST_DEBUG=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_APEI_ERST_DEBUG=m</xsl:when>
			<xsl:otherwise># ACPI_APEI_ERST_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DPTF_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DPTF_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">DPTF_POWER=m</xsl:when>
			<xsl:otherwise># DPTF_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_EXTLOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_EXTLOG=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_EXTLOG=m</xsl:when>
			<xsl:otherwise># ACPI_EXTLOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMIC_OPREGION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMIC_OPREGION=y</xsl:when>
			<xsl:otherwise># PMIC_OPREGION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC_PMIC_OPREGION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC_PMIC_OPREGION=y</xsl:when>
			<xsl:otherwise># CRC_PMIC_OPREGION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XPOWER_PMIC_OPREGION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XPOWER_PMIC_OPREGION=y</xsl:when>
			<xsl:otherwise># XPOWER_PMIC_OPREGION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BXT_WC_PMIC_OPREGION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BXT_WC_PMIC_OPREGION=y</xsl:when>
			<xsl:otherwise># BXT_WC_PMIC_OPREGION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CONFIGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CONFIGFS=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_CONFIGFS=m</xsl:when>
			<xsl:otherwise># ACPI_CONFIGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_IORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_IORT=y</xsl:when>
			<xsl:otherwise># ACPI_IORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFI=y</xsl:when>
			<xsl:otherwise># SFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_APM_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_APM_BOOT=y</xsl:when>
			<xsl:otherwise># X86_APM_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM=y</xsl:when>
			<xsl:when test=". = 'module'">APM=m</xsl:when>
			<xsl:otherwise># APM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_IGNORE_USER_SUSPEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_IGNORE_USER_SUSPEND=y</xsl:when>
			<xsl:otherwise># APM_IGNORE_USER_SUSPEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_DO_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_DO_ENABLE=y</xsl:when>
			<xsl:otherwise># APM_DO_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_CPU_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_CPU_IDLE=y</xsl:when>
			<xsl:otherwise># APM_CPU_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_DISPLAY_BLANK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_DISPLAY_BLANK=y</xsl:when>
			<xsl:otherwise># APM_DISPLAY_BLANK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_ALLOW_INTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_ALLOW_INTS=y</xsl:when>
			<xsl:otherwise># APM_ALLOW_INTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ=y</xsl:when>
			<xsl:otherwise># CPU_FREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_ATTR_SET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_ATTR_SET=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_ATTR_SET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_COMMON=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_BOOST_SW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_BOOST_SW=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_BOOST_SW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_STAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_STAT=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_STAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_STAT_DETAILS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_STAT_DETAILS=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_STAT_DETAILS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_PERFORMANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_PERFORMANCE=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_PERFORMANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_POWERSAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_POWERSAVE=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_POWERSAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_USERSPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_USERSPACE=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_USERSPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_ONDEMAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_ONDEMAND=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_ONDEMAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_CONSERVATIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_CONSERVATIVE=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_CONSERVATIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_DEFAULT_GOV_SCHEDUTIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_DEFAULT_GOV_SCHEDUTIL=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_DEFAULT_GOV_SCHEDUTIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_PERFORMANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_PERFORMANCE=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_PERFORMANCE=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_PERFORMANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_POWERSAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_POWERSAVE=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_POWERSAVE=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_POWERSAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_USERSPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_USERSPACE=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_USERSPACE=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_USERSPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_ONDEMAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_ONDEMAND=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_ONDEMAND=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_ONDEMAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_CONSERVATIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_CONSERVATIVE=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_CONSERVATIVE=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_CONSERVATIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_GOV_SCHEDUTIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_GOV_SCHEDUTIL=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_GOV_SCHEDUTIL=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_GOV_SCHEDUTIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPUFREQ_DT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPUFREQ_DT=y</xsl:when>
			<xsl:when test=". = 'module'">CPUFREQ_DT=m</xsl:when>
			<xsl:otherwise># CPUFREQ_DT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPUFREQ_DT_PLATDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPUFREQ_DT_PLATDEV=y</xsl:when>
			<xsl:otherwise># CPUFREQ_DT_PLATDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_INTEL_PSTATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_INTEL_PSTATE=y</xsl:when>
			<xsl:otherwise># X86_INTEL_PSTATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PCC_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PCC_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">X86_PCC_CPUFREQ=m</xsl:when>
			<xsl:otherwise># X86_PCC_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_ACPI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_ACPI_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">X86_ACPI_CPUFREQ=m</xsl:when>
			<xsl:otherwise># X86_ACPI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_ACPI_CPUFREQ_CPB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_ACPI_CPUFREQ_CPB=y</xsl:when>
			<xsl:otherwise># X86_ACPI_CPUFREQ_CPB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SFI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SFI_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">X86_SFI_CPUFREQ=m</xsl:when>
			<xsl:otherwise># X86_SFI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ELAN_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ELAN_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ELAN_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ELAN_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC520_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC520_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">SC520_CPUFREQ=m</xsl:when>
			<xsl:otherwise># SC520_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_POWERNOW_K6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_POWERNOW_K6=y</xsl:when>
			<xsl:when test=". = 'module'">X86_POWERNOW_K6=m</xsl:when>
			<xsl:otherwise># X86_POWERNOW_K6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_POWERNOW_K7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_POWERNOW_K7=y</xsl:when>
			<xsl:when test=". = 'module'">X86_POWERNOW_K7=m</xsl:when>
			<xsl:otherwise># X86_POWERNOW_K7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_POWERNOW_K7_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_POWERNOW_K7_ACPI=y</xsl:when>
			<xsl:otherwise># X86_POWERNOW_K7_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_POWERNOW_K8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_POWERNOW_K8=y</xsl:when>
			<xsl:when test=". = 'module'">X86_POWERNOW_K8=m</xsl:when>
			<xsl:otherwise># X86_POWERNOW_K8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_AMD_FREQ_SENSITIVITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_AMD_FREQ_SENSITIVITY=y</xsl:when>
			<xsl:when test=". = 'module'">X86_AMD_FREQ_SENSITIVITY=m</xsl:when>
			<xsl:otherwise># X86_AMD_FREQ_SENSITIVITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_GX_SUSPMOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_GX_SUSPMOD=y</xsl:when>
			<xsl:when test=". = 'module'">X86_GX_SUSPMOD=m</xsl:when>
			<xsl:otherwise># X86_GX_SUSPMOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_CENTRINO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_CENTRINO=y</xsl:when>
			<xsl:when test=". = 'module'">X86_SPEEDSTEP_CENTRINO=m</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_CENTRINO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_CENTRINO_TABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_CENTRINO_TABLE=y</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_CENTRINO_TABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_ICH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_ICH=y</xsl:when>
			<xsl:when test=". = 'module'">X86_SPEEDSTEP_ICH=m</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_ICH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_SMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_SMI=y</xsl:when>
			<xsl:when test=". = 'module'">X86_SPEEDSTEP_SMI=m</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_SMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_P4_CLOCKMOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_P4_CLOCKMOD=y</xsl:when>
			<xsl:when test=". = 'module'">X86_P4_CLOCKMOD=m</xsl:when>
			<xsl:otherwise># X86_P4_CLOCKMOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_CPUFREQ_NFORCE2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_CPUFREQ_NFORCE2=y</xsl:when>
			<xsl:when test=". = 'module'">X86_CPUFREQ_NFORCE2=m</xsl:when>
			<xsl:otherwise># X86_CPUFREQ_NFORCE2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_LONGRUN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_LONGRUN=y</xsl:when>
			<xsl:when test=". = 'module'">X86_LONGRUN=m</xsl:when>
			<xsl:otherwise># X86_LONGRUN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_LONGHAUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_LONGHAUL=y</xsl:when>
			<xsl:when test=". = 'module'">X86_LONGHAUL=m</xsl:when>
			<xsl:otherwise># X86_LONGHAUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_E_POWERSAVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_E_POWERSAVER=y</xsl:when>
			<xsl:when test=". = 'module'">X86_E_POWERSAVER=m</xsl:when>
			<xsl:otherwise># X86_E_POWERSAVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">X86_SPEEDSTEP_LIB=m</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SPEEDSTEP_RELAXED_CAP_CHECK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SPEEDSTEP_RELAXED_CAP_CHECK=y</xsl:when>
			<xsl:otherwise># X86_SPEEDSTEP_RELAXED_CAP_CHECK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_BIG_LITTLE_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_BIG_LITTLE_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_BIG_LITTLE_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_BIG_LITTLE_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_DT_BL_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_DT_BL_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_DT_BL_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_DT_BL_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_VEXPRESS_SPC_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_VEXPRESS_SPC_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_VEXPRESS_SPC_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_VEXPRESS_SPC_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_EXYNOS5440_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_EXYNOS5440_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_EXYNOS5440_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_EXYNOS5440_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_HIGHBANK_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_HIGHBANK_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_HIGHBANK_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_HIGHBANK_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_IMX6Q_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_IMX6Q_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_IMX6Q_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_IMX6Q_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_INTEGRATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_INTEGRATOR=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_INTEGRATOR=m</xsl:when>
			<xsl:otherwise># ARM_INTEGRATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_KIRKWOOD_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_KIRKWOOD_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_KIRKWOOD_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_MT8173_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_MT8173_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_MT8173_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_MT8173_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_OMAP2PLUS_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_OMAP2PLUS_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_OMAP2PLUS_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C24XX_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C24XX_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C24XX_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C24XX_CPUFREQ_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C24XX_CPUFREQ_DEBUG=y</xsl:when>
			<xsl:otherwise># ARM_S3C24XX_CPUFREQ_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C24XX_CPUFREQ_IODEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C24XX_CPUFREQ_IODEBUG=y</xsl:when>
			<xsl:otherwise># ARM_S3C24XX_CPUFREQ_IODEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C24XX_CPUFREQ_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C24XX_CPUFREQ_DEBUGFS=y</xsl:when>
			<xsl:otherwise># ARM_S3C24XX_CPUFREQ_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C2410_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C2410_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C2410_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C2412_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C2412_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C2412_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C2416_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C2416_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C2416_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C2416_CPUFREQ_VCORESCALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C2416_CPUFREQ_VCORESCALE=y</xsl:when>
			<xsl:otherwise># ARM_S3C2416_CPUFREQ_VCORESCALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C2440_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C2440_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C2440_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S3C64XX_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S3C64XX_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S3C64XX_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_S5PV210_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_S5PV210_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_S5PV210_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SA1100_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SA1100_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_SA1100_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SA1110_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SA1110_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_SA1110_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SCPI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SCPI_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_SCPI_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_SCPI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SPEAR_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SPEAR_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_SPEAR_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_STI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_STI_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_STI_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_STI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_TEGRA20_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_TEGRA20_CPUFREQ=y</xsl:when>
			<xsl:otherwise># ARM_TEGRA20_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_TEGRA124_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_TEGRA124_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_TEGRA124_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_TEGRA124_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_PXA2xx_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_PXA2xx_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_PXA2xx_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ARM_PXA2xx_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CPPC_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CPPC_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_CPPC_CPUFREQ=m</xsl:when>
			<xsl:otherwise># ACPI_CPPC_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_CBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_CBE=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_FREQ_CBE=m</xsl:when>
			<xsl:otherwise># CPU_FREQ_CBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_CBE_PMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_CBE_PMI=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_CBE_PMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_MAPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_MAPLE=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_MAPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_PMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_PMAC=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_PMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_FREQ_PMAC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_FREQ_PMAC64=y</xsl:when>
			<xsl:otherwise># CPU_FREQ_PMAC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_PASEMI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_PASEMI_CPUFREQ=y</xsl:when>
			<xsl:otherwise># PPC_PASEMI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWERNV_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWERNV_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">POWERNV_CPUFREQ=m</xsl:when>
			<xsl:otherwise># POWERNV_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AVR32_AT32AP_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AVR32_AT32AP_CPUFREQ=y</xsl:when>
			<xsl:otherwise># AVR32_AT32AP_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IA64_ACPI_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IA64_ACPI_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">IA64_ACPI_CPUFREQ=m</xsl:when>
			<xsl:otherwise># IA64_ACPI_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOONGSON2_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOONGSON2_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">LOONGSON2_CPUFREQ=m</xsl:when>
			<xsl:otherwise># LOONGSON2_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOONGSON1_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOONGSON1_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">LOONGSON1_CPUFREQ=m</xsl:when>
			<xsl:otherwise># LOONGSON1_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARC_US3_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARC_US3_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">SPARC_US3_CPUFREQ=m</xsl:when>
			<xsl:otherwise># SPARC_US3_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPARC_US2E_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPARC_US2E_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">SPARC_US2E_CPUFREQ=m</xsl:when>
			<xsl:otherwise># SPARC_US2E_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_CPU_FREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_CPU_FREQ=y</xsl:when>
			<xsl:when test=". = 'module'">SH_CPU_FREQ=m</xsl:when>
			<xsl:otherwise># SH_CPU_FREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QORIQ_CPUFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QORIQ_CPUFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">QORIQ_CPUFREQ=m</xsl:when>
			<xsl:otherwise># QORIQ_CPUFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_IDLE=y</xsl:when>
			<xsl:otherwise># CPU_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_IDLE_MULTIPLE_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_IDLE_MULTIPLE_DRIVERS=y</xsl:when>
			<xsl:otherwise># CPU_IDLE_MULTIPLE_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_IDLE_GOV_LADDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_IDLE_GOV_LADDER=y</xsl:when>
			<xsl:otherwise># CPU_IDLE_GOV_LADDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_IDLE_GOV_MENU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_IDLE_GOV_MENU=y</xsl:when>
			<xsl:otherwise># CPU_IDLE_GOV_MENU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DT_IDLE_STATES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DT_IDLE_STATES=y</xsl:when>
			<xsl:otherwise># DT_IDLE_STATES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_BIG_LITTLE_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_BIG_LITTLE_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_BIG_LITTLE_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CLPS711X_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CLPS711X_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_CLPS711X_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_HIGHBANK_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_HIGHBANK_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_HIGHBANK_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_KIRKWOOD_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_KIRKWOOD_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_KIRKWOOD_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ZYNQ_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ZYNQ_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_ZYNQ_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_U8500_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_U8500_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_U8500_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_AT91_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_AT91_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_AT91_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_EXYNOS_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_EXYNOS_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_EXYNOS_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_MVEBU_V7_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_MVEBU_V7_CPUIDLE=y</xsl:when>
			<xsl:otherwise># ARM_MVEBU_V7_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_CPS_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_CPS_CPUIDLE=y</xsl:when>
			<xsl:otherwise># MIPS_CPS_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSERIES_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSERIES_CPUIDLE=y</xsl:when>
			<xsl:otherwise># PSERIES_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWERNV_CPUIDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWERNV_CPUIDLE=y</xsl:when>
			<xsl:otherwise># POWERNV_CPUIDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_NEEDS_CPU_IDLE_COUPLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_NEEDS_CPU_IDLE_COUPLED=y</xsl:when>
			<xsl:otherwise># ARCH_NEEDS_CPU_IDLE_COUPLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IDLE=y</xsl:when>
			<xsl:otherwise># INTEL_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I7300_IDLE_IOAT_CHANNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I7300_IDLE_IOAT_CHANNEL=y</xsl:when>
			<xsl:otherwise># I7300_IDLE_IOAT_CHANNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I7300_IDLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I7300_IDLE=y</xsl:when>
			<xsl:when test=". = 'module'">I7300_IDLE=m</xsl:when>
			<xsl:otherwise># I7300_IDLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI=y</xsl:when>
			<xsl:otherwise># PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_GOBIOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_GOBIOS=y</xsl:when>
			<xsl:otherwise># PCI_GOBIOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_GOMMCONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_GOMMCONFIG=y</xsl:when>
			<xsl:otherwise># PCI_GOMMCONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_GODIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_GODIRECT=y</xsl:when>
			<xsl:otherwise># PCI_GODIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_GOOLPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_GOOLPC=y</xsl:when>
			<xsl:otherwise># PCI_GOOLPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_GOANY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_GOANY=y</xsl:when>
			<xsl:otherwise># PCI_GOANY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_BIOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_BIOS=y</xsl:when>
			<xsl:otherwise># PCI_BIOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_DIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_DIRECT=y</xsl:when>
			<xsl:otherwise># PCI_DIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_MMCONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_MMCONFIG=y</xsl:when>
			<xsl:otherwise># PCI_MMCONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_OLPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_OLPC=y</xsl:when>
			<xsl:otherwise># PCI_OLPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_XEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_XEN=y</xsl:when>
			<xsl:otherwise># PCI_XEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_DOMAINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_DOMAINS=y</xsl:when>
			<xsl:otherwise># PCI_DOMAINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_MMCONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_MMCONFIG=y</xsl:when>
			<xsl:otherwise># PCI_MMCONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_CNB20LE_QUIRK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_CNB20LE_QUIRK=y</xsl:when>
			<xsl:otherwise># PCI_CNB20LE_QUIRK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEPORTBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEPORTBUS=y</xsl:when>
			<xsl:otherwise># PCIEPORTBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_PCIE=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEAER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEAER=y</xsl:when>
			<xsl:otherwise># PCIEAER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_ECRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_ECRC=y</xsl:when>
			<xsl:otherwise># PCIE_ECRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEAER_INJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEAER_INJECT=y</xsl:when>
			<xsl:when test=". = 'module'">PCIEAER_INJECT=m</xsl:when>
			<xsl:otherwise># PCIEAER_INJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEASPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEASPM=y</xsl:when>
			<xsl:otherwise># PCIEASPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEASPM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEASPM_DEBUG=y</xsl:when>
			<xsl:otherwise># PCIEASPM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEASPM_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEASPM_DEFAULT=y</xsl:when>
			<xsl:otherwise># PCIEASPM_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEASPM_POWERSAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEASPM_POWERSAVE=y</xsl:when>
			<xsl:otherwise># PCIEASPM_POWERSAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIEASPM_PERFORMANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIEASPM_PERFORMANCE=y</xsl:when>
			<xsl:otherwise># PCIEASPM_PERFORMANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_PME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_PME=y</xsl:when>
			<xsl:otherwise># PCIE_PME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_DPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_DPC=y</xsl:when>
			<xsl:otherwise># PCIE_DPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_BUS_ADDR_T_64BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_BUS_ADDR_T_64BIT=y</xsl:when>
			<xsl:otherwise># PCI_BUS_ADDR_T_64BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_MSI=y</xsl:when>
			<xsl:otherwise># PCI_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_MSI_IRQ_DOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_MSI_IRQ_DOMAIN=y</xsl:when>
			<xsl:otherwise># PCI_MSI_IRQ_DOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_DEBUG=y</xsl:when>
			<xsl:otherwise># PCI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_REALLOC_ENABLE_AUTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_REALLOC_ENABLE_AUTO=y</xsl:when>
			<xsl:otherwise># PCI_REALLOC_ENABLE_AUTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_STUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_STUB=y</xsl:when>
			<xsl:when test=". = 'module'">PCI_STUB=m</xsl:when>
			<xsl:otherwise># PCI_STUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_PCIDEV_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_PCIDEV_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_PCIDEV_FRONTEND=m</xsl:when>
			<xsl:otherwise># XEN_PCIDEV_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HT_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HT_IRQ=y</xsl:when>
			<xsl:otherwise># HT_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_ATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_ATS=y</xsl:when>
			<xsl:otherwise># PCI_ATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_ECAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_ECAM=y</xsl:when>
			<xsl:otherwise># PCI_ECAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_IOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_IOV=y</xsl:when>
			<xsl:otherwise># PCI_IOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_PRI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_PRI=y</xsl:when>
			<xsl:otherwise># PCI_PRI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_PASID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_PASID=y</xsl:when>
			<xsl:otherwise># PCI_PASID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_LABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_LABEL=y</xsl:when>
			<xsl:otherwise># PCI_LABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HYPERV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HYPERV=y</xsl:when>
			<xsl:when test=". = 'module'">PCI_HYPERV=m</xsl:when>
			<xsl:otherwise># PCI_HYPERV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_COMPAQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_COMPAQ=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_COMPAQ=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_COMPAQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_COMPAQ_NVRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_COMPAQ_NVRAM=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_COMPAQ_NVRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_IBM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_IBM=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_IBM=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_IBM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_ACPI=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_ACPI_IBM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_ACPI_IBM=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_ACPI_IBM=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_ACPI_IBM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_CPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_CPCI=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_CPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_CPCI_ZT5550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_CPCI_ZT5550=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_CPCI_ZT5550=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_CPCI_ZT5550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_CPCI_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_CPCI_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_CPCI_GENERIC=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_CPCI_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_SHPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_SHPC=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_SHPC=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_SHPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_POWERNV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_POWERNV=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_POWERNV=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_POWERNV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_RPA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_RPA=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_RPA=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_RPA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_RPA_DLPAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_RPA_DLPAR=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_RPA_DLPAR=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_RPA_DLPAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_SGI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_SGI=y</xsl:when>
			<xsl:when test=". = 'module'">HOTPLUG_PCI_SGI=m</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_SGI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOTPLUG_PCI_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOTPLUG_PCI_S390=y</xsl:when>
			<xsl:otherwise># HOTPLUG_PCI_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_DRA7XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_DRA7XX=y</xsl:when>
			<xsl:otherwise># PCI_DRA7XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_MVEBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_MVEBU=y</xsl:when>
			<xsl:otherwise># PCI_MVEBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_AARDVARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_AARDVARK=y</xsl:when>
			<xsl:otherwise># PCI_AARDVARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_XILINX_NWL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_XILINX_NWL=y</xsl:when>
			<xsl:otherwise># PCIE_XILINX_NWL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_DW_PLAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_DW_PLAT=y</xsl:when>
			<xsl:otherwise># PCIE_DW_PLAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_DW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_DW=y</xsl:when>
			<xsl:otherwise># PCIE_DW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_EXYNOS=y</xsl:when>
			<xsl:otherwise># PCI_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_IMX6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_IMX6=y</xsl:when>
			<xsl:otherwise># PCI_IMX6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_TEGRA=y</xsl:when>
			<xsl:otherwise># PCI_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_RCAR_GEN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_RCAR_GEN2=y</xsl:when>
			<xsl:otherwise># PCI_RCAR_GEN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_RCAR=y</xsl:when>
			<xsl:otherwise># PCIE_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HOST_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HOST_COMMON=y</xsl:when>
			<xsl:otherwise># PCI_HOST_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HOST_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HOST_GENERIC=y</xsl:when>
			<xsl:otherwise># PCI_HOST_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_SPEAR13XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_SPEAR13XX=y</xsl:when>
			<xsl:otherwise># PCIE_SPEAR13XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_KEYSTONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_KEYSTONE=y</xsl:when>
			<xsl:otherwise># PCI_KEYSTONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_XILINX=y</xsl:when>
			<xsl:otherwise># PCIE_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_XGENE=y</xsl:when>
			<xsl:otherwise># PCI_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_XGENE_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_XGENE_MSI=y</xsl:when>
			<xsl:otherwise># PCI_XGENE_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_LAYERSCAPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_LAYERSCAPE=y</xsl:when>
			<xsl:otherwise># PCI_LAYERSCAPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_VERSATILE=y</xsl:when>
			<xsl:otherwise># PCI_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">PCIE_IPROC=m</xsl:when>
			<xsl:otherwise># PCIE_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_IPROC_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_IPROC_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">PCIE_IPROC_PLATFORM=m</xsl:when>
			<xsl:otherwise># PCIE_IPROC_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_IPROC_BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_IPROC_BCMA=y</xsl:when>
			<xsl:when test=". = 'module'">PCIE_IPROC_BCMA=m</xsl:when>
			<xsl:otherwise># PCIE_IPROC_BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_IPROC_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_IPROC_MSI=y</xsl:when>
			<xsl:otherwise># PCIE_IPROC_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_ALTERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_ALTERA=y</xsl:when>
			<xsl:otherwise># PCIE_ALTERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_ALTERA_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_ALTERA_MSI=y</xsl:when>
			<xsl:otherwise># PCIE_ALTERA_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HISI=y</xsl:when>
			<xsl:otherwise># PCI_HISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_QCOM=y</xsl:when>
			<xsl:otherwise># PCIE_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HOST_THUNDER_PEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HOST_THUNDER_PEM=y</xsl:when>
			<xsl:otherwise># PCI_HOST_THUNDER_PEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_HOST_THUNDER_ECAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_HOST_THUNDER_ECAM=y</xsl:when>
			<xsl:otherwise># PCI_HOST_THUNDER_ECAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_ARMADA_8K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_ARMADA_8K=y</xsl:when>
			<xsl:otherwise># PCIE_ARMADA_8K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCIE_ARTPEC6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCIE_ARTPEC6=y</xsl:when>
			<xsl:otherwise># PCIE_ARTPEC6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISA_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISA_BUS=y</xsl:when>
			<xsl:otherwise># ISA_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISA_DMA_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISA_DMA_API=y</xsl:when>
			<xsl:otherwise># ISA_DMA_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISA=y</xsl:when>
			<xsl:otherwise># ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EISA=y</xsl:when>
			<xsl:otherwise># EISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EISA_VLB_PRIMING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EISA_VLB_PRIMING=y</xsl:when>
			<xsl:otherwise># EISA_VLB_PRIMING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EISA_PCI_EISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EISA_PCI_EISA=y</xsl:when>
			<xsl:otherwise># EISA_PCI_EISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EISA_VIRTUAL_ROOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EISA_VIRTUAL_ROOT=y</xsl:when>
			<xsl:otherwise># EISA_VIRTUAL_ROOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EISA_NAMES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EISA_NAMES=y</xsl:when>
			<xsl:otherwise># EISA_NAMES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCx200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCx200=y</xsl:when>
			<xsl:when test=". = 'module'">SCx200=m</xsl:when>
			<xsl:otherwise># SCx200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCx200HR_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCx200HR_TIMER=y</xsl:when>
			<xsl:when test=". = 'module'">SCx200HR_TIMER=m</xsl:when>
			<xsl:otherwise># SCx200HR_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLPC=y</xsl:when>
			<xsl:otherwise># OLPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLPC_XO1_PM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLPC_XO1_PM=y</xsl:when>
			<xsl:otherwise># OLPC_XO1_PM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLPC_XO1_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLPC_XO1_RTC=y</xsl:when>
			<xsl:otherwise># OLPC_XO1_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLPC_XO1_SCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLPC_XO1_SCI=y</xsl:when>
			<xsl:otherwise># OLPC_XO1_SCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLPC_XO15_SCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLPC_XO15_SCI=y</xsl:when>
			<xsl:otherwise># OLPC_XO15_SCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALIX=y</xsl:when>
			<xsl:otherwise># ALIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET5501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET5501=y</xsl:when>
			<xsl:otherwise># NET5501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GEOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GEOS=y</xsl:when>
			<xsl:otherwise># GEOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TS5500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TS5500=y</xsl:when>
			<xsl:otherwise># TS5500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_NB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_NB=y</xsl:when>
			<xsl:otherwise># AMD_NB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCCARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCCARD=y</xsl:when>
			<xsl:when test=". = 'module'">PCCARD=m</xsl:when>
			<xsl:otherwise># PCCARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA=m</xsl:when>
			<xsl:otherwise># PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_LOAD_CIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_LOAD_CIS=y</xsl:when>
			<xsl:otherwise># PCMCIA_LOAD_CIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARDBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARDBUS=y</xsl:when>
			<xsl:otherwise># CARDBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA=y</xsl:when>
			<xsl:when test=". = 'module'">YENTA=m</xsl:when>
			<xsl:otherwise># YENTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA_O2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA_O2=y</xsl:when>
			<xsl:otherwise># YENTA_O2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA_RICOH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA_RICOH=y</xsl:when>
			<xsl:otherwise># YENTA_RICOH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA_TI=y</xsl:when>
			<xsl:otherwise># YENTA_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA_ENE_TUNE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA_ENE_TUNE=y</xsl:when>
			<xsl:otherwise># YENTA_ENE_TUNE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YENTA_TOSHIBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YENTA_TOSHIBA=y</xsl:when>
			<xsl:otherwise># YENTA_TOSHIBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PD6729">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PD6729=y</xsl:when>
			<xsl:when test=". = 'module'">PD6729=m</xsl:when>
			<xsl:otherwise># PD6729 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I82092">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I82092=y</xsl:when>
			<xsl:when test=". = 'module'">I82092=m</xsl:when>
			<xsl:otherwise># I82092 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I82365">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I82365=y</xsl:when>
			<xsl:when test=". = 'module'">I82365=m</xsl:when>
			<xsl:otherwise># I82365 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCIC=y</xsl:when>
			<xsl:when test=". = 'module'">TCIC=m</xsl:when>
			<xsl:otherwise># TCIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_ALCHEMY_DEVBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_ALCHEMY_DEVBOARD=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_ALCHEMY_DEVBOARD=m</xsl:when>
			<xsl:otherwise># PCMCIA_ALCHEMY_DEVBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_XXS1500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_XXS1500=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_XXS1500=m</xsl:when>
			<xsl:otherwise># PCMCIA_XXS1500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_BCM63XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_BCM63XX=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_BCM63XX=m</xsl:when>
			<xsl:otherwise># PCMCIA_BCM63XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SOC_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SOC_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SOC_COMMON=m</xsl:when>
			<xsl:otherwise># PCMCIA_SOC_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SA11XX_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SA11XX_BASE=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SA11XX_BASE=m</xsl:when>
			<xsl:otherwise># PCMCIA_SA11XX_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SA1100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SA1100=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SA1100=m</xsl:when>
			<xsl:otherwise># PCMCIA_SA1100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SA1111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SA1111=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SA1111=m</xsl:when>
			<xsl:otherwise># PCMCIA_SA1111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_PXA2XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_PXA2XX=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_PXA2XX=m</xsl:when>
			<xsl:otherwise># PCMCIA_PXA2XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_DEBUG=y</xsl:when>
			<xsl:otherwise># PCMCIA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_PROBE=y</xsl:when>
			<xsl:otherwise># PCMCIA_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M32R_PCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M32R_PCC=y</xsl:when>
			<xsl:otherwise># M32R_PCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M32R_CFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M32R_CFC=y</xsl:when>
			<xsl:otherwise># M32R_CFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M32R_CFC_NUM">
		M32R_CFC_NUM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PCMCIA_VRC4171">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_VRC4171=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_VRC4171=m</xsl:when>
			<xsl:otherwise># PCMCIA_VRC4171 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_VRC4173">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_VRC4173=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_VRC4173=m</xsl:when>
			<xsl:otherwise># PCMCIA_VRC4173 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_CF=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_CF=m</xsl:when>
			<xsl:otherwise># OMAP_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_CFPCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_CFPCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_CFPCMCIA=m</xsl:when>
			<xsl:otherwise># BFIN_CFPCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT91_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT91_CF=y</xsl:when>
			<xsl:when test=". = 'module'">AT91_CF=m</xsl:when>
			<xsl:otherwise># AT91_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ELECTRA_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ELECTRA_CF=y</xsl:when>
			<xsl:when test=". = 'module'">ELECTRA_CF=m</xsl:when>
			<xsl:otherwise># ELECTRA_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCCARD_NONSTATIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCCARD_NONSTATIC=y</xsl:when>
			<xsl:otherwise># PCCARD_NONSTATIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCCARD_IODYN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCCARD_IODYN=y</xsl:when>
			<xsl:otherwise># PCCARD_IODYN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO=m</xsl:when>
			<xsl:otherwise># RAPIDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_TSI721">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_TSI721=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_TSI721=m</xsl:when>
			<xsl:otherwise># RAPIDIO_TSI721 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_DISC_TIMEOUT">
		RAPIDIO_DISC_TIMEOUT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RAPIDIO_ENABLE_RX_TX_PORTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_ENABLE_RX_TX_PORTS=y</xsl:when>
			<xsl:otherwise># RAPIDIO_ENABLE_RX_TX_PORTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_DMA_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_DMA_ENGINE=y</xsl:when>
			<xsl:otherwise># RAPIDIO_DMA_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_DEBUG=y</xsl:when>
			<xsl:otherwise># RAPIDIO_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_ENUM_BASIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_ENUM_BASIC=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_ENUM_BASIC=m</xsl:when>
			<xsl:otherwise># RAPIDIO_ENUM_BASIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_CHMAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_CHMAN=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_CHMAN=m</xsl:when>
			<xsl:otherwise># RAPIDIO_CHMAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_MPORT_CDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_MPORT_CDEV=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_MPORT_CDEV=m</xsl:when>
			<xsl:otherwise># RAPIDIO_MPORT_CDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_TSI57X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_TSI57X=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_TSI57X=m</xsl:when>
			<xsl:otherwise># RAPIDIO_TSI57X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_CPS_XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_CPS_XX=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_CPS_XX=m</xsl:when>
			<xsl:otherwise># RAPIDIO_CPS_XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_TSI568">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_TSI568=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_TSI568=m</xsl:when>
			<xsl:otherwise># RAPIDIO_TSI568 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_CPS_GEN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_CPS_GEN2=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_CPS_GEN2=m</xsl:when>
			<xsl:otherwise># RAPIDIO_CPS_GEN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAPIDIO_RXS_GEN3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAPIDIO_RXS_GEN3=y</xsl:when>
			<xsl:when test=". = 'module'">RAPIDIO_RXS_GEN3=m</xsl:when>
			<xsl:otherwise># RAPIDIO_RXS_GEN3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_SYSFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_SYSFB=y</xsl:when>
			<xsl:otherwise># X86_SYSFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_ELF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_ELF=y</xsl:when>
			<xsl:otherwise># BINFMT_ELF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_BINFMT_ELF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_BINFMT_ELF=y</xsl:when>
			<xsl:otherwise># COMPAT_BINFMT_ELF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_BINFMT_ELF_STATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_BINFMT_ELF_STATE=y</xsl:when>
			<xsl:otherwise># ARCH_BINFMT_ELF_STATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_ELF_FDPIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_ELF_FDPIC=y</xsl:when>
			<xsl:otherwise># BINFMT_ELF_FDPIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ELFCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ELFCORE=y</xsl:when>
			<xsl:otherwise># ELFCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CORE_DUMP_DEFAULT_ELF_HEADERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CORE_DUMP_DEFAULT_ELF_HEADERS=y</xsl:when>
			<xsl:otherwise># CORE_DUMP_DEFAULT_ELF_HEADERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_SCRIPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_SCRIPT=y</xsl:when>
			<xsl:when test=". = 'module'">BINFMT_SCRIPT=m</xsl:when>
			<xsl:otherwise># BINFMT_SCRIPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_FLAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_FLAT=y</xsl:when>
			<xsl:otherwise># BINFMT_FLAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_ZFLAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_ZFLAT=y</xsl:when>
			<xsl:otherwise># BINFMT_ZFLAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_SHARED_FLAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_SHARED_FLAT=y</xsl:when>
			<xsl:otherwise># BINFMT_SHARED_FLAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_AOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_AOUT=y</xsl:when>
			<xsl:otherwise># HAVE_AOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_AOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_AOUT=y</xsl:when>
			<xsl:when test=". = 'module'">BINFMT_AOUT=m</xsl:when>
			<xsl:otherwise># BINFMT_AOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OSF4_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OSF4_COMPAT=y</xsl:when>
			<xsl:otherwise># OSF4_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_EM86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_EM86=y</xsl:when>
			<xsl:when test=". = 'module'">BINFMT_EM86=m</xsl:when>
			<xsl:otherwise># BINFMT_EM86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINFMT_MISC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINFMT_MISC=y</xsl:when>
			<xsl:when test=". = 'module'">BINFMT_MISC=m</xsl:when>
			<xsl:otherwise># BINFMT_MISC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COREDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COREDUMP=y</xsl:when>
			<xsl:otherwise># COREDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IA32_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IA32_EMULATION=y</xsl:when>
			<xsl:otherwise># IA32_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IA32_AOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IA32_AOUT=y</xsl:when>
			<xsl:when test=". = 'module'">IA32_AOUT=m</xsl:when>
			<xsl:otherwise># IA32_AOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_X32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_X32=y</xsl:when>
			<xsl:otherwise># X86_X32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT=y</xsl:when>
			<xsl:otherwise># COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_FOR_U64_ALIGNMENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_FOR_U64_ALIGNMENT=y</xsl:when>
			<xsl:otherwise># COMPAT_FOR_U64_ALIGNMENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSVIPC_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSVIPC_COMPAT=y</xsl:when>
			<xsl:otherwise># SYSVIPC_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYS_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYS_COMPAT=y</xsl:when>
			<xsl:otherwise># KEYS_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ATOMIC_IOMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ATOMIC_IOMAP=y</xsl:when>
			<xsl:otherwise># HAVE_ATOMIC_IOMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_DEV_DMA_OPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_DEV_DMA_OPS=y</xsl:when>
			<xsl:otherwise># X86_DEV_DMA_OPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_DMA_REMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_DMA_REMAP=y</xsl:when>
			<xsl:otherwise># X86_DMA_REMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMC_ATOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMC_ATOM=y</xsl:when>
			<xsl:otherwise># PMC_ATOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMD=y</xsl:when>
			<xsl:when test=". = 'module'">VMD=m</xsl:when>
			<xsl:otherwise># VMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET=y</xsl:when>
			<xsl:otherwise># NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WANT_COMPAT_NETLINK_MESSAGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WANT_COMPAT_NETLINK_MESSAGES=y</xsl:when>
			<xsl:otherwise># WANT_COMPAT_NETLINK_MESSAGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAT_NETLINK_MESSAGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAT_NETLINK_MESSAGES=y</xsl:when>
			<xsl:otherwise># COMPAT_NETLINK_MESSAGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_INGRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_INGRESS=y</xsl:when>
			<xsl:otherwise># NET_INGRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_EGRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_EGRESS=y</xsl:when>
			<xsl:otherwise># NET_EGRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PACKET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PACKET=y</xsl:when>
			<xsl:when test=". = 'module'">PACKET=m</xsl:when>
			<xsl:otherwise># PACKET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PACKET_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PACKET_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">PACKET_DIAG=m</xsl:when>
			<xsl:otherwise># PACKET_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNIX=y</xsl:when>
			<xsl:when test=". = 'module'">UNIX=m</xsl:when>
			<xsl:otherwise># UNIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNIX_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNIX_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">UNIX_DIAG=m</xsl:when>
			<xsl:otherwise># UNIX_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM=y</xsl:when>
			<xsl:otherwise># XFRM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_ALGO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_ALGO=y</xsl:when>
			<xsl:when test=". = 'module'">XFRM_ALGO=m</xsl:when>
			<xsl:otherwise># XFRM_ALGO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_USER=y</xsl:when>
			<xsl:when test=". = 'module'">XFRM_USER=m</xsl:when>
			<xsl:otherwise># XFRM_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_SUB_POLICY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_SUB_POLICY=y</xsl:when>
			<xsl:otherwise># XFRM_SUB_POLICY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_MIGRATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_MIGRATE=y</xsl:when>
			<xsl:otherwise># XFRM_MIGRATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_STATISTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_STATISTICS=y</xsl:when>
			<xsl:otherwise># XFRM_STATISTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFRM_IPCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFRM_IPCOMP=y</xsl:when>
			<xsl:when test=". = 'module'">XFRM_IPCOMP=m</xsl:when>
			<xsl:otherwise># XFRM_IPCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_KEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_KEY=y</xsl:when>
			<xsl:when test=". = 'module'">NET_KEY=m</xsl:when>
			<xsl:otherwise># NET_KEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_KEY_MIGRATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_KEY_MIGRATE=y</xsl:when>
			<xsl:otherwise># NET_KEY_MIGRATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IUCV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IUCV=y</xsl:when>
			<xsl:when test=". = 'module'">IUCV=m</xsl:when>
			<xsl:otherwise># IUCV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFIUCV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFIUCV=y</xsl:when>
			<xsl:when test=". = 'module'">AFIUCV=m</xsl:when>
			<xsl:otherwise># AFIUCV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET=y</xsl:when>
			<xsl:otherwise># INET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_MULTICAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_MULTICAST=y</xsl:when>
			<xsl:otherwise># IP_MULTICAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_ADVANCED_ROUTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_ADVANCED_ROUTER=y</xsl:when>
			<xsl:otherwise># IP_ADVANCED_ROUTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_FIB_TRIE_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_FIB_TRIE_STATS=y</xsl:when>
			<xsl:otherwise># IP_FIB_TRIE_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_MULTIPLE_TABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_MULTIPLE_TABLES=y</xsl:when>
			<xsl:otherwise># IP_MULTIPLE_TABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_ROUTE_MULTIPATH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_ROUTE_MULTIPATH=y</xsl:when>
			<xsl:otherwise># IP_ROUTE_MULTIPATH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_ROUTE_VERBOSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_ROUTE_VERBOSE=y</xsl:when>
			<xsl:otherwise># IP_ROUTE_VERBOSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_ROUTE_CLASSID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_ROUTE_CLASSID=y</xsl:when>
			<xsl:otherwise># IP_ROUTE_CLASSID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PNP=y</xsl:when>
			<xsl:otherwise># IP_PNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PNP_DHCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PNP_DHCP=y</xsl:when>
			<xsl:otherwise># IP_PNP_DHCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PNP_BOOTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PNP_BOOTP=y</xsl:when>
			<xsl:otherwise># IP_PNP_BOOTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PNP_RARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PNP_RARP=y</xsl:when>
			<xsl:otherwise># IP_PNP_RARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IPIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IPIP=y</xsl:when>
			<xsl:when test=". = 'module'">NET_IPIP=m</xsl:when>
			<xsl:otherwise># NET_IPIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IPGRE_DEMUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IPGRE_DEMUX=y</xsl:when>
			<xsl:when test=". = 'module'">NET_IPGRE_DEMUX=m</xsl:when>
			<xsl:otherwise># NET_IPGRE_DEMUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IP_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IP_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">NET_IP_TUNNEL=m</xsl:when>
			<xsl:otherwise># NET_IP_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IPGRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IPGRE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_IPGRE=m</xsl:when>
			<xsl:otherwise># NET_IPGRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IPGRE_BROADCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IPGRE_BROADCAST=y</xsl:when>
			<xsl:otherwise># NET_IPGRE_BROADCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_MROUTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_MROUTE=y</xsl:when>
			<xsl:otherwise># IP_MROUTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_MROUTE_MULTIPLE_TABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_MROUTE_MULTIPLE_TABLES=y</xsl:when>
			<xsl:otherwise># IP_MROUTE_MULTIPLE_TABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PIMSM_V1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PIMSM_V1=y</xsl:when>
			<xsl:otherwise># IP_PIMSM_V1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_PIMSM_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_PIMSM_V2=y</xsl:when>
			<xsl:otherwise># IP_PIMSM_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYN_COOKIES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYN_COOKIES=y</xsl:when>
			<xsl:otherwise># SYN_COOKIES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_IPVTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_IPVTI=y</xsl:when>
			<xsl:when test=". = 'module'">NET_IPVTI=m</xsl:when>
			<xsl:otherwise># NET_IPVTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_UDP_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_UDP_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">NET_UDP_TUNNEL=m</xsl:when>
			<xsl:otherwise># NET_UDP_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_FOU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_FOU=y</xsl:when>
			<xsl:when test=". = 'module'">NET_FOU=m</xsl:when>
			<xsl:otherwise># NET_FOU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_FOU_IP_TUNNELS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_FOU_IP_TUNNELS=y</xsl:when>
			<xsl:otherwise># NET_FOU_IP_TUNNELS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_AH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_AH=y</xsl:when>
			<xsl:when test=". = 'module'">INET_AH=m</xsl:when>
			<xsl:otherwise># INET_AH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_ESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_ESP=y</xsl:when>
			<xsl:when test=". = 'module'">INET_ESP=m</xsl:when>
			<xsl:otherwise># INET_ESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_IPCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_IPCOMP=y</xsl:when>
			<xsl:when test=". = 'module'">INET_IPCOMP=m</xsl:when>
			<xsl:otherwise># INET_IPCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_XFRM_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_XFRM_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET_XFRM_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET_XFRM_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_XFRM_MODE_TRANSPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_XFRM_MODE_TRANSPORT=y</xsl:when>
			<xsl:when test=". = 'module'">INET_XFRM_MODE_TRANSPORT=m</xsl:when>
			<xsl:otherwise># INET_XFRM_MODE_TRANSPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_XFRM_MODE_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_XFRM_MODE_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET_XFRM_MODE_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET_XFRM_MODE_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_XFRM_MODE_BEET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_XFRM_MODE_BEET=y</xsl:when>
			<xsl:when test=". = 'module'">INET_XFRM_MODE_BEET=m</xsl:when>
			<xsl:otherwise># INET_XFRM_MODE_BEET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">INET_DIAG=m</xsl:when>
			<xsl:otherwise># INET_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_TCP_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_TCP_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">INET_TCP_DIAG=m</xsl:when>
			<xsl:otherwise># INET_TCP_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_UDP_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_UDP_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">INET_UDP_DIAG=m</xsl:when>
			<xsl:otherwise># INET_UDP_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_DIAG_DESTROY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_DIAG_DESTROY=y</xsl:when>
			<xsl:otherwise># INET_DIAG_DESTROY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_ADVANCED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_ADVANCED=y</xsl:when>
			<xsl:otherwise># TCP_CONG_ADVANCED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_BIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_BIC=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_BIC=m</xsl:when>
			<xsl:otherwise># TCP_CONG_BIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_CUBIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_CUBIC=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_CUBIC=m</xsl:when>
			<xsl:otherwise># TCP_CONG_CUBIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_WESTWOOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_WESTWOOD=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_WESTWOOD=m</xsl:when>
			<xsl:otherwise># TCP_CONG_WESTWOOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_HTCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_HTCP=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_HTCP=m</xsl:when>
			<xsl:otherwise># TCP_CONG_HTCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_HSTCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_HSTCP=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_HSTCP=m</xsl:when>
			<xsl:otherwise># TCP_CONG_HSTCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_HYBLA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_HYBLA=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_HYBLA=m</xsl:when>
			<xsl:otherwise># TCP_CONG_HYBLA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_VEGAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_VEGAS=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_VEGAS=m</xsl:when>
			<xsl:otherwise># TCP_CONG_VEGAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_NV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_NV=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_NV=m</xsl:when>
			<xsl:otherwise># TCP_CONG_NV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_SCALABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_SCALABLE=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_SCALABLE=m</xsl:when>
			<xsl:otherwise># TCP_CONG_SCALABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_LP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_LP=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_LP=m</xsl:when>
			<xsl:otherwise># TCP_CONG_LP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_VENO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_VENO=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_VENO=m</xsl:when>
			<xsl:otherwise># TCP_CONG_VENO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_YEAH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_YEAH=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_YEAH=m</xsl:when>
			<xsl:otherwise># TCP_CONG_YEAH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_ILLINOIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_ILLINOIS=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_ILLINOIS=m</xsl:when>
			<xsl:otherwise># TCP_CONG_ILLINOIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_DCTCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_DCTCP=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_DCTCP=m</xsl:when>
			<xsl:otherwise># TCP_CONG_DCTCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_CDG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_CDG=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_CDG=m</xsl:when>
			<xsl:otherwise># TCP_CONG_CDG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_BIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_BIC=y</xsl:when>
			<xsl:otherwise># DEFAULT_BIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_CUBIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_CUBIC=y</xsl:when>
			<xsl:otherwise># DEFAULT_CUBIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_HTCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_HTCP=y</xsl:when>
			<xsl:otherwise># DEFAULT_HTCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_HYBLA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_HYBLA=y</xsl:when>
			<xsl:otherwise># DEFAULT_HYBLA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_VEGAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_VEGAS=y</xsl:when>
			<xsl:otherwise># DEFAULT_VEGAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_VENO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_VENO=y</xsl:when>
			<xsl:otherwise># DEFAULT_VENO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_WESTWOOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_WESTWOOD=y</xsl:when>
			<xsl:otherwise># DEFAULT_WESTWOOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_DCTCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_DCTCP=y</xsl:when>
			<xsl:otherwise># DEFAULT_DCTCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_CDG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_CDG=y</xsl:when>
			<xsl:otherwise># DEFAULT_CDG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_RENO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_RENO=y</xsl:when>
			<xsl:otherwise># DEFAULT_RENO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCP_CONG_CUBIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_CONG_CUBIC=y</xsl:when>
			<xsl:when test=". = 'module'">TCP_CONG_CUBIC=m</xsl:when>
			<xsl:otherwise># TCP_CONG_CUBIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_TCP_CONG">
		DEFAULT_TCP_CONG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="TCP_MD5SIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCP_MD5SIG=y</xsl:when>
			<xsl:otherwise># TCP_MD5SIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6=m</xsl:when>
			<xsl:otherwise># IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_ROUTER_PREF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_ROUTER_PREF=y</xsl:when>
			<xsl:otherwise># IPV6_ROUTER_PREF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_ROUTE_INFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_ROUTE_INFO=y</xsl:when>
			<xsl:otherwise># IPV6_ROUTE_INFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_OPTIMISTIC_DAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_OPTIMISTIC_DAD=y</xsl:when>
			<xsl:otherwise># IPV6_OPTIMISTIC_DAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_AH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_AH=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_AH=m</xsl:when>
			<xsl:otherwise># INET6_AH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_ESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_ESP=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_ESP=m</xsl:when>
			<xsl:otherwise># INET6_ESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_IPCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_IPCOMP=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_IPCOMP=m</xsl:when>
			<xsl:otherwise># INET6_IPCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_MIP6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_MIP6=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_MIP6=m</xsl:when>
			<xsl:otherwise># IPV6_MIP6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_ILA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_ILA=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_ILA=m</xsl:when>
			<xsl:otherwise># IPV6_ILA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_XFRM_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_XFRM_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_XFRM_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET6_XFRM_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET6_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_XFRM_MODE_TRANSPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_XFRM_MODE_TRANSPORT=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_XFRM_MODE_TRANSPORT=m</xsl:when>
			<xsl:otherwise># INET6_XFRM_MODE_TRANSPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_XFRM_MODE_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_XFRM_MODE_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_XFRM_MODE_TUNNEL=m</xsl:when>
			<xsl:otherwise># INET6_XFRM_MODE_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_XFRM_MODE_BEET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_XFRM_MODE_BEET=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_XFRM_MODE_BEET=m</xsl:when>
			<xsl:otherwise># INET6_XFRM_MODE_BEET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET6_XFRM_MODE_ROUTEOPTIMIZATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET6_XFRM_MODE_ROUTEOPTIMIZATION=y</xsl:when>
			<xsl:when test=". = 'module'">INET6_XFRM_MODE_ROUTEOPTIMIZATION=m</xsl:when>
			<xsl:otherwise># INET6_XFRM_MODE_ROUTEOPTIMIZATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_VTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_VTI=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_VTI=m</xsl:when>
			<xsl:otherwise># IPV6_VTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_SIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_SIT=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_SIT=m</xsl:when>
			<xsl:otherwise># IPV6_SIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_SIT_6RD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_SIT_6RD=y</xsl:when>
			<xsl:otherwise># IPV6_SIT_6RD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_NDISC_NODETYPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_NDISC_NODETYPE=y</xsl:when>
			<xsl:otherwise># IPV6_NDISC_NODETYPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_TUNNEL=m</xsl:when>
			<xsl:otherwise># IPV6_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_GRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_GRE=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_GRE=m</xsl:when>
			<xsl:otherwise># IPV6_GRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_FOU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_FOU=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_FOU=m</xsl:when>
			<xsl:otherwise># IPV6_FOU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_FOU_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_FOU_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">IPV6_FOU_TUNNEL=m</xsl:when>
			<xsl:otherwise># IPV6_FOU_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_MULTIPLE_TABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_MULTIPLE_TABLES=y</xsl:when>
			<xsl:otherwise># IPV6_MULTIPLE_TABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_SUBTREES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_SUBTREES=y</xsl:when>
			<xsl:otherwise># IPV6_SUBTREES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_MROUTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_MROUTE=y</xsl:when>
			<xsl:otherwise># IPV6_MROUTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_MROUTE_MULTIPLE_TABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_MROUTE_MULTIPLE_TABLES=y</xsl:when>
			<xsl:otherwise># IPV6_MROUTE_MULTIPLE_TABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPV6_PIMSM_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPV6_PIMSM_V2=y</xsl:when>
			<xsl:otherwise># IPV6_PIMSM_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETLABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETLABEL=y</xsl:when>
			<xsl:otherwise># NETLABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETWORK_SECMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETWORK_SECMARK=y</xsl:when>
			<xsl:otherwise># NETWORK_SECMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_PTP_CLASSIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_PTP_CLASSIFY=y</xsl:when>
			<xsl:otherwise># NET_PTP_CLASSIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETWORK_PHY_TIMESTAMPING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETWORK_PHY_TIMESTAMPING=y</xsl:when>
			<xsl:otherwise># NETWORK_PHY_TIMESTAMPING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER=y</xsl:when>
			<xsl:otherwise># NETFILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_DEBUG=y</xsl:when>
			<xsl:otherwise># NETFILTER_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_ADVANCED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_ADVANCED=y</xsl:when>
			<xsl:otherwise># NETFILTER_ADVANCED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_NETFILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_NETFILTER=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_NETFILTER=m</xsl:when>
			<xsl:otherwise># BRIDGE_NETFILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_INGRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_INGRESS=y</xsl:when>
			<xsl:otherwise># NETFILTER_INGRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_NETLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_NETLINK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_NETLINK=m</xsl:when>
			<xsl:otherwise># NETFILTER_NETLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_NETLINK_ACCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_NETLINK_ACCT=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_NETLINK_ACCT=m</xsl:when>
			<xsl:otherwise># NETFILTER_NETLINK_ACCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_NETLINK_QUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_NETLINK_QUEUE=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_NETLINK_QUEUE=m</xsl:when>
			<xsl:otherwise># NETFILTER_NETLINK_QUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_NETLINK_LOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_NETLINK_LOG=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_NETLINK_LOG=m</xsl:when>
			<xsl:otherwise># NETFILTER_NETLINK_LOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_LOG_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_LOG_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">NF_LOG_COMMON=m</xsl:when>
			<xsl:otherwise># NF_LOG_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_MARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_MARK=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_MARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_SECMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_SECMARK=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_SECMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_ZONES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_ZONES=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_ZONES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_PROCFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_PROCFS=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_PROCFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_EVENTS=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_TIMEOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_TIMEOUT=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_TIMEOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_TIMESTAMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_TIMESTAMP=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_TIMESTAMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_LABELS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_LABELS=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_LABELS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_PROTO_DCCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_PROTO_DCCP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_PROTO_DCCP=m</xsl:when>
			<xsl:otherwise># NF_CT_PROTO_DCCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_PROTO_GRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_PROTO_GRE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_PROTO_GRE=m</xsl:when>
			<xsl:otherwise># NF_CT_PROTO_GRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_PROTO_SCTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_PROTO_SCTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_PROTO_SCTP=m</xsl:when>
			<xsl:otherwise># NF_CT_PROTO_SCTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_PROTO_UDPLITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_PROTO_UDPLITE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_PROTO_UDPLITE=m</xsl:when>
			<xsl:otherwise># NF_CT_PROTO_UDPLITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_AMANDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_AMANDA=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_AMANDA=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_AMANDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_FTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_FTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_FTP=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_FTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_H323">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_H323=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_H323=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_H323 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_IRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_IRC=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_IRC=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_IRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_BROADCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_BROADCAST=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_BROADCAST=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_BROADCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_NETBIOS_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_NETBIOS_NS=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_NETBIOS_NS=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_NETBIOS_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_SNMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_SNMP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_SNMP=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_SNMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_PPTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_PPTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_PPTP=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_PPTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_SANE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_SANE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_SANE=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_SANE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_SIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_SIP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_SIP=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_SIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_TFTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_TFTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_TFTP=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_TFTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_NETLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_NETLINK=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_NETLINK=m</xsl:when>
			<xsl:otherwise># NF_CT_NETLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_NETLINK_TIMEOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_NETLINK_TIMEOUT=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_NETLINK_TIMEOUT=m</xsl:when>
			<xsl:otherwise># NF_CT_NETLINK_TIMEOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CT_NETLINK_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CT_NETLINK_HELPER=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CT_NETLINK_HELPER=m</xsl:when>
			<xsl:otherwise># NF_CT_NETLINK_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_NETLINK_GLUE_CT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_NETLINK_GLUE_CT=y</xsl:when>
			<xsl:otherwise># NETFILTER_NETLINK_GLUE_CT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT=m</xsl:when>
			<xsl:otherwise># NF_NAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_NEEDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_NEEDED=y</xsl:when>
			<xsl:otherwise># NF_NAT_NEEDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_PROTO_DCCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_PROTO_DCCP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_PROTO_DCCP=m</xsl:when>
			<xsl:otherwise># NF_NAT_PROTO_DCCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_PROTO_UDPLITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_PROTO_UDPLITE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_PROTO_UDPLITE=m</xsl:when>
			<xsl:otherwise># NF_NAT_PROTO_UDPLITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_PROTO_SCTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_PROTO_SCTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_PROTO_SCTP=m</xsl:when>
			<xsl:otherwise># NF_NAT_PROTO_SCTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_AMANDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_AMANDA=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_AMANDA=m</xsl:when>
			<xsl:otherwise># NF_NAT_AMANDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_FTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_FTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_FTP=m</xsl:when>
			<xsl:otherwise># NF_NAT_FTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_IRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_IRC=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_IRC=m</xsl:when>
			<xsl:otherwise># NF_NAT_IRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_SIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_SIP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_SIP=m</xsl:when>
			<xsl:otherwise># NF_NAT_SIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_TFTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_TFTP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_TFTP=m</xsl:when>
			<xsl:otherwise># NF_NAT_TFTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_REDIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_REDIRECT=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_REDIRECT=m</xsl:when>
			<xsl:otherwise># NF_NAT_REDIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_SYNPROXY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_SYNPROXY=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_SYNPROXY=m</xsl:when>
			<xsl:otherwise># NETFILTER_SYNPROXY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES=m</xsl:when>
			<xsl:otherwise># NF_TABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_INET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_INET=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_INET=m</xsl:when>
			<xsl:otherwise># NF_TABLES_INET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_NETDEV=m</xsl:when>
			<xsl:otherwise># NF_TABLES_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_EXTHDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_EXTHDR=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_EXTHDR=m</xsl:when>
			<xsl:otherwise># NFT_EXTHDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_META">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_META=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_META=m</xsl:when>
			<xsl:otherwise># NFT_META is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_CT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_CT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_CT=m</xsl:when>
			<xsl:otherwise># NFT_CT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_RBTREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_RBTREE=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_RBTREE=m</xsl:when>
			<xsl:otherwise># NFT_RBTREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_HASH=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_HASH=m</xsl:when>
			<xsl:otherwise># NFT_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_COUNTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_COUNTER=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_COUNTER=m</xsl:when>
			<xsl:otherwise># NFT_COUNTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_LOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_LOG=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_LOG=m</xsl:when>
			<xsl:otherwise># NFT_LOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_LIMIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_LIMIT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_LIMIT=m</xsl:when>
			<xsl:otherwise># NFT_LIMIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_MASQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_MASQ=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_MASQ=m</xsl:when>
			<xsl:otherwise># NFT_MASQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REDIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REDIR=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REDIR=m</xsl:when>
			<xsl:otherwise># NFT_REDIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_NAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_NAT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_NAT=m</xsl:when>
			<xsl:otherwise># NFT_NAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_QUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_QUEUE=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_QUEUE=m</xsl:when>
			<xsl:otherwise># NFT_QUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REJECT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REJECT=m</xsl:when>
			<xsl:otherwise># NFT_REJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REJECT_INET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REJECT_INET=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REJECT_INET=m</xsl:when>
			<xsl:otherwise># NFT_REJECT_INET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_COMPAT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_COMPAT=m</xsl:when>
			<xsl:otherwise># NFT_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_DUP_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_DUP_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">NF_DUP_NETDEV=m</xsl:when>
			<xsl:otherwise># NF_DUP_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_DUP_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_DUP_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_DUP_NETDEV=m</xsl:when>
			<xsl:otherwise># NFT_DUP_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_FWD_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_FWD_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_FWD_NETDEV=m</xsl:when>
			<xsl:otherwise># NFT_FWD_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XTABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XTABLES=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XTABLES=m</xsl:when>
			<xsl:otherwise># NETFILTER_XTABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_MARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_MARK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_MARK=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_MARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_CONNMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_CONNMARK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_CONNMARK=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_CONNMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_SET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_SET=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_SET=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_SET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_AUDIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_AUDIT=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_AUDIT=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_AUDIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_CHECKSUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_CHECKSUM=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_CHECKSUM=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_CHECKSUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_CLASSIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_CLASSIFY=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_CLASSIFY=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_CLASSIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_CONNMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_CONNMARK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_CONNMARK=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_CONNMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_CONNSECMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_CONNSECMARK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_CONNSECMARK=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_CONNSECMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_CT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_CT=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_CT=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_CT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_DSCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_DSCP=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_DSCP=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_DSCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_HL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_HL=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_HL=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_HL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_HMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_HMARK=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_HMARK=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_HMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETFILTER_XT_TARGET_IDLETIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETFILTER_XT_TARGET_IDLETIMER=y</xsl:when>
			<xsl:when test=". = 'module'">NETFILTER_XT_TARGET_IDLETIMER=m</xsl:when>
			<xsl:otherwise># NETFILTER_XT_TARGET_IDLETIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_DEFRAG_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_DEFRAG_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_DEFRAG_IPV4=m</xsl:when>
			<xsl:otherwise># NF_DEFRAG_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_IPV4=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_PROC_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_PROC_COMPAT=y</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_PROC_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_IPV4=m</xsl:when>
			<xsl:otherwise># NF_TABLES_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_CHAIN_ROUTE_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_CHAIN_ROUTE_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_CHAIN_ROUTE_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_CHAIN_ROUTE_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REJECT_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REJECT_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REJECT_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_REJECT_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_DUP_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_DUP_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_DUP_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_DUP_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_ARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_ARP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_ARP=m</xsl:when>
			<xsl:otherwise># NF_TABLES_ARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_DUP_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_DUP_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_DUP_IPV4=m</xsl:when>
			<xsl:otherwise># NF_DUP_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_LOG_ARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_LOG_ARP=y</xsl:when>
			<xsl:when test=". = 'module'">NF_LOG_ARP=m</xsl:when>
			<xsl:otherwise># NF_LOG_ARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_LOG_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_LOG_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_LOG_IPV4=m</xsl:when>
			<xsl:otherwise># NF_LOG_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_REJECT_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_REJECT_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_REJECT_IPV4=m</xsl:when>
			<xsl:otherwise># NF_REJECT_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_IPV4=m</xsl:when>
			<xsl:otherwise># NF_NAT_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_CHAIN_NAT_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_CHAIN_NAT_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_CHAIN_NAT_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_CHAIN_NAT_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_MASQUERADE_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_MASQUERADE_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_MASQUERADE_IPV4=m</xsl:when>
			<xsl:otherwise># NF_NAT_MASQUERADE_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_MASQ_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_MASQ_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_MASQ_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_MASQ_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REDIR_IPV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REDIR_IPV4=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REDIR_IPV4=m</xsl:when>
			<xsl:otherwise># NFT_REDIR_IPV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_SNMP_BASIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_SNMP_BASIC=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_SNMP_BASIC=m</xsl:when>
			<xsl:otherwise># NF_NAT_SNMP_BASIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_DEFRAG_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_DEFRAG_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_DEFRAG_IPV6=m</xsl:when>
			<xsl:otherwise># NF_DEFRAG_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_CONNTRACK_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_CONNTRACK_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_CONNTRACK_IPV6=m</xsl:when>
			<xsl:otherwise># NF_CONNTRACK_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_IPV6=m</xsl:when>
			<xsl:otherwise># NF_TABLES_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_CHAIN_ROUTE_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_CHAIN_ROUTE_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_CHAIN_ROUTE_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_CHAIN_ROUTE_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REJECT_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REJECT_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REJECT_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_REJECT_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_DUP_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_DUP_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_DUP_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_DUP_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_DUP_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_DUP_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_DUP_IPV6=m</xsl:when>
			<xsl:otherwise># NF_DUP_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_REJECT_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_REJECT_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_REJECT_IPV6=m</xsl:when>
			<xsl:otherwise># NF_REJECT_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_LOG_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_LOG_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_LOG_IPV6=m</xsl:when>
			<xsl:otherwise># NF_LOG_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_IPV6=m</xsl:when>
			<xsl:otherwise># NF_NAT_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_CHAIN_NAT_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_CHAIN_NAT_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_CHAIN_NAT_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_CHAIN_NAT_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_NAT_MASQUERADE_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_NAT_MASQUERADE_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NF_NAT_MASQUERADE_IPV6=m</xsl:when>
			<xsl:otherwise># NF_NAT_MASQUERADE_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_MASQ_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_MASQ_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_MASQ_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_MASQ_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_REDIR_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_REDIR_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_REDIR_IPV6=m</xsl:when>
			<xsl:otherwise># NFT_REDIR_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_IPTABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_IPTABLES=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_IPTABLES=m</xsl:when>
			<xsl:otherwise># IP6_NF_IPTABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_AH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_AH=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_AH=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_AH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_EUI64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_EUI64=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_EUI64=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_EUI64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_FRAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_FRAG=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_FRAG=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_FRAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_OPTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_OPTS=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_OPTS=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_OPTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_HL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_HL=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_HL=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_HL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_IPV6HEADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_IPV6HEADER=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_IPV6HEADER=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_IPV6HEADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_MH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_MH=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_MH=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_MH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_RPFILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_RPFILTER=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_RPFILTER=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_RPFILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MATCH_RT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MATCH_RT=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MATCH_RT=m</xsl:when>
			<xsl:otherwise># IP6_NF_MATCH_RT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_TARGET_HL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_TARGET_HL=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_TARGET_HL=m</xsl:when>
			<xsl:otherwise># IP6_NF_TARGET_HL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_FILTER=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_FILTER=m</xsl:when>
			<xsl:otherwise># IP6_NF_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_TARGET_REJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_TARGET_REJECT=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_TARGET_REJECT=m</xsl:when>
			<xsl:otherwise># IP6_NF_TARGET_REJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_TARGET_SYNPROXY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_TARGET_SYNPROXY=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_TARGET_SYNPROXY=m</xsl:when>
			<xsl:otherwise># IP6_NF_TARGET_SYNPROXY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_MANGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_MANGLE=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_MANGLE=m</xsl:when>
			<xsl:otherwise># IP6_NF_MANGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_RAW=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_RAW=m</xsl:when>
			<xsl:otherwise># IP6_NF_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_SECURITY=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_SECURITY=m</xsl:when>
			<xsl:otherwise># IP6_NF_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_NAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_NAT=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_NAT=m</xsl:when>
			<xsl:otherwise># IP6_NF_NAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_TARGET_MASQUERADE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_TARGET_MASQUERADE=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_TARGET_MASQUERADE=m</xsl:when>
			<xsl:otherwise># IP6_NF_TARGET_MASQUERADE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP6_NF_TARGET_NPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP6_NF_TARGET_NPT=y</xsl:when>
			<xsl:when test=". = 'module'">IP6_NF_TARGET_NPT=m</xsl:when>
			<xsl:otherwise># IP6_NF_TARGET_NPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECNET_NF_GRABULATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECNET_NF_GRABULATOR=y</xsl:when>
			<xsl:when test=". = 'module'">DECNET_NF_GRABULATOR=m</xsl:when>
			<xsl:otherwise># DECNET_NF_GRABULATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_TABLES_BRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_TABLES_BRIDGE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_TABLES_BRIDGE=m</xsl:when>
			<xsl:otherwise># NF_TABLES_BRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_BRIDGE_META">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_BRIDGE_META=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_BRIDGE_META=m</xsl:when>
			<xsl:otherwise># NFT_BRIDGE_META is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFT_BRIDGE_REJECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFT_BRIDGE_REJECT=y</xsl:when>
			<xsl:when test=". = 'module'">NFT_BRIDGE_REJECT=m</xsl:when>
			<xsl:otherwise># NFT_BRIDGE_REJECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NF_LOG_BRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NF_LOG_BRIDGE=y</xsl:when>
			<xsl:when test=". = 'module'">NF_LOG_BRIDGE=m</xsl:when>
			<xsl:otherwise># NF_LOG_BRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_NF_EBTABLES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_NF_EBTABLES=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_NF_EBTABLES=m</xsl:when>
			<xsl:otherwise># BRIDGE_NF_EBTABLES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_BROUTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_BROUTE=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_BROUTE=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_BROUTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_T_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_T_FILTER=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_T_FILTER=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_T_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_T_NAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_T_NAT=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_T_NAT=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_T_NAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_802_3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_802_3=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_802_3=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_802_3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_AMONG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_AMONG=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_AMONG=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_AMONG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_ARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_ARP=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_ARP=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_ARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_IP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_IP=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_IP=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_IP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_IP6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_IP6=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_IP6=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_IP6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_LIMIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_LIMIT=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_LIMIT=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_LIMIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_MARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_MARK=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_MARK=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_MARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_PKTTYPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_PKTTYPE=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_PKTTYPE=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_PKTTYPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_STP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_STP=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_STP=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_STP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_VLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_VLAN=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_VLAN=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_VLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_ARPREPLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_ARPREPLY=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_ARPREPLY=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_ARPREPLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_DNAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_DNAT=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_DNAT=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_DNAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_MARK_T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_MARK_T=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_MARK_T=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_MARK_T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_REDIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_REDIRECT=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_REDIRECT=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_REDIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_SNAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_SNAT=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_SNAT=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_SNAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_LOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_LOG=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_LOG=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_LOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_EBT_NFLOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_EBT_NFLOG=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE_EBT_NFLOG=m</xsl:when>
			<xsl:otherwise># BRIDGE_EBT_NFLOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP=y</xsl:when>
			<xsl:when test=". = 'module'">IP_DCCP=m</xsl:when>
			<xsl:otherwise># IP_DCCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_DCCP_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_DCCP_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">INET_DCCP_DIAG=m</xsl:when>
			<xsl:otherwise># INET_DCCP_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_CCID2_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_CCID2_DEBUG=y</xsl:when>
			<xsl:otherwise># IP_DCCP_CCID2_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_CCID3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_CCID3=y</xsl:when>
			<xsl:otherwise># IP_DCCP_CCID3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_CCID3_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_CCID3_DEBUG=y</xsl:when>
			<xsl:otherwise># IP_DCCP_CCID3_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_TFRC_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_TFRC_LIB=y</xsl:when>
			<xsl:otherwise># IP_DCCP_TFRC_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_TFRC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_TFRC_DEBUG=y</xsl:when>
			<xsl:otherwise># IP_DCCP_TFRC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_DCCP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_DCCP_DEBUG=y</xsl:when>
			<xsl:otherwise># IP_DCCP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DCCPPROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DCCPPROBE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DCCPPROBE=m</xsl:when>
			<xsl:otherwise># NET_DCCPPROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IP_SCTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IP_SCTP=y</xsl:when>
			<xsl:when test=". = 'module'">IP_SCTP=m</xsl:when>
			<xsl:otherwise># IP_SCTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCTPPROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCTPPROBE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCTPPROBE=m</xsl:when>
			<xsl:otherwise># NET_SCTPPROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_DBG_OBJCNT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_DBG_OBJCNT=y</xsl:when>
			<xsl:otherwise># SCTP_DBG_OBJCNT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_DEFAULT_COOKIE_HMAC_MD5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_DEFAULT_COOKIE_HMAC_MD5=y</xsl:when>
			<xsl:otherwise># SCTP_DEFAULT_COOKIE_HMAC_MD5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_DEFAULT_COOKIE_HMAC_SHA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_DEFAULT_COOKIE_HMAC_SHA1=y</xsl:when>
			<xsl:otherwise># SCTP_DEFAULT_COOKIE_HMAC_SHA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_DEFAULT_COOKIE_HMAC_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_DEFAULT_COOKIE_HMAC_NONE=y</xsl:when>
			<xsl:otherwise># SCTP_DEFAULT_COOKIE_HMAC_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_COOKIE_HMAC_MD5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_COOKIE_HMAC_MD5=y</xsl:when>
			<xsl:otherwise># SCTP_COOKIE_HMAC_MD5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCTP_COOKIE_HMAC_SHA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCTP_COOKIE_HMAC_SHA1=y</xsl:when>
			<xsl:otherwise># SCTP_COOKIE_HMAC_SHA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INET_SCTP_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INET_SCTP_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">INET_SCTP_DIAG=m</xsl:when>
			<xsl:otherwise># INET_SCTP_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDS=y</xsl:when>
			<xsl:when test=". = 'module'">RDS=m</xsl:when>
			<xsl:otherwise># RDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDS_RDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDS_RDMA=y</xsl:when>
			<xsl:when test=". = 'module'">RDS_RDMA=m</xsl:when>
			<xsl:otherwise># RDS_RDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDS_TCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDS_TCP=y</xsl:when>
			<xsl:when test=". = 'module'">RDS_TCP=m</xsl:when>
			<xsl:otherwise># RDS_TCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDS_DEBUG=y</xsl:when>
			<xsl:otherwise># RDS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIPC=y</xsl:when>
			<xsl:when test=". = 'module'">TIPC=m</xsl:when>
			<xsl:otherwise># TIPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIPC_MEDIA_IB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIPC_MEDIA_IB=y</xsl:when>
			<xsl:otherwise># TIPC_MEDIA_IB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIPC_MEDIA_UDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIPC_MEDIA_UDP=y</xsl:when>
			<xsl:otherwise># TIPC_MEDIA_UDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM=y</xsl:when>
			<xsl:when test=". = 'module'">ATM=m</xsl:when>
			<xsl:otherwise># ATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_CLIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_CLIP=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_CLIP=m</xsl:when>
			<xsl:otherwise># ATM_CLIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_CLIP_NO_ICMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_CLIP_NO_ICMP=y</xsl:when>
			<xsl:otherwise># ATM_CLIP_NO_ICMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_LANE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_LANE=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_LANE=m</xsl:when>
			<xsl:otherwise># ATM_LANE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_MPOA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_MPOA=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_MPOA=m</xsl:when>
			<xsl:otherwise># ATM_MPOA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_BR2684">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_BR2684=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_BR2684=m</xsl:when>
			<xsl:otherwise># ATM_BR2684 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_BR2684_IPFILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_BR2684_IPFILTER=y</xsl:when>
			<xsl:otherwise># ATM_BR2684_IPFILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="L2TP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">L2TP=y</xsl:when>
			<xsl:when test=". = 'module'">L2TP=m</xsl:when>
			<xsl:otherwise># L2TP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="L2TP_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">L2TP_DEBUGFS=y</xsl:when>
			<xsl:when test=". = 'module'">L2TP_DEBUGFS=m</xsl:when>
			<xsl:otherwise># L2TP_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="L2TP_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">L2TP_V3=y</xsl:when>
			<xsl:otherwise># L2TP_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="L2TP_IP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">L2TP_IP=y</xsl:when>
			<xsl:when test=". = 'module'">L2TP_IP=m</xsl:when>
			<xsl:otherwise># L2TP_IP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="L2TP_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">L2TP_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">L2TP_ETH=m</xsl:when>
			<xsl:otherwise># L2TP_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STP=y</xsl:when>
			<xsl:when test=". = 'module'">STP=m</xsl:when>
			<xsl:otherwise># STP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GARP=y</xsl:when>
			<xsl:when test=". = 'module'">GARP=m</xsl:when>
			<xsl:otherwise># GARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MRP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MRP=y</xsl:when>
			<xsl:when test=". = 'module'">MRP=m</xsl:when>
			<xsl:otherwise># MRP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE=y</xsl:when>
			<xsl:when test=". = 'module'">BRIDGE=m</xsl:when>
			<xsl:otherwise># BRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_IGMP_SNOOPING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_IGMP_SNOOPING=y</xsl:when>
			<xsl:otherwise># BRIDGE_IGMP_SNOOPING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRIDGE_VLAN_FILTERING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRIDGE_VLAN_FILTERING=y</xsl:when>
			<xsl:otherwise># BRIDGE_VLAN_FILTERING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_NET_DSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_NET_DSA=y</xsl:when>
			<xsl:otherwise># HAVE_NET_DSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DSA=m</xsl:when>
			<xsl:otherwise># NET_DSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_HWMON=y</xsl:when>
			<xsl:otherwise># NET_DSA_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_TAG_BRCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_TAG_BRCM=y</xsl:when>
			<xsl:otherwise># NET_DSA_TAG_BRCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_TAG_DSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_TAG_DSA=y</xsl:when>
			<xsl:otherwise># NET_DSA_TAG_DSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_TAG_EDSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_TAG_EDSA=y</xsl:when>
			<xsl:otherwise># NET_DSA_TAG_EDSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_TAG_TRAILER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_TAG_TRAILER=y</xsl:when>
			<xsl:otherwise># NET_DSA_TAG_TRAILER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLAN_8021Q">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLAN_8021Q=y</xsl:when>
			<xsl:when test=". = 'module'">VLAN_8021Q=m</xsl:when>
			<xsl:otherwise># VLAN_8021Q is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLAN_8021Q_GVRP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLAN_8021Q_GVRP=y</xsl:when>
			<xsl:otherwise># VLAN_8021Q_GVRP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLAN_8021Q_MVRP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLAN_8021Q_MVRP=y</xsl:when>
			<xsl:otherwise># VLAN_8021Q_MVRP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECNET=y</xsl:when>
			<xsl:when test=". = 'module'">DECNET=m</xsl:when>
			<xsl:otherwise># DECNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECNET_ROUTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECNET_ROUTER=y</xsl:when>
			<xsl:otherwise># DECNET_ROUTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LLC=y</xsl:when>
			<xsl:when test=". = 'module'">LLC=m</xsl:when>
			<xsl:otherwise># LLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LLC2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LLC2=y</xsl:when>
			<xsl:when test=". = 'module'">LLC2=m</xsl:when>
			<xsl:otherwise># LLC2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPX=y</xsl:when>
			<xsl:when test=". = 'module'">IPX=m</xsl:when>
			<xsl:otherwise># IPX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPX_INTERN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPX_INTERN=y</xsl:when>
			<xsl:otherwise># IPX_INTERN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATALK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATALK=y</xsl:when>
			<xsl:when test=". = 'module'">ATALK=m</xsl:when>
			<xsl:otherwise># ATALK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEV_APPLETALK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEV_APPLETALK=y</xsl:when>
			<xsl:when test=". = 'module'">DEV_APPLETALK=m</xsl:when>
			<xsl:otherwise># DEV_APPLETALK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LTPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LTPC=y</xsl:when>
			<xsl:when test=". = 'module'">LTPC=m</xsl:when>
			<xsl:otherwise># LTPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COPS=y</xsl:when>
			<xsl:when test=". = 'module'">COPS=m</xsl:when>
			<xsl:otherwise># COPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COPS_DAYNA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COPS_DAYNA=y</xsl:when>
			<xsl:otherwise># COPS_DAYNA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COPS_TANGENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COPS_TANGENT=y</xsl:when>
			<xsl:otherwise># COPS_TANGENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPDDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPDDP=y</xsl:when>
			<xsl:when test=". = 'module'">IPDDP=m</xsl:when>
			<xsl:otherwise># IPDDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPDDP_ENCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPDDP_ENCAP=y</xsl:when>
			<xsl:otherwise># IPDDP_ENCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X25=y</xsl:when>
			<xsl:when test=". = 'module'">X25=m</xsl:when>
			<xsl:otherwise># X25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LAPB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LAPB=y</xsl:when>
			<xsl:when test=". = 'module'">LAPB=m</xsl:when>
			<xsl:otherwise># LAPB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHONET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHONET=y</xsl:when>
			<xsl:when test=". = 'module'">PHONET=m</xsl:when>
			<xsl:otherwise># PHONET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN=m</xsl:when>
			<xsl:otherwise># 6LOWPAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_DEBUGFS=y</xsl:when>
			<xsl:otherwise># 6LOWPAN_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_DEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_DEST=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_DEST=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_DEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_FRAGMENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_FRAGMENT=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_FRAGMENT=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_FRAGMENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_HOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_HOP=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_HOP=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_HOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_IPV6=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_IPV6=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_MOBILITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_MOBILITY=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_MOBILITY=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_MOBILITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_ROUTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_ROUTING=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_ROUTING=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_ROUTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_NHC_UDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_NHC_UDP=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_NHC_UDP=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_NHC_UDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_EXT_HDR_HOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_EXT_HDR_HOP=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_EXT_HDR_HOP=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_EXT_HDR_HOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_UDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_UDP=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_UDP=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_UDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_ICMPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_ICMPV6=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_ICMPV6=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_ICMPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_EXT_HDR_DEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_EXT_HDR_DEST=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_EXT_HDR_DEST=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_EXT_HDR_DEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_EXT_HDR_FRAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_EXT_HDR_FRAG=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_EXT_HDR_FRAG=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_EXT_HDR_FRAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6LOWPAN_GHC_EXT_HDR_ROUTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6LOWPAN_GHC_EXT_HDR_ROUTE=y</xsl:when>
			<xsl:when test=". = 'module'">6LOWPAN_GHC_EXT_HDR_ROUTE=m</xsl:when>
			<xsl:otherwise># 6LOWPAN_GHC_EXT_HDR_ROUTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154=m</xsl:when>
			<xsl:otherwise># IEEE802154 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_NL802154_EXPERIMENTAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_NL802154_EXPERIMENTAL=y</xsl:when>
			<xsl:otherwise># IEEE802154_NL802154_EXPERIMENTAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_SOCKET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_SOCKET=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_SOCKET=m</xsl:when>
			<xsl:otherwise># IEEE802154_SOCKET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_6LOWPAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_6LOWPAN=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_6LOWPAN=m</xsl:when>
			<xsl:otherwise># IEEE802154_6LOWPAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC802154">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC802154=y</xsl:when>
			<xsl:when test=". = 'module'">MAC802154=m</xsl:when>
			<xsl:otherwise># MAC802154 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCHED=y</xsl:when>
			<xsl:otherwise># NET_SCHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_CBQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_CBQ=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_CBQ=m</xsl:when>
			<xsl:otherwise># NET_SCH_CBQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_HTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_HTB=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_HTB=m</xsl:when>
			<xsl:otherwise># NET_SCH_HTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_HFSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_HFSC=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_HFSC=m</xsl:when>
			<xsl:otherwise># NET_SCH_HFSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_ATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_ATM=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_ATM=m</xsl:when>
			<xsl:otherwise># NET_SCH_ATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_PRIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_PRIO=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_PRIO=m</xsl:when>
			<xsl:otherwise># NET_SCH_PRIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_MULTIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_MULTIQ=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_MULTIQ=m</xsl:when>
			<xsl:otherwise># NET_SCH_MULTIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_RED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_RED=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_RED=m</xsl:when>
			<xsl:otherwise># NET_SCH_RED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_SFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_SFB=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_SFB=m</xsl:when>
			<xsl:otherwise># NET_SCH_SFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_SFQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_SFQ=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_SFQ=m</xsl:when>
			<xsl:otherwise># NET_SCH_SFQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_TEQL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_TEQL=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_TEQL=m</xsl:when>
			<xsl:otherwise># NET_SCH_TEQL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_TBF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_TBF=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_TBF=m</xsl:when>
			<xsl:otherwise># NET_SCH_TBF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_GRED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_GRED=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_GRED=m</xsl:when>
			<xsl:otherwise># NET_SCH_GRED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_DSMARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_DSMARK=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_DSMARK=m</xsl:when>
			<xsl:otherwise># NET_SCH_DSMARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_NETEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_NETEM=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_NETEM=m</xsl:when>
			<xsl:otherwise># NET_SCH_NETEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_DRR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_DRR=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_DRR=m</xsl:when>
			<xsl:otherwise># NET_SCH_DRR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_MQPRIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_MQPRIO=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_MQPRIO=m</xsl:when>
			<xsl:otherwise># NET_SCH_MQPRIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_CHOKE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_CHOKE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_CHOKE=m</xsl:when>
			<xsl:otherwise># NET_SCH_CHOKE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_QFQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_QFQ=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_QFQ=m</xsl:when>
			<xsl:otherwise># NET_SCH_QFQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_CODEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_CODEL=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_CODEL=m</xsl:when>
			<xsl:otherwise># NET_SCH_CODEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_FQ_CODEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_FQ_CODEL=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_FQ_CODEL=m</xsl:when>
			<xsl:otherwise># NET_SCH_FQ_CODEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_FQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_FQ=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_FQ=m</xsl:when>
			<xsl:otherwise># NET_SCH_FQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_HHF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_HHF=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_HHF=m</xsl:when>
			<xsl:otherwise># NET_SCH_HHF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_PIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_PIE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_PIE=m</xsl:when>
			<xsl:otherwise># NET_SCH_PIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_INGRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_INGRESS=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_INGRESS=m</xsl:when>
			<xsl:otherwise># NET_SCH_INGRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SCH_PLUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SCH_PLUG=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SCH_PLUG=m</xsl:when>
			<xsl:otherwise># NET_SCH_PLUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DCB=y</xsl:when>
			<xsl:otherwise># DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DNS_RESOLVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DNS_RESOLVER=y</xsl:when>
			<xsl:when test=". = 'module'">DNS_RESOLVER=m</xsl:when>
			<xsl:otherwise># DNS_RESOLVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV=y</xsl:when>
			<xsl:when test=". = 'module'">BATMAN_ADV=m</xsl:when>
			<xsl:otherwise># BATMAN_ADV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_BATMAN_V">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_BATMAN_V=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_BATMAN_V is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_BLA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_BLA=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_BLA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_DAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_DAT=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_DAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_NC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_NC=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_NC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_MCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_MCAST=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_MCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATMAN_ADV_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATMAN_ADV_DEBUG=y</xsl:when>
			<xsl:otherwise># BATMAN_ADV_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPENVSWITCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPENVSWITCH=y</xsl:when>
			<xsl:when test=". = 'module'">OPENVSWITCH=m</xsl:when>
			<xsl:otherwise># OPENVSWITCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPENVSWITCH_GRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPENVSWITCH_GRE=y</xsl:when>
			<xsl:when test=". = 'module'">OPENVSWITCH_GRE=m</xsl:when>
			<xsl:otherwise># OPENVSWITCH_GRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPENVSWITCH_VXLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPENVSWITCH_VXLAN=y</xsl:when>
			<xsl:when test=". = 'module'">OPENVSWITCH_VXLAN=m</xsl:when>
			<xsl:otherwise># OPENVSWITCH_VXLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPENVSWITCH_GENEVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPENVSWITCH_GENEVE=y</xsl:when>
			<xsl:when test=". = 'module'">OPENVSWITCH_GENEVE=m</xsl:when>
			<xsl:otherwise># OPENVSWITCH_GENEVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VSOCKETS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VSOCKETS=y</xsl:when>
			<xsl:when test=". = 'module'">VSOCKETS=m</xsl:when>
			<xsl:otherwise># VSOCKETS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMWARE_VMCI_VSOCKETS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMWARE_VMCI_VSOCKETS=y</xsl:when>
			<xsl:when test=". = 'module'">VMWARE_VMCI_VSOCKETS=m</xsl:when>
			<xsl:otherwise># VMWARE_VMCI_VSOCKETS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_VSOCKETS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_VSOCKETS=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_VSOCKETS=m</xsl:when>
			<xsl:otherwise># VIRTIO_VSOCKETS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_VSOCKETS_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_VSOCKETS_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_VSOCKETS_COMMON=m</xsl:when>
			<xsl:otherwise># VIRTIO_VSOCKETS_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETLINK_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETLINK_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">NETLINK_DIAG=m</xsl:when>
			<xsl:otherwise># NETLINK_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPLS=y</xsl:when>
			<xsl:otherwise># MPLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_MPLS_GSO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_MPLS_GSO=y</xsl:when>
			<xsl:when test=". = 'module'">NET_MPLS_GSO=m</xsl:when>
			<xsl:otherwise># NET_MPLS_GSO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPLS_ROUTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPLS_ROUTING=y</xsl:when>
			<xsl:when test=". = 'module'">MPLS_ROUTING=m</xsl:when>
			<xsl:otherwise># MPLS_ROUTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPLS_IPTUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPLS_IPTUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">MPLS_IPTUNNEL=m</xsl:when>
			<xsl:otherwise># MPLS_IPTUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSR=y</xsl:when>
			<xsl:when test=". = 'module'">HSR=m</xsl:when>
			<xsl:otherwise># HSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SWITCHDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SWITCHDEV=y</xsl:when>
			<xsl:otherwise># NET_SWITCHDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_L3_MASTER_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_L3_MASTER_DEV=y</xsl:when>
			<xsl:otherwise># NET_L3_MASTER_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QRTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QRTR=y</xsl:when>
			<xsl:when test=". = 'module'">QRTR=m</xsl:when>
			<xsl:otherwise># QRTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QRTR_SMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QRTR_SMD=y</xsl:when>
			<xsl:when test=". = 'module'">QRTR_SMD=m</xsl:when>
			<xsl:otherwise># QRTR_SMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_NCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_NCSI=y</xsl:when>
			<xsl:otherwise># NET_NCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RPS=y</xsl:when>
			<xsl:otherwise># RPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFS_ACCEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFS_ACCEL=y</xsl:when>
			<xsl:otherwise># RFS_ACCEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XPS=y</xsl:when>
			<xsl:otherwise># XPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWBM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWBM=y</xsl:when>
			<xsl:otherwise># HWBM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOCK_CGROUP_DATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOCK_CGROUP_DATA=y</xsl:when>
			<xsl:otherwise># SOCK_CGROUP_DATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_NET_PRIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_NET_PRIO=y</xsl:when>
			<xsl:otherwise># CGROUP_NET_PRIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CGROUP_NET_CLASSID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CGROUP_NET_CLASSID=y</xsl:when>
			<xsl:otherwise># CGROUP_NET_CLASSID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_RX_BUSY_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_RX_BUSY_POLL=y</xsl:when>
			<xsl:otherwise># NET_RX_BUSY_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BQL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BQL=y</xsl:when>
			<xsl:otherwise># BQL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BPF_JIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BPF_JIT=y</xsl:when>
			<xsl:otherwise># BPF_JIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_FLOW_LIMIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_FLOW_LIMIT=y</xsl:when>
			<xsl:otherwise># NET_FLOW_LIMIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_PKTGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_PKTGEN=y</xsl:when>
			<xsl:when test=". = 'module'">NET_PKTGEN=m</xsl:when>
			<xsl:otherwise># NET_PKTGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TCPPROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TCPPROBE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TCPPROBE=m</xsl:when>
			<xsl:otherwise># NET_TCPPROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DROP_MONITOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DROP_MONITOR=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DROP_MONITOR=m</xsl:when>
			<xsl:otherwise># NET_DROP_MONITOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAMRADIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAMRADIO=y</xsl:when>
			<xsl:otherwise># HAMRADIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AX25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AX25=y</xsl:when>
			<xsl:when test=". = 'module'">AX25=m</xsl:when>
			<xsl:otherwise># AX25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AX25_DAMA_SLAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AX25_DAMA_SLAVE=y</xsl:when>
			<xsl:otherwise># AX25_DAMA_SLAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AX25_DAMA_MASTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AX25_DAMA_MASTER=y</xsl:when>
			<xsl:otherwise># AX25_DAMA_MASTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETROM=y</xsl:when>
			<xsl:when test=". = 'module'">NETROM=m</xsl:when>
			<xsl:otherwise># NETROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROSE=y</xsl:when>
			<xsl:when test=". = 'module'">ROSE=m</xsl:when>
			<xsl:otherwise># ROSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MKISS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MKISS=y</xsl:when>
			<xsl:when test=". = 'module'">MKISS=m</xsl:when>
			<xsl:otherwise># MKISS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_6PACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">6PACK=y</xsl:when>
			<xsl:when test=". = 'module'">6PACK=m</xsl:when>
			<xsl:otherwise># 6PACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BPQETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BPQETHER=y</xsl:when>
			<xsl:when test=". = 'module'">BPQETHER=m</xsl:when>
			<xsl:otherwise># BPQETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMASCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMASCC=y</xsl:when>
			<xsl:when test=". = 'module'">DMASCC=m</xsl:when>
			<xsl:otherwise># DMASCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCC=y</xsl:when>
			<xsl:when test=". = 'module'">SCC=m</xsl:when>
			<xsl:otherwise># SCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCC_DELAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCC_DELAY=y</xsl:when>
			<xsl:otherwise># SCC_DELAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCC_TRXECHO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCC_TRXECHO=y</xsl:when>
			<xsl:otherwise># SCC_TRXECHO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BAYCOM_SER_FDX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BAYCOM_SER_FDX=y</xsl:when>
			<xsl:when test=". = 'module'">BAYCOM_SER_FDX=m</xsl:when>
			<xsl:otherwise># BAYCOM_SER_FDX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BAYCOM_SER_HDX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BAYCOM_SER_HDX=y</xsl:when>
			<xsl:when test=". = 'module'">BAYCOM_SER_HDX=m</xsl:when>
			<xsl:otherwise># BAYCOM_SER_HDX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BAYCOM_PAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BAYCOM_PAR=y</xsl:when>
			<xsl:when test=". = 'module'">BAYCOM_PAR=m</xsl:when>
			<xsl:otherwise># BAYCOM_PAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BAYCOM_EPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BAYCOM_EPP=y</xsl:when>
			<xsl:when test=". = 'module'">BAYCOM_EPP=m</xsl:when>
			<xsl:otherwise># BAYCOM_EPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YAM=y</xsl:when>
			<xsl:when test=". = 'module'">YAM=m</xsl:when>
			<xsl:otherwise># YAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN=m</xsl:when>
			<xsl:otherwise># CAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_RAW=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_RAW=m</xsl:when>
			<xsl:otherwise># CAN_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_BCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_BCM=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_BCM=m</xsl:when>
			<xsl:otherwise># CAN_BCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_GW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_GW=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_GW=m</xsl:when>
			<xsl:otherwise># CAN_GW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_VCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_VCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_VCAN=m</xsl:when>
			<xsl:otherwise># CAN_VCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SLCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SLCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SLCAN=m</xsl:when>
			<xsl:otherwise># CAN_SLCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_DEV=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_DEV=m</xsl:when>
			<xsl:otherwise># CAN_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_CALC_BITTIMING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_CALC_BITTIMING=y</xsl:when>
			<xsl:otherwise># CAN_CALC_BITTIMING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_LEDS=y</xsl:when>
			<xsl:otherwise># CAN_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_AT91=m</xsl:when>
			<xsl:otherwise># CAN_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_BFIN=m</xsl:when>
			<xsl:otherwise># CAN_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_FLEXCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_FLEXCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_FLEXCAN=m</xsl:when>
			<xsl:otherwise># CAN_FLEXCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_GRCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_GRCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_GRCAN=m</xsl:when>
			<xsl:otherwise># CAN_GRCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_JANZ_ICAN3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_JANZ_ICAN3=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_JANZ_ICAN3=m</xsl:when>
			<xsl:otherwise># CAN_JANZ_ICAN3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SUN4I=m</xsl:when>
			<xsl:otherwise># CAN_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_TI_HECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_TI_HECC=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_TI_HECC=m</xsl:when>
			<xsl:otherwise># CAN_TI_HECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_XILINXCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_XILINXCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_XILINXCAN=m</xsl:when>
			<xsl:otherwise># CAN_XILINXCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCH_CAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCH_CAN=y</xsl:when>
			<xsl:when test=". = 'module'">PCH_CAN=m</xsl:when>
			<xsl:otherwise># PCH_CAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_C_CAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_C_CAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_C_CAN=m</xsl:when>
			<xsl:otherwise># CAN_C_CAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_C_CAN_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_C_CAN_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_C_CAN_PLATFORM=m</xsl:when>
			<xsl:otherwise># CAN_C_CAN_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_C_CAN_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_C_CAN_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_C_CAN_PCI=m</xsl:when>
			<xsl:otherwise># CAN_C_CAN_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_CC770">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_CC770=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_CC770=m</xsl:when>
			<xsl:otherwise># CAN_CC770 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_CC770_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_CC770_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_CC770_ISA=m</xsl:when>
			<xsl:otherwise># CAN_CC770_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_CC770_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_CC770_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_CC770_PLATFORM=m</xsl:when>
			<xsl:otherwise># CAN_CC770_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_IFI_CANFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_IFI_CANFD=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_IFI_CANFD=m</xsl:when>
			<xsl:otherwise># CAN_IFI_CANFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_M_CAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_M_CAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_M_CAN=m</xsl:when>
			<xsl:otherwise># CAN_M_CAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_MSCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_MSCAN=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_MSCAN=m</xsl:when>
			<xsl:otherwise># CAN_MSCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_MPC5XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_MPC5XXX=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_MPC5XXX=m</xsl:when>
			<xsl:otherwise># CAN_MPC5XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_RCAR=m</xsl:when>
			<xsl:otherwise># CAN_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_RCAR_CANFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_RCAR_CANFD=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_RCAR_CANFD=m</xsl:when>
			<xsl:otherwise># CAN_RCAR_CANFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SJA1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SJA1000=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SJA1000=m</xsl:when>
			<xsl:otherwise># CAN_SJA1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SJA1000_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SJA1000_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SJA1000_ISA=m</xsl:when>
			<xsl:otherwise># CAN_SJA1000_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SJA1000_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SJA1000_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SJA1000_PLATFORM=m</xsl:when>
			<xsl:otherwise># CAN_SJA1000_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_EMS_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_EMS_PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_EMS_PCMCIA=m</xsl:when>
			<xsl:otherwise># CAN_EMS_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_EMS_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_EMS_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_EMS_PCI=m</xsl:when>
			<xsl:otherwise># CAN_EMS_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_PEAK_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_PEAK_PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_PEAK_PCMCIA=m</xsl:when>
			<xsl:otherwise># CAN_PEAK_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_PEAK_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_PEAK_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_PEAK_PCI=m</xsl:when>
			<xsl:otherwise># CAN_PEAK_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_PEAK_PCIEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_PEAK_PCIEC=y</xsl:when>
			<xsl:otherwise># CAN_PEAK_PCIEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_KVASER_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_KVASER_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_KVASER_PCI=m</xsl:when>
			<xsl:otherwise># CAN_KVASER_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_PLX_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_PLX_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_PLX_PCI=m</xsl:when>
			<xsl:otherwise># CAN_PLX_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_TSCAN1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_TSCAN1=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_TSCAN1=m</xsl:when>
			<xsl:otherwise># CAN_TSCAN1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SOFTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SOFTING=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SOFTING=m</xsl:when>
			<xsl:otherwise># CAN_SOFTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_SOFTING_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_SOFTING_CS=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_SOFTING_CS=m</xsl:when>
			<xsl:otherwise># CAN_SOFTING_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_MCP251X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_MCP251X=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_MCP251X=m</xsl:when>
			<xsl:otherwise># CAN_MCP251X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_EMS_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_EMS_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_EMS_USB=m</xsl:when>
			<xsl:otherwise># CAN_EMS_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_ESD_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_ESD_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_ESD_USB2=m</xsl:when>
			<xsl:otherwise># CAN_ESD_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_GS_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_GS_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_GS_USB=m</xsl:when>
			<xsl:otherwise># CAN_GS_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_KVASER_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_KVASER_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_KVASER_USB=m</xsl:when>
			<xsl:otherwise># CAN_KVASER_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_PEAK_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_PEAK_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_PEAK_USB=m</xsl:when>
			<xsl:otherwise># CAN_PEAK_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_8DEV_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_8DEV_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAN_8DEV_USB=m</xsl:when>
			<xsl:otherwise># CAN_8DEV_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAN_DEBUG_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAN_DEBUG_DEVICES=y</xsl:when>
			<xsl:otherwise># CAN_DEBUG_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRDA=y</xsl:when>
			<xsl:when test=". = 'module'">IRDA=m</xsl:when>
			<xsl:otherwise># IRDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRLAN=y</xsl:when>
			<xsl:when test=". = 'module'">IRLAN=m</xsl:when>
			<xsl:otherwise># IRLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRNET=y</xsl:when>
			<xsl:when test=". = 'module'">IRNET=m</xsl:when>
			<xsl:otherwise># IRNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRCOMM=y</xsl:when>
			<xsl:when test=". = 'module'">IRCOMM=m</xsl:when>
			<xsl:otherwise># IRCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRDA_ULTRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRDA_ULTRA=y</xsl:when>
			<xsl:otherwise># IRDA_ULTRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRDA_CACHE_LAST_LSAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRDA_CACHE_LAST_LSAP=y</xsl:when>
			<xsl:otherwise># IRDA_CACHE_LAST_LSAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRDA_FAST_RR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRDA_FAST_RR=y</xsl:when>
			<xsl:otherwise># IRDA_FAST_RR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRDA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRDA_DEBUG=y</xsl:when>
			<xsl:otherwise># IRDA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRTTY_SIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRTTY_SIR=y</xsl:when>
			<xsl:when test=". = 'module'">IRTTY_SIR=m</xsl:when>
			<xsl:otherwise># IRTTY_SIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_SIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_SIR=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_SIR=m</xsl:when>
			<xsl:otherwise># BFIN_SIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_SIR0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_SIR0=y</xsl:when>
			<xsl:otherwise># BFIN_SIR0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_SIR1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_SIR1=y</xsl:when>
			<xsl:otherwise># BFIN_SIR1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_SIR2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_SIR2=y</xsl:when>
			<xsl:otherwise># BFIN_SIR2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_SIR3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_SIR3=y</xsl:when>
			<xsl:otherwise># BFIN_SIR3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIR_BFIN_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIR_BFIN_DMA=y</xsl:when>
			<xsl:otherwise># SIR_BFIN_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIR_BFIN_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIR_BFIN_PIO=y</xsl:when>
			<xsl:otherwise># SIR_BFIN_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_SIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_SIR=y</xsl:when>
			<xsl:when test=". = 'module'">SH_SIR=m</xsl:when>
			<xsl:otherwise># SH_SIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DONGLE=y</xsl:when>
			<xsl:otherwise># DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ESI_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ESI_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">ESI_DONGLE=m</xsl:when>
			<xsl:otherwise># ESI_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACTISYS_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACTISYS_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">ACTISYS_DONGLE=m</xsl:when>
			<xsl:otherwise># ACTISYS_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEKRAM_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEKRAM_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">TEKRAM_DONGLE=m</xsl:when>
			<xsl:otherwise># TEKRAM_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOIM3232_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOIM3232_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">TOIM3232_DONGLE=m</xsl:when>
			<xsl:otherwise># TOIM3232_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LITELINK_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LITELINK_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">LITELINK_DONGLE=m</xsl:when>
			<xsl:otherwise># LITELINK_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MA600_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MA600_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">MA600_DONGLE=m</xsl:when>
			<xsl:otherwise># MA600_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIRBIL_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIRBIL_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">GIRBIL_DONGLE=m</xsl:when>
			<xsl:otherwise># GIRBIL_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP2120_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP2120_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">MCP2120_DONGLE=m</xsl:when>
			<xsl:otherwise># MCP2120_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OLD_BELKIN_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OLD_BELKIN_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">OLD_BELKIN_DONGLE=m</xsl:when>
			<xsl:otherwise># OLD_BELKIN_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACT200L_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACT200L_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">ACT200L_DONGLE=m</xsl:when>
			<xsl:otherwise># ACT200L_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KINGSUN_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KINGSUN_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">KINGSUN_DONGLE=m</xsl:when>
			<xsl:otherwise># KINGSUN_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KSDAZZLE_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KSDAZZLE_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">KSDAZZLE_DONGLE=m</xsl:when>
			<xsl:otherwise># KSDAZZLE_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS959_DONGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS959_DONGLE=y</xsl:when>
			<xsl:when test=". = 'module'">KS959_DONGLE=m</xsl:when>
			<xsl:otherwise># KS959_DONGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_IRDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_IRDA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_IRDA=m</xsl:when>
			<xsl:otherwise># USB_IRDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIGMATEL_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIGMATEL_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">SIGMATEL_FIR=m</xsl:when>
			<xsl:otherwise># SIGMATEL_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NSC_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NSC_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">NSC_FIR=m</xsl:when>
			<xsl:otherwise># NSC_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINBOND_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINBOND_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">WINBOND_FIR=m</xsl:when>
			<xsl:otherwise># WINBOND_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOSHIBA_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOSHIBA_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">TOSHIBA_FIR=m</xsl:when>
			<xsl:otherwise># TOSHIBA_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AU1000_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AU1000_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">AU1000_FIR=m</xsl:when>
			<xsl:otherwise># AU1000_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMC_IRCC_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMC_IRCC_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">SMC_IRCC_FIR=m</xsl:when>
			<xsl:otherwise># SMC_IRCC_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALI_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALI_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">ALI_FIR=m</xsl:when>
			<xsl:otherwise># ALI_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLSI_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLSI_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">VLSI_FIR=m</xsl:when>
			<xsl:otherwise># VLSI_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SA1100_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SA1100_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">SA1100_FIR=m</xsl:when>
			<xsl:otherwise># SA1100_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIA_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIA_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">VIA_FIR=m</xsl:when>
			<xsl:otherwise># VIA_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PXA_FICP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PXA_FICP=y</xsl:when>
			<xsl:when test=". = 'module'">PXA_FICP=m</xsl:when>
			<xsl:otherwise># PXA_FICP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCS_FIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCS_FIR=y</xsl:when>
			<xsl:when test=". = 'module'">MCS_FIR=m</xsl:when>
			<xsl:otherwise># MCS_FIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT=y</xsl:when>
			<xsl:when test=". = 'module'">BT=m</xsl:when>
			<xsl:otherwise># BT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_BREDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_BREDR=y</xsl:when>
			<xsl:otherwise># BT_BREDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_RFCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_RFCOMM=y</xsl:when>
			<xsl:when test=". = 'module'">BT_RFCOMM=m</xsl:when>
			<xsl:otherwise># BT_RFCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_RFCOMM_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_RFCOMM_TTY=y</xsl:when>
			<xsl:otherwise># BT_RFCOMM_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_BNEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_BNEP=y</xsl:when>
			<xsl:when test=". = 'module'">BT_BNEP=m</xsl:when>
			<xsl:otherwise># BT_BNEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_BNEP_MC_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_BNEP_MC_FILTER=y</xsl:when>
			<xsl:otherwise># BT_BNEP_MC_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_BNEP_PROTO_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_BNEP_PROTO_FILTER=y</xsl:when>
			<xsl:otherwise># BT_BNEP_PROTO_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_CMTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_CMTP=y</xsl:when>
			<xsl:when test=". = 'module'">BT_CMTP=m</xsl:when>
			<xsl:otherwise># BT_CMTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HIDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HIDP=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HIDP=m</xsl:when>
			<xsl:otherwise># BT_HIDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HS=y</xsl:when>
			<xsl:otherwise># BT_HS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_LE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_LE=y</xsl:when>
			<xsl:otherwise># BT_LE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_6LOWPAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_6LOWPAN=y</xsl:when>
			<xsl:when test=". = 'module'">BT_6LOWPAN=m</xsl:when>
			<xsl:otherwise># BT_6LOWPAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_LEDS=y</xsl:when>
			<xsl:otherwise># BT_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_SELFTEST=y</xsl:when>
			<xsl:otherwise># BT_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_SELFTEST_ECDH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_SELFTEST_ECDH=y</xsl:when>
			<xsl:otherwise># BT_SELFTEST_ECDH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_SELFTEST_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_SELFTEST_SMP=y</xsl:when>
			<xsl:otherwise># BT_SELFTEST_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_DEBUGFS=y</xsl:when>
			<xsl:otherwise># BT_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">BT_INTEL=m</xsl:when>
			<xsl:otherwise># BT_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_BCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_BCM=y</xsl:when>
			<xsl:when test=". = 'module'">BT_BCM=m</xsl:when>
			<xsl:otherwise># BT_BCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_RTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_RTL=y</xsl:when>
			<xsl:when test=". = 'module'">BT_RTL=m</xsl:when>
			<xsl:otherwise># BT_RTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_QCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_QCA=y</xsl:when>
			<xsl:when test=". = 'module'">BT_QCA=m</xsl:when>
			<xsl:otherwise># BT_QCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBTUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBTUSB=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBTUSB=m</xsl:when>
			<xsl:otherwise># BT_HCIBTUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBTUSB_BCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBTUSB_BCM=y</xsl:when>
			<xsl:otherwise># BT_HCIBTUSB_BCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBTUSB_RTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBTUSB_RTL=y</xsl:when>
			<xsl:otherwise># BT_HCIBTUSB_RTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBTSDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBTSDIO=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBTSDIO=m</xsl:when>
			<xsl:otherwise># BT_HCIBTSDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIUART=m</xsl:when>
			<xsl:otherwise># BT_HCIUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_H4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_H4=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_H4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_BCSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_BCSP=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_BCSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_ATH3K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_ATH3K=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_ATH3K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_LL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_LL=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_LL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_3WIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_3WIRE=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_3WIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_INTEL=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_BCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_BCM=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_BCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_QCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_QCA=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_QCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIUART_AG6XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIUART_AG6XX=y</xsl:when>
			<xsl:otherwise># BT_HCIUART_AG6XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBCM203X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBCM203X=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBCM203X=m</xsl:when>
			<xsl:otherwise># BT_HCIBCM203X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBPA10X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBPA10X=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBPA10X=m</xsl:when>
			<xsl:otherwise># BT_HCIBPA10X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBFUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBFUSB=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBFUSB=m</xsl:when>
			<xsl:otherwise># BT_HCIBFUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIDTL1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIDTL1=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIDTL1=m</xsl:when>
			<xsl:otherwise># BT_HCIDTL1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBT3C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBT3C=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBT3C=m</xsl:when>
			<xsl:otherwise># BT_HCIBT3C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBLUECARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBLUECARD=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBLUECARD=m</xsl:when>
			<xsl:otherwise># BT_HCIBLUECARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIBTUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIBTUART=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIBTUART=m</xsl:when>
			<xsl:otherwise># BT_HCIBTUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_HCIVHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_HCIVHCI=y</xsl:when>
			<xsl:when test=". = 'module'">BT_HCIVHCI=m</xsl:when>
			<xsl:otherwise># BT_HCIVHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_MRVL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_MRVL=y</xsl:when>
			<xsl:when test=". = 'module'">BT_MRVL=m</xsl:when>
			<xsl:otherwise># BT_MRVL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_MRVL_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_MRVL_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">BT_MRVL_SDIO=m</xsl:when>
			<xsl:otherwise># BT_MRVL_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_ATH3K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_ATH3K=y</xsl:when>
			<xsl:when test=". = 'module'">BT_ATH3K=m</xsl:when>
			<xsl:otherwise># BT_ATH3K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BT_WILINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BT_WILINK=y</xsl:when>
			<xsl:when test=". = 'module'">BT_WILINK=m</xsl:when>
			<xsl:otherwise># BT_WILINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AF_RXRPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AF_RXRPC=y</xsl:when>
			<xsl:when test=". = 'module'">AF_RXRPC=m</xsl:when>
			<xsl:otherwise># AF_RXRPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AF_RXRPC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AF_RXRPC_DEBUG=y</xsl:when>
			<xsl:otherwise># AF_RXRPC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RXKAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RXKAD=y</xsl:when>
			<xsl:otherwise># RXKAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AF_KCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AF_KCM=y</xsl:when>
			<xsl:when test=". = 'module'">AF_KCM=m</xsl:when>
			<xsl:otherwise># AF_KCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIB_RULES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIB_RULES=y</xsl:when>
			<xsl:otherwise># FIB_RULES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIRELESS=y</xsl:when>
			<xsl:otherwise># WIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIRELESS_EXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIRELESS_EXT=y</xsl:when>
			<xsl:otherwise># WIRELESS_EXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WEXT_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WEXT_CORE=y</xsl:when>
			<xsl:otherwise># WEXT_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WEXT_PROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WEXT_PROC=y</xsl:when>
			<xsl:otherwise># WEXT_PROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WEXT_SPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WEXT_SPY=y</xsl:when>
			<xsl:otherwise># WEXT_SPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WEXT_PRIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WEXT_PRIV=y</xsl:when>
			<xsl:otherwise># WEXT_PRIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211=y</xsl:when>
			<xsl:when test=". = 'module'">CFG80211=m</xsl:when>
			<xsl:otherwise># CFG80211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NL80211_TESTMODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NL80211_TESTMODE=y</xsl:when>
			<xsl:otherwise># NL80211_TESTMODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_DEVELOPER_WARNINGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_DEVELOPER_WARNINGS=y</xsl:when>
			<xsl:otherwise># CFG80211_DEVELOPER_WARNINGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_CERTIFICATION_ONUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_CERTIFICATION_ONUS=y</xsl:when>
			<xsl:otherwise># CFG80211_CERTIFICATION_ONUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_REG_CELLULAR_HINTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_REG_CELLULAR_HINTS=y</xsl:when>
			<xsl:otherwise># CFG80211_REG_CELLULAR_HINTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_REG_RELAX_NO_IR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_REG_RELAX_NO_IR=y</xsl:when>
			<xsl:otherwise># CFG80211_REG_RELAX_NO_IR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_DEFAULT_PS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_DEFAULT_PS=y</xsl:when>
			<xsl:otherwise># CFG80211_DEFAULT_PS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_DEBUGFS=y</xsl:when>
			<xsl:otherwise># CFG80211_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_INTERNAL_REGDB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_INTERNAL_REGDB=y</xsl:when>
			<xsl:otherwise># CFG80211_INTERNAL_REGDB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_CRDA_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_CRDA_SUPPORT=y</xsl:when>
			<xsl:otherwise># CFG80211_CRDA_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_WEXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_WEXT=y</xsl:when>
			<xsl:otherwise># CFG80211_WEXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFG80211_WEXT_EXPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFG80211_WEXT_EXPORT=y</xsl:when>
			<xsl:otherwise># CFG80211_WEXT_EXPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIB80211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIB80211=y</xsl:when>
			<xsl:when test=". = 'module'">LIB80211=m</xsl:when>
			<xsl:otherwise># LIB80211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIB80211_CRYPT_WEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIB80211_CRYPT_WEP=y</xsl:when>
			<xsl:when test=". = 'module'">LIB80211_CRYPT_WEP=m</xsl:when>
			<xsl:otherwise># LIB80211_CRYPT_WEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIB80211_CRYPT_CCMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIB80211_CRYPT_CCMP=y</xsl:when>
			<xsl:when test=". = 'module'">LIB80211_CRYPT_CCMP=m</xsl:when>
			<xsl:otherwise># LIB80211_CRYPT_CCMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIB80211_CRYPT_TKIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIB80211_CRYPT_TKIP=y</xsl:when>
			<xsl:when test=". = 'module'">LIB80211_CRYPT_TKIP=m</xsl:when>
			<xsl:otherwise># LIB80211_CRYPT_TKIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIB80211_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIB80211_DEBUG=y</xsl:when>
			<xsl:otherwise># LIB80211_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211=y</xsl:when>
			<xsl:when test=". = 'module'">MAC80211=m</xsl:when>
			<xsl:otherwise># MAC80211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_HAS_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_HAS_RC=y</xsl:when>
			<xsl:otherwise># MAC80211_HAS_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_RC_MINSTREL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_RC_MINSTREL=y</xsl:when>
			<xsl:otherwise># MAC80211_RC_MINSTREL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_RC_MINSTREL_HT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_RC_MINSTREL_HT=y</xsl:when>
			<xsl:otherwise># MAC80211_RC_MINSTREL_HT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_RC_MINSTREL_VHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_RC_MINSTREL_VHT=y</xsl:when>
			<xsl:otherwise># MAC80211_RC_MINSTREL_VHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_RC_DEFAULT_MINSTREL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_RC_DEFAULT_MINSTREL=y</xsl:when>
			<xsl:otherwise># MAC80211_RC_DEFAULT_MINSTREL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_RC_DEFAULT">
		MAC80211_RC_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MAC80211_MESH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MESH=y</xsl:when>
			<xsl:otherwise># MAC80211_MESH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_LEDS=y</xsl:when>
			<xsl:otherwise># MAC80211_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_DEBUGFS=y</xsl:when>
			<xsl:otherwise># MAC80211_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MESSAGE_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MESSAGE_TRACING=y</xsl:when>
			<xsl:otherwise># MAC80211_MESSAGE_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_DEBUG_MENU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_DEBUG_MENU=y</xsl:when>
			<xsl:otherwise># MAC80211_DEBUG_MENU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_NOINLINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_NOINLINE=y</xsl:when>
			<xsl:otherwise># MAC80211_NOINLINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_VERBOSE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_VERBOSE_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_VERBOSE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MLME_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MLME_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MLME_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_STA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_STA_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_STA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_HT_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_HT_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_HT_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_OCB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_OCB_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_OCB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_IBSS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_IBSS_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_IBSS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_PS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_PS_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_PS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MPL_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MPL_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MPL_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MPATH_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MPATH_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MPATH_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MHWMP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MHWMP_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MHWMP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MESH_SYNC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MESH_SYNC_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MESH_SYNC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MESH_CSA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MESH_CSA_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MESH_CSA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_MESH_PS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_MESH_PS_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_MESH_PS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_TDLS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_TDLS_DEBUG=y</xsl:when>
			<xsl:otherwise># MAC80211_TDLS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_DEBUG_COUNTERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_DEBUG_COUNTERS=y</xsl:when>
			<xsl:otherwise># MAC80211_DEBUG_COUNTERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_STA_HASH_MAX_SIZE">
		MAC80211_STA_HASH_MAX_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="WIMAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIMAX=y</xsl:when>
			<xsl:when test=". = 'module'">WIMAX=m</xsl:when>
			<xsl:otherwise># WIMAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFKILL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFKILL=y</xsl:when>
			<xsl:when test=". = 'module'">RFKILL=m</xsl:when>
			<xsl:otherwise># RFKILL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFKILL_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFKILL_LEDS=y</xsl:when>
			<xsl:otherwise># RFKILL_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFKILL_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFKILL_INPUT=y</xsl:when>
			<xsl:otherwise># RFKILL_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFKILL_REGULATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFKILL_REGULATOR=y</xsl:when>
			<xsl:when test=". = 'module'">RFKILL_REGULATOR=m</xsl:when>
			<xsl:otherwise># RFKILL_REGULATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFKILL_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFKILL_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">RFKILL_GPIO=m</xsl:when>
			<xsl:otherwise># RFKILL_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_9P">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_9P=y</xsl:when>
			<xsl:when test=". = 'module'">NET_9P=m</xsl:when>
			<xsl:otherwise># NET_9P is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_9P_VIRTIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_9P_VIRTIO=y</xsl:when>
			<xsl:when test=". = 'module'">NET_9P_VIRTIO=m</xsl:when>
			<xsl:otherwise># NET_9P_VIRTIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_9P_RDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_9P_RDMA=y</xsl:when>
			<xsl:when test=". = 'module'">NET_9P_RDMA=m</xsl:when>
			<xsl:otherwise># NET_9P_RDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_9P_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_9P_DEBUG=y</xsl:when>
			<xsl:otherwise># NET_9P_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF=m</xsl:when>
			<xsl:otherwise># CAIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_DEBUG=y</xsl:when>
			<xsl:otherwise># CAIF_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_NETDEV=m</xsl:when>
			<xsl:otherwise># CAIF_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_USB=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_USB=m</xsl:when>
			<xsl:otherwise># CAIF_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">CEPH_LIB=m</xsl:when>
			<xsl:otherwise># CEPH_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_LIB_PRETTYDEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_LIB_PRETTYDEBUG=y</xsl:when>
			<xsl:otherwise># CEPH_LIB_PRETTYDEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_LIB_USE_DNS_RESOLVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_LIB_USE_DNS_RESOLVER=y</xsl:when>
			<xsl:otherwise># CEPH_LIB_USE_DNS_RESOLVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC=y</xsl:when>
			<xsl:when test=". = 'module'">NFC=m</xsl:when>
			<xsl:otherwise># NFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_DIGITAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_DIGITAL=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_DIGITAL=m</xsl:when>
			<xsl:otherwise># NFC_DIGITAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_NCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_NCI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_NCI=m</xsl:when>
			<xsl:otherwise># NFC_NCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_NCI_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_NCI_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_NCI_SPI=m</xsl:when>
			<xsl:otherwise># NFC_NCI_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_NCI_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_NCI_UART=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_NCI_UART=m</xsl:when>
			<xsl:otherwise># NFC_NCI_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_HCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_HCI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_HCI=m</xsl:when>
			<xsl:otherwise># NFC_HCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_SHDLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_SHDLC=y</xsl:when>
			<xsl:otherwise># NFC_SHDLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_WILINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_WILINK=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_WILINK=m</xsl:when>
			<xsl:otherwise># NFC_WILINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_TRF7970A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_TRF7970A=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_TRF7970A=m</xsl:when>
			<xsl:otherwise># NFC_TRF7970A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MEI_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MEI_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MEI_PHY=m</xsl:when>
			<xsl:otherwise># NFC_MEI_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_SIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_SIM=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_SIM=m</xsl:when>
			<xsl:otherwise># NFC_SIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PORT100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PORT100=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PORT100=m</xsl:when>
			<xsl:otherwise># NFC_PORT100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_FDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_FDP=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_FDP=m</xsl:when>
			<xsl:otherwise># NFC_FDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_FDP_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_FDP_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_FDP_I2C=m</xsl:when>
			<xsl:otherwise># NFC_FDP_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN544">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN544=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN544=m</xsl:when>
			<xsl:otherwise># NFC_PN544 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN544_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN544_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN544_I2C=m</xsl:when>
			<xsl:otherwise># NFC_PN544_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN544_MEI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN544_MEI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN544_MEI=m</xsl:when>
			<xsl:otherwise># NFC_PN544_MEI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN533=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN533=m</xsl:when>
			<xsl:otherwise># NFC_PN533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN533_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN533_USB=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN533_USB=m</xsl:when>
			<xsl:otherwise># NFC_PN533_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_PN533_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_PN533_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_PN533_I2C=m</xsl:when>
			<xsl:otherwise># NFC_PN533_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MICROREAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MICROREAD=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MICROREAD=m</xsl:when>
			<xsl:otherwise># NFC_MICROREAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MICROREAD_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MICROREAD_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MICROREAD_I2C=m</xsl:when>
			<xsl:otherwise># NFC_MICROREAD_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MICROREAD_MEI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MICROREAD_MEI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MICROREAD_MEI=m</xsl:when>
			<xsl:otherwise># NFC_MICROREAD_MEI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MRVL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MRVL=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MRVL=m</xsl:when>
			<xsl:otherwise># NFC_MRVL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MRVL_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MRVL_USB=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MRVL_USB=m</xsl:when>
			<xsl:otherwise># NFC_MRVL_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MRVL_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MRVL_UART=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MRVL_UART=m</xsl:when>
			<xsl:otherwise># NFC_MRVL_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MRVL_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MRVL_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MRVL_I2C=m</xsl:when>
			<xsl:otherwise># NFC_MRVL_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_MRVL_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_MRVL_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_MRVL_SPI=m</xsl:when>
			<xsl:otherwise># NFC_MRVL_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST21NFCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST21NFCA=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST21NFCA=m</xsl:when>
			<xsl:otherwise># NFC_ST21NFCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST21NFCA_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST21NFCA_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST21NFCA_I2C=m</xsl:when>
			<xsl:otherwise># NFC_ST21NFCA_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST_NCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST_NCI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST_NCI=m</xsl:when>
			<xsl:otherwise># NFC_ST_NCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST_NCI_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST_NCI_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST_NCI_I2C=m</xsl:when>
			<xsl:otherwise># NFC_ST_NCI_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST_NCI_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST_NCI_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST_NCI_SPI=m</xsl:when>
			<xsl:otherwise># NFC_ST_NCI_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_NXP_NCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_NXP_NCI=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_NXP_NCI=m</xsl:when>
			<xsl:otherwise># NFC_NXP_NCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_NXP_NCI_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_NXP_NCI_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_NXP_NCI_I2C=m</xsl:when>
			<xsl:otherwise># NFC_NXP_NCI_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_S3FWRN5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_S3FWRN5=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_S3FWRN5=m</xsl:when>
			<xsl:otherwise># NFC_S3FWRN5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_S3FWRN5_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_S3FWRN5_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_S3FWRN5_I2C=m</xsl:when>
			<xsl:otherwise># NFC_S3FWRN5_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFC_ST95HF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFC_ST95HF=y</xsl:when>
			<xsl:when test=". = 'module'">NFC_ST95HF=m</xsl:when>
			<xsl:otherwise># NFC_ST95HF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LWTUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LWTUNNEL=y</xsl:when>
			<xsl:otherwise># LWTUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DST_CACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DST_CACHE=y</xsl:when>
			<xsl:otherwise># DST_CACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DEVLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DEVLINK=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DEVLINK=m</xsl:when>
			<xsl:otherwise># NET_DEVLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAY_USE_DEVLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAY_USE_DEVLINK=y</xsl:when>
			<xsl:when test=". = 'module'">MAY_USE_DEVLINK=m</xsl:when>
			<xsl:otherwise># MAY_USE_DEVLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CBPF_JIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CBPF_JIT=y</xsl:when>
			<xsl:otherwise># HAVE_CBPF_JIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_EBPF_JIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_EBPF_JIT=y</xsl:when>
			<xsl:otherwise># HAVE_EBPF_JIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_AMBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_AMBA=y</xsl:when>
			<xsl:otherwise># ARM_AMBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_AHB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_AHB=y</xsl:when>
			<xsl:otherwise># TEGRA_AHB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UEVENT_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UEVENT_HELPER=y</xsl:when>
			<xsl:otherwise># UEVENT_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UEVENT_HELPER_PATH">
		UEVENT_HELPER_PATH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DEVTMPFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVTMPFS=y</xsl:when>
			<xsl:otherwise># DEVTMPFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVTMPFS_MOUNT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVTMPFS_MOUNT=y</xsl:when>
			<xsl:otherwise># DEVTMPFS_MOUNT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STANDALONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STANDALONE=y</xsl:when>
			<xsl:otherwise># STANDALONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PREVENT_FIRMWARE_BUILD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PREVENT_FIRMWARE_BUILD=y</xsl:when>
			<xsl:otherwise># PREVENT_FIRMWARE_BUILD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FW_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FW_LOADER=y</xsl:when>
			<xsl:when test=". = 'module'">FW_LOADER=m</xsl:when>
			<xsl:otherwise># FW_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIRMWARE_IN_KERNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIRMWARE_IN_KERNEL=y</xsl:when>
			<xsl:otherwise># FIRMWARE_IN_KERNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTRA_FIRMWARE">
		EXTRA_FIRMWARE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="EXTRA_FIRMWARE_DIR">
		EXTRA_FIRMWARE_DIR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FW_LOADER_USER_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FW_LOADER_USER_HELPER=y</xsl:when>
			<xsl:otherwise># FW_LOADER_USER_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FW_LOADER_USER_HELPER_FALLBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FW_LOADER_USER_HELPER_FALLBACK=y</xsl:when>
			<xsl:otherwise># FW_LOADER_USER_HELPER_FALLBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WANT_DEV_COREDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WANT_DEV_COREDUMP=y</xsl:when>
			<xsl:otherwise># WANT_DEV_COREDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALLOW_DEV_COREDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALLOW_DEV_COREDUMP=y</xsl:when>
			<xsl:otherwise># ALLOW_DEV_COREDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEV_COREDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEV_COREDUMP=y</xsl:when>
			<xsl:otherwise># DEV_COREDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_DRIVER=y</xsl:when>
			<xsl:otherwise># DEBUG_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_DEVRES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_DEVRES=y</xsl:when>
			<xsl:otherwise># DEBUG_DEVRES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYS_HYPERVISOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYS_HYPERVISOR=y</xsl:when>
			<xsl:otherwise># SYS_HYPERVISOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CPU_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CPU_DEVICES=y</xsl:when>
			<xsl:otherwise># GENERIC_CPU_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_CPU_AUTOPROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_CPU_AUTOPROBE=y</xsl:when>
			<xsl:otherwise># GENERIC_CPU_AUTOPROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_BUS=y</xsl:when>
			<xsl:otherwise># SOC_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP=y</xsl:when>
			<xsl:otherwise># REGMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_AC97">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_AC97=y</xsl:when>
			<xsl:when test=". = 'module'">REGMAP_AC97=m</xsl:when>
			<xsl:otherwise># REGMAP_AC97 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">REGMAP_I2C=m</xsl:when>
			<xsl:otherwise># REGMAP_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">REGMAP_SPI=m</xsl:when>
			<xsl:otherwise># REGMAP_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_SPMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_SPMI=y</xsl:when>
			<xsl:when test=". = 'module'">REGMAP_SPMI=m</xsl:when>
			<xsl:otherwise># REGMAP_SPMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">REGMAP_MMIO=m</xsl:when>
			<xsl:otherwise># REGMAP_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGMAP_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGMAP_IRQ=y</xsl:when>
			<xsl:otherwise># REGMAP_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_SHARED_BUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_SHARED_BUFFER=y</xsl:when>
			<xsl:otherwise># DMA_SHARED_BUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FENCE_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FENCE_TRACE=y</xsl:when>
			<xsl:otherwise># FENCE_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_CMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_CMA=y</xsl:when>
			<xsl:otherwise># DMA_CMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_SIZE_MBYTES">
		CMA_SIZE_MBYTES=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CMA_SIZE_PERCENTAGE">
		CMA_SIZE_PERCENTAGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CMA_SIZE_SEL_MBYTES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_SIZE_SEL_MBYTES=y</xsl:when>
			<xsl:otherwise># CMA_SIZE_SEL_MBYTES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_SIZE_SEL_PERCENTAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_SIZE_SEL_PERCENTAGE=y</xsl:when>
			<xsl:otherwise># CMA_SIZE_SEL_PERCENTAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_SIZE_SEL_MIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_SIZE_SEL_MIN=y</xsl:when>
			<xsl:otherwise># CMA_SIZE_SEL_MIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_SIZE_SEL_MAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMA_SIZE_SEL_MAX=y</xsl:when>
			<xsl:otherwise># CMA_SIZE_SEL_MAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMA_ALIGNMENT">
		CMA_ALIGNMENT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARM_CCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI=y</xsl:when>
			<xsl:otherwise># ARM_CCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCI_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI_PMU=y</xsl:when>
			<xsl:otherwise># ARM_CCI_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCI400_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI400_COMMON=y</xsl:when>
			<xsl:otherwise># ARM_CCI400_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCI400_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI400_PMU=y</xsl:when>
			<xsl:otherwise># ARM_CCI400_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCI400_PORT_CTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI400_PORT_CTRL=y</xsl:when>
			<xsl:otherwise># ARM_CCI400_PORT_CTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCI5xx_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCI5xx_PMU=y</xsl:when>
			<xsl:otherwise># ARM_CCI5xx_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CCN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CCN=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_CCN=m</xsl:when>
			<xsl:otherwise># ARM_CCN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMSTB_GISB_ARB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMSTB_GISB_ARB=y</xsl:when>
			<xsl:otherwise># BRCMSTB_GISB_ARB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_WEIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_WEIM=y</xsl:when>
			<xsl:otherwise># IMX_WEIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_CDMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_CDMM=y</xsl:when>
			<xsl:otherwise># MIPS_CDMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_MBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_MBUS=y</xsl:when>
			<xsl:otherwise># MVEBU_MBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_INTERCONNECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_INTERCONNECT=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_INTERCONNECT=m</xsl:when>
			<xsl:otherwise># OMAP_INTERCONNECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_OCP2SCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_OCP2SCP=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_OCP2SCP=m</xsl:when>
			<xsl:otherwise># OMAP_OCP2SCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIMPLE_PM_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIMPLE_PM_BUS=y</xsl:when>
			<xsl:otherwise># SIMPLE_PM_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_RSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_RSB=y</xsl:when>
			<xsl:when test=". = 'module'">SUNXI_RSB=m</xsl:when>
			<xsl:otherwise># SUNXI_RSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_ACONNECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_ACONNECT=y</xsl:when>
			<xsl:otherwise># TEGRA_ACONNECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNIPHIER_SYSTEM_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNIPHIER_SYSTEM_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">UNIPHIER_SYSTEM_BUS=m</xsl:when>
			<xsl:otherwise># UNIPHIER_SYSTEM_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VEXPRESS_CONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VEXPRESS_CONFIG=y</xsl:when>
			<xsl:otherwise># VEXPRESS_CONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONNECTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONNECTOR=y</xsl:when>
			<xsl:when test=". = 'module'">CONNECTOR=m</xsl:when>
			<xsl:otherwise># CONNECTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_EVENTS=y</xsl:when>
			<xsl:otherwise># PROC_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD=y</xsl:when>
			<xsl:when test=". = 'module'">MTD=m</xsl:when>
			<xsl:otherwise># MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_TESTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_TESTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_TESTS=m</xsl:when>
			<xsl:otherwise># MTD_TESTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_REDBOOT_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_REDBOOT_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_REDBOOT_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_REDBOOT_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_REDBOOT_DIRECTORY_BLOCK">
		MTD_REDBOOT_DIRECTORY_BLOCK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTD_REDBOOT_PARTS_UNALLOCATED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_REDBOOT_PARTS_UNALLOCATED=y</xsl:when>
			<xsl:otherwise># MTD_REDBOOT_PARTS_UNALLOCATED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_REDBOOT_PARTS_READONLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_REDBOOT_PARTS_READONLY=y</xsl:when>
			<xsl:otherwise># MTD_REDBOOT_PARTS_READONLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CMDLINE_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CMDLINE_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CMDLINE_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_CMDLINE_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_AFS_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_AFS_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_AFS_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_AFS_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_OF_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_OF_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_OF_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_OF_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_AR7_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_AR7_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_AR7_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_AR7_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BCM63XX_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BCM63XX_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BCM63XX_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_BCM63XX_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BCM47XX_PARTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BCM47XX_PARTS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BCM47XX_PARTS=m</xsl:when>
			<xsl:otherwise># MTD_BCM47XX_PARTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BLKDEVS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BLKDEVS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BLKDEVS=m</xsl:when>
			<xsl:otherwise># MTD_BLKDEVS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BLOCK=m</xsl:when>
			<xsl:otherwise># MTD_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BLOCK_RO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BLOCK_RO=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BLOCK_RO=m</xsl:when>
			<xsl:otherwise># MTD_BLOCK_RO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FTL=y</xsl:when>
			<xsl:when test=". = 'module'">FTL=m</xsl:when>
			<xsl:otherwise># FTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFTL=y</xsl:when>
			<xsl:when test=". = 'module'">NFTL=m</xsl:when>
			<xsl:otherwise># NFTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFTL_RW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFTL_RW=y</xsl:when>
			<xsl:otherwise># NFTL_RW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFTL=y</xsl:when>
			<xsl:when test=". = 'module'">INFTL=m</xsl:when>
			<xsl:otherwise># INFTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RFD_FTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RFD_FTL=y</xsl:when>
			<xsl:when test=". = 'module'">RFD_FTL=m</xsl:when>
			<xsl:otherwise># RFD_FTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSFDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSFDC=y</xsl:when>
			<xsl:when test=". = 'module'">SSFDC=m</xsl:when>
			<xsl:otherwise># SSFDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SM_FTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SM_FTL=y</xsl:when>
			<xsl:when test=". = 'module'">SM_FTL=m</xsl:when>
			<xsl:otherwise># SM_FTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_OOPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_OOPS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_OOPS=m</xsl:when>
			<xsl:otherwise># MTD_OOPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SWAP=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SWAP=m</xsl:when>
			<xsl:otherwise># MTD_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PARTITIONED_MASTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PARTITIONED_MASTER=y</xsl:when>
			<xsl:otherwise># MTD_PARTITIONED_MASTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI=m</xsl:when>
			<xsl:otherwise># MTD_CFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_JEDECPROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_JEDECPROBE=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_JEDECPROBE=m</xsl:when>
			<xsl:otherwise># MTD_JEDECPROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_GEN_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_GEN_PROBE=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_GEN_PROBE=m</xsl:when>
			<xsl:otherwise># MTD_GEN_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_ADV_OPTIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_ADV_OPTIONS=y</xsl:when>
			<xsl:otherwise># MTD_CFI_ADV_OPTIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_NOSWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_NOSWAP=y</xsl:when>
			<xsl:otherwise># MTD_CFI_NOSWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_BE_BYTE_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_BE_BYTE_SWAP=y</xsl:when>
			<xsl:otherwise># MTD_CFI_BE_BYTE_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_LE_BYTE_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_LE_BYTE_SWAP=y</xsl:when>
			<xsl:otherwise># MTD_CFI_LE_BYTE_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_GEOMETRY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_GEOMETRY=y</xsl:when>
			<xsl:otherwise># MTD_CFI_GEOMETRY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_1=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_2=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_4=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_8=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_16=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MAP_BANK_WIDTH_32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MAP_BANK_WIDTH_32=y</xsl:when>
			<xsl:otherwise># MTD_MAP_BANK_WIDTH_32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_I1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_I1=y</xsl:when>
			<xsl:otherwise># MTD_CFI_I1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_I2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_I2=y</xsl:when>
			<xsl:otherwise># MTD_CFI_I2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_I4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_I4=y</xsl:when>
			<xsl:otherwise># MTD_CFI_I4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_I8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_I8=y</xsl:when>
			<xsl:otherwise># MTD_CFI_I8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_OTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_OTP=y</xsl:when>
			<xsl:otherwise># MTD_OTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_INTELEXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_INTELEXT=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI_INTELEXT=m</xsl:when>
			<xsl:otherwise># MTD_CFI_INTELEXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_AMDSTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_AMDSTD=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI_AMDSTD=m</xsl:when>
			<xsl:otherwise># MTD_CFI_AMDSTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_STAA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_STAA=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI_STAA=m</xsl:when>
			<xsl:otherwise># MTD_CFI_STAA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_UTIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_UTIL=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI_UTIL=m</xsl:when>
			<xsl:otherwise># MTD_CFI_UTIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_RAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_RAM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_RAM=m</xsl:when>
			<xsl:otherwise># MTD_RAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ROM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ROM=m</xsl:when>
			<xsl:otherwise># MTD_ROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ABSENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ABSENT=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ABSENT=m</xsl:when>
			<xsl:otherwise># MTD_ABSENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_XIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_XIP=y</xsl:when>
			<xsl:otherwise># MTD_XIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_COMPLEX_MAPPINGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_COMPLEX_MAPPINGS=y</xsl:when>
			<xsl:otherwise># MTD_COMPLEX_MAPPINGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PHYSMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PHYSMAP=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PHYSMAP=m</xsl:when>
			<xsl:otherwise># MTD_PHYSMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PHYSMAP_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PHYSMAP_COMPAT=y</xsl:when>
			<xsl:otherwise># MTD_PHYSMAP_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PHYSMAP_BANKWIDTH">
		MTD_PHYSMAP_BANKWIDTH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTD_PHYSMAP_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PHYSMAP_OF=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PHYSMAP_OF=m</xsl:when>
			<xsl:otherwise># MTD_PHYSMAP_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PHYSMAP_OF_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PHYSMAP_OF_VERSATILE=y</xsl:when>
			<xsl:otherwise># MTD_PHYSMAP_OF_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PMC_MSP_EVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PMC_MSP_EVM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PMC_MSP_EVM=m</xsl:when>
			<xsl:otherwise># MTD_PMC_MSP_EVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSP_FLASH_MAP_LIMIT_32M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSP_FLASH_MAP_LIMIT_32M=y</xsl:when>
			<xsl:otherwise># MSP_FLASH_MAP_LIMIT_32M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SUN_UFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SUN_UFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SUN_UFLASH=m</xsl:when>
			<xsl:otherwise># MTD_SUN_UFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SC520CDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SC520CDP=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SC520CDP=m</xsl:when>
			<xsl:otherwise># MTD_SC520CDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NETSC520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NETSC520=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NETSC520=m</xsl:when>
			<xsl:otherwise># MTD_NETSC520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_TS5500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_TS5500=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_TS5500=m</xsl:when>
			<xsl:otherwise># MTD_TS5500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SBC_GXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SBC_GXX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SBC_GXX=m</xsl:when>
			<xsl:otherwise># MTD_SBC_GXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PXA2XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PXA2XX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PXA2XX=m</xsl:when>
			<xsl:otherwise># MTD_PXA2XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SCx200_DOCFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SCx200_DOCFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SCx200_DOCFLASH=m</xsl:when>
			<xsl:otherwise># MTD_SCx200_DOCFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_AMD76XROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_AMD76XROM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_AMD76XROM=m</xsl:when>
			<xsl:otherwise># MTD_AMD76XROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ICHXROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ICHXROM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ICHXROM=m</xsl:when>
			<xsl:otherwise># MTD_ICHXROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ESB2ROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ESB2ROM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ESB2ROM=m</xsl:when>
			<xsl:otherwise># MTD_ESB2ROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CK804XROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CK804XROM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CK804XROM=m</xsl:when>
			<xsl:otherwise># MTD_CK804XROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SCB2_FLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SCB2_FLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SCB2_FLASH=m</xsl:when>
			<xsl:otherwise># MTD_SCB2_FLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_TSUNAMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_TSUNAMI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_TSUNAMI=m</xsl:when>
			<xsl:otherwise># MTD_TSUNAMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NETtel">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NETtel=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NETtel=m</xsl:when>
			<xsl:otherwise># MTD_NETtel is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_LANTIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_LANTIQ=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_LANTIQ=m</xsl:when>
			<xsl:otherwise># MTD_LANTIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_L440GX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_L440GX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_L440GX=m</xsl:when>
			<xsl:otherwise># MTD_L440GX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_CFI_FLAGADM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_CFI_FLAGADM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_CFI_FLAGADM=m</xsl:when>
			<xsl:otherwise># MTD_CFI_FLAGADM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SOLUTIONENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SOLUTIONENGINE=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SOLUTIONENGINE=m</xsl:when>
			<xsl:otherwise># MTD_SOLUTIONENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SA1100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SA1100=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SA1100=m</xsl:when>
			<xsl:otherwise># MTD_SA1100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_DC21285">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_DC21285=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_DC21285=m</xsl:when>
			<xsl:otherwise># MTD_DC21285 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_IXP4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_IXP4XX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_IXP4XX=m</xsl:when>
			<xsl:otherwise># MTD_IXP4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_IMPA7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_IMPA7=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_IMPA7=m</xsl:when>
			<xsl:otherwise># MTD_IMPA7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PCI=m</xsl:when>
			<xsl:otherwise># MTD_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PCMCIA=m</xsl:when>
			<xsl:otherwise># MTD_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PCMCIA_ANONYMOUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PCMCIA_ANONYMOUS=y</xsl:when>
			<xsl:otherwise># MTD_PCMCIA_ANONYMOUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BFIN_ASYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BFIN_ASYNC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BFIN_ASYNC=m</xsl:when>
			<xsl:otherwise># MTD_BFIN_ASYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_GPIO_ADDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_GPIO_ADDR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_GPIO_ADDR=m</xsl:when>
			<xsl:otherwise># MTD_GPIO_ADDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_UCLINUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_UCLINUX=y</xsl:when>
			<xsl:otherwise># MTD_UCLINUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_INTEL_VR_NOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_INTEL_VR_NOR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_INTEL_VR_NOR=m</xsl:when>
			<xsl:otherwise># MTD_INTEL_VR_NOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_RBTX4939">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_RBTX4939=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_RBTX4939=m</xsl:when>
			<xsl:otherwise># MTD_RBTX4939 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PLATRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PLATRAM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PLATRAM=m</xsl:when>
			<xsl:otherwise># MTD_PLATRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_VMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_VMU=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_VMU=m</xsl:when>
			<xsl:otherwise># MTD_VMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PISMO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PISMO=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PISMO=m</xsl:when>
			<xsl:otherwise># MTD_PISMO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_LATCH_ADDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_LATCH_ADDR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_LATCH_ADDR=m</xsl:when>
			<xsl:otherwise># MTD_LATCH_ADDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PMC551">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PMC551=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PMC551=m</xsl:when>
			<xsl:otherwise># MTD_PMC551 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PMC551_BUGFIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PMC551_BUGFIX=y</xsl:when>
			<xsl:otherwise># MTD_PMC551_BUGFIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PMC551_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PMC551_DEBUG=y</xsl:when>
			<xsl:otherwise># MTD_PMC551_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MS02NV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MS02NV=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_MS02NV=m</xsl:when>
			<xsl:otherwise># MTD_MS02NV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_DATAFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_DATAFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_DATAFLASH=m</xsl:when>
			<xsl:otherwise># MTD_DATAFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_DATAFLASH_WRITE_VERIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_DATAFLASH_WRITE_VERIFY=y</xsl:when>
			<xsl:otherwise># MTD_DATAFLASH_WRITE_VERIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_DATAFLASH_OTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_DATAFLASH_OTP=y</xsl:when>
			<xsl:otherwise># MTD_DATAFLASH_OTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_M25P80">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_M25P80=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_M25P80=m</xsl:when>
			<xsl:otherwise># MTD_M25P80 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SPEAR_SMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SPEAR_SMI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SPEAR_SMI=m</xsl:when>
			<xsl:otherwise># MTD_SPEAR_SMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SST25L">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SST25L=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SST25L=m</xsl:when>
			<xsl:otherwise># MTD_SST25L is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_BCM47XXSFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BCM47XXSFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BCM47XXSFLASH=m</xsl:when>
			<xsl:otherwise># MTD_BCM47XXSFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SLRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SLRAM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SLRAM=m</xsl:when>
			<xsl:otherwise># MTD_SLRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_PHRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_PHRAM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_PHRAM=m</xsl:when>
			<xsl:otherwise># MTD_PHRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_LART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_LART=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_LART=m</xsl:when>
			<xsl:otherwise># MTD_LART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MTDRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MTDRAM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_MTDRAM=m</xsl:when>
			<xsl:otherwise># MTD_MTDRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTDRAM_TOTAL_SIZE">
		MTDRAM_TOTAL_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTDRAM_ERASE_SIZE">
		MTDRAM_ERASE_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTD_BLOCK2MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_BLOCK2MTD=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_BLOCK2MTD=m</xsl:when>
			<xsl:otherwise># MTD_BLOCK2MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_POWERNV_FLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_POWERNV_FLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_POWERNV_FLASH=m</xsl:when>
			<xsl:otherwise># MTD_POWERNV_FLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_DOCG3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_DOCG3=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_DOCG3=m</xsl:when>
			<xsl:otherwise># MTD_DOCG3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ST_SPI_FSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ST_SPI_FSM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ST_SPI_FSM=m</xsl:when>
			<xsl:otherwise># MTD_ST_SPI_FSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_ECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_ECC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_ECC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_ECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_ECC_SMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_ECC_SMC=y</xsl:when>
			<xsl:otherwise># MTD_NAND_ECC_SMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND=m</xsl:when>
			<xsl:otherwise># MTD_NAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BCH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_BCH=m</xsl:when>
			<xsl:otherwise># MTD_NAND_BCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_ECC_BCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_ECC_BCH=y</xsl:when>
			<xsl:otherwise># MTD_NAND_ECC_BCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SM_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SM_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SM_COMMON=m</xsl:when>
			<xsl:otherwise># MTD_SM_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DENALI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DENALI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DENALI=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DENALI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DENALI_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DENALI_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DENALI_PCI=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DENALI_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DENALI_DT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DENALI_DT=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DENALI_DT=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DENALI_DT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_GPIO=m</xsl:when>
			<xsl:otherwise># MTD_NAND_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_AMS_DELTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_AMS_DELTA=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_AMS_DELTA=m</xsl:when>
			<xsl:otherwise># MTD_NAND_AMS_DELTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_OMAP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_OMAP2=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_OMAP2=m</xsl:when>
			<xsl:otherwise># MTD_NAND_OMAP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_OMAP_BCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_OMAP_BCH=y</xsl:when>
			<xsl:otherwise># MTD_NAND_OMAP_BCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_OMAP_BCH_BUILD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_OMAP_BCH_BUILD=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_OMAP_BCH_BUILD=m</xsl:when>
			<xsl:otherwise># MTD_NAND_OMAP_BCH_BUILD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_IDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_IDS=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_IDS=m</xsl:when>
			<xsl:otherwise># MTD_NAND_IDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_RICOH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_RICOH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_RICOH=m</xsl:when>
			<xsl:otherwise># MTD_NAND_RICOH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_AU1550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_AU1550=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_AU1550=m</xsl:when>
			<xsl:otherwise># MTD_NAND_AU1550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BF5XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BF5XX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_BF5XX=m</xsl:when>
			<xsl:otherwise># MTD_NAND_BF5XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BF5XX_HWECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BF5XX_HWECC=y</xsl:when>
			<xsl:otherwise># MTD_NAND_BF5XX_HWECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BF5XX_BOOTROM_ECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BF5XX_BOOTROM_ECC=y</xsl:when>
			<xsl:otherwise># MTD_NAND_BF5XX_BOOTROM_ECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_S3C2410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_S3C2410=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_S3C2410=m</xsl:when>
			<xsl:otherwise># MTD_NAND_S3C2410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_S3C2410_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_S3C2410_DEBUG=y</xsl:when>
			<xsl:otherwise># MTD_NAND_S3C2410_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_S3C2410_HWECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_S3C2410_HWECC=y</xsl:when>
			<xsl:otherwise># MTD_NAND_S3C2410_HWECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_NDFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_NDFC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_NDFC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_NDFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_S3C2410_CLKSTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_S3C2410_CLKSTOP=y</xsl:when>
			<xsl:otherwise># MTD_NAND_S3C2410_CLKSTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DISKONCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DISKONCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DISKONCHIP=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DISKONCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DISKONCHIP_PROBE_ADVANCED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DISKONCHIP_PROBE_ADVANCED=y</xsl:when>
			<xsl:otherwise># MTD_NAND_DISKONCHIP_PROBE_ADVANCED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DISKONCHIP_PROBE_HIGH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DISKONCHIP_PROBE_HIGH=y</xsl:when>
			<xsl:otherwise># MTD_NAND_DISKONCHIP_PROBE_HIGH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DISKONCHIP_BBTWRITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DISKONCHIP_BBTWRITE=y</xsl:when>
			<xsl:otherwise># MTD_NAND_DISKONCHIP_BBTWRITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DOCG4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DOCG4=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DOCG4=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DOCG4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_SHARPSL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_SHARPSL=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_SHARPSL=m</xsl:when>
			<xsl:otherwise># MTD_NAND_SHARPSL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_CAFE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_CAFE=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_CAFE=m</xsl:when>
			<xsl:otherwise># MTD_NAND_CAFE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_CS553X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_CS553X=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_CS553X=m</xsl:when>
			<xsl:otherwise># MTD_NAND_CS553X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_ATMEL=m</xsl:when>
			<xsl:otherwise># MTD_NAND_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_PXA3xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_PXA3xx=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_PXA3xx=m</xsl:when>
			<xsl:otherwise># MTD_NAND_PXA3xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_SLC_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_SLC_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_SLC_LPC32XX=m</xsl:when>
			<xsl:otherwise># MTD_NAND_SLC_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_MLC_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_MLC_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_MLC_LPC32XX=m</xsl:when>
			<xsl:otherwise># MTD_NAND_MLC_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_CM_X270">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_CM_X270=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_CM_X270=m</xsl:when>
			<xsl:otherwise># MTD_NAND_CM_X270 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_PASEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_PASEMI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_PASEMI=m</xsl:when>
			<xsl:otherwise># MTD_NAND_PASEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_TMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_TMIO=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_TMIO=m</xsl:when>
			<xsl:otherwise># MTD_NAND_TMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_NANDSIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_NANDSIM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_NANDSIM=m</xsl:when>
			<xsl:otherwise># MTD_NAND_NANDSIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_GPMI_NAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_GPMI_NAND=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_GPMI_NAND=m</xsl:when>
			<xsl:otherwise># MTD_NAND_GPMI_NAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BRCMNAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BRCMNAND=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_BRCMNAND=m</xsl:when>
			<xsl:otherwise># MTD_NAND_BRCMNAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_BCM47XXNFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_BCM47XXNFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_BCM47XXNFLASH=m</xsl:when>
			<xsl:otherwise># MTD_NAND_BCM47XXNFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_PLATFORM=m</xsl:when>
			<xsl:otherwise># MTD_NAND_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_ORION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_ORION=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_ORION=m</xsl:when>
			<xsl:otherwise># MTD_NAND_ORION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_FSL_ELBC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_FSL_ELBC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_FSL_ELBC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_FSL_ELBC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_FSL_IFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_FSL_IFC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_FSL_IFC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_FSL_IFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_FSL_UPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_FSL_UPM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_FSL_UPM=m</xsl:when>
			<xsl:otherwise># MTD_NAND_FSL_UPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_MPC5121_NFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_MPC5121_NFC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_MPC5121_NFC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_MPC5121_NFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_VF610_NFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_VF610_NFC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_VF610_NFC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_VF610_NFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_MXC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_MXC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_SH_FLCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_SH_FLCTL=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_SH_FLCTL=m</xsl:when>
			<xsl:otherwise># MTD_NAND_SH_FLCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_DAVINCI=m</xsl:when>
			<xsl:otherwise># MTD_NAND_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_TXX9NDFMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_TXX9NDFMC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_TXX9NDFMC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_TXX9NDFMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_SOCRATES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_SOCRATES=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_SOCRATES=m</xsl:when>
			<xsl:otherwise># MTD_NAND_SOCRATES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_NUC900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_NUC900=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_NUC900=m</xsl:when>
			<xsl:otherwise># MTD_NAND_NUC900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_JZ4740=m</xsl:when>
			<xsl:otherwise># MTD_NAND_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_JZ4780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_JZ4780=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_JZ4780=m</xsl:when>
			<xsl:otherwise># MTD_NAND_JZ4780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_FSMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_FSMC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_FSMC=m</xsl:when>
			<xsl:otherwise># MTD_NAND_FSMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_XWAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_XWAY=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_XWAY=m</xsl:when>
			<xsl:otherwise># MTD_NAND_XWAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_SUNXI=m</xsl:when>
			<xsl:otherwise># MTD_NAND_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_HISI504">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_HISI504=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_HISI504=m</xsl:when>
			<xsl:otherwise># MTD_NAND_HISI504 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_QCOM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_QCOM=m</xsl:when>
			<xsl:otherwise># MTD_NAND_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_NAND_MTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_NAND_MTK=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_NAND_MTK=m</xsl:when>
			<xsl:otherwise># MTD_NAND_MTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ONENAND=m</xsl:when>
			<xsl:otherwise># MTD_ONENAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_VERIFY_WRITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_VERIFY_WRITE=y</xsl:when>
			<xsl:otherwise># MTD_ONENAND_VERIFY_WRITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ONENAND_GENERIC=m</xsl:when>
			<xsl:otherwise># MTD_ONENAND_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_OMAP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_OMAP2=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ONENAND_OMAP2=m</xsl:when>
			<xsl:otherwise># MTD_ONENAND_OMAP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_SAMSUNG=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_ONENAND_SAMSUNG=m</xsl:when>
			<xsl:otherwise># MTD_ONENAND_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_OTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_OTP=y</xsl:when>
			<xsl:otherwise># MTD_ONENAND_OTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_ONENAND_2X_PROGRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_ONENAND_2X_PROGRAM=y</xsl:when>
			<xsl:otherwise># MTD_ONENAND_2X_PROGRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_LPDDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_LPDDR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_LPDDR=m</xsl:when>
			<xsl:otherwise># MTD_LPDDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_QINFO_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_QINFO_PROBE=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_QINFO_PROBE=m</xsl:when>
			<xsl:otherwise># MTD_QINFO_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_LPDDR2_NVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_LPDDR2_NVM=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_LPDDR2_NVM=m</xsl:when>
			<xsl:otherwise># MTD_LPDDR2_NVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SPI_NOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SPI_NOR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SPI_NOR=m</xsl:when>
			<xsl:otherwise># MTD_SPI_NOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_MT81xx_NOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_MT81xx_NOR=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_MT81xx_NOR=m</xsl:when>
			<xsl:otherwise># MTD_MT81xx_NOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SPI_NOR_USE_4K_SECTORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SPI_NOR_USE_4K_SECTORS=y</xsl:when>
			<xsl:otherwise># MTD_SPI_NOR_USE_4K_SECTORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ATMEL_QUADSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ATMEL_QUADSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ATMEL_QUADSPI=m</xsl:when>
			<xsl:otherwise># SPI_ATMEL_QUADSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_CADENCE_QUADSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_CADENCE_QUADSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_CADENCE_QUADSPI=m</xsl:when>
			<xsl:otherwise># SPI_CADENCE_QUADSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_QUADSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_QUADSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_QUADSPI=m</xsl:when>
			<xsl:otherwise># SPI_FSL_QUADSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_HISI_SFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_HISI_SFC=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_HISI_SFC=m</xsl:when>
			<xsl:otherwise># SPI_HISI_SFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_NXP_SPIFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_NXP_SPIFI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_NXP_SPIFI=m</xsl:when>
			<xsl:otherwise># SPI_NXP_SPIFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_UBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_UBI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_UBI=m</xsl:when>
			<xsl:otherwise># MTD_UBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_UBI_WL_THRESHOLD">
		MTD_UBI_WL_THRESHOLD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTD_UBI_BEB_LIMIT">
		MTD_UBI_BEB_LIMIT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MTD_UBI_FASTMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_UBI_FASTMAP=y</xsl:when>
			<xsl:otherwise># MTD_UBI_FASTMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_UBI_GLUEBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_UBI_GLUEBI=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_UBI_GLUEBI=m</xsl:when>
			<xsl:otherwise># MTD_UBI_GLUEBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_UBI_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_UBI_BLOCK=y</xsl:when>
			<xsl:otherwise># MTD_UBI_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DTC=y</xsl:when>
			<xsl:otherwise># DTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF=y</xsl:when>
			<xsl:otherwise># OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_UNITTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_UNITTEST=y</xsl:when>
			<xsl:otherwise># OF_UNITTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_ALL_DTBS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_ALL_DTBS=y</xsl:when>
			<xsl:otherwise># OF_ALL_DTBS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_FLATTREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_FLATTREE=y</xsl:when>
			<xsl:otherwise># OF_FLATTREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_EARLY_FLATTREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_EARLY_FLATTREE=y</xsl:when>
			<xsl:otherwise># OF_EARLY_FLATTREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_PROMTREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_PROMTREE=y</xsl:when>
			<xsl:otherwise># OF_PROMTREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_DYNAMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_DYNAMIC=y</xsl:when>
			<xsl:otherwise># OF_DYNAMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_ADDRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_ADDRESS=y</xsl:when>
			<xsl:otherwise># OF_ADDRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_ADDRESS_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_ADDRESS_PCI=y</xsl:when>
			<xsl:otherwise># OF_ADDRESS_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_IRQ=y</xsl:when>
			<xsl:otherwise># OF_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_NET=y</xsl:when>
			<xsl:otherwise># OF_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">OF_MDIO=m</xsl:when>
			<xsl:otherwise># OF_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">OF_PCI=m</xsl:when>
			<xsl:otherwise># OF_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_PCI_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_PCI_IRQ=y</xsl:when>
			<xsl:when test=". = 'module'">OF_PCI_IRQ=m</xsl:when>
			<xsl:otherwise># OF_PCI_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_MTD=y</xsl:when>
			<xsl:otherwise># OF_MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_RESERVED_MEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_RESERVED_MEM=y</xsl:when>
			<xsl:otherwise># OF_RESERVED_MEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_RESOLVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_RESOLVE=y</xsl:when>
			<xsl:otherwise># OF_RESOLVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_OVERLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_OVERLAY=y</xsl:when>
			<xsl:otherwise># OF_OVERLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_NUMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_NUMA=y</xsl:when>
			<xsl:otherwise># OF_NUMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MIGHT_HAVE_PC_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_MIGHT_HAVE_PC_PARPORT=y</xsl:when>
			<xsl:otherwise># ARCH_MIGHT_HAVE_PC_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT=m</xsl:when>
			<xsl:otherwise># PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_PC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_PC=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_PC=m</xsl:when>
			<xsl:otherwise># PARPORT_PC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_SERIAL=m</xsl:when>
			<xsl:otherwise># PARPORT_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_PC_FIFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_PC_FIFO=y</xsl:when>
			<xsl:otherwise># PARPORT_PC_FIFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_PC_SUPERIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_PC_SUPERIO=y</xsl:when>
			<xsl:otherwise># PARPORT_PC_SUPERIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_PC_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_PC_PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_PC_PCMCIA=m</xsl:when>
			<xsl:otherwise># PARPORT_PC_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_IP32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_IP32=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_IP32=m</xsl:when>
			<xsl:otherwise># PARPORT_IP32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_AMIGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_AMIGA=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_AMIGA=m</xsl:when>
			<xsl:otherwise># PARPORT_AMIGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_MFC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_MFC3=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_MFC3=m</xsl:when>
			<xsl:otherwise># PARPORT_MFC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_ATARI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_ATARI=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_ATARI=m</xsl:when>
			<xsl:otherwise># PARPORT_ATARI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_GSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_GSC=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_GSC=m</xsl:when>
			<xsl:otherwise># PARPORT_GSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_SUNBPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_SUNBPP=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_SUNBPP=m</xsl:when>
			<xsl:otherwise># PARPORT_SUNBPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_AX88796">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_AX88796=y</xsl:when>
			<xsl:when test=". = 'module'">PARPORT_AX88796=m</xsl:when>
			<xsl:otherwise># PARPORT_AX88796 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_1284">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_1284=y</xsl:when>
			<xsl:otherwise># PARPORT_1284 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARPORT_NOT_PC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARPORT_NOT_PC=y</xsl:when>
			<xsl:otherwise># PARPORT_NOT_PC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNP=y</xsl:when>
			<xsl:otherwise># PNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNP_DEBUG_MESSAGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNP_DEBUG_MESSAGES=y</xsl:when>
			<xsl:otherwise># PNP_DEBUG_MESSAGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISAPNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISAPNP=y</xsl:when>
			<xsl:otherwise># ISAPNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNPBIOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNPBIOS=y</xsl:when>
			<xsl:otherwise># PNPBIOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNPBIOS_PROC_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNPBIOS_PROC_FS=y</xsl:when>
			<xsl:otherwise># PNPBIOS_PROC_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNPACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNPACPI=y</xsl:when>
			<xsl:otherwise># PNPACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV=y</xsl:when>
			<xsl:otherwise># BLK_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_NULL_BLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_NULL_BLK=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_NULL_BLK=m</xsl:when>
			<xsl:otherwise># BLK_DEV_NULL_BLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_FD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_FD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_FD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_FD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMIGA_FLOPPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMIGA_FLOPPY=y</xsl:when>
			<xsl:when test=". = 'module'">AMIGA_FLOPPY=m</xsl:when>
			<xsl:otherwise># AMIGA_FLOPPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATARI_FLOPPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATARI_FLOPPY=y</xsl:when>
			<xsl:when test=". = 'module'">ATARI_FLOPPY=m</xsl:when>
			<xsl:otherwise># ATARI_FLOPPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC_FLOPPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC_FLOPPY=y</xsl:when>
			<xsl:when test=". = 'module'">MAC_FLOPPY=m</xsl:when>
			<xsl:otherwise># MAC_FLOPPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SWIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SWIM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SWIM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SWIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMIGA_Z2RAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMIGA_Z2RAM=y</xsl:when>
			<xsl:when test=". = 'module'">AMIGA_Z2RAM=m</xsl:when>
			<xsl:otherwise># AMIGA_Z2RAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GDROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GDROM=y</xsl:when>
			<xsl:when test=". = 'module'">GDROM=m</xsl:when>
			<xsl:otherwise># GDROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE=m</xsl:when>
			<xsl:otherwise># PARIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_PD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_PD=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_PD=m</xsl:when>
			<xsl:otherwise># PARIDE_PD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_PCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_PCD=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_PCD=m</xsl:when>
			<xsl:otherwise># PARIDE_PCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_PF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_PF=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_PF=m</xsl:when>
			<xsl:otherwise># PARIDE_PF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_PT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_PT=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_PT=m</xsl:when>
			<xsl:otherwise># PARIDE_PT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_PG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_PG=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_PG=m</xsl:when>
			<xsl:otherwise># PARIDE_PG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_ATEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_ATEN=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_ATEN=m</xsl:when>
			<xsl:otherwise># PARIDE_ATEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_BPCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_BPCK=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_BPCK=m</xsl:when>
			<xsl:otherwise># PARIDE_BPCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_BPCK6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_BPCK6=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_BPCK6=m</xsl:when>
			<xsl:otherwise># PARIDE_BPCK6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_COMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_COMM=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_COMM=m</xsl:when>
			<xsl:otherwise># PARIDE_COMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_DSTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_DSTR=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_DSTR=m</xsl:when>
			<xsl:otherwise># PARIDE_DSTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_FIT2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_FIT2=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_FIT2=m</xsl:when>
			<xsl:otherwise># PARIDE_FIT2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_FIT3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_FIT3=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_FIT3=m</xsl:when>
			<xsl:otherwise># PARIDE_FIT3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_EPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_EPAT=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_EPAT=m</xsl:when>
			<xsl:otherwise># PARIDE_EPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_EPATC8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_EPATC8=y</xsl:when>
			<xsl:otherwise># PARIDE_EPATC8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_EPIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_EPIA=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_EPIA=m</xsl:when>
			<xsl:otherwise># PARIDE_EPIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_FRIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_FRIQ=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_FRIQ=m</xsl:when>
			<xsl:otherwise># PARIDE_FRIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_FRPW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_FRPW=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_FRPW=m</xsl:when>
			<xsl:otherwise># PARIDE_FRPW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_KBIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_KBIC=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_KBIC=m</xsl:when>
			<xsl:otherwise># PARIDE_KBIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_KTTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_KTTI=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_KTTI=m</xsl:when>
			<xsl:otherwise># PARIDE_KTTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_ON20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_ON20=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_ON20=m</xsl:when>
			<xsl:otherwise># PARIDE_ON20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARIDE_ON26">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARIDE_ON26=y</xsl:when>
			<xsl:when test=". = 'module'">PARIDE_ON26=m</xsl:when>
			<xsl:otherwise># PARIDE_ON26 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PCIESSD_MTIP32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PCIESSD_MTIP32XX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PCIESSD_MTIP32XX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PCIESSD_MTIP32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZRAM=y</xsl:when>
			<xsl:when test=". = 'module'">ZRAM=m</xsl:when>
			<xsl:otherwise># ZRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_CPQ_CISS_DA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_CPQ_CISS_DA=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_CPQ_CISS_DA=m</xsl:when>
			<xsl:otherwise># BLK_CPQ_CISS_DA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CISS_SCSI_TAPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CISS_SCSI_TAPE=y</xsl:when>
			<xsl:otherwise># CISS_SCSI_TAPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DAC960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DAC960=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_DAC960=m</xsl:when>
			<xsl:otherwise># BLK_DEV_DAC960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_UMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_UMEM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_UMEM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_UMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_UBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_UBD=y</xsl:when>
			<xsl:otherwise># BLK_DEV_UBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_UBD_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_UBD_SYNC=y</xsl:when>
			<xsl:otherwise># BLK_DEV_UBD_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_COW_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_COW_COMMON=y</xsl:when>
			<xsl:otherwise># BLK_DEV_COW_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_LOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_LOOP=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_LOOP=m</xsl:when>
			<xsl:otherwise># BLK_DEV_LOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_LOOP_MIN_COUNT">
		BLK_DEV_LOOP_MIN_COUNT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BLK_DEV_CRYPTOLOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CRYPTOLOOP=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CRYPTOLOOP=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CRYPTOLOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DRBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DRBD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_DRBD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_DRBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_NBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_NBD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_NBD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_NBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SKD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SKD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SKD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SKD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_OSD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_OSD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_OSD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_OSD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SX8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SX8=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SX8=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SX8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_RAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_RAM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_RAM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_RAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_RAM_COUNT">
		BLK_DEV_RAM_COUNT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BLK_DEV_RAM_SIZE">
		BLK_DEV_RAM_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BLK_DEV_RAM_DAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_RAM_DAX=y</xsl:when>
			<xsl:otherwise># BLK_DEV_RAM_DAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CDROM_PKTCDVD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CDROM_PKTCDVD=y</xsl:when>
			<xsl:when test=". = 'module'">CDROM_PKTCDVD=m</xsl:when>
			<xsl:otherwise># CDROM_PKTCDVD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CDROM_PKTCDVD_BUFFERS">
		CDROM_PKTCDVD_BUFFERS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CDROM_PKTCDVD_WCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CDROM_PKTCDVD_WCACHE=y</xsl:when>
			<xsl:otherwise># CDROM_PKTCDVD_WCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_OVER_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_OVER_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">ATA_OVER_ETH=m</xsl:when>
			<xsl:otherwise># ATA_OVER_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MG_DISK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MG_DISK=y</xsl:when>
			<xsl:when test=". = 'module'">MG_DISK=m</xsl:when>
			<xsl:otherwise># MG_DISK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MG_DISK_RES">
		MG_DISK_RES=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SUNVDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNVDC=y</xsl:when>
			<xsl:when test=". = 'module'">SUNVDC=m</xsl:when>
			<xsl:otherwise># SUNVDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_XPRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_XPRAM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_XPRAM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_XPRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DCSSBLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DCSSBLK=y</xsl:when>
			<xsl:when test=". = 'module'">DCSSBLK=m</xsl:when>
			<xsl:otherwise># DCSSBLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD=y</xsl:when>
			<xsl:when test=". = 'module'">DASD=m</xsl:when>
			<xsl:otherwise># DASD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD_PROFILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD_PROFILE=y</xsl:when>
			<xsl:otherwise># DASD_PROFILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD_ECKD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD_ECKD=y</xsl:when>
			<xsl:when test=". = 'module'">DASD_ECKD=m</xsl:when>
			<xsl:otherwise># DASD_ECKD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD_FBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD_FBA=y</xsl:when>
			<xsl:when test=". = 'module'">DASD_FBA=m</xsl:when>
			<xsl:otherwise># DASD_FBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD_DIAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD_DIAG=y</xsl:when>
			<xsl:when test=". = 'module'">DASD_DIAG=m</xsl:when>
			<xsl:otherwise># DASD_DIAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DASD_EER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DASD_EER=y</xsl:when>
			<xsl:otherwise># DASD_EER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCM_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCM_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">SCM_BLOCK=m</xsl:when>
			<xsl:otherwise># SCM_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCM_BLOCK_CLUSTER_WRITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCM_BLOCK_CLUSTER_WRITE=y</xsl:when>
			<xsl:otherwise># SCM_BLOCK_CLUSTER_WRITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_SYSACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_SYSACE=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_SYSACE=m</xsl:when>
			<xsl:otherwise># XILINX_SYSACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BLKDEV_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_BLKDEV_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_BLKDEV_FRONTEND=m</xsl:when>
			<xsl:otherwise># XEN_BLKDEV_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BLKDEV_BACKEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_BLKDEV_BACKEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_BLKDEV_BACKEND=m</xsl:when>
			<xsl:otherwise># XEN_BLKDEV_BACKEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_BLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_BLK=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_BLK=m</xsl:when>
			<xsl:otherwise># VIRTIO_BLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_HD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_HD=y</xsl:when>
			<xsl:otherwise># BLK_DEV_HD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_RBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_RBD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_RBD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_RBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_RSXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_RSXX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_RSXX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_RSXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_CORE=m</xsl:when>
			<xsl:otherwise># NVME_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_NVME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_NVME=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_NVME=m</xsl:when>
			<xsl:otherwise># BLK_DEV_NVME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_NVME_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_NVME_SCSI=y</xsl:when>
			<xsl:otherwise># BLK_DEV_NVME_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_FABRICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_FABRICS=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_FABRICS=m</xsl:when>
			<xsl:otherwise># NVME_FABRICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_RDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_RDMA=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_RDMA=m</xsl:when>
			<xsl:otherwise># NVME_RDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_TARGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_TARGET=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_TARGET=m</xsl:when>
			<xsl:otherwise># NVME_TARGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_TARGET_LOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_TARGET_LOOP=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_TARGET_LOOP=m</xsl:when>
			<xsl:otherwise># NVME_TARGET_LOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVME_TARGET_RDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVME_TARGET_RDMA=y</xsl:when>
			<xsl:when test=". = 'module'">NVME_TARGET_RDMA=m</xsl:when>
			<xsl:otherwise># NVME_TARGET_RDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LIS3LV02D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LIS3LV02D=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LIS3LV02D=m</xsl:when>
			<xsl:otherwise># SENSORS_LIS3LV02D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD525X_DPOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD525X_DPOT=y</xsl:when>
			<xsl:when test=". = 'module'">AD525X_DPOT=m</xsl:when>
			<xsl:otherwise># AD525X_DPOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD525X_DPOT_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD525X_DPOT_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">AD525X_DPOT_I2C=m</xsl:when>
			<xsl:otherwise># AD525X_DPOT_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD525X_DPOT_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD525X_DPOT_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">AD525X_DPOT_SPI=m</xsl:when>
			<xsl:otherwise># AD525X_DPOT_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_TCLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_TCLIB=y</xsl:when>
			<xsl:otherwise># ATMEL_TCLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_TCB_CLKSRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_TCB_CLKSRC=y</xsl:when>
			<xsl:otherwise># ATMEL_TCB_CLKSRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_TCB_CLKSRC_BLOCK">
		ATMEL_TCB_CLKSRC_BLOCK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DUMMY_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DUMMY_IRQ=y</xsl:when>
			<xsl:when test=". = 'module'">DUMMY_IRQ=m</xsl:when>
			<xsl:otherwise># DUMMY_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_ASM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_ASM=y</xsl:when>
			<xsl:when test=". = 'module'">IBM_ASM=m</xsl:when>
			<xsl:otherwise># IBM_ASM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHANTOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHANTOM=y</xsl:when>
			<xsl:when test=". = 'module'">PHANTOM=m</xsl:when>
			<xsl:otherwise># PHANTOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MID_PTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MID_PTI=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MID_PTI=m</xsl:when>
			<xsl:otherwise># INTEL_MID_PTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_IOC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_IOC4=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_IOC4=m</xsl:when>
			<xsl:otherwise># SGI_IOC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIFM_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIFM_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TIFM_CORE=m</xsl:when>
			<xsl:otherwise># TIFM_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIFM_7XX1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIFM_7XX1=y</xsl:when>
			<xsl:when test=". = 'module'">TIFM_7XX1=m</xsl:when>
			<xsl:otherwise># TIFM_7XX1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ICS932S401">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ICS932S401=y</xsl:when>
			<xsl:when test=". = 'module'">ICS932S401=m</xsl:when>
			<xsl:otherwise># ICS932S401 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_SSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_SSC=y</xsl:when>
			<xsl:when test=". = 'module'">ATMEL_SSC=m</xsl:when>
			<xsl:otherwise># ATMEL_SSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENCLOSURE_SERVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENCLOSURE_SERVICES=y</xsl:when>
			<xsl:when test=". = 'module'">ENCLOSURE_SERVICES=m</xsl:when>
			<xsl:otherwise># ENCLOSURE_SERVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_XP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_XP=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_XP=m</xsl:when>
			<xsl:otherwise># SGI_XP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CS5535_MFGPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CS5535_MFGPT=y</xsl:when>
			<xsl:when test=". = 'module'">CS5535_MFGPT=m</xsl:when>
			<xsl:otherwise># CS5535_MFGPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CS5535_MFGPT_DEFAULT_IRQ">
		CS5535_MFGPT_DEFAULT_IRQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CS5535_CLOCK_EVENT_SRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CS5535_CLOCK_EVENT_SRC=y</xsl:when>
			<xsl:when test=". = 'module'">CS5535_CLOCK_EVENT_SRC=m</xsl:when>
			<xsl:otherwise># CS5535_CLOCK_EVENT_SRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_ILO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_ILO=y</xsl:when>
			<xsl:when test=". = 'module'">HP_ILO=m</xsl:when>
			<xsl:otherwise># HP_ILO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_COINCELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_COINCELL=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_COINCELL=m</xsl:when>
			<xsl:otherwise># QCOM_COINCELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_GRU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_GRU=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_GRU=m</xsl:when>
			<xsl:otherwise># SGI_GRU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_GRU_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_GRU_DEBUG=y</xsl:when>
			<xsl:otherwise># SGI_GRU_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APDS9802ALS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APDS9802ALS=y</xsl:when>
			<xsl:when test=". = 'module'">APDS9802ALS=m</xsl:when>
			<xsl:otherwise># APDS9802ALS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISL29003">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISL29003=y</xsl:when>
			<xsl:when test=". = 'module'">ISL29003=m</xsl:when>
			<xsl:otherwise># ISL29003 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISL29020">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISL29020=y</xsl:when>
			<xsl:when test=". = 'module'">ISL29020=m</xsl:when>
			<xsl:otherwise># ISL29020 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TSL2550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TSL2550=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TSL2550=m</xsl:when>
			<xsl:otherwise># SENSORS_TSL2550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_BH1770">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_BH1770=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_BH1770=m</xsl:when>
			<xsl:otherwise># SENSORS_BH1770 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_APDS990X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_APDS990X=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_APDS990X=m</xsl:when>
			<xsl:otherwise># SENSORS_APDS990X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HMC6352">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HMC6352=y</xsl:when>
			<xsl:when test=". = 'module'">HMC6352=m</xsl:when>
			<xsl:otherwise># HMC6352 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DS1682">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DS1682=y</xsl:when>
			<xsl:when test=". = 'module'">DS1682=m</xsl:when>
			<xsl:otherwise># DS1682 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAR13XX_PCIE_GADGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAR13XX_PCIE_GADGET=y</xsl:when>
			<xsl:otherwise># SPEAR13XX_PCIE_GADGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_DAC7512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_DAC7512=y</xsl:when>
			<xsl:when test=". = 'module'">TI_DAC7512=m</xsl:when>
			<xsl:otherwise># TI_DAC7512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMWARE_BALLOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMWARE_BALLOON=y</xsl:when>
			<xsl:when test=". = 'module'">VMWARE_BALLOON=m</xsl:when>
			<xsl:otherwise># VMWARE_BALLOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_CHARLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_CHARLCD=y</xsl:when>
			<xsl:otherwise># ARM_CHARLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP085">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP085=y</xsl:when>
			<xsl:when test=". = 'module'">BMP085=m</xsl:when>
			<xsl:otherwise># BMP085 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP085_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP085_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMP085_I2C=m</xsl:when>
			<xsl:otherwise># BMP085_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP085_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP085_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMP085_SPI=m</xsl:when>
			<xsl:otherwise># BMP085_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCH_PHUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCH_PHUB=y</xsl:when>
			<xsl:when test=". = 'module'">PCH_PHUB=m</xsl:when>
			<xsl:otherwise># PCH_PHUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SWITCH_FSA9480">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SWITCH_FSA9480=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SWITCH_FSA9480=m</xsl:when>
			<xsl:otherwise># USB_SWITCH_FSA9480 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LATTICE_ECP3_CONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LATTICE_ECP3_CONFIG=y</xsl:when>
			<xsl:when test=". = 'module'">LATTICE_ECP3_CONFIG=m</xsl:when>
			<xsl:otherwise># LATTICE_ECP3_CONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SRAM=y</xsl:when>
			<xsl:otherwise># SRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VEXPRESS_SYSCFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VEXPRESS_SYSCFG=y</xsl:when>
			<xsl:otherwise># VEXPRESS_SYSCFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PANEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PANEL=y</xsl:when>
			<xsl:when test=". = 'module'">PANEL=m</xsl:when>
			<xsl:otherwise># PANEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PANEL_PARPORT">
		PANEL_PARPORT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_PROFILE">
		PANEL_PROFILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_KEYPAD">
		PANEL_KEYPAD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD">
		PANEL_LCD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_HEIGHT">
		PANEL_LCD_HEIGHT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_WIDTH">
		PANEL_LCD_WIDTH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_BWIDTH">
		PANEL_LCD_BWIDTH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_HWIDTH">
		PANEL_LCD_HWIDTH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_CHARSET">
		PANEL_LCD_CHARSET=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PROTO">
		PANEL_LCD_PROTO=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_E">
		PANEL_LCD_PIN_E=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_RS">
		PANEL_LCD_PIN_RS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_RW">
		PANEL_LCD_PIN_RW=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_SCL">
		PANEL_LCD_PIN_SCL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_SDA">
		PANEL_LCD_PIN_SDA=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_LCD_PIN_BL">
		PANEL_LCD_PIN_BL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="PANEL_CHANGE_MESSAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PANEL_CHANGE_MESSAGE=y</xsl:when>
			<xsl:otherwise># PANEL_CHANGE_MESSAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PANEL_BOOT_MESSAGE">
		PANEL_BOOT_MESSAGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="C2PORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">C2PORT=y</xsl:when>
			<xsl:when test=". = 'module'">C2PORT=m</xsl:when>
			<xsl:otherwise># C2PORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="C2PORT_DURAMAR_2150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">C2PORT_DURAMAR_2150=y</xsl:when>
			<xsl:when test=". = 'module'">C2PORT_DURAMAR_2150=m</xsl:when>
			<xsl:otherwise># C2PORT_DURAMAR_2150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_AT24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_AT24=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_AT24=m</xsl:when>
			<xsl:otherwise># EEPROM_AT24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_AT25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_AT25=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_AT25=m</xsl:when>
			<xsl:otherwise># EEPROM_AT25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_LEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_LEGACY=m</xsl:when>
			<xsl:otherwise># EEPROM_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_MAX6875">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_MAX6875=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_MAX6875=m</xsl:when>
			<xsl:otherwise># EEPROM_MAX6875 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_93CX6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_93CX6=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_93CX6=m</xsl:when>
			<xsl:otherwise># EEPROM_93CX6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_93XX46">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_93XX46=y</xsl:when>
			<xsl:when test=". = 'module'">EEPROM_93XX46=m</xsl:when>
			<xsl:otherwise># EEPROM_93XX46 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEPROM_DIGSY_MTC_CFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEPROM_DIGSY_MTC_CFG=y</xsl:when>
			<xsl:otherwise># EEPROM_DIGSY_MTC_CFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CB710_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CB710_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">CB710_CORE=m</xsl:when>
			<xsl:otherwise># CB710_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CB710_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CB710_DEBUG=y</xsl:when>
			<xsl:otherwise># CB710_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CB710_DEBUG_ASSUMPTIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CB710_DEBUG_ASSUMPTIONS=y</xsl:when>
			<xsl:otherwise># CB710_DEBUG_ASSUMPTIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ST=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ST=m</xsl:when>
			<xsl:otherwise># TI_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LIS3_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LIS3_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LIS3_SPI=m</xsl:when>
			<xsl:otherwise># SENSORS_LIS3_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LIS3_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LIS3_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LIS3_I2C=m</xsl:when>
			<xsl:otherwise># SENSORS_LIS3_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALTERA_STAPL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALTERA_STAPL=y</xsl:when>
			<xsl:when test=". = 'module'">ALTERA_STAPL=m</xsl:when>
			<xsl:otherwise># ALTERA_STAPL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MEI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MEI=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MEI=m</xsl:when>
			<xsl:otherwise># INTEL_MEI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MEI_ME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MEI_ME=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MEI_ME=m</xsl:when>
			<xsl:otherwise># INTEL_MEI_ME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MEI_TXE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MEI_TXE=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MEI_TXE=m</xsl:when>
			<xsl:otherwise># INTEL_MEI_TXE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMWARE_VMCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMWARE_VMCI=y</xsl:when>
			<xsl:when test=". = 'module'">VMWARE_VMCI=m</xsl:when>
			<xsl:otherwise># VMWARE_VMCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MIC_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MIC_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MIC_BUS=m</xsl:when>
			<xsl:otherwise># INTEL_MIC_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCIF_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCIF_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">SCIF_BUS=m</xsl:when>
			<xsl:otherwise># SCIF_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VOP_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VOP_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">VOP_BUS=m</xsl:when>
			<xsl:otherwise># VOP_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MIC_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MIC_HOST=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MIC_HOST=m</xsl:when>
			<xsl:otherwise># INTEL_MIC_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MIC_CARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MIC_CARD=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MIC_CARD=m</xsl:when>
			<xsl:otherwise># INTEL_MIC_CARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCIF=y</xsl:when>
			<xsl:when test=". = 'module'">SCIF=m</xsl:when>
			<xsl:otherwise># SCIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIC_COSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIC_COSM=y</xsl:when>
			<xsl:when test=". = 'module'">MIC_COSM=m</xsl:when>
			<xsl:otherwise># MIC_COSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VOP=y</xsl:when>
			<xsl:when test=". = 'module'">VOP=m</xsl:when>
			<xsl:otherwise># VOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_RING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_RING=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST_RING=m</xsl:when>
			<xsl:otherwise># VHOST_RING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENWQE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENWQE=y</xsl:when>
			<xsl:when test=". = 'module'">GENWQE=m</xsl:when>
			<xsl:otherwise># GENWQE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENWQE_PLATFORM_ERROR_RECOVERY">
		GENWQE_PLATFORM_ERROR_RECOVERY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ECHO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ECHO=y</xsl:when>
			<xsl:when test=". = 'module'">ECHO=m</xsl:when>
			<xsl:otherwise># ECHO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CXL_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CXL_BASE=y</xsl:when>
			<xsl:otherwise># CXL_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CXL_AFU_DRIVER_OPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CXL_AFU_DRIVER_OPS=y</xsl:when>
			<xsl:otherwise># CXL_AFU_DRIVER_OPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CXL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CXL=y</xsl:when>
			<xsl:when test=". = 'module'">CXL=m</xsl:when>
			<xsl:otherwise># CXL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CXL_BIMODAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CXL_BIMODAL=y</xsl:when>
			<xsl:otherwise># CXL_BIMODAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_IDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_IDE=y</xsl:when>
			<xsl:otherwise># HAVE_IDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE=y</xsl:when>
			<xsl:when test=". = 'module'">IDE=m</xsl:when>
			<xsl:otherwise># IDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_XFER_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_XFER_MODE=y</xsl:when>
			<xsl:otherwise># IDE_XFER_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_TIMINGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_TIMINGS=y</xsl:when>
			<xsl:otherwise># IDE_TIMINGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_ATAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_ATAPI=y</xsl:when>
			<xsl:otherwise># IDE_ATAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_LEGACY=y</xsl:when>
			<xsl:otherwise># IDE_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_SATA=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_GD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_GD=y</xsl:when>
			<xsl:when test=". = 'module'">IDE_GD=m</xsl:when>
			<xsl:otherwise># IDE_GD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_GD_ATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_GD_ATA=y</xsl:when>
			<xsl:otherwise># IDE_GD_ATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_GD_ATAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_GD_ATAPI=y</xsl:when>
			<xsl:otherwise># IDE_GD_ATAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDECS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDECS=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDECS=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDECS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DELKIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DELKIN=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_DELKIN=m</xsl:when>
			<xsl:otherwise># BLK_DEV_DELKIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDECD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDECD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDECD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDECD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDECD_VERBOSE_ERRORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDECD_VERBOSE_ERRORS=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDECD_VERBOSE_ERRORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDETAPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDETAPE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDETAPE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDETAPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEACPI=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_TASK_IOCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_TASK_IOCTL=y</xsl:when>
			<xsl:otherwise># IDE_TASK_IOCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_PROC_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_PROC_FS=y</xsl:when>
			<xsl:otherwise># IDE_PROC_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDE_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDE_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">IDE_GENERIC=m</xsl:when>
			<xsl:otherwise># IDE_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PLATFORM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CMD640">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CMD640=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CMD640=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CMD640 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CMD640_ENHANCED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CMD640_ENHANCED=y</xsl:when>
			<xsl:otherwise># BLK_DEV_CMD640_ENHANCED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEPNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEPNP=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDEPNP=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEPNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEDMA_SFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEDMA_SFF=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEDMA_SFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEPCI=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDEPCI_PCIBUS_ORDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDEPCI_PCIBUS_ORDER=y</xsl:when>
			<xsl:otherwise># IDEPCI_PCIBUS_ORDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_OFFBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_OFFBOARD=y</xsl:when>
			<xsl:otherwise># BLK_DEV_OFFBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_GENERIC=m</xsl:when>
			<xsl:otherwise># BLK_DEV_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_OPTI621">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_OPTI621=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_OPTI621=m</xsl:when>
			<xsl:otherwise># BLK_DEV_OPTI621 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_RZ1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_RZ1000=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_RZ1000=m</xsl:when>
			<xsl:otherwise># BLK_DEV_RZ1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEDMA_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEDMA_PCI=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEDMA_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_AEC62XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_AEC62XX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_AEC62XX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_AEC62XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_ALI15X3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_ALI15X3=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_ALI15X3=m</xsl:when>
			<xsl:otherwise># BLK_DEV_ALI15X3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_AMD74XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_AMD74XX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_AMD74XX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_AMD74XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_ATIIXP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_ATIIXP=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_ATIIXP=m</xsl:when>
			<xsl:otherwise># BLK_DEV_ATIIXP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CMD64X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CMD64X=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CMD64X=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CMD64X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_TRIFLEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_TRIFLEX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_TRIFLEX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_TRIFLEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CY82C693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CY82C693=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CY82C693=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CY82C693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CS5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CS5520=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CS5520=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CS5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CS5530">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CS5530=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CS5530=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CS5530 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CS5535">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CS5535=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CS5535=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CS5535 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_CS5536">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_CS5536=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_CS5536=m</xsl:when>
			<xsl:otherwise># BLK_DEV_CS5536 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_HPT366">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_HPT366=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_HPT366=m</xsl:when>
			<xsl:otherwise># BLK_DEV_HPT366 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_JMICRON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_JMICRON=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_JMICRON=m</xsl:when>
			<xsl:otherwise># BLK_DEV_JMICRON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SC1200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SC1200=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SC1200=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SC1200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PIIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PIIX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PIIX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PIIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IT8172">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IT8172=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IT8172=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IT8172 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IT8213">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IT8213=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IT8213=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IT8213 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IT821X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IT821X=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IT821X=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IT821X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_NS87415">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_NS87415=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_NS87415=m</xsl:when>
			<xsl:otherwise># BLK_DEV_NS87415 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PDC202XX_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PDC202XX_OLD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PDC202XX_OLD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PDC202XX_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PDC202XX_NEW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PDC202XX_NEW=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PDC202XX_NEW=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PDC202XX_NEW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SVWKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SVWKS=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SVWKS=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SVWKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SGIIOC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SGIIOC4=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SGIIOC4=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SGIIOC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SIIMAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SIIMAGE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SIIMAGE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SIIMAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SIS5513">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SIS5513=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SIS5513=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SIS5513 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SL82C105">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SL82C105=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SL82C105=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SL82C105 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SLC90E66">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SLC90E66=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SLC90E66=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SLC90E66 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_TRM290">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_TRM290=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_TRM290=m</xsl:when>
			<xsl:otherwise># BLK_DEV_TRM290 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_VIA82CXXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_VIA82CXXX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_VIA82CXXX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_VIA82CXXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_TC86C001">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_TC86C001=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_TC86C001=m</xsl:when>
			<xsl:otherwise># BLK_DEV_TC86C001 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_PMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_PMAC=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDE_PMAC=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_PMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_PMAC_ATA100FIRST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_PMAC_ATA100FIRST=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_PMAC_ATA100FIRST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_AU1XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_AU1XXX=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_AU1XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_AU1XXX_PIO_DBDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_AU1XXX_PIO_DBDMA=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_AU1XXX_PIO_DBDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_AU1XXX_MDMA2_DBDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_AU1XXX_MDMA2_DBDMA=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_AU1XXX_MDMA2_DBDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_TX4938">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_TX4938=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDE_TX4938=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_TX4938 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_TX4939">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_TX4939=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDE_TX4939=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_TX4939 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_ICSIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_ICSIDE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDE_ICSIDE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_ICSIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEDMA_ICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEDMA_ICS=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEDMA_ICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDE_RAPIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDE_RAPIDE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_IDE_RAPIDE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_IDE_RAPIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_GAYLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_GAYLE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_GAYLE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_GAYLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_BUDDHA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_BUDDHA=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_BUDDHA=m</xsl:when>
			<xsl:otherwise># BLK_DEV_BUDDHA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_FALCON_IDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_FALCON_IDE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_FALCON_IDE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_FALCON_IDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_MAC_IDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_MAC_IDE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_MAC_IDE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_MAC_IDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_Q40IDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_Q40IDE=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_Q40IDE=m</xsl:when>
			<xsl:otherwise># BLK_DEV_Q40IDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PALMCHIP_BK3710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PALMCHIP_BK3710=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PALMCHIP_BK3710=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PALMCHIP_BK3710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_4DRIVES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_4DRIVES=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_4DRIVES=m</xsl:when>
			<xsl:otherwise># BLK_DEV_4DRIVES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_ALI14XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_ALI14XX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_ALI14XX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_ALI14XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DTC2278">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DTC2278=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_DTC2278=m</xsl:when>
			<xsl:otherwise># BLK_DEV_DTC2278 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_HT6560B">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_HT6560B=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_HT6560B=m</xsl:when>
			<xsl:otherwise># BLK_DEV_HT6560B is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_QD65XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_QD65XX=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_QD65XX=m</xsl:when>
			<xsl:otherwise># BLK_DEV_QD65XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_UMC8672">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_UMC8672=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_UMC8672=m</xsl:when>
			<xsl:otherwise># BLK_DEV_UMC8672 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_IDEDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_IDEDMA=y</xsl:when>
			<xsl:otherwise># BLK_DEV_IDEDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MOD=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MOD=m</xsl:when>
			<xsl:otherwise># SCSI_MOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAID_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAID_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">RAID_ATTRS=m</xsl:when>
			<xsl:otherwise># RAID_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI=m</xsl:when>
			<xsl:otherwise># SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DMA=y</xsl:when>
			<xsl:otherwise># SCSI_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NETLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NETLINK=y</xsl:when>
			<xsl:otherwise># SCSI_NETLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MQ_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MQ_DEFAULT=y</xsl:when>
			<xsl:otherwise># SCSI_MQ_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_PROC_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_PROC_FS=y</xsl:when>
			<xsl:otherwise># SCSI_PROC_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHR_DEV_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHR_DEV_ST=y</xsl:when>
			<xsl:when test=". = 'module'">CHR_DEV_ST=m</xsl:when>
			<xsl:otherwise># CHR_DEV_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHR_DEV_OSST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHR_DEV_OSST=y</xsl:when>
			<xsl:when test=". = 'module'">CHR_DEV_OSST=m</xsl:when>
			<xsl:otherwise># CHR_DEV_OSST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SR=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_SR=m</xsl:when>
			<xsl:otherwise># BLK_DEV_SR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_SR_VENDOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_SR_VENDOR=y</xsl:when>
			<xsl:otherwise># BLK_DEV_SR_VENDOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHR_DEV_SG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHR_DEV_SG=y</xsl:when>
			<xsl:when test=". = 'module'">CHR_DEV_SG=m</xsl:when>
			<xsl:otherwise># CHR_DEV_SG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHR_DEV_SCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHR_DEV_SCH=y</xsl:when>
			<xsl:when test=". = 'module'">CHR_DEV_SCH=m</xsl:when>
			<xsl:otherwise># CHR_DEV_SCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ENCLOSURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ENCLOSURE=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ENCLOSURE=m</xsl:when>
			<xsl:otherwise># SCSI_ENCLOSURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CONSTANTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CONSTANTS=y</xsl:when>
			<xsl:otherwise># SCSI_CONSTANTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LOGGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LOGGING=y</xsl:when>
			<xsl:otherwise># SCSI_LOGGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SCAN_ASYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SCAN_ASYNC=y</xsl:when>
			<xsl:otherwise># SCSI_SCAN_ASYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SPI_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SPI_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SPI_ATTRS=m</xsl:when>
			<xsl:otherwise># SCSI_SPI_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_FC_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_FC_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_FC_ATTRS=m</xsl:when>
			<xsl:otherwise># SCSI_FC_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ISCSI_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ISCSI_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ISCSI_ATTRS=m</xsl:when>
			<xsl:otherwise># SCSI_ISCSI_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SAS_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SAS_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SAS_ATTRS=m</xsl:when>
			<xsl:otherwise># SCSI_SAS_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SAS_LIBSAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SAS_LIBSAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SAS_LIBSAS=m</xsl:when>
			<xsl:otherwise># SCSI_SAS_LIBSAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SAS_ATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SAS_ATA=y</xsl:when>
			<xsl:otherwise># SCSI_SAS_ATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SAS_HOST_SMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SAS_HOST_SMP=y</xsl:when>
			<xsl:otherwise># SCSI_SAS_HOST_SMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SRP_ATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SRP_ATTRS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SRP_ATTRS=m</xsl:when>
			<xsl:otherwise># SCSI_SRP_ATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LOWLEVEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LOWLEVEL=y</xsl:when>
			<xsl:otherwise># SCSI_LOWLEVEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_TCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_TCP=y</xsl:when>
			<xsl:when test=". = 'module'">ISCSI_TCP=m</xsl:when>
			<xsl:otherwise># ISCSI_TCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_BOOT_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_BOOT_SYSFS=y</xsl:when>
			<xsl:when test=". = 'module'">ISCSI_BOOT_SYSFS=m</xsl:when>
			<xsl:otherwise># ISCSI_BOOT_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CXGB3_ISCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CXGB3_ISCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_CXGB3_ISCSI=m</xsl:when>
			<xsl:otherwise># SCSI_CXGB3_ISCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CXGB4_ISCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CXGB4_ISCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_CXGB4_ISCSI=m</xsl:when>
			<xsl:otherwise># SCSI_CXGB4_ISCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_BNX2_ISCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_BNX2_ISCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_BNX2_ISCSI=m</xsl:when>
			<xsl:otherwise># SCSI_BNX2_ISCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_BNX2X_FCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_BNX2X_FCOE=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_BNX2X_FCOE=m</xsl:when>
			<xsl:otherwise># SCSI_BNX2X_FCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BE2ISCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BE2ISCSI=y</xsl:when>
			<xsl:when test=". = 'module'">BE2ISCSI=m</xsl:when>
			<xsl:otherwise># BE2ISCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CXLFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CXLFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">CXLFLASH=m</xsl:when>
			<xsl:otherwise># CXLFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGIWD93_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGIWD93_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SGIWD93_SCSI=m</xsl:when>
			<xsl:otherwise># SGIWD93_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_3W_XXXX_RAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_3W_XXXX_RAID=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_3W_XXXX_RAID=m</xsl:when>
			<xsl:otherwise># BLK_DEV_3W_XXXX_RAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_HPSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_HPSA=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_HPSA=m</xsl:when>
			<xsl:otherwise># SCSI_HPSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_3W_9XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_3W_9XXX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_3W_9XXX=m</xsl:when>
			<xsl:otherwise># SCSI_3W_9XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_3W_SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_3W_SAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_3W_SAS=m</xsl:when>
			<xsl:otherwise># SCSI_3W_SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_7000FASST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_7000FASST=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_7000FASST=m</xsl:when>
			<xsl:otherwise># SCSI_7000FASST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ACARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ACARD=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ACARD=m</xsl:when>
			<xsl:otherwise># SCSI_ACARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AHA152X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AHA152X=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AHA152X=m</xsl:when>
			<xsl:otherwise># SCSI_AHA152X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AHA1542">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AHA1542=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AHA1542=m</xsl:when>
			<xsl:otherwise># SCSI_AHA1542 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AHA1740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AHA1740=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AHA1740=m</xsl:when>
			<xsl:otherwise># SCSI_AHA1740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AACRAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AACRAID=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AACRAID=m</xsl:when>
			<xsl:otherwise># SCSI_AACRAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AIC7XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AIC7XXX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AIC7XXX=m</xsl:when>
			<xsl:otherwise># SCSI_AIC7XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC7XXX_CMDS_PER_DEVICE">
		AIC7XXX_CMDS_PER_DEVICE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC7XXX_RESET_DELAY_MS">
		AIC7XXX_RESET_DELAY_MS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC7XXX_BUILD_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC7XXX_BUILD_FIRMWARE=y</xsl:when>
			<xsl:otherwise># AIC7XXX_BUILD_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC7XXX_DEBUG_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC7XXX_DEBUG_ENABLE=y</xsl:when>
			<xsl:otherwise># AIC7XXX_DEBUG_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC7XXX_DEBUG_MASK">
		AIC7XXX_DEBUG_MASK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC7XXX_REG_PRETTY_PRINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC7XXX_REG_PRETTY_PRINT=y</xsl:when>
			<xsl:otherwise># AIC7XXX_REG_PRETTY_PRINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AIC79XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AIC79XX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AIC79XX=m</xsl:when>
			<xsl:otherwise># SCSI_AIC79XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC79XX_CMDS_PER_DEVICE">
		AIC79XX_CMDS_PER_DEVICE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC79XX_RESET_DELAY_MS">
		AIC79XX_RESET_DELAY_MS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC79XX_BUILD_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC79XX_BUILD_FIRMWARE=y</xsl:when>
			<xsl:otherwise># AIC79XX_BUILD_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC79XX_DEBUG_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC79XX_DEBUG_ENABLE=y</xsl:when>
			<xsl:otherwise># AIC79XX_DEBUG_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC79XX_DEBUG_MASK">
		AIC79XX_DEBUG_MASK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="AIC79XX_REG_PRETTY_PRINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC79XX_REG_PRETTY_PRINT=y</xsl:when>
			<xsl:otherwise># AIC79XX_REG_PRETTY_PRINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AIC94XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AIC94XX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AIC94XX=m</xsl:when>
			<xsl:otherwise># SCSI_AIC94XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIC94XX_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIC94XX_DEBUG=y</xsl:when>
			<xsl:otherwise># AIC94XX_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_HISI_SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_HISI_SAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_HISI_SAS=m</xsl:when>
			<xsl:otherwise># SCSI_HISI_SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MVSAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MVSAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MVSAS=m</xsl:when>
			<xsl:otherwise># SCSI_MVSAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MVSAS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MVSAS_DEBUG=y</xsl:when>
			<xsl:otherwise># SCSI_MVSAS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MVSAS_TASKLET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MVSAS_TASKLET=y</xsl:when>
			<xsl:otherwise># SCSI_MVSAS_TASKLET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MVUMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MVUMI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MVUMI=m</xsl:when>
			<xsl:otherwise># SCSI_MVUMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DPT_I2O">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DPT_I2O=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DPT_I2O=m</xsl:when>
			<xsl:otherwise># SCSI_DPT_I2O is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ADVANSYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ADVANSYS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ADVANSYS=m</xsl:when>
			<xsl:otherwise># SCSI_ADVANSYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IN2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IN2000=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IN2000=m</xsl:when>
			<xsl:otherwise># SCSI_IN2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ARCMSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ARCMSR=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ARCMSR=m</xsl:when>
			<xsl:otherwise># SCSI_ARCMSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ESAS2R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ESAS2R=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ESAS2R=m</xsl:when>
			<xsl:otherwise># SCSI_ESAS2R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEGARAID_NEWGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEGARAID_NEWGEN=y</xsl:when>
			<xsl:otherwise># MEGARAID_NEWGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEGARAID_MM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEGARAID_MM=y</xsl:when>
			<xsl:when test=". = 'module'">MEGARAID_MM=m</xsl:when>
			<xsl:otherwise># MEGARAID_MM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEGARAID_MAILBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEGARAID_MAILBOX=y</xsl:when>
			<xsl:when test=". = 'module'">MEGARAID_MAILBOX=m</xsl:when>
			<xsl:otherwise># MEGARAID_MAILBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEGARAID_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEGARAID_LEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">MEGARAID_LEGACY=m</xsl:when>
			<xsl:otherwise># MEGARAID_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEGARAID_SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEGARAID_SAS=y</xsl:when>
			<xsl:when test=". = 'module'">MEGARAID_SAS=m</xsl:when>
			<xsl:otherwise># MEGARAID_SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MPT3SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MPT3SAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MPT3SAS=m</xsl:when>
			<xsl:otherwise># SCSI_MPT3SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MPT2SAS_MAX_SGE">
		SCSI_MPT2SAS_MAX_SGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_MPT3SAS_MAX_SGE">
		SCSI_MPT3SAS_MAX_SGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_MPT2SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MPT2SAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MPT2SAS=m</xsl:when>
			<xsl:otherwise># SCSI_MPT2SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFSHCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFSHCD=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFSHCD=m</xsl:when>
			<xsl:otherwise># SCSI_UFSHCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFSHCD_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFSHCD_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFSHCD_PCI=m</xsl:when>
			<xsl:otherwise># SCSI_UFSHCD_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFS_DWC_TC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFS_DWC_TC_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFS_DWC_TC_PCI=m</xsl:when>
			<xsl:otherwise># SCSI_UFS_DWC_TC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFSHCD_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFSHCD_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFSHCD_PLATFORM=m</xsl:when>
			<xsl:otherwise># SCSI_UFSHCD_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFS_DWC_TC_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFS_DWC_TC_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFS_DWC_TC_PLATFORM=m</xsl:when>
			<xsl:otherwise># SCSI_UFS_DWC_TC_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_UFS_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_UFS_QCOM=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_UFS_QCOM=m</xsl:when>
			<xsl:otherwise># SCSI_UFS_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_HPTIOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_HPTIOP=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_HPTIOP=m</xsl:when>
			<xsl:otherwise># SCSI_HPTIOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_BUSLOGIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_BUSLOGIC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_BUSLOGIC=m</xsl:when>
			<xsl:otherwise># SCSI_BUSLOGIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_FLASHPOINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_FLASHPOINT=y</xsl:when>
			<xsl:otherwise># SCSI_FLASHPOINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMWARE_PVSCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMWARE_PVSCSI=y</xsl:when>
			<xsl:when test=". = 'module'">VMWARE_PVSCSI=m</xsl:when>
			<xsl:otherwise># VMWARE_PVSCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SCSI_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SCSI_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_SCSI_FRONTEND=m</xsl:when>
			<xsl:otherwise># XEN_SCSI_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV_STORAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV_STORAGE=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV_STORAGE=m</xsl:when>
			<xsl:otherwise># HYPERV_STORAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBFC=y</xsl:when>
			<xsl:when test=". = 'module'">LIBFC=m</xsl:when>
			<xsl:otherwise># LIBFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBFCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBFCOE=y</xsl:when>
			<xsl:when test=". = 'module'">LIBFCOE=m</xsl:when>
			<xsl:otherwise># LIBFCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FCOE=y</xsl:when>
			<xsl:when test=". = 'module'">FCOE=m</xsl:when>
			<xsl:otherwise># FCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FCOE_FNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FCOE_FNIC=y</xsl:when>
			<xsl:when test=". = 'module'">FCOE_FNIC=m</xsl:when>
			<xsl:otherwise># FCOE_FNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SNIC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SNIC=m</xsl:when>
			<xsl:otherwise># SCSI_SNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SNIC_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SNIC_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># SCSI_SNIC_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DMX3191D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DMX3191D=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DMX3191D=m</xsl:when>
			<xsl:otherwise># SCSI_DMX3191D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DTC3280">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DTC3280=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DTC3280=m</xsl:when>
			<xsl:otherwise># SCSI_DTC3280 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_EATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_EATA=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_EATA=m</xsl:when>
			<xsl:otherwise># SCSI_EATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_EATA_TAGGED_QUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_EATA_TAGGED_QUEUE=y</xsl:when>
			<xsl:otherwise># SCSI_EATA_TAGGED_QUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_EATA_LINKED_COMMANDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_EATA_LINKED_COMMANDS=y</xsl:when>
			<xsl:otherwise># SCSI_EATA_LINKED_COMMANDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_EATA_MAX_TAGS">
		SCSI_EATA_MAX_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_EATA_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_EATA_PIO=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_EATA_PIO=m</xsl:when>
			<xsl:otherwise># SCSI_EATA_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_FUTURE_DOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_FUTURE_DOMAIN=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_FUTURE_DOMAIN=m</xsl:when>
			<xsl:otherwise># SCSI_FUTURE_DOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_GDTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_GDTH=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_GDTH=m</xsl:when>
			<xsl:otherwise># SCSI_GDTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ISCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ISCI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ISCI=m</xsl:when>
			<xsl:otherwise># SCSI_ISCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_GENERIC_NCR5380">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_GENERIC_NCR5380=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_GENERIC_NCR5380=m</xsl:when>
			<xsl:otherwise># SCSI_GENERIC_NCR5380 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_GENERIC_NCR5380_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_GENERIC_NCR5380_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_GENERIC_NCR5380_MMIO=m</xsl:when>
			<xsl:otherwise># SCSI_GENERIC_NCR5380_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IPS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IPS=m</xsl:when>
			<xsl:otherwise># SCSI_IPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IBMVSCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IBMVSCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IBMVSCSI=m</xsl:when>
			<xsl:otherwise># SCSI_IBMVSCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IBMVSCSIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IBMVSCSIS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IBMVSCSIS=m</xsl:when>
			<xsl:otherwise># SCSI_IBMVSCSIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IBMVFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IBMVFC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IBMVFC=m</xsl:when>
			<xsl:otherwise># SCSI_IBMVFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IBMVFC_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IBMVFC_TRACE=y</xsl:when>
			<xsl:otherwise># SCSI_IBMVFC_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_INITIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_INITIO=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_INITIO=m</xsl:when>
			<xsl:otherwise># SCSI_INITIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_INIA100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_INIA100=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_INIA100=m</xsl:when>
			<xsl:otherwise># SCSI_INIA100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_PPA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_PPA=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_PPA=m</xsl:when>
			<xsl:otherwise># SCSI_PPA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IMM=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IMM=m</xsl:when>
			<xsl:otherwise># SCSI_IMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IZIP_EPP16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IZIP_EPP16=y</xsl:when>
			<xsl:otherwise># SCSI_IZIP_EPP16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IZIP_SLOW_CTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IZIP_SLOW_CTR=y</xsl:when>
			<xsl:otherwise># SCSI_IZIP_SLOW_CTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NCR53C406A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NCR53C406A=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_NCR53C406A=m</xsl:when>
			<xsl:otherwise># SCSI_NCR53C406A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NCR_D700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NCR_D700=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_NCR_D700=m</xsl:when>
			<xsl:otherwise># SCSI_NCR_D700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LASI700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LASI700=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_LASI700=m</xsl:when>
			<xsl:otherwise># SCSI_LASI700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SNI_53C710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SNI_53C710=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SNI_53C710=m</xsl:when>
			<xsl:otherwise># SCSI_SNI_53C710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_53C700_LE_ON_BE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">53C700_LE_ON_BE=y</xsl:when>
			<xsl:otherwise># 53C700_LE_ON_BE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_STEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_STEX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_STEX=m</xsl:when>
			<xsl:otherwise># SCSI_STEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_53C700_BE_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">53C700_BE_BUS=y</xsl:when>
			<xsl:otherwise># 53C700_BE_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C8XX_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SYM53C8XX_2=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SYM53C8XX_2=m</xsl:when>
			<xsl:otherwise># SCSI_SYM53C8XX_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C8XX_DMA_ADDRESSING_MODE">
		SCSI_SYM53C8XX_DMA_ADDRESSING_MODE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C8XX_DEFAULT_TAGS">
		SCSI_SYM53C8XX_DEFAULT_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C8XX_MAX_TAGS">
		SCSI_SYM53C8XX_MAX_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C8XX_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SYM53C8XX_MMIO=y</xsl:when>
			<xsl:otherwise># SCSI_SYM53C8XX_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IPR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IPR=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_IPR=m</xsl:when>
			<xsl:otherwise># SCSI_IPR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IPR_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IPR_TRACE=y</xsl:when>
			<xsl:otherwise># SCSI_IPR_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_IPR_DUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_IPR_DUMP=y</xsl:when>
			<xsl:otherwise># SCSI_IPR_DUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ZALON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ZALON=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ZALON=m</xsl:when>
			<xsl:otherwise># SCSI_ZALON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NCR_Q720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NCR_Q720=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_NCR_Q720=m</xsl:when>
			<xsl:otherwise># SCSI_NCR_Q720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NCR53C8XX_DEFAULT_TAGS">
		SCSI_NCR53C8XX_DEFAULT_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_NCR53C8XX_MAX_TAGS">
		SCSI_NCR53C8XX_MAX_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_NCR53C8XX_SYNC">
		SCSI_NCR53C8XX_SYNC=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_NCR53C8XX_NO_DISCONNECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NCR53C8XX_NO_DISCONNECT=y</xsl:when>
			<xsl:otherwise># SCSI_NCR53C8XX_NO_DISCONNECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_PAS16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_PAS16=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_PAS16=m</xsl:when>
			<xsl:otherwise># SCSI_PAS16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_QLOGIC_FAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_QLOGIC_FAS=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_QLOGIC_FAS=m</xsl:when>
			<xsl:otherwise># SCSI_QLOGIC_FAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_QLOGIC_1280">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_QLOGIC_1280=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_QLOGIC_1280=m</xsl:when>
			<xsl:otherwise># SCSI_QLOGIC_1280 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_QLOGICPTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_QLOGICPTI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_QLOGICPTI=m</xsl:when>
			<xsl:otherwise># SCSI_QLOGICPTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_QLA_FC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_QLA_FC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_QLA_FC=m</xsl:when>
			<xsl:otherwise># SCSI_QLA_FC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_QLA2XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_QLA2XXX=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_QLA2XXX=m</xsl:when>
			<xsl:otherwise># TCM_QLA2XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_QLA2XXX_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_QLA2XXX_DEBUG=y</xsl:when>
			<xsl:otherwise># TCM_QLA2XXX_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_QLA_ISCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_QLA_ISCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_QLA_ISCSI=m</xsl:when>
			<xsl:otherwise># SCSI_QLA_ISCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LPFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LPFC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_LPFC=m</xsl:when>
			<xsl:otherwise># SCSI_LPFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LPFC_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LPFC_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># SCSI_LPFC_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SIM710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SIM710=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SIM710=m</xsl:when>
			<xsl:otherwise># SCSI_SIM710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SYM53C416">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SYM53C416=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SYM53C416=m</xsl:when>
			<xsl:otherwise># SCSI_SYM53C416 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DC395x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DC395x=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DC395x=m</xsl:when>
			<xsl:otherwise># SCSI_DC395x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_AM53C974">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_AM53C974=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_AM53C974=m</xsl:when>
			<xsl:otherwise># SCSI_AM53C974 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_T128">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_T128=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_T128=m</xsl:when>
			<xsl:otherwise># SCSI_T128 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_U14_34F">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_U14_34F=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_U14_34F=m</xsl:when>
			<xsl:otherwise># SCSI_U14_34F is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_U14_34F_TAGGED_QUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_U14_34F_TAGGED_QUEUE=y</xsl:when>
			<xsl:otherwise># SCSI_U14_34F_TAGGED_QUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_U14_34F_LINKED_COMMANDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_U14_34F_LINKED_COMMANDS=y</xsl:when>
			<xsl:otherwise># SCSI_U14_34F_LINKED_COMMANDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_U14_34F_MAX_TAGS">
		SCSI_U14_34F_MAX_TAGS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_ULTRASTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ULTRASTOR=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ULTRASTOR=m</xsl:when>
			<xsl:otherwise># SCSI_ULTRASTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_NSP32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_NSP32=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_NSP32=m</xsl:when>
			<xsl:otherwise># SCSI_NSP32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_WD719X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_WD719X=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_WD719X=m</xsl:when>
			<xsl:otherwise># SCSI_WD719X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DEBUG=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DEBUG=m</xsl:when>
			<xsl:otherwise># SCSI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MESH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MESH=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MESH=m</xsl:when>
			<xsl:otherwise># SCSI_MESH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MESH_SYNC_RATE">
		SCSI_MESH_SYNC_RATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_MESH_RESET_DELAY_MS">
		SCSI_MESH_RESET_DELAY_MS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_MAC53C94">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MAC53C94=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MAC53C94=m</xsl:when>
			<xsl:otherwise># SCSI_MAC53C94 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ACORNSCSI_3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ACORNSCSI_3=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ACORNSCSI_3=m</xsl:when>
			<xsl:otherwise># SCSI_ACORNSCSI_3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ACORNSCSI_TAGGED_QUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ACORNSCSI_TAGGED_QUEUE=y</xsl:when>
			<xsl:otherwise># SCSI_ACORNSCSI_TAGGED_QUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ACORNSCSI_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ACORNSCSI_SYNC=y</xsl:when>
			<xsl:otherwise># SCSI_ACORNSCSI_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ARXESCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ARXESCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ARXESCSI=m</xsl:when>
			<xsl:otherwise># SCSI_ARXESCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CUMANA_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CUMANA_2=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_CUMANA_2=m</xsl:when>
			<xsl:otherwise># SCSI_CUMANA_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_EESOXSCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_EESOXSCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_EESOXSCSI=m</xsl:when>
			<xsl:otherwise># SCSI_EESOXSCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_POWERTECSCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_POWERTECSCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_POWERTECSCSI=m</xsl:when>
			<xsl:otherwise># SCSI_POWERTECSCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CUMANA_1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CUMANA_1=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_CUMANA_1=m</xsl:when>
			<xsl:otherwise># SCSI_CUMANA_1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_OAK1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_OAK1=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_OAK1=m</xsl:when>
			<xsl:otherwise># SCSI_OAK1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JAZZ_ESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JAZZ_ESP=y</xsl:when>
			<xsl:otherwise># JAZZ_ESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="A3000_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">A3000_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">A3000_SCSI=m</xsl:when>
			<xsl:otherwise># A3000_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="A2091_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">A2091_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">A2091_SCSI=m</xsl:when>
			<xsl:otherwise># A2091_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GVP11_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GVP11_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">GVP11_SCSI=m</xsl:when>
			<xsl:otherwise># GVP11_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_A4000T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_A4000T=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_A4000T=m</xsl:when>
			<xsl:otherwise># SCSI_A4000T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_ZORRO7XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_ZORRO7XX=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_ZORRO7XX=m</xsl:when>
			<xsl:otherwise># SCSI_ZORRO7XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATARI_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATARI_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">ATARI_SCSI=m</xsl:when>
			<xsl:otherwise># ATARI_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">MAC_SCSI=m</xsl:when>
			<xsl:otherwise># MAC_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_MAC_ESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_MAC_ESP=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_MAC_ESP=m</xsl:when>
			<xsl:otherwise># SCSI_MAC_ESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVME147_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVME147_SCSI=y</xsl:when>
			<xsl:otherwise># MVME147_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVME16x_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVME16x_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">MVME16x_SCSI=m</xsl:when>
			<xsl:otherwise># MVME16x_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BVME6000_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BVME6000_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">BVME6000_SCSI=m</xsl:when>
			<xsl:otherwise># BVME6000_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN3_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN3_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">SUN3_SCSI=m</xsl:when>
			<xsl:otherwise># SUN3_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN3X_ESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN3X_ESP=y</xsl:when>
			<xsl:otherwise># SUN3X_ESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_SUNESP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_SUNESP=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_SUNESP=m</xsl:when>
			<xsl:otherwise># SCSI_SUNESP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZFCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZFCP=y</xsl:when>
			<xsl:when test=". = 'module'">ZFCP=m</xsl:when>
			<xsl:otherwise># ZFCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_PMCRAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_PMCRAID=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_PMCRAID=m</xsl:when>
			<xsl:otherwise># SCSI_PMCRAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_PM8001">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_PM8001=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_PM8001=m</xsl:when>
			<xsl:otherwise># SCSI_PM8001 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_BFA_FC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_BFA_FC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_BFA_FC=m</xsl:when>
			<xsl:otherwise># SCSI_BFA_FC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_VIRTIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_VIRTIO=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_VIRTIO=m</xsl:when>
			<xsl:otherwise># SCSI_VIRTIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_CHELSIO_FCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_CHELSIO_FCOE=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_CHELSIO_FCOE=m</xsl:when>
			<xsl:otherwise># SCSI_CHELSIO_FCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_LOWLEVEL_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_LOWLEVEL_PCMCIA=y</xsl:when>
			<xsl:otherwise># SCSI_LOWLEVEL_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_AHA152X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_AHA152X=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_AHA152X=m</xsl:when>
			<xsl:otherwise># PCMCIA_AHA152X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_FDOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_FDOMAIN=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_FDOMAIN=m</xsl:when>
			<xsl:otherwise># PCMCIA_FDOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_NINJA_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_NINJA_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_NINJA_SCSI=m</xsl:when>
			<xsl:otherwise># PCMCIA_NINJA_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_QLOGIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_QLOGIC=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_QLOGIC=m</xsl:when>
			<xsl:otherwise># PCMCIA_QLOGIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SYM53C500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SYM53C500=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SYM53C500=m</xsl:when>
			<xsl:otherwise># PCMCIA_SYM53C500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DH=y</xsl:when>
			<xsl:otherwise># SCSI_DH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DH_RDAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DH_RDAC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DH_RDAC=m</xsl:when>
			<xsl:otherwise># SCSI_DH_RDAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DH_HP_SW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DH_HP_SW=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DH_HP_SW=m</xsl:when>
			<xsl:otherwise># SCSI_DH_HP_SW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DH_EMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DH_EMC=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DH_EMC=m</xsl:when>
			<xsl:otherwise># SCSI_DH_EMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_DH_ALUA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_DH_ALUA=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_DH_ALUA=m</xsl:when>
			<xsl:otherwise># SCSI_DH_ALUA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_OSD_INITIATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_OSD_INITIATOR=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_OSD_INITIATOR=m</xsl:when>
			<xsl:otherwise># SCSI_OSD_INITIATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_OSD_ULD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_OSD_ULD=y</xsl:when>
			<xsl:when test=". = 'module'">SCSI_OSD_ULD=m</xsl:when>
			<xsl:otherwise># SCSI_OSD_ULD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCSI_OSD_DPRINT_SENSE">
		SCSI_OSD_DPRINT_SENSE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SCSI_OSD_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCSI_OSD_DEBUG=y</xsl:when>
			<xsl:otherwise># SCSI_OSD_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_PATA_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_PATA_PLATFORM=y</xsl:when>
			<xsl:otherwise># HAVE_PATA_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA=y</xsl:when>
			<xsl:when test=". = 'module'">ATA=m</xsl:when>
			<xsl:otherwise># ATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_NONSTANDARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_NONSTANDARD=y</xsl:when>
			<xsl:otherwise># ATA_NONSTANDARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_VERBOSE_ERROR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_VERBOSE_ERROR=y</xsl:when>
			<xsl:otherwise># ATA_VERBOSE_ERROR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_ACPI=y</xsl:when>
			<xsl:otherwise># ATA_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_ZPODD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_ZPODD=y</xsl:when>
			<xsl:otherwise># SATA_ZPODD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_PMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_PMP=y</xsl:when>
			<xsl:otherwise># SATA_PMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_AHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_AHCI=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_AHCI=m</xsl:when>
			<xsl:otherwise># SATA_AHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_AHCI_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_AHCI_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_AHCI_PLATFORM=m</xsl:when>
			<xsl:otherwise># SATA_AHCI_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_BRCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_BRCM=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_BRCM=m</xsl:when>
			<xsl:otherwise># AHCI_BRCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_DA850">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_DA850=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_DA850=m</xsl:when>
			<xsl:otherwise># AHCI_DA850 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_ST=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_ST=m</xsl:when>
			<xsl:otherwise># AHCI_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_IMX=m</xsl:when>
			<xsl:otherwise># AHCI_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_CEVA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_CEVA=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_CEVA=m</xsl:when>
			<xsl:otherwise># AHCI_CEVA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_MVEBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_MVEBU=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_MVEBU=m</xsl:when>
			<xsl:otherwise># AHCI_MVEBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_OCTEON=m</xsl:when>
			<xsl:otherwise># AHCI_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_SUNXI=m</xsl:when>
			<xsl:otherwise># AHCI_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_TEGRA=m</xsl:when>
			<xsl:otherwise># AHCI_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_XGENE=m</xsl:when>
			<xsl:otherwise># AHCI_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AHCI_QORIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AHCI_QORIQ=y</xsl:when>
			<xsl:when test=". = 'module'">AHCI_QORIQ=m</xsl:when>
			<xsl:otherwise># AHCI_QORIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_FSL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_FSL=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_FSL=m</xsl:when>
			<xsl:otherwise># SATA_FSL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_AHCI_SEATTLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_AHCI_SEATTLE=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_AHCI_SEATTLE=m</xsl:when>
			<xsl:otherwise># SATA_AHCI_SEATTLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_INIC162X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_INIC162X=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_INIC162X=m</xsl:when>
			<xsl:otherwise># SATA_INIC162X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_ACARD_AHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_ACARD_AHCI=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_ACARD_AHCI=m</xsl:when>
			<xsl:otherwise># SATA_ACARD_AHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_SIL24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_SIL24=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_SIL24=m</xsl:when>
			<xsl:otherwise># SATA_SIL24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_SFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_SFF=y</xsl:when>
			<xsl:otherwise># ATA_SFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PDC_ADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PDC_ADMA=y</xsl:when>
			<xsl:when test=". = 'module'">PDC_ADMA=m</xsl:when>
			<xsl:otherwise># PDC_ADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_OCTEON_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_OCTEON_CF=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_OCTEON_CF=m</xsl:when>
			<xsl:otherwise># PATA_OCTEON_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_QSTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_QSTOR=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_QSTOR=m</xsl:when>
			<xsl:otherwise># SATA_QSTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_SX4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_SX4=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_SX4=m</xsl:when>
			<xsl:otherwise># SATA_SX4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_BMDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_BMDMA=y</xsl:when>
			<xsl:otherwise># ATA_BMDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_PIIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_PIIX=y</xsl:when>
			<xsl:when test=". = 'module'">ATA_PIIX=m</xsl:when>
			<xsl:otherwise># ATA_PIIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_DWC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_DWC=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_DWC=m</xsl:when>
			<xsl:otherwise># SATA_DWC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_DWC_OLD_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_DWC_OLD_DMA=y</xsl:when>
			<xsl:otherwise># SATA_DWC_OLD_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_DWC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_DWC_DEBUG=y</xsl:when>
			<xsl:otherwise># SATA_DWC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_DWC_VDEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_DWC_VDEBUG=y</xsl:when>
			<xsl:otherwise># SATA_DWC_VDEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_HIGHBANK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_HIGHBANK=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_HIGHBANK=m</xsl:when>
			<xsl:otherwise># SATA_HIGHBANK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_MV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_MV=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_MV=m</xsl:when>
			<xsl:otherwise># SATA_MV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_NV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_NV=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_NV=m</xsl:when>
			<xsl:otherwise># SATA_NV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_PROMISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_PROMISE=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_PROMISE=m</xsl:when>
			<xsl:otherwise># SATA_PROMISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_RCAR=m</xsl:when>
			<xsl:otherwise># SATA_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_SIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_SIL=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_SIL=m</xsl:when>
			<xsl:otherwise># SATA_SIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_SIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_SIS=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_SIS=m</xsl:when>
			<xsl:otherwise># SATA_SIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_SVW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_SVW=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_SVW=m</xsl:when>
			<xsl:otherwise># SATA_SVW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_ULI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_ULI=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_ULI=m</xsl:when>
			<xsl:otherwise># SATA_ULI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_VIA=m</xsl:when>
			<xsl:otherwise># SATA_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SATA_VITESSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SATA_VITESSE=y</xsl:when>
			<xsl:when test=". = 'module'">SATA_VITESSE=m</xsl:when>
			<xsl:otherwise># SATA_VITESSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ALI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ALI=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ALI=m</xsl:when>
			<xsl:otherwise># PATA_ALI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_AMD=m</xsl:when>
			<xsl:otherwise># PATA_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ARASAN_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ARASAN_CF=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ARASAN_CF=m</xsl:when>
			<xsl:otherwise># PATA_ARASAN_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ARTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ARTOP=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ARTOP=m</xsl:when>
			<xsl:otherwise># PATA_ARTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ATIIXP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ATIIXP=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ATIIXP=m</xsl:when>
			<xsl:otherwise># PATA_ATIIXP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ATP867X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ATP867X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ATP867X=m</xsl:when>
			<xsl:otherwise># PATA_ATP867X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_BF54X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_BF54X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_BF54X=m</xsl:when>
			<xsl:otherwise># PATA_BF54X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CMD64X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CMD64X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CMD64X=m</xsl:when>
			<xsl:otherwise># PATA_CMD64X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CS5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CS5520=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CS5520=m</xsl:when>
			<xsl:otherwise># PATA_CS5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CS5530">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CS5530=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CS5530=m</xsl:when>
			<xsl:otherwise># PATA_CS5530 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CS5535">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CS5535=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CS5535=m</xsl:when>
			<xsl:otherwise># PATA_CS5535 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CS5536">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CS5536=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CS5536=m</xsl:when>
			<xsl:otherwise># PATA_CS5536 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CYPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CYPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CYPRESS=m</xsl:when>
			<xsl:otherwise># PATA_CYPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_EFAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_EFAR=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_EFAR=m</xsl:when>
			<xsl:otherwise># PATA_EFAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_EP93XX=m</xsl:when>
			<xsl:otherwise># PATA_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_HPT366">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_HPT366=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_HPT366=m</xsl:when>
			<xsl:otherwise># PATA_HPT366 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_HPT37X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_HPT37X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_HPT37X=m</xsl:when>
			<xsl:otherwise># PATA_HPT37X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_HPT3X2N">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_HPT3X2N=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_HPT3X2N=m</xsl:when>
			<xsl:otherwise># PATA_HPT3X2N is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_HPT3X3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_HPT3X3=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_HPT3X3=m</xsl:when>
			<xsl:otherwise># PATA_HPT3X3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_HPT3X3_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_HPT3X3_DMA=y</xsl:when>
			<xsl:otherwise># PATA_HPT3X3_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ICSIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ICSIDE=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ICSIDE=m</xsl:when>
			<xsl:otherwise># PATA_ICSIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_IMX=m</xsl:when>
			<xsl:otherwise># PATA_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_IT8213">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_IT8213=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_IT8213=m</xsl:when>
			<xsl:otherwise># PATA_IT8213 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_IT821X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_IT821X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_IT821X=m</xsl:when>
			<xsl:otherwise># PATA_IT821X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_JMICRON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_JMICRON=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_JMICRON=m</xsl:when>
			<xsl:otherwise># PATA_JMICRON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_MACIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_MACIO=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_MACIO=m</xsl:when>
			<xsl:otherwise># PATA_MACIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_MARVELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_MARVELL=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_MARVELL=m</xsl:when>
			<xsl:otherwise># PATA_MARVELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_MPC52xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_MPC52xx=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_MPC52xx=m</xsl:when>
			<xsl:otherwise># PATA_MPC52xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_NETCELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_NETCELL=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_NETCELL=m</xsl:when>
			<xsl:otherwise># PATA_NETCELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_NINJA32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_NINJA32=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_NINJA32=m</xsl:when>
			<xsl:otherwise># PATA_NINJA32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_NS87415">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_NS87415=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_NS87415=m</xsl:when>
			<xsl:otherwise># PATA_NS87415 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_OLDPIIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_OLDPIIX=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_OLDPIIX=m</xsl:when>
			<xsl:otherwise># PATA_OLDPIIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_OPTIDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_OPTIDMA=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_OPTIDMA=m</xsl:when>
			<xsl:otherwise># PATA_OPTIDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PDC2027X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PDC2027X=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PDC2027X=m</xsl:when>
			<xsl:otherwise># PATA_PDC2027X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PDC_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PDC_OLD=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PDC_OLD=m</xsl:when>
			<xsl:otherwise># PATA_PDC_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_RADISYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_RADISYS=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_RADISYS=m</xsl:when>
			<xsl:otherwise># PATA_RADISYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_RDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_RDC=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_RDC=m</xsl:when>
			<xsl:otherwise># PATA_RDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SC1200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SC1200=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SC1200=m</xsl:when>
			<xsl:otherwise># PATA_SC1200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SCH=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SCH=m</xsl:when>
			<xsl:otherwise># PATA_SCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SERVERWORKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SERVERWORKS=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SERVERWORKS=m</xsl:when>
			<xsl:otherwise># PATA_SERVERWORKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SIL680">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SIL680=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SIL680=m</xsl:when>
			<xsl:otherwise># PATA_SIL680 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SIS=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SIS=m</xsl:when>
			<xsl:otherwise># PATA_SIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_TOSHIBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_TOSHIBA=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_TOSHIBA=m</xsl:when>
			<xsl:otherwise># PATA_TOSHIBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_TRIFLEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_TRIFLEX=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_TRIFLEX=m</xsl:when>
			<xsl:otherwise># PATA_TRIFLEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_VIA=m</xsl:when>
			<xsl:otherwise># PATA_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PXA=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PXA=m</xsl:when>
			<xsl:otherwise># PATA_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_WINBOND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_WINBOND=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_WINBOND=m</xsl:when>
			<xsl:otherwise># PATA_WINBOND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_AT32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_AT32=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_AT32=m</xsl:when>
			<xsl:otherwise># PATA_AT32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_AT91=m</xsl:when>
			<xsl:otherwise># PATA_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_CMD640_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_CMD640_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_CMD640_PCI=m</xsl:when>
			<xsl:otherwise># PATA_CMD640_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ISAPNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ISAPNP=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ISAPNP=m</xsl:when>
			<xsl:otherwise># PATA_ISAPNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_IXP4XX_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_IXP4XX_CF=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_IXP4XX_CF=m</xsl:when>
			<xsl:otherwise># PATA_IXP4XX_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_MPIIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_MPIIX=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_MPIIX=m</xsl:when>
			<xsl:otherwise># PATA_MPIIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_NS87410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_NS87410=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_NS87410=m</xsl:when>
			<xsl:otherwise># PATA_NS87410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_OPTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_OPTI=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_OPTI=m</xsl:when>
			<xsl:otherwise># PATA_OPTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PALMLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PALMLD=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PALMLD=m</xsl:when>
			<xsl:otherwise># PATA_PALMLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PCMCIA=m</xsl:when>
			<xsl:otherwise># PATA_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_PLATFORM=m</xsl:when>
			<xsl:otherwise># PATA_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_OF_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_OF_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_OF_PLATFORM=m</xsl:when>
			<xsl:otherwise># PATA_OF_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_QDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_QDI=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_QDI=m</xsl:when>
			<xsl:otherwise># PATA_QDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_RB532">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_RB532=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_RB532=m</xsl:when>
			<xsl:otherwise># PATA_RB532 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_RZ1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_RZ1000=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_RZ1000=m</xsl:when>
			<xsl:otherwise># PATA_RZ1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_SAMSUNG_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_SAMSUNG_CF=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_SAMSUNG_CF=m</xsl:when>
			<xsl:otherwise># PATA_SAMSUNG_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_WINBOND_VLB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_WINBOND_VLB=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_WINBOND_VLB=m</xsl:when>
			<xsl:otherwise># PATA_WINBOND_VLB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_ACPI=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_ACPI=m</xsl:when>
			<xsl:otherwise># PATA_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATA_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATA_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">ATA_GENERIC=m</xsl:when>
			<xsl:otherwise># ATA_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PATA_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PATA_LEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">PATA_LEGACY=m</xsl:when>
			<xsl:otherwise># PATA_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD=y</xsl:when>
			<xsl:otherwise># MD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_MD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_MD=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_MD=m</xsl:when>
			<xsl:otherwise># BLK_DEV_MD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_AUTODETECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_AUTODETECT=y</xsl:when>
			<xsl:otherwise># MD_AUTODETECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_LINEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_LINEAR=y</xsl:when>
			<xsl:when test=". = 'module'">MD_LINEAR=m</xsl:when>
			<xsl:otherwise># MD_LINEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_RAID0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_RAID0=y</xsl:when>
			<xsl:when test=". = 'module'">MD_RAID0=m</xsl:when>
			<xsl:otherwise># MD_RAID0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_RAID1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_RAID1=y</xsl:when>
			<xsl:when test=". = 'module'">MD_RAID1=m</xsl:when>
			<xsl:otherwise># MD_RAID1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_RAID10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_RAID10=y</xsl:when>
			<xsl:when test=". = 'module'">MD_RAID10=m</xsl:when>
			<xsl:otherwise># MD_RAID10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_RAID456">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_RAID456=y</xsl:when>
			<xsl:when test=". = 'module'">MD_RAID456=m</xsl:when>
			<xsl:otherwise># MD_RAID456 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_MULTIPATH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_MULTIPATH=y</xsl:when>
			<xsl:when test=". = 'module'">MD_MULTIPATH=m</xsl:when>
			<xsl:otherwise># MD_MULTIPATH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_FAULTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_FAULTY=y</xsl:when>
			<xsl:when test=". = 'module'">MD_FAULTY=m</xsl:when>
			<xsl:otherwise># MD_FAULTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MD_CLUSTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MD_CLUSTER=y</xsl:when>
			<xsl:when test=". = 'module'">MD_CLUSTER=m</xsl:when>
			<xsl:otherwise># MD_CLUSTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCACHE=y</xsl:when>
			<xsl:when test=". = 'module'">BCACHE=m</xsl:when>
			<xsl:otherwise># BCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCACHE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCACHE_DEBUG=y</xsl:when>
			<xsl:otherwise># BCACHE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCACHE_CLOSURES_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCACHE_CLOSURES_DEBUG=y</xsl:when>
			<xsl:otherwise># BCACHE_CLOSURES_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DM_BUILTIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DM_BUILTIN=y</xsl:when>
			<xsl:otherwise># BLK_DEV_DM_BUILTIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_DM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_DM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_DM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_DM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_MQ_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_MQ_DEFAULT=y</xsl:when>
			<xsl:otherwise># DM_MQ_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_DEBUG=y</xsl:when>
			<xsl:otherwise># DM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_BUFIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_BUFIO=y</xsl:when>
			<xsl:when test=". = 'module'">DM_BUFIO=m</xsl:when>
			<xsl:otherwise># DM_BUFIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_DEBUG_BLOCK_STACK_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_DEBUG_BLOCK_STACK_TRACING=y</xsl:when>
			<xsl:otherwise># DM_DEBUG_BLOCK_STACK_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_BIO_PRISON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_BIO_PRISON=y</xsl:when>
			<xsl:when test=". = 'module'">DM_BIO_PRISON=m</xsl:when>
			<xsl:otherwise># DM_BIO_PRISON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_PERSISTENT_DATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_PERSISTENT_DATA=y</xsl:when>
			<xsl:when test=". = 'module'">DM_PERSISTENT_DATA=m</xsl:when>
			<xsl:otherwise># DM_PERSISTENT_DATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_CRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_CRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">DM_CRYPT=m</xsl:when>
			<xsl:otherwise># DM_CRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_SNAPSHOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_SNAPSHOT=y</xsl:when>
			<xsl:when test=". = 'module'">DM_SNAPSHOT=m</xsl:when>
			<xsl:otherwise># DM_SNAPSHOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_THIN_PROVISIONING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_THIN_PROVISIONING=y</xsl:when>
			<xsl:when test=". = 'module'">DM_THIN_PROVISIONING=m</xsl:when>
			<xsl:otherwise># DM_THIN_PROVISIONING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_CACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_CACHE=y</xsl:when>
			<xsl:when test=". = 'module'">DM_CACHE=m</xsl:when>
			<xsl:otherwise># DM_CACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_CACHE_SMQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_CACHE_SMQ=y</xsl:when>
			<xsl:when test=". = 'module'">DM_CACHE_SMQ=m</xsl:when>
			<xsl:otherwise># DM_CACHE_SMQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_CACHE_CLEANER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_CACHE_CLEANER=y</xsl:when>
			<xsl:when test=". = 'module'">DM_CACHE_CLEANER=m</xsl:when>
			<xsl:otherwise># DM_CACHE_CLEANER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_ERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_ERA=y</xsl:when>
			<xsl:when test=". = 'module'">DM_ERA=m</xsl:when>
			<xsl:otherwise># DM_ERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_MIRROR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_MIRROR=y</xsl:when>
			<xsl:when test=". = 'module'">DM_MIRROR=m</xsl:when>
			<xsl:otherwise># DM_MIRROR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_LOG_USERSPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_LOG_USERSPACE=y</xsl:when>
			<xsl:when test=". = 'module'">DM_LOG_USERSPACE=m</xsl:when>
			<xsl:otherwise># DM_LOG_USERSPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_RAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_RAID=y</xsl:when>
			<xsl:when test=". = 'module'">DM_RAID=m</xsl:when>
			<xsl:otherwise># DM_RAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_ZERO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_ZERO=y</xsl:when>
			<xsl:when test=". = 'module'">DM_ZERO=m</xsl:when>
			<xsl:otherwise># DM_ZERO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_MULTIPATH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_MULTIPATH=y</xsl:when>
			<xsl:when test=". = 'module'">DM_MULTIPATH=m</xsl:when>
			<xsl:otherwise># DM_MULTIPATH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_MULTIPATH_QL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_MULTIPATH_QL=y</xsl:when>
			<xsl:when test=". = 'module'">DM_MULTIPATH_QL=m</xsl:when>
			<xsl:otherwise># DM_MULTIPATH_QL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_MULTIPATH_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_MULTIPATH_ST=y</xsl:when>
			<xsl:when test=". = 'module'">DM_MULTIPATH_ST=m</xsl:when>
			<xsl:otherwise># DM_MULTIPATH_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_DELAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_DELAY=y</xsl:when>
			<xsl:when test=". = 'module'">DM_DELAY=m</xsl:when>
			<xsl:otherwise># DM_DELAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_UEVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_UEVENT=y</xsl:when>
			<xsl:otherwise># DM_UEVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_FLAKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_FLAKEY=y</xsl:when>
			<xsl:when test=". = 'module'">DM_FLAKEY=m</xsl:when>
			<xsl:otherwise># DM_FLAKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_VERITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_VERITY=y</xsl:when>
			<xsl:when test=". = 'module'">DM_VERITY=m</xsl:when>
			<xsl:otherwise># DM_VERITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_VERITY_FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_VERITY_FEC=y</xsl:when>
			<xsl:otherwise># DM_VERITY_FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_SWITCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_SWITCH=y</xsl:when>
			<xsl:when test=". = 'module'">DM_SWITCH=m</xsl:when>
			<xsl:otherwise># DM_SWITCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM_LOG_WRITES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM_LOG_WRITES=y</xsl:when>
			<xsl:when test=". = 'module'">DM_LOG_WRITES=m</xsl:when>
			<xsl:otherwise># DM_LOG_WRITES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TARGET_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TARGET_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TARGET_CORE=m</xsl:when>
			<xsl:otherwise># TARGET_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_IBLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_IBLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_IBLOCK=m</xsl:when>
			<xsl:otherwise># TCM_IBLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_FILEIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_FILEIO=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_FILEIO=m</xsl:when>
			<xsl:otherwise># TCM_FILEIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_PSCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_PSCSI=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_PSCSI=m</xsl:when>
			<xsl:otherwise># TCM_PSCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_USER2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_USER2=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_USER2=m</xsl:when>
			<xsl:otherwise># TCM_USER2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOOPBACK_TARGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOOPBACK_TARGET=y</xsl:when>
			<xsl:when test=". = 'module'">LOOPBACK_TARGET=m</xsl:when>
			<xsl:otherwise># LOOPBACK_TARGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCM_FC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCM_FC=y</xsl:when>
			<xsl:when test=". = 'module'">TCM_FC=m</xsl:when>
			<xsl:otherwise># TCM_FC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_TARGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_TARGET=y</xsl:when>
			<xsl:when test=". = 'module'">ISCSI_TARGET=m</xsl:when>
			<xsl:otherwise># ISCSI_TARGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_TARGET_CXGB4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_TARGET_CXGB4=y</xsl:when>
			<xsl:when test=". = 'module'">ISCSI_TARGET_CXGB4=m</xsl:when>
			<xsl:otherwise># ISCSI_TARGET_CXGB4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBP_TARGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBP_TARGET=y</xsl:when>
			<xsl:when test=". = 'module'">SBP_TARGET=m</xsl:when>
			<xsl:otherwise># SBP_TARGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION=y</xsl:when>
			<xsl:otherwise># FUSION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">FUSION_SPI=m</xsl:when>
			<xsl:otherwise># FUSION_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_FC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_FC=y</xsl:when>
			<xsl:when test=". = 'module'">FUSION_FC=m</xsl:when>
			<xsl:otherwise># FUSION_FC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_SAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_SAS=y</xsl:when>
			<xsl:when test=". = 'module'">FUSION_SAS=m</xsl:when>
			<xsl:otherwise># FUSION_SAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_MAX_SGE">
		FUSION_MAX_SGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FUSION_CTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_CTL=y</xsl:when>
			<xsl:when test=". = 'module'">FUSION_CTL=m</xsl:when>
			<xsl:otherwise># FUSION_CTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_LAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_LAN=y</xsl:when>
			<xsl:when test=". = 'module'">FUSION_LAN=m</xsl:when>
			<xsl:otherwise># FUSION_LAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSION_LOGGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSION_LOGGING=y</xsl:when>
			<xsl:otherwise># FUSION_LOGGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE=m</xsl:when>
			<xsl:otherwise># FIREWIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE_OHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE_OHCI=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE_OHCI=m</xsl:when>
			<xsl:otherwise># FIREWIRE_OHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE_SBP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE_SBP2=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE_SBP2=m</xsl:when>
			<xsl:otherwise># FIREWIRE_SBP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE_NET=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE_NET=m</xsl:when>
			<xsl:otherwise># FIREWIRE_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE_NOSY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE_NOSY=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE_NOSY=m</xsl:when>
			<xsl:otherwise># FIREWIRE_NOSY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACINTOSH_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACINTOSH_DRIVERS=y</xsl:when>
			<xsl:otherwise># MACINTOSH_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB=y</xsl:when>
			<xsl:otherwise># ADB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_MACII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_MACII=y</xsl:when>
			<xsl:otherwise># ADB_MACII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_MACIISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_MACIISI=y</xsl:when>
			<xsl:otherwise># ADB_MACIISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_IOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_IOP=y</xsl:when>
			<xsl:otherwise># ADB_IOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_PMU68K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_PMU68K=y</xsl:when>
			<xsl:otherwise># ADB_PMU68K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_CUDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_CUDA=y</xsl:when>
			<xsl:otherwise># ADB_CUDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_PMU=y</xsl:when>
			<xsl:otherwise># ADB_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_PMU_LED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_PMU_LED=y</xsl:when>
			<xsl:otherwise># ADB_PMU_LED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_PMU_LED_DISK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_PMU_LED_DISK=y</xsl:when>
			<xsl:otherwise># ADB_PMU_LED_DISK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_SMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_SMU=y</xsl:when>
			<xsl:otherwise># PMAC_SMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_APM_EMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_APM_EMU=y</xsl:when>
			<xsl:when test=". = 'module'">PMAC_APM_EMU=m</xsl:when>
			<xsl:otherwise># PMAC_APM_EMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_MEDIABAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_MEDIABAY=y</xsl:when>
			<xsl:otherwise># PMAC_MEDIABAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># PMAC_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_BACKLIGHT_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_BACKLIGHT_LEGACY=y</xsl:when>
			<xsl:otherwise># PMAC_BACKLIGHT_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADB_MACIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADB_MACIO=y</xsl:when>
			<xsl:otherwise># ADB_MACIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ADBHID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ADBHID=y</xsl:when>
			<xsl:otherwise># INPUT_ADBHID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC_EMUMOUSEBTN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC_EMUMOUSEBTN=y</xsl:when>
			<xsl:when test=". = 'module'">MAC_EMUMOUSEBTN=m</xsl:when>
			<xsl:otherwise># MAC_EMUMOUSEBTN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERM_WINDTUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERM_WINDTUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">THERM_WINDTUNNEL=m</xsl:when>
			<xsl:otherwise># THERM_WINDTUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERM_ADT746X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERM_ADT746X=y</xsl:when>
			<xsl:when test=". = 'module'">THERM_ADT746X=m</xsl:when>
			<xsl:otherwise># THERM_ADT746X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM=m</xsl:when>
			<xsl:otherwise># WINDFARM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_PM81">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_PM81=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_PM81=m</xsl:when>
			<xsl:otherwise># WINDFARM_PM81 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_PM72">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_PM72=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_PM72=m</xsl:when>
			<xsl:otherwise># WINDFARM_PM72 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_RM31">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_RM31=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_RM31=m</xsl:when>
			<xsl:otherwise># WINDFARM_RM31 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_PM91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_PM91=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_PM91=m</xsl:when>
			<xsl:otherwise># WINDFARM_PM91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_PM112">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_PM112=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_PM112=m</xsl:when>
			<xsl:otherwise># WINDFARM_PM112 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINDFARM_PM121">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINDFARM_PM121=y</xsl:when>
			<xsl:when test=". = 'module'">WINDFARM_PM121=m</xsl:when>
			<xsl:otherwise># WINDFARM_PM121 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANSLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANSLCD=y</xsl:when>
			<xsl:when test=". = 'module'">ANSLCD=m</xsl:when>
			<xsl:otherwise># ANSLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMAC_RACKMETER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMAC_RACKMETER=y</xsl:when>
			<xsl:when test=". = 'module'">PMAC_RACKMETER=m</xsl:when>
			<xsl:otherwise># PMAC_RACKMETER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AMS=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AMS=m</xsl:when>
			<xsl:otherwise># SENSORS_AMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AMS_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AMS_PMU=y</xsl:when>
			<xsl:otherwise># SENSORS_AMS_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AMS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AMS_I2C=y</xsl:when>
			<xsl:otherwise># SENSORS_AMS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETDEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETDEVICES=y</xsl:when>
			<xsl:otherwise># NETDEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MII=y</xsl:when>
			<xsl:when test=". = 'module'">MII=m</xsl:when>
			<xsl:otherwise># MII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_CORE=y</xsl:when>
			<xsl:otherwise># NET_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BONDING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BONDING=y</xsl:when>
			<xsl:when test=". = 'module'">BONDING=m</xsl:when>
			<xsl:otherwise># BONDING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">DUMMY=m</xsl:when>
			<xsl:otherwise># DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EQUALIZER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EQUALIZER=y</xsl:when>
			<xsl:when test=". = 'module'">EQUALIZER=m</xsl:when>
			<xsl:otherwise># EQUALIZER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_FC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_FC=y</xsl:when>
			<xsl:otherwise># NET_FC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IFB=y</xsl:when>
			<xsl:when test=". = 'module'">IFB=m</xsl:when>
			<xsl:otherwise># IFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM=m</xsl:when>
			<xsl:otherwise># NET_TEAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM_MODE_BROADCAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM_MODE_BROADCAST=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM_MODE_BROADCAST=m</xsl:when>
			<xsl:otherwise># NET_TEAM_MODE_BROADCAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM_MODE_ROUNDROBIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM_MODE_ROUNDROBIN=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM_MODE_ROUNDROBIN=m</xsl:when>
			<xsl:otherwise># NET_TEAM_MODE_ROUNDROBIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM_MODE_RANDOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM_MODE_RANDOM=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM_MODE_RANDOM=m</xsl:when>
			<xsl:otherwise># NET_TEAM_MODE_RANDOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM_MODE_ACTIVEBACKUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM_MODE_ACTIVEBACKUP=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM_MODE_ACTIVEBACKUP=m</xsl:when>
			<xsl:otherwise># NET_TEAM_MODE_ACTIVEBACKUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TEAM_MODE_LOADBALANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TEAM_MODE_LOADBALANCE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_TEAM_MODE_LOADBALANCE=m</xsl:when>
			<xsl:otherwise># NET_TEAM_MODE_LOADBALANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACVLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACVLAN=y</xsl:when>
			<xsl:when test=". = 'module'">MACVLAN=m</xsl:when>
			<xsl:otherwise># MACVLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACVTAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACVTAP=y</xsl:when>
			<xsl:when test=". = 'module'">MACVTAP=m</xsl:when>
			<xsl:otherwise># MACVTAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPVLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPVLAN=y</xsl:when>
			<xsl:when test=". = 'module'">IPVLAN=m</xsl:when>
			<xsl:otherwise># IPVLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VXLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VXLAN=y</xsl:when>
			<xsl:when test=". = 'module'">VXLAN=m</xsl:when>
			<xsl:otherwise># VXLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENEVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENEVE=y</xsl:when>
			<xsl:when test=". = 'module'">GENEVE=m</xsl:when>
			<xsl:otherwise># GENEVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GTP=y</xsl:when>
			<xsl:when test=". = 'module'">GTP=m</xsl:when>
			<xsl:otherwise># GTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACSEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACSEC=y</xsl:when>
			<xsl:when test=". = 'module'">MACSEC=m</xsl:when>
			<xsl:otherwise># MACSEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETCONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETCONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">NETCONSOLE=m</xsl:when>
			<xsl:otherwise># NETCONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETCONSOLE_DYNAMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETCONSOLE_DYNAMIC=y</xsl:when>
			<xsl:otherwise># NETCONSOLE_DYNAMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETPOLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETPOLL=y</xsl:when>
			<xsl:otherwise># NETPOLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_POLL_CONTROLLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_POLL_CONTROLLER=y</xsl:when>
			<xsl:otherwise># NET_POLL_CONTROLLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_NETDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_NETDEV=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_NETDEV=m</xsl:when>
			<xsl:otherwise># NTB_NETDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RIONET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RIONET=y</xsl:when>
			<xsl:when test=". = 'module'">RIONET=m</xsl:when>
			<xsl:otherwise># RIONET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RIONET_TX_SIZE">
		RIONET_TX_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RIONET_RX_SIZE">
		RIONET_RX_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="TUN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TUN=y</xsl:when>
			<xsl:when test=". = 'module'">TUN=m</xsl:when>
			<xsl:otherwise># TUN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TUN_VNET_CROSS_LE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TUN_VNET_CROSS_LE=y</xsl:when>
			<xsl:otherwise># TUN_VNET_CROSS_LE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VETH=y</xsl:when>
			<xsl:when test=". = 'module'">VETH=m</xsl:when>
			<xsl:otherwise># VETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_NET=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_NET=m</xsl:when>
			<xsl:otherwise># VIRTIO_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLMON=y</xsl:when>
			<xsl:when test=". = 'module'">NLMON=m</xsl:when>
			<xsl:otherwise># NLMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VRF=y</xsl:when>
			<xsl:when test=". = 'module'">NET_VRF=m</xsl:when>
			<xsl:otherwise># NET_VRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNGEM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNGEM_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">SUNGEM_PHY=m</xsl:when>
			<xsl:otherwise># SUNGEM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET=m</xsl:when>
			<xsl:otherwise># ARCNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_1201">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_1201=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_1201=m</xsl:when>
			<xsl:otherwise># ARCNET_1201 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_1051">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_1051=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_1051=m</xsl:when>
			<xsl:otherwise># ARCNET_1051 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_RAW=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_RAW=m</xsl:when>
			<xsl:otherwise># ARCNET_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_CAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_CAP=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_CAP=m</xsl:when>
			<xsl:otherwise># ARCNET_CAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM90xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM90xx=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM90xx=m</xsl:when>
			<xsl:otherwise># ARCNET_COM90xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM90xxIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM90xxIO=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM90xxIO=m</xsl:when>
			<xsl:otherwise># ARCNET_COM90xxIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_RIM_I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_RIM_I=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_RIM_I=m</xsl:when>
			<xsl:otherwise># ARCNET_RIM_I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM20020">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM20020=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM20020=m</xsl:when>
			<xsl:otherwise># ARCNET_COM20020 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM20020_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM20020_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM20020_ISA=m</xsl:when>
			<xsl:otherwise># ARCNET_COM20020_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM20020_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM20020_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM20020_PCI=m</xsl:when>
			<xsl:otherwise># ARCNET_COM20020_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCNET_COM20020_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCNET_COM20020_CS=y</xsl:when>
			<xsl:when test=". = 'module'">ARCNET_COM20020_CS=m</xsl:when>
			<xsl:otherwise># ARCNET_COM20020_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_DRIVERS=y</xsl:when>
			<xsl:otherwise># ATM_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_DUMMY=m</xsl:when>
			<xsl:otherwise># ATM_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_TCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_TCP=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_TCP=m</xsl:when>
			<xsl:otherwise># ATM_TCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_LANAI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_LANAI=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_LANAI=m</xsl:when>
			<xsl:otherwise># ATM_LANAI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_ENI=m</xsl:when>
			<xsl:otherwise># ATM_ENI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_ENI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_TUNE_BURST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_TUNE_BURST=y</xsl:when>
			<xsl:otherwise># ATM_ENI_TUNE_BURST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_TX_16W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_TX_16W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_TX_16W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_TX_8W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_TX_8W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_TX_8W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_TX_4W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_TX_4W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_TX_4W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_TX_2W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_TX_2W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_TX_2W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_RX_16W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_RX_16W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_RX_16W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_RX_8W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_RX_8W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_RX_8W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_RX_4W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_RX_4W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_RX_4W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ENI_BURST_RX_2W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ENI_BURST_RX_2W=y</xsl:when>
			<xsl:otherwise># ATM_ENI_BURST_RX_2W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_FIRESTREAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_FIRESTREAM=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_FIRESTREAM=m</xsl:when>
			<xsl:otherwise># ATM_FIRESTREAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ZATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ZATM=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_ZATM=m</xsl:when>
			<xsl:otherwise># ATM_ZATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_ZATM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_ZATM_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_ZATM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_NICSTAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_NICSTAR=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_NICSTAR=m</xsl:when>
			<xsl:otherwise># ATM_NICSTAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_NICSTAR_USE_SUNI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_NICSTAR_USE_SUNI=y</xsl:when>
			<xsl:otherwise># ATM_NICSTAR_USE_SUNI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_NICSTAR_USE_IDT77105">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_NICSTAR_USE_IDT77105=y</xsl:when>
			<xsl:otherwise># ATM_NICSTAR_USE_IDT77105 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IDT77252">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IDT77252=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_IDT77252=m</xsl:when>
			<xsl:otherwise># ATM_IDT77252 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IDT77252_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IDT77252_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_IDT77252_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IDT77252_RCV_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IDT77252_RCV_ALL=y</xsl:when>
			<xsl:otherwise># ATM_IDT77252_RCV_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IDT77252_USE_SUNI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IDT77252_USE_SUNI=y</xsl:when>
			<xsl:otherwise># ATM_IDT77252_USE_SUNI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_AMBASSADOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_AMBASSADOR=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_AMBASSADOR=m</xsl:when>
			<xsl:otherwise># ATM_AMBASSADOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_AMBASSADOR_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_AMBASSADOR_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_AMBASSADOR_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_HORIZON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_HORIZON=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_HORIZON=m</xsl:when>
			<xsl:otherwise># ATM_HORIZON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_HORIZON_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_HORIZON_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_HORIZON_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IA=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_IA=m</xsl:when>
			<xsl:otherwise># ATM_IA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_IA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_IA_DEBUG=y</xsl:when>
			<xsl:otherwise># ATM_IA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_FORE200E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_FORE200E=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_FORE200E=m</xsl:when>
			<xsl:otherwise># ATM_FORE200E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_FORE200E_USE_TASKLET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_FORE200E_USE_TASKLET=y</xsl:when>
			<xsl:otherwise># ATM_FORE200E_USE_TASKLET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_FORE200E_TX_RETRY">
		ATM_FORE200E_TX_RETRY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ATM_FORE200E_DEBUG">
		ATM_FORE200E_DEBUG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ATM_HE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_HE=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_HE=m</xsl:when>
			<xsl:otherwise># ATM_HE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_HE_USE_SUNI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_HE_USE_SUNI=y</xsl:when>
			<xsl:otherwise># ATM_HE_USE_SUNI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATM_SOLOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATM_SOLOS=y</xsl:when>
			<xsl:when test=". = 'module'">ATM_SOLOS=m</xsl:when>
			<xsl:otherwise># ATM_SOLOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_TTY=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_TTY=m</xsl:when>
			<xsl:otherwise># CAIF_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_SPI_SLAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_SPI_SLAVE=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_SPI_SLAVE=m</xsl:when>
			<xsl:otherwise># CAIF_SPI_SLAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_SPI_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_SPI_SYNC=y</xsl:when>
			<xsl:otherwise># CAIF_SPI_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_HSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_HSI=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_HSI=m</xsl:when>
			<xsl:otherwise># CAIF_HSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAIF_VIRTIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAIF_VIRTIO=y</xsl:when>
			<xsl:when test=". = 'module'">CAIF_VIRTIO=m</xsl:when>
			<xsl:otherwise># CAIF_VIRTIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_RING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_RING=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST_RING=m</xsl:when>
			<xsl:otherwise># VHOST_RING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_MV88E6060">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_MV88E6060=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DSA_MV88E6060=m</xsl:when>
			<xsl:otherwise># NET_DSA_MV88E6060 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_BCM_SF2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_BCM_SF2=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DSA_BCM_SF2=m</xsl:when>
			<xsl:otherwise># NET_DSA_BCM_SF2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B53">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B53=y</xsl:when>
			<xsl:when test=". = 'module'">B53=m</xsl:when>
			<xsl:otherwise># B53 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B53_SPI_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B53_SPI_DRIVER=y</xsl:when>
			<xsl:when test=". = 'module'">B53_SPI_DRIVER=m</xsl:when>
			<xsl:otherwise># B53_SPI_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B53_MDIO_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B53_MDIO_DRIVER=y</xsl:when>
			<xsl:when test=". = 'module'">B53_MDIO_DRIVER=m</xsl:when>
			<xsl:otherwise># B53_MDIO_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B53_MMAP_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B53_MMAP_DRIVER=y</xsl:when>
			<xsl:when test=". = 'module'">B53_MMAP_DRIVER=m</xsl:when>
			<xsl:otherwise># B53_MMAP_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B53_SRAB_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B53_SRAB_DRIVER=y</xsl:when>
			<xsl:when test=". = 'module'">B53_SRAB_DRIVER=m</xsl:when>
			<xsl:otherwise># B53_SRAB_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_DSA_MV88E6XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_DSA_MV88E6XXX=y</xsl:when>
			<xsl:when test=". = 'module'">NET_DSA_MV88E6XXX=m</xsl:when>
			<xsl:otherwise># NET_DSA_MV88E6XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ETHERNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ETHERNET=y</xsl:when>
			<xsl:otherwise># ETHERNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO=m</xsl:when>
			<xsl:otherwise># MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNGEM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNGEM_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">SUNGEM_PHY=m</xsl:when>
			<xsl:otherwise># SUNGEM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_3COM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_3COM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_3COM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EL3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EL3=y</xsl:when>
			<xsl:when test=". = 'module'">EL3=m</xsl:when>
			<xsl:otherwise># EL3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_3C515">
		<xsl:choose>
			<xsl:when test=". = 'yes'">3C515=y</xsl:when>
			<xsl:when test=". = 'module'">3C515=m</xsl:when>
			<xsl:otherwise># 3C515 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_3C574">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_3C574=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_3C574=m</xsl:when>
			<xsl:otherwise># PCMCIA_3C574 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_3C589">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_3C589=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_3C589=m</xsl:when>
			<xsl:otherwise># PCMCIA_3C589 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VORTEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VORTEX=y</xsl:when>
			<xsl:when test=". = 'module'">VORTEX=m</xsl:when>
			<xsl:otherwise># VORTEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TYPHOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TYPHOON=y</xsl:when>
			<xsl:when test=". = 'module'">TYPHOON=m</xsl:when>
			<xsl:otherwise># TYPHOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ADAPTEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ADAPTEC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ADAPTEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADAPTEC_STARFIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADAPTEC_STARFIRE=y</xsl:when>
			<xsl:when test=". = 'module'">ADAPTEC_STARFIRE=m</xsl:when>
			<xsl:otherwise># ADAPTEC_STARFIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GRETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GRETH=y</xsl:when>
			<xsl:when test=". = 'module'">GRETH=m</xsl:when>
			<xsl:otherwise># GRETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_AGERE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_AGERE=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_AGERE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ET131X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ET131X=y</xsl:when>
			<xsl:when test=". = 'module'">ET131X=m</xsl:when>
			<xsl:otherwise># ET131X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ALLWINNER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ALLWINNER=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ALLWINNER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN4I_EMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN4I_EMAC=y</xsl:when>
			<xsl:when test=". = 'module'">SUN4I_EMAC=m</xsl:when>
			<xsl:otherwise># SUN4I_EMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ALTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ALTEON=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ALTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACENIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACENIC=y</xsl:when>
			<xsl:when test=". = 'module'">ACENIC=m</xsl:when>
			<xsl:otherwise># ACENIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACENIC_OMIT_TIGON_I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACENIC_OMIT_TIGON_I=y</xsl:when>
			<xsl:otherwise># ACENIC_OMIT_TIGON_I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALTERA_TSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALTERA_TSE=y</xsl:when>
			<xsl:when test=". = 'module'">ALTERA_TSE=m</xsl:when>
			<xsl:otherwise># ALTERA_TSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_AMD=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="A2065">
		<xsl:choose>
			<xsl:when test=". = 'yes'">A2065=y</xsl:when>
			<xsl:when test=". = 'module'">A2065=m</xsl:when>
			<xsl:otherwise># A2065 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD8111_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD8111_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">AMD8111_ETH=m</xsl:when>
			<xsl:otherwise># AMD8111_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LANCE=y</xsl:when>
			<xsl:when test=". = 'module'">LANCE=m</xsl:when>
			<xsl:otherwise># LANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCNET32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCNET32=y</xsl:when>
			<xsl:when test=". = 'module'">PCNET32=m</xsl:when>
			<xsl:otherwise># PCNET32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARIADNE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARIADNE=y</xsl:when>
			<xsl:when test=". = 'module'">ARIADNE=m</xsl:when>
			<xsl:otherwise># ARIADNE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_AM79C961A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_AM79C961A=y</xsl:when>
			<xsl:otherwise># ARM_AM79C961A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATARILANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATARILANCE=y</xsl:when>
			<xsl:when test=". = 'module'">ATARILANCE=m</xsl:when>
			<xsl:otherwise># ATARILANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECLANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECLANCE=y</xsl:when>
			<xsl:when test=". = 'module'">DECLANCE=m</xsl:when>
			<xsl:otherwise># DECLANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPLANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPLANCE=y</xsl:when>
			<xsl:when test=". = 'module'">HPLANCE=m</xsl:when>
			<xsl:otherwise># HPLANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_AU1X00_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_AU1X00_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">MIPS_AU1X00_ENET=m</xsl:when>
			<xsl:otherwise># MIPS_AU1X00_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVME147_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVME147_NET=y</xsl:when>
			<xsl:when test=". = 'module'">MVME147_NET=m</xsl:when>
			<xsl:otherwise># MVME147_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_NMCLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_NMCLAN=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_NMCLAN=m</xsl:when>
			<xsl:otherwise># PCMCIA_NMCLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NI65">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NI65=y</xsl:when>
			<xsl:when test=". = 'module'">NI65=m</xsl:when>
			<xsl:otherwise># NI65 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN3LANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN3LANCE=y</xsl:when>
			<xsl:when test=". = 'module'">SUN3LANCE=m</xsl:when>
			<xsl:otherwise># SUN3LANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNLANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNLANCE=y</xsl:when>
			<xsl:when test=". = 'module'">SUNLANCE=m</xsl:when>
			<xsl:otherwise># SUNLANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_XGBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_XGBE=y</xsl:when>
			<xsl:when test=". = 'module'">AMD_XGBE=m</xsl:when>
			<xsl:otherwise># AMD_XGBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_XGBE_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_XGBE_DCB=y</xsl:when>
			<xsl:otherwise># AMD_XGBE_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">NET_XGENE=m</xsl:when>
			<xsl:otherwise># NET_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_APPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_APPLE=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_APPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACE=y</xsl:when>
			<xsl:when test=". = 'module'">MACE=m</xsl:when>
			<xsl:otherwise># MACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACE_AAUI_PORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACE_AAUI_PORT=y</xsl:when>
			<xsl:otherwise># MACE_AAUI_PORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMAC=y</xsl:when>
			<xsl:when test=". = 'module'">BMAC=m</xsl:when>
			<xsl:otherwise># BMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACMACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACMACE=y</xsl:when>
			<xsl:when test=". = 'module'">MACMACE=m</xsl:when>
			<xsl:otherwise># MACMACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ARC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ARC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ARC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARC_EMAC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARC_EMAC_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">ARC_EMAC_CORE=m</xsl:when>
			<xsl:otherwise># ARC_EMAC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARC_EMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARC_EMAC=y</xsl:when>
			<xsl:when test=". = 'module'">ARC_EMAC=m</xsl:when>
			<xsl:otherwise># ARC_EMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EMAC_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EMAC_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">EMAC_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># EMAC_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ATHEROS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ATHEROS=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ATHEROS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATL2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATL2=y</xsl:when>
			<xsl:when test=". = 'module'">ATL2=m</xsl:when>
			<xsl:otherwise># ATL2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATL1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATL1=y</xsl:when>
			<xsl:when test=". = 'module'">ATL1=m</xsl:when>
			<xsl:otherwise># ATL1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATL1E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATL1E=y</xsl:when>
			<xsl:when test=". = 'module'">ATL1E=m</xsl:when>
			<xsl:otherwise># ATL1E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATL1C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATL1C=y</xsl:when>
			<xsl:when test=". = 'module'">ATL1C=m</xsl:when>
			<xsl:otherwise># ATL1C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALX=y</xsl:when>
			<xsl:when test=". = 'module'">ALX=m</xsl:when>
			<xsl:otherwise># ALX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_AURORA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_AURORA=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_AURORA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AURORA_NB8800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AURORA_NB8800=y</xsl:when>
			<xsl:when test=". = 'module'">AURORA_NB8800=m</xsl:when>
			<xsl:otherwise># AURORA_NB8800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_CADENCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_CADENCE=y</xsl:when>
			<xsl:otherwise># NET_CADENCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACB=y</xsl:when>
			<xsl:when test=". = 'module'">MACB=m</xsl:when>
			<xsl:otherwise># MACB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_BFIN=y</xsl:when>
			<xsl:otherwise># NET_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_MAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_MAC=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_MAC=m</xsl:when>
			<xsl:otherwise># BFIN_MAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_MAC_USE_L1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_MAC_USE_L1=y</xsl:when>
			<xsl:otherwise># BFIN_MAC_USE_L1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_TX_DESC_NUM">
		BFIN_TX_DESC_NUM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BFIN_RX_DESC_NUM">
		BFIN_RX_DESC_NUM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BFIN_MAC_USE_HWSTAMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_MAC_USE_HWSTAMP=y</xsl:when>
			<xsl:otherwise># BFIN_MAC_USE_HWSTAMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_BROADCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_BROADCOM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_BROADCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B44">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B44=y</xsl:when>
			<xsl:when test=". = 'module'">B44=m</xsl:when>
			<xsl:otherwise># B44 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B44_PCI_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B44_PCI_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B44_PCI_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B44_PCICORE_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B44_PCICORE_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B44_PCICORE_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B44_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B44_PCI=y</xsl:when>
			<xsl:otherwise># B44_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM63XX_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM63XX_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">BCM63XX_ENET=m</xsl:when>
			<xsl:otherwise># BCM63XX_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMGENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMGENET=y</xsl:when>
			<xsl:when test=". = 'module'">BCMGENET=m</xsl:when>
			<xsl:otherwise># BCMGENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNX2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNX2=y</xsl:when>
			<xsl:when test=". = 'module'">BNX2=m</xsl:when>
			<xsl:otherwise># BNX2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CNIC=y</xsl:when>
			<xsl:when test=". = 'module'">CNIC=m</xsl:when>
			<xsl:otherwise># CNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SB1250_MAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SB1250_MAC=y</xsl:when>
			<xsl:when test=". = 'module'">SB1250_MAC=m</xsl:when>
			<xsl:otherwise># SB1250_MAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIGON3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIGON3=y</xsl:when>
			<xsl:when test=". = 'module'">TIGON3=m</xsl:when>
			<xsl:otherwise># TIGON3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNX2X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNX2X=y</xsl:when>
			<xsl:when test=". = 'module'">BNX2X=m</xsl:when>
			<xsl:otherwise># BNX2X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNX2X_SRIOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNX2X_SRIOV=y</xsl:when>
			<xsl:otherwise># BNX2X_SRIOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BGMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BGMAC=y</xsl:when>
			<xsl:when test=". = 'module'">BGMAC=m</xsl:when>
			<xsl:otherwise># BGMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BGMAC_BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BGMAC_BCMA=y</xsl:when>
			<xsl:when test=". = 'module'">BGMAC_BCMA=m</xsl:when>
			<xsl:otherwise># BGMAC_BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BGMAC_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BGMAC_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">BGMAC_PLATFORM=m</xsl:when>
			<xsl:otherwise># BGMAC_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSTEMPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSTEMPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SYSTEMPORT=m</xsl:when>
			<xsl:otherwise># SYSTEMPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNXT=y</xsl:when>
			<xsl:when test=". = 'module'">BNXT=m</xsl:when>
			<xsl:otherwise># BNXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNXT_SRIOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNXT_SRIOV=y</xsl:when>
			<xsl:otherwise># BNXT_SRIOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_BROCADE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_BROCADE=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_BROCADE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BNA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BNA=y</xsl:when>
			<xsl:when test=". = 'module'">BNA=m</xsl:when>
			<xsl:otherwise># BNA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_CALXEDA_XGMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_CALXEDA_XGMAC=y</xsl:when>
			<xsl:when test=". = 'module'">NET_CALXEDA_XGMAC=m</xsl:when>
			<xsl:otherwise># NET_CALXEDA_XGMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_CAVIUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_CAVIUM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_CAVIUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THUNDER_NIC_PF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THUNDER_NIC_PF=y</xsl:when>
			<xsl:when test=". = 'module'">THUNDER_NIC_PF=m</xsl:when>
			<xsl:otherwise># THUNDER_NIC_PF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THUNDER_NIC_VF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THUNDER_NIC_VF=y</xsl:when>
			<xsl:when test=". = 'module'">THUNDER_NIC_VF=m</xsl:when>
			<xsl:otherwise># THUNDER_NIC_VF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THUNDER_NIC_BGX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THUNDER_NIC_BGX=y</xsl:when>
			<xsl:when test=". = 'module'">THUNDER_NIC_BGX=m</xsl:when>
			<xsl:otherwise># THUNDER_NIC_BGX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIQUIDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIQUIDIO=y</xsl:when>
			<xsl:when test=". = 'module'">LIQUIDIO=m</xsl:when>
			<xsl:otherwise># LIQUIDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCTEON_MGMT_ETHERNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCTEON_MGMT_ETHERNET=y</xsl:when>
			<xsl:when test=". = 'module'">OCTEON_MGMT_ETHERNET=m</xsl:when>
			<xsl:otherwise># OCTEON_MGMT_ETHERNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_CHELSIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_CHELSIO=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_CHELSIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T1=y</xsl:when>
			<xsl:when test=". = 'module'">CHELSIO_T1=m</xsl:when>
			<xsl:otherwise># CHELSIO_T1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T1_1G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T1_1G=y</xsl:when>
			<xsl:otherwise># CHELSIO_T1_1G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T3=y</xsl:when>
			<xsl:when test=". = 'module'">CHELSIO_T3=m</xsl:when>
			<xsl:otherwise># CHELSIO_T3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T4=y</xsl:when>
			<xsl:when test=". = 'module'">CHELSIO_T4=m</xsl:when>
			<xsl:otherwise># CHELSIO_T4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T4_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T4_DCB=y</xsl:when>
			<xsl:otherwise># CHELSIO_T4_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T4_FCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T4_FCOE=y</xsl:when>
			<xsl:otherwise># CHELSIO_T4_FCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_T4VF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_T4VF=y</xsl:when>
			<xsl:when test=". = 'module'">CHELSIO_T4VF=m</xsl:when>
			<xsl:otherwise># CHELSIO_T4VF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHELSIO_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHELSIO_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">CHELSIO_LIB=m</xsl:when>
			<xsl:otherwise># CHELSIO_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_CIRRUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_CIRRUS=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_CIRRUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CS89x0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CS89x0=y</xsl:when>
			<xsl:when test=". = 'module'">CS89x0=m</xsl:when>
			<xsl:otherwise># CS89x0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CS89x0_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CS89x0_PLATFORM=y</xsl:when>
			<xsl:otherwise># CS89x0_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EP93XX_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EP93XX_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">EP93XX_ETH=m</xsl:when>
			<xsl:otherwise># EP93XX_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC89x0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC89x0=y</xsl:when>
			<xsl:when test=". = 'module'">MAC89x0=m</xsl:when>
			<xsl:otherwise># MAC89x0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_CISCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_CISCO=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_CISCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENIC=y</xsl:when>
			<xsl:when test=". = 'module'">ENIC=m</xsl:when>
			<xsl:otherwise># ENIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CX_ECAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CX_ECAT=y</xsl:when>
			<xsl:when test=". = 'module'">CX_ECAT=m</xsl:when>
			<xsl:otherwise># CX_ECAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM9000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM9000=y</xsl:when>
			<xsl:when test=". = 'module'">DM9000=m</xsl:when>
			<xsl:otherwise># DM9000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM9000_FORCE_SIMPLE_PHY_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM9000_FORCE_SIMPLE_PHY_POLL=y</xsl:when>
			<xsl:otherwise># DM9000_FORCE_SIMPLE_PHY_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DNET=y</xsl:when>
			<xsl:when test=". = 'module'">DNET=m</xsl:when>
			<xsl:otherwise># DNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_DEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_DEC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_DEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_TULIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_TULIP=y</xsl:when>
			<xsl:otherwise># NET_TULIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DE2104X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DE2104X=y</xsl:when>
			<xsl:when test=". = 'module'">DE2104X=m</xsl:when>
			<xsl:otherwise># DE2104X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DE2104X_DSL">
		DE2104X_DSL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="TULIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP=y</xsl:when>
			<xsl:when test=". = 'module'">TULIP=m</xsl:when>
			<xsl:otherwise># TULIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TULIP_MWI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP_MWI=y</xsl:when>
			<xsl:otherwise># TULIP_MWI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TULIP_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP_MMIO=y</xsl:when>
			<xsl:otherwise># TULIP_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TULIP_NAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP_NAPI=y</xsl:when>
			<xsl:otherwise># TULIP_NAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TULIP_NAPI_HW_MITIGATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP_NAPI_HW_MITIGATION=y</xsl:when>
			<xsl:otherwise># TULIP_NAPI_HW_MITIGATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TULIP_DM910X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TULIP_DM910X=y</xsl:when>
			<xsl:otherwise># TULIP_DM910X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DE4X5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DE4X5=y</xsl:when>
			<xsl:when test=". = 'module'">DE4X5=m</xsl:when>
			<xsl:otherwise># DE4X5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WINBOND_840">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WINBOND_840=y</xsl:when>
			<xsl:when test=". = 'module'">WINBOND_840=m</xsl:when>
			<xsl:otherwise># WINBOND_840 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DM9102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DM9102=y</xsl:when>
			<xsl:when test=". = 'module'">DM9102=m</xsl:when>
			<xsl:otherwise># DM9102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ULI526X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ULI526X=y</xsl:when>
			<xsl:when test=". = 'module'">ULI526X=m</xsl:when>
			<xsl:otherwise># ULI526X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_XIRCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_XIRCOM=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_XIRCOM=m</xsl:when>
			<xsl:otherwise># PCMCIA_XIRCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_DLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_DLINK=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_DLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DL2K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DL2K=y</xsl:when>
			<xsl:when test=". = 'module'">DL2K=m</xsl:when>
			<xsl:otherwise># DL2K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNDANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNDANCE=y</xsl:when>
			<xsl:when test=". = 'module'">SUNDANCE=m</xsl:when>
			<xsl:otherwise># SUNDANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNDANCE_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNDANCE_MMIO=y</xsl:when>
			<xsl:otherwise># SUNDANCE_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_EMULEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_EMULEX=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_EMULEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BE2NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BE2NET=y</xsl:when>
			<xsl:when test=". = 'module'">BE2NET=m</xsl:when>
			<xsl:otherwise># BE2NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BE2NET_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BE2NET_HWMON=y</xsl:when>
			<xsl:otherwise># BE2NET_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_EZCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_EZCHIP=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_EZCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EZCHIP_NPS_MANAGEMENT_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EZCHIP_NPS_MANAGEMENT_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">EZCHIP_NPS_MANAGEMENT_ENET=m</xsl:when>
			<xsl:otherwise># EZCHIP_NPS_MANAGEMENT_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_EXAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_EXAR=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_EXAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S2IO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S2IO=y</xsl:when>
			<xsl:when test=". = 'module'">S2IO=m</xsl:when>
			<xsl:otherwise># S2IO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VXGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VXGE=y</xsl:when>
			<xsl:when test=". = 'module'">VXGE=m</xsl:when>
			<xsl:otherwise># VXGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VXGE_DEBUG_TRACE_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VXGE_DEBUG_TRACE_ALL=y</xsl:when>
			<xsl:otherwise># VXGE_DEBUG_TRACE_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_FARADAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_FARADAY=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_FARADAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FTMAC100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FTMAC100=y</xsl:when>
			<xsl:when test=". = 'module'">FTMAC100=m</xsl:when>
			<xsl:otherwise># FTMAC100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FTGMAC100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FTGMAC100=y</xsl:when>
			<xsl:when test=". = 'module'">FTGMAC100=m</xsl:when>
			<xsl:otherwise># FTGMAC100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_FREESCALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_FREESCALE=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_FREESCALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FEC=y</xsl:when>
			<xsl:when test=". = 'module'">FEC=m</xsl:when>
			<xsl:otherwise># FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FEC_MPC52xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FEC_MPC52xx=y</xsl:when>
			<xsl:when test=". = 'module'">FEC_MPC52xx=m</xsl:when>
			<xsl:otherwise># FEC_MPC52xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FEC_MPC52xx_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FEC_MPC52xx_MDIO=y</xsl:when>
			<xsl:otherwise># FEC_MPC52xx_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">FS_ENET=m</xsl:when>
			<xsl:otherwise># FS_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_MPC5121_FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_MPC5121_FEC=y</xsl:when>
			<xsl:otherwise># FS_ENET_MPC5121_FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_HAS_SCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_HAS_SCC=y</xsl:when>
			<xsl:otherwise># FS_ENET_HAS_SCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_HAS_FCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_HAS_FCC=y</xsl:when>
			<xsl:otherwise># FS_ENET_HAS_FCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_HAS_FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_HAS_FEC=y</xsl:when>
			<xsl:otherwise># FS_ENET_HAS_FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_MDIO_FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_MDIO_FEC=y</xsl:when>
			<xsl:when test=". = 'module'">FS_ENET_MDIO_FEC=m</xsl:when>
			<xsl:otherwise># FS_ENET_MDIO_FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENET_MDIO_FCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENET_MDIO_FCC=y</xsl:when>
			<xsl:when test=". = 'module'">FS_ENET_MDIO_FCC=m</xsl:when>
			<xsl:otherwise># FS_ENET_MDIO_FCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_FMAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_FMAN=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_FMAN=m</xsl:when>
			<xsl:otherwise># FSL_FMAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_PQ_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_PQ_MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_PQ_MDIO=m</xsl:when>
			<xsl:otherwise># FSL_PQ_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_XGMAC_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_XGMAC_MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_XGMAC_MDIO=m</xsl:when>
			<xsl:otherwise># FSL_XGMAC_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCC_GETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCC_GETH=y</xsl:when>
			<xsl:when test=". = 'module'">UCC_GETH=m</xsl:when>
			<xsl:otherwise># UCC_GETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UGETH_TX_ON_DEMAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UGETH_TX_ON_DEMAND=y</xsl:when>
			<xsl:otherwise># UGETH_TX_ON_DEMAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIANFAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIANFAR=y</xsl:when>
			<xsl:when test=". = 'module'">GIANFAR=m</xsl:when>
			<xsl:otherwise># GIANFAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_FUJITSU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_FUJITSU=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_FUJITSU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_FMVJ18X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_FMVJ18X=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_FMVJ18X=m</xsl:when>
			<xsl:otherwise># PCMCIA_FMVJ18X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_HISILICON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_HISILICON=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_HISILICON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIX5HD2_GMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIX5HD2_GMAC=y</xsl:when>
			<xsl:when test=". = 'module'">HIX5HD2_GMAC=m</xsl:when>
			<xsl:otherwise># HIX5HD2_GMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISI_FEMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISI_FEMAC=y</xsl:when>
			<xsl:when test=". = 'module'">HISI_FEMAC=m</xsl:when>
			<xsl:otherwise># HISI_FEMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIP04_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIP04_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">HIP04_ETH=m</xsl:when>
			<xsl:otherwise># HIP04_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HNS_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HNS_MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">HNS_MDIO=m</xsl:when>
			<xsl:otherwise># HNS_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HNS=y</xsl:when>
			<xsl:when test=". = 'module'">HNS=m</xsl:when>
			<xsl:otherwise># HNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HNS_DSAF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HNS_DSAF=y</xsl:when>
			<xsl:when test=". = 'module'">HNS_DSAF=m</xsl:when>
			<xsl:otherwise># HNS_DSAF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HNS_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HNS_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">HNS_ENET=m</xsl:when>
			<xsl:otherwise># HNS_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_HP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_HP=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_HP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP100=y</xsl:when>
			<xsl:when test=". = 'module'">HP100=m</xsl:when>
			<xsl:otherwise># HP100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_IBM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_IBM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_IBM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBMVETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBMVETH=y</xsl:when>
			<xsl:when test=". = 'module'">IBMVETH=m</xsl:when>
			<xsl:otherwise># IBMVETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC=y</xsl:when>
			<xsl:when test=". = 'module'">IBM_EMAC=m</xsl:when>
			<xsl:otherwise># IBM_EMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_RXB">
		IBM_EMAC_RXB=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IBM_EMAC_TXB">
		IBM_EMAC_TXB=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IBM_EMAC_POLL_WEIGHT">
		IBM_EMAC_POLL_WEIGHT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IBM_EMAC_RX_COPY_THRESHOLD">
		IBM_EMAC_RX_COPY_THRESHOLD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IBM_EMAC_RX_SKB_HEADROOM">
		IBM_EMAC_RX_SKB_HEADROOM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IBM_EMAC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_DEBUG=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_ZMII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_ZMII=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_ZMII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_RGMII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_RGMII=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_RGMII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_TAH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_TAH=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_TAH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_EMAC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_EMAC4=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_EMAC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_NO_FLOW_CTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_NO_FLOW_CTRL=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_NO_FLOW_CTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_MAL_CLR_ICINTSTAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_MAL_CLR_ICINTSTAT=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_MAL_CLR_ICINTSTAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_EMAC_MAL_COMMON_ERR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_EMAC_MAL_COMMON_ERR=y</xsl:when>
			<xsl:otherwise># IBM_EMAC_MAL_COMMON_ERR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EHEA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EHEA=y</xsl:when>
			<xsl:when test=". = 'module'">EHEA=m</xsl:when>
			<xsl:otherwise># EHEA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBMVNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBMVNIC=y</xsl:when>
			<xsl:when test=". = 'module'">IBMVNIC=m</xsl:when>
			<xsl:otherwise># IBMVNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_INTEL=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="E100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">E100=y</xsl:when>
			<xsl:when test=". = 'module'">E100=m</xsl:when>
			<xsl:otherwise># E100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="E1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">E1000=y</xsl:when>
			<xsl:when test=". = 'module'">E1000=m</xsl:when>
			<xsl:otherwise># E1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="E1000E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">E1000E=y</xsl:when>
			<xsl:when test=". = 'module'">E1000E=m</xsl:when>
			<xsl:otherwise># E1000E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="E1000E_HWTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">E1000E_HWTS=y</xsl:when>
			<xsl:otherwise># E1000E_HWTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IGB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IGB=y</xsl:when>
			<xsl:when test=". = 'module'">IGB=m</xsl:when>
			<xsl:otherwise># IGB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IGB_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IGB_HWMON=y</xsl:when>
			<xsl:otherwise># IGB_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IGB_DCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IGB_DCA=y</xsl:when>
			<xsl:otherwise># IGB_DCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IGBVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IGBVF=y</xsl:when>
			<xsl:when test=". = 'module'">IGBVF=m</xsl:when>
			<xsl:otherwise># IGBVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGB=y</xsl:when>
			<xsl:when test=". = 'module'">IXGB=m</xsl:when>
			<xsl:otherwise># IXGB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGBE=y</xsl:when>
			<xsl:when test=". = 'module'">IXGBE=m</xsl:when>
			<xsl:otherwise># IXGBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGBE_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGBE_HWMON=y</xsl:when>
			<xsl:otherwise># IXGBE_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGBE_DCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGBE_DCA=y</xsl:when>
			<xsl:otherwise># IXGBE_DCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGBE_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGBE_DCB=y</xsl:when>
			<xsl:otherwise># IXGBE_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXGBEVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXGBEVF=y</xsl:when>
			<xsl:when test=". = 'module'">IXGBEVF=m</xsl:when>
			<xsl:otherwise># IXGBEVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I40E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I40E=y</xsl:when>
			<xsl:when test=". = 'module'">I40E=m</xsl:when>
			<xsl:otherwise># I40E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I40E_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I40E_DCB=y</xsl:when>
			<xsl:otherwise># I40E_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I40E_FCOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I40E_FCOE=y</xsl:when>
			<xsl:otherwise># I40E_FCOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I40EVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I40EVF=y</xsl:when>
			<xsl:when test=". = 'module'">I40EVF=m</xsl:when>
			<xsl:otherwise># I40EVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FM10K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FM10K=y</xsl:when>
			<xsl:when test=". = 'module'">FM10K=m</xsl:when>
			<xsl:otherwise># FM10K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_I825XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_I825XX=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_I825XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ETHER1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ETHER1=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_ETHER1=m</xsl:when>
			<xsl:otherwise># ARM_ETHER1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BVME6000_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BVME6000_NET=y</xsl:when>
			<xsl:when test=". = 'module'">BVME6000_NET=m</xsl:when>
			<xsl:otherwise># BVME6000_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LASI_82596">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LASI_82596=y</xsl:when>
			<xsl:when test=". = 'module'">LASI_82596=m</xsl:when>
			<xsl:otherwise># LASI_82596 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVME16x_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVME16x_NET=y</xsl:when>
			<xsl:when test=". = 'module'">MVME16x_NET=m</xsl:when>
			<xsl:otherwise># MVME16x_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SNI_82596">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SNI_82596=y</xsl:when>
			<xsl:when test=". = 'module'">SNI_82596=m</xsl:when>
			<xsl:otherwise># SNI_82596 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN3_82586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN3_82586=y</xsl:when>
			<xsl:otherwise># SUN3_82586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_XSCALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_XSCALE=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_XSCALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXP4XX_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXP4XX_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">IXP4XX_ETH=m</xsl:when>
			<xsl:otherwise># IXP4XX_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JME=y</xsl:when>
			<xsl:when test=". = 'module'">JME=m</xsl:when>
			<xsl:otherwise># JME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KORINA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KORINA=y</xsl:when>
			<xsl:when test=". = 'module'">KORINA=m</xsl:when>
			<xsl:otherwise># KORINA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LANTIQ_ETOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LANTIQ_ETOP=y</xsl:when>
			<xsl:when test=". = 'module'">LANTIQ_ETOP=m</xsl:when>
			<xsl:otherwise># LANTIQ_ETOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MARVELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MARVELL=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MARVELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MV643XX_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MV643XX_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">MV643XX_ETH=m</xsl:when>
			<xsl:otherwise># MV643XX_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVMDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVMDIO=y</xsl:when>
			<xsl:when test=". = 'module'">MVMDIO=m</xsl:when>
			<xsl:otherwise># MVMDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVNETA_BM_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVNETA_BM_ENABLE=y</xsl:when>
			<xsl:when test=". = 'module'">MVNETA_BM_ENABLE=m</xsl:when>
			<xsl:otherwise># MVNETA_BM_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVNETA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVNETA=y</xsl:when>
			<xsl:when test=". = 'module'">MVNETA=m</xsl:when>
			<xsl:otherwise># MVNETA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVNETA_BM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVNETA_BM=y</xsl:when>
			<xsl:when test=". = 'module'">MVNETA_BM=m</xsl:when>
			<xsl:otherwise># MVNETA_BM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVPP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVPP2=y</xsl:when>
			<xsl:when test=". = 'module'">MVPP2=m</xsl:when>
			<xsl:otherwise># MVPP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PXA168_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PXA168_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">PXA168_ETH=m</xsl:when>
			<xsl:otherwise># PXA168_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKGE=y</xsl:when>
			<xsl:when test=". = 'module'">SKGE=m</xsl:when>
			<xsl:otherwise># SKGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKGE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKGE_DEBUG=y</xsl:when>
			<xsl:otherwise># SKGE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKGE_GENESIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKGE_GENESIS=y</xsl:when>
			<xsl:otherwise># SKGE_GENESIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKY2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKY2=y</xsl:when>
			<xsl:when test=". = 'module'">SKY2=m</xsl:when>
			<xsl:otherwise># SKY2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKY2_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKY2_DEBUG=y</xsl:when>
			<xsl:otherwise># SKY2_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MEDIATEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MEDIATEK=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MEDIATEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_MEDIATEK_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_MEDIATEK_SOC=y</xsl:when>
			<xsl:when test=". = 'module'">NET_MEDIATEK_SOC=m</xsl:when>
			<xsl:otherwise># NET_MEDIATEK_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MELLANOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MELLANOX=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MELLANOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX4_EN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX4_EN=y</xsl:when>
			<xsl:when test=". = 'module'">MLX4_EN=m</xsl:when>
			<xsl:otherwise># MLX4_EN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX4_EN_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX4_EN_DCB=y</xsl:when>
			<xsl:otherwise># MLX4_EN_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX4_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX4_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MLX4_CORE=m</xsl:when>
			<xsl:otherwise># MLX4_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX4_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX4_DEBUG=y</xsl:when>
			<xsl:otherwise># MLX4_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX5_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX5_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MLX5_CORE=m</xsl:when>
			<xsl:otherwise># MLX5_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX5_CORE_EN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX5_CORE_EN=y</xsl:when>
			<xsl:otherwise># MLX5_CORE_EN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX5_CORE_EN_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX5_CORE_EN_DCB=y</xsl:when>
			<xsl:otherwise># MLX5_CORE_EN_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MLXSW_CORE=m</xsl:when>
			<xsl:otherwise># MLXSW_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_CORE_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_CORE_HWMON=y</xsl:when>
			<xsl:otherwise># MLXSW_CORE_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MLXSW_PCI=m</xsl:when>
			<xsl:otherwise># MLXSW_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_SWITCHX2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_SWITCHX2=y</xsl:when>
			<xsl:when test=". = 'module'">MLXSW_SWITCHX2=m</xsl:when>
			<xsl:otherwise># MLXSW_SWITCHX2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_SPECTRUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_SPECTRUM=y</xsl:when>
			<xsl:when test=". = 'module'">MLXSW_SPECTRUM=m</xsl:when>
			<xsl:otherwise># MLXSW_SPECTRUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLXSW_SPECTRUM_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLXSW_SPECTRUM_DCB=y</xsl:when>
			<xsl:otherwise># MLXSW_SPECTRUM_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MICREL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MICREL=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MICREL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_KS8695_ETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_KS8695_ETHER=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_KS8695_ETHER=m</xsl:when>
			<xsl:otherwise># ARM_KS8695_ETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS8842">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS8842=y</xsl:when>
			<xsl:when test=". = 'module'">KS8842=m</xsl:when>
			<xsl:otherwise># KS8842 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS8851">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS8851=y</xsl:when>
			<xsl:when test=". = 'module'">KS8851=m</xsl:when>
			<xsl:otherwise># KS8851 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS8851_MLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS8851_MLL=y</xsl:when>
			<xsl:when test=". = 'module'">KS8851_MLL=m</xsl:when>
			<xsl:otherwise># KS8851_MLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KSZ884X_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KSZ884X_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">KSZ884X_PCI=m</xsl:when>
			<xsl:otherwise># KSZ884X_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MICROCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MICROCHIP=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MICROCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENC28J60">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENC28J60=y</xsl:when>
			<xsl:when test=". = 'module'">ENC28J60=m</xsl:when>
			<xsl:otherwise># ENC28J60 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENC28J60_WRITEVERIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENC28J60_WRITEVERIFY=y</xsl:when>
			<xsl:otherwise># ENC28J60_WRITEVERIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENCX24J600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENCX24J600=y</xsl:when>
			<xsl:when test=". = 'module'">ENCX24J600=m</xsl:when>
			<xsl:otherwise># ENCX24J600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MOXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MOXART=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MOXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_MOXART_ETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_MOXART_ETHER=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_MOXART_ETHER=m</xsl:when>
			<xsl:otherwise># ARM_MOXART_ETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_MYRI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_MYRI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_MYRI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MYRI10GE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MYRI10GE=y</xsl:when>
			<xsl:when test=". = 'module'">MYRI10GE=m</xsl:when>
			<xsl:otherwise># MYRI10GE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MYRI10GE_DCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MYRI10GE_DCA=y</xsl:when>
			<xsl:otherwise># MYRI10GE_DCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FEALNX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FEALNX=y</xsl:when>
			<xsl:when test=". = 'module'">FEALNX=m</xsl:when>
			<xsl:otherwise># FEALNX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_NATSEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_NATSEMI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_NATSEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MACSONIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MACSONIC=y</xsl:when>
			<xsl:when test=". = 'module'">MACSONIC=m</xsl:when>
			<xsl:otherwise># MACSONIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_JAZZ_SONIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_JAZZ_SONIC=y</xsl:when>
			<xsl:when test=". = 'module'">MIPS_JAZZ_SONIC=m</xsl:when>
			<xsl:otherwise># MIPS_JAZZ_SONIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NATSEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NATSEMI=y</xsl:when>
			<xsl:when test=". = 'module'">NATSEMI=m</xsl:when>
			<xsl:otherwise># NATSEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NS83820">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NS83820=y</xsl:when>
			<xsl:when test=". = 'module'">NS83820=m</xsl:when>
			<xsl:otherwise># NS83820 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XTENSA_XT2000_SONIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XTENSA_XT2000_SONIC=y</xsl:when>
			<xsl:when test=". = 'module'">XTENSA_XT2000_SONIC=m</xsl:when>
			<xsl:otherwise># XTENSA_XT2000_SONIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_NETRONOME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_NETRONOME=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_NETRONOME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFP_NETVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFP_NETVF=y</xsl:when>
			<xsl:when test=". = 'module'">NFP_NETVF=m</xsl:when>
			<xsl:otherwise># NFP_NETVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFP_NET_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFP_NET_DEBUG=y</xsl:when>
			<xsl:otherwise># NFP_NET_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_8390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_8390=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_8390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_AXNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_AXNET=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_AXNET=m</xsl:when>
			<xsl:otherwise># PCMCIA_AXNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AX88796">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AX88796=y</xsl:when>
			<xsl:when test=". = 'module'">AX88796=m</xsl:when>
			<xsl:otherwise># AX88796 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AX88796_93CX6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AX88796_93CX6=y</xsl:when>
			<xsl:otherwise># AX88796_93CX6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYDRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYDRA=y</xsl:when>
			<xsl:when test=". = 'module'">HYDRA=m</xsl:when>
			<xsl:otherwise># HYDRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ETHERH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ETHERH=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_ETHERH=m</xsl:when>
			<xsl:otherwise># ARM_ETHERH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC8390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC8390=y</xsl:when>
			<xsl:when test=". = 'module'">MAC8390=m</xsl:when>
			<xsl:otherwise># MAC8390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCF8390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCF8390=y</xsl:when>
			<xsl:when test=". = 'module'">MCF8390=m</xsl:when>
			<xsl:otherwise># MCF8390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NE2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NE2000=y</xsl:when>
			<xsl:when test=". = 'module'">NE2000=m</xsl:when>
			<xsl:otherwise># NE2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NE2K_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NE2K_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">NE2K_PCI=m</xsl:when>
			<xsl:otherwise># NE2K_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APNE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APNE=y</xsl:when>
			<xsl:when test=". = 'module'">APNE=m</xsl:when>
			<xsl:otherwise># APNE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_PCNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_PCNET=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_PCNET=m</xsl:when>
			<xsl:otherwise># PCMCIA_PCNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STNIC=y</xsl:when>
			<xsl:when test=". = 'module'">STNIC=m</xsl:when>
			<xsl:otherwise># STNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ULTRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ULTRA=y</xsl:when>
			<xsl:when test=". = 'module'">ULTRA=m</xsl:when>
			<xsl:otherwise># ULTRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WD80x3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WD80x3=y</xsl:when>
			<xsl:when test=". = 'module'">WD80x3=m</xsl:when>
			<xsl:otherwise># WD80x3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZORRO8390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZORRO8390=y</xsl:when>
			<xsl:when test=". = 'module'">ZORRO8390=m</xsl:when>
			<xsl:otherwise># ZORRO8390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_NETX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_NETX=y</xsl:when>
			<xsl:when test=". = 'module'">NET_NETX=m</xsl:when>
			<xsl:otherwise># NET_NETX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_NUVOTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_NUVOTON=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_NUVOTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W90P910_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W90P910_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">W90P910_ETH=m</xsl:when>
			<xsl:otherwise># W90P910_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_NVIDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_NVIDIA=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_NVIDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FORCEDETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FORCEDETH=y</xsl:when>
			<xsl:when test=". = 'module'">FORCEDETH=m</xsl:when>
			<xsl:otherwise># FORCEDETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC_ENET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC_ENET=y</xsl:when>
			<xsl:when test=". = 'module'">LPC_ENET=m</xsl:when>
			<xsl:otherwise># LPC_ENET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_OKI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_OKI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_OKI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCH_GBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCH_GBE=y</xsl:when>
			<xsl:when test=". = 'module'">PCH_GBE=m</xsl:when>
			<xsl:otherwise># PCH_GBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ETHOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ETHOC=y</xsl:when>
			<xsl:when test=". = 'module'">ETHOC=m</xsl:when>
			<xsl:otherwise># ETHOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_PACKET_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_PACKET_ENGINE=y</xsl:when>
			<xsl:otherwise># NET_PACKET_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAMACHI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAMACHI=y</xsl:when>
			<xsl:when test=". = 'module'">HAMACHI=m</xsl:when>
			<xsl:otherwise># HAMACHI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="YELLOWFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">YELLOWFIN=y</xsl:when>
			<xsl:when test=". = 'module'">YELLOWFIN=m</xsl:when>
			<xsl:otherwise># YELLOWFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_PASEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_PASEMI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_PASEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PASEMI_MAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PASEMI_MAC=y</xsl:when>
			<xsl:when test=". = 'module'">PASEMI_MAC=m</xsl:when>
			<xsl:otherwise># PASEMI_MAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_QLOGIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_QLOGIC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_QLOGIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLA3XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLA3XXX=y</xsl:when>
			<xsl:when test=". = 'module'">QLA3XXX=m</xsl:when>
			<xsl:otherwise># QLA3XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLCNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLCNIC=y</xsl:when>
			<xsl:when test=". = 'module'">QLCNIC=m</xsl:when>
			<xsl:otherwise># QLCNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLCNIC_SRIOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLCNIC_SRIOV=y</xsl:when>
			<xsl:otherwise># QLCNIC_SRIOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLCNIC_DCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLCNIC_DCB=y</xsl:when>
			<xsl:otherwise># QLCNIC_DCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLCNIC_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLCNIC_HWMON=y</xsl:when>
			<xsl:otherwise># QLCNIC_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QLGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QLGE=y</xsl:when>
			<xsl:when test=". = 'module'">QLGE=m</xsl:when>
			<xsl:otherwise># QLGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETXEN_NIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETXEN_NIC=y</xsl:when>
			<xsl:when test=". = 'module'">NETXEN_NIC=m</xsl:when>
			<xsl:otherwise># NETXEN_NIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QED=y</xsl:when>
			<xsl:when test=". = 'module'">QED=m</xsl:when>
			<xsl:otherwise># QED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QED_SRIOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QED_SRIOV=y</xsl:when>
			<xsl:otherwise># QED_SRIOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QEDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QEDE=y</xsl:when>
			<xsl:when test=". = 'module'">QEDE=m</xsl:when>
			<xsl:otherwise># QEDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_QUALCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_QUALCOMM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_QUALCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCA7000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCA7000=y</xsl:when>
			<xsl:when test=". = 'module'">QCA7000=m</xsl:when>
			<xsl:otherwise># QCA7000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_REALTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_REALTEK=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_REALTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATP=y</xsl:when>
			<xsl:when test=". = 'module'">ATP=m</xsl:when>
			<xsl:otherwise># ATP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139CP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139CP=y</xsl:when>
			<xsl:when test=". = 'module'">8139CP=m</xsl:when>
			<xsl:otherwise># 8139CP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139TOO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139TOO=y</xsl:when>
			<xsl:when test=". = 'module'">8139TOO=m</xsl:when>
			<xsl:otherwise># 8139TOO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139TOO_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139TOO_PIO=y</xsl:when>
			<xsl:otherwise># 8139TOO_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139TOO_TUNE_TWISTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139TOO_TUNE_TWISTER=y</xsl:when>
			<xsl:otherwise># 8139TOO_TUNE_TWISTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139TOO_8129">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139TOO_8129=y</xsl:when>
			<xsl:otherwise># 8139TOO_8129 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8139_OLD_RX_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8139_OLD_RX_RESET=y</xsl:when>
			<xsl:otherwise># 8139_OLD_RX_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R8169">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R8169=y</xsl:when>
			<xsl:when test=". = 'module'">R8169=m</xsl:when>
			<xsl:otherwise># R8169 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_RENESAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_RENESAS=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_RENESAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">SH_ETH=m</xsl:when>
			<xsl:otherwise># SH_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAVB=y</xsl:when>
			<xsl:when test=". = 'module'">RAVB=m</xsl:when>
			<xsl:otherwise># RAVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_RDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_RDC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_RDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R6040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R6040=y</xsl:when>
			<xsl:when test=". = 'module'">R6040=m</xsl:when>
			<xsl:otherwise># R6040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_ROCKER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_ROCKER=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_ROCKER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKER=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKER=m</xsl:when>
			<xsl:otherwise># ROCKER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SAMSUNG=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SXGBE_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SXGBE_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">SXGBE_ETH=m</xsl:when>
			<xsl:otherwise># SXGBE_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SEEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SEEQ=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SEEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ETHER3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ETHER3=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_ETHER3=m</xsl:when>
			<xsl:otherwise># ARM_ETHER3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGISEEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGISEEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SGISEEQ=m</xsl:when>
			<xsl:otherwise># SGISEEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SILAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SILAN=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SILAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC92031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC92031=y</xsl:when>
			<xsl:when test=". = 'module'">SC92031=m</xsl:when>
			<xsl:otherwise># SC92031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SIS=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIS900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIS900=y</xsl:when>
			<xsl:when test=". = 'module'">SIS900=m</xsl:when>
			<xsl:otherwise># SIS900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIS190">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIS190=y</xsl:when>
			<xsl:when test=". = 'module'">SIS190=m</xsl:when>
			<xsl:otherwise># SIS190 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFC=y</xsl:when>
			<xsl:when test=". = 'module'">SFC=m</xsl:when>
			<xsl:otherwise># SFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFC_MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFC_MTD=y</xsl:when>
			<xsl:otherwise># SFC_MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFC_MCDI_MON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFC_MCDI_MON=y</xsl:when>
			<xsl:otherwise># SFC_MCDI_MON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFC_SRIOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFC_SRIOV=y</xsl:when>
			<xsl:otherwise># SFC_SRIOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SFC_MCDI_LOGGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SFC_MCDI_LOGGING=y</xsl:when>
			<xsl:otherwise># SFC_MCDI_LOGGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SGI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SGI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SGI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_IOC3_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_IOC3_ETH=y</xsl:when>
			<xsl:otherwise># SGI_IOC3_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_O2MACE_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_O2MACE_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_O2MACE_ETH=m</xsl:when>
			<xsl:otherwise># SGI_O2MACE_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SMSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SMSC=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SMSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMC9194">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMC9194=y</xsl:when>
			<xsl:when test=". = 'module'">SMC9194=m</xsl:when>
			<xsl:otherwise># SMC9194 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMC91X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMC91X=y</xsl:when>
			<xsl:when test=". = 'module'">SMC91X=m</xsl:when>
			<xsl:otherwise># SMC91X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_SMC91C92">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_SMC91C92=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_SMC91C92=m</xsl:when>
			<xsl:otherwise># PCMCIA_SMC91C92 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EPIC100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EPIC100=y</xsl:when>
			<xsl:when test=". = 'module'">EPIC100=m</xsl:when>
			<xsl:otherwise># EPIC100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMC911X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMC911X=y</xsl:when>
			<xsl:when test=". = 'module'">SMC911X=m</xsl:when>
			<xsl:otherwise># SMC911X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSC911X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSC911X=y</xsl:when>
			<xsl:when test=". = 'module'">SMSC911X=m</xsl:when>
			<xsl:otherwise># SMSC911X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSC911X_ARCH_HOOKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSC911X_ARCH_HOOKS=y</xsl:when>
			<xsl:otherwise># SMSC911X_ARCH_HOOKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSC9420">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSC9420=y</xsl:when>
			<xsl:when test=". = 'module'">SMSC9420=m</xsl:when>
			<xsl:otherwise># SMSC9420 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_STMICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_STMICRO=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_STMICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMMAC_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMMAC_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">STMMAC_ETH=m</xsl:when>
			<xsl:otherwise># STMMAC_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMMAC_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMMAC_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">STMMAC_PLATFORM=m</xsl:when>
			<xsl:otherwise># STMMAC_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_GENERIC=m</xsl:when>
			<xsl:otherwise># DWMAC_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_IPQ806X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_IPQ806X=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_IPQ806X=m</xsl:when>
			<xsl:otherwise># DWMAC_IPQ806X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_LPC18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_LPC18XX=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_LPC18XX=m</xsl:when>
			<xsl:otherwise># DWMAC_LPC18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_MESON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_MESON=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_MESON=m</xsl:when>
			<xsl:otherwise># DWMAC_MESON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># DWMAC_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_SOCFPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_SOCFPGA=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_SOCFPGA=m</xsl:when>
			<xsl:otherwise># DWMAC_SOCFPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_STI=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_STI=m</xsl:when>
			<xsl:otherwise># DWMAC_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DWMAC_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DWMAC_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">DWMAC_SUNXI=m</xsl:when>
			<xsl:otherwise># DWMAC_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMMAC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMMAC_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">STMMAC_PCI=m</xsl:when>
			<xsl:otherwise># STMMAC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SUN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SUN=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SUN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAPPYMEAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAPPYMEAL=y</xsl:when>
			<xsl:when test=". = 'module'">HAPPYMEAL=m</xsl:when>
			<xsl:otherwise># HAPPYMEAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNBMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNBMAC=y</xsl:when>
			<xsl:when test=". = 'module'">SUNBMAC=m</xsl:when>
			<xsl:otherwise># SUNBMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNQE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNQE=y</xsl:when>
			<xsl:when test=". = 'module'">SUNQE=m</xsl:when>
			<xsl:otherwise># SUNQE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNGEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNGEM=y</xsl:when>
			<xsl:when test=". = 'module'">SUNGEM=m</xsl:when>
			<xsl:otherwise># SUNGEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CASSINI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CASSINI=y</xsl:when>
			<xsl:when test=". = 'module'">CASSINI=m</xsl:when>
			<xsl:otherwise># CASSINI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNVNET_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNVNET_COMMON=y</xsl:when>
			<xsl:otherwise># SUNVNET_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNVNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNVNET=y</xsl:when>
			<xsl:when test=". = 'module'">SUNVNET=m</xsl:when>
			<xsl:otherwise># SUNVNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LDMVSW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LDMVSW=y</xsl:when>
			<xsl:when test=". = 'module'">LDMVSW=m</xsl:when>
			<xsl:otherwise># LDMVSW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NIU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NIU=y</xsl:when>
			<xsl:when test=". = 'module'">NIU=m</xsl:when>
			<xsl:otherwise># NIU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_SYNOPSYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_SYNOPSYS=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_SYNOPSYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNOPSYS_DWC_ETH_QOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNOPSYS_DWC_ETH_QOS=y</xsl:when>
			<xsl:when test=". = 'module'">SYNOPSYS_DWC_ETH_QOS=m</xsl:when>
			<xsl:otherwise># SYNOPSYS_DWC_ETH_QOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_TEHUTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_TEHUTI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_TEHUTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEHUTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEHUTI=y</xsl:when>
			<xsl:when test=". = 'module'">TEHUTI=m</xsl:when>
			<xsl:otherwise># TEHUTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_TI=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_DAVINCI_EMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_DAVINCI_EMAC=y</xsl:when>
			<xsl:when test=". = 'module'">TI_DAVINCI_EMAC=m</xsl:when>
			<xsl:otherwise># TI_DAVINCI_EMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_DAVINCI_MDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_DAVINCI_MDIO=y</xsl:when>
			<xsl:when test=". = 'module'">TI_DAVINCI_MDIO=m</xsl:when>
			<xsl:otherwise># TI_DAVINCI_MDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_DAVINCI_CPDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_DAVINCI_CPDMA=y</xsl:when>
			<xsl:when test=". = 'module'">TI_DAVINCI_CPDMA=m</xsl:when>
			<xsl:otherwise># TI_DAVINCI_CPDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_CPSW_PHY_SEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_CPSW_PHY_SEL=y</xsl:when>
			<xsl:otherwise># TI_CPSW_PHY_SEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_CPSW_ALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_CPSW_ALE=y</xsl:when>
			<xsl:when test=". = 'module'">TI_CPSW_ALE=m</xsl:when>
			<xsl:otherwise># TI_CPSW_ALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_CPSW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_CPSW=y</xsl:when>
			<xsl:when test=". = 'module'">TI_CPSW=m</xsl:when>
			<xsl:otherwise># TI_CPSW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_CPTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_CPTS=y</xsl:when>
			<xsl:otherwise># TI_CPTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_KEYSTONE_NETCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_KEYSTONE_NETCP=y</xsl:when>
			<xsl:when test=". = 'module'">TI_KEYSTONE_NETCP=m</xsl:when>
			<xsl:otherwise># TI_KEYSTONE_NETCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_KEYSTONE_NETCP_ETHSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_KEYSTONE_NETCP_ETHSS=y</xsl:when>
			<xsl:when test=". = 'module'">TI_KEYSTONE_NETCP_ETHSS=m</xsl:when>
			<xsl:otherwise># TI_KEYSTONE_NETCP_ETHSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TILE_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TILE_NET=y</xsl:when>
			<xsl:when test=". = 'module'">TILE_NET=m</xsl:when>
			<xsl:otherwise># TILE_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_TOSHIBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_TOSHIBA=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_TOSHIBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GELIC_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GELIC_NET=y</xsl:when>
			<xsl:when test=". = 'module'">GELIC_NET=m</xsl:when>
			<xsl:otherwise># GELIC_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GELIC_WIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GELIC_WIRELESS=y</xsl:when>
			<xsl:otherwise># GELIC_WIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPIDER_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPIDER_NET=y</xsl:when>
			<xsl:when test=". = 'module'">SPIDER_NET=m</xsl:when>
			<xsl:otherwise># SPIDER_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TC35815">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TC35815=y</xsl:when>
			<xsl:when test=". = 'module'">TC35815=m</xsl:when>
			<xsl:otherwise># TC35815 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_TUNDRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_TUNDRA=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_TUNDRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSI108_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSI108_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">TSI108_ETH=m</xsl:when>
			<xsl:otherwise># TSI108_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_VIA=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIA_RHINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIA_RHINE=y</xsl:when>
			<xsl:when test=". = 'module'">VIA_RHINE=m</xsl:when>
			<xsl:otherwise># VIA_RHINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIA_RHINE_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIA_RHINE_MMIO=y</xsl:when>
			<xsl:otherwise># VIA_RHINE_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIA_VELOCITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIA_VELOCITY=y</xsl:when>
			<xsl:when test=". = 'module'">VIA_VELOCITY=m</xsl:when>
			<xsl:otherwise># VIA_VELOCITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_WIZNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_WIZNET=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_WIZNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_W5100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_W5100=y</xsl:when>
			<xsl:when test=". = 'module'">WIZNET_W5100=m</xsl:when>
			<xsl:otherwise># WIZNET_W5100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_W5300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_W5300=y</xsl:when>
			<xsl:when test=". = 'module'">WIZNET_W5300=m</xsl:when>
			<xsl:otherwise># WIZNET_W5300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_BUS_DIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_BUS_DIRECT=y</xsl:when>
			<xsl:otherwise># WIZNET_BUS_DIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_BUS_INDIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_BUS_INDIRECT=y</xsl:when>
			<xsl:otherwise># WIZNET_BUS_INDIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_BUS_ANY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_BUS_ANY=y</xsl:when>
			<xsl:otherwise># WIZNET_BUS_ANY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIZNET_W5100_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIZNET_W5100_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">WIZNET_W5100_SPI=m</xsl:when>
			<xsl:otherwise># WIZNET_W5100_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_XILINX=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_EMACLITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_EMACLITE=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_EMACLITE=m</xsl:when>
			<xsl:otherwise># XILINX_EMACLITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_AXI_EMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_AXI_EMAC=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_AXI_EMAC=m</xsl:when>
			<xsl:otherwise># XILINX_AXI_EMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_LL_TEMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_LL_TEMAC=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_LL_TEMAC=m</xsl:when>
			<xsl:otherwise># XILINX_LL_TEMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_VENDOR_XIRCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_VENDOR_XIRCOM=y</xsl:when>
			<xsl:otherwise># NET_VENDOR_XIRCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_XIRC2PS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_XIRC2PS=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_XIRC2PS=m</xsl:when>
			<xsl:otherwise># PCMCIA_XIRC2PS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FDDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FDDI=y</xsl:when>
			<xsl:when test=". = 'module'">FDDI=m</xsl:when>
			<xsl:otherwise># FDDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFXX=y</xsl:when>
			<xsl:when test=". = 'module'">DEFXX=m</xsl:when>
			<xsl:otherwise># DEFXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFXX_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFXX_MMIO=y</xsl:when>
			<xsl:otherwise># DEFXX_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SKFP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SKFP=y</xsl:when>
			<xsl:when test=". = 'module'">SKFP=m</xsl:when>
			<xsl:otherwise># SKFP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIPPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIPPI=y</xsl:when>
			<xsl:otherwise># HIPPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROADRUNNER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROADRUNNER=y</xsl:when>
			<xsl:when test=". = 'module'">ROADRUNNER=m</xsl:when>
			<xsl:otherwise># ROADRUNNER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROADRUNNER_LARGE_RINGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROADRUNNER_LARGE_RINGS=y</xsl:when>
			<xsl:otherwise># ROADRUNNER_LARGE_RINGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NET_SB1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NET_SB1000=y</xsl:when>
			<xsl:when test=". = 'module'">NET_SB1000=m</xsl:when>
			<xsl:otherwise># NET_SB1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHYLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHYLIB=y</xsl:when>
			<xsl:when test=". = 'module'">PHYLIB=m</xsl:when>
			<xsl:otherwise># PHYLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SWPHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SWPHY=y</xsl:when>
			<xsl:otherwise># SWPHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AQUANTIA_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AQUANTIA_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">AQUANTIA_PHY=m</xsl:when>
			<xsl:otherwise># AQUANTIA_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT803X_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT803X_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">AT803X_PHY=m</xsl:when>
			<xsl:otherwise># AT803X_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">AMD_PHY=m</xsl:when>
			<xsl:otherwise># AMD_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MARVELL_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MARVELL_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">MARVELL_PHY=m</xsl:when>
			<xsl:otherwise># MARVELL_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DAVICOM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DAVICOM_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">DAVICOM_PHY=m</xsl:when>
			<xsl:otherwise># DAVICOM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QSEMI_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QSEMI_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">QSEMI_PHY=m</xsl:when>
			<xsl:otherwise># QSEMI_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LXT_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LXT_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">LXT_PHY=m</xsl:when>
			<xsl:otherwise># LXT_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CICADA_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CICADA_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">CICADA_PHY=m</xsl:when>
			<xsl:otherwise># CICADA_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VITESSE_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VITESSE_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">VITESSE_PHY=m</xsl:when>
			<xsl:otherwise># VITESSE_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TERANETICS_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TERANETICS_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">TERANETICS_PHY=m</xsl:when>
			<xsl:otherwise># TERANETICS_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSC_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSC_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">SMSC_PHY=m</xsl:when>
			<xsl:otherwise># SMSC_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_NET_PHYLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_NET_PHYLIB=y</xsl:when>
			<xsl:when test=". = 'module'">BCM_NET_PHYLIB=m</xsl:when>
			<xsl:otherwise># BCM_NET_PHYLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BROADCOM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BROADCOM_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BROADCOM_PHY=m</xsl:when>
			<xsl:otherwise># BROADCOM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_CYGNUS_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_CYGNUS_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BCM_CYGNUS_PHY=m</xsl:when>
			<xsl:otherwise># BCM_CYGNUS_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM63XX_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM63XX_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BCM63XX_PHY=m</xsl:when>
			<xsl:otherwise># BCM63XX_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM7XXX_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM7XXX_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BCM7XXX_PHY=m</xsl:when>
			<xsl:otherwise># BCM7XXX_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM87XX_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM87XX_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BCM87XX_PHY=m</xsl:when>
			<xsl:otherwise># BCM87XX_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ICPLUS_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ICPLUS_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">ICPLUS_PHY=m</xsl:when>
			<xsl:otherwise># ICPLUS_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REALTEK_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REALTEK_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">REALTEK_PHY=m</xsl:when>
			<xsl:otherwise># REALTEK_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NATIONAL_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NATIONAL_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">NATIONAL_PHY=m</xsl:when>
			<xsl:otherwise># NATIONAL_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STE10XP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STE10XP=y</xsl:when>
			<xsl:when test=". = 'module'">STE10XP=m</xsl:when>
			<xsl:otherwise># STE10XP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LSI_ET1011C_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LSI_ET1011C_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">LSI_ET1011C_PHY=m</xsl:when>
			<xsl:otherwise># LSI_ET1011C_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICREL_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICREL_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">MICREL_PHY=m</xsl:when>
			<xsl:otherwise># MICREL_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DP83848_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DP83848_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">DP83848_PHY=m</xsl:when>
			<xsl:otherwise># DP83848_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DP83867_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DP83867_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">DP83867_PHY=m</xsl:when>
			<xsl:otherwise># DP83867_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICROCHIP_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICROCHIP_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">MICROCHIP_PHY=m</xsl:when>
			<xsl:otherwise># MICROCHIP_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIXED_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIXED_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">FIXED_PHY=m</xsl:when>
			<xsl:otherwise># FIXED_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BITBANG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BITBANG=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BITBANG=m</xsl:when>
			<xsl:otherwise># MDIO_BITBANG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_GPIO=m</xsl:when>
			<xsl:otherwise># MDIO_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_CAVIUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_CAVIUM=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_CAVIUM=m</xsl:when>
			<xsl:otherwise># MDIO_CAVIUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_OCTEON=m</xsl:when>
			<xsl:otherwise># MDIO_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_THUNDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_THUNDER=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_THUNDER=m</xsl:when>
			<xsl:otherwise># MDIO_THUNDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_SUN4I=m</xsl:when>
			<xsl:otherwise># MDIO_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_MOXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_MOXART=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_MOXART=m</xsl:when>
			<xsl:otherwise># MDIO_MOXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BUS_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BUS_MUX=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BUS_MUX=m</xsl:when>
			<xsl:otherwise># MDIO_BUS_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BUS_MUX_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BUS_MUX_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BUS_MUX_GPIO=m</xsl:when>
			<xsl:otherwise># MDIO_BUS_MUX_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BUS_MUX_MMIOREG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BUS_MUX_MMIOREG=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BUS_MUX_MMIOREG=m</xsl:when>
			<xsl:otherwise># MDIO_BUS_MUX_MMIOREG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BUS_MUX_BCM_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BUS_MUX_BCM_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BUS_MUX_BCM_IPROC=m</xsl:when>
			<xsl:otherwise># MDIO_BUS_MUX_BCM_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BCM_UNIMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BCM_UNIMAC=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BCM_UNIMAC=m</xsl:when>
			<xsl:otherwise># MDIO_BCM_UNIMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_BCM_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_BCM_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_BCM_IPROC=m</xsl:when>
			<xsl:otherwise># MDIO_BCM_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_XWAY_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_XWAY_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_XWAY_PHY=m</xsl:when>
			<xsl:otherwise># INTEL_XWAY_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_HISI_FEMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_HISI_FEMAC=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_HISI_FEMAC=m</xsl:when>
			<xsl:otherwise># MDIO_HISI_FEMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MDIO_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDIO_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">MDIO_XGENE=m</xsl:when>
			<xsl:otherwise># MDIO_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MICREL_KS8995MA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MICREL_KS8995MA=y</xsl:when>
			<xsl:when test=". = 'module'">MICREL_KS8995MA=m</xsl:when>
			<xsl:otherwise># MICREL_KS8995MA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PLIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PLIP=y</xsl:when>
			<xsl:when test=". = 'module'">PLIP=m</xsl:when>
			<xsl:otherwise># PLIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP=y</xsl:when>
			<xsl:when test=". = 'module'">PPP=m</xsl:when>
			<xsl:otherwise># PPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_BSDCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_BSDCOMP=y</xsl:when>
			<xsl:when test=". = 'module'">PPP_BSDCOMP=m</xsl:when>
			<xsl:otherwise># PPP_BSDCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_DEFLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_DEFLATE=y</xsl:when>
			<xsl:when test=". = 'module'">PPP_DEFLATE=m</xsl:when>
			<xsl:otherwise># PPP_DEFLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_FILTER=y</xsl:when>
			<xsl:otherwise># PPP_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_MPPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_MPPE=y</xsl:when>
			<xsl:when test=". = 'module'">PPP_MPPE=m</xsl:when>
			<xsl:otherwise># PPP_MPPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_MULTILINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_MULTILINK=y</xsl:when>
			<xsl:otherwise># PPP_MULTILINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPPOATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPPOATM=y</xsl:when>
			<xsl:when test=". = 'module'">PPPOATM=m</xsl:when>
			<xsl:otherwise># PPPOATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPPOE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPPOE=y</xsl:when>
			<xsl:when test=". = 'module'">PPPOE=m</xsl:when>
			<xsl:otherwise># PPPOE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPTP=y</xsl:when>
			<xsl:when test=". = 'module'">PPTP=m</xsl:when>
			<xsl:otherwise># PPTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPPOL2TP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPPOL2TP=y</xsl:when>
			<xsl:when test=". = 'module'">PPPOL2TP=m</xsl:when>
			<xsl:otherwise># PPPOL2TP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_ASYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_ASYNC=y</xsl:when>
			<xsl:when test=". = 'module'">PPP_ASYNC=m</xsl:when>
			<xsl:otherwise># PPP_ASYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPP_SYNC_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPP_SYNC_TTY=y</xsl:when>
			<xsl:when test=". = 'module'">PPP_SYNC_TTY=m</xsl:when>
			<xsl:otherwise># PPP_SYNC_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLIP=y</xsl:when>
			<xsl:when test=". = 'module'">SLIP=m</xsl:when>
			<xsl:otherwise># SLIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLHC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLHC=y</xsl:when>
			<xsl:when test=". = 'module'">SLHC=m</xsl:when>
			<xsl:otherwise># SLHC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLIP_COMPRESSED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLIP_COMPRESSED=y</xsl:when>
			<xsl:otherwise># SLIP_COMPRESSED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLIP_SMART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLIP_SMART=y</xsl:when>
			<xsl:otherwise># SLIP_SMART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLIP_MODE_SLIP6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLIP_MODE_SLIP6=y</xsl:when>
			<xsl:otherwise># SLIP_MODE_SLIP6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCS=y</xsl:when>
			<xsl:when test=". = 'module'">LCS=m</xsl:when>
			<xsl:otherwise># LCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CTCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CTCM=y</xsl:when>
			<xsl:when test=". = 'module'">CTCM=m</xsl:when>
			<xsl:otherwise># CTCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETIUCV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETIUCV=y</xsl:when>
			<xsl:when test=". = 'module'">NETIUCV=m</xsl:when>
			<xsl:otherwise># NETIUCV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSGIUCV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSGIUCV=y</xsl:when>
			<xsl:when test=". = 'module'">SMSGIUCV=m</xsl:when>
			<xsl:otherwise># SMSGIUCV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMSGIUCV_EVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMSGIUCV_EVENT=y</xsl:when>
			<xsl:when test=". = 'module'">SMSGIUCV_EVENT=m</xsl:when>
			<xsl:otherwise># SMSGIUCV_EVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QETH=y</xsl:when>
			<xsl:when test=". = 'module'">QETH=m</xsl:when>
			<xsl:otherwise># QETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QETH_L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QETH_L2=y</xsl:when>
			<xsl:when test=". = 'module'">QETH_L2=m</xsl:when>
			<xsl:otherwise># QETH_L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QETH_L3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QETH_L3=y</xsl:when>
			<xsl:when test=". = 'module'">QETH_L3=m</xsl:when>
			<xsl:otherwise># QETH_L3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QETH_IPV6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QETH_IPV6=y</xsl:when>
			<xsl:otherwise># QETH_IPV6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CCWGROUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CCWGROUP=y</xsl:when>
			<xsl:when test=". = 'module'">CCWGROUP=m</xsl:when>
			<xsl:otherwise># CCWGROUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_DRIVERS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_DRIVERS=m</xsl:when>
			<xsl:otherwise># USB_NET_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CATC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CATC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CATC=m</xsl:when>
			<xsl:otherwise># USB_CATC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_KAWETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_KAWETH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_KAWETH=m</xsl:when>
			<xsl:otherwise># USB_KAWETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PEGASUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PEGASUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PEGASUS=m</xsl:when>
			<xsl:otherwise># USB_PEGASUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RTL8150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RTL8150=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RTL8150=m</xsl:when>
			<xsl:otherwise># USB_RTL8150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RTL8152">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RTL8152=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RTL8152=m</xsl:when>
			<xsl:otherwise># USB_RTL8152 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LAN78XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LAN78XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LAN78XX=m</xsl:when>
			<xsl:otherwise># USB_LAN78XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_USBNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_USBNET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_USBNET=m</xsl:when>
			<xsl:otherwise># USB_USBNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_AX8817X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_AX8817X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_AX8817X=m</xsl:when>
			<xsl:otherwise># USB_NET_AX8817X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_AX88179_178A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_AX88179_178A=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_AX88179_178A=m</xsl:when>
			<xsl:otherwise># USB_NET_AX88179_178A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDCETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDCETHER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDCETHER=m</xsl:when>
			<xsl:otherwise># USB_NET_CDCETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDC_EEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDC_EEM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDC_EEM=m</xsl:when>
			<xsl:otherwise># USB_NET_CDC_EEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDC_NCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDC_NCM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDC_NCM=m</xsl:when>
			<xsl:otherwise># USB_NET_CDC_NCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_HUAWEI_CDC_NCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_HUAWEI_CDC_NCM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_HUAWEI_CDC_NCM=m</xsl:when>
			<xsl:otherwise># USB_NET_HUAWEI_CDC_NCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDC_MBIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDC_MBIM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDC_MBIM=m</xsl:when>
			<xsl:otherwise># USB_NET_CDC_MBIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_DM9601">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_DM9601=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_DM9601=m</xsl:when>
			<xsl:otherwise># USB_NET_DM9601 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_SR9700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_SR9700=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_SR9700=m</xsl:when>
			<xsl:otherwise># USB_NET_SR9700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_SR9800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_SR9800=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_SR9800=m</xsl:when>
			<xsl:otherwise># USB_NET_SR9800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_SMSC75XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_SMSC75XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_SMSC75XX=m</xsl:when>
			<xsl:otherwise># USB_NET_SMSC75XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_SMSC95XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_SMSC95XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_SMSC95XX=m</xsl:when>
			<xsl:otherwise># USB_NET_SMSC95XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_GL620A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_GL620A=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_GL620A=m</xsl:when>
			<xsl:otherwise># USB_NET_GL620A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_NET1080">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_NET1080=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_NET1080=m</xsl:when>
			<xsl:otherwise># USB_NET_NET1080 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_PLUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_PLUSB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_PLUSB=m</xsl:when>
			<xsl:otherwise># USB_NET_PLUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_MCS7830">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_MCS7830=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_MCS7830=m</xsl:when>
			<xsl:otherwise># USB_NET_MCS7830 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_RNDIS_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_RNDIS_HOST=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_RNDIS_HOST=m</xsl:when>
			<xsl:otherwise># USB_NET_RNDIS_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDC_SUBSET_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDC_SUBSET_ENABLE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDC_SUBSET_ENABLE=m</xsl:when>
			<xsl:otherwise># USB_NET_CDC_SUBSET_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CDC_SUBSET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CDC_SUBSET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CDC_SUBSET=m</xsl:when>
			<xsl:otherwise># USB_NET_CDC_SUBSET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ALI_M5632">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ALI_M5632=y</xsl:when>
			<xsl:otherwise># USB_ALI_M5632 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_AN2720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_AN2720=y</xsl:when>
			<xsl:otherwise># USB_AN2720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_BELKIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_BELKIN=y</xsl:when>
			<xsl:otherwise># USB_BELKIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ARMLINUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ARMLINUX=y</xsl:when>
			<xsl:otherwise># USB_ARMLINUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EPSON2888">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EPSON2888=y</xsl:when>
			<xsl:otherwise># USB_EPSON2888 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_KC2190">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_KC2190=y</xsl:when>
			<xsl:otherwise># USB_KC2190 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_ZAURUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_ZAURUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_ZAURUS=m</xsl:when>
			<xsl:otherwise># USB_NET_ZAURUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CX82310_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CX82310_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CX82310_ETH=m</xsl:when>
			<xsl:otherwise># USB_NET_CX82310_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_KALMIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_KALMIA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_KALMIA=m</xsl:when>
			<xsl:otherwise># USB_NET_KALMIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_QMI_WWAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_QMI_WWAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_QMI_WWAN=m</xsl:when>
			<xsl:otherwise># USB_NET_QMI_WWAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HSO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HSO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HSO=m</xsl:when>
			<xsl:otherwise># USB_HSO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_INT51X1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_INT51X1=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_INT51X1=m</xsl:when>
			<xsl:otherwise># USB_NET_INT51X1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CDC_PHONET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CDC_PHONET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CDC_PHONET=m</xsl:when>
			<xsl:otherwise># USB_CDC_PHONET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_IPHETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_IPHETH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_IPHETH=m</xsl:when>
			<xsl:otherwise># USB_IPHETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SIERRA_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SIERRA_NET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SIERRA_NET=m</xsl:when>
			<xsl:otherwise># USB_SIERRA_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_VL600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_VL600=y</xsl:when>
			<xsl:when test=". = 'module'">USB_VL600=m</xsl:when>
			<xsl:otherwise># USB_VL600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_CH9200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_CH9200=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_CH9200=m</xsl:when>
			<xsl:otherwise># USB_NET_CH9200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN=y</xsl:when>
			<xsl:otherwise># WLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_ADMTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_ADMTEK=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_ADMTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADM8211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADM8211=y</xsl:when>
			<xsl:when test=". = 'module'">ADM8211=m</xsl:when>
			<xsl:otherwise># ADM8211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">ATH_COMMON=m</xsl:when>
			<xsl:otherwise># ATH_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_ATH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_ATH=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_ATH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH_DEBUG=y</xsl:when>
			<xsl:otherwise># ATH_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH_TRACEPOINTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH_TRACEPOINTS=y</xsl:when>
			<xsl:otherwise># ATH_TRACEPOINTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH_REG_DYNAMIC_USER_REG_HINTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH_REG_DYNAMIC_USER_REG_HINTS=y</xsl:when>
			<xsl:otherwise># ATH_REG_DYNAMIC_USER_REG_HINTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH_REG_DYNAMIC_USER_CERT_TESTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH_REG_DYNAMIC_USER_CERT_TESTING=y</xsl:when>
			<xsl:otherwise># ATH_REG_DYNAMIC_USER_CERT_TESTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K=y</xsl:when>
			<xsl:when test=". = 'module'">ATH5K=m</xsl:when>
			<xsl:otherwise># ATH5K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K_DEBUG=y</xsl:when>
			<xsl:otherwise># ATH5K_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K_TRACER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K_TRACER=y</xsl:when>
			<xsl:otherwise># ATH5K_TRACER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K_AHB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K_AHB=y</xsl:when>
			<xsl:otherwise># ATH5K_AHB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K_PCI=y</xsl:when>
			<xsl:otherwise># ATH5K_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH5K_TEST_CHANNELS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH5K_TEST_CHANNELS=y</xsl:when>
			<xsl:otherwise># ATH5K_TEST_CHANNELS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_HW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_HW=y</xsl:when>
			<xsl:when test=". = 'module'">ATH9K_HW=m</xsl:when>
			<xsl:otherwise># ATH9K_HW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">ATH9K_COMMON=m</xsl:when>
			<xsl:otherwise># ATH9K_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_DFS_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_DFS_DEBUGFS=y</xsl:when>
			<xsl:otherwise># ATH9K_DFS_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_BTCOEX_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_BTCOEX_SUPPORT=y</xsl:when>
			<xsl:otherwise># ATH9K_BTCOEX_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K=y</xsl:when>
			<xsl:when test=". = 'module'">ATH9K=m</xsl:when>
			<xsl:otherwise># ATH9K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_PCI=y</xsl:when>
			<xsl:otherwise># ATH9K_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_AHB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_AHB=y</xsl:when>
			<xsl:otherwise># ATH9K_AHB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_DEBUGFS=y</xsl:when>
			<xsl:otherwise># ATH9K_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_STATION_STATISTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_STATION_STATISTICS=y</xsl:when>
			<xsl:otherwise># ATH9K_STATION_STATISTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_TX99">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_TX99=y</xsl:when>
			<xsl:otherwise># ATH9K_TX99 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_DFS_CERTIFIED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_DFS_CERTIFIED=y</xsl:when>
			<xsl:otherwise># ATH9K_DFS_CERTIFIED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_DYNACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_DYNACK=y</xsl:when>
			<xsl:otherwise># ATH9K_DYNACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_WOW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_WOW=y</xsl:when>
			<xsl:otherwise># ATH9K_WOW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_RFKILL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_RFKILL=y</xsl:when>
			<xsl:otherwise># ATH9K_RFKILL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_CHANNEL_CONTEXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_CHANNEL_CONTEXT=y</xsl:when>
			<xsl:otherwise># ATH9K_CHANNEL_CONTEXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_PCOEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_PCOEM=y</xsl:when>
			<xsl:otherwise># ATH9K_PCOEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_HTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_HTC=y</xsl:when>
			<xsl:when test=". = 'module'">ATH9K_HTC=m</xsl:when>
			<xsl:otherwise># ATH9K_HTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_HTC_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_HTC_DEBUGFS=y</xsl:when>
			<xsl:otherwise># ATH9K_HTC_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH9K_HWRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH9K_HWRNG=y</xsl:when>
			<xsl:otherwise># ATH9K_HWRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARL9170">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARL9170=y</xsl:when>
			<xsl:when test=". = 'module'">CARL9170=m</xsl:when>
			<xsl:otherwise># CARL9170 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARL9170_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARL9170_LEDS=y</xsl:when>
			<xsl:otherwise># CARL9170_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARL9170_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARL9170_DEBUGFS=y</xsl:when>
			<xsl:otherwise># CARL9170_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARL9170_WPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARL9170_WPC=y</xsl:when>
			<xsl:otherwise># CARL9170_WPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARL9170_HWRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARL9170_HWRNG=y</xsl:when>
			<xsl:otherwise># CARL9170_HWRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL=y</xsl:when>
			<xsl:when test=". = 'module'">ATH6KL=m</xsl:when>
			<xsl:otherwise># ATH6KL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">ATH6KL_SDIO=m</xsl:when>
			<xsl:otherwise># ATH6KL_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL_USB=y</xsl:when>
			<xsl:when test=". = 'module'">ATH6KL_USB=m</xsl:when>
			<xsl:otherwise># ATH6KL_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL_DEBUG=y</xsl:when>
			<xsl:otherwise># ATH6KL_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL_TRACING=y</xsl:when>
			<xsl:otherwise># ATH6KL_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH6KL_REGDOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH6KL_REGDOMAIN=y</xsl:when>
			<xsl:otherwise># ATH6KL_REGDOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AR5523">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AR5523=y</xsl:when>
			<xsl:when test=". = 'module'">AR5523=m</xsl:when>
			<xsl:otherwise># AR5523 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIL6210">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIL6210=y</xsl:when>
			<xsl:when test=". = 'module'">WIL6210=m</xsl:when>
			<xsl:otherwise># WIL6210 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIL6210_ISR_COR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIL6210_ISR_COR=y</xsl:when>
			<xsl:otherwise># WIL6210_ISR_COR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIL6210_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIL6210_TRACING=y</xsl:when>
			<xsl:otherwise># WIL6210_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K=y</xsl:when>
			<xsl:when test=". = 'module'">ATH10K=m</xsl:when>
			<xsl:otherwise># ATH10K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">ATH10K_PCI=m</xsl:when>
			<xsl:otherwise># ATH10K_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_AHB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_AHB=y</xsl:when>
			<xsl:otherwise># ATH10K_AHB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_DEBUG=y</xsl:when>
			<xsl:otherwise># ATH10K_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_DEBUGFS=y</xsl:when>
			<xsl:otherwise># ATH10K_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_TRACING=y</xsl:when>
			<xsl:otherwise># ATH10K_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATH10K_DFS_CERTIFIED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATH10K_DFS_CERTIFIED=y</xsl:when>
			<xsl:otherwise># ATH10K_DFS_CERTIFIED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WCN36XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WCN36XX=y</xsl:when>
			<xsl:when test=". = 'module'">WCN36XX=m</xsl:when>
			<xsl:otherwise># WCN36XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WCN36XX_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WCN36XX_DEBUGFS=y</xsl:when>
			<xsl:otherwise># WCN36XX_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_ATMEL=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">ATMEL=m</xsl:when>
			<xsl:otherwise># ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">PCI_ATMEL=m</xsl:when>
			<xsl:otherwise># PCI_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_ATMEL=m</xsl:when>
			<xsl:otherwise># PCMCIA_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT76C50X_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT76C50X_USB=y</xsl:when>
			<xsl:when test=". = 'module'">AT76C50X_USB=m</xsl:when>
			<xsl:otherwise># AT76C50X_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_BROADCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_BROADCOM=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_BROADCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43=y</xsl:when>
			<xsl:when test=". = 'module'">B43=m</xsl:when>
			<xsl:otherwise># B43 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_BCMA=y</xsl:when>
			<xsl:otherwise># B43_BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_SSB=y</xsl:when>
			<xsl:otherwise># B43_SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_BUSES_BCMA_AND_SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_BUSES_BCMA_AND_SSB=y</xsl:when>
			<xsl:otherwise># B43_BUSES_BCMA_AND_SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_BUSES_BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_BUSES_BCMA=y</xsl:when>
			<xsl:otherwise># B43_BUSES_BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_BUSES_SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_BUSES_SSB=y</xsl:when>
			<xsl:otherwise># B43_BUSES_SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PCI_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PCI_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B43_PCI_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PCICORE_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PCICORE_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B43_PCICORE_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_SDIO=y</xsl:when>
			<xsl:otherwise># B43_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_BCMA_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_BCMA_PIO=y</xsl:when>
			<xsl:otherwise># B43_BCMA_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PIO=y</xsl:when>
			<xsl:otherwise># B43_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_G=y</xsl:when>
			<xsl:otherwise># B43_PHY_G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_N">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_N=y</xsl:when>
			<xsl:otherwise># B43_PHY_N is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_LP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_LP=y</xsl:when>
			<xsl:otherwise># B43_PHY_LP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_HT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_HT=y</xsl:when>
			<xsl:otherwise># B43_PHY_HT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_LCN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_LCN=y</xsl:when>
			<xsl:otherwise># B43_PHY_LCN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_PHY_AC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_PHY_AC=y</xsl:when>
			<xsl:otherwise># B43_PHY_AC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_LEDS=y</xsl:when>
			<xsl:otherwise># B43_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_HWRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_HWRNG=y</xsl:when>
			<xsl:otherwise># B43_HWRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43_DEBUG=y</xsl:when>
			<xsl:otherwise># B43_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">B43LEGACY=m</xsl:when>
			<xsl:otherwise># B43LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_PCI_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_PCI_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B43LEGACY_PCI_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_PCICORE_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_PCICORE_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># B43LEGACY_PCICORE_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_LEDS=y</xsl:when>
			<xsl:otherwise># B43LEGACY_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_HWRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_HWRNG=y</xsl:when>
			<xsl:otherwise># B43LEGACY_HWRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_DEBUG=y</xsl:when>
			<xsl:otherwise># B43LEGACY_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_DMA=y</xsl:when>
			<xsl:otherwise># B43LEGACY_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_PIO=y</xsl:when>
			<xsl:otherwise># B43LEGACY_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_DMA_AND_PIO_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_DMA_AND_PIO_MODE=y</xsl:when>
			<xsl:otherwise># B43LEGACY_DMA_AND_PIO_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_DMA_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_DMA_MODE=y</xsl:when>
			<xsl:otherwise># B43LEGACY_DMA_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="B43LEGACY_PIO_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">B43LEGACY_PIO_MODE=y</xsl:when>
			<xsl:otherwise># B43LEGACY_PIO_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMUTIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMUTIL=y</xsl:when>
			<xsl:when test=". = 'module'">BRCMUTIL=m</xsl:when>
			<xsl:otherwise># BRCMUTIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMSMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMSMAC=y</xsl:when>
			<xsl:when test=". = 'module'">BRCMSMAC=m</xsl:when>
			<xsl:otherwise># BRCMSMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC=y</xsl:when>
			<xsl:when test=". = 'module'">BRCMFMAC=m</xsl:when>
			<xsl:otherwise># BRCMFMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC_PROTO_BCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC_PROTO_BCDC=y</xsl:when>
			<xsl:otherwise># BRCMFMAC_PROTO_BCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC_PROTO_MSGBUF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC_PROTO_MSGBUF=y</xsl:when>
			<xsl:otherwise># BRCMFMAC_PROTO_MSGBUF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC_SDIO=y</xsl:when>
			<xsl:otherwise># BRCMFMAC_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC_USB=y</xsl:when>
			<xsl:otherwise># BRCMFMAC_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMFMAC_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMFMAC_PCIE=y</xsl:when>
			<xsl:otherwise># BRCMFMAC_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCM_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCM_TRACING=y</xsl:when>
			<xsl:otherwise># BRCM_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMDBG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMDBG=y</xsl:when>
			<xsl:otherwise># BRCMDBG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_CISCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_CISCO=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_CISCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIRO=y</xsl:when>
			<xsl:when test=". = 'module'">AIRO=m</xsl:when>
			<xsl:otherwise># AIRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIRO_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIRO_CS=y</xsl:when>
			<xsl:when test=". = 'module'">AIRO_CS=m</xsl:when>
			<xsl:otherwise># AIRO_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_INTEL=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2100=y</xsl:when>
			<xsl:when test=". = 'module'">IPW2100=m</xsl:when>
			<xsl:otherwise># IPW2100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2100_MONITOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2100_MONITOR=y</xsl:when>
			<xsl:otherwise># IPW2100_MONITOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2100_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2100_DEBUG=y</xsl:when>
			<xsl:otherwise># IPW2100_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200=y</xsl:when>
			<xsl:when test=". = 'module'">IPW2200=m</xsl:when>
			<xsl:otherwise># IPW2200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200_MONITOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200_MONITOR=y</xsl:when>
			<xsl:otherwise># IPW2200_MONITOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200_RADIOTAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200_RADIOTAP=y</xsl:when>
			<xsl:otherwise># IPW2200_RADIOTAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200_PROMISCUOUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200_PROMISCUOUS=y</xsl:when>
			<xsl:otherwise># IPW2200_PROMISCUOUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200_QOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200_QOS=y</xsl:when>
			<xsl:otherwise># IPW2200_QOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPW2200_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPW2200_DEBUG=y</xsl:when>
			<xsl:otherwise># IPW2200_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBIPW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBIPW=y</xsl:when>
			<xsl:when test=". = 'module'">LIBIPW=m</xsl:when>
			<xsl:otherwise># LIBIPW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBIPW_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBIPW_DEBUG=y</xsl:when>
			<xsl:otherwise># LIBIPW_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLEGACY=y</xsl:when>
			<xsl:when test=". = 'module'">IWLEGACY=m</xsl:when>
			<xsl:otherwise># IWLEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWL4965">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWL4965=y</xsl:when>
			<xsl:when test=". = 'module'">IWL4965=m</xsl:when>
			<xsl:otherwise># IWL4965 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWL3945">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWL3945=y</xsl:when>
			<xsl:when test=". = 'module'">IWL3945=m</xsl:when>
			<xsl:otherwise># IWL3945 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLEGACY_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLEGACY_DEBUG=y</xsl:when>
			<xsl:otherwise># IWLEGACY_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLEGACY_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLEGACY_DEBUGFS=y</xsl:when>
			<xsl:otherwise># IWLEGACY_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI=y</xsl:when>
			<xsl:when test=". = 'module'">IWLWIFI=m</xsl:when>
			<xsl:otherwise># IWLWIFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_LEDS=y</xsl:when>
			<xsl:otherwise># IWLWIFI_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLDVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLDVM=y</xsl:when>
			<xsl:when test=". = 'module'">IWLDVM=m</xsl:when>
			<xsl:otherwise># IWLDVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLMVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLMVM=y</xsl:when>
			<xsl:when test=". = 'module'">IWLMVM=m</xsl:when>
			<xsl:otherwise># IWLMVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_OPMODE_MODULAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_OPMODE_MODULAR=y</xsl:when>
			<xsl:otherwise># IWLWIFI_OPMODE_MODULAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_BCAST_FILTERING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_BCAST_FILTERING=y</xsl:when>
			<xsl:otherwise># IWLWIFI_BCAST_FILTERING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_PCIE_RTPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_PCIE_RTPM=y</xsl:when>
			<xsl:otherwise># IWLWIFI_PCIE_RTPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_DEBUG=y</xsl:when>
			<xsl:otherwise># IWLWIFI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_DEBUGFS=y</xsl:when>
			<xsl:otherwise># IWLWIFI_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IWLWIFI_DEVICE_TRACING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IWLWIFI_DEVICE_TRACING=y</xsl:when>
			<xsl:otherwise># IWLWIFI_DEVICE_TRACING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_INTERSIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_INTERSIL=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_INTERSIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP=y</xsl:when>
			<xsl:when test=". = 'module'">HOSTAP=m</xsl:when>
			<xsl:otherwise># HOSTAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP_FIRMWARE=y</xsl:when>
			<xsl:otherwise># HOSTAP_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP_FIRMWARE_NVRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP_FIRMWARE_NVRAM=y</xsl:when>
			<xsl:otherwise># HOSTAP_FIRMWARE_NVRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP_PLX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP_PLX=y</xsl:when>
			<xsl:when test=". = 'module'">HOSTAP_PLX=m</xsl:when>
			<xsl:otherwise># HOSTAP_PLX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">HOSTAP_PCI=m</xsl:when>
			<xsl:otherwise># HOSTAP_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTAP_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTAP_CS=y</xsl:when>
			<xsl:when test=". = 'module'">HOSTAP_CS=m</xsl:when>
			<xsl:otherwise># HOSTAP_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HERMES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HERMES=y</xsl:when>
			<xsl:when test=". = 'module'">HERMES=m</xsl:when>
			<xsl:otherwise># HERMES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HERMES_PRISM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HERMES_PRISM=y</xsl:when>
			<xsl:otherwise># HERMES_PRISM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">P54_COMMON=m</xsl:when>
			<xsl:otherwise># P54_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_USB=y</xsl:when>
			<xsl:when test=". = 'module'">P54_USB=m</xsl:when>
			<xsl:otherwise># P54_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">P54_PCI=m</xsl:when>
			<xsl:otherwise># P54_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">P54_SPI=m</xsl:when>
			<xsl:otherwise># P54_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_SPI_DEFAULT_EEPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_SPI_DEFAULT_EEPROM=y</xsl:when>
			<xsl:otherwise># P54_SPI_DEFAULT_EEPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="P54_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">P54_LEDS=y</xsl:when>
			<xsl:otherwise># P54_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRISM54">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRISM54=y</xsl:when>
			<xsl:when test=". = 'module'">PRISM54=m</xsl:when>
			<xsl:otherwise># PRISM54 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_MARVELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_MARVELL=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_MARVELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS=m</xsl:when>
			<xsl:otherwise># LIBERTAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_USB=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_USB=m</xsl:when>
			<xsl:otherwise># LIBERTAS_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_CS=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_CS=m</xsl:when>
			<xsl:otherwise># LIBERTAS_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_SDIO=m</xsl:when>
			<xsl:otherwise># LIBERTAS_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_SPI=m</xsl:when>
			<xsl:otherwise># LIBERTAS_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_DEBUG=y</xsl:when>
			<xsl:otherwise># LIBERTAS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_MESH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_MESH=y</xsl:when>
			<xsl:otherwise># LIBERTAS_MESH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_THINFIRM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_THINFIRM=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_THINFIRM=m</xsl:when>
			<xsl:otherwise># LIBERTAS_THINFIRM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_THINFIRM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_THINFIRM_DEBUG=y</xsl:when>
			<xsl:otherwise># LIBERTAS_THINFIRM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBERTAS_THINFIRM_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBERTAS_THINFIRM_USB=y</xsl:when>
			<xsl:when test=". = 'module'">LIBERTAS_THINFIRM_USB=m</xsl:when>
			<xsl:otherwise># LIBERTAS_THINFIRM_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWIFIEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWIFIEX=y</xsl:when>
			<xsl:when test=". = 'module'">MWIFIEX=m</xsl:when>
			<xsl:otherwise># MWIFIEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWIFIEX_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWIFIEX_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">MWIFIEX_SDIO=m</xsl:when>
			<xsl:otherwise># MWIFIEX_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWIFIEX_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWIFIEX_PCIE=y</xsl:when>
			<xsl:when test=". = 'module'">MWIFIEX_PCIE=m</xsl:when>
			<xsl:otherwise># MWIFIEX_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWIFIEX_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWIFIEX_USB=y</xsl:when>
			<xsl:when test=". = 'module'">MWIFIEX_USB=m</xsl:when>
			<xsl:otherwise># MWIFIEX_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWL8K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWL8K=y</xsl:when>
			<xsl:when test=". = 'module'">MWL8K=m</xsl:when>
			<xsl:otherwise># MWL8K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_MEDIATEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_MEDIATEK=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_MEDIATEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MT7601U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MT7601U=y</xsl:when>
			<xsl:when test=". = 'module'">MT7601U=m</xsl:when>
			<xsl:otherwise># MT7601U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_RALINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_RALINK=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_RALINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00=m</xsl:when>
			<xsl:otherwise># RT2X00 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2400PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2400PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RT2400PCI=m</xsl:when>
			<xsl:otherwise># RT2400PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2500PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2500PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RT2500PCI=m</xsl:when>
			<xsl:otherwise># RT2500PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT61PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT61PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RT61PCI=m</xsl:when>
			<xsl:otherwise># RT61PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RT2800PCI=m</xsl:when>
			<xsl:otherwise># RT2800PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800PCI_RT33XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800PCI_RT33XX=y</xsl:when>
			<xsl:otherwise># RT2800PCI_RT33XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800PCI_RT35XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800PCI_RT35XX=y</xsl:when>
			<xsl:otherwise># RT2800PCI_RT35XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800PCI_RT53XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800PCI_RT53XX=y</xsl:when>
			<xsl:otherwise># RT2800PCI_RT53XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800PCI_RT3290">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800PCI_RT3290=y</xsl:when>
			<xsl:otherwise># RT2800PCI_RT3290 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2500USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2500USB=y</xsl:when>
			<xsl:when test=". = 'module'">RT2500USB=m</xsl:when>
			<xsl:otherwise># RT2500USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT73USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT73USB=y</xsl:when>
			<xsl:when test=". = 'module'">RT73USB=m</xsl:when>
			<xsl:otherwise># RT73USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB=y</xsl:when>
			<xsl:when test=". = 'module'">RT2800USB=m</xsl:when>
			<xsl:otherwise># RT2800USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_RT33XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_RT33XX=y</xsl:when>
			<xsl:otherwise># RT2800USB_RT33XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_RT35XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_RT35XX=y</xsl:when>
			<xsl:otherwise># RT2800USB_RT35XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_RT3573">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_RT3573=y</xsl:when>
			<xsl:otherwise># RT2800USB_RT3573 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_RT53XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_RT53XX=y</xsl:when>
			<xsl:otherwise># RT2800USB_RT53XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_RT55XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_RT55XX=y</xsl:when>
			<xsl:otherwise># RT2800USB_RT55XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800USB_UNKNOWN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800USB_UNKNOWN=y</xsl:when>
			<xsl:otherwise># RT2800USB_UNKNOWN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800SOC=y</xsl:when>
			<xsl:when test=". = 'module'">RT2800SOC=m</xsl:when>
			<xsl:otherwise># RT2800SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">RT2800_LIB=m</xsl:when>
			<xsl:otherwise># RT2800_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2800_LIB_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2800_LIB_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">RT2800_LIB_MMIO=m</xsl:when>
			<xsl:otherwise># RT2800_LIB_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00_LIB_MMIO=m</xsl:when>
			<xsl:otherwise># RT2X00_LIB_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00_LIB_PCI=m</xsl:when>
			<xsl:otherwise># RT2X00_LIB_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_SOC=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00_LIB_SOC=m</xsl:when>
			<xsl:otherwise># RT2X00_LIB_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_USB=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00_LIB_USB=m</xsl:when>
			<xsl:otherwise># RT2X00_LIB_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">RT2X00_LIB=m</xsl:when>
			<xsl:otherwise># RT2X00_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_FIRMWARE=y</xsl:when>
			<xsl:otherwise># RT2X00_LIB_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_CRYPTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_CRYPTO=y</xsl:when>
			<xsl:otherwise># RT2X00_LIB_CRYPTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_LEDS=y</xsl:when>
			<xsl:otherwise># RT2X00_LIB_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_LIB_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_LIB_DEBUGFS=y</xsl:when>
			<xsl:otherwise># RT2X00_LIB_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RT2X00_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RT2X00_DEBUG=y</xsl:when>
			<xsl:otherwise># RT2X00_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_REALTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_REALTEK=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_REALTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8180">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8180=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8180=m</xsl:when>
			<xsl:otherwise># RTL8180 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8187">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8187=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8187=m</xsl:when>
			<xsl:otherwise># RTL8187 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8187_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8187_LEDS=y</xsl:when>
			<xsl:otherwise># RTL8187_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL_CARDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL_CARDS=y</xsl:when>
			<xsl:when test=". = 'module'">RTL_CARDS=m</xsl:when>
			<xsl:otherwise># RTL_CARDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192CE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192CE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192CE=m</xsl:when>
			<xsl:otherwise># RTL8192CE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192SE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192SE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192SE=m</xsl:when>
			<xsl:otherwise># RTL8192SE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192DE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192DE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192DE=m</xsl:when>
			<xsl:otherwise># RTL8192DE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8723AE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8723AE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8723AE=m</xsl:when>
			<xsl:otherwise># RTL8723AE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8723BE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8723BE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8723BE=m</xsl:when>
			<xsl:otherwise># RTL8723BE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8188EE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8188EE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8188EE=m</xsl:when>
			<xsl:otherwise># RTL8188EE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192EE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192EE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192EE=m</xsl:when>
			<xsl:otherwise># RTL8192EE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8821AE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8821AE=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8821AE=m</xsl:when>
			<xsl:otherwise># RTL8821AE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192CU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192CU=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192CU=m</xsl:when>
			<xsl:otherwise># RTL8192CU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLWIFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLWIFI=y</xsl:when>
			<xsl:when test=". = 'module'">RTLWIFI=m</xsl:when>
			<xsl:otherwise># RTLWIFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLWIFI_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLWIFI_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">RTLWIFI_PCI=m</xsl:when>
			<xsl:otherwise># RTLWIFI_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLWIFI_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLWIFI_USB=y</xsl:when>
			<xsl:when test=". = 'module'">RTLWIFI_USB=m</xsl:when>
			<xsl:otherwise># RTLWIFI_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLWIFI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLWIFI_DEBUG=y</xsl:when>
			<xsl:otherwise># RTLWIFI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192C_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192C_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192C_COMMON=m</xsl:when>
			<xsl:otherwise># RTL8192C_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8723_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8723_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8723_COMMON=m</xsl:when>
			<xsl:otherwise># RTL8723_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLBTCOEXIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLBTCOEXIST=y</xsl:when>
			<xsl:when test=". = 'module'">RTLBTCOEXIST=m</xsl:when>
			<xsl:otherwise># RTLBTCOEXIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8XXXU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8XXXU=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8XXXU=m</xsl:when>
			<xsl:otherwise># RTL8XXXU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8XXXU_UNTESTED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8XXXU_UNTESTED=y</xsl:when>
			<xsl:otherwise># RTL8XXXU_UNTESTED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_RSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_RSI=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_RSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RSI_91X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RSI_91X=y</xsl:when>
			<xsl:when test=". = 'module'">RSI_91X=m</xsl:when>
			<xsl:otherwise># RSI_91X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RSI_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RSI_DEBUGFS=y</xsl:when>
			<xsl:otherwise># RSI_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RSI_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RSI_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">RSI_SDIO=m</xsl:when>
			<xsl:otherwise># RSI_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RSI_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RSI_USB=y</xsl:when>
			<xsl:when test=". = 'module'">RSI_USB=m</xsl:when>
			<xsl:otherwise># RSI_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_ST=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CW1200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CW1200=y</xsl:when>
			<xsl:when test=". = 'module'">CW1200=m</xsl:when>
			<xsl:otherwise># CW1200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CW1200_WLAN_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CW1200_WLAN_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">CW1200_WLAN_SDIO=m</xsl:when>
			<xsl:otherwise># CW1200_WLAN_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CW1200_WLAN_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CW1200_WLAN_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">CW1200_WLAN_SPI=m</xsl:when>
			<xsl:otherwise># CW1200_WLAN_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_TI=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WL1251">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WL1251=y</xsl:when>
			<xsl:when test=". = 'module'">WL1251=m</xsl:when>
			<xsl:otherwise># WL1251 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WL1251_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WL1251_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">WL1251_SPI=m</xsl:when>
			<xsl:otherwise># WL1251_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WL1251_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WL1251_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">WL1251_SDIO=m</xsl:when>
			<xsl:otherwise># WL1251_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WL12XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WL12XX=y</xsl:when>
			<xsl:when test=". = 'module'">WL12XX=m</xsl:when>
			<xsl:otherwise># WL12XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WL18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WL18XX=y</xsl:when>
			<xsl:when test=". = 'module'">WL18XX=m</xsl:when>
			<xsl:otherwise># WL18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLCORE=y</xsl:when>
			<xsl:when test=". = 'module'">WLCORE=m</xsl:when>
			<xsl:otherwise># WLCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLCORE_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLCORE_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">WLCORE_SPI=m</xsl:when>
			<xsl:otherwise># WLCORE_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLCORE_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLCORE_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">WLCORE_SDIO=m</xsl:when>
			<xsl:otherwise># WLCORE_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WILINK_PLATFORM_DATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WILINK_PLATFORM_DATA=y</xsl:when>
			<xsl:otherwise># WILINK_PLATFORM_DATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WLAN_VENDOR_ZYDAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WLAN_VENDOR_ZYDAS=y</xsl:when>
			<xsl:otherwise># WLAN_VENDOR_ZYDAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ZD1201">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ZD1201=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ZD1201=m</xsl:when>
			<xsl:otherwise># USB_ZD1201 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZD1211RW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZD1211RW=y</xsl:when>
			<xsl:when test=". = 'module'">ZD1211RW=m</xsl:when>
			<xsl:otherwise># ZD1211RW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZD1211RW_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZD1211RW_DEBUG=y</xsl:when>
			<xsl:otherwise># ZD1211RW_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_RAYCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_RAYCS=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_RAYCS=m</xsl:when>
			<xsl:otherwise># PCMCIA_RAYCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCMCIA_WL3501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCMCIA_WL3501=y</xsl:when>
			<xsl:when test=". = 'module'">PCMCIA_WL3501=m</xsl:when>
			<xsl:otherwise># PCMCIA_WL3501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAC80211_HWSIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAC80211_HWSIM=y</xsl:when>
			<xsl:when test=". = 'module'">MAC80211_HWSIM=m</xsl:when>
			<xsl:otherwise># MAC80211_HWSIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET_RNDIS_WLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET_RNDIS_WLAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET_RNDIS_WLAN=m</xsl:when>
			<xsl:otherwise># USB_NET_RNDIS_WLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIMAX_I2400M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIMAX_I2400M=y</xsl:when>
			<xsl:when test=". = 'module'">WIMAX_I2400M=m</xsl:when>
			<xsl:otherwise># WIMAX_I2400M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIMAX_I2400M_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WIMAX_I2400M_USB=y</xsl:when>
			<xsl:when test=". = 'module'">WIMAX_I2400M_USB=m</xsl:when>
			<xsl:otherwise># WIMAX_I2400M_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WIMAX_I2400M_DEBUG_LEVEL">
		WIMAX_I2400M_DEBUG_LEVEL=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="WAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WAN=y</xsl:when>
			<xsl:otherwise># WAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOSTESS_SV11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOSTESS_SV11=y</xsl:when>
			<xsl:when test=". = 'module'">HOSTESS_SV11=m</xsl:when>
			<xsl:otherwise># HOSTESS_SV11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COSA=y</xsl:when>
			<xsl:when test=". = 'module'">COSA=m</xsl:when>
			<xsl:otherwise># COSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LANMEDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LANMEDIA=y</xsl:when>
			<xsl:when test=". = 'module'">LANMEDIA=m</xsl:when>
			<xsl:otherwise># LANMEDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SEALEVEL_4021">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SEALEVEL_4021=y</xsl:when>
			<xsl:when test=". = 'module'">SEALEVEL_4021=m</xsl:when>
			<xsl:otherwise># SEALEVEL_4021 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC=m</xsl:when>
			<xsl:otherwise># HDLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_RAW=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_RAW=m</xsl:when>
			<xsl:otherwise># HDLC_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_RAW_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_RAW_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_RAW_ETH=m</xsl:when>
			<xsl:otherwise># HDLC_RAW_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_CISCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_CISCO=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_CISCO=m</xsl:when>
			<xsl:otherwise># HDLC_CISCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_FR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_FR=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_FR=m</xsl:when>
			<xsl:otherwise># HDLC_FR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_PPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_PPP=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_PPP=m</xsl:when>
			<xsl:otherwise># HDLC_PPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDLC_X25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDLC_X25=y</xsl:when>
			<xsl:when test=". = 'module'">HDLC_X25=m</xsl:when>
			<xsl:otherwise># HDLC_X25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCI200SYN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCI200SYN=y</xsl:when>
			<xsl:when test=". = 'module'">PCI200SYN=m</xsl:when>
			<xsl:otherwise># PCI200SYN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WANXL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WANXL=y</xsl:when>
			<xsl:when test=". = 'module'">WANXL=m</xsl:when>
			<xsl:otherwise># WANXL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WANXL_BUILD_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WANXL_BUILD_FIRMWARE=y</xsl:when>
			<xsl:otherwise># WANXL_BUILD_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PC300TOO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PC300TOO=y</xsl:when>
			<xsl:when test=". = 'module'">PC300TOO=m</xsl:when>
			<xsl:otherwise># PC300TOO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="N2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">N2=y</xsl:when>
			<xsl:when test=". = 'module'">N2=m</xsl:when>
			<xsl:otherwise># N2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="C101">
		<xsl:choose>
			<xsl:when test=". = 'yes'">C101=y</xsl:when>
			<xsl:when test=". = 'module'">C101=m</xsl:when>
			<xsl:otherwise># C101 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FARSYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FARSYNC=y</xsl:when>
			<xsl:when test=". = 'module'">FARSYNC=m</xsl:when>
			<xsl:otherwise># FARSYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DSCC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DSCC4=y</xsl:when>
			<xsl:when test=". = 'module'">DSCC4=m</xsl:when>
			<xsl:otherwise># DSCC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_UCC_HDLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_UCC_HDLC=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_UCC_HDLC=m</xsl:when>
			<xsl:otherwise># FSL_UCC_HDLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLIC_DS26522">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLIC_DS26522=y</xsl:when>
			<xsl:when test=". = 'module'">SLIC_DS26522=m</xsl:when>
			<xsl:otherwise># SLIC_DS26522 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DSCC4_PCISYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DSCC4_PCISYNC=y</xsl:when>
			<xsl:otherwise># DSCC4_PCISYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DSCC4_PCI_RST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DSCC4_PCI_RST=y</xsl:when>
			<xsl:otherwise># DSCC4_PCI_RST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXP4XX_HSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXP4XX_HSS=y</xsl:when>
			<xsl:when test=". = 'module'">IXP4XX_HSS=m</xsl:when>
			<xsl:otherwise># IXP4XX_HSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DLCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DLCI=y</xsl:when>
			<xsl:when test=". = 'module'">DLCI=m</xsl:when>
			<xsl:otherwise># DLCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DLCI_MAX">
		DLCI_MAX=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SDLA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SDLA=y</xsl:when>
			<xsl:when test=". = 'module'">SDLA=m</xsl:when>
			<xsl:otherwise># SDLA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LAPBETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LAPBETHER=y</xsl:when>
			<xsl:when test=". = 'module'">LAPBETHER=m</xsl:when>
			<xsl:otherwise># LAPBETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X25_ASY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X25_ASY=y</xsl:when>
			<xsl:when test=". = 'module'">X25_ASY=m</xsl:when>
			<xsl:otherwise># X25_ASY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBNI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBNI=y</xsl:when>
			<xsl:when test=". = 'module'">SBNI=m</xsl:when>
			<xsl:otherwise># SBNI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBNI_MULTILINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBNI_MULTILINE=y</xsl:when>
			<xsl:otherwise># SBNI_MULTILINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_DRIVERS=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_DRIVERS=m</xsl:when>
			<xsl:otherwise># IEEE802154_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_FAKELB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_FAKELB=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_FAKELB=m</xsl:when>
			<xsl:otherwise># IEEE802154_FAKELB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_AT86RF230">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_AT86RF230=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_AT86RF230=m</xsl:when>
			<xsl:otherwise># IEEE802154_AT86RF230 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_AT86RF230_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_AT86RF230_DEBUGFS=y</xsl:when>
			<xsl:otherwise># IEEE802154_AT86RF230_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_MRF24J40">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_MRF24J40=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_MRF24J40=m</xsl:when>
			<xsl:otherwise># IEEE802154_MRF24J40 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_CC2520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_CC2520=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_CC2520=m</xsl:when>
			<xsl:otherwise># IEEE802154_CC2520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_ATUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_ATUSB=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_ATUSB=m</xsl:when>
			<xsl:otherwise># IEEE802154_ATUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IEEE802154_ADF7242">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IEEE802154_ADF7242=y</xsl:when>
			<xsl:when test=". = 'module'">IEEE802154_ADF7242=m</xsl:when>
			<xsl:otherwise># IEEE802154_ADF7242 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_NETDEV_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_NETDEV_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_NETDEV_FRONTEND=m</xsl:when>
			<xsl:otherwise># XEN_NETDEV_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_NETDEV_BACKEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_NETDEV_BACKEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_NETDEV_BACKEND=m</xsl:when>
			<xsl:otherwise># XEN_NETDEV_BACKEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMXNET3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMXNET3=y</xsl:when>
			<xsl:when test=". = 'module'">VMXNET3=m</xsl:when>
			<xsl:otherwise># VMXNET3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUJITSU_ES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUJITSU_ES=y</xsl:when>
			<xsl:when test=". = 'module'">FUJITSU_ES=m</xsl:when>
			<xsl:otherwise># FUJITSU_ES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV_NET=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV_NET=m</xsl:when>
			<xsl:otherwise># HYPERV_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN=y</xsl:when>
			<xsl:otherwise># ISDN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_I4L">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_I4L=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_I4L=m</xsl:when>
			<xsl:otherwise># ISDN_I4L is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_PPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_PPP=y</xsl:when>
			<xsl:otherwise># ISDN_PPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_PPP_VJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_PPP_VJ=y</xsl:when>
			<xsl:otherwise># ISDN_PPP_VJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_MPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_MPP=y</xsl:when>
			<xsl:otherwise># ISDN_MPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPPP_FILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPPP_FILTER=y</xsl:when>
			<xsl:otherwise># IPPP_FILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_PPP_BSDCOMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_PPP_BSDCOMP=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_PPP_BSDCOMP=m</xsl:when>
			<xsl:otherwise># ISDN_PPP_BSDCOMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_AUDIO=y</xsl:when>
			<xsl:otherwise># ISDN_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_TTY_FAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_TTY_FAX=y</xsl:when>
			<xsl:otherwise># ISDN_TTY_FAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_X25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_X25=y</xsl:when>
			<xsl:otherwise># ISDN_X25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_LOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_LOOP=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_LOOP=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_LOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVERSION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVERSION=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DIVERSION=m</xsl:when>
			<xsl:otherwise># ISDN_DIVERSION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_HISAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_HISAX=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_HISAX=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_HISAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_EURO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_EURO=y</xsl:when>
			<xsl:otherwise># HISAX_EURO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DE_AOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DE_AOC=y</xsl:when>
			<xsl:otherwise># DE_AOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NO_SENDCOMPLETE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NO_SENDCOMPLETE=y</xsl:when>
			<xsl:otherwise># HISAX_NO_SENDCOMPLETE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NO_LLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NO_LLC=y</xsl:when>
			<xsl:otherwise># HISAX_NO_LLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NO_KEYPAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NO_KEYPAD=y</xsl:when>
			<xsl:otherwise># HISAX_NO_KEYPAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_1TR6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_1TR6=y</xsl:when>
			<xsl:otherwise># HISAX_1TR6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NI1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NI1=y</xsl:when>
			<xsl:otherwise># HISAX_NI1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_MAX_CARDS">
		HISAX_MAX_CARDS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HISAX_16_0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_16_0=y</xsl:when>
			<xsl:otherwise># HISAX_16_0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_16_3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_16_3=y</xsl:when>
			<xsl:otherwise># HISAX_16_3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_TELESPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_TELESPCI=y</xsl:when>
			<xsl:otherwise># HISAX_TELESPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_S0BOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_S0BOX=y</xsl:when>
			<xsl:otherwise># HISAX_S0BOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_AVM_A1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_AVM_A1=y</xsl:when>
			<xsl:otherwise># HISAX_AVM_A1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_FRITZPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_FRITZPCI=y</xsl:when>
			<xsl:otherwise># HISAX_FRITZPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_AVM_A1_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_AVM_A1_PCMCIA=y</xsl:when>
			<xsl:otherwise># HISAX_AVM_A1_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ELSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ELSA=y</xsl:when>
			<xsl:otherwise># HISAX_ELSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_IX1MICROR2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_IX1MICROR2=y</xsl:when>
			<xsl:otherwise># HISAX_IX1MICROR2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_DIEHLDIVA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_DIEHLDIVA=y</xsl:when>
			<xsl:otherwise># HISAX_DIEHLDIVA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ASUSCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ASUSCOM=y</xsl:when>
			<xsl:otherwise># HISAX_ASUSCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_TELEINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_TELEINT=y</xsl:when>
			<xsl:otherwise># HISAX_TELEINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HFCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HFCS=y</xsl:when>
			<xsl:otherwise># HISAX_HFCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_SEDLBAUER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_SEDLBAUER=y</xsl:when>
			<xsl:otherwise># HISAX_SEDLBAUER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_SPORTSTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_SPORTSTER=y</xsl:when>
			<xsl:otherwise># HISAX_SPORTSTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_MIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_MIC=y</xsl:when>
			<xsl:otherwise># HISAX_MIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NETJET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NETJET=y</xsl:when>
			<xsl:otherwise># HISAX_NETJET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NETJET_U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NETJET_U=y</xsl:when>
			<xsl:otherwise># HISAX_NETJET_U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_NICCY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_NICCY=y</xsl:when>
			<xsl:otherwise># HISAX_NICCY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ISURF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ISURF=y</xsl:when>
			<xsl:otherwise># HISAX_ISURF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HSTSAPHIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HSTSAPHIR=y</xsl:when>
			<xsl:otherwise># HISAX_HSTSAPHIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_BKM_A4T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_BKM_A4T=y</xsl:when>
			<xsl:otherwise># HISAX_BKM_A4T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_SCT_QUADRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_SCT_QUADRO=y</xsl:when>
			<xsl:otherwise># HISAX_SCT_QUADRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_GAZEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_GAZEL=y</xsl:when>
			<xsl:otherwise># HISAX_GAZEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HFC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HFC_PCI=y</xsl:when>
			<xsl:otherwise># HISAX_HFC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_W6692">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_W6692=y</xsl:when>
			<xsl:otherwise># HISAX_W6692 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HFC_SX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HFC_SX=y</xsl:when>
			<xsl:otherwise># HISAX_HFC_SX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ENTERNOW_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ENTERNOW_PCI=y</xsl:when>
			<xsl:otherwise># HISAX_ENTERNOW_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_DEBUG=y</xsl:when>
			<xsl:otherwise># HISAX_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_SEDLBAUER_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_SEDLBAUER_CS=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_SEDLBAUER_CS=m</xsl:when>
			<xsl:otherwise># HISAX_SEDLBAUER_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ELSA_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ELSA_CS=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_ELSA_CS=m</xsl:when>
			<xsl:otherwise># HISAX_ELSA_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_AVM_A1_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_AVM_A1_CS=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_AVM_A1_CS=m</xsl:when>
			<xsl:otherwise># HISAX_AVM_A1_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_TELES_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_TELES_CS=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_TELES_CS=m</xsl:when>
			<xsl:otherwise># HISAX_TELES_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_ST5481">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_ST5481=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_ST5481=m</xsl:when>
			<xsl:otherwise># HISAX_ST5481 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HFCUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HFCUSB=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_HFCUSB=m</xsl:when>
			<xsl:otherwise># HISAX_HFCUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_HFC4S8S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_HFC4S8S=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_HFC4S8S=m</xsl:when>
			<xsl:otherwise># HISAX_HFC4S8S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISAX_FRITZ_PCIPNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISAX_FRITZ_PCIPNP=y</xsl:when>
			<xsl:when test=". = 'module'">HISAX_FRITZ_PCIPNP=m</xsl:when>
			<xsl:otherwise># HISAX_FRITZ_PCIPNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_CAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_CAPI=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_CAPI=m</xsl:when>
			<xsl:otherwise># ISDN_CAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAPI_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAPI_TRACE=y</xsl:when>
			<xsl:otherwise># CAPI_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_CAPI_CAPI20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_CAPI_CAPI20=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_CAPI_CAPI20=m</xsl:when>
			<xsl:otherwise># ISDN_CAPI_CAPI20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_CAPI_MIDDLEWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_CAPI_MIDDLEWARE=y</xsl:when>
			<xsl:otherwise># ISDN_CAPI_MIDDLEWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_CAPI_CAPIDRV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_CAPI_CAPIDRV=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_CAPI_CAPIDRV=m</xsl:when>
			<xsl:otherwise># ISDN_CAPI_CAPIDRV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_CAPI_CAPIDRV_VERBOSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_CAPI_CAPIDRV_VERBOSE=y</xsl:when>
			<xsl:otherwise># ISDN_CAPI_CAPIDRV_VERBOSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAPI_AVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAPI_AVM=y</xsl:when>
			<xsl:otherwise># CAPI_AVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_B1ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_B1ISA=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_B1ISA=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_B1ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_B1PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_B1PCI=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_B1PCI=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_B1PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_B1PCIV4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_B1PCIV4=y</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_B1PCIV4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_T1ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_T1ISA=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_T1ISA=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_T1ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_B1PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_B1PCMCIA=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_B1PCMCIA=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_B1PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_AVM_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_AVM_CS=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_AVM_CS=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_AVM_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_T1PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_T1PCI=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_T1PCI=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_T1PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_AVMB1_C4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_AVMB1_C4=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_AVMB1_C4=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_AVMB1_C4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CAPI_EICON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CAPI_EICON=y</xsl:when>
			<xsl:otherwise># CAPI_EICON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DIVAS=m</xsl:when>
			<xsl:otherwise># ISDN_DIVAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS_BRIPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS_BRIPCI=y</xsl:when>
			<xsl:otherwise># ISDN_DIVAS_BRIPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS_PRIPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS_PRIPCI=y</xsl:when>
			<xsl:otherwise># ISDN_DIVAS_PRIPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS_DIVACAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS_DIVACAPI=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DIVAS_DIVACAPI=m</xsl:when>
			<xsl:otherwise># ISDN_DIVAS_DIVACAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS_USERIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS_USERIDI=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DIVAS_USERIDI=m</xsl:when>
			<xsl:otherwise># ISDN_DIVAS_USERIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DIVAS_MAINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DIVAS_MAINT=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DIVAS_MAINT=m</xsl:when>
			<xsl:otherwise># ISDN_DIVAS_MAINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_GIGASET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_GIGASET=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_GIGASET=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_GIGASET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_CAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_CAPI=y</xsl:when>
			<xsl:otherwise># GIGASET_CAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_I4L">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_I4L=y</xsl:when>
			<xsl:otherwise># GIGASET_I4L is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_DUMMYLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_DUMMYLL=y</xsl:when>
			<xsl:otherwise># GIGASET_DUMMYLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_BASE=y</xsl:when>
			<xsl:when test=". = 'module'">GIGASET_BASE=m</xsl:when>
			<xsl:otherwise># GIGASET_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_M105">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_M105=y</xsl:when>
			<xsl:when test=". = 'module'">GIGASET_M105=m</xsl:when>
			<xsl:otherwise># GIGASET_M105 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_M101">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_M101=y</xsl:when>
			<xsl:when test=". = 'module'">GIGASET_M101=m</xsl:when>
			<xsl:otherwise># GIGASET_M101 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIGASET_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIGASET_DEBUG=y</xsl:when>
			<xsl:otherwise># GIGASET_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYSDN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYSDN=y</xsl:when>
			<xsl:when test=". = 'module'">HYSDN=m</xsl:when>
			<xsl:otherwise># HYSDN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYSDN_CAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYSDN_CAPI=y</xsl:when>
			<xsl:otherwise># HYSDN_CAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN=m</xsl:when>
			<xsl:otherwise># MISDN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_DSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_DSP=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_DSP=m</xsl:when>
			<xsl:otherwise># MISDN_DSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_L1OIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_L1OIP=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_L1OIP=m</xsl:when>
			<xsl:otherwise># MISDN_L1OIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_HFCPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_HFCPCI=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_HFCPCI=m</xsl:when>
			<xsl:otherwise># MISDN_HFCPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_HFCMULTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_HFCMULTI=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_HFCMULTI=m</xsl:when>
			<xsl:otherwise># MISDN_HFCMULTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_HFCMULTI_8xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_HFCMULTI_8xx=y</xsl:when>
			<xsl:otherwise># MISDN_HFCMULTI_8xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_HFCUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_HFCUSB=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_HFCUSB=m</xsl:when>
			<xsl:otherwise># MISDN_HFCUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_AVMFRITZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_AVMFRITZ=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_AVMFRITZ=m</xsl:when>
			<xsl:otherwise># MISDN_AVMFRITZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_SPEEDFAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_SPEEDFAX=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_SPEEDFAX=m</xsl:when>
			<xsl:otherwise># MISDN_SPEEDFAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_INFINEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_INFINEON=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_INFINEON=m</xsl:when>
			<xsl:otherwise># MISDN_INFINEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_W6692">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_W6692=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_W6692=m</xsl:when>
			<xsl:otherwise># MISDN_W6692 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_NETJET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_NETJET=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_NETJET=m</xsl:when>
			<xsl:otherwise># MISDN_NETJET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_IPAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_IPAC=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_IPAC=m</xsl:when>
			<xsl:otherwise># MISDN_IPAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISDN_ISAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISDN_ISAR=y</xsl:when>
			<xsl:when test=". = 'module'">MISDN_ISAR=m</xsl:when>
			<xsl:otherwise># MISDN_ISAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_HDLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_HDLC=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_HDLC=m</xsl:when>
			<xsl:otherwise># ISDN_HDLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVM=y</xsl:when>
			<xsl:otherwise># NVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVM_DEBUG=y</xsl:when>
			<xsl:otherwise># NVM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVM_GENNVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVM_GENNVM=y</xsl:when>
			<xsl:when test=". = 'module'">NVM_GENNVM=m</xsl:when>
			<xsl:otherwise># NVM_GENNVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVM_RRPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVM_RRPC=y</xsl:when>
			<xsl:when test=". = 'module'">NVM_RRPC=m</xsl:when>
			<xsl:otherwise># NVM_RRPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT=m</xsl:when>
			<xsl:otherwise># INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_LEDS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_LEDS=m</xsl:when>
			<xsl:otherwise># INPUT_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_FF_MEMLESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_FF_MEMLESS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_FF_MEMLESS=m</xsl:when>
			<xsl:otherwise># INPUT_FF_MEMLESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_POLLDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_POLLDEV=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_POLLDEV=m</xsl:when>
			<xsl:otherwise># INPUT_POLLDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_SPARSEKMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_SPARSEKMAP=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_SPARSEKMAP=m</xsl:when>
			<xsl:otherwise># INPUT_SPARSEKMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MATRIXKMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MATRIXKMAP=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MATRIXKMAP=m</xsl:when>
			<xsl:otherwise># INPUT_MATRIXKMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MOUSEDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MOUSEDEV=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MOUSEDEV=m</xsl:when>
			<xsl:otherwise># INPUT_MOUSEDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MOUSEDEV_PSAUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MOUSEDEV_PSAUX=y</xsl:when>
			<xsl:otherwise># INPUT_MOUSEDEV_PSAUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MOUSEDEV_SCREEN_X">
		INPUT_MOUSEDEV_SCREEN_X=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="INPUT_MOUSEDEV_SCREEN_Y">
		INPUT_MOUSEDEV_SCREEN_Y=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="INPUT_JOYDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_JOYDEV=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_JOYDEV=m</xsl:when>
			<xsl:otherwise># INPUT_JOYDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_EVDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_EVDEV=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_EVDEV=m</xsl:when>
			<xsl:otherwise># INPUT_EVDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_EVBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_EVBUG=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_EVBUG=m</xsl:when>
			<xsl:otherwise># INPUT_EVBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_APMPOWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_APMPOWER=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_APMPOWER=m</xsl:when>
			<xsl:otherwise># INPUT_APMPOWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_KEYBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_KEYBOARD=y</xsl:when>
			<xsl:otherwise># INPUT_KEYBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ADP5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ADP5520=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ADP5520=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ADP5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ADP5588">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ADP5588=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ADP5588=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ADP5588 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ADP5589">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ADP5589=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ADP5589=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ADP5589 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_AMIGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_AMIGA=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_AMIGA=m</xsl:when>
			<xsl:otherwise># KEYBOARD_AMIGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATARI_KBD_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATARI_KBD_CORE=y</xsl:when>
			<xsl:otherwise># ATARI_KBD_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ATARI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ATARI=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ATARI=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ATARI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ATKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ATKBD=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ATKBD=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ATKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ATKBD_HP_KEYCODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ATKBD_HP_KEYCODES=y</xsl:when>
			<xsl:otherwise># KEYBOARD_ATKBD_HP_KEYCODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ATKBD_RDI_KEYCODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ATKBD_RDI_KEYCODES=y</xsl:when>
			<xsl:otherwise># KEYBOARD_ATKBD_RDI_KEYCODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_QT1070">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_QT1070=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_QT1070=m</xsl:when>
			<xsl:otherwise># KEYBOARD_QT1070 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_QT2160">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_QT2160=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_QT2160=m</xsl:when>
			<xsl:otherwise># KEYBOARD_QT2160 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_BFIN=m</xsl:when>
			<xsl:otherwise># KEYBOARD_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_CLPS711X=m</xsl:when>
			<xsl:otherwise># KEYBOARD_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_LKKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_LKKBD=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_LKKBD=m</xsl:when>
			<xsl:otherwise># KEYBOARD_LKKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_EP93XX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_GPIO=m</xsl:when>
			<xsl:otherwise># KEYBOARD_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_GPIO_POLLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_GPIO_POLLED=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_GPIO_POLLED=m</xsl:when>
			<xsl:otherwise># KEYBOARD_GPIO_POLLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_TCA6416">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_TCA6416=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_TCA6416=m</xsl:when>
			<xsl:otherwise># KEYBOARD_TCA6416 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_TCA8418">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_TCA8418=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_TCA8418=m</xsl:when>
			<xsl:otherwise># KEYBOARD_TCA8418 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_MATRIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_MATRIX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_MATRIX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_MATRIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_HIL_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_HIL_OLD=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_HIL_OLD=m</xsl:when>
			<xsl:otherwise># KEYBOARD_HIL_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_HIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_HIL=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_HIL=m</xsl:when>
			<xsl:otherwise># KEYBOARD_HIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_HP6XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_HP6XX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_HP6XX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_HP6XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_HP7XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_HP7XX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_HP7XX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_HP7XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_LM8323">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_LM8323=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_LM8323=m</xsl:when>
			<xsl:otherwise># KEYBOARD_LM8323 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_LM8333">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_LM8333=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_LM8333=m</xsl:when>
			<xsl:otherwise># KEYBOARD_LM8333 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_LOCOMO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_LOCOMO=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_LOCOMO=m</xsl:when>
			<xsl:otherwise># KEYBOARD_LOCOMO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_LPC32XX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_MAPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_MAPLE=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_MAPLE=m</xsl:when>
			<xsl:otherwise># KEYBOARD_MAPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_MAX7359">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_MAX7359=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_MAX7359=m</xsl:when>
			<xsl:otherwise># KEYBOARD_MAX7359 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_MCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_MCS=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_MCS=m</xsl:when>
			<xsl:otherwise># KEYBOARD_MCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_MPR121">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_MPR121=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_MPR121=m</xsl:when>
			<xsl:otherwise># KEYBOARD_MPR121 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SNVS_PWRKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SNVS_PWRKEY=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SNVS_PWRKEY=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SNVS_PWRKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_IMX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_NEWTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_NEWTON=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_NEWTON=m</xsl:when>
			<xsl:otherwise># KEYBOARD_NEWTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_NOMADIK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_NOMADIK=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_NOMADIK=m</xsl:when>
			<xsl:otherwise># KEYBOARD_NOMADIK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_NSPIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_NSPIRE=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_NSPIRE=m</xsl:when>
			<xsl:otherwise># KEYBOARD_NSPIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_TEGRA=m</xsl:when>
			<xsl:otherwise># KEYBOARD_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_OPENCORES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_OPENCORES=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_OPENCORES=m</xsl:when>
			<xsl:otherwise># KEYBOARD_OPENCORES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_PXA27x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_PXA27x=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_PXA27x=m</xsl:when>
			<xsl:otherwise># KEYBOARD_PXA27x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_PXA930_ROTARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_PXA930_ROTARY=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_PXA930_ROTARY=m</xsl:when>
			<xsl:otherwise># KEYBOARD_PXA930_ROTARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_PMIC8XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_PMIC8XXX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_PMIC8XXX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_PMIC8XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SAMSUNG=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SAMSUNG=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_GOLDFISH_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_GOLDFISH_EVENTS=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_GOLDFISH_EVENTS=m</xsl:when>
			<xsl:otherwise># KEYBOARD_GOLDFISH_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_STOWAWAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_STOWAWAY=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_STOWAWAY=m</xsl:when>
			<xsl:otherwise># KEYBOARD_STOWAWAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_ST_KEYSCAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_ST_KEYSCAN=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_ST_KEYSCAN=m</xsl:when>
			<xsl:otherwise># KEYBOARD_ST_KEYSCAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SUNKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SUNKBD=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SUNKBD=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SUNKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SH_KEYSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SH_KEYSC=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SH_KEYSC=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SH_KEYSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_STMPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_STMPE=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_STMPE=m</xsl:when>
			<xsl:otherwise># KEYBOARD_STMPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SUN4I_LRADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SUN4I_LRADC=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SUN4I_LRADC=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SUN4I_LRADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_DAVINCI=m</xsl:when>
			<xsl:otherwise># KEYBOARD_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_IPAQ_MICRO=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_IPAQ_MICRO=m</xsl:when>
			<xsl:otherwise># KEYBOARD_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_OMAP=m</xsl:when>
			<xsl:otherwise># KEYBOARD_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_OMAP4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_OMAP4=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_OMAP4=m</xsl:when>
			<xsl:otherwise># KEYBOARD_OMAP4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_SPEAR=m</xsl:when>
			<xsl:otherwise># KEYBOARD_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_TC3589X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_TC3589X=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_TC3589X=m</xsl:when>
			<xsl:otherwise># KEYBOARD_TC3589X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_TWL4030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_TWL4030=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_TWL4030=m</xsl:when>
			<xsl:otherwise># KEYBOARD_TWL4030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_XTKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_XTKBD=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_XTKBD=m</xsl:when>
			<xsl:otherwise># KEYBOARD_XTKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_W90P910">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_W90P910=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_W90P910=m</xsl:when>
			<xsl:otherwise># KEYBOARD_W90P910 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_CROS_EC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_CROS_EC=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_CROS_EC=m</xsl:when>
			<xsl:otherwise># KEYBOARD_CROS_EC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_CAP11XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_CAP11XX=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_CAP11XX=m</xsl:when>
			<xsl:otherwise># KEYBOARD_CAP11XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_BCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_BCM=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_BCM=m</xsl:when>
			<xsl:otherwise># KEYBOARD_BCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MOUSE=y</xsl:when>
			<xsl:otherwise># INPUT_MOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_PS2=m</xsl:when>
			<xsl:otherwise># MOUSE_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_ALPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_ALPS=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_ALPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_BYD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_BYD=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_BYD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_LOGIPS2PP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_LOGIPS2PP=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_LOGIPS2PP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_SYNAPTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_SYNAPTICS=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_SYNAPTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_CYPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_CYPRESS=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_CYPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_LIFEBOOK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_LIFEBOOK=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_LIFEBOOK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_TRACKPOINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_TRACKPOINT=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_TRACKPOINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_ELANTECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_ELANTECH=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_ELANTECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_SENTELIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_SENTELIC=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_SENTELIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_TOUCHKIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_TOUCHKIT=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_TOUCHKIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_OLPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_OLPC=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_OLPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_FOCALTECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_FOCALTECH=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_FOCALTECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PS2_VMMOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PS2_VMMOUSE=y</xsl:when>
			<xsl:otherwise># MOUSE_PS2_VMMOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_SERIAL=m</xsl:when>
			<xsl:otherwise># MOUSE_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_APPLETOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_APPLETOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_APPLETOUCH=m</xsl:when>
			<xsl:otherwise># MOUSE_APPLETOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_BCM5974">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_BCM5974=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_BCM5974=m</xsl:when>
			<xsl:otherwise># MOUSE_BCM5974 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_CYAPA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_CYAPA=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_CYAPA=m</xsl:when>
			<xsl:otherwise># MOUSE_CYAPA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_ELAN_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_ELAN_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_ELAN_I2C=m</xsl:when>
			<xsl:otherwise># MOUSE_ELAN_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_ELAN_I2C_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_ELAN_I2C_I2C=y</xsl:when>
			<xsl:otherwise># MOUSE_ELAN_I2C_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_ELAN_I2C_SMBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_ELAN_I2C_SMBUS=y</xsl:when>
			<xsl:otherwise># MOUSE_ELAN_I2C_SMBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_INPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_INPORT=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_INPORT=m</xsl:when>
			<xsl:otherwise># MOUSE_INPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_ATIXL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_ATIXL=y</xsl:when>
			<xsl:otherwise># MOUSE_ATIXL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_LOGIBM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_LOGIBM=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_LOGIBM=m</xsl:when>
			<xsl:otherwise># MOUSE_LOGIBM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PC110PAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PC110PAD=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_PC110PAD=m</xsl:when>
			<xsl:otherwise># MOUSE_PC110PAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_AMIGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_AMIGA=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_AMIGA=m</xsl:when>
			<xsl:otherwise># MOUSE_AMIGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_ATARI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_ATARI=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_ATARI=m</xsl:when>
			<xsl:otherwise># MOUSE_ATARI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_RISCPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_RISCPC=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_RISCPC=m</xsl:when>
			<xsl:otherwise># MOUSE_RISCPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_VSXXXAA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_VSXXXAA=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_VSXXXAA=m</xsl:when>
			<xsl:otherwise># MOUSE_VSXXXAA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_GPIO=m</xsl:when>
			<xsl:otherwise># MOUSE_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_PXA930_TRKBALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_PXA930_TRKBALL=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_PXA930_TRKBALL=m</xsl:when>
			<xsl:otherwise># MOUSE_PXA930_TRKBALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_MAPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_MAPLE=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_MAPLE=m</xsl:when>
			<xsl:otherwise># MOUSE_MAPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_SYNAPTICS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_SYNAPTICS_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_SYNAPTICS_I2C=m</xsl:when>
			<xsl:otherwise># MOUSE_SYNAPTICS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_SYNAPTICS_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_SYNAPTICS_USB=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_SYNAPTICS_USB=m</xsl:when>
			<xsl:otherwise># MOUSE_SYNAPTICS_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOUSE_NAVPOINT_PXA27x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOUSE_NAVPOINT_PXA27x=y</xsl:when>
			<xsl:when test=". = 'module'">MOUSE_NAVPOINT_PXA27x=m</xsl:when>
			<xsl:otherwise># MOUSE_NAVPOINT_PXA27x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_JOYSTICK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_JOYSTICK=y</xsl:when>
			<xsl:otherwise># INPUT_JOYSTICK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_ANALOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_ANALOG=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_ANALOG=m</xsl:when>
			<xsl:otherwise># JOYSTICK_ANALOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_A3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_A3D=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_A3D=m</xsl:when>
			<xsl:otherwise># JOYSTICK_A3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_ADI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_ADI=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_ADI=m</xsl:when>
			<xsl:otherwise># JOYSTICK_ADI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_COBRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_COBRA=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_COBRA=m</xsl:when>
			<xsl:otherwise># JOYSTICK_COBRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_GF2K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_GF2K=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_GF2K=m</xsl:when>
			<xsl:otherwise># JOYSTICK_GF2K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_GRIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_GRIP=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_GRIP=m</xsl:when>
			<xsl:otherwise># JOYSTICK_GRIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_GRIP_MP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_GRIP_MP=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_GRIP_MP=m</xsl:when>
			<xsl:otherwise># JOYSTICK_GRIP_MP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_GUILLEMOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_GUILLEMOT=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_GUILLEMOT=m</xsl:when>
			<xsl:otherwise># JOYSTICK_GUILLEMOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_INTERACT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_INTERACT=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_INTERACT=m</xsl:when>
			<xsl:otherwise># JOYSTICK_INTERACT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_SIDEWINDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_SIDEWINDER=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_SIDEWINDER=m</xsl:when>
			<xsl:otherwise># JOYSTICK_SIDEWINDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_TMDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_TMDC=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_TMDC=m</xsl:when>
			<xsl:otherwise># JOYSTICK_TMDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_IFORCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_IFORCE=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_IFORCE=m</xsl:when>
			<xsl:otherwise># JOYSTICK_IFORCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_IFORCE_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_IFORCE_USB=y</xsl:when>
			<xsl:otherwise># JOYSTICK_IFORCE_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_IFORCE_232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_IFORCE_232=y</xsl:when>
			<xsl:otherwise># JOYSTICK_IFORCE_232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_WARRIOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_WARRIOR=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_WARRIOR=m</xsl:when>
			<xsl:otherwise># JOYSTICK_WARRIOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_MAGELLAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_MAGELLAN=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_MAGELLAN=m</xsl:when>
			<xsl:otherwise># JOYSTICK_MAGELLAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_SPACEORB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_SPACEORB=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_SPACEORB=m</xsl:when>
			<xsl:otherwise># JOYSTICK_SPACEORB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_SPACEBALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_SPACEBALL=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_SPACEBALL=m</xsl:when>
			<xsl:otherwise># JOYSTICK_SPACEBALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_STINGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_STINGER=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_STINGER=m</xsl:when>
			<xsl:otherwise># JOYSTICK_STINGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_TWIDJOY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_TWIDJOY=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_TWIDJOY=m</xsl:when>
			<xsl:otherwise># JOYSTICK_TWIDJOY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_ZHENHUA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_ZHENHUA=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_ZHENHUA=m</xsl:when>
			<xsl:otherwise># JOYSTICK_ZHENHUA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_DB9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_DB9=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_DB9=m</xsl:when>
			<xsl:otherwise># JOYSTICK_DB9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_GAMECON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_GAMECON=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_GAMECON=m</xsl:when>
			<xsl:otherwise># JOYSTICK_GAMECON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_TURBOGRAFX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_TURBOGRAFX=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_TURBOGRAFX=m</xsl:when>
			<xsl:otherwise># JOYSTICK_TURBOGRAFX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_AMIGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_AMIGA=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_AMIGA=m</xsl:when>
			<xsl:otherwise># JOYSTICK_AMIGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_AS5011">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_AS5011=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_AS5011=m</xsl:when>
			<xsl:otherwise># JOYSTICK_AS5011 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_JOYDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_JOYDUMP=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_JOYDUMP=m</xsl:when>
			<xsl:otherwise># JOYSTICK_JOYDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_XPAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_XPAD=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_XPAD=m</xsl:when>
			<xsl:otherwise># JOYSTICK_XPAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_XPAD_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_XPAD_FF=y</xsl:when>
			<xsl:otherwise># JOYSTICK_XPAD_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_XPAD_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_XPAD_LEDS=y</xsl:when>
			<xsl:otherwise># JOYSTICK_XPAD_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_WALKERA0701">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_WALKERA0701=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_WALKERA0701=m</xsl:when>
			<xsl:otherwise># JOYSTICK_WALKERA0701 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOYSTICK_MAPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOYSTICK_MAPLE=y</xsl:when>
			<xsl:when test=". = 'module'">JOYSTICK_MAPLE=m</xsl:when>
			<xsl:otherwise># JOYSTICK_MAPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TABLET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TABLET=y</xsl:when>
			<xsl:otherwise># INPUT_TABLET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_ACECAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_ACECAD=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_ACECAD=m</xsl:when>
			<xsl:otherwise># TABLET_USB_ACECAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_AIPTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_AIPTEK=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_AIPTEK=m</xsl:when>
			<xsl:otherwise># TABLET_USB_AIPTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_GTCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_GTCO=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_GTCO=m</xsl:when>
			<xsl:otherwise># TABLET_USB_GTCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_HANWANG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_HANWANG=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_HANWANG=m</xsl:when>
			<xsl:otherwise># TABLET_USB_HANWANG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_KBTAB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_KBTAB=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_KBTAB=m</xsl:when>
			<xsl:otherwise># TABLET_USB_KBTAB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_USB_PEGASUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_USB_PEGASUS=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_USB_PEGASUS=m</xsl:when>
			<xsl:otherwise># TABLET_USB_PEGASUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TABLET_SERIAL_WACOM4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TABLET_SERIAL_WACOM4=y</xsl:when>
			<xsl:when test=". = 'module'">TABLET_SERIAL_WACOM4=m</xsl:when>
			<xsl:otherwise># TABLET_SERIAL_WACOM4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TOUCHSCREEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TOUCHSCREEN=y</xsl:when>
			<xsl:otherwise># INPUT_TOUCHSCREEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_PROPERTIES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_PROPERTIES=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_PROPERTIES=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_PROPERTIES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_88PM860X=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ADS7846">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ADS7846=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ADS7846=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ADS7846 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AD7877">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AD7877=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AD7877=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AD7877 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AD7879">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AD7879=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AD7879=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AD7879 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AD7879_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AD7879_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AD7879_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AD7879_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AD7879_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AD7879_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AD7879_SPI=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AD7879_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AR1021_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AR1021_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AR1021_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AR1021_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ATMEL_MXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ATMEL_MXT=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ATMEL_MXT=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ATMEL_MXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_AUO_PIXCIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_AUO_PIXCIR=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_AUO_PIXCIR=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_AUO_PIXCIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_BU21013">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_BU21013=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_BU21013=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_BU21013 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CHIPONE_ICN8318">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CHIPONE_ICN8318=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CHIPONE_ICN8318=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CHIPONE_ICN8318 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CY8CTMG110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CY8CTMG110=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CY8CTMG110=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CY8CTMG110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP_CORE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP_SPI=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP4_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP4_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP4_CORE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP4_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP4_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP4_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP4_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP4_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_CYTTSP4_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_CYTTSP4_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_CYTTSP4_SPI=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_CYTTSP4_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_DA9034">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_DA9034=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_DA9034=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_DA9034 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_DA9052=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_DYNAPRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_DYNAPRO=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_DYNAPRO=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_DYNAPRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_HAMPSHIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_HAMPSHIRE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_HAMPSHIRE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_HAMPSHIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_EETI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_EETI=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_EETI=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_EETI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_EGALAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_EGALAX=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_EGALAX=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_EGALAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_EGALAX_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_EGALAX_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_EGALAX_SERIAL=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_EGALAX_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_FT6236">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_FT6236=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_FT6236=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_FT6236 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_FUJITSU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_FUJITSU=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_FUJITSU=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_FUJITSU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_GOODIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_GOODIX=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_GOODIX=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_GOODIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ILI210X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ILI210X=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ILI210X=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ILI210X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_IPROC=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_S3C2410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_S3C2410=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_S3C2410=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_S3C2410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_GUNZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_GUNZE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_GUNZE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_GUNZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ELAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ELAN=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ELAN=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ELAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ELO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ELO=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ELO=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ELO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WACOM_W8001">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WACOM_W8001=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WACOM_W8001=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WACOM_W8001 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WACOM_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WACOM_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WACOM_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WACOM_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_LPC32XX=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MAX11801">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MAX11801=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MAX11801=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MAX11801 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MCS5000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MCS5000=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MCS5000=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MCS5000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MMS114">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MMS114=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MMS114=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MMS114 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MELFAS_MIP4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MELFAS_MIP4=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MELFAS_MIP4=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MELFAS_MIP4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MTOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MTOUCH=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_IMX6UL_TSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_IMX6UL_TSC=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_IMX6UL_TSC=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_IMX6UL_TSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_INEXIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_INEXIO=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_INEXIO=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_INEXIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_INTEL_MID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_INTEL_MID=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_INTEL_MID=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_INTEL_MID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MK712">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MK712=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MK712=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MK712 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_HP600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_HP600=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_HP600=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_HP600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_HP7XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_HP7XX=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_HP7XX=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_HP7XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_IPAQ_MICRO=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_IPAQ_MICRO=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_HTCPEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_HTCPEN=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_HTCPEN=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_HTCPEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_PENMOUNT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_PENMOUNT=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_PENMOUNT=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_PENMOUNT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_EDT_FT5X06">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_EDT_FT5X06=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_EDT_FT5X06=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_EDT_FT5X06 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MIGOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MIGOR=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MIGOR=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MIGOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TOUCHRIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TOUCHRIGHT=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TOUCHRIGHT=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TOUCHRIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TOUCHWIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TOUCHWIN=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TOUCHWIN=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TOUCHWIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TI_AM335X_TSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TI_AM335X_TSC=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TI_AM335X_TSC=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TI_AM335X_TSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_UCB1400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_UCB1400=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_UCB1400=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_UCB1400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_PIXCIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_PIXCIR=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_PIXCIR=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_PIXCIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WDT87XX_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WDT87XX_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WDT87XX_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WDT87XX_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WM831X=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM97XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM97XX=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WM97XX=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM97XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM9705">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM9705=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM9705 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM9712">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM9712=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM9712 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM9713">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM9713=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM9713 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM97XX_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM97XX_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WM97XX_ATMEL=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM97XX_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM97XX_MAINSTONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM97XX_MAINSTONE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WM97XX_MAINSTONE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM97XX_MAINSTONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_WM97XX_ZYLONITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_WM97XX_ZYLONITE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_WM97XX_ZYLONITE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_WM97XX_ZYLONITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_COMPOSITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_COMPOSITE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_USB_COMPOSITE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_COMPOSITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MX25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MX25=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MX25=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MX25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_MC13783">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_MC13783=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_MC13783=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_MC13783 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_EGALAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_EGALAX=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_EGALAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_PANJIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_PANJIT=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_PANJIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_3M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_3M=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_3M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_ITM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_ITM=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_ITM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_ETURBO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_ETURBO=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_ETURBO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_GUNZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_GUNZE=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_GUNZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_DMC_TSC10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_DMC_TSC10=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_DMC_TSC10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_IRTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_IRTOUCH=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_IRTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_IDEALTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_IDEALTEK=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_IDEALTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_GENERAL_TOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_GENERAL_TOUCH=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_GENERAL_TOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_GOTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_GOTOP=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_GOTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_JASTEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_JASTEC=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_JASTEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_ELO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_ELO=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_ELO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_E2I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_E2I=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_E2I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_ZYTRONIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_ZYTRONIC=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_ZYTRONIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_ETT_TC45USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_ETT_TC45USB=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_ETT_TC45USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_NEXIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_NEXIO=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_NEXIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_USB_EASYTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_USB_EASYTOUCH=y</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_USB_EASYTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TOUCHIT213">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TOUCHIT213=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TOUCHIT213=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TOUCHIT213 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TS4800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TS4800=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TS4800=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TS4800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TSC_SERIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TSC_SERIO=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TSC_SERIO=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TSC_SERIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TSC200X_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TSC200X_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TSC200X_CORE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TSC200X_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TSC2004">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TSC2004=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TSC2004=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TSC2004 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TSC2005">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TSC2005=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TSC2005=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TSC2005 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TSC2007">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TSC2007=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TSC2007=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TSC2007 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_W90X900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_W90X900=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_W90X900=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_W90X900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_PCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_PCAP=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_PCAP=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_PCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_RM_TS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_RM_TS=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_RM_TS=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_RM_TS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SILEAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SILEAD=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SILEAD=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SILEAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SIS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SIS_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SIS_I2C=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SIS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ST1232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ST1232=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ST1232=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ST1232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_STMPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_STMPE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_STMPE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_STMPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SUN4I=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SUR40">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SUR40=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SUR40=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SUR40 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SURFACE3_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SURFACE3_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SURFACE3_SPI=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SURFACE3_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_SX8654">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_SX8654=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_SX8654=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_SX8654 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_TPS6507X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_TPS6507X=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_TPS6507X=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_TPS6507X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ZFORCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ZFORCE=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ZFORCE=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ZFORCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_COLIBRI_VF50">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_COLIBRI_VF50=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_COLIBRI_VF50=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_COLIBRI_VF50 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOUCHSCREEN_ROHM_BU21023">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOUCHSCREEN_ROHM_BU21023=y</xsl:when>
			<xsl:when test=". = 'module'">TOUCHSCREEN_ROHM_BU21023=m</xsl:when>
			<xsl:otherwise># TOUCHSCREEN_ROHM_BU21023 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MISC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MISC=y</xsl:when>
			<xsl:otherwise># INPUT_MISC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_88PM860X_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_88PM860X_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_88PM860X_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_88PM860X_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_88PM80X_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_88PM80X_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_88PM80X_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_88PM80X_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_AB8500_PONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_AB8500_PONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_AB8500_PONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_AB8500_PONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_AD714X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_AD714X=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_AD714X=m</xsl:when>
			<xsl:otherwise># INPUT_AD714X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_AD714X_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_AD714X_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_AD714X_I2C=m</xsl:when>
			<xsl:otherwise># INPUT_AD714X_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_AD714X_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_AD714X_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_AD714X_SPI=m</xsl:when>
			<xsl:otherwise># INPUT_AD714X_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ARIZONA_HAPTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ARIZONA_HAPTICS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ARIZONA_HAPTICS=m</xsl:when>
			<xsl:otherwise># INPUT_ARIZONA_HAPTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ATMEL_CAPTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ATMEL_CAPTOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ATMEL_CAPTOUCH=m</xsl:when>
			<xsl:otherwise># INPUT_ATMEL_CAPTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_BMA150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_BMA150=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_BMA150=m</xsl:when>
			<xsl:otherwise># INPUT_BMA150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_E3X0_BUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_E3X0_BUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_E3X0_BUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_E3X0_BUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PCSPKR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PCSPKR=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PCSPKR=m</xsl:when>
			<xsl:otherwise># INPUT_PCSPKR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PM8941_PWRKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PM8941_PWRKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PM8941_PWRKEY=m</xsl:when>
			<xsl:otherwise># INPUT_PM8941_PWRKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PM8XXX_VIBRATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PM8XXX_VIBRATOR=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PM8XXX_VIBRATOR=m</xsl:when>
			<xsl:otherwise># INPUT_PM8XXX_VIBRATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PMIC8XXX_PWRKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PMIC8XXX_PWRKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PMIC8XXX_PWRKEY=m</xsl:when>
			<xsl:otherwise># INPUT_PMIC8XXX_PWRKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_SPARCSPKR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_SPARCSPKR=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_SPARCSPKR=m</xsl:when>
			<xsl:otherwise># INPUT_SPARCSPKR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_M68K_BEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_M68K_BEEP=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_M68K_BEEP=m</xsl:when>
			<xsl:otherwise># INPUT_M68K_BEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MAX77693_HAPTIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MAX77693_HAPTIC=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MAX77693_HAPTIC=m</xsl:when>
			<xsl:otherwise># INPUT_MAX77693_HAPTIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MAX8925_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MAX8925_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MAX8925_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_MAX8925_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MAX8997_HAPTIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MAX8997_HAPTIC=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MAX8997_HAPTIC=m</xsl:when>
			<xsl:otherwise># INPUT_MAX8997_HAPTIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MC13783_PWRBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MC13783_PWRBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MC13783_PWRBUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_MC13783_PWRBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MMA8450">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MMA8450=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MMA8450=m</xsl:when>
			<xsl:otherwise># INPUT_MMA8450 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_MPU3050">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_MPU3050=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_MPU3050=m</xsl:when>
			<xsl:otherwise># INPUT_MPU3050 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_APANEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_APANEL=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_APANEL=m</xsl:when>
			<xsl:otherwise># INPUT_APANEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_GP2A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_GP2A=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_GP2A=m</xsl:when>
			<xsl:otherwise># INPUT_GP2A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_GPIO_BEEPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_GPIO_BEEPER=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_GPIO_BEEPER=m</xsl:when>
			<xsl:otherwise># INPUT_GPIO_BEEPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_GPIO_TILT_POLLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_GPIO_TILT_POLLED=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_GPIO_TILT_POLLED=m</xsl:when>
			<xsl:otherwise># INPUT_GPIO_TILT_POLLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_IXP4XX_BEEPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_IXP4XX_BEEPER=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_IXP4XX_BEEPER=m</xsl:when>
			<xsl:otherwise># INPUT_IXP4XX_BEEPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_COBALT_BTNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_COBALT_BTNS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_COBALT_BTNS=m</xsl:when>
			<xsl:otherwise># INPUT_COBALT_BTNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_WISTRON_BTNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_WISTRON_BTNS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_WISTRON_BTNS=m</xsl:when>
			<xsl:otherwise># INPUT_WISTRON_BTNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ATLAS_BTNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ATLAS_BTNS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ATLAS_BTNS=m</xsl:when>
			<xsl:otherwise># INPUT_ATLAS_BTNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ATI_REMOTE2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ATI_REMOTE2=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ATI_REMOTE2=m</xsl:when>
			<xsl:otherwise># INPUT_ATI_REMOTE2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_KEYSPAN_REMOTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_KEYSPAN_REMOTE=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_KEYSPAN_REMOTE=m</xsl:when>
			<xsl:otherwise># INPUT_KEYSPAN_REMOTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_KXTJ9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_KXTJ9=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_KXTJ9=m</xsl:when>
			<xsl:otherwise># INPUT_KXTJ9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_KXTJ9_POLLED_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_KXTJ9_POLLED_MODE=y</xsl:when>
			<xsl:otherwise># INPUT_KXTJ9_POLLED_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_POWERMATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_POWERMATE=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_POWERMATE=m</xsl:when>
			<xsl:otherwise># INPUT_POWERMATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_YEALINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_YEALINK=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_YEALINK=m</xsl:when>
			<xsl:otherwise># INPUT_YEALINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_CM109">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_CM109=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_CM109=m</xsl:when>
			<xsl:otherwise># INPUT_CM109 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_REGULATOR_HAPTIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_REGULATOR_HAPTIC=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_REGULATOR_HAPTIC=m</xsl:when>
			<xsl:otherwise># INPUT_REGULATOR_HAPTIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_RETU_PWRBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_RETU_PWRBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_RETU_PWRBUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_RETU_PWRBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TPS65218_PWRBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TPS65218_PWRBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_TPS65218_PWRBUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_TPS65218_PWRBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_AXP20X_PEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_AXP20X_PEK=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_AXP20X_PEK=m</xsl:when>
			<xsl:otherwise># INPUT_AXP20X_PEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TWL4030_PWRBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TWL4030_PWRBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_TWL4030_PWRBUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_TWL4030_PWRBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TWL4030_VIBRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TWL4030_VIBRA=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_TWL4030_VIBRA=m</xsl:when>
			<xsl:otherwise># INPUT_TWL4030_VIBRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_TWL6040_VIBRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_TWL6040_VIBRA=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_TWL6040_VIBRA=m</xsl:when>
			<xsl:otherwise># INPUT_TWL6040_VIBRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_UINPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_UINPUT=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_UINPUT=m</xsl:when>
			<xsl:otherwise># INPUT_UINPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_SGI_BTNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_SGI_BTNS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_SGI_BTNS=m</xsl:when>
			<xsl:otherwise># INPUT_SGI_BTNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_SDC_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_SDC_RTC=y</xsl:when>
			<xsl:when test=". = 'module'">HP_SDC_RTC=m</xsl:when>
			<xsl:otherwise># HP_SDC_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PALMAS_PWRBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PALMAS_PWRBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PALMAS_PWRBUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_PALMAS_PWRBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PCF50633_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PCF50633_PMU=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PCF50633_PMU=m</xsl:when>
			<xsl:otherwise># INPUT_PCF50633_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PCF8574">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PCF8574=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PCF8574=m</xsl:when>
			<xsl:otherwise># INPUT_PCF8574 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PWM_BEEPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PWM_BEEPER=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PWM_BEEPER=m</xsl:when>
			<xsl:otherwise># INPUT_PWM_BEEPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_GPIO_ROTARY_ENCODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_GPIO_ROTARY_ENCODER=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_GPIO_ROTARY_ENCODER=m</xsl:when>
			<xsl:otherwise># INPUT_GPIO_ROTARY_ENCODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_RB532_BUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_RB532_BUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_RB532_BUTTON=m</xsl:when>
			<xsl:otherwise># INPUT_RB532_BUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DA9052_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DA9052_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DA9052_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_DA9052_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DA9055_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DA9055_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DA9055_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_DA9055_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DA9063_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DA9063_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DA9063_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_DA9063_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DM355EVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DM355EVM=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DM355EVM=m</xsl:when>
			<xsl:otherwise># INPUT_DM355EVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_BFIN_ROTARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_BFIN_ROTARY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_BFIN_ROTARY=m</xsl:when>
			<xsl:otherwise># INPUT_BFIN_ROTARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_WM831X_ON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_WM831X_ON=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_WM831X_ON=m</xsl:when>
			<xsl:otherwise># INPUT_WM831X_ON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_PCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_PCAP=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_PCAP=m</xsl:when>
			<xsl:otherwise># INPUT_PCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ADXL34X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ADXL34X=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ADXL34X=m</xsl:when>
			<xsl:otherwise># INPUT_ADXL34X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ADXL34X_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ADXL34X_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ADXL34X_I2C=m</xsl:when>
			<xsl:otherwise># INPUT_ADXL34X_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_ADXL34X_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_ADXL34X_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_ADXL34X_SPI=m</xsl:when>
			<xsl:otherwise># INPUT_ADXL34X_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_IMS_PCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_IMS_PCU=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_IMS_PCU=m</xsl:when>
			<xsl:otherwise># INPUT_IMS_PCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_CMA3000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_CMA3000=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_CMA3000=m</xsl:when>
			<xsl:otherwise># INPUT_CMA3000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_CMA3000_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_CMA3000_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_CMA3000_I2C=m</xsl:when>
			<xsl:otherwise># INPUT_CMA3000_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_XEN_KBDDEV_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_XEN_KBDDEV_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_XEN_KBDDEV_FRONTEND=m</xsl:when>
			<xsl:otherwise># INPUT_XEN_KBDDEV_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_SIRFSOC_ONKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_SIRFSOC_ONKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_SIRFSOC_ONKEY=m</xsl:when>
			<xsl:otherwise># INPUT_SIRFSOC_ONKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_IDEAPAD_SLIDEBAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_IDEAPAD_SLIDEBAR=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_IDEAPAD_SLIDEBAR=m</xsl:when>
			<xsl:otherwise># INPUT_IDEAPAD_SLIDEBAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_SOC_BUTTON_ARRAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_SOC_BUTTON_ARRAY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_SOC_BUTTON_ARRAY=m</xsl:when>
			<xsl:otherwise># INPUT_SOC_BUTTON_ARRAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DRV260X_HAPTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DRV260X_HAPTICS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DRV260X_HAPTICS=m</xsl:when>
			<xsl:otherwise># INPUT_DRV260X_HAPTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DRV2665_HAPTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DRV2665_HAPTICS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DRV2665_HAPTICS=m</xsl:when>
			<xsl:otherwise># INPUT_DRV2665_HAPTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_DRV2667_HAPTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_DRV2667_HAPTICS=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_DRV2667_HAPTICS=m</xsl:when>
			<xsl:otherwise># INPUT_DRV2667_HAPTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INPUT_HISI_POWERKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INPUT_HISI_POWERKEY=y</xsl:when>
			<xsl:when test=". = 'module'">INPUT_HISI_POWERKEY=m</xsl:when>
			<xsl:otherwise># INPUT_HISI_POWERKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">RMI4_CORE=m</xsl:when>
			<xsl:otherwise># RMI4_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">RMI4_I2C=m</xsl:when>
			<xsl:otherwise># RMI4_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">RMI4_SPI=m</xsl:when>
			<xsl:otherwise># RMI4_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_2D_SENSOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_2D_SENSOR=y</xsl:when>
			<xsl:otherwise># RMI4_2D_SENSOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_F11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_F11=y</xsl:when>
			<xsl:otherwise># RMI4_F11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_F12">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_F12=y</xsl:when>
			<xsl:otherwise># RMI4_F12 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RMI4_F30">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RMI4_F30=y</xsl:when>
			<xsl:otherwise># RMI4_F30 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO=m</xsl:when>
			<xsl:otherwise># SERIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_MIGHT_HAVE_PC_SERIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_MIGHT_HAVE_PC_SERIO=y</xsl:when>
			<xsl:otherwise># ARCH_MIGHT_HAVE_PC_SERIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_I8042">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_I8042=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_I8042=m</xsl:when>
			<xsl:otherwise># SERIO_I8042 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_SERPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_SERPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_SERPORT=m</xsl:when>
			<xsl:otherwise># SERIO_SERPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_CT82C710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_CT82C710=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_CT82C710=m</xsl:when>
			<xsl:otherwise># SERIO_CT82C710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_Q40KBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_Q40KBD=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_Q40KBD=m</xsl:when>
			<xsl:otherwise># SERIO_Q40KBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_PARKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_PARKBD=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_PARKBD=m</xsl:when>
			<xsl:otherwise># SERIO_PARKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_RPCKBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_RPCKBD=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_RPCKBD=m</xsl:when>
			<xsl:otherwise># SERIO_RPCKBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_AT32PSIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_AT32PSIF=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_AT32PSIF=m</xsl:when>
			<xsl:otherwise># SERIO_AT32PSIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_AMBAKMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_AMBAKMI=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_AMBAKMI=m</xsl:when>
			<xsl:otherwise># SERIO_AMBAKMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_SA1111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_SA1111=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_SA1111=m</xsl:when>
			<xsl:otherwise># SERIO_SA1111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_GSCPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_GSCPS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_GSCPS2=m</xsl:when>
			<xsl:otherwise># SERIO_GSCPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_SDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_SDC=y</xsl:when>
			<xsl:when test=". = 'module'">HP_SDC=m</xsl:when>
			<xsl:otherwise># HP_SDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIL_MLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIL_MLC=y</xsl:when>
			<xsl:when test=". = 'module'">HIL_MLC=m</xsl:when>
			<xsl:otherwise># HIL_MLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_PCIPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_PCIPS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_PCIPS2=m</xsl:when>
			<xsl:otherwise># SERIO_PCIPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_MACEPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_MACEPS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_MACEPS2=m</xsl:when>
			<xsl:otherwise># SERIO_MACEPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_LIBPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_LIBPS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_LIBPS2=m</xsl:when>
			<xsl:otherwise># SERIO_LIBPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_RAW=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_RAW=m</xsl:when>
			<xsl:otherwise># SERIO_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_XILINX_XPS_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_XILINX_XPS_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_XILINX_XPS_PS2=m</xsl:when>
			<xsl:otherwise># SERIO_XILINX_XPS_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_ALTERA_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_ALTERA_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_ALTERA_PS2=m</xsl:when>
			<xsl:otherwise># SERIO_ALTERA_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_AMS_DELTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_AMS_DELTA=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_AMS_DELTA=m</xsl:when>
			<xsl:otherwise># SERIO_AMS_DELTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_PS2MULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_PS2MULT=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_PS2MULT=m</xsl:when>
			<xsl:otherwise># SERIO_PS2MULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_ARC_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_ARC_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_ARC_PS2=m</xsl:when>
			<xsl:otherwise># SERIO_ARC_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_APBPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_APBPS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_APBPS2=m</xsl:when>
			<xsl:otherwise># SERIO_APBPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_OLPC_APSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_OLPC_APSP=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_OLPC_APSP=m</xsl:when>
			<xsl:otherwise># SERIO_OLPC_APSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV_KEYBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV_KEYBOARD=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV_KEYBOARD=m</xsl:when>
			<xsl:otherwise># HYPERV_KEYBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_SUN4I_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_SUN4I_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_SUN4I_PS2=m</xsl:when>
			<xsl:otherwise># SERIO_SUN4I_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USERIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USERIO=y</xsl:when>
			<xsl:when test=". = 'module'">USERIO=m</xsl:when>
			<xsl:otherwise># USERIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GAMEPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GAMEPORT=y</xsl:when>
			<xsl:when test=". = 'module'">GAMEPORT=m</xsl:when>
			<xsl:otherwise># GAMEPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GAMEPORT_NS558">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GAMEPORT_NS558=y</xsl:when>
			<xsl:when test=". = 'module'">GAMEPORT_NS558=m</xsl:when>
			<xsl:otherwise># GAMEPORT_NS558 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GAMEPORT_L4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GAMEPORT_L4=y</xsl:when>
			<xsl:when test=". = 'module'">GAMEPORT_L4=m</xsl:when>
			<xsl:otherwise># GAMEPORT_L4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GAMEPORT_EMU10K1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GAMEPORT_EMU10K1=y</xsl:when>
			<xsl:when test=". = 'module'">GAMEPORT_EMU10K1=m</xsl:when>
			<xsl:otherwise># GAMEPORT_EMU10K1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GAMEPORT_FM801">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GAMEPORT_FM801=y</xsl:when>
			<xsl:when test=". = 'module'">GAMEPORT_FM801=m</xsl:when>
			<xsl:otherwise># GAMEPORT_FM801 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TTY=y</xsl:when>
			<xsl:otherwise># TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT=y</xsl:when>
			<xsl:otherwise># VT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONSOLE_TRANSLATIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONSOLE_TRANSLATIONS=y</xsl:when>
			<xsl:otherwise># CONSOLE_TRANSLATIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT_CONSOLE=y</xsl:when>
			<xsl:otherwise># VT_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT_CONSOLE_SLEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT_CONSOLE_SLEEP=y</xsl:when>
			<xsl:otherwise># VT_CONSOLE_SLEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_CONSOLE=y</xsl:when>
			<xsl:otherwise># HW_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT_HW_CONSOLE_BINDING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT_HW_CONSOLE_BINDING=y</xsl:when>
			<xsl:otherwise># VT_HW_CONSOLE_BINDING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNIX98_PTYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNIX98_PTYS=y</xsl:when>
			<xsl:otherwise># UNIX98_PTYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEGACY_PTYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEGACY_PTYS=y</xsl:when>
			<xsl:otherwise># LEGACY_PTYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEGACY_PTY_COUNT">
		LEGACY_PTY_COUNT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BFIN_JTAG_COMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_JTAG_COMM=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_JTAG_COMM=m</xsl:when>
			<xsl:otherwise># BFIN_JTAG_COMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_JTAG_COMM_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_JTAG_COMM_CONSOLE=y</xsl:when>
			<xsl:otherwise># BFIN_JTAG_COMM_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_NONSTANDARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_NONSTANDARD=y</xsl:when>
			<xsl:otherwise># SERIAL_NONSTANDARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKETPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKETPORT=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKETPORT=m</xsl:when>
			<xsl:otherwise># ROCKETPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CYCLADES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CYCLADES=y</xsl:when>
			<xsl:when test=". = 'module'">CYCLADES=m</xsl:when>
			<xsl:otherwise># CYCLADES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CYZ_INTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CYZ_INTR=y</xsl:when>
			<xsl:otherwise># CYZ_INTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOXA_INTELLIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOXA_INTELLIO=y</xsl:when>
			<xsl:when test=". = 'module'">MOXA_INTELLIO=m</xsl:when>
			<xsl:otherwise># MOXA_INTELLIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOXA_SMARTIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOXA_SMARTIO=y</xsl:when>
			<xsl:when test=". = 'module'">MOXA_SMARTIO=m</xsl:when>
			<xsl:otherwise># MOXA_SMARTIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNCLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNCLINK=y</xsl:when>
			<xsl:when test=". = 'module'">SYNCLINK=m</xsl:when>
			<xsl:otherwise># SYNCLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNCLINKMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNCLINKMP=y</xsl:when>
			<xsl:when test=". = 'module'">SYNCLINKMP=m</xsl:when>
			<xsl:otherwise># SYNCLINKMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNCLINK_GT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNCLINK_GT=y</xsl:when>
			<xsl:when test=". = 'module'">SYNCLINK_GT=m</xsl:when>
			<xsl:otherwise># SYNCLINK_GT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOZOMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NOZOMI=y</xsl:when>
			<xsl:when test=". = 'module'">NOZOMI=m</xsl:when>
			<xsl:otherwise># NOZOMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISI=y</xsl:when>
			<xsl:when test=". = 'module'">ISI=m</xsl:when>
			<xsl:otherwise># ISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="N_HDLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">N_HDLC=y</xsl:when>
			<xsl:when test=". = 'module'">N_HDLC=m</xsl:when>
			<xsl:otherwise># N_HDLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="N_GSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">N_GSM=y</xsl:when>
			<xsl:when test=". = 'module'">N_GSM=m</xsl:when>
			<xsl:otherwise># N_GSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRACE_ROUTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRACE_ROUTER=y</xsl:when>
			<xsl:when test=". = 'module'">TRACE_ROUTER=m</xsl:when>
			<xsl:otherwise># TRACE_ROUTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRACE_SINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRACE_SINK=y</xsl:when>
			<xsl:when test=". = 'module'">TRACE_SINK=m</xsl:when>
			<xsl:otherwise># TRACE_SINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_EPAPR_HV_BYTECHAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_EPAPR_HV_BYTECHAN=y</xsl:when>
			<xsl:otherwise># PPC_EPAPR_HV_BYTECHAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_EARLY_DEBUG_EHV_BC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_EARLY_DEBUG_EHV_BC=y</xsl:when>
			<xsl:otherwise># PPC_EARLY_DEBUG_EHV_BC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_EARLY_DEBUG_EHV_BC_HANDLE">
		PPC_EARLY_DEBUG_EHV_BC_HANDLE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="GOLDFISH_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH_TTY=y</xsl:when>
			<xsl:when test=". = 'module'">GOLDFISH_TTY=m</xsl:when>
			<xsl:otherwise># GOLDFISH_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA_TTY=y</xsl:when>
			<xsl:otherwise># DA_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA_CONSOLE=y</xsl:when>
			<xsl:otherwise># DA_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_EJTAG_FDC_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_EJTAG_FDC_TTY=y</xsl:when>
			<xsl:otherwise># MIPS_EJTAG_FDC_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_EJTAG_FDC_EARLYCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_EJTAG_FDC_EARLYCON=y</xsl:when>
			<xsl:otherwise># MIPS_EJTAG_FDC_EARLYCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_EJTAG_FDC_KGDB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_EJTAG_FDC_KGDB=y</xsl:when>
			<xsl:otherwise># MIPS_EJTAG_FDC_KGDB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_EJTAG_FDC_KGDB_CHAN">
		MIPS_EJTAG_FDC_KGDB_CHAN=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DEVMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVMEM=y</xsl:when>
			<xsl:otherwise># DEVMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVKMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVKMEM=y</xsl:when>
			<xsl:otherwise># DEVKMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_SNSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_SNSC=y</xsl:when>
			<xsl:otherwise># SGI_SNSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_TIOCX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_TIOCX=y</xsl:when>
			<xsl:otherwise># SGI_TIOCX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_MBCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_MBCS=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_MBCS=m</xsl:when>
			<xsl:otherwise># SGI_MBCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_EARLYCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_EARLYCON=y</xsl:when>
			<xsl:otherwise># SERIAL_EARLYCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250=m</xsl:when>
			<xsl:otherwise># SERIAL_8250 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_DEPRECATED_OPTIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_DEPRECATED_OPTIONS=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_DEPRECATED_OPTIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_PNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_PNP=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_PNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_FINTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_FINTEK=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_FINTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_GSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_GSC=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_GSC=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_GSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_DMA=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_PCI=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_HP300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_HP300=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_HP300=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_HP300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_CS=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_CS=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_NR_UARTS">
		SERIAL_8250_NR_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_8250_RUNTIME_UARTS">
		SERIAL_8250_RUNTIME_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_8250_EXTENDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_EXTENDED=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_EXTENDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_MANY_PORTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_MANY_PORTS=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_MANY_PORTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_FOURPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_FOURPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_FOURPORT=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_FOURPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_ACCENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_ACCENT=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_ACCENT=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_ACCENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_BOCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_BOCA=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_BOCA=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_BOCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_EXAR_ST16C554">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_EXAR_ST16C554=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_EXAR_ST16C554=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_EXAR_ST16C554 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_HUB6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_HUB6=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_HUB6=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_HUB6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_SHARE_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_SHARE_IRQ=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_SHARE_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_DETECT_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_DETECT_IRQ=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_DETECT_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_RSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_RSA=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_RSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_ACORN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_ACORN=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_ACORN=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_ACORN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_BCM2835AUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_BCM2835AUX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_BCM2835AUX=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_BCM2835AUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_FSL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_FSL=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_FSL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_DW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_DW=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_DW=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_DW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_EM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_EM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_EM=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_EM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_RT288X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_RT288X=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_RT288X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_OMAP=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_OMAP_TTYO_FIXUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_OMAP_TTYO_FIXUP=y</xsl:when>
			<xsl:otherwise># SERIAL_8250_OMAP_TTYO_FIXUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_LPC18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_LPC18XX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_LPC18XX=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_LPC18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_MT6577">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_MT6577=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_MT6577=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_MT6577 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_UNIPHIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_UNIPHIER=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_UNIPHIER=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_UNIPHIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_INGENIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_INGENIC=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_INGENIC=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_INGENIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_MID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_MID=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_MID=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_MID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_8250_MOXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_8250_MOXA=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_8250_MOXA=m</xsl:when>
			<xsl:otherwise># SERIAL_8250_MOXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_OF_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_OF_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_OF_PLATFORM=m</xsl:when>
			<xsl:otherwise># SERIAL_OF_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AMBA_PL010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AMBA_PL010=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_AMBA_PL010=m</xsl:when>
			<xsl:otherwise># SERIAL_AMBA_PL010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AMBA_PL010_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AMBA_PL010_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_AMBA_PL010_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AMBA_PL011">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AMBA_PL011=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_AMBA_PL011=m</xsl:when>
			<xsl:otherwise># SERIAL_AMBA_PL011 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AMBA_PL011_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AMBA_PL011_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_AMBA_PL011_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_EARLYCON_ARM_SEMIHOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_EARLYCON_ARM_SEMIHOST=y</xsl:when>
			<xsl:otherwise># SERIAL_EARLYCON_ARM_SEMIHOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SB1250_DUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SB1250_DUART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SB1250_DUART=m</xsl:when>
			<xsl:otherwise># SERIAL_SB1250_DUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SB1250_DUART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SB1250_DUART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SB1250_DUART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ATMEL=y</xsl:when>
			<xsl:otherwise># SERIAL_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ATMEL_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ATMEL_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ATMEL_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ATMEL_PDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ATMEL_PDC=y</xsl:when>
			<xsl:otherwise># SERIAL_ATMEL_PDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ATMEL_TTYAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ATMEL_TTYAT=y</xsl:when>
			<xsl:otherwise># SERIAL_ATMEL_TTYAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_KGDB_NMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_KGDB_NMI=y</xsl:when>
			<xsl:otherwise># SERIAL_KGDB_NMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_KS8695">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_KS8695=y</xsl:when>
			<xsl:otherwise># SERIAL_KS8695 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_KS8695_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_KS8695_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_KS8695_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MESON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MESON=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MESON=m</xsl:when>
			<xsl:otherwise># SERIAL_MESON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MESON_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MESON_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MESON_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_CLPS711X=m</xsl:when>
			<xsl:otherwise># SERIAL_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CLPS711X_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CLPS711X_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_CLPS711X_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SAMSUNG=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SAMSUNG=m</xsl:when>
			<xsl:otherwise># SERIAL_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SAMSUNG_UARTS_4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SAMSUNG_UARTS_4=y</xsl:when>
			<xsl:otherwise># SERIAL_SAMSUNG_UARTS_4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SAMSUNG_UARTS">
		SERIAL_SAMSUNG_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_SAMSUNG_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SAMSUNG_DEBUG=y</xsl:when>
			<xsl:otherwise># SERIAL_SAMSUNG_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SAMSUNG_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SAMSUNG_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SAMSUNG_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SIRFSOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SIRFSOC=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SIRFSOC=m</xsl:when>
			<xsl:otherwise># SERIAL_SIRFSOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SIRFSOC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SIRFSOC_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SIRFSOC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_TEGRA=m</xsl:when>
			<xsl:otherwise># SERIAL_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MAX3100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MAX3100=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MAX3100=m</xsl:when>
			<xsl:otherwise># SERIAL_MAX3100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MAX310X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MAX310X=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MAX310X=m</xsl:when>
			<xsl:otherwise># SERIAL_MAX310X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_DZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_DZ=y</xsl:when>
			<xsl:otherwise># SERIAL_DZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_DZ_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_DZ_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_DZ_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ZS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ZS=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ZS=m</xsl:when>
			<xsl:otherwise># SERIAL_ZS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ZS_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ZS_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ZS_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_21285">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_21285=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_21285=m</xsl:when>
			<xsl:otherwise># SERIAL_21285 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_21285_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_21285_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_21285_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPSC=y</xsl:when>
			<xsl:otherwise># SERIAL_MPSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPSC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPSC_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MPSC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PXA=y</xsl:when>
			<xsl:otherwise># SERIAL_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PXA_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PXA_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_PXA_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SA1100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SA1100=y</xsl:when>
			<xsl:otherwise># SERIAL_SA1100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SA1100_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SA1100_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SA1100_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_BFIN=m</xsl:when>
			<xsl:otherwise># SERIAL_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_DMA=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_PIO=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_UART0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_UART0=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_UART0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_UART0_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_UART0_CTSRTS=y</xsl:when>
			<xsl:otherwise># BFIN_UART0_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_UART1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_UART1=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_UART1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_UART1_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_UART1_CTSRTS=y</xsl:when>
			<xsl:otherwise># BFIN_UART1_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_UART2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_UART2=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_UART2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_UART2_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_UART2_CTSRTS=y</xsl:when>
			<xsl:otherwise># BFIN_UART2_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_UART3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_UART3=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_UART3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_UART3_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_UART3_CTSRTS=y</xsl:when>
			<xsl:otherwise># BFIN_UART3_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_IMX=m</xsl:when>
			<xsl:otherwise># SERIAL_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IMX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IMX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_IMX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_UARTLITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_UARTLITE=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_UARTLITE=m</xsl:when>
			<xsl:otherwise># SERIAL_UARTLITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_UARTLITE_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_UARTLITE_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_UARTLITE_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNCORE=y</xsl:when>
			<xsl:otherwise># SERIAL_SUNCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNZILOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNZILOG=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SUNZILOG=m</xsl:when>
			<xsl:otherwise># SERIAL_SUNZILOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNZILOG_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNZILOG_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SUNZILOG_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNSU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNSU=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SUNSU=m</xsl:when>
			<xsl:otherwise># SERIAL_SUNSU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNSU_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNSU_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SUNSU_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MUX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MUX=m</xsl:when>
			<xsl:otherwise># SERIAL_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MUX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MUX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MUX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PDC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PDC_CONSOLE=y</xsl:when>
			<xsl:otherwise># PDC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNSAB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNSAB=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SUNSAB=m</xsl:when>
			<xsl:otherwise># SERIAL_SUNSAB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNSAB_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNSAB_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SUNSAB_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SUNHV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SUNHV=y</xsl:when>
			<xsl:otherwise># SERIAL_SUNHV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IP22_ZILOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IP22_ZILOG=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_IP22_ZILOG=m</xsl:when>
			<xsl:otherwise># SERIAL_IP22_ZILOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IP22_ZILOG_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IP22_ZILOG_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_IP22_ZILOG_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SH_SCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SH_SCI=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SH_SCI=m</xsl:when>
			<xsl:otherwise># SERIAL_SH_SCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SH_SCI_NR_UARTS">
		SERIAL_SH_SCI_NR_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_SH_SCI_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SH_SCI_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SH_SCI_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SH_SCI_EARLYCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SH_SCI_EARLYCON=y</xsl:when>
			<xsl:otherwise># SERIAL_SH_SCI_EARLYCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SH_SCI_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SH_SCI_DMA=y</xsl:when>
			<xsl:otherwise># SERIAL_SH_SCI_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PNX8XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PNX8XXX=y</xsl:when>
			<xsl:otherwise># SERIAL_PNX8XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PNX8XXX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PNX8XXX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_PNX8XXX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_HS_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_HS_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_HS_LPC32XX=m</xsl:when>
			<xsl:otherwise># SERIAL_HS_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_HS_LPC32XX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_HS_LPC32XX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_HS_LPC32XX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_CORE=m</xsl:when>
			<xsl:otherwise># SERIAL_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CORE_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CORE_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_CORE_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONSOLE_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONSOLE_POLL=y</xsl:when>
			<xsl:otherwise># CONSOLE_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MCF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MCF=y</xsl:when>
			<xsl:otherwise># SERIAL_MCF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MCF_BAUDRATE">
		SERIAL_MCF_BAUDRATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_MCF_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MCF_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MCF_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PMACZILOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PMACZILOG=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_PMACZILOG=m</xsl:when>
			<xsl:otherwise># SERIAL_PMACZILOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PMACZILOG_TTYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PMACZILOG_TTYS=y</xsl:when>
			<xsl:otherwise># SERIAL_PMACZILOG_TTYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PMACZILOG_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PMACZILOG_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_PMACZILOG_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CPM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_CPM=m</xsl:when>
			<xsl:otherwise># SERIAL_CPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CPM_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CPM_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_CPM_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SGI_L1_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SGI_L1_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SGI_L1_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PIC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PIC32=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_PIC32=m</xsl:when>
			<xsl:otherwise># SERIAL_PIC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PIC32_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PIC32_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_PIC32_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPC52xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPC52xx=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MPC52xx=m</xsl:when>
			<xsl:otherwise># SERIAL_MPC52xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPC52xx_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPC52xx_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MPC52xx_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPC52xx_CONSOLE_BAUD">
		SERIAL_MPC52xx_CONSOLE_BAUD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_ICOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ICOM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ICOM=m</xsl:when>
			<xsl:otherwise># SERIAL_ICOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_M32R_SIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_M32R_SIO=y</xsl:when>
			<xsl:otherwise># SERIAL_M32R_SIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_M32R_SIO_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_M32R_SIO_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_M32R_SIO_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_M32R_PLDSIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_M32R_PLDSIO=y</xsl:when>
			<xsl:otherwise># SERIAL_M32R_PLDSIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TXX9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TXX9=y</xsl:when>
			<xsl:otherwise># SERIAL_TXX9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAS_TXX9_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAS_TXX9_SERIAL=y</xsl:when>
			<xsl:otherwise># HAS_TXX9_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TXX9_NR_UARTS">
		SERIAL_TXX9_NR_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_TXX9_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TXX9_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_TXX9_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TXX9_STDSERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TXX9_STDSERIAL=y</xsl:when>
			<xsl:otherwise># SERIAL_TXX9_STDSERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_VR41XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_VR41XX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_VR41XX=m</xsl:when>
			<xsl:otherwise># SERIAL_VR41XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_VR41XX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_VR41XX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_VR41XX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_JSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_JSM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_JSM=m</xsl:when>
			<xsl:otherwise># SERIAL_JSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SGI_IOC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SGI_IOC4=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SGI_IOC4=m</xsl:when>
			<xsl:otherwise># SERIAL_SGI_IOC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SGI_IOC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SGI_IOC3=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SGI_IOC3=m</xsl:when>
			<xsl:otherwise># SERIAL_SGI_IOC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MSM=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MSM=m</xsl:when>
			<xsl:otherwise># SERIAL_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MSM_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MSM_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MSM_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_VT8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_VT8500=y</xsl:when>
			<xsl:otherwise># SERIAL_VT8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_VT8500_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_VT8500_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_VT8500_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ETRAXFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ETRAXFS=y</xsl:when>
			<xsl:otherwise># SERIAL_ETRAXFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ETRAXFS_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ETRAXFS_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ETRAXFS_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_NETX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_NETX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_NETX=m</xsl:when>
			<xsl:otherwise># SERIAL_NETX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_NETX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_NETX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_NETX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_OMAP=m</xsl:when>
			<xsl:otherwise># SERIAL_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_OMAP_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_OMAP_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_OMAP_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_LANTIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_LANTIQ=y</xsl:when>
			<xsl:otherwise># SERIAL_LANTIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_QE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_QE=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_QE=m</xsl:when>
			<xsl:otherwise># SERIAL_QE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SCCNXP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SCCNXP=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SCCNXP=m</xsl:when>
			<xsl:otherwise># SERIAL_SCCNXP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SCCNXP_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SCCNXP_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SCCNXP_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SC16IS7XX_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SC16IS7XX_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SC16IS7XX_CORE=m</xsl:when>
			<xsl:otherwise># SERIAL_SC16IS7XX_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SC16IS7XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SC16IS7XX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SC16IS7XX=m</xsl:when>
			<xsl:otherwise># SERIAL_SC16IS7XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SC16IS7XX_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SC16IS7XX_I2C=y</xsl:when>
			<xsl:otherwise># SERIAL_SC16IS7XX_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SC16IS7XX_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SC16IS7XX_SPI=y</xsl:when>
			<xsl:otherwise># SERIAL_SC16IS7XX_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_BFIN_SPORT=m</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT0_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT0_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT0_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT0_UART_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT0_UART_CTSRTS=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT0_UART_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT1_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT1_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT1_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT1_UART_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT1_UART_CTSRTS=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT1_UART_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT2_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT2_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT2_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT2_UART_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT2_UART_CTSRTS=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT2_UART_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT3_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT3_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT3_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BFIN_SPORT3_UART_CTSRTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BFIN_SPORT3_UART_CTSRTS=y</xsl:when>
			<xsl:otherwise># SERIAL_BFIN_SPORT3_UART_CTSRTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TIMBERDALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TIMBERDALE=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_TIMBERDALE=m</xsl:when>
			<xsl:otherwise># SERIAL_TIMBERDALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BCM63XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BCM63XX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_BCM63XX=m</xsl:when>
			<xsl:otherwise># SERIAL_BCM63XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_BCM63XX_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_BCM63XX_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_BCM63XX_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_GRLIB_GAISLER_APBUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_GRLIB_GAISLER_APBUART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_GRLIB_GAISLER_APBUART=m</xsl:when>
			<xsl:otherwise># SERIAL_GRLIB_GAISLER_APBUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_GRLIB_GAISLER_APBUART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_GRLIB_GAISLER_APBUART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_GRLIB_GAISLER_APBUART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_JTAGUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ALTERA_JTAGUART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ALTERA_JTAGUART=m</xsl:when>
			<xsl:otherwise># SERIAL_ALTERA_JTAGUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_JTAGUART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ALTERA_JTAGUART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ALTERA_JTAGUART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS=y</xsl:when>
			<xsl:otherwise># SERIAL_ALTERA_JTAGUART_CONSOLE_BYPASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ALTERA_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ALTERA_UART=m</xsl:when>
			<xsl:otherwise># SERIAL_ALTERA_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_UART_MAXPORTS">
		SERIAL_ALTERA_UART_MAXPORTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_UART_BAUDRATE">
		SERIAL_ALTERA_UART_BAUDRATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_ALTERA_UART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ALTERA_UART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ALTERA_UART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IFX6X60">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IFX6X60=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_IFX6X60=m</xsl:when>
			<xsl:otherwise># SERIAL_IFX6X60 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PCH_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PCH_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_PCH_UART=m</xsl:when>
			<xsl:otherwise># SERIAL_PCH_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_PCH_UART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_PCH_UART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_PCH_UART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MXS_AUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MXS_AUART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MXS_AUART=m</xsl:when>
			<xsl:otherwise># SERIAL_MXS_AUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MXS_AUART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MXS_AUART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MXS_AUART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_XILINX_PS_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_XILINX_PS_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_XILINX_PS_UART=m</xsl:when>
			<xsl:otherwise># SERIAL_XILINX_PS_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_XILINX_PS_UART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_XILINX_PS_UART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_XILINX_PS_UART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AR933X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AR933X=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_AR933X=m</xsl:when>
			<xsl:otherwise># SERIAL_AR933X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AR933X_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_AR933X_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_AR933X_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_AR933X_NR_UARTS">
		SERIAL_AR933X_NR_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_EFM32_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_EFM32_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_EFM32_UART=m</xsl:when>
			<xsl:otherwise># SERIAL_EFM32_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPS2_UART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPS2_UART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MPS2_UART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MPS2_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MPS2_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_MPS2_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_EFM32_UART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_EFM32_UART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_EFM32_UART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_TILEGX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_TILEGX=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_TILEGX=m</xsl:when>
			<xsl:otherwise># SERIAL_TILEGX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ARC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ARC=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ARC=m</xsl:when>
			<xsl:otherwise># SERIAL_ARC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ARC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ARC_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ARC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ARC_NR_PORTS">
		SERIAL_ARC_NR_PORTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_RP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_RP2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_RP2=m</xsl:when>
			<xsl:otherwise># SERIAL_RP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_RP2_NR_UARTS">
		SERIAL_RP2_NR_UARTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SERIAL_FSL_LPUART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_FSL_LPUART=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_FSL_LPUART=m</xsl:when>
			<xsl:otherwise># SERIAL_FSL_LPUART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_FSL_LPUART_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_FSL_LPUART_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_FSL_LPUART_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CONEXANT_DIGICOLOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CONEXANT_DIGICOLOR=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_CONEXANT_DIGICOLOR=m</xsl:when>
			<xsl:otherwise># SERIAL_CONEXANT_DIGICOLOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_CONEXANT_DIGICOLOR_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_CONEXANT_DIGICOLOR_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_CONEXANT_DIGICOLOR_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ST_ASC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ST_ASC=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_ST_ASC=m</xsl:when>
			<xsl:otherwise># SERIAL_ST_ASC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_ST_ASC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_ST_ASC_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_ST_ASC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MEN_Z135">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MEN_Z135=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MEN_Z135=m</xsl:when>
			<xsl:otherwise># SERIAL_MEN_Z135 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SPRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SPRD=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_SPRD=m</xsl:when>
			<xsl:otherwise># SERIAL_SPRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_SPRD_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_SPRD_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_SPRD_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_STM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_STM32=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_STM32=m</xsl:when>
			<xsl:otherwise># SERIAL_STM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_STM32_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_STM32_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_STM32_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MVEBU_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MVEBU_UART=y</xsl:when>
			<xsl:otherwise># SERIAL_MVEBU_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MVEBU_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MVEBU_CONSOLE=y</xsl:when>
			<xsl:otherwise># SERIAL_MVEBU_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_MCTRL_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_MCTRL_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_MCTRL_GPIO=m</xsl:when>
			<xsl:otherwise># SERIAL_MCTRL_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TTY_PRINTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TTY_PRINTK=y</xsl:when>
			<xsl:when test=". = 'module'">TTY_PRINTK=m</xsl:when>
			<xsl:otherwise># TTY_PRINTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_OTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_OTP=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_OTP=m</xsl:when>
			<xsl:otherwise># BFIN_OTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_OTP_WRITE_ENABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_OTP_WRITE_ENABLE=y</xsl:when>
			<xsl:otherwise># BFIN_OTP_WRITE_ENABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRINTER=y</xsl:when>
			<xsl:when test=". = 'module'">PRINTER=m</xsl:when>
			<xsl:otherwise># PRINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LP_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LP_CONSOLE=y</xsl:when>
			<xsl:otherwise># LP_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPDEV=y</xsl:when>
			<xsl:when test=". = 'module'">PPDEV=m</xsl:when>
			<xsl:otherwise># PPDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_DRIVER=y</xsl:when>
			<xsl:otherwise># HVC_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_IRQ=y</xsl:when>
			<xsl:otherwise># HVC_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_CONSOLE=y</xsl:when>
			<xsl:otherwise># HVC_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_OLD_HVSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_OLD_HVSI=y</xsl:when>
			<xsl:otherwise># HVC_OLD_HVSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_OPAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_OPAL=y</xsl:when>
			<xsl:otherwise># HVC_OPAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_RTAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_RTAS=y</xsl:when>
			<xsl:otherwise># HVC_RTAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_IUCV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_IUCV=y</xsl:when>
			<xsl:otherwise># HVC_IUCV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_XEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_XEN=y</xsl:when>
			<xsl:otherwise># HVC_XEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_XEN_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_XEN_FRONTEND=y</xsl:when>
			<xsl:otherwise># HVC_XEN_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_UDBG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_UDBG=y</xsl:when>
			<xsl:otherwise># HVC_UDBG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_DCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_DCC=y</xsl:when>
			<xsl:otherwise># HVC_DCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVC_BFIN_JTAG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVC_BFIN_JTAG=y</xsl:when>
			<xsl:otherwise># HVC_BFIN_JTAG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HVCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HVCS=y</xsl:when>
			<xsl:when test=". = 'module'">HVCS=m</xsl:when>
			<xsl:otherwise># HVCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_CONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_CONSOLE=m</xsl:when>
			<xsl:otherwise># VIRTIO_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_BSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_BSR=y</xsl:when>
			<xsl:when test=". = 'module'">IBM_BSR=m</xsl:when>
			<xsl:otherwise># IBM_BSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWERNV_OP_PANEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWERNV_OP_PANEL=y</xsl:when>
			<xsl:when test=". = 'module'">POWERNV_OP_PANEL=m</xsl:when>
			<xsl:otherwise># POWERNV_OP_PANEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_HANDLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_HANDLER=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_HANDLER=m</xsl:when>
			<xsl:otherwise># IPMI_HANDLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_PANIC_EVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_PANIC_EVENT=y</xsl:when>
			<xsl:otherwise># IPMI_PANIC_EVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_PANIC_STRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_PANIC_STRING=y</xsl:when>
			<xsl:otherwise># IPMI_PANIC_STRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_DEVICE_INTERFACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_DEVICE_INTERFACE=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_DEVICE_INTERFACE=m</xsl:when>
			<xsl:otherwise># IPMI_DEVICE_INTERFACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_SI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_SI=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_SI=m</xsl:when>
			<xsl:otherwise># IPMI_SI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_SSIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_SSIF=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_SSIF=m</xsl:when>
			<xsl:otherwise># IPMI_SSIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_POWERNV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_POWERNV=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_POWERNV=m</xsl:when>
			<xsl:otherwise># IPMI_POWERNV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_WATCHDOG=m</xsl:when>
			<xsl:otherwise># IPMI_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMI_POWEROFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMI_POWEROFF=y</xsl:when>
			<xsl:when test=". = 'module'">IPMI_POWEROFF=m</xsl:when>
			<xsl:otherwise># IPMI_POWEROFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DS1620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DS1620=y</xsl:when>
			<xsl:when test=". = 'module'">DS1620=m</xsl:when>
			<xsl:otherwise># DS1620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NWBUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NWBUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">NWBUTTON=m</xsl:when>
			<xsl:otherwise># NWBUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NWBUTTON_REBOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NWBUTTON_REBOOT=y</xsl:when>
			<xsl:otherwise># NWBUTTON_REBOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NWFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NWFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">NWFLASH=m</xsl:when>
			<xsl:otherwise># NWFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM=m</xsl:when>
			<xsl:otherwise># HW_RANDOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_TIMERIOMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_TIMERIOMEM=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_TIMERIOMEM=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_TIMERIOMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_INTEL=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_AMD=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_ATMEL=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_BCM63XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_BCM63XX=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_BCM63XX=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_BCM63XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_BCM2835=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_BCM2835=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_IPROC_RNG200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_IPROC_RNG200=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_IPROC_RNG200=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_IPROC_RNG200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_GEODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_GEODE=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_GEODE=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_GEODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_N2RNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_N2RNG=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_N2RNG=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_N2RNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_VIA=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_IXP4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_IXP4XX=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_IXP4XX=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_IXP4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">HW_RANDOM_OMAP=m</xsl:when>
			<xsl:otherwise># HW_RANDOM_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVRAM=y</xsl:when>
			<xsl:when test=". = 'module'">NVRAM=m</xsl:when>
			<xsl:otherwise># NVRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC=m</xsl:when>
			<xsl:otherwise># RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JS_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JS_RTC=y</xsl:when>
			<xsl:when test=". = 'module'">JS_RTC=m</xsl:when>
			<xsl:otherwise># JS_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_RTC=y</xsl:when>
			<xsl:otherwise># EFI_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DS1302">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DS1302=y</xsl:when>
			<xsl:when test=". = 'module'">DS1302=m</xsl:when>
			<xsl:otherwise># DS1302 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DTLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DTLK=y</xsl:when>
			<xsl:when test=". = 'module'">DTLK=m</xsl:when>
			<xsl:otherwise># DTLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_HWICAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_HWICAP=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_HWICAP=m</xsl:when>
			<xsl:otherwise># XILINX_HWICAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R3964">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R3964=y</xsl:when>
			<xsl:when test=". = 'module'">R3964=m</xsl:when>
			<xsl:otherwise># R3964 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APPLICOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APPLICOM=y</xsl:when>
			<xsl:when test=". = 'module'">APPLICOM=m</xsl:when>
			<xsl:otherwise># APPLICOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SONYPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SONYPI=y</xsl:when>
			<xsl:when test=". = 'module'">SONYPI=m</xsl:when>
			<xsl:otherwise># SONYPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TB0219">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TB0219=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TB0219=m</xsl:when>
			<xsl:otherwise># GPIO_TB0219 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNCLINK_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNCLINK_CS=y</xsl:when>
			<xsl:when test=". = 'module'">SYNCLINK_CS=m</xsl:when>
			<xsl:otherwise># SYNCLINK_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARDMAN_4000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARDMAN_4000=y</xsl:when>
			<xsl:when test=". = 'module'">CARDMAN_4000=m</xsl:when>
			<xsl:otherwise># CARDMAN_4000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CARDMAN_4040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CARDMAN_4040=y</xsl:when>
			<xsl:when test=". = 'module'">CARDMAN_4040=m</xsl:when>
			<xsl:otherwise># CARDMAN_4040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPWIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPWIRELESS=y</xsl:when>
			<xsl:when test=". = 'module'">IPWIRELESS=m</xsl:when>
			<xsl:otherwise># IPWIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MWAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MWAVE=y</xsl:when>
			<xsl:when test=". = 'module'">MWAVE=m</xsl:when>
			<xsl:otherwise># MWAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCx200_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCx200_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">SCx200_GPIO=m</xsl:when>
			<xsl:otherwise># SCx200_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PC8736x_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PC8736x_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">PC8736x_GPIO=m</xsl:when>
			<xsl:otherwise># PC8736x_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NSC_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NSC_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">NSC_GPIO=m</xsl:when>
			<xsl:otherwise># NSC_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAW_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAW_DRIVER=y</xsl:when>
			<xsl:when test=". = 'module'">RAW_DRIVER=m</xsl:when>
			<xsl:otherwise># RAW_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX_RAW_DEVS">
		MAX_RAW_DEVS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HPET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPET=y</xsl:when>
			<xsl:otherwise># HPET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPET_MMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPET_MMAP=y</xsl:when>
			<xsl:otherwise># HPET_MMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPET_MMAP_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPET_MMAP_DEFAULT=y</xsl:when>
			<xsl:otherwise># HPET_MMAP_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HANGCHECK_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HANGCHECK_TIMER=y</xsl:when>
			<xsl:when test=". = 'module'">HANGCHECK_TIMER=m</xsl:when>
			<xsl:otherwise># HANGCHECK_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMTIMER=y</xsl:when>
			<xsl:when test=". = 'module'">MMTIMER=m</xsl:when>
			<xsl:otherwise># MMTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UV_MMTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UV_MMTIMER=y</xsl:when>
			<xsl:when test=". = 'module'">UV_MMTIMER=m</xsl:when>
			<xsl:otherwise># UV_MMTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TPM=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TPM=m</xsl:when>
			<xsl:otherwise># TCG_TPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_CORE=m</xsl:when>
			<xsl:otherwise># TCG_TIS_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS=m</xsl:when>
			<xsl:otherwise># TCG_TIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_SPI=m</xsl:when>
			<xsl:otherwise># TCG_TIS_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_I2C_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_I2C_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_I2C_ATMEL=m</xsl:when>
			<xsl:otherwise># TCG_TIS_I2C_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_I2C_INFINEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_I2C_INFINEON=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_I2C_INFINEON=m</xsl:when>
			<xsl:otherwise># TCG_TIS_I2C_INFINEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_I2C_NUVOTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_I2C_NUVOTON=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_I2C_NUVOTON=m</xsl:when>
			<xsl:otherwise># TCG_TIS_I2C_NUVOTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_NSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_NSC=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_NSC=m</xsl:when>
			<xsl:otherwise># TCG_NSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_ATMEL=m</xsl:when>
			<xsl:otherwise># TCG_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_INFINEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_INFINEON=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_INFINEON=m</xsl:when>
			<xsl:otherwise># TCG_INFINEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_IBMVTPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_IBMVTPM=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_IBMVTPM=m</xsl:when>
			<xsl:otherwise># TCG_IBMVTPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_XEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_XEN=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_XEN=m</xsl:when>
			<xsl:otherwise># TCG_XEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_CRB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_CRB=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_CRB=m</xsl:when>
			<xsl:otherwise># TCG_CRB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_VTPM_PROXY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_VTPM_PROXY=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_VTPM_PROXY=m</xsl:when>
			<xsl:otherwise># TCG_VTPM_PROXY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_ST33ZP24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_ST33ZP24=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_ST33ZP24=m</xsl:when>
			<xsl:otherwise># TCG_TIS_ST33ZP24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_ST33ZP24_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_ST33ZP24_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_ST33ZP24_I2C=m</xsl:when>
			<xsl:otherwise># TCG_TIS_ST33ZP24_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCG_TIS_ST33ZP24_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCG_TIS_ST33ZP24_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">TCG_TIS_ST33ZP24_SPI=m</xsl:when>
			<xsl:otherwise># TCG_TIS_ST33ZP24_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TELCLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TELCLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">TELCLOCK=m</xsl:when>
			<xsl:otherwise># TELCLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVPORT=y</xsl:when>
			<xsl:otherwise># DEVPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3270">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3270=y</xsl:when>
			<xsl:when test=". = 'module'">TN3270=m</xsl:when>
			<xsl:otherwise># TN3270 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3270_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3270_TTY=y</xsl:when>
			<xsl:when test=". = 'module'">TN3270_TTY=m</xsl:when>
			<xsl:otherwise># TN3270_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3270_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3270_FS=y</xsl:when>
			<xsl:when test=". = 'module'">TN3270_FS=m</xsl:when>
			<xsl:otherwise># TN3270_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3270_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3270_CONSOLE=y</xsl:when>
			<xsl:otherwise># TN3270_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3215">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3215=y</xsl:when>
			<xsl:otherwise># TN3215 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TN3215_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TN3215_CONSOLE=y</xsl:when>
			<xsl:otherwise># TN3215_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CCW_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CCW_CONSOLE=y</xsl:when>
			<xsl:otherwise># CCW_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_TTY=y</xsl:when>
			<xsl:otherwise># SCLP_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_CONSOLE=y</xsl:when>
			<xsl:otherwise># SCLP_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_VT220_TTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_VT220_TTY=y</xsl:when>
			<xsl:otherwise># SCLP_VT220_TTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_VT220_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_VT220_CONSOLE=y</xsl:when>
			<xsl:otherwise># SCLP_VT220_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_ASYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_ASYNC=y</xsl:when>
			<xsl:when test=". = 'module'">SCLP_ASYNC=m</xsl:when>
			<xsl:otherwise># SCLP_ASYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_ASYNC_ID">
		SCLP_ASYNC_ID=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HMC_DRV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HMC_DRV=y</xsl:when>
			<xsl:when test=". = 'module'">HMC_DRV=m</xsl:when>
			<xsl:otherwise># HMC_DRV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCLP_OFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCLP_OFB=y</xsl:when>
			<xsl:otherwise># SCLP_OFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_TAPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_TAPE=y</xsl:when>
			<xsl:when test=". = 'module'">S390_TAPE=m</xsl:when>
			<xsl:otherwise># S390_TAPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_TAPE_34XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_TAPE_34XX=y</xsl:when>
			<xsl:when test=". = 'module'">S390_TAPE_34XX=m</xsl:when>
			<xsl:otherwise># S390_TAPE_34XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_TAPE_3590">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_TAPE_3590=y</xsl:when>
			<xsl:when test=". = 'module'">S390_TAPE_3590=m</xsl:when>
			<xsl:otherwise># S390_TAPE_3590 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMLOGRDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMLOGRDR=y</xsl:when>
			<xsl:when test=". = 'module'">VMLOGRDR=m</xsl:when>
			<xsl:otherwise># VMLOGRDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMCP=y</xsl:when>
			<xsl:otherwise># VMCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MONREADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MONREADER=y</xsl:when>
			<xsl:when test=". = 'module'">MONREADER=m</xsl:when>
			<xsl:otherwise># MONREADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MONWRITER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MONWRITER=y</xsl:when>
			<xsl:when test=". = 'module'">MONWRITER=m</xsl:when>
			<xsl:otherwise># MONWRITER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_VMUR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_VMUR=y</xsl:when>
			<xsl:when test=". = 'module'">S390_VMUR=m</xsl:when>
			<xsl:otherwise># S390_VMUR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TILE_SROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TILE_SROM=y</xsl:when>
			<xsl:otherwise># TILE_SROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILLYBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILLYBUS=y</xsl:when>
			<xsl:when test=". = 'module'">XILLYBUS=m</xsl:when>
			<xsl:otherwise># XILLYBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILLYBUS_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILLYBUS_PCIE=y</xsl:when>
			<xsl:when test=". = 'module'">XILLYBUS_PCIE=m</xsl:when>
			<xsl:otherwise># XILLYBUS_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILLYBUS_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILLYBUS_OF=y</xsl:when>
			<xsl:when test=". = 'module'">XILLYBUS_OF=m</xsl:when>
			<xsl:otherwise># XILLYBUS_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C=y</xsl:when>
			<xsl:when test=". = 'module'">I2C=m</xsl:when>
			<xsl:otherwise># I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_I2C_OPREGION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_I2C_OPREGION=y</xsl:when>
			<xsl:otherwise># ACPI_I2C_OPREGION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BOARDINFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BOARDINFO=y</xsl:when>
			<xsl:otherwise># I2C_BOARDINFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_COMPAT=y</xsl:when>
			<xsl:otherwise># I2C_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_CHARDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_CHARDEV=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_CHARDEV=m</xsl:when>
			<xsl:otherwise># I2C_CHARDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX=m</xsl:when>
			<xsl:otherwise># I2C_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ARB_GPIO_CHALLENGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ARB_GPIO_CHALLENGE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ARB_GPIO_CHALLENGE=m</xsl:when>
			<xsl:otherwise># I2C_ARB_GPIO_CHALLENGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX_GPIO=m</xsl:when>
			<xsl:otherwise># I2C_MUX_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX_PCA9541">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX_PCA9541=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX_PCA9541=m</xsl:when>
			<xsl:otherwise># I2C_MUX_PCA9541 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX_PCA954x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX_PCA954x=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX_PCA954x=m</xsl:when>
			<xsl:otherwise># I2C_MUX_PCA954x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX_PINCTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX_PINCTRL=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX_PINCTRL=m</xsl:when>
			<xsl:otherwise># I2C_MUX_PINCTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MUX_REG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MUX_REG=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MUX_REG=m</xsl:when>
			<xsl:otherwise># I2C_MUX_REG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DEMUX_PINCTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DEMUX_PINCTRL=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DEMUX_PINCTRL=m</xsl:when>
			<xsl:otherwise># I2C_DEMUX_PINCTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_HELPER_AUTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_HELPER_AUTO=y</xsl:when>
			<xsl:otherwise># I2C_HELPER_AUTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SMBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SMBUS=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SMBUS=m</xsl:when>
			<xsl:otherwise># I2C_SMBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ALI1535">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ALI1535=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ALI1535=m</xsl:when>
			<xsl:otherwise># I2C_ALI1535 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ALI1563">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ALI1563=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ALI1563=m</xsl:when>
			<xsl:otherwise># I2C_ALI1563 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ALI15X3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ALI15X3=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ALI15X3=m</xsl:when>
			<xsl:otherwise># I2C_ALI15X3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AMD756">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AMD756=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AMD756=m</xsl:when>
			<xsl:otherwise># I2C_AMD756 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AMD756_S4882">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AMD756_S4882=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AMD756_S4882=m</xsl:when>
			<xsl:otherwise># I2C_AMD756_S4882 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AMD8111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AMD8111=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AMD8111=m</xsl:when>
			<xsl:otherwise># I2C_AMD8111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_HIX5HD2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_HIX5HD2=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_HIX5HD2=m</xsl:when>
			<xsl:otherwise># I2C_HIX5HD2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_I801">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_I801=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_I801=m</xsl:when>
			<xsl:otherwise># I2C_I801 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ISCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ISCH=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ISCH=m</xsl:when>
			<xsl:otherwise># I2C_ISCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ISMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ISMT=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ISMT=m</xsl:when>
			<xsl:otherwise># I2C_ISMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PIIX4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PIIX4=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PIIX4=m</xsl:when>
			<xsl:otherwise># I2C_PIIX4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_NFORCE2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_NFORCE2=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_NFORCE2=m</xsl:when>
			<xsl:otherwise># I2C_NFORCE2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_NFORCE2_S4985">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_NFORCE2_S4985=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_NFORCE2_S4985=m</xsl:when>
			<xsl:otherwise># I2C_NFORCE2_S4985 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIS5595">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIS5595=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIS5595=m</xsl:when>
			<xsl:otherwise># I2C_SIS5595 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIS630">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIS630=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIS630=m</xsl:when>
			<xsl:otherwise># I2C_SIS630 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIS96X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIS96X=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIS96X=m</xsl:when>
			<xsl:otherwise># I2C_SIS96X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_VIA=m</xsl:when>
			<xsl:otherwise># I2C_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_VIAPRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_VIAPRO=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_VIAPRO=m</xsl:when>
			<xsl:otherwise># I2C_VIAPRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SCMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SCMI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SCMI=m</xsl:when>
			<xsl:otherwise># I2C_SCMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_HYDRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_HYDRA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_HYDRA=m</xsl:when>
			<xsl:otherwise># I2C_HYDRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_POWERMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_POWERMAC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_POWERMAC=m</xsl:when>
			<xsl:otherwise># I2C_POWERMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AT91=m</xsl:when>
			<xsl:otherwise># I2C_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AU1550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AU1550=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AU1550=m</xsl:when>
			<xsl:otherwise># I2C_AU1550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_AXXIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_AXXIA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_AXXIA=m</xsl:when>
			<xsl:otherwise># I2C_AXXIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BCM2835=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BCM2835=m</xsl:when>
			<xsl:otherwise># I2C_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BCM_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BCM_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BCM_IPROC=m</xsl:when>
			<xsl:otherwise># I2C_BCM_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BCM_KONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BCM_KONA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BCM_KONA=m</xsl:when>
			<xsl:otherwise># I2C_BCM_KONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BRCMSTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BRCMSTB=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BRCMSTB=m</xsl:when>
			<xsl:otherwise># I2C_BRCMSTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BLACKFIN_TWI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BLACKFIN_TWI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BLACKFIN_TWI=m</xsl:when>
			<xsl:otherwise># I2C_BLACKFIN_TWI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BLACKFIN_TWI_CLK_KHZ">
		I2C_BLACKFIN_TWI_CLK_KHZ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="I2C_CADENCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_CADENCE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_CADENCE=m</xsl:when>
			<xsl:otherwise># I2C_CADENCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_CBUS_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_CBUS_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_CBUS_GPIO=m</xsl:when>
			<xsl:otherwise># I2C_CBUS_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_CPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_CPM=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_CPM=m</xsl:when>
			<xsl:otherwise># I2C_CPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DAVINCI=m</xsl:when>
			<xsl:otherwise># I2C_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DESIGNWARE_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DESIGNWARE_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DESIGNWARE_CORE=m</xsl:when>
			<xsl:otherwise># I2C_DESIGNWARE_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DESIGNWARE_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DESIGNWARE_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DESIGNWARE_PLATFORM=m</xsl:when>
			<xsl:otherwise># I2C_DESIGNWARE_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DESIGNWARE_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DESIGNWARE_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DESIGNWARE_PCI=m</xsl:when>
			<xsl:otherwise># I2C_DESIGNWARE_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DESIGNWARE_BAYTRAIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DESIGNWARE_BAYTRAIL=y</xsl:when>
			<xsl:otherwise># I2C_DESIGNWARE_BAYTRAIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DIGICOLOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DIGICOLOR=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DIGICOLOR=m</xsl:when>
			<xsl:otherwise># I2C_DIGICOLOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_EFM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_EFM32=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_EFM32=m</xsl:when>
			<xsl:otherwise># I2C_EFM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_EG20T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_EG20T=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_EG20T=m</xsl:when>
			<xsl:otherwise># I2C_EG20T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_EMEV2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_EMEV2=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_EMEV2=m</xsl:when>
			<xsl:otherwise># I2C_EMEV2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_EXYNOS5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_EXYNOS5=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_EXYNOS5=m</xsl:when>
			<xsl:otherwise># I2C_EXYNOS5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_GPIO=m</xsl:when>
			<xsl:otherwise># I2C_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_HIGHLANDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_HIGHLANDER=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_HIGHLANDER=m</xsl:when>
			<xsl:otherwise># I2C_HIGHLANDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_IBM_IIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_IBM_IIC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_IBM_IIC=m</xsl:when>
			<xsl:otherwise># I2C_IBM_IIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_IMG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_IMG=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_IMG=m</xsl:when>
			<xsl:otherwise># I2C_IMG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_IMX=m</xsl:when>
			<xsl:otherwise># I2C_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_IOP3XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_IOP3XX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_IOP3XX=m</xsl:when>
			<xsl:otherwise># I2C_IOP3XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_JZ4780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_JZ4780=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_JZ4780=m</xsl:when>
			<xsl:otherwise># I2C_JZ4780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_KEMPLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_KEMPLD=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_KEMPLD=m</xsl:when>
			<xsl:otherwise># I2C_KEMPLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_LPC2K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_LPC2K=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_LPC2K=m</xsl:when>
			<xsl:otherwise># I2C_LPC2K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MESON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MESON=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MESON=m</xsl:when>
			<xsl:otherwise># I2C_MESON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MPC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MPC=m</xsl:when>
			<xsl:otherwise># I2C_MPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MT65XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MT65XX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MT65XX=m</xsl:when>
			<xsl:otherwise># I2C_MT65XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MV64XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MV64XXX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MV64XXX=m</xsl:when>
			<xsl:otherwise># I2C_MV64XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_MXS=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_MXS=m</xsl:when>
			<xsl:otherwise># I2C_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_NOMADIK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_NOMADIK=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_NOMADIK=m</xsl:when>
			<xsl:otherwise># I2C_NOMADIK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_OCORES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_OCORES=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_OCORES=m</xsl:when>
			<xsl:otherwise># I2C_OCORES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_OMAP=m</xsl:when>
			<xsl:otherwise># I2C_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PASEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PASEMI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PASEMI=m</xsl:when>
			<xsl:otherwise># I2C_PASEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PCA_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PCA_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PCA_PLATFORM=m</xsl:when>
			<xsl:otherwise># I2C_PCA_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PMCMSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PMCMSP=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PMCMSP=m</xsl:when>
			<xsl:otherwise># I2C_PMCMSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PNX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PNX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PNX=m</xsl:when>
			<xsl:otherwise># I2C_PNX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PUV3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PUV3=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PUV3=m</xsl:when>
			<xsl:otherwise># I2C_PUV3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PXA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PXA=m</xsl:when>
			<xsl:otherwise># I2C_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PXA_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PXA_PCI=y</xsl:when>
			<xsl:otherwise># I2C_PXA_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PXA_SLAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PXA_SLAVE=y</xsl:when>
			<xsl:otherwise># I2C_PXA_SLAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_QUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_QUP=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_QUP=m</xsl:when>
			<xsl:otherwise># I2C_QUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_RIIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_RIIC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_RIIC=m</xsl:when>
			<xsl:otherwise># I2C_RIIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_RK3X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_RK3X=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_RK3X=m</xsl:when>
			<xsl:otherwise># I2C_RK3X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_S3C2410_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_S3C2410_I2C=y</xsl:when>
			<xsl:otherwise># HAVE_S3C2410_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_S3C2410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_S3C2410=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_S3C2410=m</xsl:when>
			<xsl:otherwise># I2C_S3C2410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SH7760">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SH7760=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SH7760=m</xsl:when>
			<xsl:otherwise># I2C_SH7760 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SH_MOBILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SH_MOBILE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SH_MOBILE=m</xsl:when>
			<xsl:otherwise># I2C_SH_MOBILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIMTEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIMTEC=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIMTEC=m</xsl:when>
			<xsl:otherwise># I2C_SIMTEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIRF=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIRF=m</xsl:when>
			<xsl:otherwise># I2C_SIRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ST=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ST=m</xsl:when>
			<xsl:otherwise># I2C_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_STU300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_STU300=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_STU300=m</xsl:when>
			<xsl:otherwise># I2C_STU300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SUN6I_P2WI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SUN6I_P2WI=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SUN6I_P2WI=m</xsl:when>
			<xsl:otherwise># I2C_SUN6I_P2WI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_TEGRA=m</xsl:when>
			<xsl:otherwise># I2C_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_UNIPHIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_UNIPHIER=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_UNIPHIER=m</xsl:when>
			<xsl:otherwise># I2C_UNIPHIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_UNIPHIER_F">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_UNIPHIER_F=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_UNIPHIER_F=m</xsl:when>
			<xsl:otherwise># I2C_UNIPHIER_F is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_VERSATILE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_VERSATILE=m</xsl:when>
			<xsl:otherwise># I2C_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_WMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_WMT=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_WMT=m</xsl:when>
			<xsl:otherwise># I2C_WMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_OCTEON=m</xsl:when>
			<xsl:otherwise># I2C_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_XILINX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_XILINX=m</xsl:when>
			<xsl:otherwise># I2C_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_XLR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_XLR=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_XLR=m</xsl:when>
			<xsl:otherwise># I2C_XLR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_XLP9XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_XLP9XX=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_XLP9XX=m</xsl:when>
			<xsl:otherwise># I2C_XLP9XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_RCAR=m</xsl:when>
			<xsl:otherwise># I2C_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DIOLAN_U2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DIOLAN_U2C=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DIOLAN_U2C=m</xsl:when>
			<xsl:otherwise># I2C_DIOLAN_U2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DLN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DLN2=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_DLN2=m</xsl:when>
			<xsl:otherwise># I2C_DLN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PARPORT=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PARPORT=m</xsl:when>
			<xsl:otherwise># I2C_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PARPORT_LIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PARPORT_LIGHT=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PARPORT_LIGHT=m</xsl:when>
			<xsl:otherwise># I2C_PARPORT_LIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ROBOTFUZZ_OSIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ROBOTFUZZ_OSIF=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ROBOTFUZZ_OSIF=m</xsl:when>
			<xsl:otherwise># I2C_ROBOTFUZZ_OSIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_TAOS_EVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_TAOS_EVM=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_TAOS_EVM=m</xsl:when>
			<xsl:otherwise># I2C_TAOS_EVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_TINY_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_TINY_USB=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_TINY_USB=m</xsl:when>
			<xsl:otherwise># I2C_TINY_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_VIPERBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_VIPERBOARD=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_VIPERBOARD=m</xsl:when>
			<xsl:otherwise># I2C_VIPERBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ACORN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ACORN=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ACORN=m</xsl:when>
			<xsl:otherwise># I2C_ACORN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_ELEKTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_ELEKTOR=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_ELEKTOR=m</xsl:when>
			<xsl:otherwise># I2C_ELEKTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_PCA_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_PCA_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_PCA_ISA=m</xsl:when>
			<xsl:otherwise># I2C_PCA_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SIBYTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SIBYTE=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SIBYTE=m</xsl:when>
			<xsl:otherwise># I2C_SIBYTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_CROS_EC_TUNNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_CROS_EC_TUNNEL=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_CROS_EC_TUNNEL=m</xsl:when>
			<xsl:otherwise># I2C_CROS_EC_TUNNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_XGENE_SLIMPRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_XGENE_SLIMPRO=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_XGENE_SLIMPRO=m</xsl:when>
			<xsl:otherwise># I2C_XGENE_SLIMPRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCx200_ACB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCx200_ACB=y</xsl:when>
			<xsl:when test=". = 'module'">SCx200_ACB=m</xsl:when>
			<xsl:otherwise># SCx200_ACB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_OPAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_OPAL=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_OPAL=m</xsl:when>
			<xsl:otherwise># I2C_OPAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_STUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_STUB=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_STUB=m</xsl:when>
			<xsl:otherwise># I2C_STUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SLAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SLAVE=y</xsl:when>
			<xsl:otherwise># I2C_SLAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SLAVE_EEPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SLAVE_EEPROM=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SLAVE_EEPROM=m</xsl:when>
			<xsl:otherwise># I2C_SLAVE_EEPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DEBUG_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DEBUG_CORE=y</xsl:when>
			<xsl:otherwise># I2C_DEBUG_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DEBUG_ALGO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DEBUG_ALGO=y</xsl:when>
			<xsl:otherwise># I2C_DEBUG_ALGO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_DEBUG_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_DEBUG_BUS=y</xsl:when>
			<xsl:otherwise># I2C_DEBUG_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI=y</xsl:when>
			<xsl:otherwise># SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DEBUG=y</xsl:when>
			<xsl:otherwise># SPI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MASTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MASTER=y</xsl:when>
			<xsl:otherwise># SPI_MASTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ALTERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ALTERA=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ALTERA=m</xsl:when>
			<xsl:otherwise># SPI_ALTERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ATH79">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ATH79=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ATH79=m</xsl:when>
			<xsl:otherwise># SPI_ATH79 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ATMEL=m</xsl:when>
			<xsl:otherwise># SPI_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_AU1550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_AU1550=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_AU1550=m</xsl:when>
			<xsl:otherwise># SPI_AU1550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_AXI_SPI_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_AXI_SPI_ENGINE=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_AXI_SPI_ENGINE=m</xsl:when>
			<xsl:otherwise># SPI_AXI_SPI_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BCM2835=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BCM2835=m</xsl:when>
			<xsl:otherwise># SPI_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BCM2835AUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BCM2835AUX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BCM2835AUX=m</xsl:when>
			<xsl:otherwise># SPI_BCM2835AUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BFIN5XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BFIN5XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BFIN5XX=m</xsl:when>
			<xsl:otherwise># SPI_BFIN5XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ADI_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ADI_V3=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ADI_V3=m</xsl:when>
			<xsl:otherwise># SPI_ADI_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BFIN_SPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BFIN_SPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BFIN_SPORT=m</xsl:when>
			<xsl:otherwise># SPI_BFIN_SPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BCM53XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BCM53XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BCM53XX=m</xsl:when>
			<xsl:otherwise># SPI_BCM53XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BCM63XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BCM63XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BCM63XX=m</xsl:when>
			<xsl:otherwise># SPI_BCM63XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BCM63XX_HSSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BCM63XX_HSSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BCM63XX_HSSPI=m</xsl:when>
			<xsl:otherwise># SPI_BCM63XX_HSSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BITBANG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BITBANG=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BITBANG=m</xsl:when>
			<xsl:otherwise># SPI_BITBANG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_BUTTERFLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_BUTTERFLY=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_BUTTERFLY=m</xsl:when>
			<xsl:otherwise># SPI_BUTTERFLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_CADENCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_CADENCE=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_CADENCE=m</xsl:when>
			<xsl:otherwise># SPI_CADENCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_CLPS711X=m</xsl:when>
			<xsl:otherwise># SPI_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_COLDFIRE_QSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_COLDFIRE_QSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_COLDFIRE_QSPI=m</xsl:when>
			<xsl:otherwise># SPI_COLDFIRE_QSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_DAVINCI=m</xsl:when>
			<xsl:otherwise># SPI_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DESIGNWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DESIGNWARE=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_DESIGNWARE=m</xsl:when>
			<xsl:otherwise># SPI_DESIGNWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DW_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DW_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_DW_PCI=m</xsl:when>
			<xsl:otherwise># SPI_DW_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DW_MID_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DW_MID_DMA=y</xsl:when>
			<xsl:otherwise># SPI_DW_MID_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DW_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DW_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_DW_MMIO=m</xsl:when>
			<xsl:otherwise># SPI_DW_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_DLN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_DLN2=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_DLN2=m</xsl:when>
			<xsl:otherwise># SPI_DLN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_EFM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_EFM32=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_EFM32=m</xsl:when>
			<xsl:otherwise># SPI_EFM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_EP93XX=m</xsl:when>
			<xsl:otherwise># SPI_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FALCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FALCON=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FALCON=m</xsl:when>
			<xsl:otherwise># SPI_FALCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_GPIO=m</xsl:when>
			<xsl:otherwise># SPI_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_IMG_SPFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_IMG_SPFI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_IMG_SPFI=m</xsl:when>
			<xsl:otherwise># SPI_IMG_SPFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_IMX=m</xsl:when>
			<xsl:otherwise># SPI_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_LM70_LLP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_LM70_LLP=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_LM70_LLP=m</xsl:when>
			<xsl:otherwise># SPI_LM70_LLP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_LP8841_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_LP8841_RTC=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_LP8841_RTC=m</xsl:when>
			<xsl:otherwise># SPI_LP8841_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MPC52xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MPC52xx=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MPC52xx=m</xsl:when>
			<xsl:otherwise># SPI_MPC52xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MPC52xx_PSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MPC52xx_PSC=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MPC52xx_PSC=m</xsl:when>
			<xsl:otherwise># SPI_MPC52xx_PSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MPC512x_PSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MPC512x_PSC=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MPC512x_PSC=m</xsl:when>
			<xsl:otherwise># SPI_MPC512x_PSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_LIB=m</xsl:when>
			<xsl:otherwise># SPI_FSL_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_CPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_CPM=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_CPM=m</xsl:when>
			<xsl:otherwise># SPI_FSL_CPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_SPI=m</xsl:when>
			<xsl:otherwise># SPI_FSL_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_DSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_DSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_DSPI=m</xsl:when>
			<xsl:otherwise># SPI_FSL_DSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_FSL_ESPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_FSL_ESPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_FSL_ESPI=m</xsl:when>
			<xsl:otherwise># SPI_FSL_ESPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MESON_SPIFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MESON_SPIFC=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MESON_SPIFC=m</xsl:when>
			<xsl:otherwise># SPI_MESON_SPIFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MT65XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MT65XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MT65XX=m</xsl:when>
			<xsl:otherwise># SPI_MT65XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_NUC900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_NUC900=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_NUC900=m</xsl:when>
			<xsl:otherwise># SPI_NUC900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_OC_TINY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_OC_TINY=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_OC_TINY=m</xsl:when>
			<xsl:otherwise># SPI_OC_TINY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_OCTEON=m</xsl:when>
			<xsl:otherwise># SPI_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_OMAP_UWIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_OMAP_UWIRE=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_OMAP_UWIRE=m</xsl:when>
			<xsl:otherwise># SPI_OMAP_UWIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_OMAP24XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_OMAP24XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_OMAP24XX=m</xsl:when>
			<xsl:otherwise># SPI_OMAP24XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TI_QSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TI_QSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TI_QSPI=m</xsl:when>
			<xsl:otherwise># SPI_TI_QSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_OMAP_100K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_OMAP_100K=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_OMAP_100K=m</xsl:when>
			<xsl:otherwise># SPI_OMAP_100K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ORION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ORION=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ORION=m</xsl:when>
			<xsl:otherwise># SPI_ORION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PIC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PIC32=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PIC32=m</xsl:when>
			<xsl:otherwise># SPI_PIC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PIC32_SQI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PIC32_SQI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PIC32_SQI=m</xsl:when>
			<xsl:otherwise># SPI_PIC32_SQI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PL022">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PL022=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PL022=m</xsl:when>
			<xsl:otherwise># SPI_PL022 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PPC4xx">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PPC4xx=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PPC4xx=m</xsl:when>
			<xsl:otherwise># SPI_PPC4xx is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PXA2XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PXA2XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PXA2XX=m</xsl:when>
			<xsl:otherwise># SPI_PXA2XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_PXA2XX_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_PXA2XX_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_PXA2XX_PCI=m</xsl:when>
			<xsl:otherwise># SPI_PXA2XX_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># SPI_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_RB4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_RB4XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_RB4XX=m</xsl:when>
			<xsl:otherwise># SPI_RB4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_RSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_RSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_RSPI=m</xsl:when>
			<xsl:otherwise># SPI_RSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_QUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_QUP=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_QUP=m</xsl:when>
			<xsl:otherwise># SPI_QUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_S3C24XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_S3C24XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_S3C24XX=m</xsl:when>
			<xsl:otherwise># SPI_S3C24XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_S3C24XX_FIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_S3C24XX_FIQ=y</xsl:when>
			<xsl:otherwise># SPI_S3C24XX_FIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_S3C64XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_S3C64XX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_S3C64XX=m</xsl:when>
			<xsl:otherwise># SPI_S3C64XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SC18IS602">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SC18IS602=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SC18IS602=m</xsl:when>
			<xsl:otherwise># SPI_SC18IS602 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SH_MSIOF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SH_MSIOF=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SH_MSIOF=m</xsl:when>
			<xsl:otherwise># SPI_SH_MSIOF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SH=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SH=m</xsl:when>
			<xsl:otherwise># SPI_SH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SH_SCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SH_SCI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SH_SCI=m</xsl:when>
			<xsl:otherwise># SPI_SH_SCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SH_HSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SH_HSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SH_HSPI=m</xsl:when>
			<xsl:otherwise># SPI_SH_HSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SIRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SIRF=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SIRF=m</xsl:when>
			<xsl:otherwise># SPI_SIRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ST_SSC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ST_SSC4=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ST_SSC4=m</xsl:when>
			<xsl:otherwise># SPI_ST_SSC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SUN4I=m</xsl:when>
			<xsl:otherwise># SPI_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SUN6I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SUN6I=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SUN6I=m</xsl:when>
			<xsl:otherwise># SPI_SUN6I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_MXS=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_MXS=m</xsl:when>
			<xsl:otherwise># SPI_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TEGRA114">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TEGRA114=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TEGRA114=m</xsl:when>
			<xsl:otherwise># SPI_TEGRA114 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TEGRA20_SFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TEGRA20_SFLASH=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TEGRA20_SFLASH=m</xsl:when>
			<xsl:otherwise># SPI_TEGRA20_SFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TEGRA20_SLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TEGRA20_SLINK=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TEGRA20_SLINK=m</xsl:when>
			<xsl:otherwise># SPI_TEGRA20_SLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TOPCLIFF_PCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TOPCLIFF_PCH=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TOPCLIFF_PCH=m</xsl:when>
			<xsl:otherwise># SPI_TOPCLIFF_PCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TXX9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TXX9=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TXX9=m</xsl:when>
			<xsl:otherwise># SPI_TXX9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_XCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_XCOMM=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_XCOMM=m</xsl:when>
			<xsl:otherwise># SPI_XCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_XILINX=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_XILINX=m</xsl:when>
			<xsl:otherwise># SPI_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_XLP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_XLP=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_XLP=m</xsl:when>
			<xsl:otherwise># SPI_XLP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_XTENSA_XTFPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_XTENSA_XTFPGA=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_XTENSA_XTFPGA=m</xsl:when>
			<xsl:otherwise># SPI_XTENSA_XTFPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_ZYNQMP_GQSPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_ZYNQMP_GQSPI=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_ZYNQMP_GQSPI=m</xsl:when>
			<xsl:otherwise># SPI_ZYNQMP_GQSPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_SPIDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_SPIDEV=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_SPIDEV=m</xsl:when>
			<xsl:otherwise># SPI_SPIDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_LOOPBACK_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_LOOPBACK_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_LOOPBACK_TEST=m</xsl:when>
			<xsl:otherwise># SPI_LOOPBACK_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPI_TLE62X0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPI_TLE62X0=y</xsl:when>
			<xsl:when test=". = 'module'">SPI_TLE62X0=m</xsl:when>
			<xsl:otherwise># SPI_TLE62X0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPMI=y</xsl:when>
			<xsl:when test=". = 'module'">SPMI=m</xsl:when>
			<xsl:otherwise># SPMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPMI_MSM_PMIC_ARB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPMI_MSM_PMIC_ARB=y</xsl:when>
			<xsl:when test=". = 'module'">SPMI_MSM_PMIC_ARB=m</xsl:when>
			<xsl:otherwise># SPMI_MSM_PMIC_ARB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSI=y</xsl:when>
			<xsl:when test=". = 'module'">HSI=m</xsl:when>
			<xsl:otherwise># HSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSI_BOARDINFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSI_BOARDINFO=y</xsl:when>
			<xsl:otherwise># HSI_BOARDINFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_SSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_SSI=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_SSI=m</xsl:when>
			<xsl:otherwise># OMAP_SSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOKIA_MODEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NOKIA_MODEM=y</xsl:when>
			<xsl:when test=". = 'module'">NOKIA_MODEM=m</xsl:when>
			<xsl:otherwise># NOKIA_MODEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CMT_SPEECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CMT_SPEECH=y</xsl:when>
			<xsl:when test=". = 'module'">CMT_SPEECH=m</xsl:when>
			<xsl:otherwise># CMT_SPEECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSI_PROTOCOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSI_PROTOCOL=y</xsl:when>
			<xsl:when test=". = 'module'">SSI_PROTOCOL=m</xsl:when>
			<xsl:otherwise># SSI_PROTOCOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSI_CHAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSI_CHAR=y</xsl:when>
			<xsl:when test=". = 'module'">HSI_CHAR=m</xsl:when>
			<xsl:otherwise># HSI_CHAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS=y</xsl:when>
			<xsl:when test=". = 'module'">PPS=m</xsl:when>
			<xsl:otherwise># PPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_DEBUG=y</xsl:when>
			<xsl:otherwise># PPS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTP_PPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTP_PPS=y</xsl:when>
			<xsl:otherwise># NTP_PPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_CLIENT_KTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_CLIENT_KTIMER=y</xsl:when>
			<xsl:when test=". = 'module'">PPS_CLIENT_KTIMER=m</xsl:when>
			<xsl:otherwise># PPS_CLIENT_KTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_CLIENT_LDISC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_CLIENT_LDISC=y</xsl:when>
			<xsl:when test=". = 'module'">PPS_CLIENT_LDISC=m</xsl:when>
			<xsl:otherwise># PPS_CLIENT_LDISC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_CLIENT_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_CLIENT_PARPORT=y</xsl:when>
			<xsl:when test=". = 'module'">PPS_CLIENT_PARPORT=m</xsl:when>
			<xsl:otherwise># PPS_CLIENT_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_CLIENT_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_CLIENT_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">PPS_CLIENT_GPIO=m</xsl:when>
			<xsl:otherwise># PPS_CLIENT_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPS_GENERATOR_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPS_GENERATOR_PARPORT=y</xsl:when>
			<xsl:when test=". = 'module'">PPS_GENERATOR_PARPORT=m</xsl:when>
			<xsl:otherwise># PPS_GENERATOR_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PTP_1588_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PTP_1588_CLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">PTP_1588_CLOCK=m</xsl:when>
			<xsl:otherwise># PTP_1588_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PTP_1588_CLOCK_GIANFAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PTP_1588_CLOCK_GIANFAR=y</xsl:when>
			<xsl:when test=". = 'module'">PTP_1588_CLOCK_GIANFAR=m</xsl:when>
			<xsl:otherwise># PTP_1588_CLOCK_GIANFAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PTP_1588_CLOCK_IXP46X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PTP_1588_CLOCK_IXP46X=y</xsl:when>
			<xsl:when test=". = 'module'">PTP_1588_CLOCK_IXP46X=m</xsl:when>
			<xsl:otherwise># PTP_1588_CLOCK_IXP46X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DP83640_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DP83640_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">DP83640_PHY=m</xsl:when>
			<xsl:otherwise># DP83640_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PTP_1588_CLOCK_PCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PTP_1588_CLOCK_PCH=y</xsl:when>
			<xsl:when test=". = 'module'">PTP_1588_CLOCK_PCH=m</xsl:when>
			<xsl:otherwise># PTP_1588_CLOCK_PCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL=y</xsl:when>
			<xsl:otherwise># PINCTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINMUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINMUX=y</xsl:when>
			<xsl:otherwise># PINMUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCONF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCONF=y</xsl:when>
			<xsl:otherwise># PINCONF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_PINCONF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_PINCONF=y</xsl:when>
			<xsl:otherwise># GENERIC_PINCONF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_PINCTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_PINCTRL=y</xsl:when>
			<xsl:otherwise># DEBUG_PINCTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ADI2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ADI2=y</xsl:when>
			<xsl:otherwise># PINCTRL_ADI2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AS3722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AS3722=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_AS3722=m</xsl:when>
			<xsl:otherwise># PINCTRL_AS3722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BF54x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BF54x=y</xsl:when>
			<xsl:otherwise># PINCTRL_BF54x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BF60x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BF60x=y</xsl:when>
			<xsl:otherwise># PINCTRL_BF60x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AT91=y</xsl:when>
			<xsl:otherwise># PINCTRL_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AT91PIO4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AT91PIO4=y</xsl:when>
			<xsl:otherwise># PINCTRL_AT91PIO4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_AMD=m</xsl:when>
			<xsl:otherwise># PINCTRL_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_DIGICOLOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_DIGICOLOR=y</xsl:when>
			<xsl:otherwise># PINCTRL_DIGICOLOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_LANTIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_LANTIQ=y</xsl:when>
			<xsl:otherwise># PINCTRL_LANTIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_LPC18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_LPC18XX=y</xsl:when>
			<xsl:otherwise># PINCTRL_LPC18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_FALCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_FALCON=y</xsl:when>
			<xsl:otherwise># PINCTRL_FALCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MESON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MESON=y</xsl:when>
			<xsl:otherwise># PINCTRL_MESON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_OXNAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_OXNAS=y</xsl:when>
			<xsl:otherwise># PINCTRL_OXNAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ROCKCHIP=y</xsl:when>
			<xsl:otherwise># PINCTRL_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SINGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SINGLE=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_SINGLE=m</xsl:when>
			<xsl:otherwise># PINCTRL_SINGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SIRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SIRF=y</xsl:when>
			<xsl:otherwise># PINCTRL_SIRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PISTACHIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PISTACHIO=y</xsl:when>
			<xsl:otherwise># PINCTRL_PISTACHIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ST=y</xsl:when>
			<xsl:otherwise># PINCTRL_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TZ1090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TZ1090=y</xsl:when>
			<xsl:otherwise># PINCTRL_TZ1090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TZ1090_PDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TZ1090_PDC=y</xsl:when>
			<xsl:otherwise># PINCTRL_TZ1090_PDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_U300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_U300=y</xsl:when>
			<xsl:otherwise># PINCTRL_U300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_COH901">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_COH901=y</xsl:when>
			<xsl:otherwise># PINCTRL_COH901 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MAX77620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MAX77620=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MAX77620=m</xsl:when>
			<xsl:otherwise># PINCTRL_MAX77620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PALMAS=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_PALMAS=m</xsl:when>
			<xsl:otherwise># PINCTRL_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PIC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PIC32=y</xsl:when>
			<xsl:otherwise># PINCTRL_PIC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PIC32MZDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PIC32MZDA=y</xsl:when>
			<xsl:otherwise># PINCTRL_PIC32MZDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ZYNQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ZYNQ=y</xsl:when>
			<xsl:otherwise># PINCTRL_ZYNQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BCM281XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BCM281XX=y</xsl:when>
			<xsl:otherwise># PINCTRL_BCM281XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BCM2835=y</xsl:when>
			<xsl:otherwise># PINCTRL_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IPROC_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IPROC_GPIO=y</xsl:when>
			<xsl:otherwise># PINCTRL_IPROC_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_CYGNUS_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_CYGNUS_MUX=y</xsl:when>
			<xsl:otherwise># PINCTRL_CYGNUS_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_NSP_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_NSP_GPIO=y</xsl:when>
			<xsl:otherwise># PINCTRL_NSP_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_NS2_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_NS2_MUX=y</xsl:when>
			<xsl:otherwise># PINCTRL_NS2_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_NSP_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_NSP_MUX=y</xsl:when>
			<xsl:otherwise># PINCTRL_NSP_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BERLIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BERLIN=y</xsl:when>
			<xsl:otherwise># PINCTRL_BERLIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BERLIN_BG2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BERLIN_BG2=y</xsl:when>
			<xsl:otherwise># PINCTRL_BERLIN_BG2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BERLIN_BG2CD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BERLIN_BG2CD=y</xsl:when>
			<xsl:otherwise># PINCTRL_BERLIN_BG2CD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BERLIN_BG2Q">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BERLIN_BG2Q=y</xsl:when>
			<xsl:otherwise># PINCTRL_BERLIN_BG2Q is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BERLIN_BG4CT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BERLIN_BG4CT=y</xsl:when>
			<xsl:otherwise># PINCTRL_BERLIN_BG4CT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX1_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX1_CORE=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX1_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX1=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX21">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX21=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX21 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX27">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX27=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX27 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX25">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX25=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX25 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX35">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX35=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX35 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX50">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX50=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX50 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX51">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX51=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX51 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX53">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX53=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX53 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX6Q">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX6Q=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX6Q is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX6SL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX6SL=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX6SL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX6SX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX6SX=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX6SX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX6UL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX6UL=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX6UL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX7D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX7D=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX7D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_VF610">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_VF610=y</xsl:when>
			<xsl:otherwise># PINCTRL_VF610 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MXS=y</xsl:when>
			<xsl:otherwise># PINCTRL_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX23">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX23=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX23 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IMX28">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IMX28=y</xsl:when>
			<xsl:otherwise># PINCTRL_IMX28 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BAYTRAIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BAYTRAIL=y</xsl:when>
			<xsl:otherwise># PINCTRL_BAYTRAIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_CHERRYVIEW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_CHERRYVIEW=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_CHERRYVIEW=m</xsl:when>
			<xsl:otherwise># PINCTRL_CHERRYVIEW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MERRIFIELD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MERRIFIELD=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MERRIFIELD=m</xsl:when>
			<xsl:otherwise># PINCTRL_MERRIFIELD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_INTEL=m</xsl:when>
			<xsl:otherwise># PINCTRL_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_BROXTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_BROXTON=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_BROXTON=m</xsl:when>
			<xsl:otherwise># PINCTRL_BROXTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUNRISEPOINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUNRISEPOINT=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_SUNRISEPOINT=m</xsl:when>
			<xsl:otherwise># PINCTRL_SUNRISEPOINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MVEBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MVEBU=y</xsl:when>
			<xsl:otherwise># PINCTRL_MVEBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_DOVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_DOVE=y</xsl:when>
			<xsl:otherwise># PINCTRL_DOVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_KIRKWOOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_KIRKWOOD=y</xsl:when>
			<xsl:otherwise># PINCTRL_KIRKWOOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ARMADA_370">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ARMADA_370=y</xsl:when>
			<xsl:otherwise># PINCTRL_ARMADA_370 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ARMADA_375">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ARMADA_375=y</xsl:when>
			<xsl:otherwise># PINCTRL_ARMADA_375 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ARMADA_38X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ARMADA_38X=y</xsl:when>
			<xsl:otherwise># PINCTRL_ARMADA_38X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ARMADA_39X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ARMADA_39X=y</xsl:when>
			<xsl:otherwise># PINCTRL_ARMADA_39X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ARMADA_XP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ARMADA_XP=y</xsl:when>
			<xsl:otherwise># PINCTRL_ARMADA_XP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ORION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ORION=y</xsl:when>
			<xsl:otherwise># PINCTRL_ORION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_ABX500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_ABX500=y</xsl:when>
			<xsl:otherwise># PINCTRL_ABX500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AB8500=y</xsl:when>
			<xsl:otherwise># PINCTRL_AB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AB8540">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AB8540=y</xsl:when>
			<xsl:otherwise># PINCTRL_AB8540 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AB9540">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AB9540=y</xsl:when>
			<xsl:otherwise># PINCTRL_AB9540 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_AB8505">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_AB8505=y</xsl:when>
			<xsl:otherwise># PINCTRL_AB8505 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_NOMADIK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_NOMADIK=y</xsl:when>
			<xsl:otherwise># PINCTRL_NOMADIK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_STN8815">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_STN8815=y</xsl:when>
			<xsl:otherwise># PINCTRL_STN8815 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_DB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_DB8500=y</xsl:when>
			<xsl:otherwise># PINCTRL_DB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_DB8540">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_DB8540=y</xsl:when>
			<xsl:otherwise># PINCTRL_DB8540 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PXA=y</xsl:when>
			<xsl:otherwise># PINCTRL_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PXA25X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PXA25X=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_PXA25X=m</xsl:when>
			<xsl:otherwise># PINCTRL_PXA25X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PXA27X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PXA27X=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_PXA27X=m</xsl:when>
			<xsl:otherwise># PINCTRL_PXA27X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM=y</xsl:when>
			<xsl:otherwise># PINCTRL_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_APQ8064">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_APQ8064=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_APQ8064=m</xsl:when>
			<xsl:otherwise># PINCTRL_APQ8064 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_APQ8084">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_APQ8084=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_APQ8084=m</xsl:when>
			<xsl:otherwise># PINCTRL_APQ8084 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IPQ4019">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IPQ4019=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_IPQ4019=m</xsl:when>
			<xsl:otherwise># PINCTRL_IPQ4019 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_IPQ8064">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_IPQ8064=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_IPQ8064=m</xsl:when>
			<xsl:otherwise># PINCTRL_IPQ8064 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM8660">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM8660=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MSM8660=m</xsl:when>
			<xsl:otherwise># PINCTRL_MSM8660 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM8960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM8960=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MSM8960=m</xsl:when>
			<xsl:otherwise># PINCTRL_MSM8960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MDM9615">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MDM9615=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MDM9615=m</xsl:when>
			<xsl:otherwise># PINCTRL_MDM9615 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM8X74">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM8X74=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MSM8X74=m</xsl:when>
			<xsl:otherwise># PINCTRL_MSM8X74 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM8916">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM8916=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MSM8916=m</xsl:when>
			<xsl:otherwise># PINCTRL_MSM8916 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MSM8996">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MSM8996=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_MSM8996=m</xsl:when>
			<xsl:otherwise># PINCTRL_MSM8996 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_QDF2XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_QDF2XXX=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_QDF2XXX=m</xsl:when>
			<xsl:otherwise># PINCTRL_QDF2XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_QCOM_SPMI_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_QCOM_SPMI_PMIC=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_QCOM_SPMI_PMIC=m</xsl:when>
			<xsl:otherwise># PINCTRL_QCOM_SPMI_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_QCOM_SSBI_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_QCOM_SSBI_PMIC=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_QCOM_SSBI_PMIC=m</xsl:when>
			<xsl:otherwise># PINCTRL_QCOM_SSBI_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SAMSUNG=y</xsl:when>
			<xsl:otherwise># PINCTRL_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_EXYNOS=y</xsl:when>
			<xsl:otherwise># PINCTRL_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_EXYNOS5440">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_EXYNOS5440=y</xsl:when>
			<xsl:otherwise># PINCTRL_EXYNOS5440 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_S3C24XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_S3C24XX=y</xsl:when>
			<xsl:otherwise># PINCTRL_S3C24XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_S3C64XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_S3C64XX=y</xsl:when>
			<xsl:otherwise># PINCTRL_S3C64XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SH_PFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SH_PFC=y</xsl:when>
			<xsl:otherwise># PINCTRL_SH_PFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SH_PFC_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SH_PFC_GPIO=y</xsl:when>
			<xsl:otherwise># PINCTRL_SH_PFC_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_EMEV2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_EMEV2=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_EMEV2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A73A4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A73A4=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A73A4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7740=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7778">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7778=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7778 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7779">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7779=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7779 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7790">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7790=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7790 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7791">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7791=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7791 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7793">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7793=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7793 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7794">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7794=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7794 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_R8A7795">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_R8A7795=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_R8A7795 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7203">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7203=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7203 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7264">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7264=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7264 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7269">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7269=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7269 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH73A0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH73A0=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH73A0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7720=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7722=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7723">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7723=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7723 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7724">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7724=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7724 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7734">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7734=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7734 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7757">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7757=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7757 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7785">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7785=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7785 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SH7786">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SH7786=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SH7786 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_PFC_SHX3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_PFC_SHX3=y</xsl:when>
			<xsl:otherwise># PINCTRL_PFC_SHX3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR3XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR3XX=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR3XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR300=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR310">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR310=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR310 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR320=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR1310">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR1310=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR1310 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR1340">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR1340=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR1340 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SPEAR_PLGPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SPEAR_PLGPIO=y</xsl:when>
			<xsl:otherwise># PINCTRL_SPEAR_PLGPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_STM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_STM32=y</xsl:when>
			<xsl:otherwise># PINCTRL_STM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_STM32F429">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_STM32F429=y</xsl:when>
			<xsl:otherwise># PINCTRL_STM32F429 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_STM32F746">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_STM32F746=y</xsl:when>
			<xsl:otherwise># PINCTRL_STM32F746 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUNXI=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN4I_A10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN4I_A10=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN4I_A10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN5I_A10S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN5I_A10S=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN5I_A10S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN5I_A13">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN5I_A13=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN5I_A13 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN6I_A31">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN6I_A31=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN6I_A31 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN6I_A31S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN6I_A31S=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN6I_A31S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN6I_A31_R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN6I_A31_R=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN6I_A31_R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN7I_A20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN7I_A20=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN7I_A20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_A23">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_A23=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_A23 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_A33">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_A33=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_A33 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_A83T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_A83T=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_A83T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_A23_R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_A23_R=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_A23_R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_H3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_H3=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_H3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN8I_H3_R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN8I_H3_R=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN8I_H3_R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN9I_A80">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN9I_A80=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN9I_A80 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN9I_A80_R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN9I_A80_R=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN9I_A80_R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_SUN50I_A64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_SUN50I_A64=y</xsl:when>
			<xsl:otherwise># PINCTRL_SUN50I_A64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA20=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA30">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA30=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA30 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA114">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA114=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA114 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA124">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA124=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA124 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA210">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA210=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA210 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TEGRA_XUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TEGRA_XUSB=y</xsl:when>
			<xsl:otherwise># PINCTRL_TEGRA_XUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER=y</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_LD4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_LD4=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_LD4=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_LD4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_PRO4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_PRO4=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_PRO4=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_PRO4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_SLD8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_SLD8=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_SLD8=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_SLD8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_PRO5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_PRO5=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_PRO5=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_PRO5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_PXS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_PXS2=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_PXS2=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_PXS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_LD6B">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_LD6B=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_LD6B=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_LD6B is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_LD11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_LD11=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_LD11=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_LD11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_UNIPHIER_LD20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_UNIPHIER_LD20=y</xsl:when>
			<xsl:when test=". = 'module'">PINCTRL_UNIPHIER_LD20=m</xsl:when>
			<xsl:otherwise># PINCTRL_UNIPHIER_LD20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_WMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_WMT=y</xsl:when>
			<xsl:otherwise># PINCTRL_WMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_VT8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_VT8500=y</xsl:when>
			<xsl:otherwise># PINCTRL_VT8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_WM8505">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_WM8505=y</xsl:when>
			<xsl:otherwise># PINCTRL_WM8505 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_WM8650">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_WM8650=y</xsl:when>
			<xsl:otherwise># PINCTRL_WM8650 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_WM8750">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_WM8750=y</xsl:when>
			<xsl:otherwise># PINCTRL_WM8750 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_WM8850">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_WM8850=y</xsl:when>
			<xsl:otherwise># PINCTRL_WM8850 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MTK=y</xsl:when>
			<xsl:otherwise># PINCTRL_MTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT2701">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT2701=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT2701 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT7623">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT7623=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT7623 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT8135">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT8135=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT8135 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT8127">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT8127=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT8127 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT8173">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT8173=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT8173 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_MT6397">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_MT6397=y</xsl:when>
			<xsl:otherwise># PINCTRL_MT6397 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_XWAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_XWAY=y</xsl:when>
			<xsl:otherwise># PINCTRL_XWAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PINCTRL_TB10X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PINCTRL_TB10X=y</xsl:when>
			<xsl:otherwise># PINCTRL_TB10X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAVE_CUSTOM_GPIO_H">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAVE_CUSTOM_GPIO_H=y</xsl:when>
			<xsl:otherwise># ARCH_HAVE_CUSTOM_GPIO_H is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_WANT_OPTIONAL_GPIOLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_WANT_OPTIONAL_GPIOLIB=y</xsl:when>
			<xsl:otherwise># ARCH_WANT_OPTIONAL_GPIOLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_REQUIRE_GPIOLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_REQUIRE_GPIOLIB=y</xsl:when>
			<xsl:otherwise># ARCH_REQUIRE_GPIOLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIOLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIOLIB=y</xsl:when>
			<xsl:otherwise># GPIOLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DEVRES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DEVRES=y</xsl:when>
			<xsl:otherwise># GPIO_DEVRES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_GPIO=y</xsl:when>
			<xsl:otherwise># OF_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ACPI=y</xsl:when>
			<xsl:otherwise># GPIO_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIOLIB_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIOLIB_IRQCHIP=y</xsl:when>
			<xsl:otherwise># GPIOLIB_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_GPIO=y</xsl:when>
			<xsl:otherwise># DEBUG_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SYSFS=y</xsl:when>
			<xsl:otherwise># GPIO_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_GENERIC=m</xsl:when>
			<xsl:otherwise># GPIO_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX730X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX730X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MAX730X=m</xsl:when>
			<xsl:otherwise># GPIO_MAX730X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_74XX_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_74XX_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_74XX_MMIO=m</xsl:when>
			<xsl:otherwise># GPIO_74XX_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ALTERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ALTERA=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ALTERA=m</xsl:when>
			<xsl:otherwise># GPIO_ALTERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_AMDPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_AMDPT=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_AMDPT=m</xsl:when>
			<xsl:otherwise># GPIO_AMDPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ATH79">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ATH79=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ATH79=m</xsl:when>
			<xsl:otherwise># GPIO_ATH79 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_BCM_KONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_BCM_KONA=y</xsl:when>
			<xsl:otherwise># GPIO_BCM_KONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_BRCMSTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_BRCMSTB=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_BRCMSTB=m</xsl:when>
			<xsl:otherwise># GPIO_BRCMSTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_CLPS711X=m</xsl:when>
			<xsl:otherwise># GPIO_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DAVINCI=y</xsl:when>
			<xsl:otherwise># GPIO_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DWAPB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DWAPB=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_DWAPB=m</xsl:when>
			<xsl:otherwise># GPIO_DWAPB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_EM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_EM=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_EM=m</xsl:when>
			<xsl:otherwise># GPIO_EM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_EP93XX=y</xsl:when>
			<xsl:otherwise># GPIO_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ETRAXFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ETRAXFS=y</xsl:when>
			<xsl:otherwise># GPIO_ETRAXFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_GE_FPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_GE_FPGA=y</xsl:when>
			<xsl:otherwise># GPIO_GE_FPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_GENERIC_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_GENERIC_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_GENERIC_PLATFORM=m</xsl:when>
			<xsl:otherwise># GPIO_GENERIC_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_GRGPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_GRGPIO=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_GRGPIO=m</xsl:when>
			<xsl:otherwise># GPIO_GRGPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ICH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ICH=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ICH=m</xsl:when>
			<xsl:otherwise># GPIO_ICH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_IOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_IOP=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_IOP=m</xsl:when>
			<xsl:otherwise># GPIO_IOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_LOONGSON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_LOONGSON=y</xsl:when>
			<xsl:otherwise># GPIO_LOONGSON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_LPC18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_LPC18XX=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_LPC18XX=m</xsl:when>
			<xsl:otherwise># GPIO_LPC18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_LYNXPOINT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_LYNXPOINT=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_LYNXPOINT=m</xsl:when>
			<xsl:otherwise># GPIO_LYNXPOINT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MB86S7X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MB86S7X=y</xsl:when>
			<xsl:otherwise># GPIO_MB86S7X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MENZ127">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MENZ127=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MENZ127=m</xsl:when>
			<xsl:otherwise># GPIO_MENZ127 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MM_LANTIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MM_LANTIQ=y</xsl:when>
			<xsl:otherwise># GPIO_MM_LANTIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MOXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MOXART=y</xsl:when>
			<xsl:otherwise># GPIO_MOXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MPC5200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MPC5200=y</xsl:when>
			<xsl:otherwise># GPIO_MPC5200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MPC8XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MPC8XXX=y</xsl:when>
			<xsl:otherwise># GPIO_MPC8XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MVEBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MVEBU=y</xsl:when>
			<xsl:otherwise># GPIO_MVEBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MXC=y</xsl:when>
			<xsl:otherwise># GPIO_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MXS=y</xsl:when>
			<xsl:otherwise># GPIO_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_OCTEON=m</xsl:when>
			<xsl:otherwise># GPIO_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_OMAP=m</xsl:when>
			<xsl:otherwise># GPIO_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PL061">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PL061=y</xsl:when>
			<xsl:otherwise># GPIO_PL061 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PXA=y</xsl:when>
			<xsl:otherwise># GPIO_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_RCAR=m</xsl:when>
			<xsl:otherwise># GPIO_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SPEAR_SPICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SPEAR_SPICS=y</xsl:when>
			<xsl:otherwise># GPIO_SPEAR_SPICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_STA2X11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_STA2X11=y</xsl:when>
			<xsl:otherwise># GPIO_STA2X11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_STP_XWAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_STP_XWAY=y</xsl:when>
			<xsl:otherwise># GPIO_STP_XWAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SYSCON=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_SYSCON=m</xsl:when>
			<xsl:otherwise># GPIO_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TB10X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TB10X=y</xsl:when>
			<xsl:otherwise># GPIO_TB10X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TEGRA=y</xsl:when>
			<xsl:otherwise># GPIO_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TS4800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TS4800=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TS4800=m</xsl:when>
			<xsl:otherwise># GPIO_TS4800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TZ1090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TZ1090=y</xsl:when>
			<xsl:otherwise># GPIO_TZ1090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TZ1090_PDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TZ1090_PDC=y</xsl:when>
			<xsl:otherwise># GPIO_TZ1090_PDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_VF610">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_VF610=y</xsl:when>
			<xsl:otherwise># GPIO_VF610 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_VR41XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_VR41XX=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_VR41XX=m</xsl:when>
			<xsl:otherwise># GPIO_VR41XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_VX855">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_VX855=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_VX855=m</xsl:when>
			<xsl:otherwise># GPIO_VX855 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_XGENE=y</xsl:when>
			<xsl:otherwise># GPIO_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_XGENE_SB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_XGENE_SB=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_XGENE_SB=m</xsl:when>
			<xsl:otherwise># GPIO_XGENE_SB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_XILINX=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_XILINX=m</xsl:when>
			<xsl:otherwise># GPIO_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_XLP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_XLP=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_XLP=m</xsl:when>
			<xsl:otherwise># GPIO_XLP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_XTENSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_XTENSA=y</xsl:when>
			<xsl:otherwise># GPIO_XTENSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ZEVIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ZEVIO=y</xsl:when>
			<xsl:otherwise># GPIO_ZEVIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ZYNQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ZYNQ=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ZYNQ=m</xsl:when>
			<xsl:otherwise># GPIO_ZYNQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ZX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ZX=y</xsl:when>
			<xsl:otherwise># GPIO_ZX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_LOONGSON1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_LOONGSON1=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_LOONGSON1=m</xsl:when>
			<xsl:otherwise># GPIO_LOONGSON1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_104_DIO_48E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_104_DIO_48E=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_104_DIO_48E=m</xsl:when>
			<xsl:otherwise># GPIO_104_DIO_48E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_104_IDIO_16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_104_IDIO_16=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_104_IDIO_16=m</xsl:when>
			<xsl:otherwise># GPIO_104_IDIO_16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_104_IDI_48">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_104_IDI_48=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_104_IDI_48=m</xsl:when>
			<xsl:otherwise># GPIO_104_IDI_48 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_F7188X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_F7188X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_F7188X=m</xsl:when>
			<xsl:otherwise># GPIO_F7188X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_IT87">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_IT87=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_IT87=m</xsl:when>
			<xsl:otherwise># GPIO_IT87 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SCH=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_SCH=m</xsl:when>
			<xsl:otherwise># GPIO_SCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SCH311X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SCH311X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_SCH311X=m</xsl:when>
			<xsl:otherwise># GPIO_SCH311X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TS5500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TS5500=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TS5500=m</xsl:when>
			<xsl:otherwise># GPIO_TS5500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WS16C48">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WS16C48=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_WS16C48=m</xsl:when>
			<xsl:otherwise># GPIO_WS16C48 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ADP5588">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ADP5588=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ADP5588=m</xsl:when>
			<xsl:otherwise># GPIO_ADP5588 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ADP5588_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ADP5588_IRQ=y</xsl:when>
			<xsl:otherwise># GPIO_ADP5588_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ADNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ADNP=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ADNP=m</xsl:when>
			<xsl:otherwise># GPIO_ADNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX7300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX7300=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MAX7300=m</xsl:when>
			<xsl:otherwise># GPIO_MAX7300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX732X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX732X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MAX732X=m</xsl:when>
			<xsl:otherwise># GPIO_MAX732X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX732X_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX732X_IRQ=y</xsl:when>
			<xsl:otherwise># GPIO_MAX732X_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MC9S08DZ60">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MC9S08DZ60=y</xsl:when>
			<xsl:otherwise># GPIO_MC9S08DZ60 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PCA953X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PCA953X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_PCA953X=m</xsl:when>
			<xsl:otherwise># GPIO_PCA953X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PCA953X_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PCA953X_IRQ=y</xsl:when>
			<xsl:otherwise># GPIO_PCA953X_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PCF857X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PCF857X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_PCF857X=m</xsl:when>
			<xsl:otherwise># GPIO_PCF857X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SX150X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SX150X=y</xsl:when>
			<xsl:otherwise># GPIO_SX150X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPIC2810">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPIC2810=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TPIC2810=m</xsl:when>
			<xsl:otherwise># GPIO_TPIC2810 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ADP5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ADP5520=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ADP5520=m</xsl:when>
			<xsl:otherwise># GPIO_ADP5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ARIZONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ARIZONA=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ARIZONA=m</xsl:when>
			<xsl:otherwise># GPIO_ARIZONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_CRYSTAL_COVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_CRYSTAL_COVE=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_CRYSTAL_COVE=m</xsl:when>
			<xsl:otherwise># GPIO_CRYSTAL_COVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_CS5535">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_CS5535=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_CS5535=m</xsl:when>
			<xsl:otherwise># GPIO_CS5535 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_DA9052=m</xsl:when>
			<xsl:otherwise># GPIO_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DA9055">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DA9055=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_DA9055=m</xsl:when>
			<xsl:otherwise># GPIO_DA9055 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_DLN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_DLN2=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_DLN2=m</xsl:when>
			<xsl:otherwise># GPIO_DLN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_JANZ_TTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_JANZ_TTL=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_JANZ_TTL=m</xsl:when>
			<xsl:otherwise># GPIO_JANZ_TTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_KEMPLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_KEMPLD=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_KEMPLD=m</xsl:when>
			<xsl:otherwise># GPIO_KEMPLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_LP3943">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_LP3943=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_LP3943=m</xsl:when>
			<xsl:otherwise># GPIO_LP3943 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX77620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX77620=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MAX77620=m</xsl:when>
			<xsl:otherwise># GPIO_MAX77620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MSIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MSIC=y</xsl:when>
			<xsl:otherwise># GPIO_MSIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PALMAS=y</xsl:when>
			<xsl:otherwise># GPIO_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_RC5T583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_RC5T583=y</xsl:when>
			<xsl:otherwise># GPIO_RC5T583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_STMPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_STMPE=y</xsl:when>
			<xsl:otherwise># GPIO_STMPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TC3589X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TC3589X=y</xsl:when>
			<xsl:otherwise># GPIO_TC3589X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TIMBERDALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TIMBERDALE=y</xsl:when>
			<xsl:otherwise># GPIO_TIMBERDALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPS65086">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPS65086=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TPS65086=m</xsl:when>
			<xsl:otherwise># GPIO_TPS65086 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPS65218">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPS65218=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TPS65218=m</xsl:when>
			<xsl:otherwise># GPIO_TPS65218 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPS6586X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPS6586X=y</xsl:when>
			<xsl:otherwise># GPIO_TPS6586X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPS65910">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPS65910=y</xsl:when>
			<xsl:otherwise># GPIO_TPS65910 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TPS65912">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TPS65912=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TPS65912=m</xsl:when>
			<xsl:otherwise># GPIO_TPS65912 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TWL4030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TWL4030=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TWL4030=m</xsl:when>
			<xsl:otherwise># GPIO_TWL4030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_TWL6040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_TWL6040=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_TWL6040=m</xsl:when>
			<xsl:otherwise># GPIO_TWL6040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_UCB1400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_UCB1400=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_UCB1400=m</xsl:when>
			<xsl:otherwise># GPIO_UCB1400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_WM831X=m</xsl:when>
			<xsl:otherwise># GPIO_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WM8350=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_WM8350=m</xsl:when>
			<xsl:otherwise># GPIO_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WM8994">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WM8994=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_WM8994=m</xsl:when>
			<xsl:otherwise># GPIO_WM8994 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_AMD8111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_AMD8111=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_AMD8111=m</xsl:when>
			<xsl:otherwise># GPIO_AMD8111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_BT8XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_BT8XX=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_BT8XX=m</xsl:when>
			<xsl:otherwise># GPIO_BT8XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_INTEL_MID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_INTEL_MID=y</xsl:when>
			<xsl:otherwise># GPIO_INTEL_MID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MERRIFIELD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MERRIFIELD=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MERRIFIELD=m</xsl:when>
			<xsl:otherwise># GPIO_MERRIFIELD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_ML_IOH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_ML_IOH=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_ML_IOH=m</xsl:when>
			<xsl:otherwise># GPIO_ML_IOH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PCH=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_PCH=m</xsl:when>
			<xsl:otherwise># GPIO_PCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_RDC321X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_RDC321X=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_RDC321X=m</xsl:when>
			<xsl:otherwise># GPIO_RDC321X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_SODAVILLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_SODAVILLE=y</xsl:when>
			<xsl:otherwise># GPIO_SODAVILLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_74X164">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_74X164=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_74X164=m</xsl:when>
			<xsl:otherwise># GPIO_74X164 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MAX7301">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MAX7301=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MAX7301=m</xsl:when>
			<xsl:otherwise># GPIO_MAX7301 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MC33880">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MC33880=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MC33880=m</xsl:when>
			<xsl:otherwise># GPIO_MC33880 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_PISOSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_PISOSR=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_PISOSR=m</xsl:when>
			<xsl:otherwise># GPIO_PISOSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_MCP23S08">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_MCP23S08=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_MCP23S08=m</xsl:when>
			<xsl:otherwise># GPIO_MCP23S08 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_VIPERBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_VIPERBOARD=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_VIPERBOARD=m</xsl:when>
			<xsl:otherwise># GPIO_VIPERBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1=y</xsl:when>
			<xsl:when test=". = 'module'">W1=m</xsl:when>
			<xsl:otherwise># W1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_CON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_CON=y</xsl:when>
			<xsl:otherwise># W1_CON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_MATROX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_MATROX=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_MATROX=m</xsl:when>
			<xsl:otherwise># W1_MASTER_MATROX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_DS2490">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_DS2490=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_DS2490=m</xsl:when>
			<xsl:otherwise># W1_MASTER_DS2490 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_DS2482">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_DS2482=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_DS2482=m</xsl:when>
			<xsl:otherwise># W1_MASTER_DS2482 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_MXC=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_MXC=m</xsl:when>
			<xsl:otherwise># W1_MASTER_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_DS1WM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_DS1WM=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_DS1WM=m</xsl:when>
			<xsl:otherwise># W1_MASTER_DS1WM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_MASTER_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_MASTER_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">W1_MASTER_GPIO=m</xsl:when>
			<xsl:otherwise># W1_MASTER_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDQ_MASTER_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDQ_MASTER_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">HDQ_MASTER_OMAP=m</xsl:when>
			<xsl:otherwise># HDQ_MASTER_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_THERM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_THERM=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_THERM=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_THERM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_SMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_SMEM=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_SMEM=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_SMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2408">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2408=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2408=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2408 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2408_READBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2408_READBACK=y</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2408_READBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2413">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2413=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2413=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2413 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2406">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2406=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2406=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2406 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2423">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2423=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2423=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2423 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2431">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2431=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2431=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2431 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2433">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2433=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2433=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2433 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2433_CRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2433_CRC=y</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2433_CRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2760">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2760=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2760=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2760 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2780=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2780=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS2781">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS2781=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS2781=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS2781 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_DS28E04">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_DS28E04=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_DS28E04=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_DS28E04 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="W1_SLAVE_BQ27000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">W1_SLAVE_BQ27000=y</xsl:when>
			<xsl:when test=". = 'module'">W1_SLAVE_BQ27000=m</xsl:when>
			<xsl:otherwise># W1_SLAVE_BQ27000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_SUPPLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_SUPPLY=y</xsl:when>
			<xsl:otherwise># POWER_SUPPLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_SUPPLY_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_SUPPLY_DEBUG=y</xsl:when>
			<xsl:otherwise># POWER_SUPPLY_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PDA_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PDA_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">PDA_POWER=m</xsl:when>
			<xsl:otherwise># PDA_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APM_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APM_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">APM_POWER=m</xsl:when>
			<xsl:otherwise># APM_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_ADC_BATTERY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_ADC_BATTERY=y</xsl:when>
			<xsl:when test=". = 'module'">GENERIC_ADC_BATTERY=m</xsl:when>
			<xsl:otherwise># GENERIC_ADC_BATTERY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX8925_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX8925_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">MAX8925_POWER=m</xsl:when>
			<xsl:otherwise># MAX8925_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WM831X_BACKUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WM831X_BACKUP=y</xsl:when>
			<xsl:when test=". = 'module'">WM831X_BACKUP=m</xsl:when>
			<xsl:otherwise># WM831X_BACKUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WM831X_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WM831X_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">WM831X_POWER=m</xsl:when>
			<xsl:otherwise># WM831X_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WM8350_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WM8350_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">WM8350_POWER=m</xsl:when>
			<xsl:otherwise># WM8350_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEST_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEST_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">TEST_POWER=m</xsl:when>
			<xsl:otherwise># TEST_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_88PM860X=m</xsl:when>
			<xsl:otherwise># BATTERY_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_ACT8945A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_ACT8945A=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_ACT8945A=m</xsl:when>
			<xsl:otherwise># BATTERY_ACT8945A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DS2760">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DS2760=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DS2760=m</xsl:when>
			<xsl:otherwise># BATTERY_DS2760 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DS2780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DS2780=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DS2780=m</xsl:when>
			<xsl:otherwise># BATTERY_DS2780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DS2781">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DS2781=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DS2781=m</xsl:when>
			<xsl:otherwise># BATTERY_DS2781 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DS2782">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DS2782=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DS2782=m</xsl:when>
			<xsl:otherwise># BATTERY_DS2782 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_PMU=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_PMU=m</xsl:when>
			<xsl:otherwise># BATTERY_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_OLPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_OLPC=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_OLPC=m</xsl:when>
			<xsl:otherwise># BATTERY_OLPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_TOSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_TOSA=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_TOSA=m</xsl:when>
			<xsl:otherwise># BATTERY_TOSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_COLLIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_COLLIE=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_COLLIE=m</xsl:when>
			<xsl:otherwise># BATTERY_COLLIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_IPAQ_MICRO=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_IPAQ_MICRO=m</xsl:when>
			<xsl:otherwise># BATTERY_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_WM97XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_WM97XX=y</xsl:when>
			<xsl:otherwise># BATTERY_WM97XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_SBS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_SBS=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_SBS=m</xsl:when>
			<xsl:otherwise># BATTERY_SBS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_BQ27XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_BQ27XXX=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_BQ27XXX=m</xsl:when>
			<xsl:otherwise># BATTERY_BQ27XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_BQ27XXX_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_BQ27XXX_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_BQ27XXX_I2C=m</xsl:when>
			<xsl:otherwise># BATTERY_BQ27XXX_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DA9030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DA9030=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DA9030=m</xsl:when>
			<xsl:otherwise># BATTERY_DA9030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DA9052=m</xsl:when>
			<xsl:otherwise># BATTERY_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_DA9150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_DA9150=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_DA9150=m</xsl:when>
			<xsl:otherwise># CHARGER_DA9150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_DA9150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_DA9150=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_DA9150=m</xsl:when>
			<xsl:otherwise># BATTERY_DA9150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AXP288_CHARGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AXP288_CHARGER=y</xsl:when>
			<xsl:when test=". = 'module'">AXP288_CHARGER=m</xsl:when>
			<xsl:otherwise># AXP288_CHARGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AXP288_FUEL_GAUGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AXP288_FUEL_GAUGE=y</xsl:when>
			<xsl:when test=". = 'module'">AXP288_FUEL_GAUGE=m</xsl:when>
			<xsl:otherwise># AXP288_FUEL_GAUGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_MAX17040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_MAX17040=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_MAX17040=m</xsl:when>
			<xsl:otherwise># BATTERY_MAX17040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_MAX17042">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_MAX17042=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_MAX17042=m</xsl:when>
			<xsl:otherwise># BATTERY_MAX17042 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_Z2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_Z2=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_Z2=m</xsl:when>
			<xsl:otherwise># BATTERY_Z2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_S3C_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_S3C_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_S3C_ADC=m</xsl:when>
			<xsl:otherwise># BATTERY_S3C_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_TWL4030_MADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_TWL4030_MADC=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_TWL4030_MADC=m</xsl:when>
			<xsl:otherwise># BATTERY_TWL4030_MADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_88PM860X=m</xsl:when>
			<xsl:otherwise># CHARGER_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_PCF50633">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_PCF50633=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_PCF50633=m</xsl:when>
			<xsl:otherwise># CHARGER_PCF50633 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_JZ4740=m</xsl:when>
			<xsl:otherwise># BATTERY_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_INTEL_MID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_INTEL_MID=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_INTEL_MID=m</xsl:when>
			<xsl:otherwise># BATTERY_INTEL_MID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_RX51">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_RX51=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_RX51=m</xsl:when>
			<xsl:otherwise># BATTERY_RX51 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_ISP1704">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_ISP1704=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_ISP1704=m</xsl:when>
			<xsl:otherwise># CHARGER_ISP1704 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MAX8903">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MAX8903=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_MAX8903=m</xsl:when>
			<xsl:otherwise># CHARGER_MAX8903 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_TWL4030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_TWL4030=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_TWL4030=m</xsl:when>
			<xsl:otherwise># CHARGER_TWL4030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_LP8727">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_LP8727=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_LP8727=m</xsl:when>
			<xsl:otherwise># CHARGER_LP8727 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_LP8788=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_LP8788=m</xsl:when>
			<xsl:otherwise># CHARGER_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_GPIO=m</xsl:when>
			<xsl:otherwise># CHARGER_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MANAGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MANAGER=y</xsl:when>
			<xsl:otherwise># CHARGER_MANAGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MAX14577">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MAX14577=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_MAX14577=m</xsl:when>
			<xsl:otherwise># CHARGER_MAX14577 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MAX77693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MAX77693=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_MAX77693=m</xsl:when>
			<xsl:otherwise># CHARGER_MAX77693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MAX8997=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_MAX8997=m</xsl:when>
			<xsl:otherwise># CHARGER_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_MAX8998">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_MAX8998=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_MAX8998=m</xsl:when>
			<xsl:otherwise># CHARGER_MAX8998 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_QCOM_SMBB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_QCOM_SMBB=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_QCOM_SMBB=m</xsl:when>
			<xsl:otherwise># CHARGER_QCOM_SMBB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_BQ2415X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_BQ2415X=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_BQ2415X=m</xsl:when>
			<xsl:otherwise># CHARGER_BQ2415X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_BQ24190">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_BQ24190=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_BQ24190=m</xsl:when>
			<xsl:otherwise># CHARGER_BQ24190 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_BQ24257">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_BQ24257=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_BQ24257=m</xsl:when>
			<xsl:otherwise># CHARGER_BQ24257 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_BQ24735">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_BQ24735=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_BQ24735=m</xsl:when>
			<xsl:otherwise># CHARGER_BQ24735 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_BQ25890">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_BQ25890=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_BQ25890=m</xsl:when>
			<xsl:otherwise># CHARGER_BQ25890 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_SMB347">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_SMB347=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_SMB347=m</xsl:when>
			<xsl:otherwise># CHARGER_SMB347 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_TPS65090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_TPS65090=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_TPS65090=m</xsl:when>
			<xsl:otherwise># CHARGER_TPS65090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_TPS65217">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_TPS65217=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_TPS65217=m</xsl:when>
			<xsl:otherwise># CHARGER_TPS65217 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_GAUGE_LTC2941">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_GAUGE_LTC2941=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_GAUGE_LTC2941=m</xsl:when>
			<xsl:otherwise># BATTERY_GAUGE_LTC2941 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB8500_BM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB8500_BM=y</xsl:when>
			<xsl:otherwise># AB8500_BM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_GOLDFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_GOLDFISH=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_GOLDFISH=m</xsl:when>
			<xsl:otherwise># BATTERY_GOLDFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BATTERY_RT5033">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BATTERY_RT5033=y</xsl:when>
			<xsl:when test=". = 'module'">BATTERY_RT5033=m</xsl:when>
			<xsl:otherwise># BATTERY_RT5033 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHARGER_RT9455">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHARGER_RT9455=y</xsl:when>
			<xsl:when test=". = 'module'">CHARGER_RT9455=m</xsl:when>
			<xsl:otherwise># CHARGER_RT9455 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AXP20X_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AXP20X_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">AXP20X_POWER=m</xsl:when>
			<xsl:otherwise># AXP20X_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET=y</xsl:when>
			<xsl:otherwise># POWER_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_AS3722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_AS3722=y</xsl:when>
			<xsl:otherwise># POWER_RESET_AS3722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_AT91_POWEROFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_AT91_POWEROFF=y</xsl:when>
			<xsl:when test=". = 'module'">POWER_RESET_AT91_POWEROFF=m</xsl:when>
			<xsl:otherwise># POWER_RESET_AT91_POWEROFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_AT91_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_AT91_RESET=y</xsl:when>
			<xsl:when test=". = 'module'">POWER_RESET_AT91_RESET=m</xsl:when>
			<xsl:otherwise># POWER_RESET_AT91_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_AT91_SAMA5D2_SHDWC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_AT91_SAMA5D2_SHDWC=y</xsl:when>
			<xsl:when test=". = 'module'">POWER_RESET_AT91_SAMA5D2_SHDWC=m</xsl:when>
			<xsl:otherwise># POWER_RESET_AT91_SAMA5D2_SHDWC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_AXXIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_AXXIA=y</xsl:when>
			<xsl:otherwise># POWER_RESET_AXXIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_BRCMKONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_BRCMKONA=y</xsl:when>
			<xsl:otherwise># POWER_RESET_BRCMKONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_BRCMSTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_BRCMSTB=y</xsl:when>
			<xsl:otherwise># POWER_RESET_BRCMSTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_GPIO=y</xsl:when>
			<xsl:otherwise># POWER_RESET_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_GPIO_RESTART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_GPIO_RESTART=y</xsl:when>
			<xsl:otherwise># POWER_RESET_GPIO_RESTART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_HISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_HISI=y</xsl:when>
			<xsl:otherwise># POWER_RESET_HISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_IMX=y</xsl:when>
			<xsl:otherwise># POWER_RESET_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_MSM=y</xsl:when>
			<xsl:otherwise># POWER_RESET_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_LTC2952">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_LTC2952=y</xsl:when>
			<xsl:otherwise># POWER_RESET_LTC2952 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_QNAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_QNAP=y</xsl:when>
			<xsl:otherwise># POWER_RESET_QNAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_RESTART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_RESTART=y</xsl:when>
			<xsl:otherwise># POWER_RESET_RESTART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_ST=y</xsl:when>
			<xsl:otherwise># POWER_RESET_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_VERSATILE=y</xsl:when>
			<xsl:otherwise># POWER_RESET_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_VEXPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_VEXPRESS=y</xsl:when>
			<xsl:otherwise># POWER_RESET_VEXPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_XGENE=y</xsl:when>
			<xsl:otherwise># POWER_RESET_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_KEYSTONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_KEYSTONE=y</xsl:when>
			<xsl:otherwise># POWER_RESET_KEYSTONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_SYSCON=y</xsl:when>
			<xsl:otherwise># POWER_RESET_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_SYSCON_POWEROFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_SYSCON_POWEROFF=y</xsl:when>
			<xsl:otherwise># POWER_RESET_SYSCON_POWEROFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_RMOBILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_RMOBILE=y</xsl:when>
			<xsl:when test=". = 'module'">POWER_RESET_RMOBILE=m</xsl:when>
			<xsl:otherwise># POWER_RESET_RMOBILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_RESET_ZX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_RESET_ZX=y</xsl:when>
			<xsl:when test=". = 'module'">POWER_RESET_ZX=m</xsl:when>
			<xsl:otherwise># POWER_RESET_ZX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REBOOT_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REBOOT_MODE=y</xsl:when>
			<xsl:when test=". = 'module'">REBOOT_MODE=m</xsl:when>
			<xsl:otherwise># REBOOT_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSCON_REBOOT_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSCON_REBOOT_MODE=y</xsl:when>
			<xsl:when test=". = 'module'">SYSCON_REBOOT_MODE=m</xsl:when>
			<xsl:otherwise># SYSCON_REBOOT_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWER_AVS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWER_AVS=y</xsl:when>
			<xsl:otherwise># POWER_AVS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_IODOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_IODOMAIN=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_IODOMAIN=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_IODOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWMON=y</xsl:when>
			<xsl:when test=". = 'module'">HWMON=m</xsl:when>
			<xsl:otherwise># HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWMON_VID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWMON_VID=y</xsl:when>
			<xsl:when test=". = 'module'">HWMON_VID=m</xsl:when>
			<xsl:otherwise># HWMON_VID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWMON_DEBUG_CHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWMON_DEBUG_CHIP=y</xsl:when>
			<xsl:otherwise># HWMON_DEBUG_CHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AB8500=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AB8500=m</xsl:when>
			<xsl:otherwise># SENSORS_AB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ABITUGURU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ABITUGURU=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ABITUGURU=m</xsl:when>
			<xsl:otherwise># SENSORS_ABITUGURU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ABITUGURU3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ABITUGURU3=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ABITUGURU3=m</xsl:when>
			<xsl:otherwise># SENSORS_ABITUGURU3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AD7314">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AD7314=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AD7314=m</xsl:when>
			<xsl:otherwise># SENSORS_AD7314 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AD7414">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AD7414=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AD7414=m</xsl:when>
			<xsl:otherwise># SENSORS_AD7414 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AD7418">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AD7418=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AD7418=m</xsl:when>
			<xsl:otherwise># SENSORS_AD7418 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1021">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1021=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1021=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1021 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1025">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1025=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1025=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1025 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1026">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1026=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1026=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1026 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1029">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1029=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1029=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1029 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1031=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1031=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM9240">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM9240=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM9240=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM9240 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7X10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7X10=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7X10=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7X10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7310">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7310=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7310=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7310 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7410=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7410=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7411">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7411=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7411=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7411 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7462">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7462=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7462=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7462 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7470">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7470=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7470=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7470 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADT7475">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADT7475=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADT7475=m</xsl:when>
			<xsl:otherwise># SENSORS_ADT7475 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ASC7621">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ASC7621=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ASC7621=m</xsl:when>
			<xsl:otherwise># SENSORS_ASC7621 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_K8TEMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_K8TEMP=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_K8TEMP=m</xsl:when>
			<xsl:otherwise># SENSORS_K8TEMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_K10TEMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_K10TEMP=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_K10TEMP=m</xsl:when>
			<xsl:otherwise># SENSORS_K10TEMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_FAM15H_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_FAM15H_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_FAM15H_POWER=m</xsl:when>
			<xsl:otherwise># SENSORS_FAM15H_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_APPLESMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_APPLESMC=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_APPLESMC=m</xsl:when>
			<xsl:otherwise># SENSORS_APPLESMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ARM_SCPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ARM_SCPI=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ARM_SCPI=m</xsl:when>
			<xsl:otherwise># SENSORS_ARM_SCPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ASB100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ASB100=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ASB100=m</xsl:when>
			<xsl:otherwise># SENSORS_ASB100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ATXP1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ATXP1=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ATXP1=m</xsl:when>
			<xsl:otherwise># SENSORS_ATXP1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DS620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DS620=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DS620=m</xsl:when>
			<xsl:otherwise># SENSORS_DS620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DS1621">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DS1621=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DS1621=m</xsl:when>
			<xsl:otherwise># SENSORS_DS1621 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DELL_SMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DELL_SMM=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DELL_SMM=m</xsl:when>
			<xsl:otherwise># SENSORS_DELL_SMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DA9052_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DA9052_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DA9052_ADC=m</xsl:when>
			<xsl:otherwise># SENSORS_DA9052_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DA9055">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DA9055=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DA9055=m</xsl:when>
			<xsl:otherwise># SENSORS_DA9055 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_I5K_AMB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_I5K_AMB=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_I5K_AMB=m</xsl:when>
			<xsl:otherwise># SENSORS_I5K_AMB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_F71805F">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_F71805F=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_F71805F=m</xsl:when>
			<xsl:otherwise># SENSORS_F71805F is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_F71882FG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_F71882FG=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_F71882FG=m</xsl:when>
			<xsl:otherwise># SENSORS_F71882FG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_F75375S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_F75375S=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_F75375S=m</xsl:when>
			<xsl:otherwise># SENSORS_F75375S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MC13783_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MC13783_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MC13783_ADC=m</xsl:when>
			<xsl:otherwise># SENSORS_MC13783_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_FSCHMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_FSCHMD=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_FSCHMD=m</xsl:when>
			<xsl:otherwise># SENSORS_FSCHMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_FTSTEUTATES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_FTSTEUTATES=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_FTSTEUTATES=m</xsl:when>
			<xsl:otherwise># SENSORS_FTSTEUTATES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_GL518SM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_GL518SM=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_GL518SM=m</xsl:when>
			<xsl:otherwise># SENSORS_GL518SM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_GL520SM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_GL520SM=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_GL520SM=m</xsl:when>
			<xsl:otherwise># SENSORS_GL520SM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_G760A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_G760A=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_G760A=m</xsl:when>
			<xsl:otherwise># SENSORS_G760A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_G762">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_G762=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_G762=m</xsl:when>
			<xsl:otherwise># SENSORS_G762 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_GPIO_FAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_GPIO_FAN=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_GPIO_FAN=m</xsl:when>
			<xsl:otherwise># SENSORS_GPIO_FAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_HIH6130">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_HIH6130=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_HIH6130=m</xsl:when>
			<xsl:otherwise># SENSORS_HIH6130 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_IBMAEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_IBMAEM=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_IBMAEM=m</xsl:when>
			<xsl:otherwise># SENSORS_IBMAEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_IBMPEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_IBMPEX=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_IBMPEX=m</xsl:when>
			<xsl:otherwise># SENSORS_IBMPEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_IBMPOWERNV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_IBMPOWERNV=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_IBMPOWERNV=m</xsl:when>
			<xsl:otherwise># SENSORS_IBMPOWERNV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_IIO_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_IIO_HWMON=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_IIO_HWMON=m</xsl:when>
			<xsl:otherwise># SENSORS_IIO_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_I5500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_I5500=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_I5500=m</xsl:when>
			<xsl:otherwise># SENSORS_I5500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_CORETEMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_CORETEMP=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_CORETEMP=m</xsl:when>
			<xsl:otherwise># SENSORS_CORETEMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_IT87">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_IT87=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_IT87=m</xsl:when>
			<xsl:otherwise># SENSORS_IT87 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_JZ4740=m</xsl:when>
			<xsl:otherwise># SENSORS_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_JC42">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_JC42=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_JC42=m</xsl:when>
			<xsl:otherwise># SENSORS_JC42 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_POWR1220">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_POWR1220=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_POWR1220=m</xsl:when>
			<xsl:otherwise># SENSORS_POWR1220 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LINEAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LINEAGE=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LINEAGE=m</xsl:when>
			<xsl:otherwise># SENSORS_LINEAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC2945">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC2945=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC2945=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC2945 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC2990">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC2990=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC2990=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC2990 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4151">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4151=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4151=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4151 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4215">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4215=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4215=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4215 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4222">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4222=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4222=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4222 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4245">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4245=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4245=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4245 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4260">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4260=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4260=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4260 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC4261">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC4261=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC4261=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC4261 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX1111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX1111=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX1111=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX1111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX16065">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX16065=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX16065=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX16065 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX1619">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX1619=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX1619=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX1619 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX1668">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX1668=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX1668=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX1668 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX197">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX197=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX197=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX197 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX31722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX31722=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX31722=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX31722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX6639">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX6639=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX6639=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX6639 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX6642">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX6642=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX6642=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX6642 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX6650">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX6650=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX6650=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX6650 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX6697">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX6697=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX6697=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX6697 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX31790">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX31790=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX31790=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX31790 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MCP3021">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MCP3021=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MCP3021=m</xsl:when>
			<xsl:otherwise># SENSORS_MCP3021 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MENF21BMC_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MENF21BMC_HWMON=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MENF21BMC_HWMON=m</xsl:when>
			<xsl:otherwise># SENSORS_MENF21BMC_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADCXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADCXX=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADCXX=m</xsl:when>
			<xsl:otherwise># SENSORS_ADCXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM63">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM63=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM63=m</xsl:when>
			<xsl:otherwise># SENSORS_LM63 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM70">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM70=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM70=m</xsl:when>
			<xsl:otherwise># SENSORS_LM70 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM73">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM73=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM73=m</xsl:when>
			<xsl:otherwise># SENSORS_LM73 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM75">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM75=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM75=m</xsl:when>
			<xsl:otherwise># SENSORS_LM75 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM77">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM77=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM77=m</xsl:when>
			<xsl:otherwise># SENSORS_LM77 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM78">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM78=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM78=m</xsl:when>
			<xsl:otherwise># SENSORS_LM78 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM80">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM80=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM80=m</xsl:when>
			<xsl:otherwise># SENSORS_LM80 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM83">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM83=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM83=m</xsl:when>
			<xsl:otherwise># SENSORS_LM83 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM85">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM85=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM85=m</xsl:when>
			<xsl:otherwise># SENSORS_LM85 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM87">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM87=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM87=m</xsl:when>
			<xsl:otherwise># SENSORS_LM87 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM90">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM90=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM90=m</xsl:when>
			<xsl:otherwise># SENSORS_LM90 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM92">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM92=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM92=m</xsl:when>
			<xsl:otherwise># SENSORS_LM92 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM93">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM93=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM93=m</xsl:when>
			<xsl:otherwise># SENSORS_LM93 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM95234">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM95234=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM95234=m</xsl:when>
			<xsl:otherwise># SENSORS_LM95234 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM95241">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM95241=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM95241=m</xsl:when>
			<xsl:otherwise># SENSORS_LM95241 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM95245">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM95245=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM95245=m</xsl:when>
			<xsl:otherwise># SENSORS_LM95245 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_PC87360">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_PC87360=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_PC87360=m</xsl:when>
			<xsl:otherwise># SENSORS_PC87360 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_PC87427">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_PC87427=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_PC87427=m</xsl:when>
			<xsl:otherwise># SENSORS_PC87427 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NTC_THERMISTOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NTC_THERMISTOR=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NTC_THERMISTOR=m</xsl:when>
			<xsl:otherwise># SENSORS_NTC_THERMISTOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NCT6683">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NCT6683=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NCT6683=m</xsl:when>
			<xsl:otherwise># SENSORS_NCT6683 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NCT6775">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NCT6775=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NCT6775=m</xsl:when>
			<xsl:otherwise># SENSORS_NCT6775 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NCT7802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NCT7802=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NCT7802=m</xsl:when>
			<xsl:otherwise># SENSORS_NCT7802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NCT7904">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NCT7904=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NCT7904=m</xsl:when>
			<xsl:otherwise># SENSORS_NCT7904 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_NSA320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_NSA320=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_NSA320=m</xsl:when>
			<xsl:otherwise># SENSORS_NSA320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_PCF8591">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_PCF8591=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_PCF8591=m</xsl:when>
			<xsl:otherwise># SENSORS_PCF8591 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMBUS=y</xsl:when>
			<xsl:when test=". = 'module'">PMBUS=m</xsl:when>
			<xsl:otherwise># PMBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_PMBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_PMBUS=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_PMBUS=m</xsl:when>
			<xsl:otherwise># SENSORS_PMBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADM1275">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADM1275=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADM1275=m</xsl:when>
			<xsl:otherwise># SENSORS_ADM1275 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM25066">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM25066=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM25066=m</xsl:when>
			<xsl:otherwise># SENSORS_LM25066 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC2978">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC2978=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC2978=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC2978 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC2978_REGULATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC2978_REGULATOR=y</xsl:when>
			<xsl:otherwise># SENSORS_LTC2978_REGULATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LTC3815">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LTC3815=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LTC3815=m</xsl:when>
			<xsl:otherwise># SENSORS_LTC3815 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX16064">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX16064=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX16064=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX16064 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX20751">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX20751=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX20751=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX20751 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX34440">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX34440=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX34440=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX34440 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_MAX8688">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_MAX8688=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_MAX8688=m</xsl:when>
			<xsl:otherwise># SENSORS_MAX8688 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TPS40422">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TPS40422=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TPS40422=m</xsl:when>
			<xsl:otherwise># SENSORS_TPS40422 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_UCD9000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_UCD9000=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_UCD9000=m</xsl:when>
			<xsl:otherwise># SENSORS_UCD9000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_UCD9200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_UCD9200=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_UCD9200=m</xsl:when>
			<xsl:otherwise># SENSORS_UCD9200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ZL6100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ZL6100=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ZL6100=m</xsl:when>
			<xsl:otherwise># SENSORS_ZL6100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_PWM_FAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_PWM_FAN=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_PWM_FAN=m</xsl:when>
			<xsl:otherwise># SENSORS_PWM_FAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SHT15">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SHT15=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SHT15=m</xsl:when>
			<xsl:otherwise># SENSORS_SHT15 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SHT21">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SHT21=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SHT21=m</xsl:when>
			<xsl:otherwise># SENSORS_SHT21 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SHT3x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SHT3x=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SHT3x=m</xsl:when>
			<xsl:otherwise># SENSORS_SHT3x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SHTC1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SHTC1=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SHTC1=m</xsl:when>
			<xsl:otherwise># SENSORS_SHTC1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_S3C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_S3C=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_S3C=m</xsl:when>
			<xsl:otherwise># SENSORS_S3C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_S3C_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_S3C_RAW=y</xsl:when>
			<xsl:otherwise># SENSORS_S3C_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SIS5595">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SIS5595=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SIS5595=m</xsl:when>
			<xsl:otherwise># SENSORS_SIS5595 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_DME1737">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_DME1737=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_DME1737=m</xsl:when>
			<xsl:otherwise># SENSORS_DME1737 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_EMC1403">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_EMC1403=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_EMC1403=m</xsl:when>
			<xsl:otherwise># SENSORS_EMC1403 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_EMC2103">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_EMC2103=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_EMC2103=m</xsl:when>
			<xsl:otherwise># SENSORS_EMC2103 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_EMC6W201">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_EMC6W201=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_EMC6W201=m</xsl:when>
			<xsl:otherwise># SENSORS_EMC6W201 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SMSC47M1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SMSC47M1=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SMSC47M1=m</xsl:when>
			<xsl:otherwise># SENSORS_SMSC47M1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SMSC47M192">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SMSC47M192=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SMSC47M192=m</xsl:when>
			<xsl:otherwise># SENSORS_SMSC47M192 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SMSC47B397">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SMSC47B397=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SMSC47B397=m</xsl:when>
			<xsl:otherwise># SENSORS_SMSC47B397 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SCH56XX_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SCH56XX_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SCH56XX_COMMON=m</xsl:when>
			<xsl:otherwise># SENSORS_SCH56XX_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SCH5627">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SCH5627=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SCH5627=m</xsl:when>
			<xsl:otherwise># SENSORS_SCH5627 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SCH5636">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SCH5636=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SCH5636=m</xsl:when>
			<xsl:otherwise># SENSORS_SCH5636 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_SMM665">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_SMM665=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_SMM665=m</xsl:when>
			<xsl:otherwise># SENSORS_SMM665 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADC128D818">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADC128D818=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADC128D818=m</xsl:when>
			<xsl:otherwise># SENSORS_ADC128D818 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADS1015">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADS1015=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADS1015=m</xsl:when>
			<xsl:otherwise># SENSORS_ADS1015 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADS7828">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADS7828=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADS7828=m</xsl:when>
			<xsl:otherwise># SENSORS_ADS7828 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ADS7871">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ADS7871=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ADS7871=m</xsl:when>
			<xsl:otherwise># SENSORS_ADS7871 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_AMC6821">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_AMC6821=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_AMC6821=m</xsl:when>
			<xsl:otherwise># SENSORS_AMC6821 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_INA209">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_INA209=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_INA209=m</xsl:when>
			<xsl:otherwise># SENSORS_INA209 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_INA2XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_INA2XX=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_INA2XX=m</xsl:when>
			<xsl:otherwise># SENSORS_INA2XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_INA3221">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_INA3221=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_INA3221=m</xsl:when>
			<xsl:otherwise># SENSORS_INA3221 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TC74">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TC74=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TC74=m</xsl:when>
			<xsl:otherwise># SENSORS_TC74 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_THMC50">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_THMC50=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_THMC50=m</xsl:when>
			<xsl:otherwise># SENSORS_THMC50 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TMP102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TMP102=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TMP102=m</xsl:when>
			<xsl:otherwise># SENSORS_TMP102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TMP103">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TMP103=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TMP103=m</xsl:when>
			<xsl:otherwise># SENSORS_TMP103 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TMP401">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TMP401=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TMP401=m</xsl:when>
			<xsl:otherwise># SENSORS_TMP401 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TMP421">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TMP421=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TMP421=m</xsl:when>
			<xsl:otherwise># SENSORS_TMP421 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TWL4030_MADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TWL4030_MADC=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TWL4030_MADC=m</xsl:when>
			<xsl:otherwise># SENSORS_TWL4030_MADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_VEXPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_VEXPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_VEXPRESS=m</xsl:when>
			<xsl:otherwise># SENSORS_VEXPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_VIA_CPUTEMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_VIA_CPUTEMP=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_VIA_CPUTEMP=m</xsl:when>
			<xsl:otherwise># SENSORS_VIA_CPUTEMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_VIA686A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_VIA686A=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_VIA686A=m</xsl:when>
			<xsl:otherwise># SENSORS_VIA686A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_VT1211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_VT1211=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_VT1211=m</xsl:when>
			<xsl:otherwise># SENSORS_VT1211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_VT8231">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_VT8231=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_VT8231=m</xsl:when>
			<xsl:otherwise># SENSORS_VT8231 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83781D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83781D=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83781D=m</xsl:when>
			<xsl:otherwise># SENSORS_W83781D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83791D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83791D=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83791D=m</xsl:when>
			<xsl:otherwise># SENSORS_W83791D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83792D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83792D=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83792D=m</xsl:when>
			<xsl:otherwise># SENSORS_W83792D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83793">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83793=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83793=m</xsl:when>
			<xsl:otherwise># SENSORS_W83793 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83795">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83795=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83795=m</xsl:when>
			<xsl:otherwise># SENSORS_W83795 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83795_FANCTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83795_FANCTRL=y</xsl:when>
			<xsl:otherwise># SENSORS_W83795_FANCTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83L785TS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83L785TS=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83L785TS=m</xsl:when>
			<xsl:otherwise># SENSORS_W83L785TS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83L786NG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83L786NG=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83L786NG=m</xsl:when>
			<xsl:otherwise># SENSORS_W83L786NG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83627HF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83627HF=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83627HF=m</xsl:when>
			<xsl:otherwise># SENSORS_W83627HF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_W83627EHF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_W83627EHF=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_W83627EHF=m</xsl:when>
			<xsl:otherwise># SENSORS_W83627EHF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_WM831X=m</xsl:when>
			<xsl:otherwise># SENSORS_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_WM8350=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_WM8350=m</xsl:when>
			<xsl:otherwise># SENSORS_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ULTRA45">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ULTRA45=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ULTRA45=m</xsl:when>
			<xsl:otherwise># SENSORS_ULTRA45 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ACPI_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ACPI_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ACPI_POWER=m</xsl:when>
			<xsl:otherwise># SENSORS_ACPI_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ATK0110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ATK0110=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ATK0110=m</xsl:when>
			<xsl:otherwise># SENSORS_ATK0110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">THERMAL=m</xsl:when>
			<xsl:otherwise># THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_HWMON=y</xsl:when>
			<xsl:otherwise># THERMAL_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_OF=y</xsl:when>
			<xsl:otherwise># THERMAL_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_WRITABLE_TRIPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_WRITABLE_TRIPS=y</xsl:when>
			<xsl:otherwise># THERMAL_WRITABLE_TRIPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_DEFAULT_GOV_STEP_WISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_DEFAULT_GOV_STEP_WISE=y</xsl:when>
			<xsl:otherwise># THERMAL_DEFAULT_GOV_STEP_WISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_DEFAULT_GOV_FAIR_SHARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_DEFAULT_GOV_FAIR_SHARE=y</xsl:when>
			<xsl:otherwise># THERMAL_DEFAULT_GOV_FAIR_SHARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_DEFAULT_GOV_USER_SPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_DEFAULT_GOV_USER_SPACE=y</xsl:when>
			<xsl:otherwise># THERMAL_DEFAULT_GOV_USER_SPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_DEFAULT_GOV_POWER_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_DEFAULT_GOV_POWER_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># THERMAL_DEFAULT_GOV_POWER_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_GOV_FAIR_SHARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_GOV_FAIR_SHARE=y</xsl:when>
			<xsl:otherwise># THERMAL_GOV_FAIR_SHARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_GOV_STEP_WISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_GOV_STEP_WISE=y</xsl:when>
			<xsl:otherwise># THERMAL_GOV_STEP_WISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_GOV_BANG_BANG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_GOV_BANG_BANG=y</xsl:when>
			<xsl:otherwise># THERMAL_GOV_BANG_BANG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_GOV_USER_SPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_GOV_USER_SPACE=y</xsl:when>
			<xsl:otherwise># THERMAL_GOV_USER_SPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_GOV_POWER_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_GOV_POWER_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># THERMAL_GOV_POWER_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_THERMAL=y</xsl:when>
			<xsl:otherwise># CPU_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLOCK_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLOCK_THERMAL=y</xsl:when>
			<xsl:otherwise># CLOCK_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_THERMAL=y</xsl:when>
			<xsl:otherwise># DEVFREQ_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THERMAL_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THERMAL_EMULATION=y</xsl:when>
			<xsl:otherwise># THERMAL_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISI_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISI_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">HISI_THERMAL=m</xsl:when>
			<xsl:otherwise># HISI_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">IMX_THERMAL=m</xsl:when>
			<xsl:otherwise># IMX_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAR_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAR_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAR_THERMAL=m</xsl:when>
			<xsl:otherwise># SPEAR_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_THERMAL=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCAR_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCAR_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">RCAR_THERMAL=m</xsl:when>
			<xsl:otherwise># RCAR_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KIRKWOOD_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KIRKWOOD_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">KIRKWOOD_THERMAL=m</xsl:when>
			<xsl:otherwise># KIRKWOOD_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DOVE_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DOVE_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">DOVE_THERMAL=m</xsl:when>
			<xsl:otherwise># DOVE_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DB8500_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DB8500_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">DB8500_THERMAL=m</xsl:when>
			<xsl:otherwise># DB8500_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">ARMADA_THERMAL=m</xsl:when>
			<xsl:otherwise># ARMADA_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DB8500_CPUFREQ_COOLING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DB8500_CPUFREQ_COOLING=y</xsl:when>
			<xsl:when test=". = 'module'">DB8500_CPUFREQ_COOLING=m</xsl:when>
			<xsl:otherwise># DB8500_CPUFREQ_COOLING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_POWERCLAMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_POWERCLAMP=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_POWERCLAMP=m</xsl:when>
			<xsl:otherwise># INTEL_POWERCLAMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PKG_TEMP_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PKG_TEMP_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">X86_PKG_TEMP_THERMAL=m</xsl:when>
			<xsl:otherwise># X86_PKG_TEMP_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SOC_DTS_IOSF_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SOC_DTS_IOSF_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_SOC_DTS_IOSF_CORE=m</xsl:when>
			<xsl:otherwise># INTEL_SOC_DTS_IOSF_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SOC_DTS_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SOC_DTS_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_SOC_DTS_THERMAL=m</xsl:when>
			<xsl:otherwise># INTEL_SOC_DTS_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_QUARK_DTS_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_QUARK_DTS_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_QUARK_DTS_THERMAL=m</xsl:when>
			<xsl:otherwise># INTEL_QUARK_DTS_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INT340X_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INT340X_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INT340X_THERMAL=m</xsl:when>
			<xsl:otherwise># INT340X_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_THERMAL_REL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_THERMAL_REL=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_THERMAL_REL=m</xsl:when>
			<xsl:otherwise># ACPI_THERMAL_REL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INT3406_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INT3406_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INT3406_THERMAL=m</xsl:when>
			<xsl:otherwise># INT3406_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_PCH_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_PCH_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_PCH_THERMAL=m</xsl:when>
			<xsl:otherwise># INTEL_PCH_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">MTK_THERMAL=m</xsl:when>
			<xsl:otherwise># MTK_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_SOC_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_SOC_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">TI_SOC_THERMAL=m</xsl:when>
			<xsl:otherwise># TI_SOC_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_THERMAL=y</xsl:when>
			<xsl:otherwise># TI_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP3_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP3_THERMAL=y</xsl:when>
			<xsl:otherwise># OMAP3_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP4_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP4_THERMAL=y</xsl:when>
			<xsl:otherwise># OMAP4_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP5_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP5_THERMAL=y</xsl:when>
			<xsl:otherwise># OMAP5_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRA752_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRA752_THERMAL=y</xsl:when>
			<xsl:otherwise># DRA752_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">EXYNOS_THERMAL=m</xsl:when>
			<xsl:otherwise># EXYNOS_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">ST_THERMAL=m</xsl:when>
			<xsl:otherwise># ST_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_THERMAL_SYSCFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_THERMAL_SYSCFG=y</xsl:when>
			<xsl:when test=". = 'module'">ST_THERMAL_SYSCFG=m</xsl:when>
			<xsl:otherwise># ST_THERMAL_SYSCFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_THERMAL_MEMMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_THERMAL_MEMMAP=y</xsl:when>
			<xsl:when test=". = 'module'">ST_THERMAL_MEMMAP=m</xsl:when>
			<xsl:otherwise># ST_THERMAL_MEMMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TANGO_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TANGO_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">TANGO_THERMAL=m</xsl:when>
			<xsl:otherwise># TANGO_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_SOCTHERM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_SOCTHERM=y</xsl:when>
			<xsl:when test=". = 'module'">TEGRA_SOCTHERM=m</xsl:when>
			<xsl:otherwise># TEGRA_SOCTHERM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SPMI_TEMP_ALARM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SPMI_TEMP_ALARM=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SPMI_TEMP_ALARM=m</xsl:when>
			<xsl:otherwise># QCOM_SPMI_TEMP_ALARM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_ADC_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_ADC_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">GENERIC_ADC_THERMAL=m</xsl:when>
			<xsl:otherwise># GENERIC_ADC_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WATCHDOG=y</xsl:when>
			<xsl:otherwise># WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WATCHDOG_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WATCHDOG_CORE=y</xsl:when>
			<xsl:otherwise># WATCHDOG_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WATCHDOG_NOWAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WATCHDOG_NOWAYOUT=y</xsl:when>
			<xsl:otherwise># WATCHDOG_NOWAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WATCHDOG_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WATCHDOG_SYSFS=y</xsl:when>
			<xsl:otherwise># WATCHDOG_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOFT_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOFT_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SOFT_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SOFT_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA9052_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA9052_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DA9052_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DA9052_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA9055_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA9055_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DA9055_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DA9055_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA9063_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA9063_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DA9063_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DA9063_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA9062_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA9062_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DA9062_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DA9062_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">GPIO_WATCHDOG=m</xsl:when>
			<xsl:otherwise># GPIO_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_WATCHDOG_ARCH_INITCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_WATCHDOG_ARCH_INITCALL=y</xsl:when>
			<xsl:otherwise># GPIO_WATCHDOG_ARCH_INITCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MENF21BMC_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MENF21BMC_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MENF21BMC_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MENF21BMC_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TANGOX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TANGOX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">TANGOX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># TANGOX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WM831X_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WM831X_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">WM831X_WATCHDOG=m</xsl:when>
			<xsl:otherwise># WM831X_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WM8350_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WM8350_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">WM8350_WATCHDOG=m</xsl:when>
			<xsl:otherwise># WM8350_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># XILINX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZIIRAVE_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZIIRAVE_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ZIIRAVE_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ZIIRAVE_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SP805_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SP805_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_SP805_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ARM_SP805_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SBSA_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SBSA_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_SBSA_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ARM_SBSA_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASM9260_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASM9260_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ASM9260_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ASM9260_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT91RM9200_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT91RM9200_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">AT91RM9200_WATCHDOG=m</xsl:when>
			<xsl:otherwise># AT91RM9200_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT91SAM9X_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT91SAM9X_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">AT91SAM9X_WATCHDOG=m</xsl:when>
			<xsl:otherwise># AT91SAM9X_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SAMA5D4_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SAMA5D4_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SAMA5D4_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SAMA5D4_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CADENCE_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CADENCE_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">CADENCE_WATCHDOG=m</xsl:when>
			<xsl:otherwise># CADENCE_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_21285_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">21285_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">21285_WATCHDOG=m</xsl:when>
			<xsl:otherwise># 21285_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_977_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">977_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">977_WATCHDOG=m</xsl:when>
			<xsl:otherwise># 977_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IXP4XX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IXP4XX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">IXP4XX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># IXP4XX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS8695_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS8695_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">KS8695_WATCHDOG=m</xsl:when>
			<xsl:otherwise># KS8695_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_S3C2410_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_S3C2410_WATCHDOG=y</xsl:when>
			<xsl:otherwise># HAVE_S3C2410_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C2410_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C2410_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">S3C2410_WATCHDOG=m</xsl:when>
			<xsl:otherwise># S3C2410_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SA1100_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SA1100_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SA1100_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SA1100_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DW_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DW_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EP93XX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EP93XX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">EP93XX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># EP93XX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_WATCHDOG=m</xsl:when>
			<xsl:otherwise># OMAP_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNX4008_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNX4008_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">PNX4008_WATCHDOG=m</xsl:when>
			<xsl:otherwise># PNX4008_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOP_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOP_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">IOP_WATCHDOG=m</xsl:when>
			<xsl:otherwise># IOP_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DAVINCI_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DAVINCI_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DAVINCI_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DAVINCI_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORION_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORION_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ORION_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ORION_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RN5T618_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RN5T618_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">RN5T618_WATCHDOG=m</xsl:when>
			<xsl:otherwise># RN5T618_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SUNXI_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SUNXI_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COH901327_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COH901327_WATCHDOG=y</xsl:when>
			<xsl:otherwise># COH901327_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL4030_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL4030_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">TWL4030_WATCHDOG=m</xsl:when>
			<xsl:otherwise># TWL4030_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMP3XXX_RTC_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMP3XXX_RTC_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">STMP3XXX_RTC_WATCHDOG=m</xsl:when>
			<xsl:otherwise># STMP3XXX_RTC_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NUC900_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NUC900_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">NUC900_WATCHDOG=m</xsl:when>
			<xsl:otherwise># NUC900_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TS4800_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TS4800_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">TS4800_WATCHDOG=m</xsl:when>
			<xsl:otherwise># TS4800_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TS72XX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TS72XX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">TS72XX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># TS72XX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX63XX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX63XX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MAX63XX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MAX63XX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX77620_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX77620_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MAX77620_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MAX77620_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX2_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX2_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">IMX2_WDT=m</xsl:when>
			<xsl:otherwise># IMX2_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UX500_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UX500_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">UX500_WATCHDOG=m</xsl:when>
			<xsl:otherwise># UX500_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RETU_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RETU_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">RETU_WATCHDOG=m</xsl:when>
			<xsl:otherwise># RETU_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOXART_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOXART_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">MOXART_WDT=m</xsl:when>
			<xsl:otherwise># MOXART_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIRFSOC_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIRFSOC_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SIRFSOC_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SIRFSOC_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_LPC_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_LPC_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ST_LPC_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ST_LPC_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">TEGRA_WATCHDOG=m</xsl:when>
			<xsl:otherwise># TEGRA_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_WDT=m</xsl:when>
			<xsl:otherwise># QCOM_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MESON_GXBB_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MESON_GXBB_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MESON_GXBB_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MESON_GXBB_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MESON_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MESON_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MESON_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MESON_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIATEK_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIATEK_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">MEDIATEK_WATCHDOG=m</xsl:when>
			<xsl:otherwise># MEDIATEK_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DIGICOLOR_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DIGICOLOR_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">DIGICOLOR_WATCHDOG=m</xsl:when>
			<xsl:otherwise># DIGICOLOR_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC18XX_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC18XX_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">LPC18XX_WATCHDOG=m</xsl:when>
			<xsl:otherwise># LPC18XX_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATLAS7_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATLAS7_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ATLAS7_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ATLAS7_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">RENESAS_WDT=m</xsl:when>
			<xsl:otherwise># RENESAS_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASPEED_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASPEED_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">ASPEED_WATCHDOG=m</xsl:when>
			<xsl:otherwise># ASPEED_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT32AP700X_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT32AP700X_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">AT32AP700X_WDT=m</xsl:when>
			<xsl:otherwise># AT32AP700X_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFIN_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFIN_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">BFIN_WDT=m</xsl:when>
			<xsl:otherwise># BFIN_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACQUIRE_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACQUIRE_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">ACQUIRE_WDT=m</xsl:when>
			<xsl:otherwise># ACQUIRE_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADVANTECH_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADVANTECH_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">ADVANTECH_WDT=m</xsl:when>
			<xsl:otherwise># ADVANTECH_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALIM1535_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALIM1535_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">ALIM1535_WDT=m</xsl:when>
			<xsl:otherwise># ALIM1535_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALIM7101_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALIM7101_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">ALIM7101_WDT=m</xsl:when>
			<xsl:otherwise># ALIM7101_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EBC_C384_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EBC_C384_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">EBC_C384_WDT=m</xsl:when>
			<xsl:otherwise># EBC_C384_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F71808E_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F71808E_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">F71808E_WDT=m</xsl:when>
			<xsl:otherwise># F71808E_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SP5100_TCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SP5100_TCO=y</xsl:when>
			<xsl:when test=". = 'module'">SP5100_TCO=m</xsl:when>
			<xsl:otherwise># SP5100_TCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GEODE_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GEODE_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">GEODE_WDT=m</xsl:when>
			<xsl:otherwise># GEODE_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC520_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC520_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">SC520_WDT=m</xsl:when>
			<xsl:otherwise># SC520_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBC_FITPC2_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBC_FITPC2_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">SBC_FITPC2_WATCHDOG=m</xsl:when>
			<xsl:otherwise># SBC_FITPC2_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EUROTECH_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EUROTECH_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">EUROTECH_WDT=m</xsl:when>
			<xsl:otherwise># EUROTECH_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IB700_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IB700_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">IB700_WDT=m</xsl:when>
			<xsl:otherwise># IB700_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBMASR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBMASR=y</xsl:when>
			<xsl:when test=". = 'module'">IBMASR=m</xsl:when>
			<xsl:otherwise># IBMASR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WAFER_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WAFER_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">WAFER_WDT=m</xsl:when>
			<xsl:otherwise># WAFER_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I6300ESB_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I6300ESB_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">I6300ESB_WDT=m</xsl:when>
			<xsl:otherwise># I6300ESB_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IE6XX_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IE6XX_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">IE6XX_WDT=m</xsl:when>
			<xsl:otherwise># IE6XX_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SCU_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SCU_WATCHDOG=y</xsl:when>
			<xsl:otherwise># INTEL_SCU_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MID_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MID_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MID_WATCHDOG=m</xsl:when>
			<xsl:otherwise># INTEL_MID_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ITCO_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ITCO_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">ITCO_WDT=m</xsl:when>
			<xsl:otherwise># ITCO_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ITCO_VENDOR_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ITCO_VENDOR_SUPPORT=y</xsl:when>
			<xsl:otherwise># ITCO_VENDOR_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IT8712F_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IT8712F_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">IT8712F_WDT=m</xsl:when>
			<xsl:otherwise># IT8712F_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IT87_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IT87_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">IT87_WDT=m</xsl:when>
			<xsl:otherwise># IT87_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">HP_WATCHDOG=m</xsl:when>
			<xsl:otherwise># HP_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEMPLD_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEMPLD_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">KEMPLD_WDT=m</xsl:when>
			<xsl:otherwise># KEMPLD_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPWDT_NMI_DECODING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPWDT_NMI_DECODING=y</xsl:when>
			<xsl:otherwise># HPWDT_NMI_DECODING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC1200_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC1200_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">SC1200_WDT=m</xsl:when>
			<xsl:otherwise># SC1200_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCx200_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCx200_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">SCx200_WDT=m</xsl:when>
			<xsl:otherwise># SCx200_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PC87413_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PC87413_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">PC87413_WDT=m</xsl:when>
			<xsl:otherwise># PC87413_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NV_TCO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NV_TCO=y</xsl:when>
			<xsl:when test=". = 'module'">NV_TCO=m</xsl:when>
			<xsl:otherwise># NV_TCO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDC321X_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDC321X_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">RDC321X_WDT=m</xsl:when>
			<xsl:otherwise># RDC321X_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_60XX_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">60XX_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">60XX_WDT=m</xsl:when>
			<xsl:otherwise># 60XX_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SBC8360_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SBC8360_WDT=y</xsl:when>
			<xsl:when test=". = 'module'">SBC8360_WDT=m</xsl:when>
			<xsl:otherwise># SBC8360_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_POSSIBLE=y</xsl:when>
			<xsl:otherwise># SSB_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB=y</xsl:when>
			<xsl:when test=". = 'module'">SSB=m</xsl:when>
			<xsl:otherwise># SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SPROM=y</xsl:when>
			<xsl:otherwise># SSB_SPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_BLOCKIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_BLOCKIO=y</xsl:when>
			<xsl:otherwise># SSB_BLOCKIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_PCIHOST_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_PCIHOST_POSSIBLE=y</xsl:when>
			<xsl:otherwise># SSB_PCIHOST_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_PCIHOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_PCIHOST=y</xsl:when>
			<xsl:otherwise># SSB_PCIHOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_B43_PCI_BRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_B43_PCI_BRIDGE=y</xsl:when>
			<xsl:otherwise># SSB_B43_PCI_BRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_PCMCIAHOST_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_PCMCIAHOST_POSSIBLE=y</xsl:when>
			<xsl:otherwise># SSB_PCMCIAHOST_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_PCMCIAHOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_PCMCIAHOST=y</xsl:when>
			<xsl:otherwise># SSB_PCMCIAHOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SDIOHOST_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SDIOHOST_POSSIBLE=y</xsl:when>
			<xsl:otherwise># SSB_SDIOHOST_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SDIOHOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SDIOHOST=y</xsl:when>
			<xsl:otherwise># SSB_SDIOHOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_HOST_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_HOST_SOC=y</xsl:when>
			<xsl:otherwise># SSB_HOST_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SILENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SILENT=y</xsl:when>
			<xsl:otherwise># SSB_SILENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DEBUG=y</xsl:when>
			<xsl:otherwise># SSB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SERIAL=y</xsl:when>
			<xsl:otherwise># SSB_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_PCICORE_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_PCICORE_POSSIBLE=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_PCICORE_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_PCICORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_PCICORE=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_PCICORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_PCICORE_HOSTMODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_PCICORE_HOSTMODE=y</xsl:when>
			<xsl:otherwise># SSB_PCICORE_HOSTMODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_MIPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_MIPS=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_MIPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_SFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_SFLASH=y</xsl:when>
			<xsl:otherwise># SSB_SFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_EMBEDDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_EMBEDDED=y</xsl:when>
			<xsl:otherwise># SSB_EMBEDDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_EXTIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_EXTIF=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_EXTIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_GIGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_GIGE=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_GIGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SSB_DRIVER_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SSB_DRIVER_GPIO=y</xsl:when>
			<xsl:otherwise># SSB_DRIVER_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_POSSIBLE=y</xsl:when>
			<xsl:otherwise># BCMA_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA=y</xsl:when>
			<xsl:when test=". = 'module'">BCMA=m</xsl:when>
			<xsl:otherwise># BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_BLOCKIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_BLOCKIO=y</xsl:when>
			<xsl:otherwise># BCMA_BLOCKIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_HOST_PCI_POSSIBLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_HOST_PCI_POSSIBLE=y</xsl:when>
			<xsl:otherwise># BCMA_HOST_PCI_POSSIBLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_HOST_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_HOST_PCI=y</xsl:when>
			<xsl:otherwise># BCMA_HOST_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_HOST_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_HOST_SOC=y</xsl:when>
			<xsl:otherwise># BCMA_HOST_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DRIVER_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DRIVER_PCI=y</xsl:when>
			<xsl:otherwise># BCMA_DRIVER_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DRIVER_PCI_HOSTMODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DRIVER_PCI_HOSTMODE=y</xsl:when>
			<xsl:otherwise># BCMA_DRIVER_PCI_HOSTMODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DRIVER_MIPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DRIVER_MIPS=y</xsl:when>
			<xsl:otherwise># BCMA_DRIVER_MIPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_PFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_PFLASH=y</xsl:when>
			<xsl:otherwise># BCMA_PFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_SFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_SFLASH=y</xsl:when>
			<xsl:otherwise># BCMA_SFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_NFLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_NFLASH=y</xsl:when>
			<xsl:otherwise># BCMA_NFLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DRIVER_GMAC_CMN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DRIVER_GMAC_CMN=y</xsl:when>
			<xsl:otherwise># BCMA_DRIVER_GMAC_CMN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DRIVER_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DRIVER_GPIO=y</xsl:when>
			<xsl:otherwise># BCMA_DRIVER_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCMA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCMA_DEBUG=y</xsl:when>
			<xsl:otherwise># BCMA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_CORE=m</xsl:when>
			<xsl:otherwise># MFD_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CS5535">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CS5535=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_CS5535=m</xsl:when>
			<xsl:otherwise># MFD_CS5535 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ALTERA_A10SR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ALTERA_A10SR=y</xsl:when>
			<xsl:otherwise># MFD_ALTERA_A10SR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ACT8945A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ACT8945A=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_ACT8945A=m</xsl:when>
			<xsl:otherwise># MFD_ACT8945A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AS3711">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AS3711=y</xsl:when>
			<xsl:otherwise># MFD_AS3711 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AS3722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AS3722=y</xsl:when>
			<xsl:otherwise># MFD_AS3722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMIC_ADP5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMIC_ADP5520=y</xsl:when>
			<xsl:otherwise># PMIC_ADP5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AAT2870_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AAT2870_CORE=y</xsl:when>
			<xsl:otherwise># MFD_AAT2870_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ATMEL_FLEXCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ATMEL_FLEXCOM=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_ATMEL_FLEXCOM=m</xsl:when>
			<xsl:otherwise># MFD_ATMEL_FLEXCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ATMEL_HLCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ATMEL_HLCDC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_ATMEL_HLCDC=m</xsl:when>
			<xsl:otherwise># MFD_ATMEL_HLCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_BCM590XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_BCM590XX=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_BCM590XX=m</xsl:when>
			<xsl:otherwise># MFD_BCM590XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AXP20X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AXP20X=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_AXP20X=m</xsl:when>
			<xsl:otherwise># MFD_AXP20X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AXP20X_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AXP20X_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_AXP20X_I2C=m</xsl:when>
			<xsl:otherwise># MFD_AXP20X_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_AXP20X_RSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_AXP20X_RSB=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_AXP20X_RSB=m</xsl:when>
			<xsl:otherwise># MFD_AXP20X_RSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CROS_EC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CROS_EC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_CROS_EC=m</xsl:when>
			<xsl:otherwise># MFD_CROS_EC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CROS_EC_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CROS_EC_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_CROS_EC_I2C=m</xsl:when>
			<xsl:otherwise># MFD_CROS_EC_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CROS_EC_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CROS_EC_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_CROS_EC_SPI=m</xsl:when>
			<xsl:otherwise># MFD_CROS_EC_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ASIC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ASIC3=y</xsl:when>
			<xsl:otherwise># MFD_ASIC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMIC_DA903X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMIC_DA903X=y</xsl:when>
			<xsl:otherwise># PMIC_DA903X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PMIC_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PMIC_DA9052=y</xsl:when>
			<xsl:otherwise># PMIC_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9052_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9052_SPI=y</xsl:when>
			<xsl:otherwise># MFD_DA9052_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9052_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9052_I2C=y</xsl:when>
			<xsl:otherwise># MFD_DA9052_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9055">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9055=y</xsl:when>
			<xsl:otherwise># MFD_DA9055 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9062">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9062=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_DA9062=m</xsl:when>
			<xsl:otherwise># MFD_DA9062 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9063">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9063=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_DA9063=m</xsl:when>
			<xsl:otherwise># MFD_DA9063 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DA9150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DA9150=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_DA9150=m</xsl:when>
			<xsl:otherwise># MFD_DA9150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DLN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DLN2=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_DLN2=m</xsl:when>
			<xsl:otherwise># MFD_DLN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MC13XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MC13XXX=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MC13XXX=m</xsl:when>
			<xsl:otherwise># MFD_MC13XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MC13XXX_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MC13XXX_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MC13XXX_SPI=m</xsl:when>
			<xsl:otherwise># MFD_MC13XXX_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MC13XXX_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MC13XXX_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MC13XXX_I2C=m</xsl:when>
			<xsl:otherwise># MFD_MC13XXX_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MX25_TSADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MX25_TSADC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MX25_TSADC=m</xsl:when>
			<xsl:otherwise># MFD_MX25_TSADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_HI6421_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_HI6421_PMIC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_HI6421_PMIC=m</xsl:when>
			<xsl:otherwise># MFD_HI6421_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_HI655X_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_HI655X_PMIC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_HI655X_PMIC=m</xsl:when>
			<xsl:otherwise># MFD_HI655X_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HTC_EGPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HTC_EGPIO=y</xsl:when>
			<xsl:otherwise># HTC_EGPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HTC_PASIC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HTC_PASIC3=y</xsl:when>
			<xsl:when test=". = 'module'">HTC_PASIC3=m</xsl:when>
			<xsl:otherwise># HTC_PASIC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HTC_I2CPLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HTC_I2CPLD=y</xsl:when>
			<xsl:otherwise># HTC_I2CPLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_INTEL_QUARK_I2C_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_INTEL_QUARK_I2C_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_INTEL_QUARK_I2C_GPIO=m</xsl:when>
			<xsl:otherwise># MFD_INTEL_QUARK_I2C_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC_ICH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC_ICH=y</xsl:when>
			<xsl:when test=". = 'module'">LPC_ICH=m</xsl:when>
			<xsl:otherwise># LPC_ICH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC_SCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC_SCH=y</xsl:when>
			<xsl:when test=". = 'module'">LPC_SCH=m</xsl:when>
			<xsl:otherwise># LPC_SCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SOC_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SOC_PMIC=y</xsl:when>
			<xsl:otherwise># INTEL_SOC_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_INTEL_LPSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_INTEL_LPSS=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_INTEL_LPSS=m</xsl:when>
			<xsl:otherwise># MFD_INTEL_LPSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_INTEL_LPSS_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_INTEL_LPSS_ACPI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_INTEL_LPSS_ACPI=m</xsl:when>
			<xsl:otherwise># MFD_INTEL_LPSS_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_INTEL_LPSS_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_INTEL_LPSS_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_INTEL_LPSS_PCI=m</xsl:when>
			<xsl:otherwise># MFD_INTEL_LPSS_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_INTEL_MSIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_INTEL_MSIC=y</xsl:when>
			<xsl:otherwise># MFD_INTEL_MSIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_IPAQ_MICRO=y</xsl:when>
			<xsl:otherwise># MFD_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_JANZ_CMODIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_JANZ_CMODIO=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_JANZ_CMODIO=m</xsl:when>
			<xsl:otherwise># MFD_JANZ_CMODIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_JZ4740_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_JZ4740_ADC=y</xsl:when>
			<xsl:otherwise># MFD_JZ4740_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_KEMPLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_KEMPLD=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_KEMPLD=m</xsl:when>
			<xsl:otherwise># MFD_KEMPLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_88PM800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_88PM800=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_88PM800=m</xsl:when>
			<xsl:otherwise># MFD_88PM800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_88PM805">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_88PM805=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_88PM805=m</xsl:when>
			<xsl:otherwise># MFD_88PM805 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_88PM860X=y</xsl:when>
			<xsl:otherwise># MFD_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX14577">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX14577=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MAX14577=m</xsl:when>
			<xsl:otherwise># MFD_MAX14577 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX77620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX77620=y</xsl:when>
			<xsl:otherwise># MFD_MAX77620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX77686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX77686=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MAX77686=m</xsl:when>
			<xsl:otherwise># MFD_MAX77686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX77693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX77693=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MAX77693=m</xsl:when>
			<xsl:otherwise># MFD_MAX77693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX77843">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX77843=y</xsl:when>
			<xsl:otherwise># MFD_MAX77843 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX8907">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX8907=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MAX8907=m</xsl:when>
			<xsl:otherwise># MFD_MAX8907 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX8925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX8925=y</xsl:when>
			<xsl:otherwise># MFD_MAX8925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX8997=y</xsl:when>
			<xsl:otherwise># MFD_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MAX8998">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MAX8998=y</xsl:when>
			<xsl:otherwise># MFD_MAX8998 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MT6397">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MT6397=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MT6397=m</xsl:when>
			<xsl:otherwise># MFD_MT6397 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_MENF21BMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_MENF21BMC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_MENF21BMC=m</xsl:when>
			<xsl:otherwise># MFD_MENF21BMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EZX_PCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EZX_PCAP=y</xsl:when>
			<xsl:otherwise># EZX_PCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_VIPERBOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_VIPERBOARD=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_VIPERBOARD=m</xsl:when>
			<xsl:otherwise># MFD_VIPERBOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RETU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RETU=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RETU=m</xsl:when>
			<xsl:otherwise># MFD_RETU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_PCF50633">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_PCF50633=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_PCF50633=m</xsl:when>
			<xsl:otherwise># MFD_PCF50633 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCF50633_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCF50633_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">PCF50633_ADC=m</xsl:when>
			<xsl:otherwise># PCF50633_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCF50633_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCF50633_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">PCF50633_GPIO=m</xsl:when>
			<xsl:otherwise># PCF50633_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCB1400_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCB1400_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">UCB1400_CORE=m</xsl:when>
			<xsl:otherwise># UCB1400_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_PM8XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_PM8XXX=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_PM8XXX=m</xsl:when>
			<xsl:otherwise># MFD_PM8XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_PM8921_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_PM8921_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_PM8921_CORE=m</xsl:when>
			<xsl:otherwise># MFD_PM8921_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_QCOM_RPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_QCOM_RPM=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_QCOM_RPM=m</xsl:when>
			<xsl:otherwise># MFD_QCOM_RPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SPMI_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SPMI_PMIC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_SPMI_PMIC=m</xsl:when>
			<xsl:otherwise># MFD_SPMI_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RDC321X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RDC321X=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RDC321X=m</xsl:when>
			<xsl:otherwise># MFD_RDC321X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RTSX_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RTSX_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RTSX_PCI=m</xsl:when>
			<xsl:otherwise># MFD_RTSX_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RT5033">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RT5033=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RT5033=m</xsl:when>
			<xsl:otherwise># MFD_RT5033 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RTSX_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RTSX_USB=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RTSX_USB=m</xsl:when>
			<xsl:otherwise># MFD_RTSX_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RC5T583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RC5T583=y</xsl:when>
			<xsl:otherwise># MFD_RC5T583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RK808">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RK808=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RK808=m</xsl:when>
			<xsl:otherwise># MFD_RK808 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_RN5T618">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_RN5T618=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_RN5T618=m</xsl:when>
			<xsl:otherwise># MFD_RN5T618 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SEC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SEC_CORE=y</xsl:when>
			<xsl:otherwise># MFD_SEC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SI476X_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SI476X_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_SI476X_CORE=m</xsl:when>
			<xsl:otherwise># MFD_SI476X_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SM501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SM501=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_SM501=m</xsl:when>
			<xsl:otherwise># MFD_SM501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SM501_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SM501_GPIO=y</xsl:when>
			<xsl:otherwise># MFD_SM501_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SKY81452">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SKY81452=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_SKY81452=m</xsl:when>
			<xsl:otherwise># MFD_SKY81452 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SMSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SMSC=y</xsl:when>
			<xsl:otherwise># MFD_SMSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ABX500_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ABX500_CORE=y</xsl:when>
			<xsl:otherwise># ABX500_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB3100_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB3100_CORE=y</xsl:when>
			<xsl:otherwise># AB3100_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB3100_OTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB3100_OTP=y</xsl:when>
			<xsl:when test=". = 'module'">AB3100_OTP=m</xsl:when>
			<xsl:otherwise># AB3100_OTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB8500_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB8500_CORE=y</xsl:when>
			<xsl:otherwise># AB8500_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB8500_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB8500_DEBUG=y</xsl:when>
			<xsl:otherwise># AB8500_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB8500_GPADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB8500_GPADC=y</xsl:when>
			<xsl:otherwise># AB8500_GPADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DB8500_PRCMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DB8500_PRCMU=y</xsl:when>
			<xsl:otherwise># MFD_DB8500_PRCMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_STMPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_STMPE=y</xsl:when>
			<xsl:otherwise># MFD_STMPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMPE_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMPE_I2C=y</xsl:when>
			<xsl:otherwise># STMPE_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMPE_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMPE_SPI=y</xsl:when>
			<xsl:otherwise># STMPE_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_STA2X11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_STA2X11=y</xsl:when>
			<xsl:otherwise># MFD_STA2X11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SUN6I_PRCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SUN6I_PRCM=y</xsl:when>
			<xsl:otherwise># MFD_SUN6I_PRCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_SYSCON=y</xsl:when>
			<xsl:otherwise># MFD_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DAVINCI_VOICECODEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DAVINCI_VOICECODEC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_DAVINCI_VOICECODEC=m</xsl:when>
			<xsl:otherwise># MFD_DAVINCI_VOICECODEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TI_AM335X_TSCADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TI_AM335X_TSCADC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TI_AM335X_TSCADC=m</xsl:when>
			<xsl:otherwise># MFD_TI_AM335X_TSCADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_DM355EVM_MSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_DM355EVM_MSP=y</xsl:when>
			<xsl:otherwise># MFD_DM355EVM_MSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_LP3943">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_LP3943=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_LP3943=m</xsl:when>
			<xsl:otherwise># MFD_LP3943 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_LP8788=y</xsl:when>
			<xsl:otherwise># MFD_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_OMAP_USB_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_OMAP_USB_HOST=y</xsl:when>
			<xsl:otherwise># MFD_OMAP_USB_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_PALMAS=y</xsl:when>
			<xsl:otherwise># MFD_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TPS6105X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TPS6105X=y</xsl:when>
			<xsl:when test=". = 'module'">TPS6105X=m</xsl:when>
			<xsl:otherwise># TPS6105X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TPS65010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TPS65010=y</xsl:when>
			<xsl:when test=". = 'module'">TPS65010=m</xsl:when>
			<xsl:otherwise># TPS65010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TPS6507X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TPS6507X=y</xsl:when>
			<xsl:when test=". = 'module'">TPS6507X=m</xsl:when>
			<xsl:otherwise># TPS6507X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65086">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65086=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65086=m</xsl:when>
			<xsl:otherwise># MFD_TPS65086 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TPS65911_COMPARATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TPS65911_COMPARATOR=y</xsl:when>
			<xsl:when test=". = 'module'">TPS65911_COMPARATOR=m</xsl:when>
			<xsl:otherwise># TPS65911_COMPARATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65090=y</xsl:when>
			<xsl:otherwise># MFD_TPS65090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65217">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65217=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65217=m</xsl:when>
			<xsl:otherwise># MFD_TPS65217 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65218">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65218=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65218=m</xsl:when>
			<xsl:otherwise># MFD_TPS65218 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS6586X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS6586X=y</xsl:when>
			<xsl:otherwise># MFD_TPS6586X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65910">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65910=y</xsl:when>
			<xsl:otherwise># MFD_TPS65910 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65912">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65912=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65912=m</xsl:when>
			<xsl:otherwise># MFD_TPS65912 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65912_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65912_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65912_I2C=m</xsl:when>
			<xsl:otherwise># MFD_TPS65912_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS65912_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS65912_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TPS65912_SPI=m</xsl:when>
			<xsl:otherwise># MFD_TPS65912_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TPS80031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TPS80031=y</xsl:when>
			<xsl:otherwise># MFD_TPS80031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL4030_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL4030_CORE=y</xsl:when>
			<xsl:otherwise># TWL4030_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL4030_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL4030_POWER=y</xsl:when>
			<xsl:otherwise># TWL4030_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TWL4030_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TWL4030_AUDIO=y</xsl:when>
			<xsl:otherwise># MFD_TWL4030_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL6040_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL6040_CORE=y</xsl:when>
			<xsl:otherwise># TWL6040_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MENELAUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MENELAUS=y</xsl:when>
			<xsl:otherwise># MENELAUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WL1273_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WL1273_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_WL1273_CORE=m</xsl:when>
			<xsl:otherwise># MFD_WL1273_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_LM3533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_LM3533=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_LM3533=m</xsl:when>
			<xsl:otherwise># MFD_LM3533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TIMBERDALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TIMBERDALE=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_TIMBERDALE=m</xsl:when>
			<xsl:otherwise># MFD_TIMBERDALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TC3589X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TC3589X=y</xsl:when>
			<xsl:otherwise># MFD_TC3589X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TMIO=y</xsl:when>
			<xsl:otherwise># MFD_TMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_T7L66XB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_T7L66XB=y</xsl:when>
			<xsl:otherwise># MFD_T7L66XB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TC6387XB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TC6387XB=y</xsl:when>
			<xsl:otherwise># MFD_TC6387XB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_TC6393XB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_TC6393XB=y</xsl:when>
			<xsl:otherwise># MFD_TC6393XB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_VX855">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_VX855=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_VX855=m</xsl:when>
			<xsl:otherwise># MFD_VX855 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ARIZONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ARIZONA=y</xsl:when>
			<xsl:otherwise># MFD_ARIZONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ARIZONA_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ARIZONA_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_ARIZONA_I2C=m</xsl:when>
			<xsl:otherwise># MFD_ARIZONA_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_ARIZONA_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_ARIZONA_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_ARIZONA_SPI=m</xsl:when>
			<xsl:otherwise># MFD_ARIZONA_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_CS47L24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_CS47L24=y</xsl:when>
			<xsl:otherwise># MFD_CS47L24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM5102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM5102=y</xsl:when>
			<xsl:otherwise># MFD_WM5102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM5110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM5110=y</xsl:when>
			<xsl:otherwise># MFD_WM5110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8997=y</xsl:when>
			<xsl:otherwise># MFD_WM8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8998">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8998=y</xsl:when>
			<xsl:otherwise># MFD_WM8998 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8400=y</xsl:when>
			<xsl:otherwise># MFD_WM8400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM831X=y</xsl:when>
			<xsl:otherwise># MFD_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM831X_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM831X_I2C=y</xsl:when>
			<xsl:otherwise># MFD_WM831X_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM831X_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM831X_SPI=y</xsl:when>
			<xsl:otherwise># MFD_WM831X_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8350=y</xsl:when>
			<xsl:otherwise># MFD_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8350_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8350_I2C=y</xsl:when>
			<xsl:otherwise># MFD_WM8350_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_WM8994">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_WM8994=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_WM8994=m</xsl:when>
			<xsl:otherwise># MFD_WM8994 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_STW481X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_STW481X=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_STW481X=m</xsl:when>
			<xsl:otherwise># MFD_STW481X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP=y</xsl:when>
			<xsl:when test=". = 'module'">MCP=m</xsl:when>
			<xsl:otherwise># MCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP_SA11X0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP_SA11X0=y</xsl:when>
			<xsl:when test=". = 'module'">MCP_SA11X0=m</xsl:when>
			<xsl:otherwise># MCP_SA11X0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP_UCB1200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP_UCB1200=y</xsl:when>
			<xsl:when test=". = 'module'">MCP_UCB1200=m</xsl:when>
			<xsl:otherwise># MCP_UCB1200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP_UCB1200_TS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP_UCB1200_TS=y</xsl:when>
			<xsl:when test=". = 'module'">MCP_UCB1200_TS=m</xsl:when>
			<xsl:otherwise># MCP_UCB1200_TS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_VEXPRESS_SYSREG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_VEXPRESS_SYSREG=y</xsl:when>
			<xsl:otherwise># MFD_VEXPRESS_SYSREG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR=y</xsl:when>
			<xsl:otherwise># REGULATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DEBUG=y</xsl:when>
			<xsl:otherwise># REGULATOR_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_FIXED_VOLTAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_FIXED_VOLTAGE=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_FIXED_VOLTAGE=m</xsl:when>
			<xsl:otherwise># REGULATOR_FIXED_VOLTAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_VIRTUAL_CONSUMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_VIRTUAL_CONSUMER=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_VIRTUAL_CONSUMER=m</xsl:when>
			<xsl:otherwise># REGULATOR_VIRTUAL_CONSUMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_USERSPACE_CONSUMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_USERSPACE_CONSUMER=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_USERSPACE_CONSUMER=m</xsl:when>
			<xsl:otherwise># REGULATOR_USERSPACE_CONSUMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_88PM800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_88PM800=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_88PM800=m</xsl:when>
			<xsl:otherwise># REGULATOR_88PM800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_88PM8607">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_88PM8607=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_88PM8607=m</xsl:when>
			<xsl:otherwise># REGULATOR_88PM8607 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ACT8865">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ACT8865=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ACT8865=m</xsl:when>
			<xsl:otherwise># REGULATOR_ACT8865 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ACT8945A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ACT8945A=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ACT8945A=m</xsl:when>
			<xsl:otherwise># REGULATOR_ACT8945A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AD5398">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AD5398=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AD5398=m</xsl:when>
			<xsl:otherwise># REGULATOR_AD5398 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ANATOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ANATOP=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ANATOP=m</xsl:when>
			<xsl:otherwise># REGULATOR_ANATOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AAT2870">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AAT2870=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AAT2870=m</xsl:when>
			<xsl:otherwise># REGULATOR_AAT2870 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AB3100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AB3100=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AB3100=m</xsl:when>
			<xsl:otherwise># REGULATOR_AB3100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AB8500=y</xsl:when>
			<xsl:otherwise># REGULATOR_AB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ARIZONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ARIZONA=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ARIZONA=m</xsl:when>
			<xsl:otherwise># REGULATOR_ARIZONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AS3711">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AS3711=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AS3711=m</xsl:when>
			<xsl:otherwise># REGULATOR_AS3711 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AS3722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AS3722=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AS3722=m</xsl:when>
			<xsl:otherwise># REGULATOR_AS3722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_AXP20X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_AXP20X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_AXP20X=m</xsl:when>
			<xsl:otherwise># REGULATOR_AXP20X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_BCM590XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_BCM590XX=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_BCM590XX=m</xsl:when>
			<xsl:otherwise># REGULATOR_BCM590XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA903X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA903X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA903X=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA903X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9052=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9055">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9055=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9055=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9055 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9062">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9062=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9062=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9062 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9063">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9063=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9063=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9063 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9210">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9210=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9210=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9210 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DA9211">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DA9211=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_DA9211=m</xsl:when>
			<xsl:otherwise># REGULATOR_DA9211 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DBX500_PRCMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DBX500_PRCMU=y</xsl:when>
			<xsl:otherwise># REGULATOR_DBX500_PRCMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_DB8500_PRCMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_DB8500_PRCMU=y</xsl:when>
			<xsl:otherwise># REGULATOR_DB8500_PRCMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_FAN53555">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_FAN53555=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_FAN53555=m</xsl:when>
			<xsl:otherwise># REGULATOR_FAN53555 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_GPIO=m</xsl:when>
			<xsl:otherwise># REGULATOR_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_HI6421">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_HI6421=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_HI6421=m</xsl:when>
			<xsl:otherwise># REGULATOR_HI6421 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_HI655X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_HI655X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_HI655X=m</xsl:when>
			<xsl:otherwise># REGULATOR_HI655X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ISL9305">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ISL9305=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ISL9305=m</xsl:when>
			<xsl:otherwise># REGULATOR_ISL9305 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_ISL6271A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_ISL6271A=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_ISL6271A=m</xsl:when>
			<xsl:otherwise># REGULATOR_ISL6271A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LM363X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LM363X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LM363X=m</xsl:when>
			<xsl:otherwise># REGULATOR_LM363X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP3971">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP3971=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP3971=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP3971 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP3972">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP3972=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP3972=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP3972 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP872X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP872X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP872X=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP872X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP873X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP873X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP873X=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP873X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP8755">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP8755=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP8755=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP8755 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LP8788=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LP8788=m</xsl:when>
			<xsl:otherwise># REGULATOR_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_LTC3589">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_LTC3589=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_LTC3589=m</xsl:when>
			<xsl:otherwise># REGULATOR_LTC3589 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX14577">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX14577=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX14577=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX14577 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX1586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX1586=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX1586=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX1586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX77620">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX77620=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX77620=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX77620 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8649">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8649=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8649=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8649 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8660">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8660=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8660=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8660 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8907">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8907=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8907=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8907 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8925=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8925=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8952">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8952=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8952=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8952 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8973">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8973=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8973=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8973 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8997=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8997=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX8998">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX8998=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX8998=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX8998 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX77686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX77686=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX77686=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX77686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX77693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX77693=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX77693=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX77693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MAX77802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MAX77802=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MAX77802=m</xsl:when>
			<xsl:otherwise># REGULATOR_MAX77802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MC13XXX_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MC13XXX_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MC13XXX_CORE=m</xsl:when>
			<xsl:otherwise># REGULATOR_MC13XXX_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MC13783">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MC13783=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MC13783=m</xsl:when>
			<xsl:otherwise># REGULATOR_MC13783 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MC13892">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MC13892=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MC13892=m</xsl:when>
			<xsl:otherwise># REGULATOR_MC13892 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MT6311">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MT6311=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MT6311=m</xsl:when>
			<xsl:otherwise># REGULATOR_MT6311 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MT6323">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MT6323=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MT6323=m</xsl:when>
			<xsl:otherwise># REGULATOR_MT6323 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_MT6397">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_MT6397=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_MT6397=m</xsl:when>
			<xsl:otherwise># REGULATOR_MT6397 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PALMAS=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PALMAS=m</xsl:when>
			<xsl:otherwise># REGULATOR_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PBIAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PBIAS=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PBIAS=m</xsl:when>
			<xsl:otherwise># REGULATOR_PBIAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PCAP=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PCAP=m</xsl:when>
			<xsl:otherwise># REGULATOR_PCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PCF50633">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PCF50633=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PCF50633=m</xsl:when>
			<xsl:otherwise># REGULATOR_PCF50633 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PFUZE100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PFUZE100=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PFUZE100=m</xsl:when>
			<xsl:otherwise># REGULATOR_PFUZE100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PV88060">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PV88060=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PV88060=m</xsl:when>
			<xsl:otherwise># REGULATOR_PV88060 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PV88080">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PV88080=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PV88080=m</xsl:when>
			<xsl:otherwise># REGULATOR_PV88080 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PV88090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PV88090=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PV88090=m</xsl:when>
			<xsl:otherwise># REGULATOR_PV88090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_PWM=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_PWM=m</xsl:when>
			<xsl:otherwise># REGULATOR_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_QCOM_RPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_QCOM_RPM=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_QCOM_RPM=m</xsl:when>
			<xsl:otherwise># REGULATOR_QCOM_RPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_QCOM_SMD_RPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_QCOM_SMD_RPM=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_QCOM_SMD_RPM=m</xsl:when>
			<xsl:otherwise># REGULATOR_QCOM_SMD_RPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_QCOM_SPMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_QCOM_SPMI=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_QCOM_SPMI=m</xsl:when>
			<xsl:otherwise># REGULATOR_QCOM_SPMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_RC5T583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_RC5T583=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_RC5T583=m</xsl:when>
			<xsl:otherwise># REGULATOR_RC5T583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_RK808">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_RK808=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_RK808=m</xsl:when>
			<xsl:otherwise># REGULATOR_RK808 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_RN5T618">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_RN5T618=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_RN5T618=m</xsl:when>
			<xsl:otherwise># REGULATOR_RN5T618 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_RT5033">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_RT5033=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_RT5033=m</xsl:when>
			<xsl:otherwise># REGULATOR_RT5033 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_S2MPA01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_S2MPA01=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_S2MPA01=m</xsl:when>
			<xsl:otherwise># REGULATOR_S2MPA01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_S2MPS11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_S2MPS11=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_S2MPS11=m</xsl:when>
			<xsl:otherwise># REGULATOR_S2MPS11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_S5M8767">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_S5M8767=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_S5M8767=m</xsl:when>
			<xsl:otherwise># REGULATOR_S5M8767 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_SKY81452">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_SKY81452=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_SKY81452=m</xsl:when>
			<xsl:otherwise># REGULATOR_SKY81452 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TI_ABB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TI_ABB=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TI_ABB=m</xsl:when>
			<xsl:otherwise># REGULATOR_TI_ABB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_STW481X_VMMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_STW481X_VMMC=y</xsl:when>
			<xsl:otherwise># REGULATOR_STW481X_VMMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS51632">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS51632=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS51632=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS51632 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS6105X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS6105X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS6105X=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS6105X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS62360">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS62360=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS62360=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS62360 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65023">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65023=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65023=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65023 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS6507X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS6507X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS6507X=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS6507X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65086">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65086=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65086=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65086 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65090">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65090=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65090=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65090 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65217">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65217=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65217=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65217 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65218">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65218=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65218=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65218 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS6524X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS6524X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS6524X=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS6524X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS6586X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS6586X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS6586X=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS6586X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65910">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65910=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65910=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65910 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS65912">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS65912=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS65912=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS65912 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TPS80031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TPS80031=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TPS80031=m</xsl:when>
			<xsl:otherwise># REGULATOR_TPS80031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_TWL4030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_TWL4030=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_TWL4030=m</xsl:when>
			<xsl:otherwise># REGULATOR_TWL4030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_VEXPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_VEXPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_VEXPRESS=m</xsl:when>
			<xsl:otherwise># REGULATOR_VEXPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_WM831X=m</xsl:when>
			<xsl:otherwise># REGULATOR_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_WM8350=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_WM8350=m</xsl:when>
			<xsl:otherwise># REGULATOR_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_WM8400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_WM8400=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_WM8400=m</xsl:when>
			<xsl:otherwise># REGULATOR_WM8400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REGULATOR_WM8994">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REGULATOR_WM8994=y</xsl:when>
			<xsl:when test=". = 'module'">REGULATOR_WM8994=m</xsl:when>
			<xsl:otherwise># REGULATOR_WM8994 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_SUPPORT=y</xsl:when>
			<xsl:when test=". = 'module'">MEDIA_SUPPORT=m</xsl:when>
			<xsl:otherwise># MEDIA_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CAMERA_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CAMERA_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_CAMERA_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_ANALOG_TV_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_ANALOG_TV_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_ANALOG_TV_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_DIGITAL_TV_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_DIGITAL_TV_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_DIGITAL_TV_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_RADIO_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_RADIO_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_RADIO_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_SDR_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_SDR_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_SDR_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_RC_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_RC_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_RC_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CEC_EDID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CEC_EDID=y</xsl:when>
			<xsl:otherwise># MEDIA_CEC_EDID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CONTROLLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CONTROLLER=y</xsl:when>
			<xsl:otherwise># MEDIA_CONTROLLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CONTROLLER_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CONTROLLER_DVB=y</xsl:when>
			<xsl:otherwise># MEDIA_CONTROLLER_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DEV=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DEV=m</xsl:when>
			<xsl:otherwise># VIDEO_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_V4L2_SUBDEV_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_V4L2_SUBDEV_API=y</xsl:when>
			<xsl:otherwise># VIDEO_V4L2_SUBDEV_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_V4L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_V4L2=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_V4L2=m</xsl:when>
			<xsl:otherwise># VIDEO_V4L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ADV_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ADV_DEBUG=y</xsl:when>
			<xsl:otherwise># VIDEO_ADV_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_FIXED_MINOR_RANGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_FIXED_MINOR_RANGES=y</xsl:when>
			<xsl:otherwise># VIDEO_FIXED_MINOR_RANGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_PCI_SKELETON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_PCI_SKELETON=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_PCI_SKELETON=m</xsl:when>
			<xsl:otherwise># VIDEO_PCI_SKELETON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TUNER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TUNER=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TUNER=m</xsl:when>
			<xsl:otherwise># VIDEO_TUNER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L2_MEM2MEM_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L2_MEM2MEM_DEV=y</xsl:when>
			<xsl:when test=". = 'module'">V4L2_MEM2MEM_DEV=m</xsl:when>
			<xsl:otherwise># V4L2_MEM2MEM_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L2_FLASH_LED_CLASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L2_FLASH_LED_CLASS=y</xsl:when>
			<xsl:when test=". = 'module'">V4L2_FLASH_LED_CLASS=m</xsl:when>
			<xsl:otherwise># V4L2_FLASH_LED_CLASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF_GEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF_GEN=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF_GEN=m</xsl:when>
			<xsl:otherwise># VIDEOBUF_GEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF_DMA_SG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF_DMA_SG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF_DMA_SG=m</xsl:when>
			<xsl:otherwise># VIDEOBUF_DMA_SG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF_VMALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF_VMALLOC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF_VMALLOC=m</xsl:when>
			<xsl:otherwise># VIDEOBUF_VMALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF_DMA_CONTIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF_DMA_CONTIG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF_DMA_CONTIG=m</xsl:when>
			<xsl:otherwise># VIDEOBUF_DMA_CONTIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF_DVB=m</xsl:when>
			<xsl:otherwise># VIDEOBUF_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_CORE=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_MEMOPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_MEMOPS=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_MEMOPS=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_MEMOPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_DMA_CONTIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_DMA_CONTIG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_DMA_CONTIG=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_DMA_CONTIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_VMALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_VMALLOC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_VMALLOC=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_VMALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_DMA_SG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_DMA_SG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_DMA_SG=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_DMA_SG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOBUF2_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOBUF2_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEOBUF2_DVB=m</xsl:when>
			<xsl:otherwise># VIDEOBUF2_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_CORE=m</xsl:when>
			<xsl:otherwise># DVB_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_NET=y</xsl:when>
			<xsl:otherwise># DVB_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TTPCI_EEPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TTPCI_EEPROM=y</xsl:when>
			<xsl:when test=". = 'module'">TTPCI_EEPROM=m</xsl:when>
			<xsl:otherwise># TTPCI_EEPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_MAX_ADAPTERS">
		DVB_MAX_ADAPTERS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DVB_DYNAMIC_MINORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_DYNAMIC_MINORS=y</xsl:when>
			<xsl:otherwise># DVB_DYNAMIC_MINORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">RC_CORE=m</xsl:when>
			<xsl:otherwise># RC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_MAP=y</xsl:when>
			<xsl:when test=". = 'module'">RC_MAP=m</xsl:when>
			<xsl:otherwise># RC_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_DECODERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_DECODERS=y</xsl:when>
			<xsl:otherwise># RC_DECODERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC=m</xsl:when>
			<xsl:otherwise># LIRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_LIRC_CODEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_LIRC_CODEC=y</xsl:when>
			<xsl:when test=". = 'module'">IR_LIRC_CODEC=m</xsl:when>
			<xsl:otherwise># IR_LIRC_CODEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_NEC_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_NEC_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_NEC_DECODER=m</xsl:when>
			<xsl:otherwise># IR_NEC_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_RC5_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_RC5_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_RC5_DECODER=m</xsl:when>
			<xsl:otherwise># IR_RC5_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_RC6_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_RC6_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_RC6_DECODER=m</xsl:when>
			<xsl:otherwise># IR_RC6_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_JVC_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_JVC_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_JVC_DECODER=m</xsl:when>
			<xsl:otherwise># IR_JVC_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_SONY_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_SONY_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_SONY_DECODER=m</xsl:when>
			<xsl:otherwise># IR_SONY_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_SANYO_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_SANYO_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_SANYO_DECODER=m</xsl:when>
			<xsl:otherwise># IR_SANYO_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_SHARP_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_SHARP_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_SHARP_DECODER=m</xsl:when>
			<xsl:otherwise># IR_SHARP_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_MCE_KBD_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_MCE_KBD_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_MCE_KBD_DECODER=m</xsl:when>
			<xsl:otherwise># IR_MCE_KBD_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_XMP_DECODER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_XMP_DECODER=y</xsl:when>
			<xsl:when test=". = 'module'">IR_XMP_DECODER=m</xsl:when>
			<xsl:otherwise># IR_XMP_DECODER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_DEVICES=y</xsl:when>
			<xsl:otherwise># RC_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_ATI_REMOTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_ATI_REMOTE=y</xsl:when>
			<xsl:when test=". = 'module'">RC_ATI_REMOTE=m</xsl:when>
			<xsl:otherwise># RC_ATI_REMOTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_ENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_ENE=y</xsl:when>
			<xsl:when test=". = 'module'">IR_ENE=m</xsl:when>
			<xsl:otherwise># IR_ENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_HIX5HD2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_HIX5HD2=y</xsl:when>
			<xsl:when test=". = 'module'">IR_HIX5HD2=m</xsl:when>
			<xsl:otherwise># IR_HIX5HD2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMON=y</xsl:when>
			<xsl:when test=". = 'module'">IR_IMON=m</xsl:when>
			<xsl:otherwise># IR_IMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_MCEUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_MCEUSB=y</xsl:when>
			<xsl:when test=". = 'module'">IR_MCEUSB=m</xsl:when>
			<xsl:otherwise># IR_MCEUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_ITE_CIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_ITE_CIR=y</xsl:when>
			<xsl:when test=". = 'module'">IR_ITE_CIR=m</xsl:when>
			<xsl:otherwise># IR_ITE_CIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_FINTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_FINTEK=y</xsl:when>
			<xsl:when test=". = 'module'">IR_FINTEK=m</xsl:when>
			<xsl:otherwise># IR_FINTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_MESON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_MESON=y</xsl:when>
			<xsl:when test=". = 'module'">IR_MESON=m</xsl:when>
			<xsl:otherwise># IR_MESON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_NUVOTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_NUVOTON=y</xsl:when>
			<xsl:when test=". = 'module'">IR_NUVOTON=m</xsl:when>
			<xsl:otherwise># IR_NUVOTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_REDRAT3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_REDRAT3=y</xsl:when>
			<xsl:when test=". = 'module'">IR_REDRAT3=m</xsl:when>
			<xsl:otherwise># IR_REDRAT3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_STREAMZAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_STREAMZAP=y</xsl:when>
			<xsl:when test=". = 'module'">IR_STREAMZAP=m</xsl:when>
			<xsl:otherwise># IR_STREAMZAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_WINBOND_CIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_WINBOND_CIR=y</xsl:when>
			<xsl:when test=". = 'module'">IR_WINBOND_CIR=m</xsl:when>
			<xsl:otherwise># IR_WINBOND_CIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IGORPLUGUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IGORPLUGUSB=y</xsl:when>
			<xsl:when test=". = 'module'">IR_IGORPLUGUSB=m</xsl:when>
			<xsl:otherwise># IR_IGORPLUGUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IGUANA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IGUANA=y</xsl:when>
			<xsl:when test=". = 'module'">IR_IGUANA=m</xsl:when>
			<xsl:otherwise># IR_IGUANA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_TTUSBIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_TTUSBIR=y</xsl:when>
			<xsl:when test=". = 'module'">IR_TTUSBIR=m</xsl:when>
			<xsl:otherwise># IR_TTUSBIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_RX51">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_RX51=y</xsl:when>
			<xsl:when test=". = 'module'">IR_RX51=m</xsl:when>
			<xsl:otherwise># IR_RX51 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG=y</xsl:when>
			<xsl:when test=". = 'module'">IR_IMG=m</xsl:when>
			<xsl:otherwise># IR_IMG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_RAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_RAW=y</xsl:when>
			<xsl:otherwise># IR_IMG_RAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_HW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_HW=y</xsl:when>
			<xsl:otherwise># IR_IMG_HW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_NEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_NEC=y</xsl:when>
			<xsl:otherwise># IR_IMG_NEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_JVC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_JVC=y</xsl:when>
			<xsl:otherwise># IR_IMG_JVC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_SONY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_SONY=y</xsl:when>
			<xsl:otherwise># IR_IMG_SONY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_SHARP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_SHARP=y</xsl:when>
			<xsl:otherwise># IR_IMG_SHARP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_SANYO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_SANYO=y</xsl:when>
			<xsl:otherwise># IR_IMG_SANYO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_RC5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_RC5=y</xsl:when>
			<xsl:otherwise># IR_IMG_RC5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_IMG_RC6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_IMG_RC6=y</xsl:when>
			<xsl:otherwise># IR_IMG_RC6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_LOOPBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_LOOPBACK=y</xsl:when>
			<xsl:when test=". = 'module'">RC_LOOPBACK=m</xsl:when>
			<xsl:otherwise># RC_LOOPBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_GPIO_CIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_GPIO_CIR=y</xsl:when>
			<xsl:when test=". = 'module'">IR_GPIO_CIR=m</xsl:when>
			<xsl:otherwise># IR_GPIO_CIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RC_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RC_ST=y</xsl:when>
			<xsl:when test=". = 'module'">RC_ST=m</xsl:when>
			<xsl:otherwise># RC_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IR_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IR_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">IR_SUNXI=m</xsl:when>
			<xsl:otherwise># IR_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_USB_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_USB_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_USB_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_VIDEO_CLASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_VIDEO_CLASS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_VIDEO_CLASS=m</xsl:when>
			<xsl:otherwise># USB_VIDEO_CLASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_VIDEO_CLASS_INPUT_EVDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_VIDEO_CLASS_INPUT_EVDEV=y</xsl:when>
			<xsl:otherwise># USB_VIDEO_CLASS_INPUT_EVDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA=m</xsl:when>
			<xsl:otherwise># USB_GSPCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_M5602">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_M5602=y</xsl:when>
			<xsl:when test=". = 'module'">USB_M5602=m</xsl:when>
			<xsl:otherwise># USB_M5602 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STV06XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STV06XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STV06XX=m</xsl:when>
			<xsl:otherwise># USB_STV06XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GL860">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GL860=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GL860=m</xsl:when>
			<xsl:otherwise># USB_GL860 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_BENQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_BENQ=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_BENQ=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_BENQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_CONEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_CONEX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_CONEX=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_CONEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_CPIA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_CPIA1=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_CPIA1=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_CPIA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_DTCS033">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_DTCS033=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_DTCS033=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_DTCS033 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_ETOMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_ETOMS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_ETOMS=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_ETOMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_FINEPIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_FINEPIX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_FINEPIX=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_FINEPIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_JEILINJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_JEILINJ=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_JEILINJ=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_JEILINJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_JL2005BCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_JL2005BCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_JL2005BCD=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_JL2005BCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_KINECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_KINECT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_KINECT=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_KINECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_KONICA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_KONICA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_KONICA=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_KONICA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_MARS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_MARS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_MARS=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_MARS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_MR97310A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_MR97310A=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_MR97310A=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_MR97310A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_NW80X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_NW80X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_NW80X=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_NW80X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_OV519">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_OV519=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_OV519=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_OV519 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_OV534">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_OV534=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_OV534=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_OV534 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_OV534_9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_OV534_9=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_OV534_9=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_OV534_9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_PAC207">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_PAC207=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_PAC207=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_PAC207 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_PAC7302">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_PAC7302=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_PAC7302=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_PAC7302 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_PAC7311">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_PAC7311=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_PAC7311=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_PAC7311 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SE401">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SE401=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SE401=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SE401 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SN9C2028">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SN9C2028=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SN9C2028=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SN9C2028 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SN9C20X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SN9C20X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SN9C20X=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SN9C20X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SONIXB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SONIXB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SONIXB=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SONIXB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SONIXJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SONIXJ=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SONIXJ=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SONIXJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA500=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA500=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA501=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA501=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA505">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA505=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA505=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA505 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA506">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA506=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA506=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA506 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA508">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA508=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA508=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA508 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA561">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA561=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA561=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA561 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SPCA1528">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SPCA1528=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SPCA1528=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SPCA1528 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SQ905">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SQ905=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SQ905=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SQ905 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SQ905C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SQ905C=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SQ905C=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SQ905C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SQ930X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SQ930X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SQ930X=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SQ930X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_STK014">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_STK014=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_STK014=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_STK014 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_STK1135">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_STK1135=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_STK1135=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_STK1135 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_STV0680">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_STV0680=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_STV0680=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_STV0680 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_SUNPLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_SUNPLUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_SUNPLUS=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_SUNPLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_T613">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_T613=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_T613=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_T613 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_TOPRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_TOPRO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_TOPRO=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_TOPRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_TOUPTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_TOUPTEK=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_TOUPTEK=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_TOUPTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_TV8532">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_TV8532=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_TV8532=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_TV8532 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_VC032X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_VC032X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_VC032X=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_VC032X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_VICAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_VICAM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_VICAM=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_VICAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_XIRLINK_CIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_XIRLINK_CIT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_XIRLINK_CIT=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_XIRLINK_CIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GSPCA_ZC3XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GSPCA_ZC3XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GSPCA_ZC3XX=m</xsl:when>
			<xsl:otherwise># USB_GSPCA_ZC3XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PWC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PWC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PWC=m</xsl:when>
			<xsl:otherwise># USB_PWC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PWC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PWC_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_PWC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PWC_INPUT_EVDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PWC_INPUT_EVDEV=y</xsl:when>
			<xsl:otherwise># USB_PWC_INPUT_EVDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CPIA2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CPIA2=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CPIA2=m</xsl:when>
			<xsl:otherwise># VIDEO_CPIA2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ZR364XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ZR364XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ZR364XX=m</xsl:when>
			<xsl:otherwise># USB_ZR364XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STKWEBCAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STKWEBCAM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STKWEBCAM=m</xsl:when>
			<xsl:otherwise># USB_STKWEBCAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_S2255">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_S2255=y</xsl:when>
			<xsl:when test=". = 'module'">USB_S2255=m</xsl:when>
			<xsl:otherwise># USB_S2255 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_USBTV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_USBTV=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_USBTV=m</xsl:when>
			<xsl:otherwise># VIDEO_USBTV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_PVRUSB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_PVRUSB2=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_PVRUSB2=m</xsl:when>
			<xsl:otherwise># VIDEO_PVRUSB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_PVRUSB2_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_PVRUSB2_SYSFS=y</xsl:when>
			<xsl:otherwise># VIDEO_PVRUSB2_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_PVRUSB2_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_PVRUSB2_DVB=y</xsl:when>
			<xsl:otherwise># VIDEO_PVRUSB2_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_HDPVR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_HDPVR=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_HDPVR=m</xsl:when>
			<xsl:otherwise># VIDEO_HDPVR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_USBVISION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_USBVISION=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_USBVISION=m</xsl:when>
			<xsl:otherwise># VIDEO_USBVISION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_STK1160_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_STK1160_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_STK1160_COMMON=m</xsl:when>
			<xsl:otherwise># VIDEO_STK1160_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_STK1160_AC97">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_STK1160_AC97=y</xsl:when>
			<xsl:otherwise># VIDEO_STK1160_AC97 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_STK1160">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_STK1160=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_STK1160=m</xsl:when>
			<xsl:otherwise># VIDEO_STK1160 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_GO7007">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_GO7007=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_GO7007=m</xsl:when>
			<xsl:otherwise># VIDEO_GO7007 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_GO7007_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_GO7007_USB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_GO7007_USB=m</xsl:when>
			<xsl:otherwise># VIDEO_GO7007_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_GO7007_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_GO7007_LOADER=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_GO7007_LOADER=m</xsl:when>
			<xsl:otherwise># VIDEO_GO7007_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_GO7007_USB_S2250_BOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_GO7007_USB_S2250_BOARD=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_GO7007_USB_S2250_BOARD=m</xsl:when>
			<xsl:otherwise># VIDEO_GO7007_USB_S2250_BOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_AU0828">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_AU0828=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_AU0828=m</xsl:when>
			<xsl:otherwise># VIDEO_AU0828 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_AU0828_V4L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_AU0828_V4L2=y</xsl:when>
			<xsl:otherwise># VIDEO_AU0828_V4L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_AU0828_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_AU0828_RC=y</xsl:when>
			<xsl:otherwise># VIDEO_AU0828_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX231XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX231XX=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX231XX=m</xsl:when>
			<xsl:otherwise># VIDEO_CX231XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX231XX_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX231XX_RC=y</xsl:when>
			<xsl:otherwise># VIDEO_CX231XX_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX231XX_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX231XX_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX231XX_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_CX231XX_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX231XX_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX231XX_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX231XX_DVB=m</xsl:when>
			<xsl:otherwise># VIDEO_CX231XX_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TM6000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TM6000=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TM6000=m</xsl:when>
			<xsl:otherwise># VIDEO_TM6000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TM6000_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TM6000_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TM6000_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_TM6000_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TM6000_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TM6000_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TM6000_DVB=m</xsl:when>
			<xsl:otherwise># VIDEO_TM6000_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB=m</xsl:when>
			<xsl:otherwise># DVB_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DEBUG=y</xsl:when>
			<xsl:otherwise># DVB_USB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_A800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_A800=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_A800=m</xsl:when>
			<xsl:otherwise># DVB_USB_A800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DIBUSB_MB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DIBUSB_MB=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DIBUSB_MB=m</xsl:when>
			<xsl:otherwise># DVB_USB_DIBUSB_MB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DIBUSB_MB_FAULTY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DIBUSB_MB_FAULTY=y</xsl:when>
			<xsl:otherwise># DVB_USB_DIBUSB_MB_FAULTY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DIBUSB_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DIBUSB_MC=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DIBUSB_MC=m</xsl:when>
			<xsl:otherwise># DVB_USB_DIBUSB_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DIB0700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DIB0700=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DIB0700=m</xsl:when>
			<xsl:otherwise># DVB_USB_DIB0700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_UMT_010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_UMT_010=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_UMT_010=m</xsl:when>
			<xsl:otherwise># DVB_USB_UMT_010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_CXUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_CXUSB=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_CXUSB=m</xsl:when>
			<xsl:otherwise># DVB_USB_CXUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_M920X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_M920X=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_M920X=m</xsl:when>
			<xsl:otherwise># DVB_USB_M920X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DIGITV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DIGITV=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DIGITV=m</xsl:when>
			<xsl:otherwise># DVB_USB_DIGITV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_VP7045">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_VP7045=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_VP7045=m</xsl:when>
			<xsl:otherwise># DVB_USB_VP7045 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_VP702X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_VP702X=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_VP702X=m</xsl:when>
			<xsl:otherwise># DVB_USB_VP702X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_GP8PSK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_GP8PSK=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_GP8PSK=m</xsl:when>
			<xsl:otherwise># DVB_USB_GP8PSK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_NOVA_T_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_NOVA_T_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_NOVA_T_USB2=m</xsl:when>
			<xsl:otherwise># DVB_USB_NOVA_T_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_TTUSB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_TTUSB2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_TTUSB2=m</xsl:when>
			<xsl:otherwise># DVB_USB_TTUSB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DTT200U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DTT200U=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DTT200U=m</xsl:when>
			<xsl:otherwise># DVB_USB_DTT200U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_OPERA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_OPERA1=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_OPERA1=m</xsl:when>
			<xsl:otherwise># DVB_USB_OPERA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AF9005">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AF9005=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AF9005=m</xsl:when>
			<xsl:otherwise># DVB_USB_AF9005 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AF9005_REMOTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AF9005_REMOTE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AF9005_REMOTE=m</xsl:when>
			<xsl:otherwise># DVB_USB_AF9005_REMOTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_PCTV452E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_PCTV452E=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_PCTV452E=m</xsl:when>
			<xsl:otherwise># DVB_USB_PCTV452E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DW2102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DW2102=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DW2102=m</xsl:when>
			<xsl:otherwise># DVB_USB_DW2102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_CINERGY_T2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_CINERGY_T2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_CINERGY_T2=m</xsl:when>
			<xsl:otherwise># DVB_USB_CINERGY_T2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DTV5100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DTV5100=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DTV5100=m</xsl:when>
			<xsl:otherwise># DVB_USB_DTV5100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_FRIIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_FRIIO=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_FRIIO=m</xsl:when>
			<xsl:otherwise># DVB_USB_FRIIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AZ6027">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AZ6027=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AZ6027=m</xsl:when>
			<xsl:otherwise># DVB_USB_AZ6027 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_TECHNISAT_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_TECHNISAT_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_TECHNISAT_USB2=m</xsl:when>
			<xsl:otherwise># DVB_USB_TECHNISAT_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_V2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_V2=m</xsl:when>
			<xsl:otherwise># DVB_USB_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AF9015">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AF9015=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AF9015=m</xsl:when>
			<xsl:otherwise># DVB_USB_AF9015 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AF9035">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AF9035=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AF9035=m</xsl:when>
			<xsl:otherwise># DVB_USB_AF9035 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_ANYSEE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_ANYSEE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_ANYSEE=m</xsl:when>
			<xsl:otherwise># DVB_USB_ANYSEE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AU6610">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AU6610=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AU6610=m</xsl:when>
			<xsl:otherwise># DVB_USB_AU6610 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_AZ6007">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_AZ6007=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_AZ6007=m</xsl:when>
			<xsl:otherwise># DVB_USB_AZ6007 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_CE6230">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_CE6230=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_CE6230=m</xsl:when>
			<xsl:otherwise># DVB_USB_CE6230 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_EC168">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_EC168=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_EC168=m</xsl:when>
			<xsl:otherwise># DVB_USB_EC168 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_GL861">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_GL861=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_GL861=m</xsl:when>
			<xsl:otherwise># DVB_USB_GL861 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_LME2510">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_LME2510=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_LME2510=m</xsl:when>
			<xsl:otherwise># DVB_USB_LME2510 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_MXL111SF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_MXL111SF=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_MXL111SF=m</xsl:when>
			<xsl:otherwise># DVB_USB_MXL111SF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_RTL28XXU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_RTL28XXU=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_RTL28XXU=m</xsl:when>
			<xsl:otherwise># DVB_USB_RTL28XXU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_USB_DVBSKY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_USB_DVBSKY=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_USB_DVBSKY=m</xsl:when>
			<xsl:otherwise># DVB_USB_DVBSKY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_TTUSB_BUDGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_TTUSB_BUDGET=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_TTUSB_BUDGET=m</xsl:when>
			<xsl:otherwise># DVB_TTUSB_BUDGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_TTUSB_DEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_TTUSB_DEC=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_TTUSB_DEC=m</xsl:when>
			<xsl:otherwise># DVB_TTUSB_DEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMS_USB_DRV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMS_USB_DRV=y</xsl:when>
			<xsl:when test=". = 'module'">SMS_USB_DRV=m</xsl:when>
			<xsl:otherwise># SMS_USB_DRV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP_USB=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_B2C2_FLEXCOP_USB=m</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP_USB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP_USB_DEBUG=y</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP_USB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_AS102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_AS102=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_AS102=m</xsl:when>
			<xsl:otherwise># DVB_AS102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EM28XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EM28XX=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EM28XX=m</xsl:when>
			<xsl:otherwise># VIDEO_EM28XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EM28XX_V4L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EM28XX_V4L2=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EM28XX_V4L2=m</xsl:when>
			<xsl:otherwise># VIDEO_EM28XX_V4L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EM28XX_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EM28XX_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EM28XX_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_EM28XX_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EM28XX_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EM28XX_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EM28XX_DVB=m</xsl:when>
			<xsl:otherwise># VIDEO_EM28XX_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EM28XX_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EM28XX_RC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EM28XX_RC=m</xsl:when>
			<xsl:otherwise># VIDEO_EM28XX_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_AIRSPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_AIRSPY=y</xsl:when>
			<xsl:when test=". = 'module'">USB_AIRSPY=m</xsl:when>
			<xsl:otherwise># USB_AIRSPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HACKRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HACKRF=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HACKRF=m</xsl:when>
			<xsl:otherwise># USB_HACKRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MSI2500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MSI2500=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MSI2500=m</xsl:when>
			<xsl:otherwise># USB_MSI2500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_PCI_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_PCI_SUPPORT=y</xsl:when>
			<xsl:otherwise># MEDIA_PCI_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MEYE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MEYE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MEYE=m</xsl:when>
			<xsl:otherwise># VIDEO_MEYE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SOLO6X10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SOLO6X10=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SOLO6X10=m</xsl:when>
			<xsl:otherwise># VIDEO_SOLO6X10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STA2X11_VIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STA2X11_VIP=y</xsl:when>
			<xsl:when test=". = 'module'">STA2X11_VIP=m</xsl:when>
			<xsl:otherwise># STA2X11_VIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TW68">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TW68=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TW68=m</xsl:when>
			<xsl:otherwise># VIDEO_TW68 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TW686X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TW686X=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TW686X=m</xsl:when>
			<xsl:otherwise># VIDEO_TW686X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_DC30">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_DC30=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_DC30=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_DC30 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_ZR36060">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_ZR36060=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_ZR36060=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_ZR36060 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_BUZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_BUZ=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_BUZ=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_BUZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_DC10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_DC10=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_DC10=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_DC10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_LML33">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_LML33=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_LML33=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_LML33 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_LML33R10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_LML33R10=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_LML33R10=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_LML33R10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ZORAN_AVS6EYES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ZORAN_AVS6EYES=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ZORAN_AVS6EYES=m</xsl:when>
			<xsl:otherwise># VIDEO_ZORAN_AVS6EYES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_IVTV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_IVTV=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_IVTV=m</xsl:when>
			<xsl:otherwise># VIDEO_IVTV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_IVTV_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_IVTV_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_IVTV_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_IVTV_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_FB_IVTV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_FB_IVTV=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_FB_IVTV=m</xsl:when>
			<xsl:otherwise># VIDEO_FB_IVTV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_HEXIUM_GEMINI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_HEXIUM_GEMINI=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_HEXIUM_GEMINI=m</xsl:when>
			<xsl:otherwise># VIDEO_HEXIUM_GEMINI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_HEXIUM_ORION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_HEXIUM_ORION=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_HEXIUM_ORION=m</xsl:when>
			<xsl:otherwise># VIDEO_HEXIUM_ORION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MXB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MXB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MXB=m</xsl:when>
			<xsl:otherwise># VIDEO_MXB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DT3155">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DT3155=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DT3155=m</xsl:when>
			<xsl:otherwise># VIDEO_DT3155 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX18">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX18=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX18=m</xsl:when>
			<xsl:otherwise># VIDEO_CX18 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX18_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX18_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX18_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_CX18_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX23885">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX23885=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX23885=m</xsl:when>
			<xsl:otherwise># VIDEO_CX23885 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_ALTERA_CI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_ALTERA_CI=y</xsl:when>
			<xsl:when test=". = 'module'">MEDIA_ALTERA_CI=m</xsl:when>
			<xsl:otherwise># MEDIA_ALTERA_CI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX25821">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX25821=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX25821=m</xsl:when>
			<xsl:otherwise># VIDEO_CX25821 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX25821_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX25821_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX25821_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_CX25821_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_BLACKBIRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_BLACKBIRD=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88_BLACKBIRD=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88_BLACKBIRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88_DVB=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_ENABLE_VP3054">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_ENABLE_VP3054=y</xsl:when>
			<xsl:otherwise># VIDEO_CX88_ENABLE_VP3054 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_VP3054">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_VP3054=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88_VP3054=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88_VP3054 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX88_MPEG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX88_MPEG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX88_MPEG=m</xsl:when>
			<xsl:otherwise># VIDEO_CX88_MPEG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_BT848">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_BT848=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_BT848=m</xsl:when>
			<xsl:otherwise># VIDEO_BT848 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BT8XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BT8XX=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BT8XX=m</xsl:when>
			<xsl:otherwise># DVB_BT8XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7134">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7134=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7134=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7134 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7134_ALSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7134_ALSA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7134_ALSA=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7134_ALSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7134_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7134_RC=y</xsl:when>
			<xsl:otherwise># VIDEO_SAA7134_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7134_DVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7134_DVB=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7134_DVB=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7134_DVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7134_GO7007">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7134_GO7007=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7134_GO7007=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7134_GO7007 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7164">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7164=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7164=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7164 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_COBALT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_COBALT=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_COBALT=m</xsl:when>
			<xsl:otherwise># VIDEO_COBALT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_AV7110_IR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_AV7110_IR=y</xsl:when>
			<xsl:otherwise># DVB_AV7110_IR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_AV7110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_AV7110=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_AV7110=m</xsl:when>
			<xsl:otherwise># DVB_AV7110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_AV7110_OSD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_AV7110_OSD=y</xsl:when>
			<xsl:otherwise># DVB_AV7110_OSD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BUDGET_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BUDGET_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BUDGET_CORE=m</xsl:when>
			<xsl:otherwise># DVB_BUDGET_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BUDGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BUDGET=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BUDGET=m</xsl:when>
			<xsl:otherwise># DVB_BUDGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BUDGET_CI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BUDGET_CI=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BUDGET_CI=m</xsl:when>
			<xsl:otherwise># DVB_BUDGET_CI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BUDGET_AV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BUDGET_AV=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BUDGET_AV=m</xsl:when>
			<xsl:otherwise># DVB_BUDGET_AV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_BUDGET_PATCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_BUDGET_PATCH=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_BUDGET_PATCH=m</xsl:when>
			<xsl:otherwise># DVB_BUDGET_PATCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_B2C2_FLEXCOP_PCI=m</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP_PCI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP_PCI_DEBUG=y</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP_PCI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_PLUTO2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_PLUTO2=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_PLUTO2=m</xsl:when>
			<xsl:otherwise># DVB_PLUTO2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_DM1105">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_DM1105=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_DM1105=m</xsl:when>
			<xsl:otherwise># DVB_DM1105 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_PT1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_PT1=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_PT1=m</xsl:when>
			<xsl:otherwise># DVB_PT1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_PT3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_PT3=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_PT3=m</xsl:when>
			<xsl:otherwise># DVB_PT3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MANTIS_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MANTIS_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MANTIS_CORE=m</xsl:when>
			<xsl:otherwise># MANTIS_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_MANTIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_MANTIS=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_MANTIS=m</xsl:when>
			<xsl:otherwise># DVB_MANTIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_HOPPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_HOPPER=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_HOPPER=m</xsl:when>
			<xsl:otherwise># DVB_HOPPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_NGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_NGENE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_NGENE=m</xsl:when>
			<xsl:otherwise># DVB_NGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_DDBRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_DDBRIDGE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_DDBRIDGE=m</xsl:when>
			<xsl:otherwise># DVB_DDBRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_SMIPCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_SMIPCIE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_SMIPCIE=m</xsl:when>
			<xsl:otherwise># DVB_SMIPCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_NETUP_UNIDVB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_NETUP_UNIDVB=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_NETUP_UNIDVB=m</xsl:when>
			<xsl:otherwise># DVB_NETUP_UNIDVB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L_PLATFORM_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L_PLATFORM_DRIVERS=y</xsl:when>
			<xsl:otherwise># V4L_PLATFORM_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CAFE_CCIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CAFE_CCIC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CAFE_CCIC=m</xsl:when>
			<xsl:otherwise># VIDEO_CAFE_CCIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MMP_CAMERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MMP_CAMERA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MMP_CAMERA=m</xsl:when>
			<xsl:otherwise># VIDEO_MMP_CAMERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_VIA_CAMERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_VIA_CAMERA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_VIA_CAMERA=m</xsl:when>
			<xsl:otherwise># VIDEO_VIA_CAMERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DAVINCI_VPIF_DISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DAVINCI_VPIF_DISPLAY=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DAVINCI_VPIF_DISPLAY=m</xsl:when>
			<xsl:otherwise># VIDEO_DAVINCI_VPIF_DISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DAVINCI_VPIF_CAPTURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DAVINCI_VPIF_CAPTURE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DAVINCI_VPIF_CAPTURE=m</xsl:when>
			<xsl:otherwise># VIDEO_DAVINCI_VPIF_CAPTURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DM6446_CCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DM6446_CCDC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DM6446_CCDC=m</xsl:when>
			<xsl:otherwise># VIDEO_DM6446_CCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DM355_CCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DM355_CCDC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DM355_CCDC=m</xsl:when>
			<xsl:otherwise># VIDEO_DM355_CCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DM365_ISIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DM365_ISIF=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DM365_ISIF=m</xsl:when>
			<xsl:otherwise># VIDEO_DM365_ISIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DAVINCI_VPBE_DISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DAVINCI_VPBE_DISPLAY=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DAVINCI_VPBE_DISPLAY=m</xsl:when>
			<xsl:otherwise># VIDEO_DAVINCI_VPBE_DISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_OMAP2_VOUT_VRFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_OMAP2_VOUT_VRFB=y</xsl:when>
			<xsl:otherwise># VIDEO_OMAP2_VOUT_VRFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_OMAP2_VOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_OMAP2_VOUT=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_OMAP2_VOUT=m</xsl:when>
			<xsl:otherwise># VIDEO_OMAP2_VOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_BLACKFIN_CAPTURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_BLACKFIN_CAPTURE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_BLACKFIN_CAPTURE=m</xsl:when>
			<xsl:otherwise># VIDEO_BLACKFIN_CAPTURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_BLACKFIN_PPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_BLACKFIN_PPI=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_BLACKFIN_PPI=m</xsl:when>
			<xsl:otherwise># VIDEO_BLACKFIN_PPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SH_VOU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SH_VOU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SH_VOU=m</xsl:when>
			<xsl:otherwise># VIDEO_SH_VOU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_VIU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_VIU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_VIU=m</xsl:when>
			<xsl:otherwise># VIDEO_VIU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_M32R_AR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_M32R_AR=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_M32R_AR=m</xsl:when>
			<xsl:otherwise># VIDEO_M32R_AR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_M32R_AR_M64278">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_M32R_AR_M64278=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_M32R_AR_M64278=m</xsl:when>
			<xsl:otherwise># VIDEO_M32R_AR_M64278 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_OMAP3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_OMAP3=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_OMAP3=m</xsl:when>
			<xsl:otherwise># VIDEO_OMAP3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_OMAP3_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_OMAP3_DEBUG=y</xsl:when>
			<xsl:otherwise># VIDEO_OMAP3_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_S3C_CAMIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_S3C_CAMIF=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_S3C_CAMIF=m</xsl:when>
			<xsl:otherwise># VIDEO_S3C_CAMIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_CAMERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_CAMERA=y</xsl:when>
			<xsl:when test=". = 'module'">SOC_CAMERA=m</xsl:when>
			<xsl:otherwise># SOC_CAMERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_CAMERA_SCALE_CROP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_CAMERA_SCALE_CROP=y</xsl:when>
			<xsl:when test=". = 'module'">SOC_CAMERA_SCALE_CROP=m</xsl:when>
			<xsl:otherwise># SOC_CAMERA_SCALE_CROP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_CAMERA_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_CAMERA_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">SOC_CAMERA_PLATFORM=m</xsl:when>
			<xsl:otherwise># SOC_CAMERA_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_PXA27x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_PXA27x=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_PXA27x=m</xsl:when>
			<xsl:otherwise># VIDEO_PXA27x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_RCAR_VIN_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_RCAR_VIN_OLD=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_RCAR_VIN_OLD=m</xsl:when>
			<xsl:otherwise># VIDEO_RCAR_VIN_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SH_MOBILE_CSI2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SH_MOBILE_CSI2=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SH_MOBILE_CSI2=m</xsl:when>
			<xsl:otherwise># VIDEO_SH_MOBILE_CSI2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SH_MOBILE_CEU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SH_MOBILE_CEU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SH_MOBILE_CEU=m</xsl:when>
			<xsl:otherwise># VIDEO_SH_MOBILE_CEU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_ATMEL_ISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_ATMEL_ISI=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_ATMEL_ISI=m</xsl:when>
			<xsl:otherwise># VIDEO_ATMEL_ISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_EXYNOS4_IS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_EXYNOS4_IS=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_EXYNOS4_IS=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_EXYNOS4_IS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EXYNOS4_IS_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EXYNOS4_IS_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EXYNOS4_IS_COMMON=m</xsl:when>
			<xsl:otherwise># VIDEO_EXYNOS4_IS_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_S5P_FIMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_S5P_FIMC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_S5P_FIMC=m</xsl:when>
			<xsl:otherwise># VIDEO_S5P_FIMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_S5P_MIPI_CSIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_S5P_MIPI_CSIS=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_S5P_MIPI_CSIS=m</xsl:when>
			<xsl:otherwise># VIDEO_S5P_MIPI_CSIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EXYNOS_FIMC_LITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EXYNOS_FIMC_LITE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EXYNOS_FIMC_LITE=m</xsl:when>
			<xsl:otherwise># VIDEO_EXYNOS_FIMC_LITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EXYNOS4_FIMC_IS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EXYNOS4_FIMC_IS=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_EXYNOS4_FIMC_IS=m</xsl:when>
			<xsl:otherwise># VIDEO_EXYNOS4_FIMC_IS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_EXYNOS4_ISP_DMA_CAPTURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_EXYNOS4_ISP_DMA_CAPTURE=y</xsl:when>
			<xsl:otherwise># VIDEO_EXYNOS4_ISP_DMA_CAPTURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_TV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_TV=y</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_TV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_HDMI=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_HDMI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_HDMI_DEBUG=y</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_HDMI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_HDMIPHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_HDMIPHY=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_HDMIPHY=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_HDMIPHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_SII9234">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_SII9234=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_SII9234=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_SII9234 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_SDO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_SDO=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_SDO=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_SDO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_MIXER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_MIXER=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_MIXER=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_MIXER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_MIXER_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_MIXER_DEBUG=y</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_MIXER_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_AM437X_VPFE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_AM437X_VPFE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_AM437X_VPFE=m</xsl:when>
			<xsl:otherwise># VIDEO_AM437X_VPFE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_XILINX=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_XILINX=m</xsl:when>
			<xsl:otherwise># VIDEO_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_XILINX_TPG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_XILINX_TPG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_XILINX_TPG=m</xsl:when>
			<xsl:otherwise># VIDEO_XILINX_TPG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_XILINX_VTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_XILINX_VTC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_XILINX_VTC=m</xsl:when>
			<xsl:otherwise># VIDEO_XILINX_VTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_RCAR_VIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_RCAR_VIN=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_RCAR_VIN=m</xsl:when>
			<xsl:otherwise># VIDEO_RCAR_VIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TI_CAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TI_CAL=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TI_CAL=m</xsl:when>
			<xsl:otherwise># VIDEO_TI_CAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L_MEM2MEM_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L_MEM2MEM_DRIVERS=y</xsl:when>
			<xsl:otherwise># V4L_MEM2MEM_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CODA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CODA=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CODA=m</xsl:when>
			<xsl:otherwise># VIDEO_CODA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MEDIATEK_VPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MEDIATEK_VPU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MEDIATEK_VPU=m</xsl:when>
			<xsl:otherwise># VIDEO_MEDIATEK_VPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MEDIATEK_VCODEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MEDIATEK_VCODEC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MEDIATEK_VCODEC=m</xsl:when>
			<xsl:otherwise># VIDEO_MEDIATEK_VCODEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MEM2MEM_DEINTERLACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MEM2MEM_DEINTERLACE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MEM2MEM_DEINTERLACE=m</xsl:when>
			<xsl:otherwise># VIDEO_MEM2MEM_DEINTERLACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_G2D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_G2D=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_G2D=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_G2D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_JPEG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_JPEG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_JPEG=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_JPEG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_MFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_MFC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_MFC=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_MFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_MX2_EMMAPRP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_MX2_EMMAPRP=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_MX2_EMMAPRP=m</xsl:when>
			<xsl:otherwise># VIDEO_MX2_EMMAPRP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_EXYNOS_GSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_EXYNOS_GSC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_EXYNOS_GSC=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_EXYNOS_GSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_STI_BDISP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_STI_BDISP=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_STI_BDISP=m</xsl:when>
			<xsl:otherwise># VIDEO_STI_BDISP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SH_VEU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SH_VEU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SH_VEU=m</xsl:when>
			<xsl:otherwise># VIDEO_SH_VEU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_RENESAS_JPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_RENESAS_JPU=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_RENESAS_JPU=m</xsl:when>
			<xsl:otherwise># VIDEO_RENESAS_JPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_RENESAS_FCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_RENESAS_FCP=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_RENESAS_FCP=m</xsl:when>
			<xsl:otherwise># VIDEO_RENESAS_FCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_RENESAS_VSP1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_RENESAS_VSP1=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_RENESAS_VSP1=m</xsl:when>
			<xsl:otherwise># VIDEO_RENESAS_VSP1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TI_VPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TI_VPE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TI_VPE=m</xsl:when>
			<xsl:otherwise># VIDEO_TI_VPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TI_VPE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TI_VPE_DEBUG=y</xsl:when>
			<xsl:otherwise># VIDEO_TI_VPE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L_TEST_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L_TEST_DRIVERS=y</xsl:when>
			<xsl:otherwise># V4L_TEST_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_VIVID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_VIVID=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_VIVID=m</xsl:when>
			<xsl:otherwise># VIDEO_VIVID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_VIVID_CEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_VIVID_CEC=y</xsl:when>
			<xsl:otherwise># VIDEO_VIVID_CEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_VIVID_MAX_DEVS">
		VIDEO_VIVID_MAX_DEVS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="VIDEO_VIM2M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_VIM2M=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_VIM2M=m</xsl:when>
			<xsl:otherwise># VIDEO_VIM2M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_PLATFORM_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_PLATFORM_DRIVERS=y</xsl:when>
			<xsl:otherwise># DVB_PLATFORM_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_C8SECTPFE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_C8SECTPFE=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_C8SECTPFE=m</xsl:when>
			<xsl:otherwise># DVB_C8SECTPFE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMS_SDIO_DRV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMS_SDIO_DRV=y</xsl:when>
			<xsl:when test=". = 'module'">SMS_SDIO_DRV=m</xsl:when>
			<xsl:otherwise># SMS_SDIO_DRV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_ADAPTERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_ADAPTERS=y</xsl:when>
			<xsl:otherwise># RADIO_ADAPTERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TEA575X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TEA575X=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TEA575X=m</xsl:when>
			<xsl:otherwise># RADIO_TEA575X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SI470X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SI470X=y</xsl:when>
			<xsl:otherwise># RADIO_SI470X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SI470X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SI470X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SI470X=m</xsl:when>
			<xsl:otherwise># USB_SI470X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SI470X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SI470X=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SI470X=m</xsl:when>
			<xsl:otherwise># I2C_SI470X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SI4713">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SI4713=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SI4713=m</xsl:when>
			<xsl:otherwise># RADIO_SI4713 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SI4713">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SI4713=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SI4713=m</xsl:when>
			<xsl:otherwise># USB_SI4713 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PLATFORM_SI4713">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PLATFORM_SI4713=y</xsl:when>
			<xsl:when test=". = 'module'">PLATFORM_SI4713=m</xsl:when>
			<xsl:otherwise># PLATFORM_SI4713 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_SI4713">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_SI4713=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_SI4713=m</xsl:when>
			<xsl:otherwise># I2C_SI4713 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SI476X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SI476X=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SI476X=m</xsl:when>
			<xsl:otherwise># RADIO_SI476X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MR800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MR800=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MR800=m</xsl:when>
			<xsl:otherwise># USB_MR800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DSBR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DSBR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DSBR=m</xsl:when>
			<xsl:otherwise># USB_DSBR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_MAXIRADIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_MAXIRADIO=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_MAXIRADIO=m</xsl:when>
			<xsl:otherwise># RADIO_MAXIRADIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SHARK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SHARK=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SHARK=m</xsl:when>
			<xsl:otherwise># RADIO_SHARK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SHARK2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SHARK2=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SHARK2=m</xsl:when>
			<xsl:otherwise># RADIO_SHARK2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_KEENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_KEENE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_KEENE=m</xsl:when>
			<xsl:otherwise># USB_KEENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RAREMONO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RAREMONO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RAREMONO=m</xsl:when>
			<xsl:otherwise># USB_RAREMONO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MA901">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MA901=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MA901=m</xsl:when>
			<xsl:otherwise># USB_MA901 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TEA5764">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TEA5764=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TEA5764=m</xsl:when>
			<xsl:otherwise># RADIO_TEA5764 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TEA5764_XTAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TEA5764_XTAL=y</xsl:when>
			<xsl:otherwise># RADIO_TEA5764_XTAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SAA7706H">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SAA7706H=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SAA7706H=m</xsl:when>
			<xsl:otherwise># RADIO_SAA7706H is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TEF6862">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TEF6862=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TEF6862=m</xsl:when>
			<xsl:otherwise># RADIO_TEF6862 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TIMBERDALE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TIMBERDALE=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TIMBERDALE=m</xsl:when>
			<xsl:otherwise># RADIO_TIMBERDALE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_WL1273">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_WL1273=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_WL1273=m</xsl:when>
			<xsl:otherwise># RADIO_WL1273 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_WL128X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_WL128X=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_WL128X=m</xsl:when>
			<xsl:otherwise># RADIO_WL128X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="V4L_RADIO_ISA_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">V4L_RADIO_ISA_DRIVERS=y</xsl:when>
			<xsl:otherwise># V4L_RADIO_ISA_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_ISA=m</xsl:when>
			<xsl:otherwise># RADIO_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_CADET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_CADET=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_CADET=m</xsl:when>
			<xsl:otherwise># RADIO_CADET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_RTRACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_RTRACK=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_RTRACK=m</xsl:when>
			<xsl:otherwise># RADIO_RTRACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_RTRACK2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_RTRACK2=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_RTRACK2=m</xsl:when>
			<xsl:otherwise># RADIO_RTRACK2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_AZTECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_AZTECH=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_AZTECH=m</xsl:when>
			<xsl:otherwise># RADIO_AZTECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_GEMTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_GEMTEK=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_GEMTEK=m</xsl:when>
			<xsl:otherwise># RADIO_GEMTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_GEMTEK_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_GEMTEK_PROBE=y</xsl:when>
			<xsl:otherwise># RADIO_GEMTEK_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_MIROPCM20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_MIROPCM20=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_MIROPCM20=m</xsl:when>
			<xsl:otherwise># RADIO_MIROPCM20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SF16FMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SF16FMI=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SF16FMI=m</xsl:when>
			<xsl:otherwise># RADIO_SF16FMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_SF16FMR2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_SF16FMR2=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_SF16FMR2=m</xsl:when>
			<xsl:otherwise># RADIO_SF16FMR2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TERRATEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TERRATEC=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TERRATEC=m</xsl:when>
			<xsl:otherwise># RADIO_TERRATEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TRUST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TRUST=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TRUST=m</xsl:when>
			<xsl:otherwise># RADIO_TRUST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TYPHOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_TYPHOON=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_TYPHOON=m</xsl:when>
			<xsl:otherwise># RADIO_TYPHOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIO_TYPHOON_MUTEFREQ">
		RADIO_TYPHOON_MUTEFREQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RADIO_ZOLTRIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIO_ZOLTRIX=y</xsl:when>
			<xsl:when test=". = 'module'">RADIO_ZOLTRIX=m</xsl:when>
			<xsl:otherwise># RADIO_ZOLTRIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_FIREDTV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_FIREDTV=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_FIREDTV=m</xsl:when>
			<xsl:otherwise># DVB_FIREDTV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_FIREDTV_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_FIREDTV_INPUT=y</xsl:when>
			<xsl:otherwise># DVB_FIREDTV_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_COMMON_OPTIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_COMMON_OPTIONS=y</xsl:when>
			<xsl:otherwise># MEDIA_COMMON_OPTIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_CX2341X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_CX2341X=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_CX2341X=m</xsl:when>
			<xsl:otherwise># VIDEO_CX2341X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TVEEPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TVEEPROM=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TVEEPROM=m</xsl:when>
			<xsl:otherwise># VIDEO_TVEEPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CYPRESS_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CYPRESS_FIRMWARE=y</xsl:when>
			<xsl:when test=". = 'module'">CYPRESS_FIRMWARE=m</xsl:when>
			<xsl:otherwise># CYPRESS_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_B2C2_FLEXCOP=m</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_B2C2_FLEXCOP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_B2C2_FLEXCOP_DEBUG=y</xsl:when>
			<xsl:otherwise># DVB_B2C2_FLEXCOP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7146">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7146=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7146=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7146 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAA7146_VV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAA7146_VV=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAA7146_VV=m</xsl:when>
			<xsl:otherwise># VIDEO_SAA7146_VV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMS_SIANO_MDTV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMS_SIANO_MDTV=y</xsl:when>
			<xsl:when test=". = 'module'">SMS_SIANO_MDTV=m</xsl:when>
			<xsl:otherwise># SMS_SIANO_MDTV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMS_SIANO_RC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMS_SIANO_RC=y</xsl:when>
			<xsl:otherwise># SMS_SIANO_RC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMS_SIANO_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMS_SIANO_DEBUGFS=y</xsl:when>
			<xsl:otherwise># SMS_SIANO_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_V4L2_TPG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_V4L2_TPG=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_V4L2_TPG=m</xsl:when>
			<xsl:otherwise># VIDEO_V4L2_TPG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_SUBDRV_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_SUBDRV_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># MEDIA_SUBDRV_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_ATTACH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_ATTACH=y</xsl:when>
			<xsl:otherwise># MEDIA_ATTACH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_IR_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_IR_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_IR_I2C=m</xsl:when>
			<xsl:otherwise># VIDEO_IR_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_TUNER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_TUNER=y</xsl:when>
			<xsl:when test=". = 'module'">MEDIA_TUNER=m</xsl:when>
			<xsl:otherwise># MEDIA_TUNER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_FB_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_FB_ATMEL=y</xsl:when>
			<xsl:otherwise># HAVE_FB_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_LCD_MIPI_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_LCD_MIPI_DSI=y</xsl:when>
			<xsl:otherwise># SH_LCD_MIPI_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP=y</xsl:when>
			<xsl:when test=". = 'module'">AGP=m</xsl:when>
			<xsl:otherwise># AGP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_ALI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_ALI=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_ALI=m</xsl:when>
			<xsl:otherwise># AGP_ALI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_ATI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_ATI=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_ATI=m</xsl:when>
			<xsl:otherwise># AGP_ATI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_AMD=m</xsl:when>
			<xsl:otherwise># AGP_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_AMD64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_AMD64=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_AMD64=m</xsl:when>
			<xsl:otherwise># AGP_AMD64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_INTEL=m</xsl:when>
			<xsl:otherwise># AGP_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_NVIDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_NVIDIA=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_NVIDIA=m</xsl:when>
			<xsl:otherwise># AGP_NVIDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_SIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_SIS=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_SIS=m</xsl:when>
			<xsl:otherwise># AGP_SIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_SWORKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_SWORKS=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_SWORKS=m</xsl:when>
			<xsl:otherwise># AGP_SWORKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_VIA=m</xsl:when>
			<xsl:otherwise># AGP_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_I460">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_I460=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_I460=m</xsl:when>
			<xsl:otherwise># AGP_I460 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_HP_ZX1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_HP_ZX1=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_HP_ZX1=m</xsl:when>
			<xsl:otherwise># AGP_HP_ZX1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_PARISC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_PARISC=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_PARISC=m</xsl:when>
			<xsl:otherwise># AGP_PARISC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_ALPHA_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_ALPHA_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_ALPHA_CORE=m</xsl:when>
			<xsl:otherwise># AGP_ALPHA_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_UNINORTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_UNINORTH=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_UNINORTH=m</xsl:when>
			<xsl:otherwise># AGP_UNINORTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_EFFICEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_EFFICEON=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_EFFICEON=m</xsl:when>
			<xsl:otherwise># AGP_EFFICEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AGP_SGI_TIOCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AGP_SGI_TIOCA=y</xsl:when>
			<xsl:when test=". = 'module'">AGP_SGI_TIOCA=m</xsl:when>
			<xsl:otherwise># AGP_SGI_TIOCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_GTT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_GTT=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_GTT=m</xsl:when>
			<xsl:otherwise># INTEL_GTT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGA_ARB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VGA_ARB=y</xsl:when>
			<xsl:otherwise># VGA_ARB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGA_ARB_MAX_GPUS">
		VGA_ARB_MAX_GPUS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="VGA_SWITCHEROO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VGA_SWITCHEROO=y</xsl:when>
			<xsl:otherwise># VGA_SWITCHEROO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_HOST1X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_HOST1X=y</xsl:when>
			<xsl:when test=". = 'module'">TEGRA_HOST1X=m</xsl:when>
			<xsl:otherwise># TEGRA_HOST1X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_HOST1X_FIREWALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_HOST1X_FIREWALL=y</xsl:when>
			<xsl:otherwise># TEGRA_HOST1X_FIREWALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_IPUV3_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_IPUV3_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">IMX_IPUV3_CORE=m</xsl:when>
			<xsl:otherwise># IMX_IPUV3_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM=m</xsl:when>
			<xsl:otherwise># DRM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MIPI_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MIPI_DSI=y</xsl:when>
			<xsl:otherwise># DRM_MIPI_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_DP_AUX_CHARDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_DP_AUX_CHARDEV=y</xsl:when>
			<xsl:otherwise># DRM_DP_AUX_CHARDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_KMS_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_KMS_HELPER=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_KMS_HELPER=m</xsl:when>
			<xsl:otherwise># DRM_KMS_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_KMS_FB_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_KMS_FB_HELPER=y</xsl:when>
			<xsl:otherwise># DRM_KMS_FB_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_FBDEV_EMULATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_FBDEV_EMULATION=y</xsl:when>
			<xsl:otherwise># DRM_FBDEV_EMULATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_LOAD_EDID_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_LOAD_EDID_FIRMWARE=y</xsl:when>
			<xsl:otherwise># DRM_LOAD_EDID_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TTM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TTM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_TTM=m</xsl:when>
			<xsl:otherwise># DRM_TTM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_GEM_CMA_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_GEM_CMA_HELPER=y</xsl:when>
			<xsl:otherwise># DRM_GEM_CMA_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_KMS_CMA_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_KMS_CMA_HELPER=y</xsl:when>
			<xsl:otherwise># DRM_KMS_CMA_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I2C_CH7006">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I2C_CH7006=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I2C_CH7006=m</xsl:when>
			<xsl:otherwise># DRM_I2C_CH7006 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I2C_SIL164">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I2C_SIL164=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I2C_SIL164=m</xsl:when>
			<xsl:otherwise># DRM_I2C_SIL164 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I2C_NXP_TDA998X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I2C_NXP_TDA998X=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I2C_NXP_TDA998X=m</xsl:when>
			<xsl:otherwise># DRM_I2C_NXP_TDA998X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TDFX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TDFX=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_TDFX=m</xsl:when>
			<xsl:otherwise># DRM_TDFX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ARM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ARM=y</xsl:when>
			<xsl:otherwise># DRM_ARM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_HDLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_HDLCD=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_HDLCD=m</xsl:when>
			<xsl:otherwise># DRM_HDLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_HDLCD_SHOW_UNDERRUN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_HDLCD_SHOW_UNDERRUN=y</xsl:when>
			<xsl:otherwise># DRM_HDLCD_SHOW_UNDERRUN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MALI_DISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MALI_DISPLAY=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MALI_DISPLAY=m</xsl:when>
			<xsl:otherwise># DRM_MALI_DISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_R128">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_R128=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_R128=m</xsl:when>
			<xsl:otherwise># DRM_R128 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RADEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RADEON=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_RADEON=m</xsl:when>
			<xsl:otherwise># DRM_RADEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RADEON_USERPTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RADEON_USERPTR=y</xsl:when>
			<xsl:otherwise># DRM_RADEON_USERPTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMDGPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMDGPU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_AMDGPU=m</xsl:when>
			<xsl:otherwise># DRM_AMDGPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMDGPU_CIK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMDGPU_CIK=y</xsl:when>
			<xsl:otherwise># DRM_AMDGPU_CIK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMDGPU_USERPTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMDGPU_USERPTR=y</xsl:when>
			<xsl:otherwise># DRM_AMDGPU_USERPTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMDGPU_GART_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMDGPU_GART_DEBUGFS=y</xsl:when>
			<xsl:otherwise># DRM_AMDGPU_GART_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMD_POWERPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMD_POWERPLAY=y</xsl:when>
			<xsl:otherwise># DRM_AMD_POWERPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AMD_ACP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AMD_ACP=y</xsl:when>
			<xsl:otherwise># DRM_AMD_ACP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_NOUVEAU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_NOUVEAU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_NOUVEAU=m</xsl:when>
			<xsl:otherwise># DRM_NOUVEAU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOUVEAU_PLATFORM_DRIVER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NOUVEAU_PLATFORM_DRIVER=y</xsl:when>
			<xsl:otherwise># NOUVEAU_PLATFORM_DRIVER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOUVEAU_DEBUG">
		NOUVEAU_DEBUG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NOUVEAU_DEBUG_DEFAULT">
		NOUVEAU_DEBUG_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DRM_NOUVEAU_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_NOUVEAU_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># DRM_NOUVEAU_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I810">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I810=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I810=m</xsl:when>
			<xsl:otherwise># DRM_I810 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I915=m</xsl:when>
			<xsl:otherwise># DRM_I915 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_PRELIMINARY_HW_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_PRELIMINARY_HW_SUPPORT=y</xsl:when>
			<xsl:otherwise># DRM_I915_PRELIMINARY_HW_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_USERPTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_USERPTR=y</xsl:when>
			<xsl:otherwise># DRM_I915_USERPTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_GVT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_GVT=y</xsl:when>
			<xsl:otherwise># DRM_I915_GVT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_WERROR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_WERROR=y</xsl:when>
			<xsl:otherwise># DRM_I915_WERROR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_DEBUG=y</xsl:when>
			<xsl:otherwise># DRM_I915_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I915_DEBUG_GEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I915_DEBUG_GEM=y</xsl:when>
			<xsl:otherwise># DRM_I915_DEBUG_GEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MGA=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MGA=m</xsl:when>
			<xsl:otherwise># DRM_MGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_SIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_SIS=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_SIS=m</xsl:when>
			<xsl:otherwise># DRM_SIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_VIA=m</xsl:when>
			<xsl:otherwise># DRM_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_SAVAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_SAVAGE=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_SAVAGE=m</xsl:when>
			<xsl:otherwise># DRM_SAVAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VGEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VGEM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_VGEM=m</xsl:when>
			<xsl:otherwise># DRM_VGEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_EXYNOS=m</xsl:when>
			<xsl:otherwise># DRM_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_IOMMU=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_FIMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_FIMD=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_FIMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS5433_DECON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS5433_DECON=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS5433_DECON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS7_DECON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS7_DECON=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS7_DECON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_MIXER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_MIXER=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_MIXER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_VIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_VIDI=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_VIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_DPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_DPI=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_DPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_DSI=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_DP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_DP=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_DP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_HDMI=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_MIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_MIC=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_MIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_G2D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_G2D=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_G2D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_IPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_IPP=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_IPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_FIMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_FIMC=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_FIMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_ROTATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_ROTATOR=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_ROTATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_EXYNOS_GSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_EXYNOS_GSC=y</xsl:when>
			<xsl:otherwise># DRM_EXYNOS_GSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># DRM_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_ANALOGIX_DP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_ANALOGIX_DP=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_ANALOGIX_DP=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_ANALOGIX_DP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_DW_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_DW_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_DW_HDMI=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_DW_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_DW_MIPI_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_DW_MIPI_DSI=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_DW_MIPI_DSI=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_DW_MIPI_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_INNO_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_INNO_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_INNO_HDMI=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_INNO_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VMWGFX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VMWGFX=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_VMWGFX=m</xsl:when>
			<xsl:otherwise># DRM_VMWGFX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VMWGFX_FBCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VMWGFX_FBCON=y</xsl:when>
			<xsl:otherwise># DRM_VMWGFX_FBCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_GMA500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_GMA500=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_GMA500=m</xsl:when>
			<xsl:otherwise># DRM_GMA500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_GMA600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_GMA600=y</xsl:when>
			<xsl:otherwise># DRM_GMA600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_GMA3600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_GMA3600=y</xsl:when>
			<xsl:otherwise># DRM_GMA3600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MEDFIELD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MEDFIELD=y</xsl:when>
			<xsl:otherwise># DRM_MEDFIELD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_UDL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_UDL=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_UDL=m</xsl:when>
			<xsl:otherwise># DRM_UDL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_AST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_AST=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_AST=m</xsl:when>
			<xsl:otherwise># DRM_AST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MGAG200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MGAG200=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MGAG200=m</xsl:when>
			<xsl:otherwise># DRM_MGAG200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_CIRRUS_QEMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_CIRRUS_QEMU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_CIRRUS_QEMU=m</xsl:when>
			<xsl:otherwise># DRM_CIRRUS_QEMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ARMADA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ARMADA=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ARMADA=m</xsl:when>
			<xsl:otherwise># DRM_ARMADA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ATMEL_HLCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ATMEL_HLCDC=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ATMEL_HLCDC=m</xsl:when>
			<xsl:otherwise># DRM_ATMEL_HLCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RCAR_DU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RCAR_DU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_RCAR_DU=m</xsl:when>
			<xsl:otherwise># DRM_RCAR_DU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RCAR_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RCAR_HDMI=y</xsl:when>
			<xsl:otherwise># DRM_RCAR_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RCAR_LVDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RCAR_LVDS=y</xsl:when>
			<xsl:otherwise># DRM_RCAR_LVDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_RCAR_VSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_RCAR_VSP=y</xsl:when>
			<xsl:otherwise># DRM_RCAR_VSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_SHMOBILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_SHMOBILE=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_SHMOBILE=m</xsl:when>
			<xsl:otherwise># DRM_SHMOBILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_SUN4I=m</xsl:when>
			<xsl:otherwise># DRM_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP=m</xsl:when>
			<xsl:otherwise># DRM_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_NUM_CRTCS">
		DRM_OMAP_NUM_CRTCS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_INIT=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP2_DSS=m</xsl:when>
			<xsl:otherwise># OMAP2_DSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_DEBUG=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_DEBUGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_DEBUGFS=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_DEBUGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_COLLECT_IRQ_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_COLLECT_IRQ_STATS=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_COLLECT_IRQ_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_DPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_DPI=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_DPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_RFBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_RFBI=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_RFBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_VENC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_VENC=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_VENC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_HDMI_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_HDMI_COMMON=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_HDMI_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP4_DSS_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP4_DSS_HDMI=y</xsl:when>
			<xsl:otherwise># OMAP4_DSS_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP5_DSS_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP5_DSS_HDMI=y</xsl:when>
			<xsl:otherwise># OMAP5_DSS_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_SDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_SDI=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_SDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_DSI=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_MIN_FCK_PER_PCK">
		OMAP2_DSS_MIN_FCK_PER_PCK=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="OMAP2_DSS_SLEEP_AFTER_VENC_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2_DSS_SLEEP_AFTER_VENC_RESET=y</xsl:when>
			<xsl:otherwise># OMAP2_DSS_SLEEP_AFTER_VENC_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_ENCODER_OPA362">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_ENCODER_OPA362=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_ENCODER_OPA362=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_ENCODER_OPA362 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_ENCODER_TFP410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_ENCODER_TFP410=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_ENCODER_TFP410=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_ENCODER_TFP410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_ENCODER_TPD12S015">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_ENCODER_TPD12S015=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_ENCODER_TPD12S015=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_ENCODER_TPD12S015 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_CONNECTOR_DVI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_CONNECTOR_DVI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_CONNECTOR_DVI=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_CONNECTOR_DVI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_CONNECTOR_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_CONNECTOR_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_CONNECTOR_HDMI=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_CONNECTOR_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_CONNECTOR_ANALOG_TV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_CONNECTOR_ANALOG_TV=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_CONNECTOR_ANALOG_TV=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_CONNECTOR_ANALOG_TV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_DPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_DPI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_DPI=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_DPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_DSI_CM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_DSI_CM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_DSI_CM=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_DSI_CM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_SONY_ACX565AKM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_SONY_ACX565AKM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_SONY_ACX565AKM=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_SONY_ACX565AKM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_LGPHILIPS_LB035Q02">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_LGPHILIPS_LB035Q02=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_LGPHILIPS_LB035Q02=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_LGPHILIPS_LB035Q02 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_SHARP_LS037V7DW01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_SHARP_LS037V7DW01=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_SHARP_LS037V7DW01=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_SHARP_LS037V7DW01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_TPO_TD028TTEC1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_TPO_TD028TTEC1=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_TPO_TD028TTEC1=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_TPO_TD028TTEC1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_TPO_TD043MTEA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_TPO_TD043MTEA1=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_TPO_TD043MTEA1=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_TPO_TD043MTEA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_OMAP_PANEL_NEC_NL8048HL11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_OMAP_PANEL_NEC_NL8048HL11=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_OMAP_PANEL_NEC_NL8048HL11=m</xsl:when>
			<xsl:otherwise># DRM_OMAP_PANEL_NEC_NL8048HL11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TILCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TILCDC=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_TILCDC=m</xsl:when>
			<xsl:otherwise># DRM_TILCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TILCDC_SLAVE_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TILCDC_SLAVE_COMPAT=y</xsl:when>
			<xsl:otherwise># DRM_TILCDC_SLAVE_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_QXL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_QXL=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_QXL=m</xsl:when>
			<xsl:otherwise># DRM_QXL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_BOCHS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_BOCHS=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_BOCHS=m</xsl:when>
			<xsl:otherwise># DRM_BOCHS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VIRTIO_GPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VIRTIO_GPU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_VIRTIO_GPU=m</xsl:when>
			<xsl:otherwise># DRM_VIRTIO_GPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MSM=m</xsl:when>
			<xsl:otherwise># DRM_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_REGISTER_LOGGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_REGISTER_LOGGING=y</xsl:when>
			<xsl:otherwise># DRM_MSM_REGISTER_LOGGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_HDMI_HDCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_HDMI_HDCP=y</xsl:when>
			<xsl:otherwise># DRM_MSM_HDMI_HDCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_DSI=y</xsl:when>
			<xsl:otherwise># DRM_MSM_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_DSI_PLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_DSI_PLL=y</xsl:when>
			<xsl:otherwise># DRM_MSM_DSI_PLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_DSI_28NM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_DSI_28NM_PHY=y</xsl:when>
			<xsl:otherwise># DRM_MSM_DSI_28NM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_DSI_20NM_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_DSI_20NM_PHY=y</xsl:when>
			<xsl:otherwise># DRM_MSM_DSI_20NM_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MSM_DSI_28NM_8960_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MSM_DSI_28NM_8960_PHY=y</xsl:when>
			<xsl:otherwise># DRM_MSM_DSI_28NM_8960_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_FSL_DCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_FSL_DCU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_FSL_DCU=m</xsl:when>
			<xsl:otherwise># DRM_FSL_DCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_TEGRA=m</xsl:when>
			<xsl:otherwise># DRM_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TEGRA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TEGRA_DEBUG=y</xsl:when>
			<xsl:otherwise># DRM_TEGRA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TEGRA_STAGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TEGRA_STAGING=y</xsl:when>
			<xsl:otherwise># DRM_TEGRA_STAGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL=y</xsl:when>
			<xsl:otherwise># DRM_PANEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_SIMPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_SIMPLE=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_SIMPLE=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_SIMPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_SAMSUNG_LD9040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_SAMSUNG_LD9040=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_SAMSUNG_LD9040=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_SAMSUNG_LD9040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_LG_LG4573">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_LG_LG4573=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_LG_LG4573=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_LG_LG4573 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_PANASONIC_VVX10F034N00">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_PANASONIC_VVX10F034N00=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_PANASONIC_VVX10F034N00=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_PANASONIC_VVX10F034N00 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_SAMSUNG_S6E8AA0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_SAMSUNG_S6E8AA0=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_SAMSUNG_S6E8AA0=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_SAMSUNG_S6E8AA0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_SHARP_LQ101R1SX01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_SHARP_LQ101R1SX01=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_SHARP_LQ101R1SX01=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_SHARP_LQ101R1SX01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PANEL_SHARP_LS043T1LE01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PANEL_SHARP_LS043T1LE01=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PANEL_SHARP_LS043T1LE01=m</xsl:when>
			<xsl:otherwise># DRM_PANEL_SHARP_LS043T1LE01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_BRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_BRIDGE=y</xsl:when>
			<xsl:otherwise># DRM_BRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ANALOGIX_ANX78XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ANALOGIX_ANX78XX=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ANALOGIX_ANX78XX=m</xsl:when>
			<xsl:otherwise># DRM_ANALOGIX_ANX78XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_DW_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_DW_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_DW_HDMI=m</xsl:when>
			<xsl:otherwise># DRM_DW_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_DW_HDMI_AHB_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_DW_HDMI_AHB_AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_DW_HDMI_AHB_AUDIO=m</xsl:when>
			<xsl:otherwise># DRM_DW_HDMI_AHB_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_NXP_PTN3460">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_NXP_PTN3460=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_NXP_PTN3460=m</xsl:when>
			<xsl:otherwise># DRM_NXP_PTN3460 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_PARADE_PS8622">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_PARADE_PS8622=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_PARADE_PS8622=m</xsl:when>
			<xsl:otherwise># DRM_PARADE_PS8622 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_SII902X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_SII902X=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_SII902X=m</xsl:when>
			<xsl:otherwise># DRM_SII902X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_TOSHIBA_TC358767">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_TOSHIBA_TC358767=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_TOSHIBA_TC358767=m</xsl:when>
			<xsl:otherwise># DRM_TOSHIBA_TC358767 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ANALOGIX_DP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ANALOGIX_DP=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ANALOGIX_DP=m</xsl:when>
			<xsl:otherwise># DRM_ANALOGIX_DP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I2C_ADV7511">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I2C_ADV7511=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_I2C_ADV7511=m</xsl:when>
			<xsl:otherwise># DRM_I2C_ADV7511 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_I2C_ADV7533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_I2C_ADV7533=y</xsl:when>
			<xsl:otherwise># DRM_I2C_ADV7533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_STI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_STI=m</xsl:when>
			<xsl:otherwise># DRM_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSA_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSA_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">HSA_AMD=m</xsl:when>
			<xsl:otherwise># HSA_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX=m</xsl:when>
			<xsl:otherwise># DRM_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX_PARALLEL_DISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX_PARALLEL_DISPLAY=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX_PARALLEL_DISPLAY=m</xsl:when>
			<xsl:otherwise># DRM_IMX_PARALLEL_DISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX_TVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX_TVE=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX_TVE=m</xsl:when>
			<xsl:otherwise># DRM_IMX_TVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX_LDB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX_LDB=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX_LDB=m</xsl:when>
			<xsl:otherwise># DRM_IMX_LDB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX_IPUV3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX_IPUV3=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX_IPUV3=m</xsl:when>
			<xsl:otherwise># DRM_IMX_IPUV3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_IMX_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_IMX_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_IMX_HDMI=m</xsl:when>
			<xsl:otherwise># DRM_IMX_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_VC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_VC4=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_VC4=m</xsl:when>
			<xsl:otherwise># DRM_VC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ETNAVIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ETNAVIV=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ETNAVIV=m</xsl:when>
			<xsl:otherwise># DRM_ETNAVIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ETNAVIV_REGISTER_LOGGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ETNAVIV_REGISTER_LOGGING=y</xsl:when>
			<xsl:otherwise># DRM_ETNAVIV_REGISTER_LOGGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_ARCPGU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_ARCPGU=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_ARCPGU=m</xsl:when>
			<xsl:otherwise># DRM_ARCPGU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_HISI_KIRIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_HISI_KIRIN=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_HISI_KIRIN=m</xsl:when>
			<xsl:otherwise># DRM_HISI_KIRIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISI_KIRIN_DW_DSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISI_KIRIN_DW_DSI=y</xsl:when>
			<xsl:when test=". = 'module'">HISI_KIRIN_DW_DSI=m</xsl:when>
			<xsl:otherwise># HISI_KIRIN_DW_DSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MEDIATEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MEDIATEK=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MEDIATEK=m</xsl:when>
			<xsl:otherwise># DRM_MEDIATEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRM_MEDIATEK_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRM_MEDIATEK_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">DRM_MEDIATEK_HDMI=m</xsl:when>
			<xsl:otherwise># DRM_MEDIATEK_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB=y</xsl:when>
			<xsl:when test=". = 'module'">FB=m</xsl:when>
			<xsl:otherwise># FB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIRMWARE_EDID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIRMWARE_EDID=y</xsl:when>
			<xsl:otherwise># FIRMWARE_EDID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CMDLINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CMDLINE=y</xsl:when>
			<xsl:otherwise># FB_CMDLINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_NOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_NOTIFY=y</xsl:when>
			<xsl:otherwise># FB_NOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_DDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_DDC=y</xsl:when>
			<xsl:when test=". = 'module'">FB_DDC=m</xsl:when>
			<xsl:otherwise># FB_DDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BOOT_VESA_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BOOT_VESA_SUPPORT=y</xsl:when>
			<xsl:otherwise># FB_BOOT_VESA_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CFB_FILLRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CFB_FILLRECT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CFB_FILLRECT=m</xsl:when>
			<xsl:otherwise># FB_CFB_FILLRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CFB_COPYAREA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CFB_COPYAREA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CFB_COPYAREA=m</xsl:when>
			<xsl:otherwise># FB_CFB_COPYAREA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CFB_IMAGEBLIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CFB_IMAGEBLIT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CFB_IMAGEBLIT=m</xsl:when>
			<xsl:otherwise># FB_CFB_IMAGEBLIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CFB_REV_PIXELS_IN_BYTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CFB_REV_PIXELS_IN_BYTE=y</xsl:when>
			<xsl:otherwise># FB_CFB_REV_PIXELS_IN_BYTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SYS_FILLRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SYS_FILLRECT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SYS_FILLRECT=m</xsl:when>
			<xsl:otherwise># FB_SYS_FILLRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SYS_COPYAREA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SYS_COPYAREA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SYS_COPYAREA=m</xsl:when>
			<xsl:otherwise># FB_SYS_COPYAREA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SYS_IMAGEBLIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SYS_IMAGEBLIT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SYS_IMAGEBLIT=m</xsl:when>
			<xsl:otherwise># FB_SYS_IMAGEBLIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_FOREIGN_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_FOREIGN_ENDIAN=y</xsl:when>
			<xsl:otherwise># FB_FOREIGN_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BOTH_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BOTH_ENDIAN=y</xsl:when>
			<xsl:otherwise># FB_BOTH_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BIG_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BIG_ENDIAN=y</xsl:when>
			<xsl:otherwise># FB_BIG_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_LITTLE_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_LITTLE_ENDIAN=y</xsl:when>
			<xsl:otherwise># FB_LITTLE_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SYS_FOPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SYS_FOPS=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SYS_FOPS=m</xsl:when>
			<xsl:otherwise># FB_SYS_FOPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_DEFERRED_IO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_DEFERRED_IO=y</xsl:when>
			<xsl:otherwise># FB_DEFERRED_IO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_HECUBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_HECUBA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_HECUBA=m</xsl:when>
			<xsl:otherwise># FB_HECUBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SVGALIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SVGALIB=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SVGALIB=m</xsl:when>
			<xsl:otherwise># FB_SVGALIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_MACMODES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_MACMODES=y</xsl:when>
			<xsl:when test=". = 'module'">FB_MACMODES=m</xsl:when>
			<xsl:otherwise># FB_MACMODES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># FB_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_MODE_HELPERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_MODE_HELPERS=y</xsl:when>
			<xsl:otherwise># FB_MODE_HELPERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TILEBLITTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TILEBLITTING=y</xsl:when>
			<xsl:otherwise># FB_TILEBLITTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_GRVGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_GRVGA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_GRVGA=m</xsl:when>
			<xsl:otherwise># FB_GRVGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CIRRUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CIRRUS=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CIRRUS=m</xsl:when>
			<xsl:otherwise># FB_CIRRUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_PM2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_PM2=y</xsl:when>
			<xsl:when test=". = 'module'">FB_PM2=m</xsl:when>
			<xsl:otherwise># FB_PM2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_PM2_FIFO_DISCONNECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_PM2_FIFO_DISCONNECT=y</xsl:when>
			<xsl:otherwise># FB_PM2_FIFO_DISCONNECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ARMCLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ARMCLCD=y</xsl:when>
			<xsl:when test=". = 'module'">FB_ARMCLCD=m</xsl:when>
			<xsl:otherwise># FB_ARMCLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PLAT_VERSATILE_CLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PLAT_VERSATILE_CLCD=y</xsl:when>
			<xsl:otherwise># PLAT_VERSATILE_CLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ACORN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ACORN=y</xsl:when>
			<xsl:otherwise># FB_ACORN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CLPS711X_OLD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CLPS711X_OLD=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CLPS711X_OLD=m</xsl:when>
			<xsl:otherwise># FB_CLPS711X_OLD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CLPS711X=m</xsl:when>
			<xsl:otherwise># FB_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SA1100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SA1100=y</xsl:when>
			<xsl:otherwise># FB_SA1100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">FB_IMX=m</xsl:when>
			<xsl:otherwise># FB_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CYBER2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CYBER2000=y</xsl:when>
			<xsl:when test=". = 'module'">FB_CYBER2000=m</xsl:when>
			<xsl:otherwise># FB_CYBER2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CYBER2000_DDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CYBER2000_DDC=y</xsl:when>
			<xsl:otherwise># FB_CYBER2000_DDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CYBER2000_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CYBER2000_I2C=y</xsl:when>
			<xsl:otherwise># FB_CYBER2000_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_APOLLO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_APOLLO=y</xsl:when>
			<xsl:otherwise># FB_APOLLO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_Q40">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_Q40=y</xsl:when>
			<xsl:otherwise># FB_Q40 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_AMIGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_AMIGA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_AMIGA=m</xsl:when>
			<xsl:otherwise># FB_AMIGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_AMIGA_OCS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_AMIGA_OCS=y</xsl:when>
			<xsl:otherwise># FB_AMIGA_OCS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_AMIGA_ECS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_AMIGA_ECS=y</xsl:when>
			<xsl:otherwise># FB_AMIGA_ECS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_AMIGA_AGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_AMIGA_AGA=y</xsl:when>
			<xsl:otherwise># FB_AMIGA_AGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_FM2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_FM2=y</xsl:when>
			<xsl:otherwise># FB_FM2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ARC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ARC=y</xsl:when>
			<xsl:when test=". = 'module'">FB_ARC=m</xsl:when>
			<xsl:otherwise># FB_ARC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ATARI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ATARI=y</xsl:when>
			<xsl:otherwise># FB_ATARI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_OF=y</xsl:when>
			<xsl:otherwise># FB_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CONTROL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CONTROL=y</xsl:when>
			<xsl:otherwise># FB_CONTROL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_PLATINUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_PLATINUM=y</xsl:when>
			<xsl:otherwise># FB_PLATINUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_VALKYRIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_VALKYRIE=y</xsl:when>
			<xsl:otherwise># FB_VALKYRIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CT65550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CT65550=y</xsl:when>
			<xsl:otherwise># FB_CT65550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ASILIANT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ASILIANT=y</xsl:when>
			<xsl:otherwise># FB_ASILIANT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_IMSTT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_IMSTT=y</xsl:when>
			<xsl:otherwise># FB_IMSTT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_VGA16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_VGA16=y</xsl:when>
			<xsl:when test=". = 'module'">FB_VGA16=m</xsl:when>
			<xsl:otherwise># FB_VGA16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BF54X_LQ043">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BF54X_LQ043=y</xsl:when>
			<xsl:when test=". = 'module'">FB_BF54X_LQ043=m</xsl:when>
			<xsl:otherwise># FB_BF54X_LQ043 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BFIN_T350MCQB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BFIN_T350MCQB=y</xsl:when>
			<xsl:when test=". = 'module'">FB_BFIN_T350MCQB=m</xsl:when>
			<xsl:otherwise># FB_BFIN_T350MCQB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BFIN_LQ035Q1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BFIN_LQ035Q1=y</xsl:when>
			<xsl:when test=". = 'module'">FB_BFIN_LQ035Q1=m</xsl:when>
			<xsl:otherwise># FB_BFIN_LQ035Q1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BF537_LQ035">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BF537_LQ035=y</xsl:when>
			<xsl:when test=". = 'module'">FB_BF537_LQ035=m</xsl:when>
			<xsl:otherwise># FB_BF537_LQ035 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BFIN_7393">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BFIN_7393=y</xsl:when>
			<xsl:when test=". = 'module'">FB_BFIN_7393=m</xsl:when>
			<xsl:otherwise># FB_BFIN_7393 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTSC=y</xsl:when>
			<xsl:otherwise># NTSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PAL=y</xsl:when>
			<xsl:otherwise># PAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTSC_640x480">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTSC_640x480=y</xsl:when>
			<xsl:otherwise># NTSC_640x480 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PAL_640x480">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PAL_640x480=y</xsl:when>
			<xsl:otherwise># PAL_640x480 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTSC_YCBCR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTSC_YCBCR=y</xsl:when>
			<xsl:otherwise># NTSC_YCBCR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PAL_YCBCR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PAL_YCBCR=y</xsl:when>
			<xsl:otherwise># PAL_YCBCR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADV7393_1XMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADV7393_1XMEM=y</xsl:when>
			<xsl:otherwise># ADV7393_1XMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADV7393_2XMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADV7393_2XMEM=y</xsl:when>
			<xsl:otherwise># ADV7393_2XMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_STI=y</xsl:when>
			<xsl:when test=". = 'module'">FB_STI=m</xsl:when>
			<xsl:otherwise># FB_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_MAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_MAC=y</xsl:when>
			<xsl:otherwise># FB_MAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_HP300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_HP300=y</xsl:when>
			<xsl:otherwise># FB_HP300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TGA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TGA=m</xsl:when>
			<xsl:otherwise># FB_TGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_UVESA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_UVESA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_UVESA=m</xsl:when>
			<xsl:otherwise># FB_UVESA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_VESA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_VESA=y</xsl:when>
			<xsl:otherwise># FB_VESA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_EFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_EFI=y</xsl:when>
			<xsl:otherwise># FB_EFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_N411">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_N411=y</xsl:when>
			<xsl:when test=". = 'module'">FB_N411=m</xsl:when>
			<xsl:otherwise># FB_N411 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_HGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_HGA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_HGA=m</xsl:when>
			<xsl:otherwise># FB_HGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_GBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_GBE=y</xsl:when>
			<xsl:otherwise># FB_GBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_GBE_MEM">
		FB_GBE_MEM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FB_SBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SBUS=y</xsl:when>
			<xsl:otherwise># FB_SBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_BW2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_BW2=y</xsl:when>
			<xsl:otherwise># FB_BW2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CG3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CG3=y</xsl:when>
			<xsl:otherwise># FB_CG3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CG6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CG6=y</xsl:when>
			<xsl:otherwise># FB_CG6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_FFB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_FFB=y</xsl:when>
			<xsl:otherwise># FB_FFB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TCX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TCX=y</xsl:when>
			<xsl:otherwise># FB_TCX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_CG14">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_CG14=y</xsl:when>
			<xsl:otherwise># FB_CG14 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_P9100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_P9100=y</xsl:when>
			<xsl:otherwise># FB_P9100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_LEO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_LEO=y</xsl:when>
			<xsl:otherwise># FB_LEO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_IGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_IGA=y</xsl:when>
			<xsl:otherwise># FB_IGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_XVR500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_XVR500=y</xsl:when>
			<xsl:otherwise># FB_XVR500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_XVR2500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_XVR2500=y</xsl:when>
			<xsl:otherwise># FB_XVR2500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_XVR1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_XVR1000=y</xsl:when>
			<xsl:otherwise># FB_XVR1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_PVR2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_PVR2=y</xsl:when>
			<xsl:when test=". = 'module'">FB_PVR2=m</xsl:when>
			<xsl:otherwise># FB_PVR2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_OPENCORES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_OPENCORES=y</xsl:when>
			<xsl:when test=". = 'module'">FB_OPENCORES=m</xsl:when>
			<xsl:otherwise># FB_OPENCORES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_S1D13XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_S1D13XXX=y</xsl:when>
			<xsl:when test=". = 'module'">FB_S1D13XXX=m</xsl:when>
			<xsl:otherwise># FB_S1D13XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">FB_ATMEL=m</xsl:when>
			<xsl:otherwise># FB_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_NVIDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_NVIDIA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_NVIDIA=m</xsl:when>
			<xsl:otherwise># FB_NVIDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_NVIDIA_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_NVIDIA_I2C=y</xsl:when>
			<xsl:otherwise># FB_NVIDIA_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_NVIDIA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_NVIDIA_DEBUG=y</xsl:when>
			<xsl:otherwise># FB_NVIDIA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_NVIDIA_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_NVIDIA_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># FB_NVIDIA_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_RIVA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_RIVA=y</xsl:when>
			<xsl:when test=". = 'module'">FB_RIVA=m</xsl:when>
			<xsl:otherwise># FB_RIVA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_RIVA_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_RIVA_I2C=y</xsl:when>
			<xsl:otherwise># FB_RIVA_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_RIVA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_RIVA_DEBUG=y</xsl:when>
			<xsl:otherwise># FB_RIVA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_RIVA_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_RIVA_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># FB_RIVA_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_I740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_I740=y</xsl:when>
			<xsl:when test=". = 'module'">FB_I740=m</xsl:when>
			<xsl:otherwise># FB_I740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_I810">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_I810=y</xsl:when>
			<xsl:when test=". = 'module'">FB_I810=m</xsl:when>
			<xsl:otherwise># FB_I810 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_I810_GTF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_I810_GTF=y</xsl:when>
			<xsl:otherwise># FB_I810_GTF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_I810_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_I810_I2C=y</xsl:when>
			<xsl:otherwise># FB_I810_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LCD_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LCD_SUPPORT=y</xsl:when>
			<xsl:otherwise># BACKLIGHT_LCD_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_CLASS_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_CLASS_DEVICE=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_CLASS_DEVICE=m</xsl:when>
			<xsl:otherwise># LCD_CLASS_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_CORGI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_CORGI=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_CORGI=m</xsl:when>
			<xsl:otherwise># LCD_CORGI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_L4F00242T03">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_L4F00242T03=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_L4F00242T03=m</xsl:when>
			<xsl:otherwise># LCD_L4F00242T03 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_LMS283GF05">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_LMS283GF05=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_LMS283GF05=m</xsl:when>
			<xsl:otherwise># LCD_LMS283GF05 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_LTV350QV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_LTV350QV=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_LTV350QV=m</xsl:when>
			<xsl:otherwise># LCD_LTV350QV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_ILI922X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_ILI922X=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_ILI922X=m</xsl:when>
			<xsl:otherwise># LCD_ILI922X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_ILI9320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_ILI9320=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_ILI9320=m</xsl:when>
			<xsl:otherwise># LCD_ILI9320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_TDO24M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_TDO24M=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_TDO24M=m</xsl:when>
			<xsl:otherwise># LCD_TDO24M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_VGG2432A4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_VGG2432A4=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_VGG2432A4=m</xsl:when>
			<xsl:otherwise># LCD_VGG2432A4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_PLATFORM=m</xsl:when>
			<xsl:otherwise># LCD_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_TOSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_TOSA=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_TOSA=m</xsl:when>
			<xsl:otherwise># LCD_TOSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_HP700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_HP700=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_HP700=m</xsl:when>
			<xsl:otherwise># LCD_HP700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_S6E63M0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_S6E63M0=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_S6E63M0=m</xsl:when>
			<xsl:otherwise># LCD_S6E63M0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_LD9040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_LD9040=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_LD9040=m</xsl:when>
			<xsl:otherwise># LCD_LD9040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_AMS369FG06">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_AMS369FG06=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_AMS369FG06=m</xsl:when>
			<xsl:otherwise># LCD_AMS369FG06 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_LMS501KF03">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_LMS501KF03=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_LMS501KF03=m</xsl:when>
			<xsl:otherwise># LCD_LMS501KF03 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LCD_HX8357">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LCD_HX8357=y</xsl:when>
			<xsl:when test=". = 'module'">LCD_HX8357=m</xsl:when>
			<xsl:otherwise># LCD_HX8357 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_CLASS_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_CLASS_DEVICE=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_CLASS_DEVICE=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_CLASS_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_ATMEL_LCDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_ATMEL_LCDC=y</xsl:when>
			<xsl:otherwise># BACKLIGHT_ATMEL_LCDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_EP93XX=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_GENERIC=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_IPAQ_MICRO=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_IPAQ_MICRO=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LM3533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LM3533=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LM3533=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LM3533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LOCOMO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LOCOMO=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LOCOMO=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LOCOMO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_OMAP1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_OMAP1=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_OMAP1=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_OMAP1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_HP680">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_HP680=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_HP680=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_HP680 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_HP700">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_HP700=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_HP700=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_HP700 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_CARILLO_RANCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_CARILLO_RANCH=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_CARILLO_RANCH=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_CARILLO_RANCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_PWM=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_PWM=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_DA903X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_DA903X=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_DA903X=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_DA903X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_DA9052=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_MAX8925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_MAX8925=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_MAX8925=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_MAX8925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_APPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_APPLE=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_APPLE=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_APPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_TOSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_TOSA=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_TOSA=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_TOSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_PM8941_WLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_PM8941_WLED=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_PM8941_WLED=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_PM8941_WLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_SAHARA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_SAHARA=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_SAHARA=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_SAHARA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_WM831X=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_ADP5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_ADP5520=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_ADP5520=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_ADP5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_ADP8860">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_ADP8860=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_ADP8860=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_ADP8860 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_ADP8870">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_ADP8870=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_ADP8870=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_ADP8870 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_88PM860X=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_PCF50633">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_PCF50633=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_PCF50633=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_PCF50633 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_AAT2870">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_AAT2870=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_AAT2870=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_AAT2870 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LM3630A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LM3630A=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LM3630A=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LM3630A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LM3639">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LM3639=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LM3639=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LM3639 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LP855X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LP855X=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LP855X=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LP855X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LP8788=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LP8788=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_OT200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_OT200=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_OT200=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_OT200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_PANDORA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_PANDORA=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_PANDORA=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_PANDORA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_SKY81452">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_SKY81452=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_SKY81452=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_SKY81452 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_TPS65217">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_TPS65217=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_TPS65217=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_TPS65217 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_AS3711">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_AS3711=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_AS3711=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_AS3711 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_GPIO=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_LV5207LP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_LV5207LP=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_LV5207LP=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_LV5207LP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BACKLIGHT_BD6107">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BACKLIGHT_BD6107=y</xsl:when>
			<xsl:when test=". = 'module'">BACKLIGHT_BD6107=m</xsl:when>
			<xsl:otherwise># BACKLIGHT_BD6107 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGASTATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VGASTATE=y</xsl:when>
			<xsl:when test=". = 'module'">VGASTATE=m</xsl:when>
			<xsl:otherwise># VGASTATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEOMODE_HELPERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEOMODE_HELPERS=y</xsl:when>
			<xsl:otherwise># VIDEOMODE_HELPERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDMI=y</xsl:when>
			<xsl:otherwise># HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGA_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VGA_CONSOLE=y</xsl:when>
			<xsl:otherwise># VGA_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGACON_SOFT_SCROLLBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VGACON_SOFT_SCROLLBACK=y</xsl:when>
			<xsl:otherwise># VGACON_SOFT_SCROLLBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VGACON_SOFT_SCROLLBACK_SIZE">
		VGACON_SOFT_SCROLLBACK_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MDA_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MDA_CONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">MDA_CONSOLE=m</xsl:when>
			<xsl:otherwise># MDA_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SGI_NEWPORT_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SGI_NEWPORT_CONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">SGI_NEWPORT_CONSOLE=m</xsl:when>
			<xsl:otherwise># SGI_NEWPORT_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DUMMY_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DUMMY_CONSOLE=y</xsl:when>
			<xsl:otherwise># DUMMY_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DUMMY_CONSOLE_COLUMNS">
		DUMMY_CONSOLE_COLUMNS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DUMMY_CONSOLE_ROWS">
		DUMMY_CONSOLE_ROWS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FRAMEBUFFER_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FRAMEBUFFER_CONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">FRAMEBUFFER_CONSOLE=m</xsl:when>
			<xsl:otherwise># FRAMEBUFFER_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FRAMEBUFFER_CONSOLE_DETECT_PRIMARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FRAMEBUFFER_CONSOLE_DETECT_PRIMARY=y</xsl:when>
			<xsl:otherwise># FRAMEBUFFER_CONSOLE_DETECT_PRIMARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FRAMEBUFFER_CONSOLE_ROTATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FRAMEBUFFER_CONSOLE_ROTATION=y</xsl:when>
			<xsl:otherwise># FRAMEBUFFER_CONSOLE_ROTATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STI_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STI_CONSOLE=y</xsl:when>
			<xsl:otherwise># STI_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO=y</xsl:when>
			<xsl:otherwise># LOGO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_LOGO_EXTRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_LOGO_EXTRA=y</xsl:when>
			<xsl:otherwise># FB_LOGO_EXTRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_LINUX_MONO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_LINUX_MONO=y</xsl:when>
			<xsl:otherwise># LOGO_LINUX_MONO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_LINUX_VGA16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_LINUX_VGA16=y</xsl:when>
			<xsl:otherwise># LOGO_LINUX_VGA16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_LINUX_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_LINUX_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_LINUX_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_BLACKFIN_VGA16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_BLACKFIN_VGA16=y</xsl:when>
			<xsl:otherwise># LOGO_BLACKFIN_VGA16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_BLACKFIN_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_BLACKFIN_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_BLACKFIN_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_DEC_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_DEC_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_DEC_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_MAC_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_MAC_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_MAC_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_PARISC_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_PARISC_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_PARISC_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_SGI_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_SGI_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_SGI_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_SUN_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_SUN_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_SUN_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_SUPERH_MONO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_SUPERH_MONO=y</xsl:when>
			<xsl:otherwise># LOGO_SUPERH_MONO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_SUPERH_VGA16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_SUPERH_VGA16=y</xsl:when>
			<xsl:otherwise># LOGO_SUPERH_VGA16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_SUPERH_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_SUPERH_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_SUPERH_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGO_M32R_CLUT224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGO_M32R_CLUT224=y</xsl:when>
			<xsl:otherwise># LOGO_M32R_CLUT224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND=m</xsl:when>
			<xsl:otherwise># SOUND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_OSS_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_OSS_CORE=y</xsl:when>
			<xsl:otherwise># SOUND_OSS_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_OSS_CORE_PRECLAIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_OSS_CORE_PRECLAIM=y</xsl:when>
			<xsl:otherwise># SOUND_OSS_CORE_PRECLAIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMASOUND_ATARI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMASOUND_ATARI=y</xsl:when>
			<xsl:when test=". = 'module'">DMASOUND_ATARI=m</xsl:when>
			<xsl:otherwise># DMASOUND_ATARI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMASOUND_PAULA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMASOUND_PAULA=y</xsl:when>
			<xsl:when test=". = 'module'">DMASOUND_PAULA=m</xsl:when>
			<xsl:otherwise># DMASOUND_PAULA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMASOUND_Q40">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMASOUND_Q40=y</xsl:when>
			<xsl:when test=". = 'module'">DMASOUND_Q40=m</xsl:when>
			<xsl:otherwise># DMASOUND_Q40 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMASOUND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMASOUND=y</xsl:when>
			<xsl:when test=". = 'module'">DMASOUND=m</xsl:when>
			<xsl:otherwise># DMASOUND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND=y</xsl:when>
			<xsl:when test=". = 'module'">SND=m</xsl:when>
			<xsl:otherwise># SND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_TIMER=y</xsl:when>
			<xsl:when test=". = 'module'">SND_TIMER=m</xsl:when>
			<xsl:otherwise># SND_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PCM=m</xsl:when>
			<xsl:otherwise># SND_PCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_ELD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_ELD=y</xsl:when>
			<xsl:otherwise># SND_PCM_ELD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_IEC958">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_IEC958=y</xsl:when>
			<xsl:otherwise># SND_PCM_IEC958 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DMAENGINE_PCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DMAENGINE_PCM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_DMAENGINE_PCM=m</xsl:when>
			<xsl:otherwise># SND_DMAENGINE_PCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HWDEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HWDEP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HWDEP=m</xsl:when>
			<xsl:otherwise># SND_HWDEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RAWMIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RAWMIDI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RAWMIDI=m</xsl:when>
			<xsl:otherwise># SND_RAWMIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_COMPRESS_OFFLOAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_COMPRESS_OFFLOAD=y</xsl:when>
			<xsl:when test=". = 'module'">SND_COMPRESS_OFFLOAD=m</xsl:when>
			<xsl:otherwise># SND_COMPRESS_OFFLOAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_JACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_JACK=y</xsl:when>
			<xsl:otherwise># SND_JACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_JACK_INPUT_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_JACK_INPUT_DEV=y</xsl:when>
			<xsl:otherwise># SND_JACK_INPUT_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SEQUENCER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SEQUENCER=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SEQUENCER=m</xsl:when>
			<xsl:otherwise># SND_SEQUENCER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SEQ_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SEQ_DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SEQ_DUMMY=m</xsl:when>
			<xsl:otherwise># SND_SEQ_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OSSEMUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OSSEMUL=y</xsl:when>
			<xsl:otherwise># SND_OSSEMUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MIXER_OSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MIXER_OSS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MIXER_OSS=m</xsl:when>
			<xsl:otherwise># SND_MIXER_OSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_OSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_OSS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PCM_OSS=m</xsl:when>
			<xsl:otherwise># SND_PCM_OSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_OSS_PLUGINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_OSS_PLUGINS=y</xsl:when>
			<xsl:otherwise># SND_PCM_OSS_PLUGINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_TIMER=y</xsl:when>
			<xsl:otherwise># SND_PCM_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SEQUENCER_OSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SEQUENCER_OSS=y</xsl:when>
			<xsl:otherwise># SND_SEQUENCER_OSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HRTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HRTIMER=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HRTIMER=m</xsl:when>
			<xsl:otherwise># SND_HRTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SEQ_HRTIMER_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SEQ_HRTIMER_DEFAULT=y</xsl:when>
			<xsl:otherwise># SND_SEQ_HRTIMER_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DYNAMIC_MINORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DYNAMIC_MINORS=y</xsl:when>
			<xsl:otherwise># SND_DYNAMIC_MINORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MAX_CARDS">
		SND_MAX_CARDS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_SUPPORT_OLD_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SUPPORT_OLD_API=y</xsl:when>
			<xsl:otherwise># SND_SUPPORT_OLD_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PROC_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PROC_FS=y</xsl:when>
			<xsl:otherwise># SND_PROC_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VERBOSE_PROCFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VERBOSE_PROCFS=y</xsl:when>
			<xsl:otherwise># SND_VERBOSE_PROCFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VERBOSE_PRINTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VERBOSE_PRINTK=y</xsl:when>
			<xsl:otherwise># SND_VERBOSE_PRINTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DEBUG=y</xsl:when>
			<xsl:otherwise># SND_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DEBUG_VERBOSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DEBUG_VERBOSE=y</xsl:when>
			<xsl:otherwise># SND_DEBUG_VERBOSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCM_XRUN_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCM_XRUN_DEBUG=y</xsl:when>
			<xsl:otherwise># SND_PCM_XRUN_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VMASTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VMASTER=y</xsl:when>
			<xsl:otherwise># SND_VMASTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DMA_SGBUF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DMA_SGBUF=y</xsl:when>
			<xsl:otherwise># SND_DMA_SGBUF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RAWMIDI_SEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RAWMIDI_SEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RAWMIDI_SEQ=m</xsl:when>
			<xsl:otherwise># SND_RAWMIDI_SEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPL3_LIB_SEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPL3_LIB_SEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPL3_LIB_SEQ=m</xsl:when>
			<xsl:otherwise># SND_OPL3_LIB_SEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPL4_LIB_SEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPL4_LIB_SEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPL4_LIB_SEQ=m</xsl:when>
			<xsl:otherwise># SND_OPL4_LIB_SEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SBAWE_SEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SBAWE_SEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SBAWE_SEQ=m</xsl:when>
			<xsl:otherwise># SND_SBAWE_SEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_EMU10K1_SEQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_EMU10K1_SEQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_EMU10K1_SEQ=m</xsl:when>
			<xsl:otherwise># SND_EMU10K1_SEQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MPU401_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MPU401_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MPU401_UART=m</xsl:when>
			<xsl:otherwise># SND_MPU401_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPL3_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPL3_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPL3_LIB=m</xsl:when>
			<xsl:otherwise># SND_OPL3_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPL4_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPL4_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPL4_LIB=m</xsl:when>
			<xsl:otherwise># SND_OPL4_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VX_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VX_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VX_LIB=m</xsl:when>
			<xsl:otherwise># SND_VX_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AC97_CODEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AC97_CODEC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AC97_CODEC=m</xsl:when>
			<xsl:otherwise># SND_AC97_CODEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DRIVERS=y</xsl:when>
			<xsl:otherwise># SND_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCSP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PCSP=m</xsl:when>
			<xsl:otherwise># SND_PCSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">SND_DUMMY=m</xsl:when>
			<xsl:otherwise># SND_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ALOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ALOOP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ALOOP=m</xsl:when>
			<xsl:otherwise># SND_ALOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VIRMIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VIRMIDI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VIRMIDI=m</xsl:when>
			<xsl:otherwise># SND_VIRMIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MTPAV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MTPAV=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MTPAV=m</xsl:when>
			<xsl:otherwise># SND_MTPAV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MTS64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MTS64=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MTS64=m</xsl:when>
			<xsl:otherwise># SND_MTS64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SERIAL_U16550">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SERIAL_U16550=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SERIAL_U16550=m</xsl:when>
			<xsl:otherwise># SND_SERIAL_U16550 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MPU401">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MPU401=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MPU401=m</xsl:when>
			<xsl:otherwise># SND_MPU401 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PORTMAN2X4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PORTMAN2X4=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PORTMAN2X4=m</xsl:when>
			<xsl:otherwise># SND_PORTMAN2X4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ML403_AC97CR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ML403_AC97CR=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ML403_AC97CR=m</xsl:when>
			<xsl:otherwise># SND_ML403_AC97CR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AC97_POWER_SAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AC97_POWER_SAVE=y</xsl:when>
			<xsl:otherwise># SND_AC97_POWER_SAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AC97_POWER_SAVE_DEFAULT">
		SND_AC97_POWER_SAVE_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_WSS_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_WSS_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_WSS_LIB=m</xsl:when>
			<xsl:otherwise># SND_WSS_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SB_COMMON=m</xsl:when>
			<xsl:otherwise># SND_SB_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB8_DSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB8_DSP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SB8_DSP=m</xsl:when>
			<xsl:otherwise># SND_SB8_DSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB16_DSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB16_DSP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SB16_DSP=m</xsl:when>
			<xsl:otherwise># SND_SB16_DSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ISA=y</xsl:when>
			<xsl:otherwise># SND_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ADLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ADLIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ADLIB=m</xsl:when>
			<xsl:otherwise># SND_ADLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AD1816A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AD1816A=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AD1816A=m</xsl:when>
			<xsl:otherwise># SND_AD1816A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AD1848">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AD1848=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AD1848=m</xsl:when>
			<xsl:otherwise># SND_AD1848 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ALS100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ALS100=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ALS100=m</xsl:when>
			<xsl:otherwise># SND_ALS100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AZT1605">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AZT1605=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AZT1605=m</xsl:when>
			<xsl:otherwise># SND_AZT1605 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AZT2316">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AZT2316=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AZT2316=m</xsl:when>
			<xsl:otherwise># SND_AZT2316 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AZT2320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AZT2320=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AZT2320=m</xsl:when>
			<xsl:otherwise># SND_AZT2320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CMI8328">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CMI8328=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CMI8328=m</xsl:when>
			<xsl:otherwise># SND_CMI8328 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CMI8330">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CMI8330=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CMI8330=m</xsl:when>
			<xsl:otherwise># SND_CMI8330 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS4231">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS4231=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS4231=m</xsl:when>
			<xsl:otherwise># SND_CS4231 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS4236">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS4236=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS4236=m</xsl:when>
			<xsl:otherwise># SND_CS4236 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES1688">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES1688=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ES1688=m</xsl:when>
			<xsl:otherwise># SND_ES1688 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES18XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES18XX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ES18XX=m</xsl:when>
			<xsl:otherwise># SND_ES18XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SC6000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SC6000=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SC6000=m</xsl:when>
			<xsl:otherwise># SND_SC6000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GUSCLASSIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GUSCLASSIC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_GUSCLASSIC=m</xsl:when>
			<xsl:otherwise># SND_GUSCLASSIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GUSEXTREME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GUSEXTREME=y</xsl:when>
			<xsl:when test=". = 'module'">SND_GUSEXTREME=m</xsl:when>
			<xsl:otherwise># SND_GUSEXTREME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GUSMAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GUSMAX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_GUSMAX=m</xsl:when>
			<xsl:otherwise># SND_GUSMAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INTERWAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INTERWAVE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INTERWAVE=m</xsl:when>
			<xsl:otherwise># SND_INTERWAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INTERWAVE_STB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INTERWAVE_STB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INTERWAVE_STB=m</xsl:when>
			<xsl:otherwise># SND_INTERWAVE_STB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_JAZZ16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_JAZZ16=y</xsl:when>
			<xsl:when test=". = 'module'">SND_JAZZ16=m</xsl:when>
			<xsl:otherwise># SND_JAZZ16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPL3SA2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPL3SA2=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPL3SA2=m</xsl:when>
			<xsl:otherwise># SND_OPL3SA2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPTI92X_AD1848">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPTI92X_AD1848=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPTI92X_AD1848=m</xsl:when>
			<xsl:otherwise># SND_OPTI92X_AD1848 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPTI92X_CS4231">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPTI92X_CS4231=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPTI92X_CS4231=m</xsl:when>
			<xsl:otherwise># SND_OPTI92X_CS4231 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OPTI93X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OPTI93X=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OPTI93X=m</xsl:when>
			<xsl:otherwise># SND_OPTI93X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MIRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MIRO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MIRO=m</xsl:when>
			<xsl:otherwise># SND_MIRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB8=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SB8=m</xsl:when>
			<xsl:otherwise># SND_SB8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB16=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SB16=m</xsl:when>
			<xsl:otherwise># SND_SB16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SBAWE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SBAWE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SBAWE=m</xsl:when>
			<xsl:otherwise># SND_SBAWE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SB16_CSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SB16_CSP=y</xsl:when>
			<xsl:otherwise># SND_SB16_CSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SSCAPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SSCAPE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SSCAPE=m</xsl:when>
			<xsl:otherwise># SND_SSCAPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_WAVEFRONT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_WAVEFRONT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_WAVEFRONT=m</xsl:when>
			<xsl:otherwise># SND_WAVEFRONT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MSND_PINNACLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MSND_PINNACLE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MSND_PINNACLE=m</xsl:when>
			<xsl:otherwise># SND_MSND_PINNACLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MSND_CLASSIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MSND_CLASSIC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MSND_CLASSIC=m</xsl:when>
			<xsl:otherwise># SND_MSND_CLASSIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCI=y</xsl:when>
			<xsl:otherwise># SND_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AD1889">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AD1889=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AD1889=m</xsl:when>
			<xsl:otherwise># SND_AD1889 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ALS300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ALS300=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ALS300=m</xsl:when>
			<xsl:otherwise># SND_ALS300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ALS4000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ALS4000=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ALS4000=m</xsl:when>
			<xsl:otherwise># SND_ALS4000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ALI5451">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ALI5451=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ALI5451=m</xsl:when>
			<xsl:otherwise># SND_ALI5451 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ASIHPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ASIHPI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ASIHPI=m</xsl:when>
			<xsl:otherwise># SND_ASIHPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ATIIXP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ATIIXP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ATIIXP=m</xsl:when>
			<xsl:otherwise># SND_ATIIXP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ATIIXP_MODEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ATIIXP_MODEM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ATIIXP_MODEM=m</xsl:when>
			<xsl:otherwise># SND_ATIIXP_MODEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AU8810">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AU8810=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AU8810=m</xsl:when>
			<xsl:otherwise># SND_AU8810 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AU8820">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AU8820=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AU8820=m</xsl:when>
			<xsl:otherwise># SND_AU8820 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AU8830">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AU8830=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AU8830=m</xsl:when>
			<xsl:otherwise># SND_AU8830 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AW2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AW2=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AW2=m</xsl:when>
			<xsl:otherwise># SND_AW2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AZT3328">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AZT3328=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AZT3328=m</xsl:when>
			<xsl:otherwise># SND_AZT3328 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_BT87X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_BT87X=y</xsl:when>
			<xsl:when test=". = 'module'">SND_BT87X=m</xsl:when>
			<xsl:otherwise># SND_BT87X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_BT87X_OVERCLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_BT87X_OVERCLOCK=y</xsl:when>
			<xsl:otherwise># SND_BT87X_OVERCLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CA0106">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CA0106=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CA0106=m</xsl:when>
			<xsl:otherwise># SND_CA0106 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CMIPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CMIPCI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CMIPCI=m</xsl:when>
			<xsl:otherwise># SND_CMIPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OXYGEN_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OXYGEN_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OXYGEN_LIB=m</xsl:when>
			<xsl:otherwise># SND_OXYGEN_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OXYGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OXYGEN=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OXYGEN=m</xsl:when>
			<xsl:otherwise># SND_OXYGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS4281">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS4281=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS4281=m</xsl:when>
			<xsl:otherwise># SND_CS4281 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS46XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS46XX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS46XX=m</xsl:when>
			<xsl:otherwise># SND_CS46XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS46XX_NEW_DSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS46XX_NEW_DSP=y</xsl:when>
			<xsl:otherwise># SND_CS46XX_NEW_DSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS5530">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS5530=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS5530=m</xsl:when>
			<xsl:otherwise># SND_CS5530 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CS5535AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CS5535AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CS5535AUDIO=m</xsl:when>
			<xsl:otherwise># SND_CS5535AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_CTXFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_CTXFI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_CTXFI=m</xsl:when>
			<xsl:otherwise># SND_CTXFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DARLA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DARLA20=y</xsl:when>
			<xsl:when test=". = 'module'">SND_DARLA20=m</xsl:when>
			<xsl:otherwise># SND_DARLA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GINA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GINA20=y</xsl:when>
			<xsl:when test=". = 'module'">SND_GINA20=m</xsl:when>
			<xsl:otherwise># SND_GINA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_LAYLA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_LAYLA20=y</xsl:when>
			<xsl:when test=". = 'module'">SND_LAYLA20=m</xsl:when>
			<xsl:otherwise># SND_LAYLA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DARLA24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DARLA24=y</xsl:when>
			<xsl:when test=". = 'module'">SND_DARLA24=m</xsl:when>
			<xsl:otherwise># SND_DARLA24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GINA24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GINA24=y</xsl:when>
			<xsl:when test=". = 'module'">SND_GINA24=m</xsl:when>
			<xsl:otherwise># SND_GINA24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_LAYLA24">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_LAYLA24=y</xsl:when>
			<xsl:when test=". = 'module'">SND_LAYLA24=m</xsl:when>
			<xsl:otherwise># SND_LAYLA24 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MONA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MONA=m</xsl:when>
			<xsl:otherwise># SND_MONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MIA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MIA=m</xsl:when>
			<xsl:otherwise># SND_MIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ECHO3G">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ECHO3G=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ECHO3G=m</xsl:when>
			<xsl:otherwise># SND_ECHO3G is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INDIGO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INDIGO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INDIGO=m</xsl:when>
			<xsl:otherwise># SND_INDIGO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INDIGOIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INDIGOIO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INDIGOIO=m</xsl:when>
			<xsl:otherwise># SND_INDIGOIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INDIGODJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INDIGODJ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INDIGODJ=m</xsl:when>
			<xsl:otherwise># SND_INDIGODJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INDIGOIOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INDIGOIOX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INDIGOIOX=m</xsl:when>
			<xsl:otherwise># SND_INDIGOIOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INDIGODJX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INDIGODJX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INDIGODJX=m</xsl:when>
			<xsl:otherwise># SND_INDIGODJX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_EMU10K1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_EMU10K1=y</xsl:when>
			<xsl:when test=". = 'module'">SND_EMU10K1=m</xsl:when>
			<xsl:otherwise># SND_EMU10K1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_EMU10K1X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_EMU10K1X=y</xsl:when>
			<xsl:when test=". = 'module'">SND_EMU10K1X=m</xsl:when>
			<xsl:otherwise># SND_EMU10K1X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ENS1370">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ENS1370=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ENS1370=m</xsl:when>
			<xsl:otherwise># SND_ENS1370 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ENS1371">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ENS1371=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ENS1371=m</xsl:when>
			<xsl:otherwise># SND_ENS1371 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES1938">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES1938=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ES1938=m</xsl:when>
			<xsl:otherwise># SND_ES1938 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES1968">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES1968=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ES1968=m</xsl:when>
			<xsl:otherwise># SND_ES1968 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES1968_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES1968_INPUT=y</xsl:when>
			<xsl:otherwise># SND_ES1968_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ES1968_RADIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ES1968_RADIO=y</xsl:when>
			<xsl:otherwise># SND_ES1968_RADIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FM801">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FM801=y</xsl:when>
			<xsl:when test=". = 'module'">SND_FM801=m</xsl:when>
			<xsl:otherwise># SND_FM801 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FM801_TEA575X_BOOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FM801_TEA575X_BOOL=y</xsl:when>
			<xsl:otherwise># SND_FM801_TEA575X_BOOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDSP=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDSP=m</xsl:when>
			<xsl:otherwise># SND_HDSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDSPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDSPM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDSPM=m</xsl:when>
			<xsl:otherwise># SND_HDSPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ICE1712">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ICE1712=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ICE1712=m</xsl:when>
			<xsl:otherwise># SND_ICE1712 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ICE1724">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ICE1724=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ICE1724=m</xsl:when>
			<xsl:otherwise># SND_ICE1724 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INTEL8X0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INTEL8X0=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INTEL8X0=m</xsl:when>
			<xsl:otherwise># SND_INTEL8X0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_INTEL8X0M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_INTEL8X0M=y</xsl:when>
			<xsl:when test=". = 'module'">SND_INTEL8X0M=m</xsl:when>
			<xsl:otherwise># SND_INTEL8X0M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_KORG1212">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_KORG1212=y</xsl:when>
			<xsl:when test=". = 'module'">SND_KORG1212=m</xsl:when>
			<xsl:otherwise># SND_KORG1212 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_LOLA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_LOLA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_LOLA=m</xsl:when>
			<xsl:otherwise># SND_LOLA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_LX6464ES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_LX6464ES=y</xsl:when>
			<xsl:when test=". = 'module'">SND_LX6464ES=m</xsl:when>
			<xsl:otherwise># SND_LX6464ES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MAESTRO3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MAESTRO3=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MAESTRO3=m</xsl:when>
			<xsl:otherwise># SND_MAESTRO3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MAESTRO3_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MAESTRO3_INPUT=y</xsl:when>
			<xsl:otherwise># SND_MAESTRO3_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_MIXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MIXART=y</xsl:when>
			<xsl:when test=". = 'module'">SND_MIXART=m</xsl:when>
			<xsl:otherwise># SND_MIXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_NM256">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_NM256=y</xsl:when>
			<xsl:when test=". = 'module'">SND_NM256=m</xsl:when>
			<xsl:otherwise># SND_NM256 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCXHR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCXHR=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PCXHR=m</xsl:when>
			<xsl:otherwise># SND_PCXHR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RIPTIDE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RIPTIDE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RIPTIDE=m</xsl:when>
			<xsl:otherwise># SND_RIPTIDE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RME32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RME32=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RME32=m</xsl:when>
			<xsl:otherwise># SND_RME32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RME96">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RME96=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RME96=m</xsl:when>
			<xsl:otherwise># SND_RME96 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_RME9652">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_RME9652=y</xsl:when>
			<xsl:when test=". = 'module'">SND_RME9652=m</xsl:when>
			<xsl:otherwise># SND_RME9652 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SE6X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SE6X=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SE6X=m</xsl:when>
			<xsl:otherwise># SND_SE6X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SIS7019">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SIS7019=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SIS7019=m</xsl:when>
			<xsl:otherwise># SND_SIS7019 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SONICVIBES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SONICVIBES=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SONICVIBES=m</xsl:when>
			<xsl:otherwise># SND_SONICVIBES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_TRIDENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_TRIDENT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_TRIDENT=m</xsl:when>
			<xsl:otherwise># SND_TRIDENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VIA82XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VIA82XX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VIA82XX=m</xsl:when>
			<xsl:otherwise># SND_VIA82XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VIA82XX_MODEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VIA82XX_MODEM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VIA82XX_MODEM=m</xsl:when>
			<xsl:otherwise># SND_VIA82XX_MODEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VIRTUOSO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VIRTUOSO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VIRTUOSO=m</xsl:when>
			<xsl:otherwise># SND_VIRTUOSO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VX222">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VX222=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VX222=m</xsl:when>
			<xsl:otherwise># SND_VX222 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_YMFPCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_YMFPCI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_YMFPCI=m</xsl:when>
			<xsl:otherwise># SND_YMFPCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA=m</xsl:when>
			<xsl:otherwise># SND_HDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_INTEL=m</xsl:when>
			<xsl:otherwise># SND_HDA_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_TEGRA=m</xsl:when>
			<xsl:otherwise># SND_HDA_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_HWDEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_HWDEP=y</xsl:when>
			<xsl:otherwise># SND_HDA_HWDEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_RECONFIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_RECONFIG=y</xsl:when>
			<xsl:otherwise># SND_HDA_RECONFIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_INPUT_BEEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_INPUT_BEEP=y</xsl:when>
			<xsl:otherwise># SND_HDA_INPUT_BEEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_INPUT_BEEP_MODE">
		SND_HDA_INPUT_BEEP_MODE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_HDA_PATCH_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_PATCH_LOADER=y</xsl:when>
			<xsl:otherwise># SND_HDA_PATCH_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_REALTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_REALTEK=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_REALTEK=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_REALTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_ANALOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_ANALOG=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_ANALOG=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_ANALOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_SIGMATEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_SIGMATEL=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_SIGMATEL=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_SIGMATEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_VIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_VIA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_VIA=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_VIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_HDMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_HDMI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_HDMI=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_HDMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CIRRUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CIRRUS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_CIRRUS=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CIRRUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CONEXANT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CONEXANT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_CONEXANT=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CONEXANT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CA0110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CA0110=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_CA0110=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CA0110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CA0132">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CA0132=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_CA0132=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CA0132 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CA0132_DSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CA0132_DSP=y</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CA0132_DSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_CMEDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_CMEDIA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_CMEDIA=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_CMEDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_CODEC_SI3054">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CODEC_SI3054=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CODEC_SI3054=m</xsl:when>
			<xsl:otherwise># SND_HDA_CODEC_SI3054 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_GENERIC=m</xsl:when>
			<xsl:otherwise># SND_HDA_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_POWER_SAVE_DEFAULT">
		SND_HDA_POWER_SAVE_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_HDA_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_CORE=m</xsl:when>
			<xsl:otherwise># SND_HDA_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_DSP_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_DSP_LOADER=y</xsl:when>
			<xsl:otherwise># SND_HDA_DSP_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_I915">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_I915=y</xsl:when>
			<xsl:otherwise># SND_HDA_I915 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_EXT_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HDA_EXT_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HDA_EXT_CORE=m</xsl:when>
			<xsl:otherwise># SND_HDA_EXT_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HDA_PREALLOC_SIZE">
		SND_HDA_PREALLOC_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_PPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PPC=y</xsl:when>
			<xsl:otherwise># SND_PPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_POWERMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_POWERMAC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_POWERMAC=m</xsl:when>
			<xsl:otherwise># SND_POWERMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_POWERMAC_AUTO_DRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_POWERMAC_AUTO_DRC=y</xsl:when>
			<xsl:otherwise># SND_POWERMAC_AUTO_DRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PS3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PS3=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PS3=m</xsl:when>
			<xsl:otherwise># SND_PS3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PS3_DEFAULT_START_DELAY">
		SND_PS3_DEFAULT_START_DELAY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_AOA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA=m</xsl:when>
			<xsl:otherwise># SND_AOA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_FABRIC_LAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_FABRIC_LAYOUT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_FABRIC_LAYOUT=m</xsl:when>
			<xsl:otherwise># SND_AOA_FABRIC_LAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_ONYX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_ONYX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_ONYX=m</xsl:when>
			<xsl:otherwise># SND_AOA_ONYX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_TAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_TAS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_TAS=m</xsl:when>
			<xsl:otherwise># SND_AOA_TAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_TOONIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_TOONIE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_TOONIE=m</xsl:when>
			<xsl:otherwise># SND_AOA_TOONIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_SOUNDBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_SOUNDBUS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_SOUNDBUS=m</xsl:when>
			<xsl:otherwise># SND_AOA_SOUNDBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AOA_SOUNDBUS_I2S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AOA_SOUNDBUS_I2S=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AOA_SOUNDBUS_I2S=m</xsl:when>
			<xsl:otherwise># SND_AOA_SOUNDBUS_I2S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ARM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ARM=y</xsl:when>
			<xsl:otherwise># SND_ARM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ARMAACI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ARMAACI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ARMAACI=m</xsl:when>
			<xsl:otherwise># SND_ARMAACI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PXA2XX_PCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PXA2XX_PCM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PXA2XX_PCM=m</xsl:when>
			<xsl:otherwise># SND_PXA2XX_PCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PXA2XX_AC97">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PXA2XX_AC97=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PXA2XX_AC97=m</xsl:when>
			<xsl:otherwise># SND_PXA2XX_AC97 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PXA2XX_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PXA2XX_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PXA2XX_LIB=m</xsl:when>
			<xsl:otherwise># SND_PXA2XX_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PXA2XX_LIB_AC97">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PXA2XX_LIB_AC97=y</xsl:when>
			<xsl:otherwise># SND_PXA2XX_LIB_AC97 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ATMEL_ABDAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ATMEL_ABDAC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ATMEL_ABDAC=m</xsl:when>
			<xsl:otherwise># SND_ATMEL_ABDAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ATMEL_AC97C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ATMEL_AC97C=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ATMEL_AC97C=m</xsl:when>
			<xsl:otherwise># SND_ATMEL_AC97C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SPI=y</xsl:when>
			<xsl:otherwise># SND_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AT73C213">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AT73C213=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AT73C213=m</xsl:when>
			<xsl:otherwise># SND_AT73C213 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AT73C213_TARGET_BITRATE">
		SND_AT73C213_TARGET_BITRATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SND_MIPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_MIPS=y</xsl:when>
			<xsl:otherwise># SND_MIPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SGI_O2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SGI_O2=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SGI_O2=m</xsl:when>
			<xsl:otherwise># SND_SGI_O2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SGI_HAL2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SGI_HAL2=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SGI_HAL2=m</xsl:when>
			<xsl:otherwise># SND_SGI_HAL2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SUPERH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SUPERH=y</xsl:when>
			<xsl:otherwise># SND_SUPERH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_AICA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_AICA=y</xsl:when>
			<xsl:when test=". = 'module'">SND_AICA=m</xsl:when>
			<xsl:otherwise># SND_AICA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SH_DAC_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SH_DAC_AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SH_DAC_AUDIO=m</xsl:when>
			<xsl:otherwise># SND_SH_DAC_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB=y</xsl:when>
			<xsl:otherwise># SND_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_AUDIO=m</xsl:when>
			<xsl:otherwise># SND_USB_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_UA101">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_UA101=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_UA101=m</xsl:when>
			<xsl:otherwise># SND_USB_UA101 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_USX2Y">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_USX2Y=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_USX2Y=m</xsl:when>
			<xsl:otherwise># SND_USB_USX2Y is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_CAIAQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_CAIAQ=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_CAIAQ=m</xsl:when>
			<xsl:otherwise># SND_USB_CAIAQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_CAIAQ_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_CAIAQ_INPUT=y</xsl:when>
			<xsl:otherwise># SND_USB_CAIAQ_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_US122L">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_US122L=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_US122L=m</xsl:when>
			<xsl:otherwise># SND_USB_US122L is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_6FIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_6FIRE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_6FIRE=m</xsl:when>
			<xsl:otherwise># SND_USB_6FIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_HIFACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_HIFACE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_HIFACE=m</xsl:when>
			<xsl:otherwise># SND_USB_HIFACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_BCD2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_BCD2000=y</xsl:when>
			<xsl:when test=". = 'module'">SND_BCD2000=m</xsl:when>
			<xsl:otherwise># SND_BCD2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_LINE6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_LINE6=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_LINE6=m</xsl:when>
			<xsl:otherwise># SND_USB_LINE6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_POD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_POD=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_POD=m</xsl:when>
			<xsl:otherwise># SND_USB_POD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_PODHD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_PODHD=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_PODHD=m</xsl:when>
			<xsl:otherwise># SND_USB_PODHD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_TONEPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_TONEPORT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_TONEPORT=m</xsl:when>
			<xsl:otherwise># SND_USB_TONEPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_USB_VARIAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_USB_VARIAX=y</xsl:when>
			<xsl:when test=". = 'module'">SND_USB_VARIAX=m</xsl:when>
			<xsl:otherwise># SND_USB_VARIAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FIREWIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FIREWIRE=y</xsl:when>
			<xsl:otherwise># SND_FIREWIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FIREWIRE_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FIREWIRE_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_FIREWIRE_LIB=m</xsl:when>
			<xsl:otherwise># SND_FIREWIRE_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_DICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_DICE=y</xsl:when>
			<xsl:when test=". = 'module'">SND_DICE=m</xsl:when>
			<xsl:otherwise># SND_DICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_OXFW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_OXFW=y</xsl:when>
			<xsl:when test=". = 'module'">SND_OXFW=m</xsl:when>
			<xsl:otherwise># SND_OXFW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_ISIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_ISIGHT=y</xsl:when>
			<xsl:when test=". = 'module'">SND_ISIGHT=m</xsl:when>
			<xsl:otherwise># SND_ISIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FIREWORKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FIREWORKS=y</xsl:when>
			<xsl:when test=". = 'module'">SND_FIREWORKS=m</xsl:when>
			<xsl:otherwise># SND_FIREWORKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_BEBOB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_BEBOB=y</xsl:when>
			<xsl:when test=". = 'module'">SND_BEBOB=m</xsl:when>
			<xsl:otherwise># SND_BEBOB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FIREWIRE_DIGI00X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FIREWIRE_DIGI00X=y</xsl:when>
			<xsl:when test=". = 'module'">SND_FIREWIRE_DIGI00X=m</xsl:when>
			<xsl:otherwise># SND_FIREWIRE_DIGI00X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_FIREWIRE_TASCAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_FIREWIRE_TASCAM=y</xsl:when>
			<xsl:when test=". = 'module'">SND_FIREWIRE_TASCAM=m</xsl:when>
			<xsl:otherwise># SND_FIREWIRE_TASCAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PCMCIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PCMCIA=y</xsl:when>
			<xsl:otherwise># SND_PCMCIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_VXPOCKET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_VXPOCKET=y</xsl:when>
			<xsl:when test=". = 'module'">SND_VXPOCKET=m</xsl:when>
			<xsl:otherwise># SND_VXPOCKET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_PDAUDIOCF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_PDAUDIOCF=y</xsl:when>
			<xsl:when test=". = 'module'">SND_PDAUDIOCF=m</xsl:when>
			<xsl:otherwise># SND_PDAUDIOCF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SPARC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SPARC=y</xsl:when>
			<xsl:otherwise># SND_SPARC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SUN_AMD7930">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SUN_AMD7930=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SUN_AMD7930=m</xsl:when>
			<xsl:otherwise># SND_SUN_AMD7930 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SUN_CS4231">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SUN_CS4231=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SUN_CS4231=m</xsl:when>
			<xsl:otherwise># SND_SUN_CS4231 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SUN_DBRI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SUN_DBRI=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SUN_DBRI=m</xsl:when>
			<xsl:otherwise># SND_SUN_DBRI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_GSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_GSC=y</xsl:when>
			<xsl:otherwise># SND_GSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_HARMONY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_HARMONY=y</xsl:when>
			<xsl:when test=". = 'module'">SND_HARMONY=m</xsl:when>
			<xsl:otherwise># SND_HARMONY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SND_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SND_SOC=y</xsl:when>
			<xsl:when test=". = 'module'">SND_SOC=m</xsl:when>
			<xsl:otherwise># SND_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_PRIME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_PRIME=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_PRIME=m</xsl:when>
			<xsl:otherwise># SOUND_PRIME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_BCM_CS4297A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_BCM_CS4297A=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_BCM_CS4297A=m</xsl:when>
			<xsl:otherwise># SOUND_BCM_CS4297A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_MSNDCLAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_MSNDCLAS=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_MSNDCLAS=m</xsl:when>
			<xsl:otherwise># SOUND_MSNDCLAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDCLAS_HAVE_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSNDCLAS_HAVE_BOOT=y</xsl:when>
			<xsl:otherwise># MSNDCLAS_HAVE_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDCLAS_INIT_FILE">
		MSNDCLAS_INIT_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDCLAS_PERM_FILE">
		MSNDCLAS_PERM_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDCLAS_IRQ">
		MSNDCLAS_IRQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SOUND_MSNDPIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_MSNDPIN=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_MSNDPIN=m</xsl:when>
			<xsl:otherwise># SOUND_MSNDPIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDPIN_HAVE_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSNDPIN_HAVE_BOOT=y</xsl:when>
			<xsl:otherwise># MSNDPIN_HAVE_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDPIN_INIT_FILE">
		MSNDPIN_INIT_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDPIN_PERM_FILE">
		MSNDPIN_PERM_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDPIN_IRQ">
		MSNDPIN_IRQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDPIN_DIGITAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSNDPIN_DIGITAL=y</xsl:when>
			<xsl:otherwise># MSNDPIN_DIGITAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDPIN_NONPNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSNDPIN_NONPNP=y</xsl:when>
			<xsl:otherwise># MSNDPIN_NONPNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSNDPIN_MPU_IRQ">
		MSNDPIN_MPU_IRQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSNDPIN_IDE_IRQ">
		MSNDPIN_IDE_IRQ=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MSND_FIFOSIZE">
		MSND_FIFOSIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SOUND_OSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_OSS=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_OSS=m</xsl:when>
			<xsl:otherwise># SOUND_OSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_TRACEINIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_TRACEINIT=y</xsl:when>
			<xsl:otherwise># SOUND_TRACEINIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_DMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_DMAP=y</xsl:when>
			<xsl:otherwise># SOUND_DMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_VMIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_VMIDI=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_VMIDI=m</xsl:when>
			<xsl:otherwise># SOUND_VMIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_TRIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_TRIX=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_TRIX=m</xsl:when>
			<xsl:otherwise># SOUND_TRIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRIX_HAVE_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRIX_HAVE_BOOT=y</xsl:when>
			<xsl:otherwise># TRIX_HAVE_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRIX_BOOT_FILE">
		TRIX_BOOT_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SOUND_MSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_MSS=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_MSS=m</xsl:when>
			<xsl:otherwise># SOUND_MSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_MPU401">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_MPU401=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_MPU401=m</xsl:when>
			<xsl:otherwise># SOUND_MPU401 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_PAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_PAS=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_PAS=m</xsl:when>
			<xsl:otherwise># SOUND_PAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PAS_JOYSTICK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PAS_JOYSTICK=y</xsl:when>
			<xsl:otherwise># PAS_JOYSTICK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_PSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_PSS=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_PSS=m</xsl:when>
			<xsl:otherwise># SOUND_PSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSS_MIXER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSS_MIXER=y</xsl:when>
			<xsl:otherwise># PSS_MIXER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSS_HAVE_BOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSS_HAVE_BOOT=y</xsl:when>
			<xsl:otherwise># PSS_HAVE_BOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSS_BOOT_FILE">
		PSS_BOOT_FILE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SOUND_SB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_SB=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_SB=m</xsl:when>
			<xsl:otherwise># SOUND_SB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_YM3812">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_YM3812=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_YM3812=m</xsl:when>
			<xsl:otherwise># SOUND_YM3812 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_UART6850">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_UART6850=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_UART6850=m</xsl:when>
			<xsl:otherwise># SOUND_UART6850 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_AEDSP16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_AEDSP16=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_AEDSP16=m</xsl:when>
			<xsl:otherwise># SOUND_AEDSP16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC6600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC6600=y</xsl:when>
			<xsl:otherwise># SC6600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC6600_JOY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SC6600_JOY=y</xsl:when>
			<xsl:otherwise># SC6600_JOY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SC6600_CDROM">
		SC6600_CDROM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SOUND_VIDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_VIDC=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_VIDC=m</xsl:when>
			<xsl:otherwise># SOUND_VIDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_WAVEARTIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_WAVEARTIST=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_WAVEARTIST=m</xsl:when>
			<xsl:otherwise># SOUND_WAVEARTIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOUND_KAHLUA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOUND_KAHLUA=y</xsl:when>
			<xsl:when test=". = 'module'">SOUND_KAHLUA=m</xsl:when>
			<xsl:otherwise># SOUND_KAHLUA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AC97_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AC97_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">AC97_BUS=m</xsl:when>
			<xsl:otherwise># AC97_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID=y</xsl:when>
			<xsl:when test=". = 'module'">HID=m</xsl:when>
			<xsl:otherwise># HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_BATTERY_STRENGTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_BATTERY_STRENGTH=y</xsl:when>
			<xsl:otherwise># HID_BATTERY_STRENGTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HIDRAW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HIDRAW=y</xsl:when>
			<xsl:otherwise># HIDRAW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UHID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UHID=y</xsl:when>
			<xsl:when test=". = 'module'">UHID=m</xsl:when>
			<xsl:otherwise># UHID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GENERIC=m</xsl:when>
			<xsl:otherwise># HID_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_A4TECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_A4TECH=y</xsl:when>
			<xsl:when test=". = 'module'">HID_A4TECH=m</xsl:when>
			<xsl:otherwise># HID_A4TECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ACRUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ACRUX=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ACRUX=m</xsl:when>
			<xsl:otherwise># HID_ACRUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ACRUX_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ACRUX_FF=y</xsl:when>
			<xsl:otherwise># HID_ACRUX_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_APPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_APPLE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_APPLE=m</xsl:when>
			<xsl:otherwise># HID_APPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_APPLEIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_APPLEIR=y</xsl:when>
			<xsl:when test=". = 'module'">HID_APPLEIR=m</xsl:when>
			<xsl:otherwise># HID_APPLEIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ASUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ASUS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ASUS=m</xsl:when>
			<xsl:otherwise># HID_ASUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_AUREAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_AUREAL=y</xsl:when>
			<xsl:when test=". = 'module'">HID_AUREAL=m</xsl:when>
			<xsl:otherwise># HID_AUREAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_BELKIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_BELKIN=y</xsl:when>
			<xsl:when test=". = 'module'">HID_BELKIN=m</xsl:when>
			<xsl:otherwise># HID_BELKIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_BETOP_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_BETOP_FF=y</xsl:when>
			<xsl:when test=". = 'module'">HID_BETOP_FF=m</xsl:when>
			<xsl:otherwise># HID_BETOP_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CHERRY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CHERRY=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CHERRY=m</xsl:when>
			<xsl:otherwise># HID_CHERRY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CHICONY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CHICONY=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CHICONY=m</xsl:when>
			<xsl:otherwise># HID_CHICONY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CORSAIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CORSAIR=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CORSAIR=m</xsl:when>
			<xsl:otherwise># HID_CORSAIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PRODIKEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PRODIKEYS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PRODIKEYS=m</xsl:when>
			<xsl:otherwise># HID_PRODIKEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CMEDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CMEDIA=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CMEDIA=m</xsl:when>
			<xsl:otherwise># HID_CMEDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CP2112">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CP2112=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CP2112=m</xsl:when>
			<xsl:otherwise># HID_CP2112 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_CYPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_CYPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_CYPRESS=m</xsl:when>
			<xsl:otherwise># HID_CYPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_DRAGONRISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_DRAGONRISE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_DRAGONRISE=m</xsl:when>
			<xsl:otherwise># HID_DRAGONRISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DRAGONRISE_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DRAGONRISE_FF=y</xsl:when>
			<xsl:otherwise># DRAGONRISE_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_EMS_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_EMS_FF=y</xsl:when>
			<xsl:when test=". = 'module'">HID_EMS_FF=m</xsl:when>
			<xsl:otherwise># HID_EMS_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ELECOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ELECOM=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ELECOM=m</xsl:when>
			<xsl:otherwise># HID_ELECOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ELO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ELO=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ELO=m</xsl:when>
			<xsl:otherwise># HID_ELO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_EZKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_EZKEY=y</xsl:when>
			<xsl:when test=". = 'module'">HID_EZKEY=m</xsl:when>
			<xsl:otherwise># HID_EZKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GEMBIRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GEMBIRD=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GEMBIRD=m</xsl:when>
			<xsl:otherwise># HID_GEMBIRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GFRM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GFRM=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GFRM=m</xsl:when>
			<xsl:otherwise># HID_GFRM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_HOLTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_HOLTEK=y</xsl:when>
			<xsl:when test=". = 'module'">HID_HOLTEK=m</xsl:when>
			<xsl:otherwise># HID_HOLTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HOLTEK_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HOLTEK_FF=y</xsl:when>
			<xsl:otherwise># HOLTEK_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GT683R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GT683R=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GT683R=m</xsl:when>
			<xsl:otherwise># HID_GT683R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_KEYTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_KEYTOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">HID_KEYTOUCH=m</xsl:when>
			<xsl:otherwise># HID_KEYTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_KYE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_KYE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_KYE=m</xsl:when>
			<xsl:otherwise># HID_KYE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_UCLOGIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_UCLOGIC=y</xsl:when>
			<xsl:when test=". = 'module'">HID_UCLOGIC=m</xsl:when>
			<xsl:otherwise># HID_UCLOGIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_WALTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_WALTOP=y</xsl:when>
			<xsl:when test=". = 'module'">HID_WALTOP=m</xsl:when>
			<xsl:otherwise># HID_WALTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GYRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GYRATION=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GYRATION=m</xsl:when>
			<xsl:otherwise># HID_GYRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ICADE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ICADE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ICADE=m</xsl:when>
			<xsl:otherwise># HID_ICADE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_TWINHAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_TWINHAN=y</xsl:when>
			<xsl:when test=". = 'module'">HID_TWINHAN=m</xsl:when>
			<xsl:otherwise># HID_TWINHAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_KENSINGTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_KENSINGTON=y</xsl:when>
			<xsl:when test=". = 'module'">HID_KENSINGTON=m</xsl:when>
			<xsl:otherwise># HID_KENSINGTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LCPOWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LCPOWER=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LCPOWER=m</xsl:when>
			<xsl:otherwise># HID_LCPOWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LED=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LED=m</xsl:when>
			<xsl:otherwise># HID_LED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LENOVO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LENOVO=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LENOVO=m</xsl:when>
			<xsl:otherwise># HID_LENOVO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LOGITECH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LOGITECH=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LOGITECH=m</xsl:when>
			<xsl:otherwise># HID_LOGITECH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LOGITECH_DJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LOGITECH_DJ=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LOGITECH_DJ=m</xsl:when>
			<xsl:otherwise># HID_LOGITECH_DJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_LOGITECH_HIDPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_LOGITECH_HIDPP=y</xsl:when>
			<xsl:when test=". = 'module'">HID_LOGITECH_HIDPP=m</xsl:when>
			<xsl:otherwise># HID_LOGITECH_HIDPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGITECH_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGITECH_FF=y</xsl:when>
			<xsl:otherwise># LOGITECH_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGIRUMBLEPAD2_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGIRUMBLEPAD2_FF=y</xsl:when>
			<xsl:otherwise># LOGIRUMBLEPAD2_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGIG940_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGIG940_FF=y</xsl:when>
			<xsl:otherwise># LOGIG940_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGIWHEELS_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGIWHEELS_FF=y</xsl:when>
			<xsl:otherwise># LOGIWHEELS_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_MAGICMOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_MAGICMOUSE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_MAGICMOUSE=m</xsl:when>
			<xsl:otherwise># HID_MAGICMOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_MICROSOFT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_MICROSOFT=y</xsl:when>
			<xsl:when test=". = 'module'">HID_MICROSOFT=m</xsl:when>
			<xsl:otherwise># HID_MICROSOFT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_MONTEREY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_MONTEREY=y</xsl:when>
			<xsl:when test=". = 'module'">HID_MONTEREY=m</xsl:when>
			<xsl:otherwise># HID_MONTEREY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_MULTITOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_MULTITOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">HID_MULTITOUCH=m</xsl:when>
			<xsl:otherwise># HID_MULTITOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_NTRIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_NTRIG=y</xsl:when>
			<xsl:when test=". = 'module'">HID_NTRIG=m</xsl:when>
			<xsl:otherwise># HID_NTRIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ORTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ORTEK=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ORTEK=m</xsl:when>
			<xsl:otherwise># HID_ORTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PANTHERLORD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PANTHERLORD=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PANTHERLORD=m</xsl:when>
			<xsl:otherwise># HID_PANTHERLORD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PANTHERLORD_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PANTHERLORD_FF=y</xsl:when>
			<xsl:otherwise># PANTHERLORD_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PENMOUNT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PENMOUNT=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PENMOUNT=m</xsl:when>
			<xsl:otherwise># HID_PENMOUNT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PETALYNX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PETALYNX=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PETALYNX=m</xsl:when>
			<xsl:otherwise># HID_PETALYNX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PICOLCD=m</xsl:when>
			<xsl:otherwise># HID_PICOLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD_FB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD_FB=y</xsl:when>
			<xsl:otherwise># HID_PICOLCD_FB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD_BACKLIGHT=y</xsl:when>
			<xsl:otherwise># HID_PICOLCD_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD_LCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD_LCD=y</xsl:when>
			<xsl:otherwise># HID_PICOLCD_LCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD_LEDS=y</xsl:when>
			<xsl:otherwise># HID_PICOLCD_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PICOLCD_CIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PICOLCD_CIR=y</xsl:when>
			<xsl:otherwise># HID_PICOLCD_CIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PLANTRONICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PLANTRONICS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PLANTRONICS=m</xsl:when>
			<xsl:otherwise># HID_PLANTRONICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PRIMAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PRIMAX=y</xsl:when>
			<xsl:when test=". = 'module'">HID_PRIMAX=m</xsl:when>
			<xsl:otherwise># HID_PRIMAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ROCCAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ROCCAT=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ROCCAT=m</xsl:when>
			<xsl:otherwise># HID_ROCCAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SAITEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SAITEK=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SAITEK=m</xsl:when>
			<xsl:otherwise># HID_SAITEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SAMSUNG=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SAMSUNG=m</xsl:when>
			<xsl:otherwise># HID_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SONY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SONY=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SONY=m</xsl:when>
			<xsl:otherwise># HID_SONY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SONY_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SONY_FF=y</xsl:when>
			<xsl:otherwise># SONY_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SPEEDLINK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SPEEDLINK=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SPEEDLINK=m</xsl:when>
			<xsl:otherwise># HID_SPEEDLINK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_STEELSERIES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_STEELSERIES=y</xsl:when>
			<xsl:when test=". = 'module'">HID_STEELSERIES=m</xsl:when>
			<xsl:otherwise># HID_STEELSERIES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SUNPLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SUNPLUS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SUNPLUS=m</xsl:when>
			<xsl:otherwise># HID_SUNPLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_RMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_RMI=y</xsl:when>
			<xsl:when test=". = 'module'">HID_RMI=m</xsl:when>
			<xsl:otherwise># HID_RMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_GREENASIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_GREENASIA=y</xsl:when>
			<xsl:when test=". = 'module'">HID_GREENASIA=m</xsl:when>
			<xsl:otherwise># HID_GREENASIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GREENASIA_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GREENASIA_FF=y</xsl:when>
			<xsl:otherwise># GREENASIA_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_HYPERV_MOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_HYPERV_MOUSE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_HYPERV_MOUSE=m</xsl:when>
			<xsl:otherwise># HID_HYPERV_MOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SMARTJOYPLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SMARTJOYPLUS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SMARTJOYPLUS=m</xsl:when>
			<xsl:otherwise># HID_SMARTJOYPLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SMARTJOYPLUS_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SMARTJOYPLUS_FF=y</xsl:when>
			<xsl:otherwise># SMARTJOYPLUS_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_TIVO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_TIVO=y</xsl:when>
			<xsl:when test=". = 'module'">HID_TIVO=m</xsl:when>
			<xsl:otherwise># HID_TIVO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_TOPSEED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_TOPSEED=y</xsl:when>
			<xsl:when test=". = 'module'">HID_TOPSEED=m</xsl:when>
			<xsl:otherwise># HID_TOPSEED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_THINGM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_THINGM=y</xsl:when>
			<xsl:when test=". = 'module'">HID_THINGM=m</xsl:when>
			<xsl:otherwise># HID_THINGM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_THRUSTMASTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_THRUSTMASTER=y</xsl:when>
			<xsl:when test=". = 'module'">HID_THRUSTMASTER=m</xsl:when>
			<xsl:otherwise># HID_THRUSTMASTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THRUSTMASTER_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THRUSTMASTER_FF=y</xsl:when>
			<xsl:otherwise># THRUSTMASTER_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_WACOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_WACOM=y</xsl:when>
			<xsl:when test=". = 'module'">HID_WACOM=m</xsl:when>
			<xsl:otherwise># HID_WACOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_WIIMOTE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_WIIMOTE=y</xsl:when>
			<xsl:when test=". = 'module'">HID_WIIMOTE=m</xsl:when>
			<xsl:otherwise># HID_WIIMOTE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_XINMO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_XINMO=y</xsl:when>
			<xsl:when test=". = 'module'">HID_XINMO=m</xsl:when>
			<xsl:otherwise># HID_XINMO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ZEROPLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ZEROPLUS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ZEROPLUS=m</xsl:when>
			<xsl:otherwise># HID_ZEROPLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZEROPLUS_FF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZEROPLUS_FF=y</xsl:when>
			<xsl:otherwise># ZEROPLUS_FF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ZYDACRON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ZYDACRON=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ZYDACRON=m</xsl:when>
			<xsl:otherwise># HID_ZYDACRON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_HUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_HUB=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_HUB=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_HUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_CUSTOM_SENSOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_CUSTOM_SENSOR=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_CUSTOM_SENSOR=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_CUSTOM_SENSOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_ALPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_ALPS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_ALPS=m</xsl:when>
			<xsl:otherwise># HID_ALPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HID=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HID=m</xsl:when>
			<xsl:otherwise># USB_HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_PID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_PID=y</xsl:when>
			<xsl:otherwise># HID_PID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HIDDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HIDDEV=y</xsl:when>
			<xsl:otherwise># USB_HIDDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_KBD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_KBD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_KBD=m</xsl:when>
			<xsl:otherwise># USB_KBD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MOUSE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MOUSE=m</xsl:when>
			<xsl:otherwise># USB_MOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_HID=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_HID=m</xsl:when>
			<xsl:otherwise># I2C_HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_BIG_ENDIAN_DESC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_BIG_ENDIAN_DESC=y</xsl:when>
			<xsl:otherwise># USB_OHCI_BIG_ENDIAN_DESC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_BIG_ENDIAN_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_BIG_ENDIAN_MMIO=y</xsl:when>
			<xsl:otherwise># USB_OHCI_BIG_ENDIAN_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_LITTLE_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_LITTLE_ENDIAN=y</xsl:when>
			<xsl:otherwise># USB_OHCI_LITTLE_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_BIG_ENDIAN_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_BIG_ENDIAN_MMIO=y</xsl:when>
			<xsl:otherwise># USB_EHCI_BIG_ENDIAN_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_BIG_ENDIAN_DESC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_BIG_ENDIAN_DESC=y</xsl:when>
			<xsl:otherwise># USB_EHCI_BIG_ENDIAN_DESC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SUPPORT=y</xsl:when>
			<xsl:otherwise># USB_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">USB_COMMON=m</xsl:when>
			<xsl:otherwise># USB_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ARCH_HAS_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ARCH_HAS_HCD=y</xsl:when>
			<xsl:otherwise># USB_ARCH_HAS_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB=y</xsl:when>
			<xsl:when test=". = 'module'">USB=m</xsl:when>
			<xsl:otherwise># USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ANNOUNCE_NEW_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ANNOUNCE_NEW_DEVICES=y</xsl:when>
			<xsl:otherwise># USB_ANNOUNCE_NEW_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DEFAULT_PERSIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DEFAULT_PERSIST=y</xsl:when>
			<xsl:otherwise># USB_DEFAULT_PERSIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DYNAMIC_MINORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DYNAMIC_MINORS=y</xsl:when>
			<xsl:otherwise># USB_DYNAMIC_MINORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OTG=y</xsl:when>
			<xsl:otherwise># USB_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OTG_WHITELIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OTG_WHITELIST=y</xsl:when>
			<xsl:otherwise># USB_OTG_WHITELIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OTG_BLACKLIST_HUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OTG_BLACKLIST_HUB=y</xsl:when>
			<xsl:otherwise># USB_OTG_BLACKLIST_HUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OTG_FSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OTG_FSM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OTG_FSM=m</xsl:when>
			<xsl:otherwise># USB_OTG_FSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ULPI_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ULPI_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ULPI_BUS=m</xsl:when>
			<xsl:otherwise># USB_ULPI_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MON=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MON=m</xsl:when>
			<xsl:otherwise># USB_MON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_WUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_WUSB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_WUSB=m</xsl:when>
			<xsl:otherwise># USB_WUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_WUSB_CBAF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_WUSB_CBAF=y</xsl:when>
			<xsl:when test=". = 'module'">USB_WUSB_CBAF=m</xsl:when>
			<xsl:otherwise># USB_WUSB_CBAF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_WUSB_CBAF_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_WUSB_CBAF_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_WUSB_CBAF_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_C67X00_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_C67X00_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_C67X00_HCD=m</xsl:when>
			<xsl:otherwise># USB_C67X00_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_XHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_PCI=m</xsl:when>
			<xsl:otherwise># USB_XHCI_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_PLATFORM=m</xsl:when>
			<xsl:otherwise># USB_XHCI_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_MTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_MTK=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_MTK=m</xsl:when>
			<xsl:otherwise># USB_XHCI_MTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_MVEBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_MVEBU=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_MVEBU=m</xsl:when>
			<xsl:otherwise># USB_XHCI_MVEBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_RCAR=m</xsl:when>
			<xsl:otherwise># USB_XHCI_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XHCI_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XHCI_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XHCI_TEGRA=m</xsl:when>
			<xsl:otherwise># USB_XHCI_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_ROOT_HUB_TT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_ROOT_HUB_TT=y</xsl:when>
			<xsl:otherwise># USB_EHCI_ROOT_HUB_TT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_TT_NEWSCHED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_TT_NEWSCHED=y</xsl:when>
			<xsl:otherwise># USB_EHCI_TT_NEWSCHED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_PCI=m</xsl:when>
			<xsl:otherwise># USB_EHCI_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_PMC_MSP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_PMC_MSP=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_PMC_MSP=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_PMC_MSP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XPS_USB_HCD_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XPS_USB_HCD_XILINX=y</xsl:when>
			<xsl:otherwise># XPS_USB_HCD_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_FSL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_FSL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_FSL=m</xsl:when>
			<xsl:otherwise># USB_EHCI_FSL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_MXC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_MXC=m</xsl:when>
			<xsl:otherwise># USB_EHCI_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_OMAP=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_ORION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_ORION=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_ORION=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_ORION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_SPEAR=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_STI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_STI=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_AT91=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_MSM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_MSM=m</xsl:when>
			<xsl:otherwise># USB_EHCI_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_TEGRA=m</xsl:when>
			<xsl:otherwise># USB_EHCI_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_PPC_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_PPC_OF=y</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_PPC_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_SH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_SH=y</xsl:when>
			<xsl:otherwise># USB_EHCI_SH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_EXYNOS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_EXYNOS=m</xsl:when>
			<xsl:otherwise># USB_EHCI_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_MV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_MV=y</xsl:when>
			<xsl:otherwise># USB_EHCI_MV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_W90X900_EHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_W90X900_EHCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_W90X900_EHCI=m</xsl:when>
			<xsl:otherwise># USB_W90X900_EHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CNS3XXX_EHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CNS3XXX_EHCI=y</xsl:when>
			<xsl:otherwise># USB_CNS3XXX_EHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_ATH79">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_ATH79=y</xsl:when>
			<xsl:otherwise># USB_EHCI_ATH79 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHCI_HCD_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHCI_HCD_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHCI_HCD_PLATFORM=m</xsl:when>
			<xsl:otherwise># USB_EHCI_HCD_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OCTEON_EHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OCTEON_EHCI=y</xsl:when>
			<xsl:otherwise># USB_OCTEON_EHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OXU210HP_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OXU210HP_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OXU210HP_HCD=m</xsl:when>
			<xsl:otherwise># USB_OXU210HP_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP116X_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP116X_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ISP116X_HCD=m</xsl:when>
			<xsl:otherwise># USB_ISP116X_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1362_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1362_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ISP1362_HCD=m</xsl:when>
			<xsl:otherwise># USB_ISP1362_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FOTG210_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FOTG210_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FOTG210_HCD=m</xsl:when>
			<xsl:otherwise># USB_FOTG210_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MAX3421_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MAX3421_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MAX3421_HCD=m</xsl:when>
			<xsl:otherwise># USB_MAX3421_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_OMAP1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_OMAP1=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_OMAP1=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_OMAP1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_SPEAR=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_STI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_STI=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_S3C2410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_S3C2410=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_S3C2410=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_S3C2410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_LPC32XX=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PXA27X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PXA27X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_PXA27X=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PXA27X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_AT91=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_OMAP3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_OMAP3=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_OMAP3=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_OMAP3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_DAVINCI=y</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_ATH79">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_ATH79=y</xsl:when>
			<xsl:otherwise># USB_OHCI_ATH79 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PPC_OF_BE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PPC_OF_BE=y</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PPC_OF_BE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PPC_OF_LE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PPC_OF_LE=y</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PPC_OF_LE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PPC_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PPC_OF=y</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PPC_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_PCI=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_SSB=y</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_SH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_SH=y</xsl:when>
			<xsl:otherwise># USB_OHCI_SH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_EXYNOS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_EXYNOS=m</xsl:when>
			<xsl:otherwise># USB_OHCI_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CNS3XXX_OHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CNS3XXX_OHCI=y</xsl:when>
			<xsl:otherwise># USB_CNS3XXX_OHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OHCI_HCD_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OHCI_HCD_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OHCI_HCD_PLATFORM=m</xsl:when>
			<xsl:otherwise># USB_OHCI_HCD_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OCTEON_OHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OCTEON_OHCI=y</xsl:when>
			<xsl:otherwise># USB_OCTEON_OHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_UHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_UHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UHCI_SUPPORT_NON_PCI_HC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UHCI_SUPPORT_NON_PCI_HC=y</xsl:when>
			<xsl:otherwise># USB_UHCI_SUPPORT_NON_PCI_HC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UHCI_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UHCI_PLATFORM=y</xsl:when>
			<xsl:otherwise># USB_UHCI_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UHCI_BIG_ENDIAN_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UHCI_BIG_ENDIAN_MMIO=y</xsl:when>
			<xsl:otherwise># USB_UHCI_BIG_ENDIAN_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UHCI_BIG_ENDIAN_DESC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UHCI_BIG_ENDIAN_DESC=y</xsl:when>
			<xsl:otherwise># USB_UHCI_BIG_ENDIAN_DESC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_FHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FHCI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FHCI_DEBUG=y</xsl:when>
			<xsl:otherwise># FHCI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_U132_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_U132_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_U132_HCD=m</xsl:when>
			<xsl:otherwise># USB_U132_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SL811_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SL811_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SL811_HCD=m</xsl:when>
			<xsl:otherwise># USB_SL811_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SL811_HCD_ISO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SL811_HCD_ISO=y</xsl:when>
			<xsl:otherwise># USB_SL811_HCD_ISO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SL811_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SL811_CS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SL811_CS=m</xsl:when>
			<xsl:otherwise># USB_SL811_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_R8A66597_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_R8A66597_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_R8A66597_HCD=m</xsl:when>
			<xsl:otherwise># USB_R8A66597_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RENESAS_USBHS_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RENESAS_USBHS_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RENESAS_USBHS_HCD=m</xsl:when>
			<xsl:otherwise># USB_RENESAS_USBHS_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_WHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_WHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_WHCI_HCD=m</xsl:when>
			<xsl:otherwise># USB_WHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HWA_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HWA_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HWA_HCD=m</xsl:when>
			<xsl:otherwise># USB_HWA_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_IMX21_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_IMX21_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_IMX21_HCD=m</xsl:when>
			<xsl:otherwise># USB_IMX21_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HCD_BCMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HCD_BCMA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HCD_BCMA=m</xsl:when>
			<xsl:otherwise># USB_HCD_BCMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HCD_SSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HCD_SSB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HCD_SSB=m</xsl:when>
			<xsl:otherwise># USB_HCD_SSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HCD_TEST_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HCD_TEST_MODE=y</xsl:when>
			<xsl:otherwise># USB_HCD_TEST_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RENESAS_USBHS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RENESAS_USBHS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RENESAS_USBHS=m</xsl:when>
			<xsl:otherwise># USB_RENESAS_USBHS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ACM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ACM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ACM=m</xsl:when>
			<xsl:otherwise># USB_ACM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PRINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PRINTER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PRINTER=m</xsl:when>
			<xsl:otherwise># USB_PRINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_WDM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_WDM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_WDM=m</xsl:when>
			<xsl:otherwise># USB_WDM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TMC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_TMC=m</xsl:when>
			<xsl:otherwise># USB_TMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE=m</xsl:when>
			<xsl:otherwise># USB_STORAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_STORAGE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_REALTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_REALTEK=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_REALTEK=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_REALTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REALTEK_AUTOPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REALTEK_AUTOPM=y</xsl:when>
			<xsl:otherwise># REALTEK_AUTOPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_DATAFAB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_DATAFAB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_DATAFAB=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_DATAFAB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_FREECOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_FREECOM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_FREECOM=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_FREECOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_ISD200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_ISD200=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_ISD200=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_ISD200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_USBAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_USBAT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_USBAT=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_USBAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_SDDR09">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_SDDR09=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_SDDR09=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_SDDR09 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_SDDR55">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_SDDR55=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_SDDR55=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_SDDR55 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_JUMPSHOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_JUMPSHOT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_JUMPSHOT=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_JUMPSHOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_ALAUDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_ALAUDA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_ALAUDA=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_ALAUDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_ONETOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_ONETOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_ONETOUCH=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_ONETOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_KARMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_KARMA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_KARMA=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_KARMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_CYPRESS_ATACB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_CYPRESS_ATACB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_CYPRESS_ATACB=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_CYPRESS_ATACB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_STORAGE_ENE_UB6250">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_STORAGE_ENE_UB6250=y</xsl:when>
			<xsl:when test=". = 'module'">USB_STORAGE_ENE_UB6250=m</xsl:when>
			<xsl:otherwise># USB_STORAGE_ENE_UB6250 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UAS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_UAS=m</xsl:when>
			<xsl:otherwise># USB_UAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MDC800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MDC800=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MDC800=m</xsl:when>
			<xsl:otherwise># USB_MDC800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MICROTEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MICROTEK=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MICROTEK=m</xsl:when>
			<xsl:otherwise># USB_MICROTEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USBIP_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USBIP_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">USBIP_CORE=m</xsl:when>
			<xsl:otherwise># USBIP_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USBIP_VHCI_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USBIP_VHCI_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USBIP_VHCI_HCD=m</xsl:when>
			<xsl:otherwise># USBIP_VHCI_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USBIP_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USBIP_HOST=y</xsl:when>
			<xsl:when test=". = 'module'">USBIP_HOST=m</xsl:when>
			<xsl:otherwise># USBIP_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USBIP_VUDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USBIP_VUDC=y</xsl:when>
			<xsl:when test=". = 'module'">USBIP_VUDC=m</xsl:when>
			<xsl:otherwise># USBIP_VUDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USBIP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USBIP_DEBUG=y</xsl:when>
			<xsl:otherwise># USBIP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_HDRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_HDRC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_HDRC=m</xsl:when>
			<xsl:otherwise># USB_MUSB_HDRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_HOST=y</xsl:when>
			<xsl:otherwise># USB_MUSB_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_GADGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_GADGET=y</xsl:when>
			<xsl:otherwise># USB_MUSB_GADGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_DUAL_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_DUAL_ROLE=y</xsl:when>
			<xsl:otherwise># USB_MUSB_DUAL_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_SUNXI=m</xsl:when>
			<xsl:otherwise># USB_MUSB_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_DAVINCI=m</xsl:when>
			<xsl:otherwise># USB_MUSB_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_DA8XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_DA8XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_DA8XX=m</xsl:when>
			<xsl:otherwise># USB_MUSB_DA8XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_TUSB6010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_TUSB6010=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_TUSB6010=m</xsl:when>
			<xsl:otherwise># USB_MUSB_TUSB6010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_OMAP2PLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_OMAP2PLUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_OMAP2PLUS=m</xsl:when>
			<xsl:otherwise># USB_MUSB_OMAP2PLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_AM35X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_AM35X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_AM35X=m</xsl:when>
			<xsl:otherwise># USB_MUSB_AM35X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_DSPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_DSPS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_DSPS=m</xsl:when>
			<xsl:otherwise># USB_MUSB_DSPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_BLACKFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_BLACKFIN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_BLACKFIN=m</xsl:when>
			<xsl:otherwise># USB_MUSB_BLACKFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_UX500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_UX500=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_UX500=m</xsl:when>
			<xsl:otherwise># USB_MUSB_UX500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_JZ4740=m</xsl:when>
			<xsl:otherwise># USB_MUSB_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MUSB_AM335X_CHILD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MUSB_AM335X_CHILD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MUSB_AM335X_CHILD=m</xsl:when>
			<xsl:otherwise># USB_MUSB_AM335X_CHILD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MUSB_PIO_ONLY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MUSB_PIO_ONLY=y</xsl:when>
			<xsl:otherwise># MUSB_PIO_ONLY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UX500_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UX500_DMA=y</xsl:when>
			<xsl:otherwise># USB_UX500_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_INVENTRA_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_INVENTRA_DMA=y</xsl:when>
			<xsl:otherwise># USB_INVENTRA_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TI_CPPI_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TI_CPPI_DMA=y</xsl:when>
			<xsl:otherwise># USB_TI_CPPI_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TI_CPPI41_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TI_CPPI41_DMA=y</xsl:when>
			<xsl:otherwise># USB_TI_CPPI41_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TUSB_OMAP_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TUSB_OMAP_DMA=y</xsl:when>
			<xsl:otherwise># USB_TUSB_OMAP_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3=m</xsl:when>
			<xsl:otherwise># USB_DWC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_ULPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_ULPI=y</xsl:when>
			<xsl:otherwise># USB_DWC3_ULPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_HOST=y</xsl:when>
			<xsl:otherwise># USB_DWC3_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_GADGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_GADGET=y</xsl:when>
			<xsl:otherwise># USB_DWC3_GADGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_DUAL_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_DUAL_ROLE=y</xsl:when>
			<xsl:otherwise># USB_DWC3_DUAL_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_OMAP=m</xsl:when>
			<xsl:otherwise># USB_DWC3_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_EXYNOS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_EXYNOS=m</xsl:when>
			<xsl:otherwise># USB_DWC3_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_PCI=m</xsl:when>
			<xsl:otherwise># USB_DWC3_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_KEYSTONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_KEYSTONE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_KEYSTONE=m</xsl:when>
			<xsl:otherwise># USB_DWC3_KEYSTONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_OF_SIMPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_OF_SIMPLE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_OF_SIMPLE=m</xsl:when>
			<xsl:otherwise># USB_DWC3_OF_SIMPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC3_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC3_ST=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC3_ST=m</xsl:when>
			<xsl:otherwise># USB_DWC3_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC2=m</xsl:when>
			<xsl:otherwise># USB_DWC2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_HOST=y</xsl:when>
			<xsl:otherwise># USB_DWC2_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_PERIPHERAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_PERIPHERAL=y</xsl:when>
			<xsl:otherwise># USB_DWC2_PERIPHERAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_DUAL_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_DUAL_ROLE=y</xsl:when>
			<xsl:otherwise># USB_DWC2_DUAL_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DWC2_PCI=m</xsl:when>
			<xsl:otherwise># USB_DWC2_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_DWC2_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_VERBOSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_VERBOSE=y</xsl:when>
			<xsl:otherwise># USB_DWC2_VERBOSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_TRACK_MISSED_SOFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_TRACK_MISSED_SOFS=y</xsl:when>
			<xsl:otherwise># USB_DWC2_TRACK_MISSED_SOFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DWC2_DEBUG_PERIODIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DWC2_DEBUG_PERIODIC=y</xsl:when>
			<xsl:otherwise># USB_DWC2_DEBUG_PERIODIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHIPIDEA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHIPIDEA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CHIPIDEA=m</xsl:when>
			<xsl:otherwise># USB_CHIPIDEA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHIPIDEA_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHIPIDEA_OF=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CHIPIDEA_OF=m</xsl:when>
			<xsl:otherwise># USB_CHIPIDEA_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHIPIDEA_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHIPIDEA_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CHIPIDEA_PCI=m</xsl:when>
			<xsl:otherwise># USB_CHIPIDEA_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHIPIDEA_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHIPIDEA_UDC=y</xsl:when>
			<xsl:otherwise># USB_CHIPIDEA_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHIPIDEA_HOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHIPIDEA_HOST=y</xsl:when>
			<xsl:otherwise># USB_CHIPIDEA_HOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1760">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1760=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ISP1760=m</xsl:when>
			<xsl:otherwise># USB_ISP1760 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1760_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1760_HCD=y</xsl:when>
			<xsl:otherwise># USB_ISP1760_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1761_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1761_UDC=y</xsl:when>
			<xsl:otherwise># USB_ISP1761_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1760_HOST_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1760_HOST_ROLE=y</xsl:when>
			<xsl:otherwise># USB_ISP1760_HOST_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1760_GADGET_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1760_GADGET_ROLE=y</xsl:when>
			<xsl:otherwise># USB_ISP1760_GADGET_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1760_DUAL_ROLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1760_DUAL_ROLE=y</xsl:when>
			<xsl:otherwise># USB_ISP1760_DUAL_ROLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_USS720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_USS720=y</xsl:when>
			<xsl:when test=". = 'module'">USB_USS720=m</xsl:when>
			<xsl:otherwise># USB_USS720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL=m</xsl:when>
			<xsl:otherwise># USB_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_CONSOLE=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_GENERIC=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SIMPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SIMPLE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SIMPLE=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SIMPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_AIRCABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_AIRCABLE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_AIRCABLE=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_AIRCABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_ARK3116">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_ARK3116=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_ARK3116=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_ARK3116 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_BELKIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_BELKIN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_BELKIN=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_BELKIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_CH341">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_CH341=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_CH341=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_CH341 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_WHITEHEAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_WHITEHEAT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_WHITEHEAT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_WHITEHEAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_DIGI_ACCELEPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_DIGI_ACCELEPORT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_DIGI_ACCELEPORT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_DIGI_ACCELEPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_CP210X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_CP210X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_CP210X=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_CP210X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_CYPRESS_M8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_CYPRESS_M8=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_CYPRESS_M8=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_CYPRESS_M8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_EMPEG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_EMPEG=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_EMPEG=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_EMPEG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_FTDI_SIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_FTDI_SIO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_FTDI_SIO=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_FTDI_SIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_VISOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_VISOR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_VISOR=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_VISOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_IPAQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_IPAQ=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_IPAQ=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_IPAQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_IR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_IR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_IR=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_IR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_EDGEPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_EDGEPORT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_EDGEPORT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_EDGEPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_EDGEPORT_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_EDGEPORT_TI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_EDGEPORT_TI=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_EDGEPORT_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_F81232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_F81232=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_F81232=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_F81232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_GARMIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_GARMIN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_GARMIN=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_GARMIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_IPW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_IPW=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_IPW=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_IPW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_IUU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_IUU=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_IUU=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_IUU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_PDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_PDA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_KEYSPAN_PDA=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_PDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_KEYSPAN=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_MPR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_MPR=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_MPR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA28">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA28=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA28 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA28X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA28X=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA28X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA28XA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA28XA=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA28XA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA28XB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA28XB=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA28XB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA19">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA19=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA19 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA18X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA18X=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA18X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA19W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA19W=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA19W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA19QW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA19QW=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA19QW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA19QI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA19QI=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA19QI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA49W">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA49W=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA49W is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KEYSPAN_USA49WLC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KEYSPAN_USA49WLC=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_KEYSPAN_USA49WLC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KLSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KLSI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_KLSI=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_KLSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_KOBIL_SCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_KOBIL_SCT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_KOBIL_SCT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_KOBIL_SCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_MCT_U232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_MCT_U232=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_MCT_U232=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_MCT_U232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_METRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_METRO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_METRO=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_METRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_MOS7720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_MOS7720=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_MOS7720=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_MOS7720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_MOS7715_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_MOS7715_PARPORT=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_MOS7715_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_MOS7840">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_MOS7840=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_MOS7840=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_MOS7840 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_MXUPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_MXUPORT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_MXUPORT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_MXUPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_NAVMAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_NAVMAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_NAVMAN=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_NAVMAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_PL2303">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_PL2303=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_PL2303=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_PL2303 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_OTI6858">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_OTI6858=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_OTI6858=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_OTI6858 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_QCAUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_QCAUX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_QCAUX=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_QCAUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_QUALCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_QUALCOMM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_QUALCOMM=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_QUALCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SPCP8X5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SPCP8X5=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SPCP8X5=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SPCP8X5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SAFE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SAFE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SAFE=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SAFE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SAFE_PADDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SAFE_PADDED=y</xsl:when>
			<xsl:otherwise># USB_SERIAL_SAFE_PADDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SIERRAWIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SIERRAWIRELESS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SIERRAWIRELESS=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SIERRAWIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SYMBOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SYMBOL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SYMBOL=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SYMBOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_TI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_TI=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_CYBERJACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_CYBERJACK=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_CYBERJACK=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_CYBERJACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_XIRCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_XIRCOM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_XIRCOM=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_XIRCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_WWAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_WWAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_WWAN=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_WWAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_OPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_OPTION=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_OPTION=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_OPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_OMNINET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_OMNINET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_OMNINET=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_OMNINET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_OPTICON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_OPTICON=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_OPTICON=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_OPTICON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_XSENS_MT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_XSENS_MT=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_XSENS_MT=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_XSENS_MT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_WISHBONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_WISHBONE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_WISHBONE=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_WISHBONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_SSU100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_SSU100=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_SSU100=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_SSU100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_QT2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_QT2=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_QT2=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_QT2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SERIAL_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SERIAL_DEBUG=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SERIAL_DEBUG=m</xsl:when>
			<xsl:otherwise># USB_SERIAL_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EMI62">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EMI62=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EMI62=m</xsl:when>
			<xsl:otherwise># USB_EMI62 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EMI26">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EMI26=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EMI26=m</xsl:when>
			<xsl:otherwise># USB_EMI26 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ADUTUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ADUTUX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ADUTUX=m</xsl:when>
			<xsl:otherwise># USB_ADUTUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SEVSEG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SEVSEG=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SEVSEG=m</xsl:when>
			<xsl:otherwise># USB_SEVSEG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RIO500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RIO500=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RIO500=m</xsl:when>
			<xsl:otherwise># USB_RIO500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LEGOTOWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LEGOTOWER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LEGOTOWER=m</xsl:when>
			<xsl:otherwise># USB_LEGOTOWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LCD=m</xsl:when>
			<xsl:otherwise># USB_LCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CYPRESS_CY7C63">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CYPRESS_CY7C63=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CYPRESS_CY7C63=m</xsl:when>
			<xsl:otherwise># USB_CYPRESS_CY7C63 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CYTHERM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CYTHERM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CYTHERM=m</xsl:when>
			<xsl:otherwise># USB_CYTHERM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_IDMOUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_IDMOUSE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_IDMOUSE=m</xsl:when>
			<xsl:otherwise># USB_IDMOUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FTDI_ELAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FTDI_ELAN=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FTDI_ELAN=m</xsl:when>
			<xsl:otherwise># USB_FTDI_ELAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_APPLEDISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_APPLEDISPLAY=y</xsl:when>
			<xsl:when test=". = 'module'">USB_APPLEDISPLAY=m</xsl:when>
			<xsl:otherwise># USB_APPLEDISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SISUSBVGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SISUSBVGA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SISUSBVGA=m</xsl:when>
			<xsl:otherwise># USB_SISUSBVGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SISUSBVGA_CON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SISUSBVGA_CON=y</xsl:when>
			<xsl:otherwise># USB_SISUSBVGA_CON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LD=m</xsl:when>
			<xsl:otherwise># USB_LD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TRANCEVIBRATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TRANCEVIBRATOR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_TRANCEVIBRATOR=m</xsl:when>
			<xsl:otherwise># USB_TRANCEVIBRATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_IOWARRIOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_IOWARRIOR=y</xsl:when>
			<xsl:when test=". = 'module'">USB_IOWARRIOR=m</xsl:when>
			<xsl:otherwise># USB_IOWARRIOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">USB_TEST=m</xsl:when>
			<xsl:otherwise># USB_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EHSET_TEST_FIXTURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EHSET_TEST_FIXTURE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EHSET_TEST_FIXTURE=m</xsl:when>
			<xsl:otherwise># USB_EHSET_TEST_FIXTURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISIGHTFW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISIGHTFW=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ISIGHTFW=m</xsl:when>
			<xsl:otherwise># USB_ISIGHTFW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_YUREX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_YUREX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_YUREX=m</xsl:when>
			<xsl:otherwise># USB_YUREX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EZUSB_FX2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EZUSB_FX2=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EZUSB_FX2=m</xsl:when>
			<xsl:otherwise># USB_EZUSB_FX2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_HSIC_USB3503">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_HSIC_USB3503=y</xsl:when>
			<xsl:when test=". = 'module'">USB_HSIC_USB3503=m</xsl:when>
			<xsl:otherwise># USB_HSIC_USB3503 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LINK_LAYER_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LINK_LAYER_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LINK_LAYER_TEST=m</xsl:when>
			<xsl:otherwise># USB_LINK_LAYER_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CHAOSKEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CHAOSKEY=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CHAOSKEY=m</xsl:when>
			<xsl:otherwise># USB_CHAOSKEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCSI=y</xsl:when>
			<xsl:when test=". = 'module'">UCSI=m</xsl:when>
			<xsl:otherwise># UCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ATM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ATM=m</xsl:when>
			<xsl:otherwise># USB_ATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_SPEEDTOUCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_SPEEDTOUCH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_SPEEDTOUCH=m</xsl:when>
			<xsl:otherwise># USB_SPEEDTOUCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CXACRU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CXACRU=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CXACRU=m</xsl:when>
			<xsl:otherwise># USB_CXACRU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_UEAGLEATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_UEAGLEATM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_UEAGLEATM=m</xsl:when>
			<xsl:otherwise># USB_UEAGLEATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_XUSBATM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_XUSBATM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_XUSBATM=m</xsl:when>
			<xsl:otherwise># USB_XUSBATM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PHY=y</xsl:when>
			<xsl:otherwise># USB_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AB8500_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AB8500_USB=y</xsl:when>
			<xsl:when test=". = 'module'">AB8500_USB=m</xsl:when>
			<xsl:otherwise># AB8500_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_USB2_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_USB2_OTG=y</xsl:when>
			<xsl:otherwise># FSL_USB2_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISP1301_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISP1301_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">ISP1301_OMAP=m</xsl:when>
			<xsl:otherwise># ISP1301_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYSTONE_USB_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYSTONE_USB_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">KEYSTONE_USB_PHY=m</xsl:when>
			<xsl:otherwise># KEYSTONE_USB_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NOP_USB_XCEIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NOP_USB_XCEIV=y</xsl:when>
			<xsl:when test=". = 'module'">NOP_USB_XCEIV=m</xsl:when>
			<xsl:otherwise># NOP_USB_XCEIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AM335X_CONTROL_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AM335X_CONTROL_USB=y</xsl:when>
			<xsl:when test=". = 'module'">AM335X_CONTROL_USB=m</xsl:when>
			<xsl:otherwise># AM335X_CONTROL_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AM335X_PHY_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AM335X_PHY_USB=y</xsl:when>
			<xsl:when test=". = 'module'">AM335X_PHY_USB=m</xsl:when>
			<xsl:otherwise># AM335X_PHY_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SAMSUNG_USBPHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SAMSUNG_USBPHY=y</xsl:when>
			<xsl:when test=". = 'module'">SAMSUNG_USBPHY=m</xsl:when>
			<xsl:otherwise># SAMSUNG_USBPHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL6030_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL6030_USB=y</xsl:when>
			<xsl:when test=". = 'module'">TWL6030_USB=m</xsl:when>
			<xsl:otherwise># TWL6030_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GPIO_VBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GPIO_VBUS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GPIO_VBUS=m</xsl:when>
			<xsl:otherwise># USB_GPIO_VBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_OTG=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_OTG=m</xsl:when>
			<xsl:otherwise># OMAP_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TAHVO_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TAHVO_USB=y</xsl:when>
			<xsl:when test=". = 'module'">TAHVO_USB=m</xsl:when>
			<xsl:otherwise># TAHVO_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TAHVO_USB_HOST_BY_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TAHVO_USB_HOST_BY_DEFAULT=y</xsl:when>
			<xsl:otherwise># TAHVO_USB_HOST_BY_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ISP1301">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ISP1301=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ISP1301=m</xsl:when>
			<xsl:otherwise># USB_ISP1301 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MSM_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MSM_OTG=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MSM_OTG=m</xsl:when>
			<xsl:otherwise># USB_MSM_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_QCOM_8X16_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_QCOM_8X16_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">USB_QCOM_8X16_PHY=m</xsl:when>
			<xsl:otherwise># USB_QCOM_8X16_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MV_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MV_OTG=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MV_OTG=m</xsl:when>
			<xsl:otherwise># USB_MV_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MXS_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MXS_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MXS_PHY=m</xsl:when>
			<xsl:otherwise># USB_MXS_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ULPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ULPI=y</xsl:when>
			<xsl:otherwise># USB_ULPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ULPI_VIEWPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ULPI_VIEWPORT=y</xsl:when>
			<xsl:otherwise># USB_ULPI_VIEWPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GADGET=m</xsl:when>
			<xsl:otherwise># USB_GADGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_GADGET_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_VERBOSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_VERBOSE=y</xsl:when>
			<xsl:otherwise># USB_GADGET_VERBOSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_DEBUG_FILES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_DEBUG_FILES=y</xsl:when>
			<xsl:otherwise># USB_GADGET_DEBUG_FILES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># USB_GADGET_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_VBUS_DRAW">
		USB_GADGET_VBUS_DRAW=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="USB_GADGET_STORAGE_NUM_BUFFERS">
		USB_GADGET_STORAGE_NUM_BUFFERS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="U_SERIAL_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">U_SERIAL_CONSOLE=y</xsl:when>
			<xsl:otherwise># U_SERIAL_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">USB_AT91=m</xsl:when>
			<xsl:otherwise># USB_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LPC32XX=m</xsl:when>
			<xsl:otherwise># USB_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ATMEL_USBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ATMEL_USBA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ATMEL_USBA=m</xsl:when>
			<xsl:otherwise># USB_ATMEL_USBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_BCM63XX_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_BCM63XX_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_BCM63XX_UDC=m</xsl:when>
			<xsl:otherwise># USB_BCM63XX_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FSL_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FSL_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FSL_USB2=m</xsl:when>
			<xsl:otherwise># USB_FSL_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FUSB300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FUSB300=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FUSB300=m</xsl:when>
			<xsl:otherwise># USB_FUSB300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FOTG210_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FOTG210_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FOTG210_UDC=m</xsl:when>
			<xsl:otherwise># USB_FOTG210_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GR_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GR_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GR_UDC=m</xsl:when>
			<xsl:otherwise># USB_GR_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">USB_OMAP=m</xsl:when>
			<xsl:otherwise># USB_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PXA25X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PXA25X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PXA25X=m</xsl:when>
			<xsl:otherwise># USB_PXA25X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PXA25X_SMALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PXA25X_SMALL=y</xsl:when>
			<xsl:otherwise># USB_PXA25X_SMALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_R8A66597">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_R8A66597=y</xsl:when>
			<xsl:when test=". = 'module'">USB_R8A66597=m</xsl:when>
			<xsl:otherwise># USB_R8A66597 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RENESAS_USBHS_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RENESAS_USBHS_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RENESAS_USBHS_UDC=m</xsl:when>
			<xsl:otherwise># USB_RENESAS_USBHS_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_RENESAS_USB3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_RENESAS_USB3=y</xsl:when>
			<xsl:when test=". = 'module'">USB_RENESAS_USB3=m</xsl:when>
			<xsl:otherwise># USB_RENESAS_USB3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PXA27X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PXA27X=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PXA27X=m</xsl:when>
			<xsl:otherwise># USB_PXA27X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_S3C2410">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_S3C2410=y</xsl:when>
			<xsl:when test=". = 'module'">USB_S3C2410=m</xsl:when>
			<xsl:otherwise># USB_S3C2410 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_S3C2410_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_S3C2410_DEBUG=y</xsl:when>
			<xsl:otherwise># USB_S3C2410_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_S3C_HSUDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_S3C_HSUDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_S3C_HSUDC=m</xsl:when>
			<xsl:otherwise># USB_S3C_HSUDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MV_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MV_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MV_UDC=m</xsl:when>
			<xsl:otherwise># USB_MV_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MV_U3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MV_U3D=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MV_U3D=m</xsl:when>
			<xsl:otherwise># USB_MV_U3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_M66592">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_M66592=y</xsl:when>
			<xsl:when test=". = 'module'">USB_M66592=m</xsl:when>
			<xsl:otherwise># USB_M66592 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_BDC_UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_BDC_UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_BDC_UDC=m</xsl:when>
			<xsl:otherwise># USB_BDC_UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_BDC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_BDC_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_BDC_PCI=m</xsl:when>
			<xsl:otherwise># USB_BDC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_AMD5536UDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_AMD5536UDC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_AMD5536UDC=m</xsl:when>
			<xsl:otherwise># USB_AMD5536UDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FSL_QE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FSL_QE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FSL_QE=m</xsl:when>
			<xsl:otherwise># USB_FSL_QE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET2272">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET2272=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET2272=m</xsl:when>
			<xsl:otherwise># USB_NET2272 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET2272_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET2272_DMA=y</xsl:when>
			<xsl:otherwise># USB_NET2272_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_NET2280">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_NET2280=y</xsl:when>
			<xsl:when test=". = 'module'">USB_NET2280=m</xsl:when>
			<xsl:otherwise># USB_NET2280 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GOKU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GOKU=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GOKU=m</xsl:when>
			<xsl:otherwise># USB_GOKU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EG20T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EG20T=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EG20T=m</xsl:when>
			<xsl:otherwise># USB_EG20T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_XILINX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_XILINX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GADGET_XILINX=m</xsl:when>
			<xsl:otherwise># USB_GADGET_XILINX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_DUMMY_HCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_DUMMY_HCD=y</xsl:when>
			<xsl:when test=". = 'module'">USB_DUMMY_HCD=m</xsl:when>
			<xsl:otherwise># USB_DUMMY_HCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LIBCOMPOSITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LIBCOMPOSITE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_LIBCOMPOSITE=m</xsl:when>
			<xsl:otherwise># USB_LIBCOMPOSITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_ACM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_ACM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_ACM=m</xsl:when>
			<xsl:otherwise># USB_F_ACM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_SS_LB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_SS_LB=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_SS_LB=m</xsl:when>
			<xsl:otherwise># USB_F_SS_LB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_U_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_U_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_U_SERIAL=m</xsl:when>
			<xsl:otherwise># USB_U_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_U_ETHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_U_ETHER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_U_ETHER=m</xsl:when>
			<xsl:otherwise># USB_U_ETHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_SERIAL=m</xsl:when>
			<xsl:otherwise># USB_F_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_OBEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_OBEX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_OBEX=m</xsl:when>
			<xsl:otherwise># USB_F_OBEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_NCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_NCM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_NCM=m</xsl:when>
			<xsl:otherwise># USB_F_NCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_ECM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_ECM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_ECM=m</xsl:when>
			<xsl:otherwise># USB_F_ECM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_PHONET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_PHONET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_PHONET=m</xsl:when>
			<xsl:otherwise># USB_F_PHONET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_EEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_EEM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_EEM=m</xsl:when>
			<xsl:otherwise># USB_F_EEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_SUBSET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_SUBSET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_SUBSET=m</xsl:when>
			<xsl:otherwise># USB_F_SUBSET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_RNDIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_RNDIS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_RNDIS=m</xsl:when>
			<xsl:otherwise># USB_F_RNDIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_MASS_STORAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_MASS_STORAGE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_MASS_STORAGE=m</xsl:when>
			<xsl:otherwise># USB_F_MASS_STORAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_FS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_FS=m</xsl:when>
			<xsl:otherwise># USB_F_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_UAC1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_UAC1=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_UAC1=m</xsl:when>
			<xsl:otherwise># USB_F_UAC1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_UAC2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_UAC2=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_UAC2=m</xsl:when>
			<xsl:otherwise># USB_F_UAC2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_UVC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_UVC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_UVC=m</xsl:when>
			<xsl:otherwise># USB_F_UVC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_MIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_MIDI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_MIDI=m</xsl:when>
			<xsl:otherwise># USB_F_MIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_HID=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_HID=m</xsl:when>
			<xsl:otherwise># USB_F_HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_PRINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_PRINTER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_PRINTER=m</xsl:when>
			<xsl:otherwise># USB_F_PRINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_F_TCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_F_TCM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_F_TCM=m</xsl:when>
			<xsl:otherwise># USB_F_TCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CONFIGFS=m</xsl:when>
			<xsl:otherwise># USB_CONFIGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_SERIAL=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_ACM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_ACM=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_ACM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_OBEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_OBEX=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_OBEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_NCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_NCM=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_NCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_ECM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_ECM=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_ECM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_ECM_SUBSET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_ECM_SUBSET=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_ECM_SUBSET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_RNDIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_RNDIS=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_RNDIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_EEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_EEM=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_EEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_PHONET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_PHONET=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_PHONET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_MASS_STORAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_MASS_STORAGE=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_MASS_STORAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_LB_SS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_LB_SS=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_LB_SS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_FS=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_UAC1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_UAC1=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_UAC1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_UAC2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_UAC2=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_UAC2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_MIDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_MIDI=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_MIDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_HID=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_UVC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_UVC=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_UVC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_PRINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_PRINTER=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_PRINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CONFIGFS_F_TCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CONFIGFS_F_TCM=y</xsl:when>
			<xsl:otherwise># USB_CONFIGFS_F_TCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ZERO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ZERO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ZERO=m</xsl:when>
			<xsl:otherwise># USB_ZERO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ZERO_HNPTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ZERO_HNPTEST=y</xsl:when>
			<xsl:otherwise># USB_ZERO_HNPTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">USB_AUDIO=m</xsl:when>
			<xsl:otherwise># USB_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GADGET_UAC1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GADGET_UAC1=y</xsl:when>
			<xsl:otherwise># GADGET_UAC1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ETH=y</xsl:when>
			<xsl:when test=". = 'module'">USB_ETH=m</xsl:when>
			<xsl:otherwise># USB_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ETH_RNDIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ETH_RNDIS=y</xsl:when>
			<xsl:otherwise># USB_ETH_RNDIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_ETH_EEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_ETH_EEM=y</xsl:when>
			<xsl:otherwise># USB_ETH_EEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_NCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_NCM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_NCM=m</xsl:when>
			<xsl:otherwise># USB_G_NCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGETFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGETFS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GADGETFS=m</xsl:when>
			<xsl:otherwise># USB_GADGETFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FUNCTIONFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FUNCTIONFS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_FUNCTIONFS=m</xsl:when>
			<xsl:otherwise># USB_FUNCTIONFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FUNCTIONFS_ETH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FUNCTIONFS_ETH=y</xsl:when>
			<xsl:otherwise># USB_FUNCTIONFS_ETH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FUNCTIONFS_RNDIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FUNCTIONFS_RNDIS=y</xsl:when>
			<xsl:otherwise># USB_FUNCTIONFS_RNDIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_FUNCTIONFS_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_FUNCTIONFS_GENERIC=y</xsl:when>
			<xsl:otherwise># USB_FUNCTIONFS_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MASS_STORAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MASS_STORAGE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MASS_STORAGE=m</xsl:when>
			<xsl:otherwise># USB_MASS_STORAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_GADGET_TARGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_GADGET_TARGET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_GADGET_TARGET=m</xsl:when>
			<xsl:otherwise># USB_GADGET_TARGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_SERIAL=m</xsl:when>
			<xsl:otherwise># USB_G_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_MIDI_GADGET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_MIDI_GADGET=y</xsl:when>
			<xsl:when test=". = 'module'">USB_MIDI_GADGET=m</xsl:when>
			<xsl:otherwise># USB_MIDI_GADGET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_PRINTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_PRINTER=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_PRINTER=m</xsl:when>
			<xsl:otherwise># USB_G_PRINTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_CDC_COMPOSITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_CDC_COMPOSITE=y</xsl:when>
			<xsl:when test=". = 'module'">USB_CDC_COMPOSITE=m</xsl:when>
			<xsl:otherwise># USB_CDC_COMPOSITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_NOKIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_NOKIA=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_NOKIA=m</xsl:when>
			<xsl:otherwise># USB_G_NOKIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_ACM_MS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_ACM_MS=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_ACM_MS=m</xsl:when>
			<xsl:otherwise># USB_G_ACM_MS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_MULTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_MULTI=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_MULTI=m</xsl:when>
			<xsl:otherwise># USB_G_MULTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_MULTI_RNDIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_MULTI_RNDIS=y</xsl:when>
			<xsl:otherwise># USB_G_MULTI_RNDIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_MULTI_CDC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_MULTI_CDC=y</xsl:when>
			<xsl:otherwise># USB_G_MULTI_CDC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_HID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_HID=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_HID=m</xsl:when>
			<xsl:otherwise># USB_G_HID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_DBGP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_DBGP=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_DBGP=m</xsl:when>
			<xsl:otherwise># USB_G_DBGP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_DBGP_PRINTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_DBGP_PRINTK=y</xsl:when>
			<xsl:otherwise># USB_G_DBGP_PRINTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_DBGP_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_DBGP_SERIAL=y</xsl:when>
			<xsl:otherwise># USB_G_DBGP_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_G_WEBCAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_G_WEBCAM=y</xsl:when>
			<xsl:when test=". = 'module'">USB_G_WEBCAM=m</xsl:when>
			<xsl:otherwise># USB_G_WEBCAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_LED_TRIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_LED_TRIG=y</xsl:when>
			<xsl:otherwise># USB_LED_TRIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UWB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UWB=y</xsl:when>
			<xsl:when test=". = 'module'">UWB=m</xsl:when>
			<xsl:otherwise># UWB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UWB_HWA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UWB_HWA=y</xsl:when>
			<xsl:when test=". = 'module'">UWB_HWA=m</xsl:when>
			<xsl:otherwise># UWB_HWA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UWB_WHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UWB_WHCI=y</xsl:when>
			<xsl:when test=". = 'module'">UWB_WHCI=m</xsl:when>
			<xsl:otherwise># UWB_WHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UWB_I1480U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UWB_I1480U=y</xsl:when>
			<xsl:when test=". = 'module'">UWB_I1480U=m</xsl:when>
			<xsl:otherwise># UWB_I1480U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC=m</xsl:when>
			<xsl:otherwise># MMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DEBUG=y</xsl:when>
			<xsl:otherwise># MMC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWRSEQ_EMMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWRSEQ_EMMC=y</xsl:when>
			<xsl:when test=". = 'module'">PWRSEQ_EMMC=m</xsl:when>
			<xsl:otherwise># PWRSEQ_EMMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWRSEQ_SIMPLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWRSEQ_SIMPLE=y</xsl:when>
			<xsl:when test=". = 'module'">PWRSEQ_SIMPLE=m</xsl:when>
			<xsl:otherwise># PWRSEQ_SIMPLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_BLOCK=m</xsl:when>
			<xsl:otherwise># MMC_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_BLOCK_MINORS">
		MMC_BLOCK_MINORS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="MMC_BLOCK_BOUNCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_BLOCK_BOUNCE=y</xsl:when>
			<xsl:otherwise># MMC_BLOCK_BOUNCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SDIO_UART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SDIO_UART=y</xsl:when>
			<xsl:when test=". = 'module'">SDIO_UART=m</xsl:when>
			<xsl:otherwise># SDIO_UART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_TEST=m</xsl:when>
			<xsl:otherwise># MMC_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_ARMMMCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_ARMMMCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_ARMMMCI=m</xsl:when>
			<xsl:otherwise># MMC_ARMMMCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_QCOM_DML">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_QCOM_DML=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_QCOM_DML=m</xsl:when>
			<xsl:otherwise># MMC_QCOM_DML is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_PXA=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_PXA=m</xsl:when>
			<xsl:otherwise># MMC_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_IO_ACCESSORS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_IO_ACCESSORS=y</xsl:when>
			<xsl:otherwise># MMC_SDHCI_IO_ACCESSORS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER=y</xsl:when>
			<xsl:otherwise># MMC_SDHCI_BIG_ENDIAN_32BIT_BYTE_SWAPPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_PCI=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_RICOH_MMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_RICOH_MMC=y</xsl:when>
			<xsl:otherwise># MMC_RICOH_MMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_ACPI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_ACPI=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_PLTFM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_PLTFM=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_PLTFM=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_PLTFM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_OF_ARASAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_OF_ARASAN=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_OF_ARASAN=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_OF_ARASAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_OF_AT91">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_OF_AT91=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_OF_AT91=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_OF_AT91 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_OF_ESDHC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_OF_ESDHC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_OF_ESDHC=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_OF_ESDHC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_OF_HLWD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_OF_HLWD=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_OF_HLWD=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_OF_HLWD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_CNS3XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_CNS3XXX=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_CNS3XXX=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_CNS3XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_ESDHC_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_ESDHC_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_ESDHC_IMX=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_ESDHC_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_DOVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_DOVE=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_DOVE=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_DOVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_TEGRA=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_S3C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_S3C=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_S3C=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_S3C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_SIRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_SIRF=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_SIRF=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_SIRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_PXAV3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_PXAV3=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_PXAV3=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_PXAV3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_PXAV2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_PXAV2=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_PXAV2=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_PXAV2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_SPEAR=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_S3C_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_S3C_DMA=y</xsl:when>
			<xsl:otherwise># MMC_SDHCI_S3C_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_BCM_KONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_BCM_KONA=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_BCM_KONA=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_BCM_KONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_F_SDH30">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_F_SDH30=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_F_SDH30=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_F_SDH30 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_IPROC=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_MOXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_MOXART=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_MOXART=m</xsl:when>
			<xsl:otherwise># MMC_MOXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_ST=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_ST=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_OMAP=m</xsl:when>
			<xsl:otherwise># MMC_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_OMAP_HS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_OMAP_HS=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_OMAP_HS=m</xsl:when>
			<xsl:otherwise># MMC_OMAP_HS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_WBSD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_WBSD=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_WBSD=m</xsl:when>
			<xsl:otherwise># MMC_WBSD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_AU1X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_AU1X=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_AU1X=m</xsl:when>
			<xsl:otherwise># MMC_AU1X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_ATMELMCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_ATMELMCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_ATMELMCI=m</xsl:when>
			<xsl:otherwise># MMC_ATMELMCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHCI_MSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHCI_MSM=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHCI_MSM=m</xsl:when>
			<xsl:otherwise># MMC_SDHCI_MSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_MXC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_MXC=m</xsl:when>
			<xsl:otherwise># MMC_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_MXS=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_MXS=m</xsl:when>
			<xsl:otherwise># MMC_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_TIFM_SD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_TIFM_SD=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_TIFM_SD=m</xsl:when>
			<xsl:otherwise># MMC_TIFM_SD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_MVSDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_MVSDIO=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_MVSDIO=m</xsl:when>
			<xsl:otherwise># MMC_MVSDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DAVINCI=m</xsl:when>
			<xsl:otherwise># MMC_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_GOLDFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_GOLDFISH=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_GOLDFISH=m</xsl:when>
			<xsl:otherwise># MMC_GOLDFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SPI=m</xsl:when>
			<xsl:otherwise># MMC_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_S3C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_S3C=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_S3C=m</xsl:when>
			<xsl:otherwise># MMC_S3C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_S3C_HW_SDIO_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_S3C_HW_SDIO_IRQ=y</xsl:when>
			<xsl:otherwise># MMC_S3C_HW_SDIO_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_S3C_PIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_S3C_PIO=y</xsl:when>
			<xsl:otherwise># MMC_S3C_PIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_S3C_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_S3C_DMA=y</xsl:when>
			<xsl:otherwise># MMC_S3C_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDRICOH_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDRICOH_CS=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDRICOH_CS=m</xsl:when>
			<xsl:otherwise># MMC_SDRICOH_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_TMIO_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_TMIO_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_TMIO_CORE=m</xsl:when>
			<xsl:otherwise># MMC_TMIO_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_TMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_TMIO=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_TMIO=m</xsl:when>
			<xsl:otherwise># MMC_TMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SDHI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SDHI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SDHI=m</xsl:when>
			<xsl:otherwise># MMC_SDHI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_CB710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_CB710=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_CB710=m</xsl:when>
			<xsl:otherwise># MMC_CB710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_VIA_SDMMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_VIA_SDMMC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_VIA_SDMMC=m</xsl:when>
			<xsl:otherwise># MMC_VIA_SDMMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SDH_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SDH_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">SDH_BFIN=m</xsl:when>
			<xsl:otherwise># SDH_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SDH_BFIN_MISSING_CMD_PULLUP_WORKAROUND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SDH_BFIN_MISSING_CMD_PULLUP_WORKAROUND=y</xsl:when>
			<xsl:otherwise># SDH_BFIN_MISSING_CMD_PULLUP_WORKAROUND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW=m</xsl:when>
			<xsl:otherwise># MMC_DW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW_PLTFM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW_PLTFM=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW_PLTFM=m</xsl:when>
			<xsl:otherwise># MMC_DW_PLTFM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW_EXYNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW_EXYNOS=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW_EXYNOS=m</xsl:when>
			<xsl:otherwise># MMC_DW_EXYNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW_K3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW_K3=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW_K3=m</xsl:when>
			<xsl:otherwise># MMC_DW_K3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW_PCI=m</xsl:when>
			<xsl:otherwise># MMC_DW_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_DW_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_DW_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_DW_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># MMC_DW_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SH_MMCIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SH_MMCIF=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SH_MMCIF=m</xsl:when>
			<xsl:otherwise># MMC_SH_MMCIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_JZ4740=m</xsl:when>
			<xsl:otherwise># MMC_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_VUB300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_VUB300=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_VUB300=m</xsl:when>
			<xsl:otherwise># MMC_VUB300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_USHC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_USHC=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_USHC=m</xsl:when>
			<xsl:otherwise># MMC_USHC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_WMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_WMT=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_WMT=m</xsl:when>
			<xsl:otherwise># MMC_WMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_USDHI6ROL0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_USDHI6ROL0=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_USDHI6ROL0=m</xsl:when>
			<xsl:otherwise># MMC_USDHI6ROL0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_REALTEK_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_REALTEK_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_REALTEK_PCI=m</xsl:when>
			<xsl:otherwise># MMC_REALTEK_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_REALTEK_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_REALTEK_USB=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_REALTEK_USB=m</xsl:when>
			<xsl:otherwise># MMC_REALTEK_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_SUNXI=m</xsl:when>
			<xsl:otherwise># MMC_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC_TOSHIBA_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC_TOSHIBA_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MMC_TOSHIBA_PCI=m</xsl:when>
			<xsl:otherwise># MMC_TOSHIBA_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK=m</xsl:when>
			<xsl:otherwise># MEMSTICK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_DEBUG=y</xsl:when>
			<xsl:otherwise># MEMSTICK_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_UNSAFE_RESUME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_UNSAFE_RESUME=y</xsl:when>
			<xsl:otherwise># MEMSTICK_UNSAFE_RESUME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSPRO_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSPRO_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">MSPRO_BLOCK=m</xsl:when>
			<xsl:otherwise># MSPRO_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MS_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MS_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">MS_BLOCK=m</xsl:when>
			<xsl:otherwise># MS_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_TIFM_MS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_TIFM_MS=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK_TIFM_MS=m</xsl:when>
			<xsl:otherwise># MEMSTICK_TIFM_MS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_JMICRON_38X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_JMICRON_38X=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK_JMICRON_38X=m</xsl:when>
			<xsl:otherwise># MEMSTICK_JMICRON_38X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_R592">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_R592=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK_R592=m</xsl:when>
			<xsl:otherwise># MEMSTICK_R592 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_REALTEK_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_REALTEK_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK_REALTEK_PCI=m</xsl:when>
			<xsl:otherwise># MEMSTICK_REALTEK_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMSTICK_REALTEK_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMSTICK_REALTEK_USB=y</xsl:when>
			<xsl:when test=". = 'module'">MEMSTICK_REALTEK_USB=m</xsl:when>
			<xsl:otherwise># MEMSTICK_REALTEK_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_GPIO_REGISTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_GPIO_REGISTER=y</xsl:when>
			<xsl:otherwise># LEDS_GPIO_REGISTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NEW_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NEW_LEDS=y</xsl:when>
			<xsl:otherwise># NEW_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_CLASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_CLASS=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_CLASS=m</xsl:when>
			<xsl:otherwise># LEDS_CLASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_CLASS_FLASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_CLASS_FLASH=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_CLASS_FLASH=m</xsl:when>
			<xsl:otherwise># LEDS_CLASS_FLASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_88PM860X=m</xsl:when>
			<xsl:otherwise># LEDS_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_AAT1290">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_AAT1290=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_AAT1290=m</xsl:when>
			<xsl:otherwise># LEDS_AAT1290 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_BCM6328">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_BCM6328=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_BCM6328=m</xsl:when>
			<xsl:otherwise># LEDS_BCM6328 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_BCM6358">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_BCM6358=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_BCM6358=m</xsl:when>
			<xsl:otherwise># LEDS_BCM6358 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LM3530">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LM3530=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LM3530=m</xsl:when>
			<xsl:otherwise># LEDS_LM3530 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LM3533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LM3533=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LM3533=m</xsl:when>
			<xsl:otherwise># LEDS_LM3533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LM3642">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LM3642=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LM3642=m</xsl:when>
			<xsl:otherwise># LEDS_LM3642 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LOCOMO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LOCOMO=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LOCOMO=m</xsl:when>
			<xsl:otherwise># LEDS_LOCOMO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_MIKROTIK_RB532">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_MIKROTIK_RB532=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_MIKROTIK_RB532=m</xsl:when>
			<xsl:otherwise># LEDS_MIKROTIK_RB532 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_S3C24XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_S3C24XX=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_S3C24XX=m</xsl:when>
			<xsl:otherwise># LEDS_S3C24XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_NET48XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_NET48XX=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_NET48XX=m</xsl:when>
			<xsl:otherwise># LEDS_NET48XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_FSG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_FSG=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_FSG=m</xsl:when>
			<xsl:otherwise># LEDS_FSG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_WRAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_WRAP=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_WRAP=m</xsl:when>
			<xsl:otherwise># LEDS_WRAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_COBALT_QUBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_COBALT_QUBE=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_COBALT_QUBE=m</xsl:when>
			<xsl:otherwise># LEDS_COBALT_QUBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_COBALT_RAQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_COBALT_RAQ=y</xsl:when>
			<xsl:otherwise># LEDS_COBALT_RAQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_SUNFIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_SUNFIRE=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_SUNFIRE=m</xsl:when>
			<xsl:otherwise># LEDS_SUNFIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_IPAQ_MICRO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_IPAQ_MICRO=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_IPAQ_MICRO=m</xsl:when>
			<xsl:otherwise># LEDS_IPAQ_MICRO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_HP6XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_HP6XX=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_HP6XX=m</xsl:when>
			<xsl:otherwise># LEDS_HP6XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_PCA9532">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_PCA9532=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_PCA9532=m</xsl:when>
			<xsl:otherwise># LEDS_PCA9532 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_PCA9532_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_PCA9532_GPIO=y</xsl:when>
			<xsl:otherwise># LEDS_PCA9532_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_GPIO=m</xsl:when>
			<xsl:otherwise># LEDS_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP3944">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP3944=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP3944=m</xsl:when>
			<xsl:otherwise># LEDS_LP3944 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP3952">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP3952=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP3952=m</xsl:when>
			<xsl:otherwise># LEDS_LP3952 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP55XX_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP55XX_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP55XX_COMMON=m</xsl:when>
			<xsl:otherwise># LEDS_LP55XX_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP5521">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP5521=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP5521=m</xsl:when>
			<xsl:otherwise># LEDS_LP5521 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP5523">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP5523=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP5523=m</xsl:when>
			<xsl:otherwise># LEDS_LP5523 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP5562">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP5562=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP5562=m</xsl:when>
			<xsl:otherwise># LEDS_LP5562 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP8501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP8501=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP8501=m</xsl:when>
			<xsl:otherwise># LEDS_LP8501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP8788=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP8788=m</xsl:when>
			<xsl:otherwise># LEDS_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LP8860">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LP8860=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LP8860=m</xsl:when>
			<xsl:otherwise># LEDS_LP8860 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_CLEVO_MAIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_CLEVO_MAIL=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_CLEVO_MAIL=m</xsl:when>
			<xsl:otherwise># LEDS_CLEVO_MAIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_PCA955X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_PCA955X=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_PCA955X=m</xsl:when>
			<xsl:otherwise># LEDS_PCA955X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_PCA963X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_PCA963X=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_PCA963X=m</xsl:when>
			<xsl:otherwise># LEDS_PCA963X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_WM831X_STATUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_WM831X_STATUS=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_WM831X_STATUS=m</xsl:when>
			<xsl:otherwise># LEDS_WM831X_STATUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_WM8350=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_WM8350=m</xsl:when>
			<xsl:otherwise># LEDS_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_DA903X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_DA903X=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_DA903X=m</xsl:when>
			<xsl:otherwise># LEDS_DA903X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_DA9052=m</xsl:when>
			<xsl:otherwise># LEDS_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_DAC124S085">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_DAC124S085=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_DAC124S085=m</xsl:when>
			<xsl:otherwise># LEDS_DAC124S085 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_PWM=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_PWM=m</xsl:when>
			<xsl:otherwise># LEDS_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_REGULATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_REGULATOR=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_REGULATOR=m</xsl:when>
			<xsl:otherwise># LEDS_REGULATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_BD2802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_BD2802=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_BD2802=m</xsl:when>
			<xsl:otherwise># LEDS_BD2802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_INTEL_SS4200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_INTEL_SS4200=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_INTEL_SS4200=m</xsl:when>
			<xsl:otherwise># LEDS_INTEL_SS4200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LT3593">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LT3593=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LT3593=m</xsl:when>
			<xsl:otherwise># LEDS_LT3593 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_ADP5520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_ADP5520=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_ADP5520=m</xsl:when>
			<xsl:otherwise># LEDS_ADP5520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_DELL_NETBOOKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_DELL_NETBOOKS=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_DELL_NETBOOKS=m</xsl:when>
			<xsl:otherwise># LEDS_DELL_NETBOOKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_MC13783">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_MC13783=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_MC13783=m</xsl:when>
			<xsl:otherwise># LEDS_MC13783 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_NS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_NS2=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_NS2=m</xsl:when>
			<xsl:otherwise># LEDS_NS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_NETXBIG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_NETXBIG=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_NETXBIG=m</xsl:when>
			<xsl:otherwise># LEDS_NETXBIG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_ASIC3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_ASIC3=y</xsl:when>
			<xsl:otherwise># LEDS_ASIC3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TCA6507">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TCA6507=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TCA6507=m</xsl:when>
			<xsl:otherwise># LEDS_TCA6507 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TLC591XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TLC591XX=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TLC591XX=m</xsl:when>
			<xsl:otherwise># LEDS_TLC591XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_MAX77693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_MAX77693=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_MAX77693=m</xsl:when>
			<xsl:otherwise># LEDS_MAX77693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_MAX8997=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_MAX8997=m</xsl:when>
			<xsl:otherwise># LEDS_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_LM355x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_LM355x=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_LM355x=m</xsl:when>
			<xsl:otherwise># LEDS_LM355x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_OT200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_OT200=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_OT200=m</xsl:when>
			<xsl:otherwise># LEDS_OT200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_MENF21BMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_MENF21BMC=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_MENF21BMC=m</xsl:when>
			<xsl:otherwise># LEDS_MENF21BMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_KTD2692">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_KTD2692=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_KTD2692=m</xsl:when>
			<xsl:otherwise># LEDS_KTD2692 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_SEAD3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_SEAD3=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_SEAD3=m</xsl:when>
			<xsl:otherwise># LEDS_SEAD3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_IS31FL32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_IS31FL32XX=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_IS31FL32XX=m</xsl:when>
			<xsl:otherwise># LEDS_IS31FL32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_BLINKM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_BLINKM=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_BLINKM=m</xsl:when>
			<xsl:otherwise># LEDS_BLINKM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_POWERNV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_POWERNV=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_POWERNV=m</xsl:when>
			<xsl:otherwise># LEDS_POWERNV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_SYSCON=y</xsl:when>
			<xsl:otherwise># LEDS_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_VERSATILE=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_VERSATILE=m</xsl:when>
			<xsl:otherwise># LEDS_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGERS=y</xsl:when>
			<xsl:otherwise># LEDS_TRIGGERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_TIMER=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_TIMER=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_ONESHOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_ONESHOT=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_ONESHOT=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_ONESHOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_DISK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_DISK=y</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_DISK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_MTD=y</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_HEARTBEAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_HEARTBEAT=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_HEARTBEAT=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_HEARTBEAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_BACKLIGHT=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_BACKLIGHT=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_CPU=y</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_GPIO=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_DEFAULT_ON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_DEFAULT_ON=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_DEFAULT_ON=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_DEFAULT_ON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_TRANSIENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_TRANSIENT=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_TRANSIENT=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_TRANSIENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_CAMERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_CAMERA=y</xsl:when>
			<xsl:when test=". = 'module'">LEDS_TRIGGER_CAMERA=m</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_CAMERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LEDS_TRIGGER_PANIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LEDS_TRIGGER_PANIC=y</xsl:when>
			<xsl:otherwise># LEDS_TRIGGER_PANIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACCESSIBILITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACCESSIBILITY=y</xsl:when>
			<xsl:otherwise># ACCESSIBILITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="A11Y_BRAILLE_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">A11Y_BRAILLE_CONSOLE=y</xsl:when>
			<xsl:otherwise># A11Y_BRAILLE_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND=m</xsl:when>
			<xsl:otherwise># INFINIBAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_USER_MAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_USER_MAD=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_USER_MAD=m</xsl:when>
			<xsl:otherwise># INFINIBAND_USER_MAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_USER_ACCESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_USER_ACCESS=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_USER_ACCESS=m</xsl:when>
			<xsl:otherwise># INFINIBAND_USER_ACCESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_USER_MEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_USER_MEM=y</xsl:when>
			<xsl:otherwise># INFINIBAND_USER_MEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_ON_DEMAND_PAGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_ON_DEMAND_PAGING=y</xsl:when>
			<xsl:otherwise># INFINIBAND_ON_DEMAND_PAGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_ADDR_TRANS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_ADDR_TRANS=y</xsl:when>
			<xsl:otherwise># INFINIBAND_ADDR_TRANS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_ADDR_TRANS_CONFIGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_ADDR_TRANS_CONFIGFS=y</xsl:when>
			<xsl:otherwise># INFINIBAND_ADDR_TRANS_CONFIGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_MTHCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_MTHCA=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_MTHCA=m</xsl:when>
			<xsl:otherwise># INFINIBAND_MTHCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_MTHCA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_MTHCA_DEBUG=y</xsl:when>
			<xsl:otherwise># INFINIBAND_MTHCA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_QIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_QIB=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_QIB=m</xsl:when>
			<xsl:otherwise># INFINIBAND_QIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_QIB_DCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_QIB_DCA=y</xsl:when>
			<xsl:otherwise># INFINIBAND_QIB_DCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_CXGB3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_CXGB3=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_CXGB3=m</xsl:when>
			<xsl:otherwise># INFINIBAND_CXGB3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_CXGB3_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_CXGB3_DEBUG=y</xsl:when>
			<xsl:otherwise># INFINIBAND_CXGB3_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_CXGB4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_CXGB4=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_CXGB4=m</xsl:when>
			<xsl:otherwise># INFINIBAND_CXGB4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_I40IW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_I40IW=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_I40IW=m</xsl:when>
			<xsl:otherwise># INFINIBAND_I40IW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX4_INFINIBAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX4_INFINIBAND=y</xsl:when>
			<xsl:when test=". = 'module'">MLX4_INFINIBAND=m</xsl:when>
			<xsl:otherwise># MLX4_INFINIBAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX5_INFINIBAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX5_INFINIBAND=y</xsl:when>
			<xsl:when test=". = 'module'">MLX5_INFINIBAND=m</xsl:when>
			<xsl:otherwise># MLX5_INFINIBAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_NES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_NES=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_NES=m</xsl:when>
			<xsl:otherwise># INFINIBAND_NES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_NES_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_NES_DEBUG=y</xsl:when>
			<xsl:otherwise># INFINIBAND_NES_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_OCRDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_OCRDMA=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_OCRDMA=m</xsl:when>
			<xsl:otherwise># INFINIBAND_OCRDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_USNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_USNIC=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_USNIC=m</xsl:when>
			<xsl:otherwise># INFINIBAND_USNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_IPOIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_IPOIB=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_IPOIB=m</xsl:when>
			<xsl:otherwise># INFINIBAND_IPOIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_IPOIB_CM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_IPOIB_CM=y</xsl:when>
			<xsl:otherwise># INFINIBAND_IPOIB_CM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_IPOIB_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_IPOIB_DEBUG=y</xsl:when>
			<xsl:otherwise># INFINIBAND_IPOIB_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_IPOIB_DEBUG_DATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_IPOIB_DEBUG_DATA=y</xsl:when>
			<xsl:otherwise># INFINIBAND_IPOIB_DEBUG_DATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_SRP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_SRP=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_SRP=m</xsl:when>
			<xsl:otherwise># INFINIBAND_SRP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_SRPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_SRPT=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_SRPT=m</xsl:when>
			<xsl:otherwise># INFINIBAND_SRPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_ISER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_ISER=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_ISER=m</xsl:when>
			<xsl:otherwise># INFINIBAND_ISER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_ISERT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_ISERT=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_ISERT=m</xsl:when>
			<xsl:otherwise># INFINIBAND_ISERT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_RDMAVT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_RDMAVT=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_RDMAVT=m</xsl:when>
			<xsl:otherwise># INFINIBAND_RDMAVT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RDMA_RXE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RDMA_RXE=y</xsl:when>
			<xsl:when test=". = 'module'">RDMA_RXE=m</xsl:when>
			<xsl:otherwise># RDMA_RXE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INFINIBAND_HFI1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INFINIBAND_HFI1=y</xsl:when>
			<xsl:when test=". = 'module'">INFINIBAND_HFI1=m</xsl:when>
			<xsl:otherwise># INFINIBAND_HFI1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HFI1_DEBUG_SDMA_ORDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HFI1_DEBUG_SDMA_ORDER=y</xsl:when>
			<xsl:otherwise># HFI1_DEBUG_SDMA_ORDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HFI1_VERBS_31BIT_PSN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HFI1_VERBS_31BIT_PSN=y</xsl:when>
			<xsl:otherwise># HFI1_VERBS_31BIT_PSN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SDMA_VERBOSITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SDMA_VERBOSITY=y</xsl:when>
			<xsl:otherwise># SDMA_VERBOSITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_ATOMIC_SCRUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_ATOMIC_SCRUB=y</xsl:when>
			<xsl:otherwise># EDAC_ATOMIC_SCRUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_SUPPORT=y</xsl:when>
			<xsl:otherwise># EDAC_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC=y</xsl:when>
			<xsl:otherwise># EDAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_LEGACY_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_LEGACY_SYSFS=y</xsl:when>
			<xsl:otherwise># EDAC_LEGACY_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_DEBUG=y</xsl:when>
			<xsl:otherwise># EDAC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_DECODE_MCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_DECODE_MCE=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_DECODE_MCE=m</xsl:when>
			<xsl:otherwise># EDAC_DECODE_MCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_MM_EDAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_MM_EDAC=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_MM_EDAC=m</xsl:when>
			<xsl:otherwise># EDAC_MM_EDAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_GHES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_GHES=y</xsl:when>
			<xsl:otherwise># EDAC_GHES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_AMD64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_AMD64=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_AMD64=m</xsl:when>
			<xsl:otherwise># EDAC_AMD64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_AMD64_ERROR_INJECTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_AMD64_ERROR_INJECTION=y</xsl:when>
			<xsl:otherwise># EDAC_AMD64_ERROR_INJECTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_AMD76X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_AMD76X=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_AMD76X=m</xsl:when>
			<xsl:otherwise># EDAC_AMD76X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_E7XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_E7XXX=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_E7XXX=m</xsl:when>
			<xsl:otherwise># EDAC_E7XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_E752X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_E752X=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_E752X=m</xsl:when>
			<xsl:otherwise># EDAC_E752X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I82443BXGX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I82443BXGX=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I82443BXGX=m</xsl:when>
			<xsl:otherwise># EDAC_I82443BXGX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I82875P">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I82875P=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I82875P=m</xsl:when>
			<xsl:otherwise># EDAC_I82875P is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I82975X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I82975X=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I82975X=m</xsl:when>
			<xsl:otherwise># EDAC_I82975X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I3000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I3000=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I3000=m</xsl:when>
			<xsl:otherwise># EDAC_I3000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I3200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I3200=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I3200=m</xsl:when>
			<xsl:otherwise># EDAC_I3200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_IE31200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_IE31200=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_IE31200=m</xsl:when>
			<xsl:otherwise># EDAC_IE31200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_X38">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_X38=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_X38=m</xsl:when>
			<xsl:otherwise># EDAC_X38 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I5400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I5400=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I5400=m</xsl:when>
			<xsl:otherwise># EDAC_I5400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I7CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I7CORE=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I7CORE=m</xsl:when>
			<xsl:otherwise># EDAC_I7CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I82860">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I82860=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I82860=m</xsl:when>
			<xsl:otherwise># EDAC_I82860 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_R82600">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_R82600=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_R82600=m</xsl:when>
			<xsl:otherwise># EDAC_R82600 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I5000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I5000=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I5000=m</xsl:when>
			<xsl:otherwise># EDAC_I5000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I5100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I5100=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I5100=m</xsl:when>
			<xsl:otherwise># EDAC_I5100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_I7300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_I7300=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_I7300=m</xsl:when>
			<xsl:otherwise># EDAC_I7300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_SBRIDGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_SBRIDGE=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_SBRIDGE=m</xsl:when>
			<xsl:otherwise># EDAC_SBRIDGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_SKX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_SKX=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_SKX=m</xsl:when>
			<xsl:otherwise># EDAC_SKX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_MPC85XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_MPC85XX=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_MPC85XX=m</xsl:when>
			<xsl:otherwise># EDAC_MPC85XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_MV64X60">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_MV64X60=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_MV64X60=m</xsl:when>
			<xsl:otherwise># EDAC_MV64X60 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_PASEMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_PASEMI=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_PASEMI=m</xsl:when>
			<xsl:otherwise># EDAC_PASEMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_CELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_CELL=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_CELL=m</xsl:when>
			<xsl:otherwise># EDAC_CELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_PPC4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_PPC4XX=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_PPC4XX=m</xsl:when>
			<xsl:otherwise># EDAC_PPC4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_AMD8131">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_AMD8131=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_AMD8131=m</xsl:when>
			<xsl:otherwise># EDAC_AMD8131 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_AMD8111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_AMD8111=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_AMD8111=m</xsl:when>
			<xsl:otherwise># EDAC_AMD8111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_CPC925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_CPC925=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_CPC925=m</xsl:when>
			<xsl:otherwise># EDAC_CPC925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_TILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_TILE=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_TILE=m</xsl:when>
			<xsl:otherwise># EDAC_TILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_HIGHBANK_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_HIGHBANK_MC=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_HIGHBANK_MC=m</xsl:when>
			<xsl:otherwise># EDAC_HIGHBANK_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_HIGHBANK_L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_HIGHBANK_L2=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_HIGHBANK_L2=m</xsl:when>
			<xsl:otherwise># EDAC_HIGHBANK_L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_OCTEON_PC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_OCTEON_PC=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_OCTEON_PC=m</xsl:when>
			<xsl:otherwise># EDAC_OCTEON_PC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_OCTEON_L2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_OCTEON_L2C=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_OCTEON_L2C=m</xsl:when>
			<xsl:otherwise># EDAC_OCTEON_L2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_OCTEON_LMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_OCTEON_LMC=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_OCTEON_LMC=m</xsl:when>
			<xsl:otherwise># EDAC_OCTEON_LMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_OCTEON_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_OCTEON_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_OCTEON_PCI=m</xsl:when>
			<xsl:otherwise># EDAC_OCTEON_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_ALTERA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_ALTERA=y</xsl:when>
			<xsl:otherwise># EDAC_ALTERA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_ALTERA_L2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_ALTERA_L2C=y</xsl:when>
			<xsl:otherwise># EDAC_ALTERA_L2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_ALTERA_OCRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_ALTERA_OCRAM=y</xsl:when>
			<xsl:otherwise># EDAC_ALTERA_OCRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_ALTERA_ETHERNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_ALTERA_ETHERNET=y</xsl:when>
			<xsl:otherwise># EDAC_ALTERA_ETHERNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_SYNOPSYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_SYNOPSYS=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_SYNOPSYS=m</xsl:when>
			<xsl:otherwise># EDAC_SYNOPSYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDAC_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDAC_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">EDAC_XGENE=m</xsl:when>
			<xsl:otherwise># EDAC_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_LIB=y</xsl:when>
			<xsl:otherwise># RTC_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_MC146818_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_MC146818_LIB=y</xsl:when>
			<xsl:otherwise># RTC_MC146818_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_CLASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_CLASS=y</xsl:when>
			<xsl:otherwise># RTC_CLASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_HCTOSYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_HCTOSYS=y</xsl:when>
			<xsl:otherwise># RTC_HCTOSYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_HCTOSYS_DEVICE">
		RTC_HCTOSYS_DEVICE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RTC_SYSTOHC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_SYSTOHC=y</xsl:when>
			<xsl:otherwise># RTC_SYSTOHC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_SYSTOHC_DEVICE">
		RTC_SYSTOHC_DEVICE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="RTC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DEBUG=y</xsl:when>
			<xsl:otherwise># RTC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_INTF_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_INTF_SYSFS=y</xsl:when>
			<xsl:otherwise># RTC_INTF_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_INTF_PROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_INTF_PROC=y</xsl:when>
			<xsl:otherwise># RTC_INTF_PROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_INTF_DEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_INTF_DEV=y</xsl:when>
			<xsl:otherwise># RTC_INTF_DEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_INTF_DEV_UIE_EMUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_INTF_DEV_UIE_EMUL=y</xsl:when>
			<xsl:otherwise># RTC_INTF_DEV_UIE_EMUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TEST=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_88PM860X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_88PM860X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_88PM860X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_88PM860X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_88PM80X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_88PM80X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_88PM80X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_88PM80X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ABB5ZES3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ABB5ZES3=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ABB5ZES3=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ABB5ZES3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ABX80X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ABX80X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ABX80X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ABX80X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AS3722">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AS3722=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AS3722=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AS3722 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1307">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1307=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1307=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1307 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1307_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1307_HWMON=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1307_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1374">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1374=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1374=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1374 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1374_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1374_WDT=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1374_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1672">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1672=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1672=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1672 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_HYM8563">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_HYM8563=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_HYM8563=m</xsl:when>
			<xsl:otherwise># RTC_DRV_HYM8563 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_LP8788">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_LP8788=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_LP8788=m</xsl:when>
			<xsl:otherwise># RTC_DRV_LP8788 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX6900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX6900=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX6900=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX6900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX8907">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX8907=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX8907=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX8907 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX8925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX8925=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX8925=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX8925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX8998">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX8998=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX8998=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX8998 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX8997=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX8997=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX77686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX77686=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX77686=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX77686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RK808">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RK808=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RK808=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RK808 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RS5C372">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RS5C372=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RS5C372=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RS5C372 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ISL1208">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ISL1208=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ISL1208=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ISL1208 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ISL12022">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ISL12022=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ISL12022=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ISL12022 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ISL12057">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ISL12057=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ISL12057=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ISL12057 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_X1205">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_X1205=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_X1205=m</xsl:when>
			<xsl:otherwise># RTC_DRV_X1205 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF8523">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF8523=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF8523=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF8523 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF85063">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF85063=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF85063=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF85063 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF8563">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF8563=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF8563=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF8563 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF8583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF8583=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF8583=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF8583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M41T80">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M41T80=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M41T80=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M41T80 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M41T80_WDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M41T80_WDT=y</xsl:when>
			<xsl:otherwise># RTC_DRV_M41T80_WDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_BQ32K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_BQ32K=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_BQ32K=m</xsl:when>
			<xsl:otherwise># RTC_DRV_BQ32K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DM355EVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DM355EVM=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DM355EVM=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DM355EVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TWL92330">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TWL92330=y</xsl:when>
			<xsl:otherwise># RTC_DRV_TWL92330 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TWL4030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TWL4030=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TWL4030=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TWL4030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PALMAS=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PALMAS=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TPS6586X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TPS6586X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TPS6586X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TPS6586X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TPS65910">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TPS65910=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TPS65910=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TPS65910 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TPS80031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TPS80031=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TPS80031=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TPS80031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RC5T583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RC5T583=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RC5T583=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RC5T583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_S35390A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_S35390A=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_S35390A=m</xsl:when>
			<xsl:otherwise># RTC_DRV_S35390A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_FM3130">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_FM3130=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_FM3130=m</xsl:when>
			<xsl:otherwise># RTC_DRV_FM3130 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RX8010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RX8010=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RX8010=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RX8010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RX8581">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RX8581=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RX8581=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RX8581 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RX8025">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RX8025=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RX8025=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RX8025 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_EM3027">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_EM3027=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_EM3027=m</xsl:when>
			<xsl:otherwise># RTC_DRV_EM3027 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RV8803">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RV8803=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RV8803=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RV8803 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_S5M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_S5M=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_S5M=m</xsl:when>
			<xsl:otherwise># RTC_DRV_S5M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M41T93">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M41T93=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M41T93=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M41T93 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M41T94">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M41T94=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M41T94=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M41T94 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1302">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1302=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1302=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1302 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1305">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1305=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1305=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1305 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1343">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1343=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1343=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1343 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1347">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1347=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1347=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1347 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1390=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1390=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX6916">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX6916=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX6916=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX6916 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_R9701">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_R9701=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_R9701=m</xsl:when>
			<xsl:otherwise># RTC_DRV_R9701 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RX4581">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RX4581=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RX4581=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RX4581 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RX6110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RX6110=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RX6110=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RX6110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RS5C348">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RS5C348=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RS5C348=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RS5C348 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MAX6902">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MAX6902=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MAX6902=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MAX6902 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF2123">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF2123=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF2123=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF2123 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MCP795">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MCP795=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MCP795=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MCP795 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_I2C_AND_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_I2C_AND_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_I2C_AND_SPI=m</xsl:when>
			<xsl:otherwise># RTC_I2C_AND_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS3232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS3232=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS3232=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS3232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF2127">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF2127=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF2127=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF2127 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RV3029C2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RV3029C2=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RV3029C2=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RV3029C2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RV3029_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RV3029_HWMON=y</xsl:when>
			<xsl:otherwise># RTC_DRV_RV3029_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_CMOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_CMOS=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_CMOS=m</xsl:when>
			<xsl:otherwise># RTC_DRV_CMOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ALPHA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ALPHA=y</xsl:when>
			<xsl:otherwise># RTC_DRV_ALPHA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_VRTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_VRTC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_VRTC=m</xsl:when>
			<xsl:otherwise># RTC_DRV_VRTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1216">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1216=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1216=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1216 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1286">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1286=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1286=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1286 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1511">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1511=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1511=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1511 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1553">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1553=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1553=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1553 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1685_FAMILY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1685_FAMILY=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1685_FAMILY=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1685_FAMILY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1685">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1685=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1685 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1689">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1689=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1689 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS17285">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS17285=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS17285 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS17485">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS17485=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS17485 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS17885">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS17885=y</xsl:when>
			<xsl:otherwise># RTC_DRV_DS17885 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DS1685_PROC_REGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DS1685_PROC_REGS=y</xsl:when>
			<xsl:otherwise># RTC_DS1685_PROC_REGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DS1685_SYSFS_REGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DS1685_SYSFS_REGS=y</xsl:when>
			<xsl:otherwise># RTC_DS1685_SYSFS_REGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS1742">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS1742=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS1742=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS1742 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DS2404">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DS2404=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DS2404=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DS2404 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DA9052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DA9052=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DA9052=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DA9052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DA9055">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DA9055=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DA9055=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DA9055 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DA9063">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DA9063=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DA9063=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DA9063 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_EFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_EFI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_EFI=m</xsl:when>
			<xsl:otherwise># RTC_DRV_EFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_STK17TA8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_STK17TA8=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_STK17TA8=m</xsl:when>
			<xsl:otherwise># RTC_DRV_STK17TA8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M48T86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M48T86=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M48T86=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M48T86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M48T35">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M48T35=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M48T35=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M48T35 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_M48T59">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_M48T59=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_M48T59=m</xsl:when>
			<xsl:otherwise># RTC_DRV_M48T59 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MSM6242">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MSM6242=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MSM6242=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MSM6242 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_BQ4802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_BQ4802=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_BQ4802=m</xsl:when>
			<xsl:otherwise># RTC_DRV_BQ4802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RP5C01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RP5C01=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RP5C01=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RP5C01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_V3020">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_V3020=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_V3020=m</xsl:when>
			<xsl:otherwise># RTC_DRV_V3020 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_WM831X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_WM8350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_WM8350=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_WM8350=m</xsl:when>
			<xsl:otherwise># RTC_DRV_WM8350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SPEAR=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCF50633">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCF50633=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCF50633=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCF50633 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AB3100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AB3100=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AB3100=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AB3100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AB8500=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AB8500=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_NUC900">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_NUC900=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_NUC900=m</xsl:when>
			<xsl:otherwise># RTC_DRV_NUC900 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_OPAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_OPAL=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_OPAL=m</xsl:when>
			<xsl:otherwise># RTC_DRV_OPAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ZYNQMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ZYNQMP=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ZYNQMP=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ZYNQMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ASM9260">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ASM9260=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ASM9260=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ASM9260 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DAVINCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DAVINCI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DAVINCI=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DAVINCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_DIGICOLOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_DIGICOLOR=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_DIGICOLOR=m</xsl:when>
			<xsl:otherwise># RTC_DRV_DIGICOLOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_IMXDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_IMXDI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_IMXDI=m</xsl:when>
			<xsl:otherwise># RTC_DRV_IMXDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_OMAP=m</xsl:when>
			<xsl:otherwise># RTC_DRV_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_S3C_RTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_S3C_RTC=y</xsl:when>
			<xsl:otherwise># HAVE_S3C_RTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_S3C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_S3C=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_S3C=m</xsl:when>
			<xsl:otherwise># RTC_DRV_S3C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_EP93XX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SA1100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SA1100=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SA1100=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SA1100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SH=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SH=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_VR41XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_VR41XX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_VR41XX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_VR41XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PL030">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PL030=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PL030=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PL030 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PL031">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PL031=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PL031=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PL031 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AT32AP700X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AT32AP700X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AT32AP700X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AT32AP700X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AT91RM9200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AT91RM9200=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AT91RM9200=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AT91RM9200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AT91SAM9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AT91SAM9=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AT91SAM9=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AT91SAM9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_AU1XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_AU1XXX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_AU1XXX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_AU1XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_BFIN=m</xsl:when>
			<xsl:otherwise># RTC_DRV_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_RS5C313">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_RS5C313=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_RS5C313=m</xsl:when>
			<xsl:otherwise># RTC_DRV_RS5C313 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_GENERIC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_GENERIC=m</xsl:when>
			<xsl:otherwise># RTC_DRV_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PXA=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PXA=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_VT8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_VT8500=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_VT8500=m</xsl:when>
			<xsl:otherwise># RTC_DRV_VT8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SUN4V">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SUN4V=y</xsl:when>
			<xsl:otherwise># RTC_DRV_SUN4V is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SUN6I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SUN6I=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SUN6I=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SUN6I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SUNXI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SUNXI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SUNXI=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SUNXI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_STARFIRE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_STARFIRE=y</xsl:when>
			<xsl:otherwise># RTC_DRV_STARFIRE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TX4939">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TX4939=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TX4939=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TX4939 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MV=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MV=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ARMADA38X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ARMADA38X=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ARMADA38X=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ARMADA38X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_GEMINI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_GEMINI=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_GEMINI=m</xsl:when>
			<xsl:otherwise># RTC_DRV_GEMINI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PS3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PS3=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PS3=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PS3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_COH901331">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_COH901331=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_COH901331=m</xsl:when>
			<xsl:otherwise># RTC_DRV_COH901331 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_STMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_STMP=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_STMP=m</xsl:when>
			<xsl:otherwise># RTC_DRV_STMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PCAP=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PCAP=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MC13XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MC13XXX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MC13XXX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MC13XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MPC5121">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MPC5121=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MPC5121=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MPC5121 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_JZ4740=m</xsl:when>
			<xsl:otherwise># RTC_DRV_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_LPC24XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_LPC24XX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_LPC24XX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_LPC24XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_LPC32XX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PM8XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PM8XXX=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PM8XXX=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PM8XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TEGRA=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_TILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_TILE=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_TILE=m</xsl:when>
			<xsl:otherwise># RTC_DRV_TILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PUV3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PUV3=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PUV3=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PUV3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_LOONGSON1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_LOONGSON1=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_LOONGSON1=m</xsl:when>
			<xsl:otherwise># RTC_DRV_LOONGSON1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MXC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MXC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MXC=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MXC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SNVS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SNVS=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SNVS=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SNVS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_SIRFSOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_SIRFSOC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_SIRFSOC=m</xsl:when>
			<xsl:otherwise># RTC_DRV_SIRFSOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_ST_LPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_ST_LPC=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_ST_LPC=m</xsl:when>
			<xsl:otherwise># RTC_DRV_ST_LPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MOXART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MOXART=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MOXART=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MOXART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_MT6397">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_MT6397=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_MT6397=m</xsl:when>
			<xsl:otherwise># RTC_DRV_MT6397 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_XGENE=m</xsl:when>
			<xsl:otherwise># RTC_DRV_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_PIC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_PIC32=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_PIC32=m</xsl:when>
			<xsl:otherwise># RTC_DRV_PIC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTC_DRV_HID_SENSOR_TIME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTC_DRV_HID_SENSOR_TIME=y</xsl:when>
			<xsl:when test=". = 'module'">RTC_DRV_HID_SENSOR_TIME=m</xsl:when>
			<xsl:otherwise># RTC_DRV_HID_SENSOR_TIME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMADEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMADEVICES=y</xsl:when>
			<xsl:otherwise># DMADEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMADEVICES_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMADEVICES_DEBUG=y</xsl:when>
			<xsl:otherwise># DMADEVICES_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMADEVICES_VDEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMADEVICES_VDEBUG=y</xsl:when>
			<xsl:otherwise># DMADEVICES_VDEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_TX_ENABLE_CHANNEL_SWITCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_TX_ENABLE_CHANNEL_SWITCH=y</xsl:when>
			<xsl:otherwise># ASYNC_TX_ENABLE_CHANNEL_SWITCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_ASYNC_TX_FIND_CHANNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_ASYNC_TX_FIND_CHANNEL=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_ASYNC_TX_FIND_CHANNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_ENGINE=y</xsl:when>
			<xsl:otherwise># DMA_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_VIRTUAL_CHANNELS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_VIRTUAL_CHANNELS=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_VIRTUAL_CHANNELS=m</xsl:when>
			<xsl:otherwise># DMA_VIRTUAL_CHANNELS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_ACPI=y</xsl:when>
			<xsl:otherwise># DMA_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_OF=y</xsl:when>
			<xsl:otherwise># DMA_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMBA_PL08X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMBA_PL08X=y</xsl:when>
			<xsl:otherwise># AMBA_PL08X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMCC_PPC440SPE_ADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMCC_PPC440SPE_ADMA=y</xsl:when>
			<xsl:when test=". = 'module'">AMCC_PPC440SPE_ADMA=m</xsl:when>
			<xsl:otherwise># AMCC_PPC440SPE_ADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT_HDMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT_HDMAC=y</xsl:when>
			<xsl:when test=". = 'module'">AT_HDMAC=m</xsl:when>
			<xsl:otherwise># AT_HDMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT_XDMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT_XDMAC=y</xsl:when>
			<xsl:when test=". = 'module'">AT_XDMAC=m</xsl:when>
			<xsl:otherwise># AT_XDMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AXI_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AXI_DMAC=y</xsl:when>
			<xsl:when test=". = 'module'">AXI_DMAC=m</xsl:when>
			<xsl:otherwise># AXI_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COH901318">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COH901318=y</xsl:when>
			<xsl:otherwise># COH901318 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_BCM2835=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_BCM2835=m</xsl:when>
			<xsl:otherwise># DMA_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_JZ4740=m</xsl:when>
			<xsl:otherwise># DMA_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_JZ4780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_JZ4780=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_JZ4780=m</xsl:when>
			<xsl:otherwise># DMA_JZ4780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_OMAP=m</xsl:when>
			<xsl:otherwise># DMA_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_SA11X0">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_SA11X0=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_SA11X0=m</xsl:when>
			<xsl:otherwise># DMA_SA11X0 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_SUN4I=m</xsl:when>
			<xsl:otherwise># DMA_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_SUN6I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_SUN6I=y</xsl:when>
			<xsl:when test=". = 'module'">DMA_SUN6I=m</xsl:when>
			<xsl:otherwise># DMA_SUN6I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EP93XX_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EP93XX_DMA=y</xsl:when>
			<xsl:otherwise># EP93XX_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_DMA=m</xsl:when>
			<xsl:otherwise># FSL_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_EDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_EDMA=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_EDMA=m</xsl:when>
			<xsl:otherwise># FSL_EDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_RAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_RAID=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_RAID=m</xsl:when>
			<xsl:otherwise># FSL_RAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMG_MDC_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMG_MDC_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">IMG_MDC_DMA=m</xsl:when>
			<xsl:otherwise># IMG_MDC_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">IMX_DMA=m</xsl:when>
			<xsl:otherwise># IMX_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_SDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_SDMA=y</xsl:when>
			<xsl:when test=". = 'module'">IMX_SDMA=m</xsl:when>
			<xsl:otherwise># IMX_SDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IDMA64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IDMA64=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_IDMA64=m</xsl:when>
			<xsl:otherwise># INTEL_IDMA64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOATDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOATDMA=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_IOATDMA=m</xsl:when>
			<xsl:otherwise># INTEL_IOATDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOP_ADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOP_ADMA=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_IOP_ADMA=m</xsl:when>
			<xsl:otherwise># INTEL_IOP_ADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MIC_X100_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MIC_X100_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MIC_X100_DMA=m</xsl:when>
			<xsl:otherwise># INTEL_MIC_X100_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="K3_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">K3_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">K3_DMA=m</xsl:when>
			<xsl:otherwise># K3_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC18XX_DMAMUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC18XX_DMAMUX=y</xsl:when>
			<xsl:otherwise># LPC18XX_DMAMUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMP_PDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMP_PDMA=y</xsl:when>
			<xsl:otherwise># MMP_PDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMP_TDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMP_TDMA=y</xsl:when>
			<xsl:otherwise># MMP_TDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOXART_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOXART_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">MOXART_DMA=m</xsl:when>
			<xsl:otherwise># MOXART_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPC512X_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPC512X_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">MPC512X_DMA=m</xsl:when>
			<xsl:otherwise># MPC512X_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MV_XOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MV_XOR=y</xsl:when>
			<xsl:otherwise># MV_XOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MV_XOR_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MV_XOR_V2=y</xsl:when>
			<xsl:otherwise># MV_XOR_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXS_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXS_DMA=y</xsl:when>
			<xsl:otherwise># MXS_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MX3_IPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MX3_IPU=y</xsl:when>
			<xsl:otherwise># MX3_IPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MX3_IPU_IRQS">
		MX3_IPU_IRQS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NBPFAXI_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NBPFAXI_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">NBPFAXI_DMA=m</xsl:when>
			<xsl:otherwise># NBPFAXI_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCH_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCH_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">PCH_DMA=m</xsl:when>
			<xsl:otherwise># PCH_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PL330_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PL330_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">PL330_DMA=m</xsl:when>
			<xsl:otherwise># PL330_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PXA_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PXA_DMA=y</xsl:when>
			<xsl:otherwise># PXA_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIRF_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIRF_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">SIRF_DMA=m</xsl:when>
			<xsl:otherwise># SIRF_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STE_DMA40">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STE_DMA40=y</xsl:when>
			<xsl:otherwise># STE_DMA40 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STM32_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STM32_DMA=y</xsl:when>
			<xsl:otherwise># STM32_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C24XX_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C24XX_DMAC=y</xsl:when>
			<xsl:otherwise># S3C24XX_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TXX9_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TXX9_DMAC=y</xsl:when>
			<xsl:when test=". = 'module'">TXX9_DMAC=m</xsl:when>
			<xsl:otherwise># TXX9_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA20_APB_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA20_APB_DMA=y</xsl:when>
			<xsl:otherwise># TEGRA20_APB_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA210_ADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA210_ADMA=y</xsl:when>
			<xsl:otherwise># TEGRA210_ADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TIMB_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TIMB_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">TIMB_DMA=m</xsl:when>
			<xsl:otherwise># TIMB_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_CPPI41">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_CPPI41=y</xsl:when>
			<xsl:when test=". = 'module'">TI_CPPI41=m</xsl:when>
			<xsl:otherwise># TI_CPPI41 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_DMA_CROSSBAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_DMA_CROSSBAR=y</xsl:when>
			<xsl:otherwise># TI_DMA_CROSSBAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_EDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_EDMA=y</xsl:when>
			<xsl:otherwise># TI_EDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XGENE_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XGENE_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">XGENE_DMA=m</xsl:when>
			<xsl:otherwise># XGENE_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_DMA=m</xsl:when>
			<xsl:otherwise># XILINX_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_ZYNQMP_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_ZYNQMP_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_ZYNQMP_DMA=m</xsl:when>
			<xsl:otherwise># XILINX_ZYNQMP_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZX_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZX_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">ZX_DMA=m</xsl:when>
			<xsl:otherwise># ZX_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_BESTCOMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_BESTCOMM=y</xsl:when>
			<xsl:when test=". = 'module'">PPC_BESTCOMM=m</xsl:when>
			<xsl:otherwise># PPC_BESTCOMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_BESTCOMM_ATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_BESTCOMM_ATA=y</xsl:when>
			<xsl:when test=". = 'module'">PPC_BESTCOMM_ATA=m</xsl:when>
			<xsl:otherwise># PPC_BESTCOMM_ATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_BESTCOMM_FEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_BESTCOMM_FEC=y</xsl:when>
			<xsl:when test=". = 'module'">PPC_BESTCOMM_FEC=m</xsl:when>
			<xsl:otherwise># PPC_BESTCOMM_FEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PPC_BESTCOMM_GEN_BD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PPC_BESTCOMM_GEN_BD=y</xsl:when>
			<xsl:when test=". = 'module'">PPC_BESTCOMM_GEN_BD=m</xsl:when>
			<xsl:otherwise># PPC_BESTCOMM_GEN_BD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_BAM_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_BAM_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_BAM_DMA=m</xsl:when>
			<xsl:otherwise># QCOM_BAM_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_HIDMA_MGMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_HIDMA_MGMT=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_HIDMA_MGMT=m</xsl:when>
			<xsl:otherwise># QCOM_HIDMA_MGMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_HIDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_HIDMA=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_HIDMA=m</xsl:when>
			<xsl:otherwise># QCOM_HIDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_DMAC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_DMAC_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">DW_DMAC_CORE=m</xsl:when>
			<xsl:otherwise># DW_DMAC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_DMAC_BIG_ENDIAN_IO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_DMAC_BIG_ENDIAN_IO=y</xsl:when>
			<xsl:otherwise># DW_DMAC_BIG_ENDIAN_IO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_DMAC=y</xsl:when>
			<xsl:when test=". = 'module'">DW_DMAC=m</xsl:when>
			<xsl:otherwise># DW_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_DMAC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_DMAC_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">DW_DMAC_PCI=m</xsl:when>
			<xsl:otherwise># DW_DMAC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSU_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSU_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">HSU_DMA=m</xsl:when>
			<xsl:otherwise># HSU_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSU_DMA_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSU_DMA_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">HSU_DMA_PCI=m</xsl:when>
			<xsl:otherwise># HSU_DMA_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_DMA=y</xsl:when>
			<xsl:otherwise># RENESAS_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_DMAE_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_DMAE_BASE=y</xsl:when>
			<xsl:otherwise># SH_DMAE_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_DMAE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_DMAE=y</xsl:when>
			<xsl:when test=". = 'module'">SH_DMAE=m</xsl:when>
			<xsl:otherwise># SH_DMAE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_DMAE_R8A73A4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_DMAE_R8A73A4=y</xsl:when>
			<xsl:otherwise># SH_DMAE_R8A73A4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RCAR_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RCAR_DMAC=y</xsl:when>
			<xsl:when test=". = 'module'">RCAR_DMAC=m</xsl:when>
			<xsl:otherwise># RCAR_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_USB_DMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_USB_DMAC=y</xsl:when>
			<xsl:when test=". = 'module'">RENESAS_USB_DMAC=m</xsl:when>
			<xsl:otherwise># RENESAS_USB_DMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUDMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUDMAC=y</xsl:when>
			<xsl:when test=". = 'module'">SUDMAC=m</xsl:when>
			<xsl:otherwise># SUDMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_TX_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_TX_DMA=y</xsl:when>
			<xsl:otherwise># ASYNC_TX_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMATEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMATEST=y</xsl:when>
			<xsl:when test=". = 'module'">DMATEST=m</xsl:when>
			<xsl:otherwise># DMATEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMA_ENGINE_RAID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMA_ENGINE_RAID=y</xsl:when>
			<xsl:otherwise># DMA_ENGINE_RAID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYNC_FILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYNC_FILE=y</xsl:when>
			<xsl:otherwise># SYNC_FILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DCA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DCA=y</xsl:when>
			<xsl:when test=". = 'module'">DCA=m</xsl:when>
			<xsl:otherwise># DCA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUXDISPLAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUXDISPLAY=y</xsl:when>
			<xsl:otherwise># AUXDISPLAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS0108">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS0108=y</xsl:when>
			<xsl:when test=". = 'module'">KS0108=m</xsl:when>
			<xsl:otherwise># KS0108 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS0108_DELAY">
		KS0108_DELAY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CFAG12864B">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CFAG12864B=y</xsl:when>
			<xsl:when test=". = 'module'">CFAG12864B=m</xsl:when>
			<xsl:otherwise># CFAG12864B is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CFAG12864B_RATE">
		CFAG12864B_RATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="UIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UIO=y</xsl:when>
			<xsl:when test=". = 'module'">UIO=m</xsl:when>
			<xsl:otherwise># UIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UIO_CIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UIO_CIF=y</xsl:when>
			<xsl:when test=". = 'module'">UIO_CIF=m</xsl:when>
			<xsl:otherwise># UIO_CIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UIO_PDRV_GENIRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UIO_PDRV_GENIRQ=y</xsl:when>
			<xsl:when test=". = 'module'">UIO_PDRV_GENIRQ=m</xsl:when>
			<xsl:otherwise># UIO_PDRV_GENIRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UIO_DMEM_GENIRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UIO_DMEM_GENIRQ=y</xsl:when>
			<xsl:when test=". = 'module'">UIO_DMEM_GENIRQ=m</xsl:when>
			<xsl:otherwise># UIO_DMEM_GENIRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UIO_AEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UIO_AEC=y</xsl:when>
			<xsl:when test=". = 'module'">UIO_AEC=m</xsl:when>
			<xsl:otherwise># UIO_AEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_IOMMU_TYPE1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_IOMMU_TYPE1=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_IOMMU_TYPE1=m</xsl:when>
			<xsl:otherwise># VFIO_IOMMU_TYPE1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_IOMMU_SPAPR_TCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_IOMMU_SPAPR_TCE=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_IOMMU_SPAPR_TCE=m</xsl:when>
			<xsl:otherwise># VFIO_IOMMU_SPAPR_TCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_SPAPR_EEH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_SPAPR_EEH=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_SPAPR_EEH=m</xsl:when>
			<xsl:otherwise># VFIO_SPAPR_EEH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_VIRQFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_VIRQFD=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_VIRQFD=m</xsl:when>
			<xsl:otherwise># VFIO_VIRQFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO=m</xsl:when>
			<xsl:otherwise># VFIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_NOIOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_NOIOMMU=y</xsl:when>
			<xsl:otherwise># VFIO_NOIOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_PCI=m</xsl:when>
			<xsl:otherwise># VFIO_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PCI_VGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PCI_VGA=y</xsl:when>
			<xsl:otherwise># VFIO_PCI_VGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PCI_MMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PCI_MMAP=y</xsl:when>
			<xsl:otherwise># VFIO_PCI_MMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PCI_INTX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PCI_INTX=y</xsl:when>
			<xsl:otherwise># VFIO_PCI_INTX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PCI_IGD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PCI_IGD=y</xsl:when>
			<xsl:otherwise># VFIO_PCI_IGD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_PLATFORM=m</xsl:when>
			<xsl:otherwise># VFIO_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_AMBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_AMBA=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_AMBA=m</xsl:when>
			<xsl:otherwise># VFIO_AMBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PLATFORM_CALXEDAXGMAC_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PLATFORM_CALXEDAXGMAC_RESET=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_PLATFORM_CALXEDAXGMAC_RESET=m</xsl:when>
			<xsl:otherwise># VFIO_PLATFORM_CALXEDAXGMAC_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFIO_PLATFORM_AMDXGBE_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFIO_PLATFORM_AMDXGBE_RESET=y</xsl:when>
			<xsl:when test=". = 'module'">VFIO_PLATFORM_AMDXGBE_RESET=m</xsl:when>
			<xsl:otherwise># VFIO_PLATFORM_AMDXGBE_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_BYPASS_MANAGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_BYPASS_MANAGER=y</xsl:when>
			<xsl:when test=". = 'module'">IRQ_BYPASS_MANAGER=m</xsl:when>
			<xsl:otherwise># IRQ_BYPASS_MANAGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLYNQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLYNQ=y</xsl:when>
			<xsl:otherwise># VLYNQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VLYNQ_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VLYNQ_DEBUG=y</xsl:when>
			<xsl:otherwise># VLYNQ_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRT_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRT_DRIVERS=y</xsl:when>
			<xsl:otherwise># VIRT_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_HV_MANAGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_HV_MANAGER=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_HV_MANAGER=m</xsl:when>
			<xsl:otherwise># FSL_HV_MANAGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO=m</xsl:when>
			<xsl:otherwise># VIRTIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_PCI=m</xsl:when>
			<xsl:otherwise># VIRTIO_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_PCI_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_PCI_LEGACY=y</xsl:when>
			<xsl:otherwise># VIRTIO_PCI_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_BALLOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_BALLOON=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_BALLOON=m</xsl:when>
			<xsl:otherwise># VIRTIO_BALLOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_INPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_INPUT=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_INPUT=m</xsl:when>
			<xsl:otherwise># VIRTIO_INPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTIO_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTIO_MMIO=y</xsl:when>
			<xsl:when test=". = 'module'">VIRTIO_MMIO=m</xsl:when>
			<xsl:otherwise># VIRTIO_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV=m</xsl:when>
			<xsl:otherwise># HYPERV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV_UTILS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV_UTILS=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV_UTILS=m</xsl:when>
			<xsl:otherwise># HYPERV_UTILS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HYPERV_BALLOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HYPERV_BALLOON=y</xsl:when>
			<xsl:when test=". = 'module'">HYPERV_BALLOON=m</xsl:when>
			<xsl:otherwise># HYPERV_BALLOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BALLOON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_BALLOON=y</xsl:when>
			<xsl:otherwise># XEN_BALLOON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SELFBALLOONING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SELFBALLOONING=y</xsl:when>
			<xsl:otherwise># XEN_SELFBALLOONING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BALLOON_MEMORY_HOTPLUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_BALLOON_MEMORY_HOTPLUG=y</xsl:when>
			<xsl:otherwise># XEN_BALLOON_MEMORY_HOTPLUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BALLOON_MEMORY_HOTPLUG_LIMIT">
		XEN_BALLOON_MEMORY_HOTPLUG_LIMIT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="XEN_SCRUB_PAGES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SCRUB_PAGES=y</xsl:when>
			<xsl:otherwise># XEN_SCRUB_PAGES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_DEV_EVTCHN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_DEV_EVTCHN=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_DEV_EVTCHN=m</xsl:when>
			<xsl:otherwise># XEN_DEV_EVTCHN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_BACKEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_BACKEND=y</xsl:when>
			<xsl:otherwise># XEN_BACKEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XENFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XENFS=y</xsl:when>
			<xsl:when test=". = 'module'">XENFS=m</xsl:when>
			<xsl:otherwise># XENFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_COMPAT_XENFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_COMPAT_XENFS=y</xsl:when>
			<xsl:otherwise># XEN_COMPAT_XENFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SYS_HYPERVISOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SYS_HYPERVISOR=y</xsl:when>
			<xsl:otherwise># XEN_SYS_HYPERVISOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_XENBUS_FRONTEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_XENBUS_FRONTEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_XENBUS_FRONTEND=m</xsl:when>
			<xsl:otherwise># XEN_XENBUS_FRONTEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_GNTDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_GNTDEV=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_GNTDEV=m</xsl:when>
			<xsl:otherwise># XEN_GNTDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_GRANT_DEV_ALLOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_GRANT_DEV_ALLOC=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_GRANT_DEV_ALLOC=m</xsl:when>
			<xsl:otherwise># XEN_GRANT_DEV_ALLOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SWIOTLB_XEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SWIOTLB_XEN=y</xsl:when>
			<xsl:otherwise># SWIOTLB_XEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_TMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_TMEM=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_TMEM=m</xsl:when>
			<xsl:otherwise># XEN_TMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_PCIDEV_BACKEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_PCIDEV_BACKEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_PCIDEV_BACKEND=m</xsl:when>
			<xsl:otherwise># XEN_PCIDEV_BACKEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SCSI_BACKEND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SCSI_BACKEND=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_SCSI_BACKEND=m</xsl:when>
			<xsl:otherwise># XEN_SCSI_BACKEND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_PRIVCMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_PRIVCMD=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_PRIVCMD=m</xsl:when>
			<xsl:otherwise># XEN_PRIVCMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_STUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_STUB=y</xsl:when>
			<xsl:otherwise># XEN_STUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_ACPI_HOTPLUG_MEMORY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_ACPI_HOTPLUG_MEMORY=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_ACPI_HOTPLUG_MEMORY=m</xsl:when>
			<xsl:otherwise># XEN_ACPI_HOTPLUG_MEMORY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_ACPI_HOTPLUG_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_ACPI_HOTPLUG_CPU=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_ACPI_HOTPLUG_CPU=m</xsl:when>
			<xsl:otherwise># XEN_ACPI_HOTPLUG_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_ACPI_PROCESSOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_ACPI_PROCESSOR=y</xsl:when>
			<xsl:when test=". = 'module'">XEN_ACPI_PROCESSOR=m</xsl:when>
			<xsl:otherwise># XEN_ACPI_PROCESSOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_MCE_LOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_MCE_LOG=y</xsl:when>
			<xsl:otherwise># XEN_MCE_LOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_HAVE_PVMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_HAVE_PVMMU=y</xsl:when>
			<xsl:otherwise># XEN_HAVE_PVMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_EFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_EFI=y</xsl:when>
			<xsl:otherwise># XEN_EFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_AUTO_XLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_AUTO_XLATE=y</xsl:when>
			<xsl:otherwise># XEN_AUTO_XLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_ACPI=y</xsl:when>
			<xsl:otherwise># XEN_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_SYMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_SYMS=y</xsl:when>
			<xsl:otherwise># XEN_SYMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XEN_HAVE_VPMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XEN_HAVE_VPMU=y</xsl:when>
			<xsl:otherwise># XEN_HAVE_VPMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STAGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STAGING=y</xsl:when>
			<xsl:otherwise># STAGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SLICOSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SLICOSS=y</xsl:when>
			<xsl:when test=". = 'module'">SLICOSS=m</xsl:when>
			<xsl:otherwise># SLICOSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRISM2_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRISM2_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PRISM2_USB=m</xsl:when>
			<xsl:otherwise># PRISM2_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI=m</xsl:when>
			<xsl:otherwise># COMEDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DEBUG=y</xsl:when>
			<xsl:otherwise># COMEDI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DEFAULT_BUF_SIZE_KB">
		COMEDI_DEFAULT_BUF_SIZE_KB=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="COMEDI_DEFAULT_BUF_MAXSIZE_KB">
		COMEDI_DEFAULT_BUF_MAXSIZE_KB=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="COMEDI_MISC_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_MISC_DRIVERS=y</xsl:when>
			<xsl:otherwise># COMEDI_MISC_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_BOND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_BOND=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_BOND=m</xsl:when>
			<xsl:otherwise># COMEDI_BOND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_TEST=m</xsl:when>
			<xsl:otherwise># COMEDI_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PARPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PARPORT=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PARPORT=m</xsl:when>
			<xsl:otherwise># COMEDI_PARPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_SERIAL2002">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_SERIAL2002=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_SERIAL2002=m</xsl:when>
			<xsl:otherwise># COMEDI_SERIAL2002 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_SSV_DNP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_SSV_DNP=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_SSV_DNP=m</xsl:when>
			<xsl:otherwise># COMEDI_SSV_DNP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ISA_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ISA_DRIVERS=y</xsl:when>
			<xsl:otherwise># COMEDI_ISA_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL711">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL711=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL711=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL711 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL724">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL724=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL724=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL724 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL726">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL726=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL726=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL726 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL730">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL730=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL730=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL730 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL812">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL812=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL812=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL812 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL816">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL816=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL816=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL816 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCL818">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCL818=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCL818=m</xsl:when>
			<xsl:otherwise># COMEDI_PCL818 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCM3724">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCM3724=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCM3724=m</xsl:when>
			<xsl:otherwise># COMEDI_PCM3724 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_DIO200_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_DIO200_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_DIO200_ISA=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_DIO200_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PC236_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PC236_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PC236_ISA=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PC236_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PC263_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PC263_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PC263_ISA=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PC263_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_RTI800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_RTI800=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_RTI800=m</xsl:when>
			<xsl:otherwise># COMEDI_RTI800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_RTI802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_RTI802=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_RTI802=m</xsl:when>
			<xsl:otherwise># COMEDI_RTI802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAC02">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAC02=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAC02=m</xsl:when>
			<xsl:otherwise># COMEDI_DAC02 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS16M1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS16M1=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS16M1=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS16M1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS08_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS08_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS08_ISA=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS08_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS16=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS16=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS800=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS800=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS1800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS1800=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS1800=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS1800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS6402">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS6402=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS6402=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS6402 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT2801">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT2801=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT2801=m</xsl:when>
			<xsl:otherwise># COMEDI_DT2801 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT2811">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT2811=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT2811=m</xsl:when>
			<xsl:otherwise># COMEDI_DT2811 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT2814">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT2814=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT2814=m</xsl:when>
			<xsl:otherwise># COMEDI_DT2814 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT2815">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT2815=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT2815=m</xsl:when>
			<xsl:otherwise># COMEDI_DT2815 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT2817">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT2817=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT2817=m</xsl:when>
			<xsl:otherwise># COMEDI_DT2817 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT282X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT282X=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT282X=m</xsl:when>
			<xsl:otherwise># COMEDI_DT282X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DMM32AT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DMM32AT=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DMM32AT=m</xsl:when>
			<xsl:otherwise># COMEDI_DMM32AT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_FL512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_FL512=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_FL512=m</xsl:when>
			<xsl:otherwise># COMEDI_FL512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AIO_AIO12_8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AIO_AIO12_8=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AIO_AIO12_8=m</xsl:when>
			<xsl:otherwise># COMEDI_AIO_AIO12_8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AIO_IIRO_16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AIO_IIRO_16=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AIO_IIRO_16=m</xsl:when>
			<xsl:otherwise># COMEDI_AIO_IIRO_16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_II_PCI20KC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_II_PCI20KC=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_II_PCI20KC=m</xsl:when>
			<xsl:otherwise># COMEDI_II_PCI20KC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_C6XDIGIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_C6XDIGIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_C6XDIGIO=m</xsl:when>
			<xsl:otherwise># COMEDI_C6XDIGIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_MPC624">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_MPC624=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_MPC624=m</xsl:when>
			<xsl:otherwise># COMEDI_MPC624 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADQ12B">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADQ12B=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADQ12B=m</xsl:when>
			<xsl:otherwise># COMEDI_ADQ12B is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_AT_A2150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_AT_A2150=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_AT_A2150=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_AT_A2150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_AT_AO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_AT_AO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_AT_AO=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_AT_AO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_ATMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_ATMIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_ATMIO=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_ATMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_ATMIO16D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_ATMIO16D=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_ATMIO16D=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_ATMIO16D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_LABPC_ISA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_LABPC_ISA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_LABPC_ISA=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_LABPC_ISA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCMAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCMAD=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCMAD=m</xsl:when>
			<xsl:otherwise># COMEDI_PCMAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCMDA12">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCMDA12=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCMDA12=m</xsl:when>
			<xsl:otherwise># COMEDI_PCMDA12 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCMMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCMMIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCMMIO=m</xsl:when>
			<xsl:otherwise># COMEDI_PCMMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCMUIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCMUIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCMUIO=m</xsl:when>
			<xsl:otherwise># COMEDI_PCMUIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_MULTIQ3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_MULTIQ3=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_MULTIQ3=m</xsl:when>
			<xsl:otherwise># COMEDI_MULTIQ3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_S526">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_S526=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_S526=m</xsl:when>
			<xsl:otherwise># COMEDI_S526 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCI_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCI_DRIVERS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCI_DRIVERS=m</xsl:when>
			<xsl:otherwise># COMEDI_PCI_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_8255_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_8255_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_8255_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_8255_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_WATCHDOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_WATCHDOG=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_WATCHDOG=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_WATCHDOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_1032">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_1032=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_1032=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_1032 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_1500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_1500=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_1500=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_1500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_1516">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_1516=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_1516=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_1516 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_1564">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_1564=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_1564=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_1564 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_16XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_16XX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_16XX=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_16XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_2032">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_2032=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_2032=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_2032 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_2200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_2200=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_2200=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_2200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_3120">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_3120=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_3120=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_3120 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_3501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_3501=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_3501=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_3501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADDI_APCI_3XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADDI_APCI_3XXX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADDI_APCI_3XXX=m</xsl:when>
			<xsl:otherwise># COMEDI_ADDI_APCI_3XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADL_PCI6208">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADL_PCI6208=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADL_PCI6208=m</xsl:when>
			<xsl:otherwise># COMEDI_ADL_PCI6208 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADL_PCI7X3X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADL_PCI7X3X=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADL_PCI7X3X=m</xsl:when>
			<xsl:otherwise># COMEDI_ADL_PCI7X3X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADL_PCI8164">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADL_PCI8164=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADL_PCI8164=m</xsl:when>
			<xsl:otherwise># COMEDI_ADL_PCI8164 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADL_PCI9111">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADL_PCI9111=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADL_PCI9111=m</xsl:when>
			<xsl:otherwise># COMEDI_ADL_PCI9111 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADL_PCI9118">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADL_PCI9118=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADL_PCI9118=m</xsl:when>
			<xsl:otherwise># COMEDI_ADL_PCI9118 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI1710">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI1710=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI1710=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI1710 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI1720">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI1720=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI1720=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI1720 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI1723">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI1723=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI1723=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI1723 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI1724">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI1724=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI1724=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI1724 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI1760">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI1760=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI1760=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI1760 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ADV_PCI_DIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ADV_PCI_DIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ADV_PCI_DIO=m</xsl:when>
			<xsl:otherwise># COMEDI_ADV_PCI_DIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_DIO200_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_DIO200_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_DIO200_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_DIO200_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PC236_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PC236_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PC236_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PC236_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PC263_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PC263_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PC263_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PC263_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PCI224">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PCI224=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PCI224=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PCI224 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PCI230">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PCI230=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PCI230=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PCI230 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CONTEC_PCI_DIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CONTEC_PCI_DIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CONTEC_PCI_DIO=m</xsl:when>
			<xsl:otherwise># COMEDI_CONTEC_PCI_DIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS08_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS08_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS08_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS08_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT3000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT3000=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT3000=m</xsl:when>
			<xsl:otherwise># COMEDI_DT3000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DYNA_PCI10XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DYNA_PCI10XX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DYNA_PCI10XX=m</xsl:when>
			<xsl:otherwise># COMEDI_DYNA_PCI10XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_GSC_HPDI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_GSC_HPDI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_GSC_HPDI=m</xsl:when>
			<xsl:otherwise># COMEDI_GSC_HPDI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_MF6X4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_MF6X4=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_MF6X4=m</xsl:when>
			<xsl:otherwise># COMEDI_MF6X4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ICP_MULTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ICP_MULTI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ICP_MULTI=m</xsl:when>
			<xsl:otherwise># COMEDI_ICP_MULTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAQBOARD2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAQBOARD2000=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAQBOARD2000=m</xsl:when>
			<xsl:otherwise># COMEDI_DAQBOARD2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_JR3_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_JR3_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_JR3_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_JR3_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_KE_COUNTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_KE_COUNTER=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_KE_COUNTER=m</xsl:when>
			<xsl:otherwise># COMEDI_KE_COUNTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_PCIDAS64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_PCIDAS64=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_PCIDAS64=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_PCIDAS64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_PCIDAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_PCIDAS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_PCIDAS=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_PCIDAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_PCIDDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_PCIDDA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_PCIDDA=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_PCIDDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_PCIMDAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_PCIMDAS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_PCIMDAS=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_PCIMDAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_PCIMDDA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_PCIMDDA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_PCIMDDA=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_PCIMDDA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ME4000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ME4000=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ME4000=m</xsl:when>
			<xsl:otherwise># COMEDI_ME4000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ME_DAQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ME_DAQ=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ME_DAQ=m</xsl:when>
			<xsl:otherwise># COMEDI_ME_DAQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_6527">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_6527=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_6527=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_6527 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_65XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_65XX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_65XX=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_65XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_660X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_660X=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_660X=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_660X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_670X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_670X=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_670X=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_670X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_LABPC_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_LABPC_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_LABPC_PCI=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_LABPC_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_PCIDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_PCIDIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_PCIDIO=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_PCIDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_PCIMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_PCIMIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_PCIMIO=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_PCIMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_RTD520">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_RTD520=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_RTD520=m</xsl:when>
			<xsl:otherwise># COMEDI_RTD520 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_S626">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_S626=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_S626=m</xsl:when>
			<xsl:otherwise># COMEDI_S626 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_MITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_MITE=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_MITE=m</xsl:when>
			<xsl:otherwise># COMEDI_MITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_TIOCMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_TIOCMD=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_TIOCMD=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_TIOCMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_PCMCIA_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_PCMCIA_DRIVERS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_PCMCIA_DRIVERS=m</xsl:when>
			<xsl:otherwise># COMEDI_PCMCIA_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_CB_DAS16_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_CB_DAS16_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_CB_DAS16_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_CB_DAS16_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS08_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS08_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS08_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS08_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_DAQ_700_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_DAQ_700_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_DAQ_700_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_DAQ_700_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_DAQ_DIO24_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_DAQ_DIO24_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_DAQ_DIO24_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_DAQ_DIO24_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_LABPC_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_LABPC_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_LABPC_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_LABPC_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_MIO_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_MIO_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_MIO_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_MIO_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_QUATECH_DAQP_CS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_QUATECH_DAQP_CS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_QUATECH_DAQP_CS=m</xsl:when>
			<xsl:otherwise># COMEDI_QUATECH_DAQP_CS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_USB_DRIVERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_USB_DRIVERS=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_USB_DRIVERS=m</xsl:when>
			<xsl:otherwise># COMEDI_USB_DRIVERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DT9812">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DT9812=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DT9812=m</xsl:when>
			<xsl:otherwise># COMEDI_DT9812 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_USB6501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_USB6501=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_USB6501=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_USB6501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_USBDUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_USBDUX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_USBDUX=m</xsl:when>
			<xsl:otherwise># COMEDI_USBDUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_USBDUXFAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_USBDUXFAST=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_USBDUXFAST=m</xsl:when>
			<xsl:otherwise># COMEDI_USBDUXFAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_USBDUXSIGMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_USBDUXSIGMA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_USBDUXSIGMA=m</xsl:when>
			<xsl:otherwise># COMEDI_USBDUXSIGMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_VMK80XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_VMK80XX=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_VMK80XX=m</xsl:when>
			<xsl:otherwise># COMEDI_VMK80XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_8254">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_8254=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_8254=m</xsl:when>
			<xsl:otherwise># COMEDI_8254 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_8255">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_8255=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_8255=m</xsl:when>
			<xsl:otherwise># COMEDI_8255 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_8255_SA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_8255_SA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_8255_SA=m</xsl:when>
			<xsl:otherwise># COMEDI_8255_SA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_KCOMEDILIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_KCOMEDILIB=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_KCOMEDILIB=m</xsl:when>
			<xsl:otherwise># COMEDI_KCOMEDILIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_DIO200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_DIO200=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_DIO200=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_DIO200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_AMPLC_PC236">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_AMPLC_PC236=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_AMPLC_PC236=m</xsl:when>
			<xsl:otherwise># COMEDI_AMPLC_PC236 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_DAS08">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_DAS08=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_DAS08=m</xsl:when>
			<xsl:otherwise># COMEDI_DAS08 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_ISADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_ISADMA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_ISADMA=m</xsl:when>
			<xsl:otherwise># COMEDI_ISADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_LABPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_LABPC=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_LABPC=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_LABPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_LABPC_ISADMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_LABPC_ISADMA=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_LABPC_ISADMA=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_LABPC_ISADMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMEDI_NI_TIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMEDI_NI_TIO=y</xsl:when>
			<xsl:when test=". = 'module'">COMEDI_NI_TIO=m</xsl:when>
			<xsl:otherwise># COMEDI_NI_TIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_OLPC_DCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_OLPC_DCON=y</xsl:when>
			<xsl:when test=". = 'module'">FB_OLPC_DCON=m</xsl:when>
			<xsl:otherwise># FB_OLPC_DCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_OLPC_DCON_1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_OLPC_DCON_1=y</xsl:when>
			<xsl:otherwise># FB_OLPC_DCON_1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_OLPC_DCON_1_5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_OLPC_DCON_1_5=y</xsl:when>
			<xsl:otherwise># FB_OLPC_DCON_1_5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192U=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192U=m</xsl:when>
			<xsl:otherwise># RTL8192U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLLIB=y</xsl:when>
			<xsl:when test=". = 'module'">RTLLIB=m</xsl:when>
			<xsl:otherwise># RTLLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLLIB_CRYPTO_CCMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLLIB_CRYPTO_CCMP=y</xsl:when>
			<xsl:when test=". = 'module'">RTLLIB_CRYPTO_CCMP=m</xsl:when>
			<xsl:otherwise># RTLLIB_CRYPTO_CCMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLLIB_CRYPTO_TKIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLLIB_CRYPTO_TKIP=y</xsl:when>
			<xsl:when test=". = 'module'">RTLLIB_CRYPTO_TKIP=m</xsl:when>
			<xsl:otherwise># RTLLIB_CRYPTO_TKIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTLLIB_CRYPTO_WEP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTLLIB_CRYPTO_WEP=y</xsl:when>
			<xsl:when test=". = 'module'">RTLLIB_CRYPTO_WEP=m</xsl:when>
			<xsl:otherwise># RTLLIB_CRYPTO_WEP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTL8192E">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTL8192E=y</xsl:when>
			<xsl:when test=". = 'module'">RTL8192E=m</xsl:when>
			<xsl:otherwise># RTL8192E is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R8712U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R8712U=y</xsl:when>
			<xsl:when test=". = 'module'">R8712U=m</xsl:when>
			<xsl:otherwise># R8712U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R8712_TX_AGGR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R8712_TX_AGGR=y</xsl:when>
			<xsl:otherwise># R8712_TX_AGGR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R8188EU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R8188EU=y</xsl:when>
			<xsl:when test=". = 'module'">R8188EU=m</xsl:when>
			<xsl:otherwise># R8188EU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_88EU_AP_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">88EU_AP_MODE=y</xsl:when>
			<xsl:otherwise># 88EU_AP_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="R8723AU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">R8723AU=y</xsl:when>
			<xsl:when test=". = 'module'">R8723AU=m</xsl:when>
			<xsl:otherwise># R8723AU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8723AU_AP_MODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8723AU_AP_MODE=y</xsl:when>
			<xsl:otherwise># 8723AU_AP_MODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_8723AU_BT_COEXIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">8723AU_BT_COEXIST=y</xsl:when>
			<xsl:otherwise># 8723AU_BT_COEXIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RTS5208">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RTS5208=y</xsl:when>
			<xsl:when test=". = 'module'">RTS5208=m</xsl:when>
			<xsl:otherwise># RTS5208 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCTEON_ETHERNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCTEON_ETHERNET=y</xsl:when>
			<xsl:when test=". = 'module'">OCTEON_ETHERNET=m</xsl:when>
			<xsl:otherwise># OCTEON_ETHERNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCTEON_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCTEON_USB=y</xsl:when>
			<xsl:when test=". = 'module'">OCTEON_USB=m</xsl:when>
			<xsl:otherwise># OCTEON_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT6655">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT6655=y</xsl:when>
			<xsl:when test=". = 'module'">VT6655=m</xsl:when>
			<xsl:otherwise># VT6655 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT6656">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT6656=y</xsl:when>
			<xsl:when test=". = 'module'">VT6656=m</xsl:when>
			<xsl:otherwise># VT6656 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16201">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16201=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16201=m</xsl:when>
			<xsl:otherwise># ADIS16201 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16203">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16203=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16203=m</xsl:when>
			<xsl:otherwise># ADIS16203 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16209">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16209=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16209=m</xsl:when>
			<xsl:otherwise># ADIS16209 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16240">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16240=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16240=m</xsl:when>
			<xsl:otherwise># ADIS16240 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SCA3000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SCA3000=y</xsl:when>
			<xsl:when test=". = 'module'">SCA3000=m</xsl:when>
			<xsl:otherwise># SCA3000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7606">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7606=y</xsl:when>
			<xsl:when test=". = 'module'">AD7606=m</xsl:when>
			<xsl:otherwise># AD7606 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7606_IFACE_PARALLEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7606_IFACE_PARALLEL=y</xsl:when>
			<xsl:when test=". = 'module'">AD7606_IFACE_PARALLEL=m</xsl:when>
			<xsl:otherwise># AD7606_IFACE_PARALLEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7606_IFACE_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7606_IFACE_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">AD7606_IFACE_SPI=m</xsl:when>
			<xsl:otherwise># AD7606_IFACE_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7780=y</xsl:when>
			<xsl:when test=". = 'module'">AD7780=m</xsl:when>
			<xsl:otherwise># AD7780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7816">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7816=y</xsl:when>
			<xsl:when test=". = 'module'">AD7816=m</xsl:when>
			<xsl:otherwise># AD7816 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7192">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7192=y</xsl:when>
			<xsl:when test=". = 'module'">AD7192=m</xsl:when>
			<xsl:otherwise># AD7192 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7280">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7280=y</xsl:when>
			<xsl:when test=". = 'module'">AD7280=m</xsl:when>
			<xsl:otherwise># AD7280 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC32XX_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC32XX_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">LPC32XX_ADC=m</xsl:when>
			<xsl:otherwise># LPC32XX_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAR_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAR_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAR_ADC=m</xsl:when>
			<xsl:otherwise># SPEAR_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADT7316">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADT7316=y</xsl:when>
			<xsl:when test=". = 'module'">ADT7316=m</xsl:when>
			<xsl:otherwise># ADT7316 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADT7316_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADT7316_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">ADT7316_SPI=m</xsl:when>
			<xsl:otherwise># ADT7316_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADT7316_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADT7316_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">ADT7316_I2C=m</xsl:when>
			<xsl:otherwise># ADT7316_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7150">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7150=y</xsl:when>
			<xsl:when test=". = 'module'">AD7150=m</xsl:when>
			<xsl:otherwise># AD7150 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7152">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7152=y</xsl:when>
			<xsl:when test=". = 'module'">AD7152=m</xsl:when>
			<xsl:otherwise># AD7152 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7746">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7746=y</xsl:when>
			<xsl:when test=". = 'module'">AD7746=m</xsl:when>
			<xsl:otherwise># AD7746 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD9832">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD9832=y</xsl:when>
			<xsl:when test=". = 'module'">AD9832=m</xsl:when>
			<xsl:otherwise># AD9832 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD9834">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD9834=y</xsl:when>
			<xsl:when test=". = 'module'">AD9834=m</xsl:when>
			<xsl:otherwise># AD9834 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16060">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16060=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16060=m</xsl:when>
			<xsl:otherwise># ADIS16060 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5933">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5933=y</xsl:when>
			<xsl:when test=". = 'module'">AD5933=m</xsl:when>
			<xsl:otherwise># AD5933 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ISL29018">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ISL29018=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ISL29018=m</xsl:when>
			<xsl:otherwise># SENSORS_ISL29018 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_ISL29028">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_ISL29028=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_ISL29028=m</xsl:when>
			<xsl:otherwise># SENSORS_ISL29028 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSL2583">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSL2583=y</xsl:when>
			<xsl:when test=". = 'module'">TSL2583=m</xsl:when>
			<xsl:otherwise># TSL2583 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSL2x7x">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSL2x7x=y</xsl:when>
			<xsl:when test=". = 'module'">TSL2x7x=m</xsl:when>
			<xsl:otherwise># TSL2x7x is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7753">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7753=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7753=m</xsl:when>
			<xsl:otherwise># ADE7753 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7754">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7754=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7754=m</xsl:when>
			<xsl:otherwise># ADE7754 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7758">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7758=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7758=m</xsl:when>
			<xsl:otherwise># ADE7758 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7759">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7759=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7759=m</xsl:when>
			<xsl:otherwise># ADE7759 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7854">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7854=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7854=m</xsl:when>
			<xsl:otherwise># ADE7854 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7854_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7854_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7854_I2C=m</xsl:when>
			<xsl:otherwise># ADE7854_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADE7854_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADE7854_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">ADE7854_SPI=m</xsl:when>
			<xsl:otherwise># ADE7854_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD2S90">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD2S90=y</xsl:when>
			<xsl:when test=". = 'module'">AD2S90=m</xsl:when>
			<xsl:otherwise># AD2S90 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD2S1200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD2S1200=y</xsl:when>
			<xsl:when test=". = 'module'">AD2S1200=m</xsl:when>
			<xsl:otherwise># AD2S1200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD2S1210">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD2S1210=y</xsl:when>
			<xsl:when test=". = 'module'">AD2S1210=m</xsl:when>
			<xsl:otherwise># AD2S1210 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_BFIN_TMR_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_BFIN_TMR_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_BFIN_TMR_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_BFIN_TMR_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_SM750">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_SM750=y</xsl:when>
			<xsl:when test=". = 'module'">FB_SM750=m</xsl:when>
			<xsl:otherwise># FB_SM750 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_XGI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_XGI=y</xsl:when>
			<xsl:when test=". = 'module'">FB_XGI=m</xsl:when>
			<xsl:otherwise># FB_XGI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_EMXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_EMXX=y</xsl:when>
			<xsl:when test=". = 'module'">USB_EMXX=m</xsl:when>
			<xsl:otherwise># USB_EMXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP=m</xsl:when>
			<xsl:otherwise># SPEAKUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_ACNTSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_ACNTSA=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_ACNTSA=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_ACNTSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_ACNTPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_ACNTPC=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_ACNTPC=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_ACNTPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_APOLLO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_APOLLO=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_APOLLO=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_APOLLO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_AUDPTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_AUDPTR=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_AUDPTR=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_AUDPTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_BNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_BNS=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_BNS=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_BNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPEAKUP_SYNTH_DECTLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPEAKUP_SYNTH_DECTLK=y</xsl:when>
			<xsl:when test=". = 'module'">SPEAKUP_SYNTH_DECTLK=m</xsl:when>
			<xsl:otherwise># SPEAKUP_SYNTH_DECTLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MFD_NVEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MFD_NVEC=y</xsl:when>
			<xsl:when test=". = 'module'">MFD_NVEC=m</xsl:when>
			<xsl:otherwise># MFD_NVEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYBOARD_NVEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYBOARD_NVEC=y</xsl:when>
			<xsl:when test=". = 'module'">KEYBOARD_NVEC=m</xsl:when>
			<xsl:otherwise># KEYBOARD_NVEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIO_NVEC_PS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIO_NVEC_PS2=y</xsl:when>
			<xsl:when test=". = 'module'">SERIO_NVEC_PS2=m</xsl:when>
			<xsl:otherwise># SERIO_NVEC_PS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVEC_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVEC_POWER=y</xsl:when>
			<xsl:when test=". = 'module'">NVEC_POWER=m</xsl:when>
			<xsl:otherwise># NVEC_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVEC_PAZ00">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVEC_PAZ00=y</xsl:when>
			<xsl:when test=". = 'module'">NVEC_PAZ00=m</xsl:when>
			<xsl:otherwise># NVEC_PAZ00 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STAGING_MEDIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STAGING_MEDIA=y</xsl:when>
			<xsl:otherwise># STAGING_MEDIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I2C_BCM2048">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I2C_BCM2048=y</xsl:when>
			<xsl:when test=". = 'module'">I2C_BCM2048=m</xsl:when>
			<xsl:otherwise># I2C_BCM2048 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CEC=y</xsl:when>
			<xsl:otherwise># MEDIA_CEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEDIA_CEC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEDIA_CEC_DEBUG=y</xsl:when>
			<xsl:otherwise># MEDIA_CEC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DVB_CXD2099">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DVB_CXD2099=y</xsl:when>
			<xsl:when test=". = 'module'">DVB_CXD2099=m</xsl:when>
			<xsl:otherwise># DVB_CXD2099 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_DM365_VPFE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_DM365_VPFE=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_DM365_VPFE=m</xsl:when>
			<xsl:otherwise># VIDEO_DM365_VPFE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_OMAP4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_OMAP4=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_OMAP4=m</xsl:when>
			<xsl:otherwise># VIDEO_OMAP4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="USB_PULSE8_CEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">USB_PULSE8_CEC=y</xsl:when>
			<xsl:when test=". = 'module'">USB_PULSE8_CEC=m</xsl:when>
			<xsl:otherwise># USB_PULSE8_CEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_TW686X_KH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_TW686X_KH=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_TW686X_KH=m</xsl:when>
			<xsl:otherwise># VIDEO_TW686X_KH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIDEO_SAMSUNG_S5P_CEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIDEO_SAMSUNG_S5P_CEC=y</xsl:when>
			<xsl:when test=". = 'module'">VIDEO_SAMSUNG_S5P_CEC=m</xsl:when>
			<xsl:otherwise># VIDEO_SAMSUNG_S5P_CEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_STAGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_STAGING=y</xsl:when>
			<xsl:otherwise># LIRC_STAGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_BT829">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_BT829=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_BT829=m</xsl:when>
			<xsl:otherwise># LIRC_BT829 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_IMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_IMON=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_IMON=m</xsl:when>
			<xsl:otherwise># LIRC_IMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_PARALLEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_PARALLEL=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_PARALLEL=m</xsl:when>
			<xsl:otherwise># LIRC_PARALLEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_SASEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_SASEM=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_SASEM=m</xsl:when>
			<xsl:otherwise># LIRC_SASEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_SERIAL=m</xsl:when>
			<xsl:otherwise># LIRC_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_SERIAL_TRANSMITTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_SERIAL_TRANSMITTER=y</xsl:when>
			<xsl:otherwise># LIRC_SERIAL_TRANSMITTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_SIR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_SIR=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_SIR=m</xsl:when>
			<xsl:otherwise># LIRC_SIR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIRC_ZILOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIRC_ZILOG=y</xsl:when>
			<xsl:when test=". = 'module'">LIRC_ZILOG=m</xsl:when>
			<xsl:otherwise># LIRC_ZILOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASHMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASHMEM=y</xsl:when>
			<xsl:otherwise># ASHMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANDROID_LOW_MEMORY_KILLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANDROID_LOW_MEMORY_KILLER=y</xsl:when>
			<xsl:otherwise># ANDROID_LOW_MEMORY_KILLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SW_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SW_SYNC=y</xsl:when>
			<xsl:otherwise># SW_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ION=y</xsl:when>
			<xsl:otherwise># ION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ION_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ION_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">ION_TEST=m</xsl:when>
			<xsl:otherwise># ION_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ION_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ION_DUMMY=y</xsl:when>
			<xsl:otherwise># ION_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ION_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ION_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">ION_TEGRA=m</xsl:when>
			<xsl:otherwise># ION_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ION_HISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ION_HISI=y</xsl:when>
			<xsl:when test=". = 'module'">ION_HISI=m</xsl:when>
			<xsl:otherwise># ION_HISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HI6220_ION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HI6220_ION=y</xsl:when>
			<xsl:otherwise># HI6220_ION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STAGING_BOARD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STAGING_BOARD=y</xsl:when>
			<xsl:otherwise># STAGING_BOARD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LTE_GDM724X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LTE_GDM724X=y</xsl:when>
			<xsl:when test=". = 'module'">LTE_GDM724X=m</xsl:when>
			<xsl:otherwise># LTE_GDM724X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIREWIRE_SERIAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIREWIRE_SERIAL=y</xsl:when>
			<xsl:when test=". = 'module'">FIREWIRE_SERIAL=m</xsl:when>
			<xsl:otherwise># FIREWIRE_SERIAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FWTTY_MAX_TOTAL_PORTS">
		FWTTY_MAX_TOTAL_PORTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FWTTY_MAX_CARD_PORTS">
		FWTTY_MAX_CARD_PORTS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="GOLDFISH_AUDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH_AUDIO=y</xsl:when>
			<xsl:when test=". = 'module'">GOLDFISH_AUDIO=m</xsl:when>
			<xsl:otherwise># GOLDFISH_AUDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_GOLDFISH_NAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_GOLDFISH_NAND=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_GOLDFISH_NAND=m</xsl:when>
			<xsl:otherwise># MTD_GOLDFISH_NAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETLOGIC_XLR_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETLOGIC_XLR_NET=y</xsl:when>
			<xsl:when test=". = 'module'">NETLOGIC_XLR_NET=m</xsl:when>
			<xsl:otherwise># NETLOGIC_XLR_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SPINAND_MT29F">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SPINAND_MT29F=y</xsl:when>
			<xsl:when test=". = 'module'">MTD_SPINAND_MT29F=m</xsl:when>
			<xsl:otherwise># MTD_SPINAND_MT29F is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTD_SPINAND_ONDIEECC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTD_SPINAND_ONDIEECC=y</xsl:when>
			<xsl:otherwise># MTD_SPINAND_ONDIEECC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LNET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LNET=y</xsl:when>
			<xsl:when test=". = 'module'">LNET=m</xsl:when>
			<xsl:otherwise># LNET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LNET_MAX_PAYLOAD">
		LNET_MAX_PAYLOAD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="LNET_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LNET_SELFTEST=y</xsl:when>
			<xsl:when test=". = 'module'">LNET_SELFTEST=m</xsl:when>
			<xsl:otherwise># LNET_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LNET_XPRT_IB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LNET_XPRT_IB=y</xsl:when>
			<xsl:when test=". = 'module'">LNET_XPRT_IB=m</xsl:when>
			<xsl:otherwise># LNET_XPRT_IB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LUSTRE_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LUSTRE_FS=y</xsl:when>
			<xsl:when test=". = 'module'">LUSTRE_FS=m</xsl:when>
			<xsl:otherwise># LUSTRE_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LUSTRE_OBD_MAX_IOCTL_BUFFER">
		LUSTRE_OBD_MAX_IOCTL_BUFFER=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="LUSTRE_DEBUG_EXPENSIVE_CHECK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LUSTRE_DEBUG_EXPENSIVE_CHECK=y</xsl:when>
			<xsl:otherwise># LUSTRE_DEBUG_EXPENSIVE_CHECK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LUSTRE_TRANSLATE_ERRNOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LUSTRE_TRANSLATE_ERRNOS=y</xsl:when>
			<xsl:otherwise># LUSTRE_TRANSLATE_ERRNOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DGNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DGNC=y</xsl:when>
			<xsl:when test=". = 'module'">DGNC=m</xsl:when>
			<xsl:otherwise># DGNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GS_FPGABOOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GS_FPGABOOT=y</xsl:when>
			<xsl:when test=". = 'module'">GS_FPGABOOT=m</xsl:when>
			<xsl:otherwise># GS_FPGABOOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SKEIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SKEIN=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SKEIN=m</xsl:when>
			<xsl:otherwise># CRYPTO_SKEIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNISYSSPAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNISYSSPAR=y</xsl:when>
			<xsl:otherwise># UNISYSSPAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNISYS_VISORBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNISYS_VISORBUS=y</xsl:when>
			<xsl:when test=". = 'module'">UNISYS_VISORBUS=m</xsl:when>
			<xsl:otherwise># UNISYS_VISORBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNISYS_VISORNIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNISYS_VISORNIC=y</xsl:when>
			<xsl:when test=". = 'module'">UNISYS_VISORNIC=m</xsl:when>
			<xsl:otherwise># UNISYS_VISORNIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNISYS_VISORINPUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNISYS_VISORINPUT=y</xsl:when>
			<xsl:when test=". = 'module'">UNISYS_VISORINPUT=m</xsl:when>
			<xsl:otherwise># UNISYS_VISORINPUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UNISYS_VISORHBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UNISYS_VISORHBA=y</xsl:when>
			<xsl:when test=". = 'module'">UNISYS_VISORHBA=m</xsl:when>
			<xsl:otherwise># UNISYS_VISORHBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_XLNX_CLKWZRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_XLNX_CLKWZRD=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_XLNX_CLKWZRD=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_XLNX_CLKWZRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT=m</xsl:when>
			<xsl:otherwise># FB_TFT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_AGM1264K_FL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_AGM1264K_FL=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_AGM1264K_FL=m</xsl:when>
			<xsl:otherwise># FB_TFT_AGM1264K_FL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_BD663474">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_BD663474=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_BD663474=m</xsl:when>
			<xsl:otherwise># FB_TFT_BD663474 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_HX8340BN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_HX8340BN=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_HX8340BN=m</xsl:when>
			<xsl:otherwise># FB_TFT_HX8340BN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_HX8347D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_HX8347D=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_HX8347D=m</xsl:when>
			<xsl:otherwise># FB_TFT_HX8347D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_HX8353D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_HX8353D=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_HX8353D=m</xsl:when>
			<xsl:otherwise># FB_TFT_HX8353D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_HX8357D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_HX8357D=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_HX8357D=m</xsl:when>
			<xsl:otherwise># FB_TFT_HX8357D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9163">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9163=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9163=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9163 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9320=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9320=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9325">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9325=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9325=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9325 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9340">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9340=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9340=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9340 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9341">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9341=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9341=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9341 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9481">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9481=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9481=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9481 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ILI9486">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ILI9486=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ILI9486=m</xsl:when>
			<xsl:otherwise># FB_TFT_ILI9486 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_PCD8544">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_PCD8544=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_PCD8544=m</xsl:when>
			<xsl:otherwise># FB_TFT_PCD8544 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_RA8875">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_RA8875=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_RA8875=m</xsl:when>
			<xsl:otherwise># FB_TFT_RA8875 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_S6D02A1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_S6D02A1=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_S6D02A1=m</xsl:when>
			<xsl:otherwise># FB_TFT_S6D02A1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_S6D1121">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_S6D1121=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_S6D1121=m</xsl:when>
			<xsl:otherwise># FB_TFT_S6D1121 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1289">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1289=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1289=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1289 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1305">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1305=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1305=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1305 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1306">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1306=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1306=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1306 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1325">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1325=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1325=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1325 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1331">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1331=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1331=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1331 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_SSD1351">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_SSD1351=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_SSD1351=m</xsl:when>
			<xsl:otherwise># FB_TFT_SSD1351 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ST7735R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ST7735R=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ST7735R=m</xsl:when>
			<xsl:otherwise># FB_TFT_ST7735R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_ST7789V">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_ST7789V=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_ST7789V=m</xsl:when>
			<xsl:otherwise># FB_TFT_ST7789V is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_TINYLCD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_TINYLCD=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_TINYLCD=m</xsl:when>
			<xsl:otherwise># FB_TFT_TINYLCD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_TLS8204">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_TLS8204=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_TLS8204=m</xsl:when>
			<xsl:otherwise># FB_TFT_TLS8204 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_UC1611">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_UC1611=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_UC1611=m</xsl:when>
			<xsl:otherwise># FB_TFT_UC1611 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_UC1701">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_UC1701=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_UC1701=m</xsl:when>
			<xsl:otherwise># FB_TFT_UC1701 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_UPD161704">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_UPD161704=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_UPD161704=m</xsl:when>
			<xsl:otherwise># FB_TFT_UPD161704 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_WATTEROTT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_WATTEROTT=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_WATTEROTT=m</xsl:when>
			<xsl:otherwise># FB_TFT_WATTEROTT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_FLEX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_FLEX=y</xsl:when>
			<xsl:when test=". = 'module'">FB_FLEX=m</xsl:when>
			<xsl:otherwise># FB_FLEX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FB_TFT_FBTFT_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FB_TFT_FBTFT_DEVICE=y</xsl:when>
			<xsl:when test=". = 'module'">FB_TFT_FBTFT_DEVICE=m</xsl:when>
			<xsl:otherwise># FB_TFT_FBTFT_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_MC_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_MC_BUS=y</xsl:when>
			<xsl:otherwise># FSL_MC_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WILC1000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WILC1000=y</xsl:when>
			<xsl:when test=". = 'module'">WILC1000=m</xsl:when>
			<xsl:otherwise># WILC1000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WILC1000_SDIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WILC1000_SDIO=y</xsl:when>
			<xsl:when test=". = 'module'">WILC1000_SDIO=m</xsl:when>
			<xsl:otherwise># WILC1000_SDIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WILC1000_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WILC1000_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">WILC1000_SPI=m</xsl:when>
			<xsl:otherwise># WILC1000_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WILC1000_HW_OOB_INTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WILC1000_HW_OOB_INTR=y</xsl:when>
			<xsl:otherwise># WILC1000_HW_OOB_INTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOST=y</xsl:when>
			<xsl:when test=". = 'module'">MOST=m</xsl:when>
			<xsl:otherwise># MOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOSTCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOSTCORE=y</xsl:when>
			<xsl:when test=". = 'module'">MOSTCORE=m</xsl:when>
			<xsl:otherwise># MOSTCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIM_CDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIM_CDEV=y</xsl:when>
			<xsl:when test=". = 'module'">AIM_CDEV=m</xsl:when>
			<xsl:otherwise># AIM_CDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIM_NETWORK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIM_NETWORK=y</xsl:when>
			<xsl:when test=". = 'module'">AIM_NETWORK=m</xsl:when>
			<xsl:otherwise># AIM_NETWORK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIM_SOUND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIM_SOUND=y</xsl:when>
			<xsl:when test=". = 'module'">AIM_SOUND=m</xsl:when>
			<xsl:otherwise># AIM_SOUND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AIM_V4L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AIM_V4L2=y</xsl:when>
			<xsl:when test=". = 'module'">AIM_V4L2=m</xsl:when>
			<xsl:otherwise># AIM_V4L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDM_DIM2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDM_DIM2=y</xsl:when>
			<xsl:when test=". = 'module'">HDM_DIM2=m</xsl:when>
			<xsl:otherwise># HDM_DIM2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDM_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDM_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">HDM_I2C=m</xsl:when>
			<xsl:otherwise># HDM_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDM_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDM_USB=y</xsl:when>
			<xsl:when test=". = 'module'">HDM_USB=m</xsl:when>
			<xsl:otherwise># HDM_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_ICN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_ICN=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_ICN=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_ICN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_PCBIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_PCBIT=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_PCBIT=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_PCBIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISDN_DRV_ACT2000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISDN_DRV_ACT2000=y</xsl:when>
			<xsl:when test=". = 'module'">ISDN_DRV_ACT2000=m</xsl:when>
			<xsl:otherwise># ISDN_DRV_ACT2000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KS7010">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KS7010=y</xsl:when>
			<xsl:when test=". = 'module'">KS7010=m</xsl:when>
			<xsl:otherwise># KS7010 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PLATFORM_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PLATFORM_DEVICES=y</xsl:when>
			<xsl:otherwise># X86_PLATFORM_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACER_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACER_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">ACER_WMI=m</xsl:when>
			<xsl:otherwise># ACER_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACERHDF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACERHDF=y</xsl:when>
			<xsl:when test=". = 'module'">ACERHDF=m</xsl:when>
			<xsl:otherwise># ACERHDF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALIENWARE_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALIENWARE_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">ALIENWARE_WMI=m</xsl:when>
			<xsl:otherwise># ALIENWARE_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASUS_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASUS_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">ASUS_LAPTOP=m</xsl:when>
			<xsl:otherwise># ASUS_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_SMBIOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_SMBIOS=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_SMBIOS=m</xsl:when>
			<xsl:otherwise># DELL_SMBIOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_LAPTOP=m</xsl:when>
			<xsl:otherwise># DELL_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_WMI=m</xsl:when>
			<xsl:otherwise># DELL_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_WMI_AIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_WMI_AIO=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_WMI_AIO=m</xsl:when>
			<xsl:otherwise># DELL_WMI_AIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_SMO8800">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_SMO8800=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_SMO8800=m</xsl:when>
			<xsl:otherwise># DELL_SMO8800 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_RBTN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_RBTN=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_RBTN=m</xsl:when>
			<xsl:otherwise># DELL_RBTN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUJITSU_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUJITSU_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">FUJITSU_LAPTOP=m</xsl:when>
			<xsl:otherwise># FUJITSU_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUJITSU_LAPTOP_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUJITSU_LAPTOP_DEBUG=y</xsl:when>
			<xsl:otherwise># FUJITSU_LAPTOP_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUJITSU_TABLET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUJITSU_TABLET=y</xsl:when>
			<xsl:when test=". = 'module'">FUJITSU_TABLET=m</xsl:when>
			<xsl:otherwise># FUJITSU_TABLET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMILO_RFKILL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMILO_RFKILL=y</xsl:when>
			<xsl:when test=". = 'module'">AMILO_RFKILL=m</xsl:when>
			<xsl:otherwise># AMILO_RFKILL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TC1100_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TC1100_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">TC1100_WMI=m</xsl:when>
			<xsl:otherwise># TC1100_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_ACCEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_ACCEL=y</xsl:when>
			<xsl:when test=". = 'module'">HP_ACCEL=m</xsl:when>
			<xsl:otherwise># HP_ACCEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_WIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_WIRELESS=y</xsl:when>
			<xsl:when test=". = 'module'">HP_WIRELESS=m</xsl:when>
			<xsl:otherwise># HP_WIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">HP_WMI=m</xsl:when>
			<xsl:otherwise># HP_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSI_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSI_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">MSI_LAPTOP=m</xsl:when>
			<xsl:otherwise># MSI_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PANASONIC_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PANASONIC_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">PANASONIC_LAPTOP=m</xsl:when>
			<xsl:otherwise># PANASONIC_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMPAL_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMPAL_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">COMPAL_LAPTOP=m</xsl:when>
			<xsl:otherwise># COMPAL_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SONY_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SONY_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">SONY_LAPTOP=m</xsl:when>
			<xsl:otherwise># SONY_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SONYPI_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SONYPI_COMPAT=y</xsl:when>
			<xsl:otherwise># SONYPI_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IDEAPAD_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IDEAPAD_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">IDEAPAD_LAPTOP=m</xsl:when>
			<xsl:otherwise># IDEAPAD_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI=y</xsl:when>
			<xsl:when test=". = 'module'">THINKPAD_ACPI=m</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_ALSA_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_ALSA_SUPPORT=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_ALSA_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_DEBUGFACILITIES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_DEBUGFACILITIES=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_DEBUGFACILITIES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_DEBUG=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_UNSAFE_LEDS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_UNSAFE_LEDS=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_UNSAFE_LEDS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_VIDEO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_VIDEO=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_VIDEO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THINKPAD_ACPI_HOTKEY_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THINKPAD_ACPI_HOTKEY_POLL=y</xsl:when>
			<xsl:otherwise># THINKPAD_ACPI_HOTKEY_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_HDAPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_HDAPS=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_HDAPS=m</xsl:when>
			<xsl:otherwise># SENSORS_HDAPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MENLOW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MENLOW=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MENLOW=m</xsl:when>
			<xsl:otherwise># INTEL_MENLOW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEEPC_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEEPC_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">EEEPC_LAPTOP=m</xsl:when>
			<xsl:otherwise># EEEPC_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASUS_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASUS_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">ASUS_WMI=m</xsl:when>
			<xsl:otherwise># ASUS_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASUS_NB_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASUS_NB_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">ASUS_NB_WMI=m</xsl:when>
			<xsl:otherwise># ASUS_NB_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EEEPC_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EEEPC_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">EEEPC_WMI=m</xsl:when>
			<xsl:otherwise># EEEPC_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASUS_WIRELESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASUS_WIRELESS=y</xsl:when>
			<xsl:when test=". = 'module'">ASUS_WIRELESS=m</xsl:when>
			<xsl:otherwise># ASUS_WIRELESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_WMI=m</xsl:when>
			<xsl:otherwise># ACPI_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSI_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSI_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">MSI_WMI=m</xsl:when>
			<xsl:otherwise># MSI_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOPSTAR_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOPSTAR_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">TOPSTAR_LAPTOP=m</xsl:when>
			<xsl:otherwise># TOPSTAR_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_TOSHIBA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_TOSHIBA=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_TOSHIBA=m</xsl:when>
			<xsl:otherwise># ACPI_TOSHIBA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOSHIBA_BT_RFKILL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOSHIBA_BT_RFKILL=y</xsl:when>
			<xsl:when test=". = 'module'">TOSHIBA_BT_RFKILL=m</xsl:when>
			<xsl:otherwise># TOSHIBA_BT_RFKILL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOSHIBA_HAPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOSHIBA_HAPS=y</xsl:when>
			<xsl:when test=". = 'module'">TOSHIBA_HAPS=m</xsl:when>
			<xsl:otherwise># TOSHIBA_HAPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TOSHIBA_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TOSHIBA_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">TOSHIBA_WMI=m</xsl:when>
			<xsl:otherwise># TOSHIBA_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_CMPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_CMPC=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_CMPC=m</xsl:when>
			<xsl:otherwise># ACPI_CMPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_HID_EVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_HID_EVENT=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_HID_EVENT=m</xsl:when>
			<xsl:otherwise># INTEL_HID_EVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_VBTN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_VBTN=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_VBTN=m</xsl:when>
			<xsl:otherwise># INTEL_VBTN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SCU_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SCU_IPC=y</xsl:when>
			<xsl:otherwise># INTEL_SCU_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SCU_IPC_UTIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SCU_IPC_UTIL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_SCU_IPC_UTIL=m</xsl:when>
			<xsl:otherwise># INTEL_SCU_IPC_UTIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GPIO_INTEL_PMIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GPIO_INTEL_PMIC=y</xsl:when>
			<xsl:otherwise># GPIO_INTEL_PMIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MID_POWER_BUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MID_POWER_BUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MID_POWER_BUTTON=m</xsl:when>
			<xsl:otherwise># INTEL_MID_POWER_BUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_MFLD_THERMAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_MFLD_THERMAL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_MFLD_THERMAL=m</xsl:when>
			<xsl:otherwise># INTEL_MFLD_THERMAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IPS=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_IPS=m</xsl:when>
			<xsl:otherwise># INTEL_IPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IMR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IMR=y</xsl:when>
			<xsl:otherwise># INTEL_IMR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_PMC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_PMC_CORE=y</xsl:when>
			<xsl:otherwise># INTEL_PMC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IBM_RTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IBM_RTL=y</xsl:when>
			<xsl:when test=". = 'module'">IBM_RTL=m</xsl:when>
			<xsl:otherwise># IBM_RTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XO1_RFKILL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XO1_RFKILL=y</xsl:when>
			<xsl:when test=". = 'module'">XO1_RFKILL=m</xsl:when>
			<xsl:otherwise># XO1_RFKILL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XO15_EBOOK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XO15_EBOOK=y</xsl:when>
			<xsl:when test=". = 'module'">XO15_EBOOK=m</xsl:when>
			<xsl:otherwise># XO15_EBOOK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SAMSUNG_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SAMSUNG_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">SAMSUNG_LAPTOP=m</xsl:when>
			<xsl:otherwise># SAMSUNG_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXM_WMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXM_WMI=y</xsl:when>
			<xsl:when test=". = 'module'">MXM_WMI=m</xsl:when>
			<xsl:otherwise># MXM_WMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_OAKTRAIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_OAKTRAIL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_OAKTRAIL=m</xsl:when>
			<xsl:otherwise># INTEL_OAKTRAIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SAMSUNG_Q10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SAMSUNG_Q10=y</xsl:when>
			<xsl:when test=". = 'module'">SAMSUNG_Q10=m</xsl:when>
			<xsl:otherwise># SAMSUNG_Q10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APPLE_GMUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APPLE_GMUX=y</xsl:when>
			<xsl:when test=". = 'module'">APPLE_GMUX=m</xsl:when>
			<xsl:otherwise># APPLE_GMUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_RST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_RST=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_RST=m</xsl:when>
			<xsl:otherwise># INTEL_RST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_SMARTCONNECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_SMARTCONNECT=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_SMARTCONNECT=m</xsl:when>
			<xsl:otherwise># INTEL_SMARTCONNECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PVPANIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PVPANIC=y</xsl:when>
			<xsl:when test=". = 'module'">PVPANIC=m</xsl:when>
			<xsl:otherwise># PVPANIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_PMC_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_PMC_IPC=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_PMC_IPC=m</xsl:when>
			<xsl:otherwise># INTEL_PMC_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SURFACE_PRO3_BUTTON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SURFACE_PRO3_BUTTON=y</xsl:when>
			<xsl:when test=". = 'module'">SURFACE_PRO3_BUTTON=m</xsl:when>
			<xsl:otherwise># SURFACE_PRO3_BUTTON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_PUNIT_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_PUNIT_IPC=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_PUNIT_IPC=m</xsl:when>
			<xsl:otherwise># INTEL_PUNIT_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TELEMETRY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TELEMETRY=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TELEMETRY=m</xsl:when>
			<xsl:otherwise># INTEL_TELEMETRY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_PLATFORM_DEVICES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_PLATFORM_DEVICES=y</xsl:when>
			<xsl:otherwise># MIPS_PLATFORM_DEVICES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_HWMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_HWMON=y</xsl:when>
			<xsl:when test=". = 'module'">CPU_HWMON=m</xsl:when>
			<xsl:otherwise># CPU_HWMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOLDFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH=y</xsl:when>
			<xsl:otherwise># GOLDFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOLDFISH_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH_BUS=y</xsl:when>
			<xsl:otherwise># GOLDFISH_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOLDFISH_PIPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOLDFISH_PIPE=y</xsl:when>
			<xsl:when test=". = 'module'">GOLDFISH_PIPE=m</xsl:when>
			<xsl:otherwise># GOLDFISH_PIPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHROME_PLATFORMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHROME_PLATFORMS=y</xsl:when>
			<xsl:otherwise># CHROME_PLATFORMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHROMEOS_LAPTOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHROMEOS_LAPTOP=y</xsl:when>
			<xsl:when test=". = 'module'">CHROMEOS_LAPTOP=m</xsl:when>
			<xsl:otherwise># CHROMEOS_LAPTOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHROMEOS_PSTORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHROMEOS_PSTORE=y</xsl:when>
			<xsl:when test=". = 'module'">CHROMEOS_PSTORE=m</xsl:when>
			<xsl:otherwise># CHROMEOS_PSTORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CROS_EC_CHARDEV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CROS_EC_CHARDEV=y</xsl:when>
			<xsl:when test=". = 'module'">CROS_EC_CHARDEV=m</xsl:when>
			<xsl:otherwise># CROS_EC_CHARDEV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CROS_EC_LPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CROS_EC_LPC=y</xsl:when>
			<xsl:when test=". = 'module'">CROS_EC_LPC=m</xsl:when>
			<xsl:otherwise># CROS_EC_LPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CROS_EC_PROTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CROS_EC_PROTO=y</xsl:when>
			<xsl:otherwise># CROS_EC_PROTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CROS_KBD_LED_BACKLIGHT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CROS_KBD_LED_BACKLIGHT=y</xsl:when>
			<xsl:when test=". = 'module'">CROS_KBD_LED_BACKLIGHT=m</xsl:when>
			<xsl:otherwise># CROS_KBD_LED_BACKLIGHT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKDEV_LOOKUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKDEV_LOOKUP=y</xsl:when>
			<xsl:otherwise># CLKDEV_LOOKUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_CLK_PREPARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_CLK_PREPARE=y</xsl:when>
			<xsl:otherwise># HAVE_CLK_PREPARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK=y</xsl:when>
			<xsl:otherwise># COMMON_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_WM831X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_WM831X=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_WM831X=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_WM831X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_VERSATILE=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_SP810">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_SP810=y</xsl:when>
			<xsl:otherwise># CLK_SP810 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_VEXPRESS_OSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_VEXPRESS_OSC=y</xsl:when>
			<xsl:otherwise># CLK_VEXPRESS_OSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_MAX_GEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_MAX_GEN=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_MAX_GEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_MAX77686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_MAX77686=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_MAX77686=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_MAX77686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_MAX77802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_MAX77802=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_MAX77802=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_MAX77802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_RK808">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_RK808=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_RK808=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_RK808 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_SCPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_SCPI=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_SCPI=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_SCPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_SI5351">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_SI5351=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_SI5351=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_SI5351 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_SI514">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_SI514=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_SI514=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_SI514 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_SI570">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_SI570=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_SI570=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_SI570 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_CDCE706">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_CDCE706=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_CDCE706=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_CDCE706 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_CDCE925">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_CDCE925=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_CDCE925=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_CDCE925 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_CS2000_CP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_CS2000_CP=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_CS2000_CP=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_CS2000_CP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_S2MPS11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_S2MPS11=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_S2MPS11=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_S2MPS11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_TWL6040">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_TWL6040=y</xsl:when>
			<xsl:when test=". = 'module'">CLK_TWL6040=m</xsl:when>
			<xsl:otherwise># CLK_TWL6040 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_AXI_CLKGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_AXI_CLKGEN=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_AXI_CLKGEN=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_AXI_CLKGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_QORIQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_QORIQ=y</xsl:when>
			<xsl:otherwise># CLK_QORIQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_XGENE=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_KEYSTONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_KEYSTONE=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_KEYSTONE=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_KEYSTONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_NXP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_NXP=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_NXP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_PALMAS=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_PALMAS=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_PWM=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_PWM=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_PXA=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_PIC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_PIC32=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_PIC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_OXNAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_OXNAS=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_OXNAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_BCM_63XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_BCM_63XX=y</xsl:when>
			<xsl:otherwise># CLK_BCM_63XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_BCM_KONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_BCM_KONA=y</xsl:when>
			<xsl:otherwise># CLK_BCM_KONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_IPROC=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_HI3519">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_HI3519=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_HI3519=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_HI3519 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_HI6220">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_HI6220=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_HI6220 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RESET_HISI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RESET_HISI=y</xsl:when>
			<xsl:otherwise># RESET_HISI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STUB_CLK_HI6220">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STUB_CLK_HI6220=y</xsl:when>
			<xsl:otherwise># STUB_CLK_HI6220 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_AMLOGIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_AMLOGIC=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_AMLOGIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_MESON8B">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_MESON8B=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_MESON8B is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_GXBB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_GXBB=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_GXBB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_CLK_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_CLK_COMMON=y</xsl:when>
			<xsl:otherwise># MVEBU_CLK_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_CLK_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_CLK_CPU=y</xsl:when>
			<xsl:otherwise># MVEBU_CLK_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_CLK_COREDIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_CLK_COREDIV=y</xsl:when>
			<xsl:otherwise># MVEBU_CLK_COREDIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_370_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_370_CLK=y</xsl:when>
			<xsl:otherwise># ARMADA_370_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_375_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_375_CLK=y</xsl:when>
			<xsl:otherwise># ARMADA_375_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_38X_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_38X_CLK=y</xsl:when>
			<xsl:otherwise># ARMADA_38X_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_39X_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_39X_CLK=y</xsl:when>
			<xsl:otherwise># ARMADA_39X_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_XP_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_XP_CLK=y</xsl:when>
			<xsl:otherwise># ARMADA_XP_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_AP806_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_AP806_SYSCON=y</xsl:when>
			<xsl:otherwise># ARMADA_AP806_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_CP110_SYSCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_CP110_SYSCON=y</xsl:when>
			<xsl:otherwise># ARMADA_CP110_SYSCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DOVE_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DOVE_CLK=y</xsl:when>
			<xsl:otherwise># DOVE_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KIRKWOOD_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KIRKWOOD_CLK=y</xsl:when>
			<xsl:otherwise># KIRKWOOD_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORION_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORION_CLK=y</xsl:when>
			<xsl:otherwise># ORION_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_GDSC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_GDSC=y</xsl:when>
			<xsl:otherwise># QCOM_GDSC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_QCOM=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_QCOM=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APQ_GCC_8084">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APQ_GCC_8084=y</xsl:when>
			<xsl:when test=". = 'module'">APQ_GCC_8084=m</xsl:when>
			<xsl:otherwise># APQ_GCC_8084 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APQ_MMCC_8084">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APQ_MMCC_8084=y</xsl:when>
			<xsl:when test=". = 'module'">APQ_MMCC_8084=m</xsl:when>
			<xsl:otherwise># APQ_MMCC_8084 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPQ_GCC_4019">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPQ_GCC_4019=y</xsl:when>
			<xsl:when test=". = 'module'">IPQ_GCC_4019=m</xsl:when>
			<xsl:otherwise># IPQ_GCC_4019 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPQ_GCC_806X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPQ_GCC_806X=y</xsl:when>
			<xsl:when test=". = 'module'">IPQ_GCC_806X=m</xsl:when>
			<xsl:otherwise># IPQ_GCC_806X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPQ_LCC_806X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPQ_LCC_806X=y</xsl:when>
			<xsl:when test=". = 'module'">IPQ_LCC_806X=m</xsl:when>
			<xsl:otherwise># IPQ_LCC_806X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_GCC_8660">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_GCC_8660=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_GCC_8660=m</xsl:when>
			<xsl:otherwise># MSM_GCC_8660 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_GCC_8916">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_GCC_8916=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_GCC_8916=m</xsl:when>
			<xsl:otherwise># MSM_GCC_8916 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_GCC_8960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_GCC_8960=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_GCC_8960=m</xsl:when>
			<xsl:otherwise># MSM_GCC_8960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_LCC_8960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_LCC_8960=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_LCC_8960=m</xsl:when>
			<xsl:otherwise># MSM_LCC_8960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_MMCC_8960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_MMCC_8960=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_MMCC_8960=m</xsl:when>
			<xsl:otherwise># MSM_MMCC_8960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_GCC_8974">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_GCC_8974=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_GCC_8974=m</xsl:when>
			<xsl:otherwise># MSM_GCC_8974 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_MMCC_8974">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_MMCC_8974=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_MMCC_8974=m</xsl:when>
			<xsl:otherwise># MSM_MMCC_8974 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_GCC_8996">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_GCC_8996=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_GCC_8996=m</xsl:when>
			<xsl:otherwise># MSM_GCC_8996 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_MMCC_8996">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_MMCC_8996=y</xsl:when>
			<xsl:when test=". = 'module'">MSM_MMCC_8996=m</xsl:when>
			<xsl:otherwise># MSM_MMCC_8996 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_RENESAS_CPG_MSSR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_RENESAS_CPG_MSSR=y</xsl:when>
			<xsl:otherwise># CLK_RENESAS_CPG_MSSR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLK_RENESAS_CPG_MSTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLK_RENESAS_CPG_MSTP=y</xsl:when>
			<xsl:otherwise># CLK_RENESAS_CPG_MSTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_SAMSUNG=y</xsl:when>
			<xsl:otherwise># COMMON_CLK_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_ARM64_COMMON_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_ARM64_COMMON_CLK=y</xsl:when>
			<xsl:otherwise># EXYNOS_ARM64_COMMON_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_AUDSS_CLK_CON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_AUDSS_CLK_CON=y</xsl:when>
			<xsl:when test=". = 'module'">EXYNOS_AUDSS_CLK_CON=m</xsl:when>
			<xsl:otherwise># EXYNOS_AUDSS_CLK_CON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C2410_COMMON_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C2410_COMMON_CLK=y</xsl:when>
			<xsl:otherwise># S3C2410_COMMON_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C2410_COMMON_DCLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C2410_COMMON_DCLK=y</xsl:when>
			<xsl:otherwise># S3C2410_COMMON_DCLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C2412_COMMON_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C2412_COMMON_CLK=y</xsl:when>
			<xsl:otherwise># S3C2412_COMMON_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S3C2443_COMMON_CLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S3C2443_COMMON_CLK=y</xsl:when>
			<xsl:otherwise># S3C2443_COMMON_CLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_DIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_DIV=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_DIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_FRAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_FRAC=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_FRAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_GATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_GATE=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_GATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_MUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_MUX=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_MUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_PHASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_PHASE=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_PHASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_NK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_NK=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_NK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_NKM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_NKM=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_NKM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_NKMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_NKMP=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_NKMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_NM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_NM=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_NM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_CCU_MP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_CCU_MP=y</xsl:when>
			<xsl:otherwise># SUNXI_CCU_MP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN8I_H3_CCU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN8I_H3_CCU=y</xsl:when>
			<xsl:otherwise># SUN8I_H3_CCU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_CLK_EMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_CLK_EMC=y</xsl:when>
			<xsl:otherwise># TEGRA_CLK_EMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_CLK_TI_ADPLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_CLK_TI_ADPLL=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_CLK_TI_ADPLL=m</xsl:when>
			<xsl:otherwise># COMMON_CLK_TI_ADPLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWSPINLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWSPINLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">HWSPINLOCK=m</xsl:when>
			<xsl:otherwise># HWSPINLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWSPINLOCK_OMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWSPINLOCK_OMAP=y</xsl:when>
			<xsl:when test=". = 'module'">HWSPINLOCK_OMAP=m</xsl:when>
			<xsl:otherwise># HWSPINLOCK_OMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWSPINLOCK_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWSPINLOCK_QCOM=y</xsl:when>
			<xsl:when test=". = 'module'">HWSPINLOCK_QCOM=m</xsl:when>
			<xsl:otherwise># HWSPINLOCK_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HWSPINLOCK_SIRF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HWSPINLOCK_SIRF=y</xsl:when>
			<xsl:when test=". = 'module'">HWSPINLOCK_SIRF=m</xsl:when>
			<xsl:otherwise># HWSPINLOCK_SIRF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HSEM_U8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HSEM_U8500=y</xsl:when>
			<xsl:when test=". = 'module'">HSEM_U8500=m</xsl:when>
			<xsl:otherwise># HSEM_U8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_OF=y</xsl:when>
			<xsl:otherwise># CLKSRC_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_ACPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_ACPI=y</xsl:when>
			<xsl:otherwise># CLKSRC_ACPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_PROBE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_PROBE=y</xsl:when>
			<xsl:otherwise># CLKSRC_PROBE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_I8253">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_I8253=y</xsl:when>
			<xsl:otherwise># CLKSRC_I8253 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKEVT_I8253">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKEVT_I8253=y</xsl:when>
			<xsl:otherwise># CLKEVT_I8253 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I8253_LOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I8253_LOCK=y</xsl:when>
			<xsl:otherwise># I8253_LOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKBLD_I8253">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKBLD_I8253=y</xsl:when>
			<xsl:otherwise># CLKBLD_I8253 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_MMIO=y</xsl:when>
			<xsl:otherwise># CLKSRC_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM2835_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM2835_TIMER=y</xsl:when>
			<xsl:otherwise># BCM2835_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_KONA_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_KONA_TIMER=y</xsl:when>
			<xsl:otherwise># BCM_KONA_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DIGICOLOR_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DIGICOLOR_TIMER=y</xsl:when>
			<xsl:otherwise># DIGICOLOR_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_APB_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_APB_TIMER=y</xsl:when>
			<xsl:otherwise># DW_APB_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_APB_TIMER_OF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_APB_TIMER_OF=y</xsl:when>
			<xsl:otherwise># DW_APB_TIMER_OF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_TIMER=y</xsl:when>
			<xsl:otherwise># ROCKCHIP_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA_370_XP_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_370_XP_TIMER=y</xsl:when>
			<xsl:otherwise># ARMADA_370_XP_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MESON6_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MESON6_TIMER=y</xsl:when>
			<xsl:otherwise># MESON6_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORION_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORION_TIMER=y</xsl:when>
			<xsl:otherwise># ORION_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN4I_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN4I_TIMER=y</xsl:when>
			<xsl:otherwise># SUN4I_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUN5I_HSTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUN5I_HSTIMER=y</xsl:when>
			<xsl:otherwise># SUN5I_HSTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_TIMER=y</xsl:when>
			<xsl:otherwise># TEGRA_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VT8500_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VT8500_TIMER=y</xsl:when>
			<xsl:otherwise># VT8500_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CADENCE_TTC_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CADENCE_TTC_TIMER=y</xsl:when>
			<xsl:otherwise># CADENCE_TTC_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASM9260_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASM9260_TIMER=y</xsl:when>
			<xsl:otherwise># ASM9260_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_NOMADIK_MTU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_NOMADIK_MTU=y</xsl:when>
			<xsl:otherwise># CLKSRC_NOMADIK_MTU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_NOMADIK_MTU_SCHED_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_NOMADIK_MTU_SCHED_CLOCK=y</xsl:when>
			<xsl:otherwise># CLKSRC_NOMADIK_MTU_SCHED_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_DBX500_PRCMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_DBX500_PRCMU=y</xsl:when>
			<xsl:otherwise># CLKSRC_DBX500_PRCMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLPS711X_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLPS711X_TIMER=y</xsl:when>
			<xsl:otherwise># CLPS711X_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATLAS7_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATLAS7_TIMER=y</xsl:when>
			<xsl:otherwise># ATLAS7_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MOXART_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MOXART_TIMER=y</xsl:when>
			<xsl:otherwise># MOXART_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXS_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXS_TIMER=y</xsl:when>
			<xsl:otherwise># MXS_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRIMA2_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRIMA2_TIMER=y</xsl:when>
			<xsl:otherwise># PRIMA2_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="U300_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">U300_TIMER=y</xsl:when>
			<xsl:otherwise># U300_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NSPIRE_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NSPIRE_TIMER=y</xsl:when>
			<xsl:otherwise># NSPIRE_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYSTONE_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYSTONE_TIMER=y</xsl:when>
			<xsl:otherwise># KEYSTONE_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRATOR_AP_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRATOR_AP_TIMER=y</xsl:when>
			<xsl:otherwise># INTEGRATOR_AP_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_DBX500_PRCMU_SCHED_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_DBX500_PRCMU_SCHED_CLOCK=y</xsl:when>
			<xsl:otherwise># CLKSRC_DBX500_PRCMU_SCHED_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_EFM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_EFM32=y</xsl:when>
			<xsl:otherwise># CLKSRC_EFM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_LPC32XX=y</xsl:when>
			<xsl:otherwise># CLKSRC_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_PISTACHIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_PISTACHIO=y</xsl:when>
			<xsl:otherwise># CLKSRC_PISTACHIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_TI_32K">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_TI_32K=y</xsl:when>
			<xsl:otherwise># CLKSRC_TI_32K is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_NPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_NPS=y</xsl:when>
			<xsl:otherwise># CLKSRC_NPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_STM32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_STM32=y</xsl:when>
			<xsl:otherwise># CLKSRC_STM32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_MPS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_MPS2=y</xsl:when>
			<xsl:otherwise># CLKSRC_MPS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ARCH_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ARCH_TIMER=y</xsl:when>
			<xsl:otherwise># ARM_ARCH_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_ARCH_TIMER_EVTSTREAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_ARCH_TIMER_EVTSTREAM=y</xsl:when>
			<xsl:otherwise># ARM_ARCH_TIMER_EVTSTREAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GLOBAL_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GLOBAL_TIMER=y</xsl:when>
			<xsl:otherwise># ARM_GLOBAL_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_TIMER_SP804">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_TIMER_SP804=y</xsl:when>
			<xsl:otherwise># ARM_TIMER_SP804 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK=y</xsl:when>
			<xsl:otherwise># CLKSRC_ARM_GLOBAL_TIMER_SCHED_CLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMV7M_SYSTICK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMV7M_SYSTICK=y</xsl:when>
			<xsl:otherwise># ARMV7M_SYSTICK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_PIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_PIT=y</xsl:when>
			<xsl:otherwise># ATMEL_PIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_ST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_ST=y</xsl:when>
			<xsl:otherwise># ATMEL_ST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_METAG_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_METAG_GENERIC=y</xsl:when>
			<xsl:otherwise># CLKSRC_METAG_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_EXYNOS_MCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_EXYNOS_MCT=y</xsl:when>
			<xsl:otherwise># CLKSRC_EXYNOS_MCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_SAMSUNG_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_SAMSUNG_PWM=y</xsl:when>
			<xsl:otherwise># CLKSRC_SAMSUNG_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_FTM_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_FTM_TIMER=y</xsl:when>
			<xsl:otherwise># FSL_FTM_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VF_PIT_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VF_PIT_TIMER=y</xsl:when>
			<xsl:otherwise># VF_PIT_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OXNAS_RPS_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OXNAS_RPS_TIMER=y</xsl:when>
			<xsl:otherwise># OXNAS_RPS_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYS_SUPPORTS_SH_CMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYS_SUPPORTS_SH_CMT=y</xsl:when>
			<xsl:otherwise># SYS_SUPPORTS_SH_CMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_TIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_TIMER=y</xsl:when>
			<xsl:otherwise># MTK_TIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYS_SUPPORTS_SH_MTU2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYS_SUPPORTS_SH_MTU2=y</xsl:when>
			<xsl:otherwise># SYS_SUPPORTS_SH_MTU2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYS_SUPPORTS_SH_TMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYS_SUPPORTS_SH_TMU=y</xsl:when>
			<xsl:otherwise># SYS_SUPPORTS_SH_TMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYS_SUPPORTS_EM_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYS_SUPPORTS_EM_STI=y</xsl:when>
			<xsl:otherwise># SYS_SUPPORTS_EM_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_TIMER_CMT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_TIMER_CMT=y</xsl:when>
			<xsl:otherwise># SH_TIMER_CMT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_TIMER_MTU2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_TIMER_MTU2=y</xsl:when>
			<xsl:otherwise># SH_TIMER_MTU2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SH_TIMER_TMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SH_TIMER_TMU=y</xsl:when>
			<xsl:otherwise># SH_TIMER_TMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EM_TIMER_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EM_TIMER_STI=y</xsl:when>
			<xsl:otherwise># EM_TIMER_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_QCOM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_QCOM=y</xsl:when>
			<xsl:otherwise># CLKSRC_QCOM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_VERSATILE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_VERSATILE=y</xsl:when>
			<xsl:otherwise># CLKSRC_VERSATILE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_MIPS_GIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_MIPS_GIC=y</xsl:when>
			<xsl:otherwise># CLKSRC_MIPS_GIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_TANGO_XTAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_TANGO_XTAL=y</xsl:when>
			<xsl:otherwise># CLKSRC_TANGO_XTAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_PXA=y</xsl:when>
			<xsl:otherwise># CLKSRC_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="H8300_TMR8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">H8300_TMR8=y</xsl:when>
			<xsl:otherwise># H8300_TMR8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="H8300_TMR16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">H8300_TMR16=y</xsl:when>
			<xsl:otherwise># H8300_TMR16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="H8300_TPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">H8300_TPU=y</xsl:when>
			<xsl:otherwise># H8300_TPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_IMX_GPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_IMX_GPT=y</xsl:when>
			<xsl:otherwise># CLKSRC_IMX_GPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLKSRC_ST_LPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLKSRC_ST_LPC=y</xsl:when>
			<xsl:otherwise># CLKSRC_ST_LPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAILBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAILBOX=y</xsl:when>
			<xsl:otherwise># MAILBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_MHU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_MHU=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_MHU=m</xsl:when>
			<xsl:otherwise># ARM_MHU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PL320_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PL320_MBOX=y</xsl:when>
			<xsl:otherwise># PL320_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP2PLUS_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP2PLUS_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP2PLUS_MBOX=m</xsl:when>
			<xsl:otherwise># OMAP2PLUS_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_MBOX_KFIFO_SIZE">
		OMAP_MBOX_KFIFO_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ROCKCHIP_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_MBOX=y</xsl:when>
			<xsl:otherwise># ROCKCHIP_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PCC=y</xsl:when>
			<xsl:otherwise># PCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALTERA_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALTERA_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">ALTERA_MBOX=m</xsl:when>
			<xsl:otherwise># ALTERA_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM2835_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM2835_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">BCM2835_MBOX=m</xsl:when>
			<xsl:otherwise># BCM2835_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STI_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STI_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">STI_MBOX=m</xsl:when>
			<xsl:otherwise># STI_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_MESSAGE_MANAGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_MESSAGE_MANAGER=y</xsl:when>
			<xsl:when test=". = 'module'">TI_MESSAGE_MANAGER=m</xsl:when>
			<xsl:otherwise># TI_MESSAGE_MANAGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HI6220_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HI6220_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">HI6220_MBOX=m</xsl:when>
			<xsl:otherwise># HI6220_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAILBOX_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAILBOX_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">MAILBOX_TEST=m</xsl:when>
			<xsl:otherwise># MAILBOX_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XGENE_SLIMPRO_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XGENE_SLIMPRO_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">XGENE_SLIMPRO_MBOX=m</xsl:when>
			<xsl:otherwise># XGENE_SLIMPRO_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_PDC_MBOX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_PDC_MBOX=y</xsl:when>
			<xsl:when test=". = 'module'">BCM_PDC_MBOX=m</xsl:when>
			<xsl:otherwise># BCM_PDC_MBOX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_API=y</xsl:when>
			<xsl:otherwise># IOMMU_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_SUPPORT=y</xsl:when>
			<xsl:otherwise># IOMMU_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IO_PGTABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IO_PGTABLE=y</xsl:when>
			<xsl:otherwise># IOMMU_IO_PGTABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IO_PGTABLE_LPAE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IO_PGTABLE_LPAE=y</xsl:when>
			<xsl:otherwise># IOMMU_IO_PGTABLE_LPAE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IO_PGTABLE_LPAE_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IO_PGTABLE_LPAE_SELFTEST=y</xsl:when>
			<xsl:otherwise># IOMMU_IO_PGTABLE_LPAE_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IO_PGTABLE_ARMV7S">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IO_PGTABLE_ARMV7S=y</xsl:when>
			<xsl:otherwise># IOMMU_IO_PGTABLE_ARMV7S is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IO_PGTABLE_ARMV7S_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IO_PGTABLE_ARMV7S_SELFTEST=y</xsl:when>
			<xsl:otherwise># IOMMU_IO_PGTABLE_ARMV7S_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_IOVA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_IOVA=y</xsl:when>
			<xsl:when test=". = 'module'">IOMMU_IOVA=m</xsl:when>
			<xsl:otherwise># IOMMU_IOVA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OF_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OF_IOMMU=y</xsl:when>
			<xsl:otherwise># OF_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_DMA=y</xsl:when>
			<xsl:otherwise># IOMMU_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_PAMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_PAMU=y</xsl:when>
			<xsl:otherwise># FSL_PAMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSM_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSM_IOMMU=y</xsl:when>
			<xsl:otherwise># MSM_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IOMMU_PGTABLES_L2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IOMMU_PGTABLES_L2=y</xsl:when>
			<xsl:otherwise># IOMMU_PGTABLES_L2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_IOMMU=y</xsl:when>
			<xsl:otherwise># AMD_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AMD_IOMMU_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AMD_IOMMU_V2=y</xsl:when>
			<xsl:when test=". = 'module'">AMD_IOMMU_V2=m</xsl:when>
			<xsl:otherwise># AMD_IOMMU_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMAR_TABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMAR_TABLE=y</xsl:when>
			<xsl:otherwise># DMAR_TABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOMMU=y</xsl:when>
			<xsl:otherwise># INTEL_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOMMU_SVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOMMU_SVM=y</xsl:when>
			<xsl:otherwise># INTEL_IOMMU_SVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOMMU_DEFAULT_ON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOMMU_DEFAULT_ON=y</xsl:when>
			<xsl:otherwise># INTEL_IOMMU_DEFAULT_ON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOMMU_BROKEN_GFX_WA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOMMU_BROKEN_GFX_WA=y</xsl:when>
			<xsl:otherwise># INTEL_IOMMU_BROKEN_GFX_WA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_IOMMU_FLOPPY_WA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_IOMMU_FLOPPY_WA=y</xsl:when>
			<xsl:otherwise># INTEL_IOMMU_FLOPPY_WA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_REMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_REMAP=y</xsl:when>
			<xsl:otherwise># IRQ_REMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_IOMMU=y</xsl:when>
			<xsl:otherwise># OMAP_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_IOMMU_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_IOMMU_DEBUG=y</xsl:when>
			<xsl:otherwise># OMAP_IOMMU_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_IOMMU=y</xsl:when>
			<xsl:otherwise># ROCKCHIP_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_IOMMU_GART">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_IOMMU_GART=y</xsl:when>
			<xsl:otherwise># TEGRA_IOMMU_GART is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_IOMMU_SMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_IOMMU_SMMU=y</xsl:when>
			<xsl:otherwise># TEGRA_IOMMU_SMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_IOMMU=y</xsl:when>
			<xsl:otherwise># EXYNOS_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_IOMMU_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_IOMMU_DEBUG=y</xsl:when>
			<xsl:otherwise># EXYNOS_IOMMU_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPMMU_VMSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPMMU_VMSA=y</xsl:when>
			<xsl:otherwise># IPMMU_VMSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SPAPR_TCE_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SPAPR_TCE_IOMMU=y</xsl:when>
			<xsl:otherwise># SPAPR_TCE_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SMMU=y</xsl:when>
			<xsl:otherwise># ARM_SMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SMMU_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SMMU_V3=y</xsl:when>
			<xsl:otherwise># ARM_SMMU_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_IOMMU=y</xsl:when>
			<xsl:otherwise># S390_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_IOMMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_IOMMU=y</xsl:when>
			<xsl:otherwise># MTK_IOMMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_IOMMU_V1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_IOMMU_V1=y</xsl:when>
			<xsl:otherwise># MTK_IOMMU_V1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REMOTEPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REMOTEPROC=y</xsl:when>
			<xsl:when test=". = 'module'">REMOTEPROC=m</xsl:when>
			<xsl:otherwise># REMOTEPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_REMOTEPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_REMOTEPROC=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_REMOTEPROC=m</xsl:when>
			<xsl:otherwise># OMAP_REMOTEPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STE_MODEM_RPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STE_MODEM_RPROC=y</xsl:when>
			<xsl:when test=". = 'module'">STE_MODEM_RPROC=m</xsl:when>
			<xsl:otherwise># STE_MODEM_RPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WKUP_M3_RPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WKUP_M3_RPROC=y</xsl:when>
			<xsl:when test=". = 'module'">WKUP_M3_RPROC=m</xsl:when>
			<xsl:otherwise># WKUP_M3_RPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA8XX_REMOTEPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA8XX_REMOTEPROC=y</xsl:when>
			<xsl:when test=". = 'module'">DA8XX_REMOTEPROC=m</xsl:when>
			<xsl:otherwise># DA8XX_REMOTEPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_MDT_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_MDT_LOADER=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_MDT_LOADER=m</xsl:when>
			<xsl:otherwise># QCOM_MDT_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_Q6V5_PIL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_Q6V5_PIL=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_Q6V5_PIL=m</xsl:when>
			<xsl:otherwise># QCOM_Q6V5_PIL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_REMOTEPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_REMOTEPROC=y</xsl:when>
			<xsl:when test=". = 'module'">ST_REMOTEPROC=m</xsl:when>
			<xsl:otherwise># ST_REMOTEPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RPMSG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RPMSG=y</xsl:when>
			<xsl:when test=". = 'module'">RPMSG=m</xsl:when>
			<xsl:otherwise># RPMSG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RASPBERRYPI_POWER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RASPBERRYPI_POWER=y</xsl:when>
			<xsl:otherwise># RASPBERRYPI_POWER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_BRCMSTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_BRCMSTB=y</xsl:when>
			<xsl:otherwise># SOC_BRCMSTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUICC_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUICC_ENGINE=y</xsl:when>
			<xsl:otherwise># QUICC_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCC_SLOW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCC_SLOW=y</xsl:when>
			<xsl:otherwise># UCC_SLOW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCC_FAST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCC_FAST=y</xsl:when>
			<xsl:otherwise># UCC_FAST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCC=y</xsl:when>
			<xsl:otherwise># UCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QE_TDM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QE_TDM=y</xsl:when>
			<xsl:otherwise># QE_TDM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QE_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QE_USB=y</xsl:when>
			<xsl:otherwise># QE_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_INFRACFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_INFRACFG=y</xsl:when>
			<xsl:otherwise># MTK_INFRACFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_PMIC_WRAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_PMIC_WRAP=y</xsl:when>
			<xsl:when test=". = 'module'">MTK_PMIC_WRAP=m</xsl:when>
			<xsl:otherwise># MTK_PMIC_WRAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_SCPSYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_SCPSYS=y</xsl:when>
			<xsl:otherwise># MTK_SCPSYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_GSBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_GSBI=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_GSBI=m</xsl:when>
			<xsl:otherwise># QCOM_GSBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_PM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_PM=y</xsl:when>
			<xsl:otherwise># QCOM_PM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMEM=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SMEM=m</xsl:when>
			<xsl:otherwise># QCOM_SMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMD=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SMD=m</xsl:when>
			<xsl:otherwise># QCOM_SMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMD_RPM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMD_RPM=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SMD_RPM=m</xsl:when>
			<xsl:otherwise># QCOM_SMD_RPM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMEM_STATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMEM_STATE=y</xsl:when>
			<xsl:otherwise># QCOM_SMEM_STATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMP2P">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMP2P=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SMP2P=m</xsl:when>
			<xsl:otherwise># QCOM_SMP2P is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SMSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SMSM=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SMSM=m</xsl:when>
			<xsl:otherwise># QCOM_SMSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_WCNSS_CTRL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_WCNSS_CTRL=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_WCNSS_CTRL=m</xsl:when>
			<xsl:otherwise># QCOM_WCNSS_CTRL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_PM_DOMAINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_PM_DOMAINS=y</xsl:when>
			<xsl:otherwise># ROCKCHIP_PM_DOMAINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_SAMSUNG=y</xsl:when>
			<xsl:otherwise># SOC_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_PMU=y</xsl:when>
			<xsl:otherwise># EXYNOS_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_PM_DOMAINS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_PM_DOMAINS=y</xsl:when>
			<xsl:otherwise># EXYNOS_PM_DOMAINS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNXI_SRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNXI_SRAM=y</xsl:when>
			<xsl:otherwise># SUNXI_SRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_2x_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_2x_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_2x_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_3x_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_3x_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_3x_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_114_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_114_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_114_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_124_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_124_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_124_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_132_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_132_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_132_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_TEGRA_210_SOC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_TEGRA_210_SOC=y</xsl:when>
			<xsl:otherwise># ARCH_TEGRA_210_SOC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_TI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_TI=y</xsl:when>
			<xsl:otherwise># SOC_TI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYSTONE_NAVIGATOR_QMSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYSTONE_NAVIGATOR_QMSS=y</xsl:when>
			<xsl:when test=". = 'module'">KEYSTONE_NAVIGATOR_QMSS=m</xsl:when>
			<xsl:otherwise># KEYSTONE_NAVIGATOR_QMSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYSTONE_NAVIGATOR_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYSTONE_NAVIGATOR_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">KEYSTONE_NAVIGATOR_DMA=m</xsl:when>
			<xsl:otherwise># KEYSTONE_NAVIGATOR_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="WKUP_M3_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">WKUP_M3_IPC=y</xsl:when>
			<xsl:when test=". = 'module'">WKUP_M3_IPC=m</xsl:when>
			<xsl:otherwise># WKUP_M3_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UX500_SOC_ID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UX500_SOC_ID=y</xsl:when>
			<xsl:otherwise># UX500_SOC_ID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_INTEGRATOR_CM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_INTEGRATOR_CM=y</xsl:when>
			<xsl:otherwise># SOC_INTEGRATOR_CM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SOC_REALVIEW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SOC_REALVIEW=y</xsl:when>
			<xsl:otherwise># SOC_REALVIEW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_DEVFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_DEVFREQ=y</xsl:when>
			<xsl:otherwise># PM_DEVFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_GOV_SIMPLE_ONDEMAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_GOV_SIMPLE_ONDEMAND=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_GOV_SIMPLE_ONDEMAND=m</xsl:when>
			<xsl:otherwise># DEVFREQ_GOV_SIMPLE_ONDEMAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_GOV_PERFORMANCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_GOV_PERFORMANCE=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_GOV_PERFORMANCE=m</xsl:when>
			<xsl:otherwise># DEVFREQ_GOV_PERFORMANCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_GOV_POWERSAVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_GOV_POWERSAVE=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_GOV_POWERSAVE=m</xsl:when>
			<xsl:otherwise># DEVFREQ_GOV_POWERSAVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_GOV_USERSPACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_GOV_USERSPACE=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_GOV_USERSPACE=m</xsl:when>
			<xsl:otherwise># DEVFREQ_GOV_USERSPACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_GOV_PASSIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_GOV_PASSIVE=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_GOV_PASSIVE=m</xsl:when>
			<xsl:otherwise># DEVFREQ_GOV_PASSIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_EXYNOS_BUS_DEVFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_EXYNOS_BUS_DEVFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_EXYNOS_BUS_DEVFREQ=m</xsl:when>
			<xsl:otherwise># ARM_EXYNOS_BUS_DEVFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_TEGRA_DEVFREQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_TEGRA_DEVFREQ=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_TEGRA_DEVFREQ=m</xsl:when>
			<xsl:otherwise># ARM_TEGRA_DEVFREQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PM_DEVFREQ_EVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PM_DEVFREQ_EVENT=y</xsl:when>
			<xsl:otherwise># PM_DEVFREQ_EVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_EVENT_EXYNOS_NOCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_EVENT_EXYNOS_NOCP=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_EVENT_EXYNOS_NOCP=m</xsl:when>
			<xsl:otherwise># DEVFREQ_EVENT_EXYNOS_NOCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEVFREQ_EVENT_EXYNOS_PPMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEVFREQ_EVENT_EXYNOS_PPMU=y</xsl:when>
			<xsl:when test=". = 'module'">DEVFREQ_EVENT_EXYNOS_PPMU=m</xsl:when>
			<xsl:otherwise># DEVFREQ_EVENT_EXYNOS_PPMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON=m</xsl:when>
			<xsl:otherwise># EXTCON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_ADC_JACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_ADC_JACK=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_ADC_JACK=m</xsl:when>
			<xsl:otherwise># EXTCON_ADC_JACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_ARIZONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_ARIZONA=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_ARIZONA=m</xsl:when>
			<xsl:otherwise># EXTCON_ARIZONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_AXP288">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_AXP288=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_AXP288=m</xsl:when>
			<xsl:otherwise># EXTCON_AXP288 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_GPIO=m</xsl:when>
			<xsl:otherwise># EXTCON_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_MAX14577">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_MAX14577=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_MAX14577=m</xsl:when>
			<xsl:otherwise># EXTCON_MAX14577 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_MAX3355">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_MAX3355=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_MAX3355=m</xsl:when>
			<xsl:otherwise># EXTCON_MAX3355 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_MAX77693">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_MAX77693=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_MAX77693=m</xsl:when>
			<xsl:otherwise># EXTCON_MAX77693 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_MAX77843">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_MAX77843=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_MAX77843=m</xsl:when>
			<xsl:otherwise># EXTCON_MAX77843 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_MAX8997">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_MAX8997=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_MAX8997=m</xsl:when>
			<xsl:otherwise># EXTCON_MAX8997 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_PALMAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_PALMAS=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_PALMAS=m</xsl:when>
			<xsl:otherwise># EXTCON_PALMAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_RT8973A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_RT8973A=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_RT8973A=m</xsl:when>
			<xsl:otherwise># EXTCON_RT8973A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_SM5502">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_SM5502=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_SM5502=m</xsl:when>
			<xsl:otherwise># EXTCON_SM5502 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXTCON_USB_GPIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXTCON_USB_GPIO=y</xsl:when>
			<xsl:when test=". = 'module'">EXTCON_USB_GPIO=m</xsl:when>
			<xsl:otherwise># EXTCON_USB_GPIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEMORY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEMORY=y</xsl:when>
			<xsl:otherwise># MEMORY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_PL172_MPMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_PL172_MPMC=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_PL172_MPMC=m</xsl:when>
			<xsl:otherwise># ARM_PL172_MPMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_SDRAMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_SDRAMC=y</xsl:when>
			<xsl:otherwise># ATMEL_SDRAMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_EBI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_EBI=y</xsl:when>
			<xsl:otherwise># ATMEL_EBI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_AEMIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_AEMIF=y</xsl:when>
			<xsl:when test=". = 'module'">TI_AEMIF=m</xsl:when>
			<xsl:otherwise># TI_AEMIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_EMIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_EMIF=y</xsl:when>
			<xsl:when test=". = 'module'">TI_EMIF=m</xsl:when>
			<xsl:otherwise># TI_EMIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_GPMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_GPMC=y</xsl:when>
			<xsl:otherwise># OMAP_GPMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_GPMC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_GPMC_DEBUG=y</xsl:when>
			<xsl:otherwise># OMAP_GPMC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_DEVBUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_DEVBUS=y</xsl:when>
			<xsl:otherwise># MVEBU_DEVBUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA20_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA20_MC=y</xsl:when>
			<xsl:otherwise># TEGRA20_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_CORENET_CF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_CORENET_CF=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_CORENET_CF=m</xsl:when>
			<xsl:otherwise># FSL_CORENET_CF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_IFC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_IFC=y</xsl:when>
			<xsl:otherwise># FSL_IFC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JZ4780_NEMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JZ4780_NEMC=y</xsl:when>
			<xsl:otherwise># JZ4780_NEMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_SMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_SMI=y</xsl:when>
			<xsl:otherwise># MTK_SMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SAMSUNG_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SAMSUNG_MC=y</xsl:when>
			<xsl:otherwise># SAMSUNG_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_SROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_SROM=y</xsl:when>
			<xsl:otherwise># EXYNOS_SROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA_MC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA_MC=y</xsl:when>
			<xsl:otherwise># TEGRA_MC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEGRA124_EMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEGRA124_EMC=y</xsl:when>
			<xsl:otherwise># TEGRA124_EMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO=y</xsl:when>
			<xsl:when test=". = 'module'">IIO=m</xsl:when>
			<xsl:otherwise># IIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_BUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_BUFFER=y</xsl:when>
			<xsl:otherwise># IIO_BUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_BUFFER_CB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_BUFFER_CB=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_BUFFER_CB=m</xsl:when>
			<xsl:otherwise># IIO_BUFFER_CB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_BUFFER_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_BUFFER_DMA=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_BUFFER_DMA=m</xsl:when>
			<xsl:otherwise># IIO_BUFFER_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_BUFFER_DMAENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_BUFFER_DMAENGINE=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_BUFFER_DMAENGINE=m</xsl:when>
			<xsl:otherwise># IIO_BUFFER_DMAENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_KFIFO_BUF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_KFIFO_BUF=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_KFIFO_BUF=m</xsl:when>
			<xsl:otherwise># IIO_KFIFO_BUF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_TRIGGERED_BUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_TRIGGERED_BUFFER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_TRIGGERED_BUFFER=m</xsl:when>
			<xsl:otherwise># IIO_TRIGGERED_BUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_CONFIGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_CONFIGFS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_CONFIGFS=m</xsl:when>
			<xsl:otherwise># IIO_CONFIGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_TRIGGER=y</xsl:when>
			<xsl:otherwise># IIO_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_CONSUMERS_PER_TRIGGER">
		IIO_CONSUMERS_PER_TRIGGER=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IIO_SW_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SW_DEVICE=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SW_DEVICE=m</xsl:when>
			<xsl:otherwise># IIO_SW_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SW_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SW_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SW_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_SW_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_TRIGGERED_EVENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_TRIGGERED_EVENT=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_TRIGGERED_EVENT=m</xsl:when>
			<xsl:otherwise># IIO_TRIGGERED_EVENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMA180">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMA180=y</xsl:when>
			<xsl:when test=". = 'module'">BMA180=m</xsl:when>
			<xsl:otherwise># BMA180 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMA220">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMA220=y</xsl:when>
			<xsl:when test=". = 'module'">BMA220=m</xsl:when>
			<xsl:otherwise># BMA220 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_ACCEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_ACCEL=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_ACCEL=m</xsl:when>
			<xsl:otherwise># BMC150_ACCEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_ACCEL_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_ACCEL_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_ACCEL_I2C=m</xsl:when>
			<xsl:otherwise># BMC150_ACCEL_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_ACCEL_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_ACCEL_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_ACCEL_SPI=m</xsl:when>
			<xsl:otherwise># BMC150_ACCEL_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_ACCEL_3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_ACCEL_3D=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_ACCEL_3D=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_ACCEL_3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_ACCEL_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_ACCEL_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_ACCEL_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_ACCEL_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_ACCEL_I2C_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_ACCEL_I2C_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_ACCEL_I2C_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_ACCEL_I2C_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_ACCEL_SPI_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_ACCEL_SPI_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_ACCEL_SPI_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_ACCEL_SPI_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KXSD9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KXSD9=y</xsl:when>
			<xsl:when test=". = 'module'">KXSD9=m</xsl:when>
			<xsl:otherwise># KXSD9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KXCJK1013">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KXCJK1013=y</xsl:when>
			<xsl:when test=". = 'module'">KXCJK1013=m</xsl:when>
			<xsl:otherwise># KXCJK1013 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA7455">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA7455=y</xsl:when>
			<xsl:when test=". = 'module'">MMA7455=m</xsl:when>
			<xsl:otherwise># MMA7455 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA7455_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA7455_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MMA7455_I2C=m</xsl:when>
			<xsl:otherwise># MMA7455_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA7455_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA7455_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MMA7455_SPI=m</xsl:when>
			<xsl:otherwise># MMA7455_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA7660">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA7660=y</xsl:when>
			<xsl:when test=". = 'module'">MMA7660=m</xsl:when>
			<xsl:otherwise># MMA7660 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA8452">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA8452=y</xsl:when>
			<xsl:when test=". = 'module'">MMA8452=m</xsl:when>
			<xsl:otherwise># MMA8452 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA9551_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA9551_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">MMA9551_CORE=m</xsl:when>
			<xsl:otherwise># MMA9551_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA9551">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA9551=y</xsl:when>
			<xsl:when test=". = 'module'">MMA9551=m</xsl:when>
			<xsl:otherwise># MMA9551 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMA9553">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMA9553=y</xsl:when>
			<xsl:when test=". = 'module'">MMA9553=m</xsl:when>
			<xsl:otherwise># MMA9553 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXC4005">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXC4005=y</xsl:when>
			<xsl:when test=". = 'module'">MXC4005=m</xsl:when>
			<xsl:otherwise># MXC4005 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXC6255">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXC6255=y</xsl:when>
			<xsl:when test=". = 'module'">MXC6255=m</xsl:when>
			<xsl:otherwise># MXC6255 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STK8312">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STK8312=y</xsl:when>
			<xsl:when test=". = 'module'">STK8312=m</xsl:when>
			<xsl:otherwise># STK8312 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STK8BA50">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STK8BA50=y</xsl:when>
			<xsl:when test=". = 'module'">STK8BA50=m</xsl:when>
			<xsl:otherwise># STK8BA50 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD_SIGMA_DELTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD_SIGMA_DELTA=y</xsl:when>
			<xsl:when test=". = 'module'">AD_SIGMA_DELTA=m</xsl:when>
			<xsl:otherwise># AD_SIGMA_DELTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7266">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7266=y</xsl:when>
			<xsl:when test=". = 'module'">AD7266=m</xsl:when>
			<xsl:otherwise># AD7266 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7291">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7291=y</xsl:when>
			<xsl:when test=". = 'module'">AD7291=m</xsl:when>
			<xsl:otherwise># AD7291 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7298">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7298=y</xsl:when>
			<xsl:when test=". = 'module'">AD7298=m</xsl:when>
			<xsl:otherwise># AD7298 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7476">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7476=y</xsl:when>
			<xsl:when test=". = 'module'">AD7476=m</xsl:when>
			<xsl:otherwise># AD7476 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7791">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7791=y</xsl:when>
			<xsl:when test=". = 'module'">AD7791=m</xsl:when>
			<xsl:otherwise># AD7791 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7793">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7793=y</xsl:when>
			<xsl:when test=". = 'module'">AD7793=m</xsl:when>
			<xsl:otherwise># AD7793 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7887">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7887=y</xsl:when>
			<xsl:when test=". = 'module'">AD7887=m</xsl:when>
			<xsl:otherwise># AD7887 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7923">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7923=y</xsl:when>
			<xsl:when test=". = 'module'">AD7923=m</xsl:when>
			<xsl:otherwise># AD7923 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD799X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD799X=y</xsl:when>
			<xsl:when test=". = 'module'">AD799X=m</xsl:when>
			<xsl:otherwise># AD799X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT91_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT91_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">AT91_ADC=m</xsl:when>
			<xsl:otherwise># AT91_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AT91_SAMA5D2_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AT91_SAMA5D2_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">AT91_SAMA5D2_ADC=m</xsl:when>
			<xsl:otherwise># AT91_SAMA5D2_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AXP288_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AXP288_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">AXP288_ADC=m</xsl:when>
			<xsl:otherwise># AXP288_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_IPROC_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_IPROC_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">BCM_IPROC_ADC=m</xsl:when>
			<xsl:otherwise># BCM_IPROC_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BERLIN2_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BERLIN2_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">BERLIN2_ADC=m</xsl:when>
			<xsl:otherwise># BERLIN2_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CC10001_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CC10001_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">CC10001_ADC=m</xsl:when>
			<xsl:otherwise># CC10001_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DA9150_GPADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DA9150_GPADC=y</xsl:when>
			<xsl:when test=". = 'module'">DA9150_GPADC=m</xsl:when>
			<xsl:otherwise># DA9150_GPADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXYNOS_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXYNOS_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">EXYNOS_ADC=m</xsl:when>
			<xsl:otherwise># EXYNOS_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSL_MX25_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSL_MX25_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">FSL_MX25_ADC=m</xsl:when>
			<xsl:otherwise># FSL_MX25_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HI8435">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HI8435=y</xsl:when>
			<xsl:when test=". = 'module'">HI8435=m</xsl:when>
			<xsl:otherwise># HI8435 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INA2XX_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INA2XX_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">INA2XX_ADC=m</xsl:when>
			<xsl:otherwise># INA2XX_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX7D_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX7D_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">IMX7D_ADC=m</xsl:when>
			<xsl:otherwise># IMX7D_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LP8788_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LP8788_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">LP8788_ADC=m</xsl:when>
			<xsl:otherwise># LP8788_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC18XX_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC18XX_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">LPC18XX_ADC=m</xsl:when>
			<xsl:otherwise># LPC18XX_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX1027">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX1027=y</xsl:when>
			<xsl:when test=". = 'module'">MAX1027=m</xsl:when>
			<xsl:otherwise># MAX1027 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX1363">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX1363=y</xsl:when>
			<xsl:when test=". = 'module'">MAX1363=m</xsl:when>
			<xsl:otherwise># MAX1363 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP320X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP320X=y</xsl:when>
			<xsl:when test=". = 'module'">MCP320X=m</xsl:when>
			<xsl:otherwise># MCP320X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP3422">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP3422=y</xsl:when>
			<xsl:when test=". = 'module'">MCP3422=m</xsl:when>
			<xsl:otherwise># MCP3422 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MEN_Z188_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MEN_Z188_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">MEN_Z188_ADC=m</xsl:when>
			<xsl:otherwise># MEN_Z188_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MXS_LRADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MXS_LRADC=y</xsl:when>
			<xsl:when test=". = 'module'">MXS_LRADC=m</xsl:when>
			<xsl:otherwise># MXS_LRADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NAU7802">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NAU7802=y</xsl:when>
			<xsl:when test=". = 'module'">NAU7802=m</xsl:when>
			<xsl:otherwise># NAU7802 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PALMAS_GPADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PALMAS_GPADC=y</xsl:when>
			<xsl:when test=". = 'module'">PALMAS_GPADC=m</xsl:when>
			<xsl:otherwise># PALMAS_GPADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SPMI_IADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SPMI_IADC=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SPMI_IADC=m</xsl:when>
			<xsl:otherwise># QCOM_SPMI_IADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SPMI_VADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SPMI_VADC=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_SPMI_VADC=m</xsl:when>
			<xsl:otherwise># QCOM_SPMI_VADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_SARADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_SARADC=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_SARADC=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_SARADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ADC081C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ADC081C=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ADC081C=m</xsl:when>
			<xsl:otherwise># TI_ADC081C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ADC0832">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ADC0832=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ADC0832=m</xsl:when>
			<xsl:otherwise># TI_ADC0832 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ADC128S052">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ADC128S052=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ADC128S052=m</xsl:when>
			<xsl:otherwise># TI_ADC128S052 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ADS1015">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ADS1015=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ADS1015=m</xsl:when>
			<xsl:otherwise># TI_ADS1015 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_ADS8688">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_ADS8688=y</xsl:when>
			<xsl:when test=". = 'module'">TI_ADS8688=m</xsl:when>
			<xsl:otherwise># TI_ADS8688 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_AM335X_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_AM335X_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">TI_AM335X_ADC=m</xsl:when>
			<xsl:otherwise># TI_AM335X_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL4030_MADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL4030_MADC=y</xsl:when>
			<xsl:when test=". = 'module'">TWL4030_MADC=m</xsl:when>
			<xsl:otherwise># TWL4030_MADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL6030_GPADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL6030_GPADC=y</xsl:when>
			<xsl:when test=". = 'module'">TWL6030_GPADC=m</xsl:when>
			<xsl:otherwise># TWL6030_GPADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VF610_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VF610_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">VF610_ADC=m</xsl:when>
			<xsl:otherwise># VF610_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIPERBOARD_ADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIPERBOARD_ADC=y</xsl:when>
			<xsl:when test=". = 'module'">VIPERBOARD_ADC=m</xsl:when>
			<xsl:otherwise># VIPERBOARD_ADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XILINX_XADC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XILINX_XADC=y</xsl:when>
			<xsl:when test=". = 'module'">XILINX_XADC=m</xsl:when>
			<xsl:otherwise># XILINX_XADC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD8366">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD8366=y</xsl:when>
			<xsl:when test=". = 'module'">AD8366=m</xsl:when>
			<xsl:otherwise># AD8366 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATLAS_PH_SENSOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATLAS_PH_SENSOR=y</xsl:when>
			<xsl:when test=". = 'module'">ATLAS_PH_SENSOR=m</xsl:when>
			<xsl:otherwise># ATLAS_PH_SENSOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IAQCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IAQCORE=y</xsl:when>
			<xsl:when test=". = 'module'">IAQCORE=m</xsl:when>
			<xsl:otherwise># IAQCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VZ89X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VZ89X=y</xsl:when>
			<xsl:when test=". = 'module'">VZ89X=m</xsl:when>
			<xsl:otherwise># VZ89X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_IIO_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_IIO_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_IIO_COMMON=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_IIO_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_IIO_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_IIO_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_IIO_TRIGGER=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_IIO_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_MS_SENSORS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_MS_SENSORS_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_MS_SENSORS_I2C=m</xsl:when>
			<xsl:otherwise># IIO_MS_SENSORS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SSP_SENSORS_COMMONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SSP_SENSORS_COMMONS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SSP_SENSORS_COMMONS=m</xsl:when>
			<xsl:otherwise># IIO_SSP_SENSORS_COMMONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SSP_SENSORHUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SSP_SENSORHUB=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SSP_SENSORHUB=m</xsl:when>
			<xsl:otherwise># IIO_SSP_SENSORHUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_SENSORS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_SENSORS_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_SENSORS_I2C=m</xsl:when>
			<xsl:otherwise># IIO_ST_SENSORS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_SENSORS_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_SENSORS_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_SENSORS_SPI=m</xsl:when>
			<xsl:otherwise># IIO_ST_SENSORS_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_SENSORS_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_SENSORS_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_SENSORS_CORE=m</xsl:when>
			<xsl:otherwise># IIO_ST_SENSORS_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5064">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5064=y</xsl:when>
			<xsl:when test=". = 'module'">AD5064=m</xsl:when>
			<xsl:otherwise># AD5064 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5360">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5360=y</xsl:when>
			<xsl:when test=". = 'module'">AD5360=m</xsl:when>
			<xsl:otherwise># AD5360 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5380">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5380=y</xsl:when>
			<xsl:when test=". = 'module'">AD5380=m</xsl:when>
			<xsl:otherwise># AD5380 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5421">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5421=y</xsl:when>
			<xsl:when test=". = 'module'">AD5421=m</xsl:when>
			<xsl:otherwise># AD5421 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5446">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5446=y</xsl:when>
			<xsl:when test=". = 'module'">AD5446=m</xsl:when>
			<xsl:otherwise># AD5446 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5449">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5449=y</xsl:when>
			<xsl:when test=". = 'module'">AD5449=m</xsl:when>
			<xsl:otherwise># AD5449 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5592R_BASE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5592R_BASE=y</xsl:when>
			<xsl:when test=". = 'module'">AD5592R_BASE=m</xsl:when>
			<xsl:otherwise># AD5592R_BASE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5592R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5592R=y</xsl:when>
			<xsl:when test=". = 'module'">AD5592R=m</xsl:when>
			<xsl:otherwise># AD5592R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5593R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5593R=y</xsl:when>
			<xsl:when test=". = 'module'">AD5593R=m</xsl:when>
			<xsl:otherwise># AD5593R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5504">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5504=y</xsl:when>
			<xsl:when test=". = 'module'">AD5504=m</xsl:when>
			<xsl:otherwise># AD5504 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5624R_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5624R_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">AD5624R_SPI=m</xsl:when>
			<xsl:otherwise># AD5624R_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5686">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5686=y</xsl:when>
			<xsl:when test=". = 'module'">AD5686=m</xsl:when>
			<xsl:otherwise># AD5686 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5755">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5755=y</xsl:when>
			<xsl:when test=". = 'module'">AD5755=m</xsl:when>
			<xsl:otherwise># AD5755 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5761">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5761=y</xsl:when>
			<xsl:when test=". = 'module'">AD5761=m</xsl:when>
			<xsl:otherwise># AD5761 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5764">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5764=y</xsl:when>
			<xsl:when test=". = 'module'">AD5764=m</xsl:when>
			<xsl:otherwise># AD5764 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD5791">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD5791=y</xsl:when>
			<xsl:when test=". = 'module'">AD5791=m</xsl:when>
			<xsl:otherwise># AD5791 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD7303">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD7303=y</xsl:when>
			<xsl:when test=". = 'module'">AD7303=m</xsl:when>
			<xsl:otherwise># AD7303 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LPC18XX_DAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LPC18XX_DAC=y</xsl:when>
			<xsl:when test=". = 'module'">LPC18XX_DAC=m</xsl:when>
			<xsl:otherwise># LPC18XX_DAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="M62332">
		<xsl:choose>
			<xsl:when test=". = 'yes'">M62332=y</xsl:when>
			<xsl:when test=". = 'module'">M62332=m</xsl:when>
			<xsl:otherwise># M62332 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX517">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX517=y</xsl:when>
			<xsl:when test=". = 'module'">MAX517=m</xsl:when>
			<xsl:otherwise># MAX517 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX5821">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX5821=y</xsl:when>
			<xsl:when test=". = 'module'">MAX5821=m</xsl:when>
			<xsl:otherwise># MAX5821 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP4725">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP4725=y</xsl:when>
			<xsl:when test=". = 'module'">MCP4725=m</xsl:when>
			<xsl:otherwise># MCP4725 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP4922">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP4922=y</xsl:when>
			<xsl:when test=". = 'module'">MCP4922=m</xsl:when>
			<xsl:otherwise># MCP4922 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STX104">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STX104=y</xsl:when>
			<xsl:when test=". = 'module'">STX104=m</xsl:when>
			<xsl:otherwise># STX104 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VF610_DAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VF610_DAC=y</xsl:when>
			<xsl:when test=". = 'module'">VF610_DAC=m</xsl:when>
			<xsl:otherwise># VF610_DAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_DUMMY_EVGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_DUMMY_EVGEN=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_DUMMY_EVGEN=m</xsl:when>
			<xsl:otherwise># IIO_DUMMY_EVGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SIMPLE_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SIMPLE_DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SIMPLE_DUMMY=m</xsl:when>
			<xsl:otherwise># IIO_SIMPLE_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SIMPLE_DUMMY_EVENTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SIMPLE_DUMMY_EVENTS=y</xsl:when>
			<xsl:otherwise># IIO_SIMPLE_DUMMY_EVENTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SIMPLE_DUMMY_BUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SIMPLE_DUMMY_BUFFER=y</xsl:when>
			<xsl:otherwise># IIO_SIMPLE_DUMMY_BUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AD9523">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AD9523=y</xsl:when>
			<xsl:when test=". = 'module'">AD9523=m</xsl:when>
			<xsl:otherwise># AD9523 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADF4350">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADF4350=y</xsl:when>
			<xsl:when test=". = 'module'">ADF4350=m</xsl:when>
			<xsl:otherwise># ADF4350 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16080">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16080=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16080=m</xsl:when>
			<xsl:otherwise># ADIS16080 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16130">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16130=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16130=m</xsl:when>
			<xsl:otherwise># ADIS16130 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16136">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16136=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16136=m</xsl:when>
			<xsl:otherwise># ADIS16136 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16260">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16260=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16260=m</xsl:when>
			<xsl:otherwise># ADIS16260 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADXRS450">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADXRS450=y</xsl:when>
			<xsl:when test=". = 'module'">ADXRS450=m</xsl:when>
			<xsl:otherwise># ADXRS450 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMG160">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMG160=y</xsl:when>
			<xsl:when test=". = 'module'">BMG160=m</xsl:when>
			<xsl:otherwise># BMG160 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMG160_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMG160_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMG160_I2C=m</xsl:when>
			<xsl:otherwise># BMG160_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMG160_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMG160_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMG160_SPI=m</xsl:when>
			<xsl:otherwise># BMG160_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_GYRO_3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_GYRO_3D=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_GYRO_3D=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_GYRO_3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_GYRO_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_GYRO_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_GYRO_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_GYRO_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_GYRO_I2C_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_GYRO_I2C_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_GYRO_I2C_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_GYRO_I2C_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_GYRO_SPI_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_GYRO_SPI_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_GYRO_SPI_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_GYRO_SPI_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ITG3200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ITG3200=y</xsl:when>
			<xsl:when test=". = 'module'">ITG3200=m</xsl:when>
			<xsl:otherwise># ITG3200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFE4403">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFE4403=y</xsl:when>
			<xsl:when test=". = 'module'">AFE4403=m</xsl:when>
			<xsl:otherwise># AFE4403 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFE4404">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFE4404=y</xsl:when>
			<xsl:when test=". = 'module'">AFE4404=m</xsl:when>
			<xsl:otherwise># AFE4404 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX30100">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX30100=y</xsl:when>
			<xsl:when test=". = 'module'">MAX30100=m</xsl:when>
			<xsl:otherwise># MAX30100 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AM2315">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AM2315=y</xsl:when>
			<xsl:when test=". = 'module'">AM2315=m</xsl:when>
			<xsl:otherwise># AM2315 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DHT11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DHT11=y</xsl:when>
			<xsl:when test=". = 'module'">DHT11=m</xsl:when>
			<xsl:otherwise># DHT11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HDC100X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HDC100X=y</xsl:when>
			<xsl:when test=". = 'module'">HDC100X=m</xsl:when>
			<xsl:otherwise># HDC100X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HTU21">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HTU21=y</xsl:when>
			<xsl:when test=". = 'module'">HTU21=m</xsl:when>
			<xsl:otherwise># HTU21 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SI7005">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SI7005=y</xsl:when>
			<xsl:when test=". = 'module'">SI7005=m</xsl:when>
			<xsl:otherwise># SI7005 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SI7020">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SI7020=y</xsl:when>
			<xsl:when test=". = 'module'">SI7020=m</xsl:when>
			<xsl:otherwise># SI7020 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16400">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16400=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16400=m</xsl:when>
			<xsl:otherwise># ADIS16400 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADIS16480">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADIS16480=y</xsl:when>
			<xsl:when test=". = 'module'">ADIS16480=m</xsl:when>
			<xsl:otherwise># ADIS16480 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMI160">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMI160=y</xsl:when>
			<xsl:when test=". = 'module'">BMI160=m</xsl:when>
			<xsl:otherwise># BMI160 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMI160_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMI160_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMI160_I2C=m</xsl:when>
			<xsl:otherwise># BMI160_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMI160_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMI160_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMI160_SPI=m</xsl:when>
			<xsl:otherwise># BMI160_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KMX61">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KMX61=y</xsl:when>
			<xsl:when test=". = 'module'">KMX61=m</xsl:when>
			<xsl:otherwise># KMX61 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INV_MPU6050_IIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INV_MPU6050_IIO=y</xsl:when>
			<xsl:when test=". = 'module'">INV_MPU6050_IIO=m</xsl:when>
			<xsl:otherwise># INV_MPU6050_IIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INV_MPU6050_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INV_MPU6050_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">INV_MPU6050_I2C=m</xsl:when>
			<xsl:otherwise># INV_MPU6050_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INV_MPU6050_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INV_MPU6050_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">INV_MPU6050_SPI=m</xsl:when>
			<xsl:otherwise># INV_MPU6050_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ADIS_LIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ADIS_LIB=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ADIS_LIB=m</xsl:when>
			<xsl:otherwise># IIO_ADIS_LIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ADIS_LIB_BUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ADIS_LIB_BUFFER=y</xsl:when>
			<xsl:otherwise># IIO_ADIS_LIB_BUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ACPI_ALS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ACPI_ALS=y</xsl:when>
			<xsl:when test=". = 'module'">ACPI_ALS=m</xsl:when>
			<xsl:otherwise># ACPI_ALS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADJD_S311">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADJD_S311=y</xsl:when>
			<xsl:when test=". = 'module'">ADJD_S311=m</xsl:when>
			<xsl:otherwise># ADJD_S311 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AL3320A">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AL3320A=y</xsl:when>
			<xsl:when test=". = 'module'">AL3320A=m</xsl:when>
			<xsl:otherwise># AL3320A is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APDS9300">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APDS9300=y</xsl:when>
			<xsl:when test=". = 'module'">APDS9300=m</xsl:when>
			<xsl:otherwise># APDS9300 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="APDS9960">
		<xsl:choose>
			<xsl:when test=". = 'yes'">APDS9960=y</xsl:when>
			<xsl:when test=". = 'module'">APDS9960=m</xsl:when>
			<xsl:otherwise># APDS9960 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BH1750">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BH1750=y</xsl:when>
			<xsl:when test=". = 'module'">BH1750=m</xsl:when>
			<xsl:otherwise># BH1750 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BH1780">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BH1780=y</xsl:when>
			<xsl:when test=". = 'module'">BH1780=m</xsl:when>
			<xsl:otherwise># BH1780 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CM32181">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CM32181=y</xsl:when>
			<xsl:when test=". = 'module'">CM32181=m</xsl:when>
			<xsl:otherwise># CM32181 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CM3232">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CM3232=y</xsl:when>
			<xsl:when test=". = 'module'">CM3232=m</xsl:when>
			<xsl:otherwise># CM3232 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CM3323">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CM3323=y</xsl:when>
			<xsl:when test=". = 'module'">CM3323=m</xsl:when>
			<xsl:otherwise># CM3323 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CM36651">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CM36651=y</xsl:when>
			<xsl:when test=". = 'module'">CM36651=m</xsl:when>
			<xsl:otherwise># CM36651 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GP2AP020A00F">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GP2AP020A00F=y</xsl:when>
			<xsl:when test=". = 'module'">GP2AP020A00F=m</xsl:when>
			<xsl:otherwise># GP2AP020A00F is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISL29125">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISL29125=y</xsl:when>
			<xsl:when test=". = 'module'">ISL29125=m</xsl:when>
			<xsl:otherwise># ISL29125 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_ALS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_ALS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_ALS=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_ALS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_PROX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_PROX=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_PROX=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_PROX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JSA1212">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JSA1212=y</xsl:when>
			<xsl:when test=". = 'module'">JSA1212=m</xsl:when>
			<xsl:otherwise># JSA1212 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RPR0521">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RPR0521=y</xsl:when>
			<xsl:when test=". = 'module'">RPR0521=m</xsl:when>
			<xsl:otherwise># RPR0521 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_LM3533">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_LM3533=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_LM3533=m</xsl:when>
			<xsl:otherwise># SENSORS_LM3533 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LTR501">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LTR501=y</xsl:when>
			<xsl:when test=". = 'module'">LTR501=m</xsl:when>
			<xsl:otherwise># LTR501 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX44000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX44000=y</xsl:when>
			<xsl:when test=". = 'module'">MAX44000=m</xsl:when>
			<xsl:otherwise># MAX44000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OPT3001">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OPT3001=y</xsl:when>
			<xsl:when test=". = 'module'">OPT3001=m</xsl:when>
			<xsl:otherwise># OPT3001 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PA12203001">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PA12203001=y</xsl:when>
			<xsl:when test=". = 'module'">PA12203001=m</xsl:when>
			<xsl:otherwise># PA12203001 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STK3310">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STK3310=y</xsl:when>
			<xsl:when test=". = 'module'">STK3310=m</xsl:when>
			<xsl:otherwise># STK3310 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCS3414">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCS3414=y</xsl:when>
			<xsl:when test=". = 'module'">TCS3414=m</xsl:when>
			<xsl:otherwise># TCS3414 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TCS3472">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TCS3472=y</xsl:when>
			<xsl:when test=". = 'module'">TCS3472=m</xsl:when>
			<xsl:otherwise># TCS3472 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_TSL2563">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_TSL2563=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_TSL2563=m</xsl:when>
			<xsl:otherwise># SENSORS_TSL2563 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSL4531">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSL4531=y</xsl:when>
			<xsl:when test=". = 'module'">TSL4531=m</xsl:when>
			<xsl:otherwise># TSL4531 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="US5182D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">US5182D=y</xsl:when>
			<xsl:when test=". = 'module'">US5182D=m</xsl:when>
			<xsl:otherwise># US5182D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VCNL4000">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VCNL4000=y</xsl:when>
			<xsl:when test=". = 'module'">VCNL4000=m</xsl:when>
			<xsl:otherwise># VCNL4000 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VEML6070">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VEML6070=y</xsl:when>
			<xsl:when test=". = 'module'">VEML6070=m</xsl:when>
			<xsl:otherwise># VEML6070 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AK8975">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AK8975=y</xsl:when>
			<xsl:when test=". = 'module'">AK8975=m</xsl:when>
			<xsl:otherwise># AK8975 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AK09911">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AK09911=y</xsl:when>
			<xsl:when test=". = 'module'">AK09911=m</xsl:when>
			<xsl:otherwise># AK09911 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_MAGN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_MAGN=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_MAGN=m</xsl:when>
			<xsl:otherwise># BMC150_MAGN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_MAGN_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_MAGN_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_MAGN_I2C=m</xsl:when>
			<xsl:otherwise># BMC150_MAGN_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMC150_MAGN_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMC150_MAGN_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMC150_MAGN_SPI=m</xsl:when>
			<xsl:otherwise># BMC150_MAGN_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAG3110">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAG3110=y</xsl:when>
			<xsl:when test=". = 'module'">MAG3110=m</xsl:when>
			<xsl:otherwise># MAG3110 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_MAGNETOMETER_3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_MAGNETOMETER_3D=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_MAGNETOMETER_3D=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_MAGNETOMETER_3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MMC35240">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MMC35240=y</xsl:when>
			<xsl:when test=". = 'module'">MMC35240=m</xsl:when>
			<xsl:otherwise># MMC35240 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_MAGN_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_MAGN_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_MAGN_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_MAGN_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_MAGN_I2C_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_MAGN_I2C_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_MAGN_I2C_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_MAGN_I2C_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_MAGN_SPI_3AXIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_MAGN_SPI_3AXIS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_MAGN_SPI_3AXIS=m</xsl:when>
			<xsl:otherwise># IIO_ST_MAGN_SPI_3AXIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_HMC5843">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_HMC5843=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_HMC5843=m</xsl:when>
			<xsl:otherwise># SENSORS_HMC5843 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_HMC5843_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_HMC5843_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_HMC5843_I2C=m</xsl:when>
			<xsl:otherwise># SENSORS_HMC5843_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SENSORS_HMC5843_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SENSORS_HMC5843_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">SENSORS_HMC5843_SPI=m</xsl:when>
			<xsl:otherwise># SENSORS_HMC5843_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_INCLINOMETER_3D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_INCLINOMETER_3D=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_INCLINOMETER_3D=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_INCLINOMETER_3D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_DEVICE_ROTATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_DEVICE_ROTATION=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_DEVICE_ROTATION=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_DEVICE_ROTATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_HRTIMER_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_HRTIMER_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_HRTIMER_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_HRTIMER_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_INTERRUPT_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_INTERRUPT_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_INTERRUPT_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_INTERRUPT_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_TIGHTLOOP_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_TIGHTLOOP_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_TIGHTLOOP_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_TIGHTLOOP_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_SYSFS_TRIGGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_SYSFS_TRIGGER=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_SYSFS_TRIGGER=m</xsl:when>
			<xsl:otherwise># IIO_SYSFS_TRIGGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DS1803">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DS1803=y</xsl:when>
			<xsl:when test=". = 'module'">DS1803=m</xsl:when>
			<xsl:otherwise># DS1803 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MAX5487">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MAX5487=y</xsl:when>
			<xsl:when test=". = 'module'">MAX5487=m</xsl:when>
			<xsl:otherwise># MAX5487 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP4131">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP4131=y</xsl:when>
			<xsl:when test=". = 'module'">MCP4131=m</xsl:when>
			<xsl:otherwise># MCP4131 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCP4531">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCP4531=y</xsl:when>
			<xsl:when test=". = 'module'">MCP4531=m</xsl:when>
			<xsl:otherwise># MCP4531 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TPL0102">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TPL0102=y</xsl:when>
			<xsl:when test=". = 'module'">TPL0102=m</xsl:when>
			<xsl:otherwise># TPL0102 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP280">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP280=y</xsl:when>
			<xsl:when test=". = 'module'">BMP280=m</xsl:when>
			<xsl:otherwise># BMP280 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP280_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP280_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">BMP280_I2C=m</xsl:when>
			<xsl:otherwise># BMP280_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BMP280_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BMP280_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">BMP280_SPI=m</xsl:when>
			<xsl:otherwise># BMP280_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HID_SENSOR_PRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HID_SENSOR_PRESS=y</xsl:when>
			<xsl:when test=". = 'module'">HID_SENSOR_PRESS=m</xsl:when>
			<xsl:otherwise># HID_SENSOR_PRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP03">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP03=y</xsl:when>
			<xsl:when test=". = 'module'">HP03=m</xsl:when>
			<xsl:otherwise># HP03 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPL115">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPL115=y</xsl:when>
			<xsl:when test=". = 'module'">MPL115=m</xsl:when>
			<xsl:otherwise># MPL115 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPL115_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPL115_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MPL115_I2C=m</xsl:when>
			<xsl:otherwise># MPL115_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPL115_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPL115_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MPL115_SPI=m</xsl:when>
			<xsl:otherwise># MPL115_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPL3115">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPL3115=y</xsl:when>
			<xsl:when test=". = 'module'">MPL3115=m</xsl:when>
			<xsl:otherwise># MPL3115 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MS5611">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MS5611=y</xsl:when>
			<xsl:when test=". = 'module'">MS5611=m</xsl:when>
			<xsl:otherwise># MS5611 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MS5611_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MS5611_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">MS5611_I2C=m</xsl:when>
			<xsl:otherwise># MS5611_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MS5611_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MS5611_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">MS5611_SPI=m</xsl:when>
			<xsl:otherwise># MS5611_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MS5637">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MS5637=y</xsl:when>
			<xsl:when test=". = 'module'">MS5637=m</xsl:when>
			<xsl:otherwise># MS5637 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_PRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_PRESS=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_PRESS=m</xsl:when>
			<xsl:otherwise># IIO_ST_PRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_PRESS_I2C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_PRESS_I2C=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_PRESS_I2C=m</xsl:when>
			<xsl:otherwise># IIO_ST_PRESS_I2C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IIO_ST_PRESS_SPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IIO_ST_PRESS_SPI=y</xsl:when>
			<xsl:when test=". = 'module'">IIO_ST_PRESS_SPI=m</xsl:when>
			<xsl:otherwise># IIO_ST_PRESS_SPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="T5403">
		<xsl:choose>
			<xsl:when test=". = 'yes'">T5403=y</xsl:when>
			<xsl:when test=". = 'module'">T5403=m</xsl:when>
			<xsl:otherwise># T5403 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HP206C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HP206C=y</xsl:when>
			<xsl:when test=". = 'module'">HP206C=m</xsl:when>
			<xsl:otherwise># HP206C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AS3935">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AS3935=y</xsl:when>
			<xsl:when test=". = 'module'">AS3935=m</xsl:when>
			<xsl:otherwise># AS3935 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIDAR_LITE_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIDAR_LITE_V2=y</xsl:when>
			<xsl:when test=". = 'module'">LIDAR_LITE_V2=m</xsl:when>
			<xsl:otherwise># LIDAR_LITE_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SX9500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SX9500=y</xsl:when>
			<xsl:when test=". = 'module'">SX9500=m</xsl:when>
			<xsl:otherwise># SX9500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MLX90614">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MLX90614=y</xsl:when>
			<xsl:when test=". = 'module'">MLX90614=m</xsl:when>
			<xsl:otherwise># MLX90614 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TMP006">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TMP006=y</xsl:when>
			<xsl:when test=". = 'module'">TMP006=m</xsl:when>
			<xsl:otherwise># TMP006 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSYS01">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSYS01=y</xsl:when>
			<xsl:when test=". = 'module'">TSYS01=m</xsl:when>
			<xsl:otherwise># TSYS01 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TSYS02D">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TSYS02D=y</xsl:when>
			<xsl:when test=". = 'module'">TSYS02D=m</xsl:when>
			<xsl:otherwise># TSYS02D is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB=y</xsl:when>
			<xsl:when test=". = 'module'">NTB=m</xsl:when>
			<xsl:otherwise># NTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_AMD=m</xsl:when>
			<xsl:otherwise># NTB_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_INTEL=m</xsl:when>
			<xsl:otherwise># NTB_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_PINGPONG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_PINGPONG=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_PINGPONG=m</xsl:when>
			<xsl:otherwise># NTB_PINGPONG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_TOOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_TOOL=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_TOOL=m</xsl:when>
			<xsl:otherwise># NTB_TOOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_PERF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_PERF=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_PERF=m</xsl:when>
			<xsl:otherwise># NTB_PERF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTB_TRANSPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTB_TRANSPORT=y</xsl:when>
			<xsl:when test=". = 'module'">NTB_TRANSPORT=m</xsl:when>
			<xsl:otherwise># NTB_TRANSPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VME_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VME_BUS=y</xsl:when>
			<xsl:otherwise># VME_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VME_CA91CX42">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VME_CA91CX42=y</xsl:when>
			<xsl:when test=". = 'module'">VME_CA91CX42=m</xsl:when>
			<xsl:otherwise># VME_CA91CX42 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VME_TSI148">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VME_TSI148=y</xsl:when>
			<xsl:when test=". = 'module'">VME_TSI148=m</xsl:when>
			<xsl:otherwise># VME_TSI148 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VMIVME_7805">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VMIVME_7805=y</xsl:when>
			<xsl:when test=". = 'module'">VMIVME_7805=m</xsl:when>
			<xsl:otherwise># VMIVME_7805 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VME_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VME_USER=y</xsl:when>
			<xsl:when test=". = 'module'">VME_USER=m</xsl:when>
			<xsl:otherwise># VME_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VME_PIO2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VME_PIO2=y</xsl:when>
			<xsl:when test=". = 'module'">VME_PIO2=m</xsl:when>
			<xsl:otherwise># VME_PIO2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM=y</xsl:when>
			<xsl:otherwise># PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_SYSFS=y</xsl:when>
			<xsl:otherwise># PWM_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_AB8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_AB8500=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_AB8500=m</xsl:when>
			<xsl:otherwise># PWM_AB8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_ATMEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_ATMEL=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_ATMEL=m</xsl:when>
			<xsl:otherwise># PWM_ATMEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_ATMEL_HLCDC_PWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_ATMEL_HLCDC_PWM=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_ATMEL_HLCDC_PWM=m</xsl:when>
			<xsl:otherwise># PWM_ATMEL_HLCDC_PWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_ATMEL_TCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_ATMEL_TCB=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_ATMEL_TCB=m</xsl:when>
			<xsl:otherwise># PWM_ATMEL_TCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BCM_IPROC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BCM_IPROC=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BCM_IPROC=m</xsl:when>
			<xsl:otherwise># PWM_BCM_IPROC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BCM_KONA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BCM_KONA=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BCM_KONA=m</xsl:when>
			<xsl:otherwise># PWM_BCM_KONA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BCM2835">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BCM2835=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BCM2835=m</xsl:when>
			<xsl:otherwise># PWM_BCM2835 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BERLIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BERLIN=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BERLIN=m</xsl:when>
			<xsl:otherwise># PWM_BERLIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BFIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BFIN=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BFIN=m</xsl:when>
			<xsl:otherwise># PWM_BFIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_BRCMSTB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_BRCMSTB=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_BRCMSTB=m</xsl:when>
			<xsl:otherwise># PWM_BRCMSTB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_CLPS711X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_CLPS711X=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_CLPS711X=m</xsl:when>
			<xsl:otherwise># PWM_CLPS711X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_CRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_CRC=y</xsl:when>
			<xsl:otherwise># PWM_CRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_CROS_EC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_CROS_EC=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_CROS_EC=m</xsl:when>
			<xsl:otherwise># PWM_CROS_EC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_EP93XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_EP93XX=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_EP93XX=m</xsl:when>
			<xsl:otherwise># PWM_EP93XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_FSL_FTM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_FSL_FTM=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_FSL_FTM=m</xsl:when>
			<xsl:otherwise># PWM_FSL_FTM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_IMG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_IMG=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_IMG=m</xsl:when>
			<xsl:otherwise># PWM_IMG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_IMX=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_IMX=m</xsl:when>
			<xsl:otherwise># PWM_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_JZ4740">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_JZ4740=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_JZ4740=m</xsl:when>
			<xsl:otherwise># PWM_JZ4740 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LP3943">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LP3943=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LP3943=m</xsl:when>
			<xsl:otherwise># PWM_LP3943 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LPC18XX_SCT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LPC18XX_SCT=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LPC18XX_SCT=m</xsl:when>
			<xsl:otherwise># PWM_LPC18XX_SCT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LPC32XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LPC32XX=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LPC32XX=m</xsl:when>
			<xsl:otherwise># PWM_LPC32XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LPSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LPSS=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LPSS=m</xsl:when>
			<xsl:otherwise># PWM_LPSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LPSS_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LPSS_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LPSS_PCI=m</xsl:when>
			<xsl:otherwise># PWM_LPSS_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_LPSS_PLATFORM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_LPSS_PLATFORM=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_LPSS_PLATFORM=m</xsl:when>
			<xsl:otherwise># PWM_LPSS_PLATFORM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_MTK_DISP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_MTK_DISP=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_MTK_DISP=m</xsl:when>
			<xsl:otherwise># PWM_MTK_DISP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_MXS=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_MXS=m</xsl:when>
			<xsl:otherwise># PWM_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_OMAP_DMTIMER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_OMAP_DMTIMER=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_OMAP_DMTIMER=m</xsl:when>
			<xsl:otherwise># PWM_OMAP_DMTIMER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_PCA9685">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_PCA9685=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_PCA9685=m</xsl:when>
			<xsl:otherwise># PWM_PCA9685 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_PUV3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_PUV3=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_PUV3=m</xsl:when>
			<xsl:otherwise># PWM_PUV3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_PXA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_PXA=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_PXA=m</xsl:when>
			<xsl:otherwise># PWM_PXA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_RCAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_RCAR=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_RCAR=m</xsl:when>
			<xsl:otherwise># PWM_RCAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_RENESAS_TPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_RENESAS_TPU=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_RENESAS_TPU=m</xsl:when>
			<xsl:otherwise># PWM_RENESAS_TPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># PWM_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_SAMSUNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_SAMSUNG=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_SAMSUNG=m</xsl:when>
			<xsl:otherwise># PWM_SAMSUNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_SPEAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_SPEAR=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_SPEAR=m</xsl:when>
			<xsl:otherwise># PWM_SPEAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_STI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_STI=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_STI=m</xsl:when>
			<xsl:otherwise># PWM_STI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_STMPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_STMPE=y</xsl:when>
			<xsl:otherwise># PWM_STMPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_SUN4I">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_SUN4I=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_SUN4I=m</xsl:when>
			<xsl:otherwise># PWM_SUN4I is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TEGRA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TEGRA=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_TEGRA=m</xsl:when>
			<xsl:otherwise># PWM_TEGRA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TIECAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TIECAP=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_TIECAP=m</xsl:when>
			<xsl:otherwise># PWM_TIECAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TIEHRPWM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TIEHRPWM=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_TIEHRPWM=m</xsl:when>
			<xsl:otherwise># PWM_TIEHRPWM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TIPWMSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TIPWMSS=y</xsl:when>
			<xsl:otherwise># PWM_TIPWMSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TWL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TWL=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_TWL=m</xsl:when>
			<xsl:otherwise># PWM_TWL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_TWL_LED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_TWL_LED=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_TWL_LED=m</xsl:when>
			<xsl:otherwise># PWM_TWL_LED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PWM_VT8500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PWM_VT8500=y</xsl:when>
			<xsl:when test=". = 'module'">PWM_VT8500=m</xsl:when>
			<xsl:otherwise># PWM_VT8500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQCHIP=y</xsl:when>
			<xsl:otherwise># IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GIC=y</xsl:when>
			<xsl:otherwise># ARM_GIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GIC_PM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GIC_PM=y</xsl:when>
			<xsl:otherwise># ARM_GIC_PM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GIC_MAX_NR">
		ARM_GIC_MAX_NR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARM_GIC_V2M">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GIC_V2M=y</xsl:when>
			<xsl:otherwise># ARM_GIC_V2M is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GIC_NON_BANKED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GIC_NON_BANKED=y</xsl:when>
			<xsl:otherwise># GIC_NON_BANKED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GIC_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GIC_V3=y</xsl:when>
			<xsl:otherwise># ARM_GIC_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_GIC_V3_ITS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_GIC_V3_ITS=y</xsl:when>
			<xsl:otherwise># ARM_GIC_V3_ITS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_NVIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_NVIC=y</xsl:when>
			<xsl:otherwise># ARM_NVIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_VIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_VIC=y</xsl:when>
			<xsl:otherwise># ARM_VIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_VIC_NR">
		ARM_VIC_NR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="ARMADA_370_XP_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA_370_XP_IRQ=y</xsl:when>
			<xsl:otherwise># ARMADA_370_XP_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ALPINE_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ALPINE_MSI=y</xsl:when>
			<xsl:otherwise># ALPINE_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_AIC_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_AIC_IRQ=y</xsl:when>
			<xsl:otherwise># ATMEL_AIC_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ATMEL_AIC5_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ATMEL_AIC5_IRQ=y</xsl:when>
			<xsl:otherwise># ATMEL_AIC5_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="I8259">
		<xsl:choose>
			<xsl:when test=". = 'yes'">I8259=y</xsl:when>
			<xsl:otherwise># I8259 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM6345_L1_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM6345_L1_IRQ=y</xsl:when>
			<xsl:otherwise># BCM6345_L1_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM7038_L1_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM7038_L1_IRQ=y</xsl:when>
			<xsl:otherwise># BCM7038_L1_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM7120_L2_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM7120_L2_IRQ=y</xsl:when>
			<xsl:otherwise># BCM7120_L2_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BRCMSTB_L2_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BRCMSTB_L2_IRQ=y</xsl:when>
			<xsl:otherwise># BRCMSTB_L2_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DW_APB_ICTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DW_APB_ICTL=y</xsl:when>
			<xsl:otherwise># DW_APB_ICTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HISILICON_IRQ_MBIGEN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HISILICON_IRQ_MBIGEN=y</xsl:when>
			<xsl:otherwise># HISILICON_IRQ_MBIGEN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMGPDC_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMGPDC_IRQ=y</xsl:when>
			<xsl:otherwise># IMGPDC_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_MIPS_CPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_MIPS_CPU=y</xsl:when>
			<xsl:otherwise># IRQ_MIPS_CPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLPS711X_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLPS711X_IRQCHIP=y</xsl:when>
			<xsl:otherwise># CLPS711X_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OR1K_PIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OR1K_PIC=y</xsl:when>
			<xsl:otherwise># OR1K_PIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_IRQCHIP=y</xsl:when>
			<xsl:otherwise># OMAP_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORION_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORION_IRQCHIP=y</xsl:when>
			<xsl:otherwise># ORION_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PIC32_EVIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PIC32_EVIC=y</xsl:when>
			<xsl:otherwise># PIC32_EVIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_INTC_IRQPIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_INTC_IRQPIN=y</xsl:when>
			<xsl:otherwise># RENESAS_INTC_IRQPIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_IRQC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_IRQC=y</xsl:when>
			<xsl:otherwise># RENESAS_IRQC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ST_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ST_IRQCHIP=y</xsl:when>
			<xsl:otherwise># ST_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TANGO_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TANGO_IRQ=y</xsl:when>
			<xsl:otherwise># TANGO_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TB10X_IRQC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TB10X_IRQC=y</xsl:when>
			<xsl:otherwise># TB10X_IRQC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TS4800_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TS4800_IRQ=y</xsl:when>
			<xsl:when test=". = 'module'">TS4800_IRQ=m</xsl:when>
			<xsl:otherwise># TS4800_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VERSATILE_FPGA_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VERSATILE_FPGA_IRQ=y</xsl:when>
			<xsl:otherwise># VERSATILE_FPGA_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VERSATILE_FPGA_IRQ_NR">
		VERSATILE_FPGA_IRQ_NR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="XTENSA_MX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XTENSA_MX=y</xsl:when>
			<xsl:otherwise># XTENSA_MX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_CROSSBAR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_CROSSBAR=y</xsl:when>
			<xsl:otherwise># IRQ_CROSSBAR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYSTONE_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYSTONE_IRQ=y</xsl:when>
			<xsl:when test=". = 'module'">KEYSTONE_IRQ=m</xsl:when>
			<xsl:otherwise># KEYSTONE_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MIPS_GIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MIPS_GIC=y</xsl:when>
			<xsl:otherwise># MIPS_GIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INGENIC_IRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INGENIC_IRQ=y</xsl:when>
			<xsl:otherwise># INGENIC_IRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_H8300H_INTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_H8300H_INTC=y</xsl:when>
			<xsl:otherwise># RENESAS_H8300H_INTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RENESAS_H8S_INTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RENESAS_H8S_INTC=y</xsl:when>
			<xsl:otherwise># RENESAS_H8S_INTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMX_GPCV2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMX_GPCV2=y</xsl:when>
			<xsl:otherwise># IMX_GPCV2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_MXS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_MXS=y</xsl:when>
			<xsl:otherwise># IRQ_MXS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MVEBU_ODMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MVEBU_ODMI=y</xsl:when>
			<xsl:otherwise># MVEBU_ODMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LS_SCFG_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LS_SCFG_MSI=y</xsl:when>
			<xsl:otherwise># LS_SCFG_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PARTITION_PERCPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PARTITION_PERCPU=y</xsl:when>
			<xsl:otherwise># PARTITION_PERCPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EZNPS_GIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EZNPS_GIC=y</xsl:when>
			<xsl:otherwise># EZNPS_GIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IPACK_BUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IPACK_BUS=y</xsl:when>
			<xsl:when test=". = 'module'">IPACK_BUS=m</xsl:when>
			<xsl:otherwise># IPACK_BUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BOARD_TPCI200">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BOARD_TPCI200=y</xsl:when>
			<xsl:when test=". = 'module'">BOARD_TPCI200=m</xsl:when>
			<xsl:otherwise># BOARD_TPCI200 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SERIAL_IPOCTAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SERIAL_IPOCTAL=y</xsl:when>
			<xsl:when test=". = 'module'">SERIAL_IPOCTAL=m</xsl:when>
			<xsl:otherwise># SERIAL_IPOCTAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_RESET_CONTROLLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_RESET_CONTROLLER=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_RESET_CONTROLLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RESET_CONTROLLER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RESET_CONTROLLER=y</xsl:when>
			<xsl:otherwise># RESET_CONTROLLER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RESET_OXNAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RESET_OXNAS=y</xsl:when>
			<xsl:otherwise># RESET_OXNAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_SYSCON_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_SYSCON_RESET=y</xsl:when>
			<xsl:when test=". = 'module'">TI_SYSCON_RESET=m</xsl:when>
			<xsl:otherwise># TI_SYSCON_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STI_RESET_SYSCFG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STI_RESET_SYSCFG=y</xsl:when>
			<xsl:otherwise># STI_RESET_SYSCFG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STIH415_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STIH415_RESET=y</xsl:when>
			<xsl:otherwise># STIH415_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STIH416_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STIH416_RESET=y</xsl:when>
			<xsl:otherwise># STIH416_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STIH407_RESET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STIH407_RESET=y</xsl:when>
			<xsl:otherwise># STIH407_RESET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="COMMON_RESET_HI6220">
		<xsl:choose>
			<xsl:when test=". = 'yes'">COMMON_RESET_HI6220=y</xsl:when>
			<xsl:when test=". = 'module'">COMMON_RESET_HI6220=m</xsl:when>
			<xsl:otherwise># COMMON_RESET_HI6220 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FMC=y</xsl:when>
			<xsl:when test=". = 'module'">FMC=m</xsl:when>
			<xsl:otherwise># FMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_PHY=y</xsl:when>
			<xsl:otherwise># GENERIC_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_BCM_NS_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_BCM_NS_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_BCM_NS_USB2=m</xsl:when>
			<xsl:otherwise># PHY_BCM_NS_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_BERLIN_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_BERLIN_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_BERLIN_USB=m</xsl:when>
			<xsl:otherwise># PHY_BERLIN_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_BERLIN_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_BERLIN_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_BERLIN_SATA=m</xsl:when>
			<xsl:otherwise># PHY_BERLIN_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARMADA375_USBCLUSTER_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARMADA375_USBCLUSTER_PHY=y</xsl:when>
			<xsl:otherwise># ARMADA375_USBCLUSTER_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_DA8XX_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_DA8XX_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_DA8XX_USB=m</xsl:when>
			<xsl:otherwise># PHY_DA8XX_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_DM816X_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_DM816X_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_DM816X_USB=m</xsl:when>
			<xsl:otherwise># PHY_DM816X_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS_MIPI_VIDEO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS_MIPI_VIDEO=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_EXYNOS_MIPI_VIDEO=m</xsl:when>
			<xsl:otherwise># PHY_EXYNOS_MIPI_VIDEO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_LPC18XX_USB_OTG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_LPC18XX_USB_OTG=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_LPC18XX_USB_OTG=m</xsl:when>
			<xsl:otherwise># PHY_LPC18XX_USB_OTG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_PXA_28NM_HSIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_PXA_28NM_HSIC=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_PXA_28NM_HSIC=m</xsl:when>
			<xsl:otherwise># PHY_PXA_28NM_HSIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_PXA_28NM_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_PXA_28NM_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_PXA_28NM_USB2=m</xsl:when>
			<xsl:otherwise># PHY_PXA_28NM_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_MVEBU_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_MVEBU_SATA=y</xsl:when>
			<xsl:otherwise># PHY_MVEBU_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_MIPHY28LP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_MIPHY28LP=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_MIPHY28LP=m</xsl:when>
			<xsl:otherwise># PHY_MIPHY28LP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_MIPHY365X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_MIPHY365X=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_MIPHY365X=m</xsl:when>
			<xsl:otherwise># PHY_MIPHY365X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_RCAR_GEN2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_RCAR_GEN2=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_RCAR_GEN2=m</xsl:when>
			<xsl:otherwise># PHY_RCAR_GEN2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_RCAR_GEN3_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_RCAR_GEN3_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_RCAR_GEN3_USB2=m</xsl:when>
			<xsl:otherwise># PHY_RCAR_GEN3_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_CONTROL_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_CONTROL_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_CONTROL_PHY=m</xsl:when>
			<xsl:otherwise># OMAP_CONTROL_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMAP_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMAP_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">OMAP_USB2=m</xsl:when>
			<xsl:otherwise># OMAP_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TI_PIPE3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TI_PIPE3=y</xsl:when>
			<xsl:when test=". = 'module'">TI_PIPE3=m</xsl:when>
			<xsl:otherwise># TI_PIPE3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TWL4030_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TWL4030_USB=y</xsl:when>
			<xsl:when test=". = 'module'">TWL4030_USB=m</xsl:when>
			<xsl:otherwise># TWL4030_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS_DP_VIDEO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS_DP_VIDEO=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_EXYNOS_DP_VIDEO=m</xsl:when>
			<xsl:otherwise># PHY_EXYNOS_DP_VIDEO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM_KONA_USB2_PHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM_KONA_USB2_PHY=y</xsl:when>
			<xsl:when test=". = 'module'">BCM_KONA_USB2_PHY=m</xsl:when>
			<xsl:otherwise># BCM_KONA_USB2_PHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS5250_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS5250_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_EXYNOS5250_SATA=m</xsl:when>
			<xsl:otherwise># PHY_EXYNOS5250_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_HIX5HD2_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_HIX5HD2_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_HIX5HD2_SATA=m</xsl:when>
			<xsl:otherwise># PHY_HIX5HD2_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_MT65XX_USB3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_MT65XX_USB3=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_MT65XX_USB3=m</xsl:when>
			<xsl:otherwise># PHY_MT65XX_USB3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_HI6220_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_HI6220_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_HI6220_USB=m</xsl:when>
			<xsl:otherwise># PHY_HI6220_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_SUN4I_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_SUN4I_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_SUN4I_USB=m</xsl:when>
			<xsl:otherwise># PHY_SUN4I_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_SUN9I_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_SUN9I_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_SUN9I_USB=m</xsl:when>
			<xsl:otherwise># PHY_SUN9I_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_SAMSUNG_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_SAMSUNG_USB2=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_SAMSUNG_USB2=m</xsl:when>
			<xsl:otherwise># PHY_SAMSUNG_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_S5PV210_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_S5PV210_USB2=y</xsl:when>
			<xsl:otherwise># PHY_S5PV210_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS4210_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS4210_USB2=y</xsl:when>
			<xsl:otherwise># PHY_EXYNOS4210_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS4X12_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS4X12_USB2=y</xsl:when>
			<xsl:otherwise># PHY_EXYNOS4X12_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS5250_USB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS5250_USB2=y</xsl:when>
			<xsl:otherwise># PHY_EXYNOS5250_USB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_EXYNOS5_USBDRD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_EXYNOS5_USBDRD=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_EXYNOS5_USBDRD=m</xsl:when>
			<xsl:otherwise># PHY_EXYNOS5_USBDRD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_PISTACHIO_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_PISTACHIO_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_PISTACHIO_USB=m</xsl:when>
			<xsl:otherwise># PHY_PISTACHIO_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_QCOM_APQ8064_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_QCOM_APQ8064_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_QCOM_APQ8064_SATA=m</xsl:when>
			<xsl:otherwise># PHY_QCOM_APQ8064_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_QCOM_IPQ806X_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_QCOM_IPQ806X_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_QCOM_IPQ806X_SATA=m</xsl:when>
			<xsl:otherwise># PHY_QCOM_IPQ806X_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_ROCKCHIP_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_ROCKCHIP_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_ROCKCHIP_USB=m</xsl:when>
			<xsl:otherwise># PHY_ROCKCHIP_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_ROCKCHIP_EMMC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_ROCKCHIP_EMMC=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_ROCKCHIP_EMMC=m</xsl:when>
			<xsl:otherwise># PHY_ROCKCHIP_EMMC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_ROCKCHIP_DP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_ROCKCHIP_DP=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_ROCKCHIP_DP=m</xsl:when>
			<xsl:otherwise># PHY_ROCKCHIP_DP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_ST_SPEAR1310_MIPHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_ST_SPEAR1310_MIPHY=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_ST_SPEAR1310_MIPHY=m</xsl:when>
			<xsl:otherwise># PHY_ST_SPEAR1310_MIPHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_ST_SPEAR1340_MIPHY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_ST_SPEAR1340_MIPHY=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_ST_SPEAR1340_MIPHY=m</xsl:when>
			<xsl:otherwise># PHY_ST_SPEAR1340_MIPHY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_XGENE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_XGENE=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_XGENE=m</xsl:when>
			<xsl:otherwise># PHY_XGENE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_STIH407_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_STIH407_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_STIH407_USB=m</xsl:when>
			<xsl:otherwise># PHY_STIH407_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_STIH41X_USB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_STIH41X_USB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_STIH41X_USB=m</xsl:when>
			<xsl:otherwise># PHY_STIH41X_USB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_QCOM_UFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_QCOM_UFS=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_QCOM_UFS=m</xsl:when>
			<xsl:otherwise># PHY_QCOM_UFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_TUSB1210">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_TUSB1210=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_TUSB1210=m</xsl:when>
			<xsl:otherwise># PHY_TUSB1210 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_BRCM_SATA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_BRCM_SATA=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_BRCM_SATA=m</xsl:when>
			<xsl:otherwise># PHY_BRCM_SATA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_CYGNUS_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_CYGNUS_PCIE=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_CYGNUS_PCIE=m</xsl:when>
			<xsl:otherwise># PHY_CYGNUS_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_TEGRA_XUSB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_TEGRA_XUSB=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_TEGRA_XUSB=m</xsl:when>
			<xsl:otherwise># PHY_TEGRA_XUSB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PHY_NS2_PCIE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PHY_NS2_PCIE=y</xsl:when>
			<xsl:when test=". = 'module'">PHY_NS2_PCIE=m</xsl:when>
			<xsl:otherwise># PHY_NS2_PCIE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="POWERCAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">POWERCAP=y</xsl:when>
			<xsl:otherwise># POWERCAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_RAPL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_RAPL=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_RAPL=m</xsl:when>
			<xsl:otherwise># INTEL_RAPL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCB=y</xsl:when>
			<xsl:when test=". = 'module'">MCB=m</xsl:when>
			<xsl:otherwise># MCB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_PMU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_PMU=y</xsl:when>
			<xsl:otherwise># ARM_PMU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAS=y</xsl:when>
			<xsl:otherwise># RAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MCE_AMD_INJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MCE_AMD_INJ=y</xsl:when>
			<xsl:when test=". = 'module'">MCE_AMD_INJ=m</xsl:when>
			<xsl:otherwise># MCE_AMD_INJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="THUNDERBOLT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">THUNDERBOLT=y</xsl:when>
			<xsl:when test=". = 'module'">THUNDERBOLT=m</xsl:when>
			<xsl:otherwise># THUNDERBOLT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANDROID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANDROID=y</xsl:when>
			<xsl:otherwise># ANDROID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANDROID_BINDER_IPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANDROID_BINDER_IPC=y</xsl:when>
			<xsl:otherwise># ANDROID_BINDER_IPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ANDROID_BINDER_IPC_32BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ANDROID_BINDER_IPC_32BIT=y</xsl:when>
			<xsl:otherwise># ANDROID_BINDER_IPC_32BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBNVDIMM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBNVDIMM=y</xsl:when>
			<xsl:when test=". = 'module'">LIBNVDIMM=m</xsl:when>
			<xsl:otherwise># LIBNVDIMM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BLK_DEV_PMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BLK_DEV_PMEM=y</xsl:when>
			<xsl:when test=". = 'module'">BLK_DEV_PMEM=m</xsl:when>
			<xsl:otherwise># BLK_DEV_PMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ND_BLK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ND_BLK=y</xsl:when>
			<xsl:when test=". = 'module'">ND_BLK=m</xsl:when>
			<xsl:otherwise># ND_BLK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ND_CLAIM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ND_CLAIM=y</xsl:when>
			<xsl:otherwise># ND_CLAIM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ND_BTT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ND_BTT=y</xsl:when>
			<xsl:when test=". = 'module'">ND_BTT=m</xsl:when>
			<xsl:otherwise># ND_BTT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTT=y</xsl:when>
			<xsl:otherwise># BTT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ND_PFN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ND_PFN=y</xsl:when>
			<xsl:when test=". = 'module'">ND_PFN=m</xsl:when>
			<xsl:otherwise># ND_PFN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVDIMM_PFN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVDIMM_PFN=y</xsl:when>
			<xsl:otherwise># NVDIMM_PFN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVDIMM_DAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVDIMM_DAX=y</xsl:when>
			<xsl:otherwise># NVDIMM_DAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEV_DAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEV_DAX=y</xsl:when>
			<xsl:when test=". = 'module'">DEV_DAX=m</xsl:when>
			<xsl:otherwise># DEV_DAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEV_DAX_PMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEV_DAX_PMEM=y</xsl:when>
			<xsl:when test=". = 'module'">DEV_DAX_PMEM=m</xsl:when>
			<xsl:otherwise># DEV_DAX_PMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM=m</xsl:when>
			<xsl:otherwise># NVMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM_IMX_OCOTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM_IMX_OCOTP=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM_IMX_OCOTP=m</xsl:when>
			<xsl:otherwise># NVMEM_IMX_OCOTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM_LPC18XX_EEPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM_LPC18XX_EEPROM=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM_LPC18XX_EEPROM=m</xsl:when>
			<xsl:otherwise># NVMEM_LPC18XX_EEPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM_MXS_OCOTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM_MXS_OCOTP=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM_MXS_OCOTP=m</xsl:when>
			<xsl:otherwise># NVMEM_MXS_OCOTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MTK_EFUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MTK_EFUSE=y</xsl:when>
			<xsl:when test=". = 'module'">MTK_EFUSE=m</xsl:when>
			<xsl:otherwise># MTK_EFUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_QFPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_QFPROM=y</xsl:when>
			<xsl:when test=". = 'module'">QCOM_QFPROM=m</xsl:when>
			<xsl:otherwise># QCOM_QFPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROCKCHIP_EFUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROCKCHIP_EFUSE=y</xsl:when>
			<xsl:when test=". = 'module'">ROCKCHIP_EFUSE=m</xsl:when>
			<xsl:otherwise># ROCKCHIP_EFUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM_SUNXI_SID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM_SUNXI_SID=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM_SUNXI_SID=m</xsl:when>
			<xsl:otherwise># NVMEM_SUNXI_SID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NVMEM_VF610_OCOTP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NVMEM_VF610_OCOTP=y</xsl:when>
			<xsl:when test=". = 'module'">NVMEM_VF610_OCOTP=m</xsl:when>
			<xsl:otherwise># NVMEM_VF610_OCOTP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STM=y</xsl:when>
			<xsl:when test=". = 'module'">STM=m</xsl:when>
			<xsl:otherwise># STM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STM_DUMMY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STM_DUMMY=y</xsl:when>
			<xsl:when test=". = 'module'">STM_DUMMY=m</xsl:when>
			<xsl:otherwise># STM_DUMMY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STM_SOURCE_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STM_SOURCE_CONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">STM_SOURCE_CONSOLE=m</xsl:when>
			<xsl:otherwise># STM_SOURCE_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STM_SOURCE_HEARTBEAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STM_SOURCE_HEARTBEAT=y</xsl:when>
			<xsl:when test=". = 'module'">STM_SOURCE_HEARTBEAT=m</xsl:when>
			<xsl:otherwise># STM_SOURCE_HEARTBEAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH=m</xsl:when>
			<xsl:otherwise># INTEL_TH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_PCI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_PCI=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH_PCI=m</xsl:when>
			<xsl:otherwise># INTEL_TH_PCI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_GTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_GTH=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH_GTH=m</xsl:when>
			<xsl:otherwise># INTEL_TH_GTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_STH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_STH=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH_STH=m</xsl:when>
			<xsl:otherwise># INTEL_TH_STH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_MSU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_MSU=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH_MSU=m</xsl:when>
			<xsl:otherwise># INTEL_TH_MSU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_PTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_PTI=y</xsl:when>
			<xsl:when test=". = 'module'">INTEL_TH_PTI=m</xsl:when>
			<xsl:otherwise># INTEL_TH_PTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TH_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TH_DEBUG=y</xsl:when>
			<xsl:otherwise># INTEL_TH_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FPGA=y</xsl:when>
			<xsl:when test=". = 'module'">FPGA=m</xsl:when>
			<xsl:otherwise># FPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FPGA_MGR_SOCFPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FPGA_MGR_SOCFPGA=y</xsl:when>
			<xsl:when test=". = 'module'">FPGA_MGR_SOCFPGA=m</xsl:when>
			<xsl:otherwise># FPGA_MGR_SOCFPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FPGA_MGR_ZYNQ_FPGA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FPGA_MGR_ZYNQ_FPGA=y</xsl:when>
			<xsl:when test=". = 'module'">FPGA_MGR_ZYNQ_FPGA=m</xsl:when>
			<xsl:otherwise># FPGA_MGR_ZYNQ_FPGA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_PSCI_FW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_PSCI_FW=y</xsl:when>
			<xsl:otherwise># ARM_PSCI_FW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SCPI_PROTOCOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SCPI_PROTOCOL=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_SCPI_PROTOCOL=m</xsl:when>
			<xsl:otherwise># ARM_SCPI_PROTOCOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARM_SCPI_POWER_DOMAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARM_SCPI_POWER_DOMAIN=y</xsl:when>
			<xsl:when test=". = 'module'">ARM_SCPI_POWER_DOMAIN=m</xsl:when>
			<xsl:otherwise># ARM_SCPI_POWER_DOMAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDD=y</xsl:when>
			<xsl:when test=". = 'module'">EDD=m</xsl:when>
			<xsl:otherwise># EDD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EDD_OFF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EDD_OFF=y</xsl:when>
			<xsl:otherwise># EDD_OFF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FIRMWARE_MEMMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FIRMWARE_MEMMAP=y</xsl:when>
			<xsl:otherwise># FIRMWARE_MEMMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_PCDP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_PCDP=y</xsl:when>
			<xsl:otherwise># EFI_PCDP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DELL_RBU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DELL_RBU=y</xsl:when>
			<xsl:when test=". = 'module'">DELL_RBU=m</xsl:when>
			<xsl:otherwise># DELL_RBU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DCDBAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DCDBAS=y</xsl:when>
			<xsl:when test=". = 'module'">DCDBAS=m</xsl:when>
			<xsl:otherwise># DCDBAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMIID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMIID=y</xsl:when>
			<xsl:otherwise># DMIID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMI_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMI_SYSFS=y</xsl:when>
			<xsl:when test=". = 'module'">DMI_SYSFS=m</xsl:when>
			<xsl:otherwise># DMI_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DMI_SCAN_MACHINE_NON_EFI_FALLBACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DMI_SCAN_MACHINE_NON_EFI_FALLBACK=y</xsl:when>
			<xsl:otherwise># DMI_SCAN_MACHINE_NON_EFI_FALLBACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_IBFT_FIND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_IBFT_FIND=y</xsl:when>
			<xsl:otherwise># ISCSI_IBFT_FIND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISCSI_IBFT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISCSI_IBFT=y</xsl:when>
			<xsl:when test=". = 'module'">ISCSI_IBFT=m</xsl:when>
			<xsl:otherwise># ISCSI_IBFT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RASPBERRYPI_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RASPBERRYPI_FIRMWARE=y</xsl:when>
			<xsl:when test=". = 'module'">RASPBERRYPI_FIRMWARE=m</xsl:when>
			<xsl:otherwise># RASPBERRYPI_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FW_CFG_SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FW_CFG_SYSFS=y</xsl:when>
			<xsl:when test=". = 'module'">FW_CFG_SYSFS=m</xsl:when>
			<xsl:otherwise># FW_CFG_SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FW_CFG_SYSFS_CMDLINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FW_CFG_SYSFS_CMDLINE=y</xsl:when>
			<xsl:otherwise># FW_CFG_SYSFS_CMDLINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SCM=y</xsl:when>
			<xsl:otherwise># QCOM_SCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SCM_32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SCM_32=y</xsl:when>
			<xsl:otherwise># QCOM_SCM_32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QCOM_SCM_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QCOM_SCM_64=y</xsl:when>
			<xsl:otherwise># QCOM_SCM_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARM_SMCCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARM_SMCCC=y</xsl:when>
			<xsl:otherwise># HAVE_ARM_SMCCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM47XX_NVRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM47XX_NVRAM=y</xsl:when>
			<xsl:otherwise># BCM47XX_NVRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCM47XX_SPROM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCM47XX_SPROM=y</xsl:when>
			<xsl:otherwise># BCM47XX_SPROM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOOGLE_FIRMWARE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOOGLE_FIRMWARE=y</xsl:when>
			<xsl:otherwise># GOOGLE_FIRMWARE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOOGLE_SMI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOOGLE_SMI=y</xsl:when>
			<xsl:when test=". = 'module'">GOOGLE_SMI=m</xsl:when>
			<xsl:otherwise># GOOGLE_SMI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GOOGLE_MEMCONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GOOGLE_MEMCONSOLE=y</xsl:when>
			<xsl:when test=". = 'module'">GOOGLE_MEMCONSOLE=m</xsl:when>
			<xsl:otherwise># GOOGLE_MEMCONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_VARS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_VARS=y</xsl:when>
			<xsl:when test=". = 'module'">EFI_VARS=m</xsl:when>
			<xsl:otherwise># EFI_VARS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_ESRT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_ESRT=y</xsl:when>
			<xsl:otherwise># EFI_ESRT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_VARS_PSTORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_VARS_PSTORE=y</xsl:when>
			<xsl:when test=". = 'module'">EFI_VARS_PSTORE=m</xsl:when>
			<xsl:otherwise># EFI_VARS_PSTORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_VARS_PSTORE_DEFAULT_DISABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_VARS_PSTORE_DEFAULT_DISABLE=y</xsl:when>
			<xsl:otherwise># EFI_VARS_PSTORE_DEFAULT_DISABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_RUNTIME_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_RUNTIME_MAP=y</xsl:when>
			<xsl:otherwise># EFI_RUNTIME_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_FAKE_MEMMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_FAKE_MEMMAP=y</xsl:when>
			<xsl:otherwise># EFI_FAKE_MEMMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_MAX_FAKE_MEM">
		EFI_MAX_FAKE_MEM=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="EFI_PARAMS_FROM_FDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_PARAMS_FROM_FDT=y</xsl:when>
			<xsl:otherwise># EFI_PARAMS_FROM_FDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_RUNTIME_WRAPPERS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_RUNTIME_WRAPPERS=y</xsl:when>
			<xsl:otherwise># EFI_RUNTIME_WRAPPERS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_ARMSTUB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_ARMSTUB=y</xsl:when>
			<xsl:otherwise># EFI_ARMSTUB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_BOOTLOADER_CONTROL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_BOOTLOADER_CONTROL=y</xsl:when>
			<xsl:when test=". = 'module'">EFI_BOOTLOADER_CONTROL=m</xsl:when>
			<xsl:otherwise># EFI_BOOTLOADER_CONTROL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_CAPSULE_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_CAPSULE_LOADER=y</xsl:when>
			<xsl:when test=". = 'module'">EFI_CAPSULE_LOADER=m</xsl:when>
			<xsl:otherwise># EFI_CAPSULE_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">EFI_TEST=m</xsl:when>
			<xsl:otherwise># EFI_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UEFI_CPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UEFI_CPER=y</xsl:when>
			<xsl:otherwise># UEFI_CPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DCACHE_WORD_ACCESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DCACHE_WORD_ACCESS=y</xsl:when>
			<xsl:otherwise># DCACHE_WORD_ACCESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_IOMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_IOMAP=y</xsl:when>
			<xsl:otherwise># FS_IOMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT2_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT2_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EXT2_FS=m</xsl:when>
			<xsl:otherwise># EXT2_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT2_FS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT2_FS_XATTR=y</xsl:when>
			<xsl:otherwise># EXT2_FS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT2_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT2_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># EXT2_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT2_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT2_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># EXT2_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT3_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT3_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EXT3_FS=m</xsl:when>
			<xsl:otherwise># EXT3_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT3_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT3_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># EXT3_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT3_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT3_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># EXT3_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EXT4_FS=m</xsl:when>
			<xsl:otherwise># EXT4_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_USE_FOR_EXT2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_USE_FOR_EXT2=y</xsl:when>
			<xsl:otherwise># EXT4_USE_FOR_EXT2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># EXT4_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># EXT4_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_ENCRYPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_ENCRYPTION=y</xsl:when>
			<xsl:otherwise># EXT4_ENCRYPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_FS_ENCRYPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_FS_ENCRYPTION=y</xsl:when>
			<xsl:otherwise># EXT4_FS_ENCRYPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXT4_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXT4_DEBUG=y</xsl:when>
			<xsl:otherwise># EXT4_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JBD2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JBD2=y</xsl:when>
			<xsl:when test=". = 'module'">JBD2=m</xsl:when>
			<xsl:otherwise># JBD2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JBD2_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JBD2_DEBUG=y</xsl:when>
			<xsl:otherwise># JBD2_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_MBCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_MBCACHE=y</xsl:when>
			<xsl:when test=". = 'module'">FS_MBCACHE=m</xsl:when>
			<xsl:otherwise># FS_MBCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">REISERFS_FS=m</xsl:when>
			<xsl:otherwise># REISERFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_CHECK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_CHECK=y</xsl:when>
			<xsl:otherwise># REISERFS_CHECK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_PROC_INFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_PROC_INFO=y</xsl:when>
			<xsl:otherwise># REISERFS_PROC_INFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_FS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_FS_XATTR=y</xsl:when>
			<xsl:otherwise># REISERFS_FS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># REISERFS_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REISERFS_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REISERFS_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># REISERFS_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">JFS_FS=m</xsl:when>
			<xsl:otherwise># JFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># JFS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFS_SECURITY=y</xsl:when>
			<xsl:otherwise># JFS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFS_DEBUG=y</xsl:when>
			<xsl:otherwise># JFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFS_STATISTICS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFS_STATISTICS=y</xsl:when>
			<xsl:otherwise># JFS_STATISTICS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">XFS_FS=m</xsl:when>
			<xsl:otherwise># XFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_QUOTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_QUOTA=y</xsl:when>
			<xsl:otherwise># XFS_QUOTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># XFS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_RT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_RT=y</xsl:when>
			<xsl:otherwise># XFS_RT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_WARN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_WARN=y</xsl:when>
			<xsl:otherwise># XFS_WARN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XFS_DEBUG=y</xsl:when>
			<xsl:otherwise># XFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GFS2_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GFS2_FS=y</xsl:when>
			<xsl:when test=". = 'module'">GFS2_FS=m</xsl:when>
			<xsl:otherwise># GFS2_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GFS2_FS_LOCKING_DLM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GFS2_FS_LOCKING_DLM=y</xsl:when>
			<xsl:otherwise># GFS2_FS_LOCKING_DLM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_FS=y</xsl:when>
			<xsl:when test=". = 'module'">OCFS2_FS=m</xsl:when>
			<xsl:otherwise># OCFS2_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_FS_O2CB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_FS_O2CB=y</xsl:when>
			<xsl:when test=". = 'module'">OCFS2_FS_O2CB=m</xsl:when>
			<xsl:otherwise># OCFS2_FS_O2CB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_FS_USERSPACE_CLUSTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_FS_USERSPACE_CLUSTER=y</xsl:when>
			<xsl:when test=". = 'module'">OCFS2_FS_USERSPACE_CLUSTER=m</xsl:when>
			<xsl:otherwise># OCFS2_FS_USERSPACE_CLUSTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_FS_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_FS_STATS=y</xsl:when>
			<xsl:otherwise># OCFS2_FS_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_DEBUG_MASKLOG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_DEBUG_MASKLOG=y</xsl:when>
			<xsl:otherwise># OCFS2_DEBUG_MASKLOG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OCFS2_DEBUG_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OCFS2_DEBUG_FS=y</xsl:when>
			<xsl:otherwise># OCFS2_DEBUG_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">BTRFS_FS=m</xsl:when>
			<xsl:otherwise># BTRFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># BTRFS_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_FS_CHECK_INTEGRITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_FS_CHECK_INTEGRITY=y</xsl:when>
			<xsl:otherwise># BTRFS_FS_CHECK_INTEGRITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_FS_RUN_SANITY_TESTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_FS_RUN_SANITY_TESTS=y</xsl:when>
			<xsl:otherwise># BTRFS_FS_RUN_SANITY_TESTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_DEBUG=y</xsl:when>
			<xsl:otherwise># BTRFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTRFS_ASSERT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTRFS_ASSERT=y</xsl:when>
			<xsl:otherwise># BTRFS_ASSERT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NILFS2_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NILFS2_FS=y</xsl:when>
			<xsl:when test=". = 'module'">NILFS2_FS=m</xsl:when>
			<xsl:otherwise># NILFS2_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">F2FS_FS=m</xsl:when>
			<xsl:otherwise># F2FS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_STAT_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_STAT_FS=y</xsl:when>
			<xsl:otherwise># F2FS_STAT_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FS_XATTR=y</xsl:when>
			<xsl:otherwise># F2FS_FS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># F2FS_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># F2FS_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_CHECK_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_CHECK_FS=y</xsl:when>
			<xsl:otherwise># F2FS_CHECK_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FS_ENCRYPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FS_ENCRYPTION=y</xsl:when>
			<xsl:otherwise># F2FS_FS_ENCRYPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_IO_TRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_IO_TRACE=y</xsl:when>
			<xsl:otherwise># F2FS_IO_TRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="F2FS_FAULT_INJECTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">F2FS_FAULT_INJECTION=y</xsl:when>
			<xsl:otherwise># F2FS_FAULT_INJECTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_DAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_DAX=y</xsl:when>
			<xsl:otherwise># FS_DAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_DAX_PMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_DAX_PMD=y</xsl:when>
			<xsl:otherwise># FS_DAX_PMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXPORTFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXPORTFS=y</xsl:when>
			<xsl:when test=". = 'module'">EXPORTFS=m</xsl:when>
			<xsl:otherwise># EXPORTFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXPORTFS_BLOCK_OPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXPORTFS_BLOCK_OPS=y</xsl:when>
			<xsl:otherwise># EXPORTFS_BLOCK_OPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FILE_LOCKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FILE_LOCKING=y</xsl:when>
			<xsl:otherwise># FILE_LOCKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MANDATORY_FILE_LOCKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MANDATORY_FILE_LOCKING=y</xsl:when>
			<xsl:otherwise># MANDATORY_FILE_LOCKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FS_ENCRYPTION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FS_ENCRYPTION=y</xsl:when>
			<xsl:when test=". = 'module'">FS_ENCRYPTION=m</xsl:when>
			<xsl:otherwise># FS_ENCRYPTION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSNOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSNOTIFY=y</xsl:when>
			<xsl:otherwise># FSNOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DNOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DNOTIFY=y</xsl:when>
			<xsl:otherwise># DNOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INOTIFY_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INOTIFY_USER=y</xsl:when>
			<xsl:otherwise># INOTIFY_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FANOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FANOTIFY=y</xsl:when>
			<xsl:otherwise># FANOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FANOTIFY_ACCESS_PERMISSIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FANOTIFY_ACCESS_PERMISSIONS=y</xsl:when>
			<xsl:otherwise># FANOTIFY_ACCESS_PERMISSIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTA=y</xsl:when>
			<xsl:otherwise># QUOTA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTA_NETLINK_INTERFACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTA_NETLINK_INTERFACE=y</xsl:when>
			<xsl:otherwise># QUOTA_NETLINK_INTERFACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRINT_QUOTA_WARNING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRINT_QUOTA_WARNING=y</xsl:when>
			<xsl:otherwise># PRINT_QUOTA_WARNING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTA_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTA_DEBUG=y</xsl:when>
			<xsl:otherwise># QUOTA_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTA_TREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTA_TREE=y</xsl:when>
			<xsl:when test=". = 'module'">QUOTA_TREE=m</xsl:when>
			<xsl:otherwise># QUOTA_TREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QFMT_V1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QFMT_V1=y</xsl:when>
			<xsl:when test=". = 'module'">QFMT_V1=m</xsl:when>
			<xsl:otherwise># QFMT_V1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QFMT_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QFMT_V2=y</xsl:when>
			<xsl:when test=". = 'module'">QFMT_V2=m</xsl:when>
			<xsl:otherwise># QFMT_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTACTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTACTL=y</xsl:when>
			<xsl:otherwise># QUOTACTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QUOTACTL_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QUOTACTL_COMPAT=y</xsl:when>
			<xsl:otherwise># QUOTACTL_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUTOFS4_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUTOFS4_FS=y</xsl:when>
			<xsl:when test=". = 'module'">AUTOFS4_FS=m</xsl:when>
			<xsl:otherwise># AUTOFS4_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FUSE_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FUSE_FS=y</xsl:when>
			<xsl:when test=". = 'module'">FUSE_FS=m</xsl:when>
			<xsl:otherwise># FUSE_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CUSE=y</xsl:when>
			<xsl:when test=". = 'module'">CUSE=m</xsl:when>
			<xsl:otherwise># CUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OVERLAY_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OVERLAY_FS=y</xsl:when>
			<xsl:when test=". = 'module'">OVERLAY_FS=m</xsl:when>
			<xsl:otherwise># OVERLAY_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSCACHE=y</xsl:when>
			<xsl:when test=". = 'module'">FSCACHE=m</xsl:when>
			<xsl:otherwise># FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSCACHE_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSCACHE_STATS=y</xsl:when>
			<xsl:otherwise># FSCACHE_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSCACHE_HISTOGRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSCACHE_HISTOGRAM=y</xsl:when>
			<xsl:otherwise># FSCACHE_HISTOGRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSCACHE_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSCACHE_DEBUG=y</xsl:when>
			<xsl:otherwise># FSCACHE_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FSCACHE_OBJECT_LIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FSCACHE_OBJECT_LIST=y</xsl:when>
			<xsl:otherwise># FSCACHE_OBJECT_LIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CACHEFILES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CACHEFILES=y</xsl:when>
			<xsl:when test=". = 'module'">CACHEFILES=m</xsl:when>
			<xsl:otherwise># CACHEFILES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CACHEFILES_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CACHEFILES_DEBUG=y</xsl:when>
			<xsl:otherwise># CACHEFILES_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CACHEFILES_HISTOGRAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CACHEFILES_HISTOGRAM=y</xsl:when>
			<xsl:otherwise># CACHEFILES_HISTOGRAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ISO9660_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ISO9660_FS=y</xsl:when>
			<xsl:when test=". = 'module'">ISO9660_FS=m</xsl:when>
			<xsl:otherwise># ISO9660_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JOLIET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JOLIET=y</xsl:when>
			<xsl:otherwise># JOLIET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZISOFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZISOFS=y</xsl:when>
			<xsl:otherwise># ZISOFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UDF_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UDF_FS=y</xsl:when>
			<xsl:when test=". = 'module'">UDF_FS=m</xsl:when>
			<xsl:otherwise># UDF_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UDF_NLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UDF_NLS=y</xsl:when>
			<xsl:otherwise># UDF_NLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FAT_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FAT_FS=y</xsl:when>
			<xsl:when test=". = 'module'">FAT_FS=m</xsl:when>
			<xsl:otherwise># FAT_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MSDOS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MSDOS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">MSDOS_FS=m</xsl:when>
			<xsl:otherwise># MSDOS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VFAT_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VFAT_FS=y</xsl:when>
			<xsl:when test=". = 'module'">VFAT_FS=m</xsl:when>
			<xsl:otherwise># VFAT_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FAT_DEFAULT_CODEPAGE">
		FAT_DEFAULT_CODEPAGE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FAT_DEFAULT_IOCHARSET">
		FAT_DEFAULT_IOCHARSET=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="FAT_DEFAULT_UTF8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FAT_DEFAULT_UTF8=y</xsl:when>
			<xsl:otherwise># FAT_DEFAULT_UTF8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">NTFS_FS=m</xsl:when>
			<xsl:otherwise># NTFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTFS_DEBUG=y</xsl:when>
			<xsl:otherwise># NTFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NTFS_RW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NTFS_RW=y</xsl:when>
			<xsl:otherwise># NTFS_RW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_FS=y</xsl:when>
			<xsl:otherwise># PROC_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_KCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_KCORE=y</xsl:when>
			<xsl:otherwise># PROC_KCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_VMCORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_VMCORE=y</xsl:when>
			<xsl:otherwise># PROC_VMCORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_SYSCTL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_SYSCTL=y</xsl:when>
			<xsl:otherwise># PROC_SYSCTL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_PAGE_MONITOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_PAGE_MONITOR=y</xsl:when>
			<xsl:otherwise># PROC_PAGE_MONITOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PROC_CHILDREN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PROC_CHILDREN=y</xsl:when>
			<xsl:otherwise># PROC_CHILDREN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KERNFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KERNFS=y</xsl:when>
			<xsl:otherwise># KERNFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSFS=y</xsl:when>
			<xsl:otherwise># SYSFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TMPFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TMPFS=y</xsl:when>
			<xsl:otherwise># TMPFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TMPFS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TMPFS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># TMPFS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TMPFS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TMPFS_XATTR=y</xsl:when>
			<xsl:otherwise># TMPFS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HUGETLBFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HUGETLBFS=y</xsl:when>
			<xsl:otherwise># HUGETLBFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HUGETLB_PAGE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HUGETLB_PAGE=y</xsl:when>
			<xsl:otherwise># HUGETLB_PAGE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CONFIGFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CONFIGFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">CONFIGFS_FS=m</xsl:when>
			<xsl:otherwise># CONFIGFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFIVAR_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFIVAR_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EFIVAR_FS=m</xsl:when>
			<xsl:otherwise># EFIVAR_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MISC_FILESYSTEMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MISC_FILESYSTEMS=y</xsl:when>
			<xsl:otherwise># MISC_FILESYSTEMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORANGEFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORANGEFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">ORANGEFS_FS=m</xsl:when>
			<xsl:otherwise># ORANGEFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">ADFS_FS=m</xsl:when>
			<xsl:otherwise># ADFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ADFS_FS_RW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ADFS_FS_RW=y</xsl:when>
			<xsl:otherwise># ADFS_FS_RW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">AFFS_FS=m</xsl:when>
			<xsl:otherwise># AFFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ECRYPT_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ECRYPT_FS=y</xsl:when>
			<xsl:when test=". = 'module'">ECRYPT_FS=m</xsl:when>
			<xsl:otherwise># ECRYPT_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ECRYPT_FS_MESSAGING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ECRYPT_FS_MESSAGING=y</xsl:when>
			<xsl:otherwise># ECRYPT_FS_MESSAGING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">HFS_FS=m</xsl:when>
			<xsl:otherwise># HFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HFSPLUS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HFSPLUS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">HFSPLUS_FS=m</xsl:when>
			<xsl:otherwise># HFSPLUS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HFSPLUS_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HFSPLUS_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># HFSPLUS_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BEFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BEFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">BEFS_FS=m</xsl:when>
			<xsl:otherwise># BEFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BEFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BEFS_DEBUG=y</xsl:when>
			<xsl:otherwise># BEFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">BFS_FS=m</xsl:when>
			<xsl:otherwise># BFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EFS_FS=m</xsl:when>
			<xsl:otherwise># EFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS=y</xsl:when>
			<xsl:when test=". = 'module'">JFFS2_FS=m</xsl:when>
			<xsl:otherwise># JFFS2_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS_DEBUG">
		JFFS2_FS_DEBUG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="JFFS2_FS_WRITEBUFFER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS_WRITEBUFFER=y</xsl:when>
			<xsl:otherwise># JFFS2_FS_WRITEBUFFER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS_WBUF_VERIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS_WBUF_VERIFY=y</xsl:when>
			<xsl:otherwise># JFFS2_FS_WBUF_VERIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_SUMMARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_SUMMARY=y</xsl:when>
			<xsl:otherwise># JFFS2_SUMMARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS_XATTR=y</xsl:when>
			<xsl:otherwise># JFFS2_FS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># JFFS2_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># JFFS2_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_COMPRESSION_OPTIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_COMPRESSION_OPTIONS=y</xsl:when>
			<xsl:otherwise># JFFS2_COMPRESSION_OPTIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_ZLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_ZLIB=y</xsl:when>
			<xsl:otherwise># JFFS2_ZLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_LZO=y</xsl:when>
			<xsl:otherwise># JFFS2_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_RTIME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_RTIME=y</xsl:when>
			<xsl:otherwise># JFFS2_RTIME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_RUBIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_RUBIN=y</xsl:when>
			<xsl:otherwise># JFFS2_RUBIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_CMODE_NONE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_CMODE_NONE=y</xsl:when>
			<xsl:otherwise># JFFS2_CMODE_NONE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_CMODE_PRIORITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_CMODE_PRIORITY=y</xsl:when>
			<xsl:otherwise># JFFS2_CMODE_PRIORITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_CMODE_SIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_CMODE_SIZE=y</xsl:when>
			<xsl:otherwise># JFFS2_CMODE_SIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="JFFS2_CMODE_FAVOURLZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">JFFS2_CMODE_FAVOURLZO=y</xsl:when>
			<xsl:otherwise># JFFS2_CMODE_FAVOURLZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UBIFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UBIFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">UBIFS_FS=m</xsl:when>
			<xsl:otherwise># UBIFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UBIFS_FS_ADVANCED_COMPR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UBIFS_FS_ADVANCED_COMPR=y</xsl:when>
			<xsl:otherwise># UBIFS_FS_ADVANCED_COMPR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UBIFS_FS_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UBIFS_FS_LZO=y</xsl:when>
			<xsl:otherwise># UBIFS_FS_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UBIFS_FS_ZLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UBIFS_FS_ZLIB=y</xsl:when>
			<xsl:otherwise># UBIFS_FS_ZLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UBIFS_ATIME_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UBIFS_ATIME_SUPPORT=y</xsl:when>
			<xsl:otherwise># UBIFS_ATIME_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOGFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOGFS=y</xsl:when>
			<xsl:when test=". = 'module'">LOGFS=m</xsl:when>
			<xsl:otherwise># LOGFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRAMFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRAMFS=y</xsl:when>
			<xsl:when test=". = 'module'">CRAMFS=m</xsl:when>
			<xsl:otherwise># CRAMFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS=y</xsl:when>
			<xsl:when test=". = 'module'">SQUASHFS=m</xsl:when>
			<xsl:otherwise># SQUASHFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_FILE_CACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_FILE_CACHE=y</xsl:when>
			<xsl:otherwise># SQUASHFS_FILE_CACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_FILE_DIRECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_FILE_DIRECT=y</xsl:when>
			<xsl:otherwise># SQUASHFS_FILE_DIRECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_DECOMP_SINGLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_DECOMP_SINGLE=y</xsl:when>
			<xsl:otherwise># SQUASHFS_DECOMP_SINGLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_DECOMP_MULTI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_DECOMP_MULTI=y</xsl:when>
			<xsl:otherwise># SQUASHFS_DECOMP_MULTI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_DECOMP_MULTI_PERCPU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_DECOMP_MULTI_PERCPU=y</xsl:when>
			<xsl:otherwise># SQUASHFS_DECOMP_MULTI_PERCPU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_XATTR=y</xsl:when>
			<xsl:otherwise># SQUASHFS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_ZLIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_ZLIB=y</xsl:when>
			<xsl:otherwise># SQUASHFS_ZLIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_LZ4=y</xsl:when>
			<xsl:otherwise># SQUASHFS_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_LZO=y</xsl:when>
			<xsl:otherwise># SQUASHFS_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_XZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_XZ=y</xsl:when>
			<xsl:otherwise># SQUASHFS_XZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_4K_DEVBLK_SIZE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_4K_DEVBLK_SIZE=y</xsl:when>
			<xsl:otherwise># SQUASHFS_4K_DEVBLK_SIZE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_EMBEDDED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SQUASHFS_EMBEDDED=y</xsl:when>
			<xsl:otherwise># SQUASHFS_EMBEDDED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SQUASHFS_FRAGMENT_CACHE_SIZE">
		SQUASHFS_FRAGMENT_CACHE_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="VXFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VXFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">VXFS_FS=m</xsl:when>
			<xsl:otherwise># VXFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MINIX_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MINIX_FS=y</xsl:when>
			<xsl:when test=". = 'module'">MINIX_FS=m</xsl:when>
			<xsl:otherwise># MINIX_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MINIX_FS_NATIVE_ENDIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MINIX_FS_NATIVE_ENDIAN=y</xsl:when>
			<xsl:otherwise># MINIX_FS_NATIVE_ENDIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MINIX_FS_BIG_ENDIAN_16BIT_INDEXED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MINIX_FS_BIG_ENDIAN_16BIT_INDEXED=y</xsl:when>
			<xsl:otherwise># MINIX_FS_BIG_ENDIAN_16BIT_INDEXED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OMFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OMFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">OMFS_FS=m</xsl:when>
			<xsl:otherwise># OMFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HPFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HPFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">HPFS_FS=m</xsl:when>
			<xsl:otherwise># HPFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QNX4FS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QNX4FS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">QNX4FS_FS=m</xsl:when>
			<xsl:otherwise># QNX4FS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QNX6FS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QNX6FS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">QNX6FS_FS=m</xsl:when>
			<xsl:otherwise># QNX6FS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="QNX6FS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">QNX6FS_DEBUG=y</xsl:when>
			<xsl:otherwise># QNX6FS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">ROMFS_FS=m</xsl:when>
			<xsl:otherwise># ROMFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_BACKED_BY_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_BACKED_BY_BLOCK=y</xsl:when>
			<xsl:otherwise># ROMFS_BACKED_BY_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_BACKED_BY_MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_BACKED_BY_MTD=y</xsl:when>
			<xsl:otherwise># ROMFS_BACKED_BY_MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_BACKED_BY_BOTH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_BACKED_BY_BOTH=y</xsl:when>
			<xsl:otherwise># ROMFS_BACKED_BY_BOTH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_ON_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_ON_BLOCK=y</xsl:when>
			<xsl:otherwise># ROMFS_ON_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROMFS_ON_MTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROMFS_ON_MTD=y</xsl:when>
			<xsl:otherwise># ROMFS_ON_MTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE=y</xsl:when>
			<xsl:when test=". = 'module'">PSTORE=m</xsl:when>
			<xsl:otherwise># PSTORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_ZLIB_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_ZLIB_COMPRESS=y</xsl:when>
			<xsl:otherwise># PSTORE_ZLIB_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_LZO_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_LZO_COMPRESS=y</xsl:when>
			<xsl:otherwise># PSTORE_LZO_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_LZ4_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_LZ4_COMPRESS=y</xsl:when>
			<xsl:otherwise># PSTORE_LZ4_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_CONSOLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_CONSOLE=y</xsl:when>
			<xsl:otherwise># PSTORE_CONSOLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_PMSG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_PMSG=y</xsl:when>
			<xsl:otherwise># PSTORE_PMSG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_FTRACE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_FTRACE=y</xsl:when>
			<xsl:otherwise># PSTORE_FTRACE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PSTORE_RAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PSTORE_RAM=y</xsl:when>
			<xsl:when test=". = 'module'">PSTORE_RAM=m</xsl:when>
			<xsl:otherwise># PSTORE_RAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSV_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSV_FS=y</xsl:when>
			<xsl:when test=". = 'module'">SYSV_FS=m</xsl:when>
			<xsl:otherwise># SYSV_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">UFS_FS=m</xsl:when>
			<xsl:otherwise># UFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UFS_FS_WRITE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UFS_FS_WRITE=y</xsl:when>
			<xsl:otherwise># UFS_FS_WRITE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UFS_DEBUG=y</xsl:when>
			<xsl:otherwise># UFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXOFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXOFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">EXOFS_FS=m</xsl:when>
			<xsl:otherwise># EXOFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EXOFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EXOFS_DEBUG=y</xsl:when>
			<xsl:otherwise># EXOFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">AUFS_FS=m</xsl:when>
			<xsl:otherwise># AUFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BRANCH_MAX_127">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BRANCH_MAX_127=y</xsl:when>
			<xsl:otherwise># AUFS_BRANCH_MAX_127 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BRANCH_MAX_511">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BRANCH_MAX_511=y</xsl:when>
			<xsl:otherwise># AUFS_BRANCH_MAX_511 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BRANCH_MAX_1023">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BRANCH_MAX_1023=y</xsl:when>
			<xsl:otherwise># AUFS_BRANCH_MAX_1023 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BRANCH_MAX_32767">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BRANCH_MAX_32767=y</xsl:when>
			<xsl:otherwise># AUFS_BRANCH_MAX_32767 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_SBILIST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_SBILIST=y</xsl:when>
			<xsl:otherwise># AUFS_SBILIST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_HNOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_HNOTIFY=y</xsl:when>
			<xsl:otherwise># AUFS_HNOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_HFSNOTIFY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_HFSNOTIFY=y</xsl:when>
			<xsl:otherwise># AUFS_HFSNOTIFY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_EXPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_EXPORT=y</xsl:when>
			<xsl:otherwise># AUFS_EXPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_INO_T_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_INO_T_64=y</xsl:when>
			<xsl:otherwise># AUFS_INO_T_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_XATTR=y</xsl:when>
			<xsl:otherwise># AUFS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_FHSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_FHSM=y</xsl:when>
			<xsl:otherwise># AUFS_FHSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_RDU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_RDU=y</xsl:when>
			<xsl:otherwise># AUFS_RDU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_SHWH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_SHWH=y</xsl:when>
			<xsl:otherwise># AUFS_SHWH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BR_RAMFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BR_RAMFS=y</xsl:when>
			<xsl:otherwise># AUFS_BR_RAMFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BR_FUSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BR_FUSE=y</xsl:when>
			<xsl:otherwise># AUFS_BR_FUSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_POLL=y</xsl:when>
			<xsl:otherwise># AUFS_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BR_HFSPLUS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BR_HFSPLUS=y</xsl:when>
			<xsl:otherwise># AUFS_BR_HFSPLUS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_BDEV_LOOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_BDEV_LOOP=y</xsl:when>
			<xsl:otherwise># AUFS_BDEV_LOOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_DEBUG=y</xsl:when>
			<xsl:otherwise># AUFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUFS_MAGIC_SYSRQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUFS_MAGIC_SYSRQ=y</xsl:when>
			<xsl:otherwise># AUFS_MAGIC_SYSRQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ORE=y</xsl:when>
			<xsl:when test=". = 'module'">ORE=m</xsl:when>
			<xsl:otherwise># ORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NETWORK_FILESYSTEMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NETWORK_FILESYSTEMS=y</xsl:when>
			<xsl:otherwise># NETWORK_FILESYSTEMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">NFS_FS=m</xsl:when>
			<xsl:otherwise># NFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V2=y</xsl:when>
			<xsl:when test=". = 'module'">NFS_V2=m</xsl:when>
			<xsl:otherwise># NFS_V2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V3=y</xsl:when>
			<xsl:when test=". = 'module'">NFS_V3=m</xsl:when>
			<xsl:otherwise># NFS_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V3_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V3_ACL=y</xsl:when>
			<xsl:otherwise># NFS_V3_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V4=y</xsl:when>
			<xsl:when test=". = 'module'">NFS_V4=m</xsl:when>
			<xsl:otherwise># NFS_V4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_SWAP=y</xsl:when>
			<xsl:otherwise># NFS_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V4_1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V4_1=y</xsl:when>
			<xsl:otherwise># NFS_V4_1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V4_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V4_2=y</xsl:when>
			<xsl:otherwise># NFS_V4_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNFS_FILE_LAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNFS_FILE_LAYOUT=y</xsl:when>
			<xsl:when test=". = 'module'">PNFS_FILE_LAYOUT=m</xsl:when>
			<xsl:otherwise># PNFS_FILE_LAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNFS_BLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNFS_BLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">PNFS_BLOCK=m</xsl:when>
			<xsl:otherwise># PNFS_BLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNFS_OBJLAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNFS_OBJLAYOUT=y</xsl:when>
			<xsl:when test=". = 'module'">PNFS_OBJLAYOUT=m</xsl:when>
			<xsl:otherwise># PNFS_OBJLAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PNFS_FLEXFILE_LAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PNFS_FLEXFILE_LAYOUT=y</xsl:when>
			<xsl:when test=". = 'module'">PNFS_FLEXFILE_LAYOUT=m</xsl:when>
			<xsl:otherwise># PNFS_FLEXFILE_LAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V4_1_IMPLEMENTATION_ID_DOMAIN">
		NFS_V4_1_IMPLEMENTATION_ID_DOMAIN=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NFS_V4_1_MIGRATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V4_1_MIGRATION=y</xsl:when>
			<xsl:otherwise># NFS_V4_1_MIGRATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_V4_SECURITY_LABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_V4_SECURITY_LABEL=y</xsl:when>
			<xsl:otherwise># NFS_V4_SECURITY_LABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ROOT_NFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ROOT_NFS=y</xsl:when>
			<xsl:otherwise># ROOT_NFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_FSCACHE=y</xsl:when>
			<xsl:otherwise># NFS_FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_USE_LEGACY_DNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_USE_LEGACY_DNS=y</xsl:when>
			<xsl:otherwise># NFS_USE_LEGACY_DNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_USE_KERNEL_DNS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_USE_KERNEL_DNS=y</xsl:when>
			<xsl:otherwise># NFS_USE_KERNEL_DNS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_DEBUG=y</xsl:when>
			<xsl:otherwise># NFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD=y</xsl:when>
			<xsl:when test=". = 'module'">NFSD=m</xsl:when>
			<xsl:otherwise># NFSD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_V2_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_V2_ACL=y</xsl:when>
			<xsl:otherwise># NFSD_V2_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_V3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_V3=y</xsl:when>
			<xsl:otherwise># NFSD_V3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_V3_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_V3_ACL=y</xsl:when>
			<xsl:otherwise># NFSD_V3_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_V4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_V4=y</xsl:when>
			<xsl:otherwise># NFSD_V4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_PNFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_PNFS=y</xsl:when>
			<xsl:otherwise># NFSD_PNFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_BLOCKLAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_BLOCKLAYOUT=y</xsl:when>
			<xsl:otherwise># NFSD_BLOCKLAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_SCSILAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_SCSILAYOUT=y</xsl:when>
			<xsl:otherwise># NFSD_SCSILAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_FLEXFILELAYOUT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_FLEXFILELAYOUT=y</xsl:when>
			<xsl:otherwise># NFSD_FLEXFILELAYOUT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFSD_V4_SECURITY_LABEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFSD_V4_SECURITY_LABEL=y</xsl:when>
			<xsl:otherwise># NFSD_V4_SECURITY_LABEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GRACE_PERIOD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GRACE_PERIOD=y</xsl:when>
			<xsl:when test=". = 'module'">GRACE_PERIOD=m</xsl:when>
			<xsl:otherwise># GRACE_PERIOD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOCKD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOCKD=y</xsl:when>
			<xsl:when test=". = 'module'">LOCKD=m</xsl:when>
			<xsl:otherwise># LOCKD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LOCKD_V4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LOCKD_V4=y</xsl:when>
			<xsl:otherwise># LOCKD_V4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_ACL_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_ACL_SUPPORT=y</xsl:when>
			<xsl:when test=". = 'module'">NFS_ACL_SUPPORT=m</xsl:when>
			<xsl:otherwise># NFS_ACL_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NFS_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NFS_COMMON=y</xsl:when>
			<xsl:otherwise># NFS_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC=y</xsl:when>
			<xsl:when test=". = 'module'">SUNRPC=m</xsl:when>
			<xsl:otherwise># SUNRPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC_GSS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC_GSS=y</xsl:when>
			<xsl:when test=". = 'module'">SUNRPC_GSS=m</xsl:when>
			<xsl:otherwise># SUNRPC_GSS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC_BACKCHANNEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC_BACKCHANNEL=y</xsl:when>
			<xsl:otherwise># SUNRPC_BACKCHANNEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC_SWAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC_SWAP=y</xsl:when>
			<xsl:otherwise># SUNRPC_SWAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RPCSEC_GSS_KRB5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RPCSEC_GSS_KRB5=y</xsl:when>
			<xsl:when test=". = 'module'">RPCSEC_GSS_KRB5=m</xsl:when>
			<xsl:otherwise># RPCSEC_GSS_KRB5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC_DEBUG=y</xsl:when>
			<xsl:otherwise># SUNRPC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SUNRPC_XPRT_RDMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SUNRPC_XPRT_RDMA=y</xsl:when>
			<xsl:when test=". = 'module'">SUNRPC_XPRT_RDMA=m</xsl:when>
			<xsl:otherwise># SUNRPC_XPRT_RDMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_FS=y</xsl:when>
			<xsl:when test=". = 'module'">CEPH_FS=m</xsl:when>
			<xsl:otherwise># CEPH_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_FSCACHE=y</xsl:when>
			<xsl:otherwise># CEPH_FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CEPH_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CEPH_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># CEPH_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS=y</xsl:when>
			<xsl:when test=". = 'module'">CIFS=m</xsl:when>
			<xsl:otherwise># CIFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_STATS=y</xsl:when>
			<xsl:otherwise># CIFS_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_STATS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_STATS2=y</xsl:when>
			<xsl:otherwise># CIFS_STATS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_WEAK_PW_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_WEAK_PW_HASH=y</xsl:when>
			<xsl:otherwise># CIFS_WEAK_PW_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_UPCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_UPCALL=y</xsl:when>
			<xsl:otherwise># CIFS_UPCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_XATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_XATTR=y</xsl:when>
			<xsl:otherwise># CIFS_XATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_POSIX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_POSIX=y</xsl:when>
			<xsl:otherwise># CIFS_POSIX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_ACL=y</xsl:when>
			<xsl:otherwise># CIFS_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_DEBUG=y</xsl:when>
			<xsl:otherwise># CIFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_DEBUG2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_DEBUG2=y</xsl:when>
			<xsl:otherwise># CIFS_DEBUG2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_DFS_UPCALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_DFS_UPCALL=y</xsl:when>
			<xsl:otherwise># CIFS_DFS_UPCALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_NFSD_EXPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_NFSD_EXPORT=y</xsl:when>
			<xsl:otherwise># CIFS_NFSD_EXPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_SMB2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_SMB2=y</xsl:when>
			<xsl:otherwise># CIFS_SMB2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_SMB311">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_SMB311=y</xsl:when>
			<xsl:otherwise># CIFS_SMB311 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CIFS_FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CIFS_FSCACHE=y</xsl:when>
			<xsl:otherwise># CIFS_FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCP_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCP_FS=y</xsl:when>
			<xsl:when test=". = 'module'">NCP_FS=m</xsl:when>
			<xsl:otherwise># NCP_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_PACKET_SIGNING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_PACKET_SIGNING=y</xsl:when>
			<xsl:otherwise># NCPFS_PACKET_SIGNING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_IOCTL_LOCKING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_IOCTL_LOCKING=y</xsl:when>
			<xsl:otherwise># NCPFS_IOCTL_LOCKING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_STRONG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_STRONG=y</xsl:when>
			<xsl:otherwise># NCPFS_STRONG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_NFS_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_NFS_NS=y</xsl:when>
			<xsl:otherwise># NCPFS_NFS_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_OS2_NS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_OS2_NS=y</xsl:when>
			<xsl:otherwise># NCPFS_OS2_NS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_SMALLDOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_SMALLDOS=y</xsl:when>
			<xsl:otherwise># NCPFS_SMALLDOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_NLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_NLS=y</xsl:when>
			<xsl:otherwise># NCPFS_NLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NCPFS_EXTRAS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NCPFS_EXTRAS=y</xsl:when>
			<xsl:otherwise># NCPFS_EXTRAS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CODA_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CODA_FS=y</xsl:when>
			<xsl:when test=". = 'module'">CODA_FS=m</xsl:when>
			<xsl:otherwise># CODA_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFS_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFS_FS=y</xsl:when>
			<xsl:when test=". = 'module'">AFS_FS=m</xsl:when>
			<xsl:otherwise># AFS_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFS_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFS_DEBUG=y</xsl:when>
			<xsl:otherwise># AFS_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AFS_FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AFS_FSCACHE=y</xsl:when>
			<xsl:otherwise># AFS_FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_9P_FS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">9P_FS=y</xsl:when>
			<xsl:when test=". = 'module'">9P_FS=m</xsl:when>
			<xsl:otherwise># 9P_FS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_9P_FSCACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">9P_FSCACHE=y</xsl:when>
			<xsl:otherwise># 9P_FSCACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_9P_FS_POSIX_ACL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">9P_FS_POSIX_ACL=y</xsl:when>
			<xsl:otherwise># 9P_FS_POSIX_ACL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_9P_FS_SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">9P_FS_SECURITY=y</xsl:when>
			<xsl:otherwise># 9P_FS_SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS=y</xsl:when>
			<xsl:when test=". = 'module'">NLS=m</xsl:when>
			<xsl:otherwise># NLS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_DEFAULT">
		NLS_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_437">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_437=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_437=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_437 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_737">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_737=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_737=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_737 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_775">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_775=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_775=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_775 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_850">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_850=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_850=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_850 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_852">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_852=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_852=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_852 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_855">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_855=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_855=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_855 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_857">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_857=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_857=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_857 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_860">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_860=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_860=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_860 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_861">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_861=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_861=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_861 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_862">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_862=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_862=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_862 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_863">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_863=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_863=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_863 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_864">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_864=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_864=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_864 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_865">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_865=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_865=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_865 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_866">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_866=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_866=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_866 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_869">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_869=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_869=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_869 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_936">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_936=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_936=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_936 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_950">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_950=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_950=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_950 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_932">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_932=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_932=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_932 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_949">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_949=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_949=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_949 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_874">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_874=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_874=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_874 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_8=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_8=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_1250">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_1250=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_1250=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_1250 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_CODEPAGE_1251">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_CODEPAGE_1251=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_CODEPAGE_1251=m</xsl:when>
			<xsl:otherwise># NLS_CODEPAGE_1251 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ASCII">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ASCII=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ASCII=m</xsl:when>
			<xsl:otherwise># NLS_ASCII is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_1=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_1=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_2=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_2=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_3=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_3=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_4=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_4=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_5=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_5=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_6=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_6=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_7=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_7=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_9">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_9=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_9=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_9 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_13">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_13=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_13=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_13 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_14">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_14=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_14=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_14 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_ISO8859_15">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_ISO8859_15=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_ISO8859_15=m</xsl:when>
			<xsl:otherwise># NLS_ISO8859_15 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_KOI8_R">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_KOI8_R=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_KOI8_R=m</xsl:when>
			<xsl:otherwise># NLS_KOI8_R is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_KOI8_U">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_KOI8_U=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_KOI8_U=m</xsl:when>
			<xsl:otherwise># NLS_KOI8_U is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_ROMAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_ROMAN=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_ROMAN=m</xsl:when>
			<xsl:otherwise># NLS_MAC_ROMAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_CELTIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_CELTIC=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_CELTIC=m</xsl:when>
			<xsl:otherwise># NLS_MAC_CELTIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_CENTEURO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_CENTEURO=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_CENTEURO=m</xsl:when>
			<xsl:otherwise># NLS_MAC_CENTEURO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_CROATIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_CROATIAN=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_CROATIAN=m</xsl:when>
			<xsl:otherwise># NLS_MAC_CROATIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_CYRILLIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_CYRILLIC=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_CYRILLIC=m</xsl:when>
			<xsl:otherwise># NLS_MAC_CYRILLIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_GAELIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_GAELIC=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_GAELIC=m</xsl:when>
			<xsl:otherwise># NLS_MAC_GAELIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_GREEK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_GREEK=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_GREEK=m</xsl:when>
			<xsl:otherwise># NLS_MAC_GREEK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_ICELAND">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_ICELAND=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_ICELAND=m</xsl:when>
			<xsl:otherwise># NLS_MAC_ICELAND is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_INUIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_INUIT=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_INUIT=m</xsl:when>
			<xsl:otherwise># NLS_MAC_INUIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_ROMANIAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_ROMANIAN=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_ROMANIAN=m</xsl:when>
			<xsl:otherwise># NLS_MAC_ROMANIAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_MAC_TURKISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_MAC_TURKISH=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_MAC_TURKISH=m</xsl:when>
			<xsl:otherwise># NLS_MAC_TURKISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLS_UTF8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLS_UTF8=y</xsl:when>
			<xsl:when test=". = 'module'">NLS_UTF8=m</xsl:when>
			<xsl:otherwise># NLS_UTF8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DLM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DLM=y</xsl:when>
			<xsl:when test=". = 'module'">DLM=m</xsl:when>
			<xsl:otherwise># DLM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DLM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DLM_DEBUG=y</xsl:when>
			<xsl:otherwise># DLM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRACE_IRQFLAGS_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRACE_IRQFLAGS_SUPPORT=y</xsl:when>
			<xsl:otherwise># TRACE_IRQFLAGS_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PRINTK_TIME">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PRINTK_TIME=y</xsl:when>
			<xsl:otherwise># PRINTK_TIME is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MESSAGE_LOGLEVEL_DEFAULT">
		MESSAGE_LOGLEVEL_DEFAULT=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BOOT_PRINTK_DELAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BOOT_PRINTK_DELAY=y</xsl:when>
			<xsl:otherwise># BOOT_PRINTK_DELAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DYNAMIC_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DYNAMIC_DEBUG=y</xsl:when>
			<xsl:otherwise># DYNAMIC_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_VERBOSE_BOOTUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_VERBOSE_BOOTUP=y</xsl:when>
			<xsl:otherwise># X86_VERBOSE_BOOTUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EARLY_PRINTK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EARLY_PRINTK=y</xsl:when>
			<xsl:otherwise># EARLY_PRINTK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EARLY_PRINTK_DBGP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EARLY_PRINTK_DBGP=y</xsl:when>
			<xsl:otherwise># EARLY_PRINTK_DBGP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EARLY_PRINTK_EFI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EARLY_PRINTK_EFI=y</xsl:when>
			<xsl:otherwise># EARLY_PRINTK_EFI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PTDUMP_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PTDUMP_CORE=y</xsl:when>
			<xsl:otherwise># X86_PTDUMP_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X86_PTDUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X86_PTDUMP=y</xsl:when>
			<xsl:when test=". = 'module'">X86_PTDUMP=m</xsl:when>
			<xsl:otherwise># X86_PTDUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_PGT_DUMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_PGT_DUMP=y</xsl:when>
			<xsl:otherwise># EFI_PGT_DUMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_RODATA_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_RODATA_TEST=y</xsl:when>
			<xsl:otherwise># DEBUG_RODATA_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_WX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_WX=y</xsl:when>
			<xsl:otherwise># DEBUG_WX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_SET_MODULE_RONX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_SET_MODULE_RONX=y</xsl:when>
			<xsl:otherwise># DEBUG_SET_MODULE_RONX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_NX_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_NX_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">DEBUG_NX_TEST=m</xsl:when>
			<xsl:otherwise># DEBUG_NX_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DOUBLEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DOUBLEFAULT=y</xsl:when>
			<xsl:otherwise># DOUBLEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEBUG_TLBFLUSH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEBUG_TLBFLUSH=y</xsl:when>
			<xsl:otherwise># DEBUG_TLBFLUSH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEYS=y</xsl:when>
			<xsl:otherwise># KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PERSISTENT_KEYRINGS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PERSISTENT_KEYRINGS=y</xsl:when>
			<xsl:otherwise># PERSISTENT_KEYRINGS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BIG_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BIG_KEYS=y</xsl:when>
			<xsl:otherwise># BIG_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TRUSTED_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TRUSTED_KEYS=y</xsl:when>
			<xsl:when test=". = 'module'">TRUSTED_KEYS=m</xsl:when>
			<xsl:otherwise># TRUSTED_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ENCRYPTED_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ENCRYPTED_KEYS=y</xsl:when>
			<xsl:when test=". = 'module'">ENCRYPTED_KEYS=m</xsl:when>
			<xsl:otherwise># ENCRYPTED_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KEY_DH_OPERATIONS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KEY_DH_OPERATIONS=y</xsl:when>
			<xsl:otherwise># KEY_DH_OPERATIONS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_DMESG_RESTRICT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_DMESG_RESTRICT=y</xsl:when>
			<xsl:otherwise># SECURITY_DMESG_RESTRICT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_PERF_EVENTS_RESTRICT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_PERF_EVENTS_RESTRICT=y</xsl:when>
			<xsl:otherwise># SECURITY_PERF_EVENTS_RESTRICT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY=y</xsl:when>
			<xsl:otherwise># SECURITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITYFS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITYFS=y</xsl:when>
			<xsl:otherwise># SECURITYFS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_NETWORK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_NETWORK=y</xsl:when>
			<xsl:otherwise># SECURITY_NETWORK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_NETWORK_XFRM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_NETWORK_XFRM=y</xsl:when>
			<xsl:otherwise># SECURITY_NETWORK_XFRM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_PATH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_PATH=y</xsl:when>
			<xsl:otherwise># SECURITY_PATH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEL_TXT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEL_TXT=y</xsl:when>
			<xsl:otherwise># INTEL_TXT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LSM_MMAP_MIN_ADDR">
		LSM_MMAP_MIN_ADDR=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="HAVE_HARDENED_USERCOPY_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_HARDENED_USERCOPY_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># HAVE_HARDENED_USERCOPY_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_HARDENED_USERCOPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_HARDENED_USERCOPY=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_HARDENED_USERCOPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HARDENED_USERCOPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HARDENED_USERCOPY=y</xsl:when>
			<xsl:otherwise># HARDENED_USERCOPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HARDENED_USERCOPY_PAGESPAN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HARDENED_USERCOPY_PAGESPAN=y</xsl:when>
			<xsl:otherwise># HARDENED_USERCOPY_PAGESPAN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_BOOTPARAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX_BOOTPARAM=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX_BOOTPARAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_BOOTPARAM_VALUE">
		SECURITY_SELINUX_BOOTPARAM_VALUE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_DISABLE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX_DISABLE=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX_DISABLE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_DEVELOP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX_DEVELOP=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX_DEVELOP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_AVC_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX_AVC_STATS=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX_AVC_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_CHECKREQPROT_VALUE">
		SECURITY_SELINUX_CHECKREQPROT_VALUE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_POLICYDB_VERSION_MAX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SELINUX_POLICYDB_VERSION_MAX=y</xsl:when>
			<xsl:otherwise># SECURITY_SELINUX_POLICYDB_VERSION_MAX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE">
		SECURITY_SELINUX_POLICYDB_VERSION_MAX_VALUE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_SMACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SMACK=y</xsl:when>
			<xsl:otherwise># SECURITY_SMACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SMACK_BRINGUP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SMACK_BRINGUP=y</xsl:when>
			<xsl:otherwise># SECURITY_SMACK_BRINGUP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_SMACK_NETFILTER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_SMACK_NETFILTER=y</xsl:when>
			<xsl:otherwise># SECURITY_SMACK_NETFILTER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_TOMOYO=y</xsl:when>
			<xsl:otherwise># SECURITY_TOMOYO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO_MAX_ACCEPT_ENTRY">
		SECURITY_TOMOYO_MAX_ACCEPT_ENTRY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO_MAX_AUDIT_LOG">
		SECURITY_TOMOYO_MAX_AUDIT_LOG=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO_OMIT_USERSPACE_LOADER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_TOMOYO_OMIT_USERSPACE_LOADER=y</xsl:when>
			<xsl:otherwise># SECURITY_TOMOYO_OMIT_USERSPACE_LOADER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO_POLICY_LOADER">
		SECURITY_TOMOYO_POLICY_LOADER=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_TOMOYO_ACTIVATION_TRIGGER">
		SECURITY_TOMOYO_ACTIVATION_TRIGGER=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_APPARMOR=y</xsl:when>
			<xsl:otherwise># SECURITY_APPARMOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR_BOOTPARAM_VALUE">
		SECURITY_APPARMOR_BOOTPARAM_VALUE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR_STATS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_APPARMOR_STATS=y</xsl:when>
			<xsl:otherwise># SECURITY_APPARMOR_STATS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR_UNCONFINED_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_APPARMOR_UNCONFINED_INIT=y</xsl:when>
			<xsl:otherwise># SECURITY_APPARMOR_UNCONFINED_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_APPARMOR_HASH=y</xsl:when>
			<xsl:otherwise># SECURITY_APPARMOR_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_APPARMOR_HASH_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_APPARMOR_HASH_DEFAULT=y</xsl:when>
			<xsl:otherwise># SECURITY_APPARMOR_HASH_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_LOADPIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_LOADPIN=y</xsl:when>
			<xsl:otherwise># SECURITY_LOADPIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_LOADPIN_ENABLED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_LOADPIN_ENABLED=y</xsl:when>
			<xsl:otherwise># SECURITY_LOADPIN_ENABLED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SECURITY_YAMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECURITY_YAMA=y</xsl:when>
			<xsl:otherwise># SECURITY_YAMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRITY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRITY=y</xsl:when>
			<xsl:otherwise># INTEGRITY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRITY_SIGNATURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRITY_SIGNATURE=y</xsl:when>
			<xsl:otherwise># INTEGRITY_SIGNATURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRITY_ASYMMETRIC_KEYS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRITY_ASYMMETRIC_KEYS=y</xsl:when>
			<xsl:otherwise># INTEGRITY_ASYMMETRIC_KEYS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRITY_TRUSTED_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRITY_TRUSTED_KEYRING=y</xsl:when>
			<xsl:otherwise># INTEGRITY_TRUSTED_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTEGRITY_AUDIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTEGRITY_AUDIT=y</xsl:when>
			<xsl:otherwise># INTEGRITY_AUDIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA=y</xsl:when>
			<xsl:otherwise># IMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_MEASURE_PCR_IDX">
		IMA_MEASURE_PCR_IDX=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IMA_LSM_RULES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_LSM_RULES=y</xsl:when>
			<xsl:otherwise># IMA_LSM_RULES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_TEMPLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_TEMPLATE=y</xsl:when>
			<xsl:otherwise># IMA_TEMPLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_NG_TEMPLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_NG_TEMPLATE=y</xsl:when>
			<xsl:otherwise># IMA_NG_TEMPLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_SIG_TEMPLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_SIG_TEMPLATE=y</xsl:when>
			<xsl:otherwise># IMA_SIG_TEMPLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_TEMPLATE">
		IMA_DEFAULT_TEMPLATE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_HASH_SHA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_DEFAULT_HASH_SHA1=y</xsl:when>
			<xsl:otherwise># IMA_DEFAULT_HASH_SHA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_HASH_SHA256">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_DEFAULT_HASH_SHA256=y</xsl:when>
			<xsl:otherwise># IMA_DEFAULT_HASH_SHA256 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_HASH_SHA512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_DEFAULT_HASH_SHA512=y</xsl:when>
			<xsl:otherwise># IMA_DEFAULT_HASH_SHA512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_HASH_WP512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_DEFAULT_HASH_WP512=y</xsl:when>
			<xsl:otherwise># IMA_DEFAULT_HASH_WP512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_DEFAULT_HASH">
		IMA_DEFAULT_HASH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IMA_WRITE_POLICY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_WRITE_POLICY=y</xsl:when>
			<xsl:otherwise># IMA_WRITE_POLICY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_READ_POLICY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_READ_POLICY=y</xsl:when>
			<xsl:otherwise># IMA_READ_POLICY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_APPRAISE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_APPRAISE=y</xsl:when>
			<xsl:otherwise># IMA_APPRAISE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_TRUSTED_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_TRUSTED_KEYRING=y</xsl:when>
			<xsl:otherwise># IMA_TRUSTED_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY=y</xsl:when>
			<xsl:otherwise># IMA_KEYRINGS_PERMIT_SIGNED_BY_BUILTIN_OR_SECONDARY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_BLACKLIST_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_BLACKLIST_KEYRING=y</xsl:when>
			<xsl:otherwise># IMA_BLACKLIST_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_LOAD_X509">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_LOAD_X509=y</xsl:when>
			<xsl:otherwise># IMA_LOAD_X509 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IMA_X509_PATH">
		IMA_X509_PATH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="IMA_APPRAISE_SIGNED_INIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IMA_APPRAISE_SIGNED_INIT=y</xsl:when>
			<xsl:otherwise># IMA_APPRAISE_SIGNED_INIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EVM=y</xsl:when>
			<xsl:otherwise># EVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVM_ATTR_FSUUID">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EVM_ATTR_FSUUID=y</xsl:when>
			<xsl:otherwise># EVM_ATTR_FSUUID is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVM_EXTRA_SMACK_XATTRS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EVM_EXTRA_SMACK_XATTRS=y</xsl:when>
			<xsl:otherwise># EVM_EXTRA_SMACK_XATTRS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVM_LOAD_X509">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EVM_LOAD_X509=y</xsl:when>
			<xsl:otherwise># EVM_LOAD_X509 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EVM_X509_PATH">
		EVM_X509_PATH=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY_SELINUX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_SECURITY_SELINUX=y</xsl:when>
			<xsl:otherwise># DEFAULT_SECURITY_SELINUX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY_SMACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_SECURITY_SMACK=y</xsl:when>
			<xsl:otherwise># DEFAULT_SECURITY_SMACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY_TOMOYO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_SECURITY_TOMOYO=y</xsl:when>
			<xsl:otherwise># DEFAULT_SECURITY_TOMOYO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY_APPARMOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_SECURITY_APPARMOR=y</xsl:when>
			<xsl:otherwise># DEFAULT_SECURITY_APPARMOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY_DAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DEFAULT_SECURITY_DAC=y</xsl:when>
			<xsl:otherwise># DEFAULT_SECURITY_DAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DEFAULT_SECURITY">
		DEFAULT_SECURITY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="XOR_BLOCKS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XOR_BLOCKS=y</xsl:when>
			<xsl:when test=". = 'module'">XOR_BLOCKS=m</xsl:when>
			<xsl:otherwise># XOR_BLOCKS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_CORE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_CORE=y</xsl:when>
			<xsl:when test=". = 'module'">ASYNC_CORE=m</xsl:when>
			<xsl:otherwise># ASYNC_CORE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_MEMCPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_MEMCPY=y</xsl:when>
			<xsl:when test=". = 'module'">ASYNC_MEMCPY=m</xsl:when>
			<xsl:otherwise># ASYNC_MEMCPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_XOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_XOR=y</xsl:when>
			<xsl:when test=". = 'module'">ASYNC_XOR=m</xsl:when>
			<xsl:otherwise># ASYNC_XOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_PQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_PQ=y</xsl:when>
			<xsl:when test=". = 'module'">ASYNC_PQ=m</xsl:when>
			<xsl:otherwise># ASYNC_PQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_RAID6_RECOV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_RAID6_RECOV=y</xsl:when>
			<xsl:when test=". = 'module'">ASYNC_RAID6_RECOV=m</xsl:when>
			<xsl:otherwise># ASYNC_RAID6_RECOV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_TX_DISABLE_PQ_VAL_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_TX_DISABLE_PQ_VAL_DMA=y</xsl:when>
			<xsl:otherwise># ASYNC_TX_DISABLE_PQ_VAL_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYNC_TX_DISABLE_XOR_VAL_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYNC_TX_DISABLE_XOR_VAL_DMA=y</xsl:when>
			<xsl:otherwise># ASYNC_TX_DISABLE_XOR_VAL_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO=m</xsl:when>
			<xsl:otherwise># CRYPTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_FIPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_FIPS=y</xsl:when>
			<xsl:otherwise># CRYPTO_FIPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ALGAPI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ALGAPI=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ALGAPI=m</xsl:when>
			<xsl:otherwise># CRYPTO_ALGAPI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ALGAPI2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ALGAPI2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ALGAPI2=m</xsl:when>
			<xsl:otherwise># CRYPTO_ALGAPI2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AEAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AEAD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AEAD=m</xsl:when>
			<xsl:otherwise># CRYPTO_AEAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AEAD2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AEAD2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AEAD2=m</xsl:when>
			<xsl:otherwise># CRYPTO_AEAD2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_BLKCIPHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_BLKCIPHER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_BLKCIPHER=m</xsl:when>
			<xsl:otherwise># CRYPTO_BLKCIPHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_BLKCIPHER2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_BLKCIPHER2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_BLKCIPHER2=m</xsl:when>
			<xsl:otherwise># CRYPTO_BLKCIPHER2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_HASH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_HASH=m</xsl:when>
			<xsl:otherwise># CRYPTO_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_HASH2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_HASH2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_HASH2=m</xsl:when>
			<xsl:otherwise># CRYPTO_HASH2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RNG=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RNG=m</xsl:when>
			<xsl:otherwise># CRYPTO_RNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RNG2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RNG2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RNG2=m</xsl:when>
			<xsl:otherwise># CRYPTO_RNG2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RNG_DEFAULT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RNG_DEFAULT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RNG_DEFAULT=m</xsl:when>
			<xsl:otherwise># CRYPTO_RNG_DEFAULT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AKCIPHER2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AKCIPHER2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AKCIPHER2=m</xsl:when>
			<xsl:otherwise># CRYPTO_AKCIPHER2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AKCIPHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AKCIPHER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AKCIPHER=m</xsl:when>
			<xsl:otherwise># CRYPTO_AKCIPHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_KPP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_KPP2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_KPP2=m</xsl:when>
			<xsl:otherwise># CRYPTO_KPP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_KPP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_KPP=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_KPP=m</xsl:when>
			<xsl:otherwise># CRYPTO_KPP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RSA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RSA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RSA=m</xsl:when>
			<xsl:otherwise># CRYPTO_RSA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DH=m</xsl:when>
			<xsl:otherwise># CRYPTO_DH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ECDH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ECDH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ECDH=m</xsl:when>
			<xsl:otherwise># CRYPTO_ECDH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MANAGER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MANAGER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MANAGER=m</xsl:when>
			<xsl:otherwise># CRYPTO_MANAGER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MANAGER2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MANAGER2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MANAGER2=m</xsl:when>
			<xsl:otherwise># CRYPTO_MANAGER2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MANAGER_DISABLE_TESTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MANAGER_DISABLE_TESTS=y</xsl:when>
			<xsl:otherwise># CRYPTO_MANAGER_DISABLE_TESTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GF128MUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GF128MUL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GF128MUL=m</xsl:when>
			<xsl:otherwise># CRYPTO_GF128MUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_NULL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_NULL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_NULL=m</xsl:when>
			<xsl:otherwise># CRYPTO_NULL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_NULL2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_NULL2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_NULL2=m</xsl:when>
			<xsl:otherwise># CRYPTO_NULL2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_PCRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_PCRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_PCRYPT=m</xsl:when>
			<xsl:otherwise># CRYPTO_PCRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_WORKQUEUE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_WORKQUEUE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_WORKQUEUE=m</xsl:when>
			<xsl:otherwise># CRYPTO_WORKQUEUE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRYPTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRYPTD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRYPTD=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRYPTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MCRYPTD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MCRYPTD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MCRYPTD=m</xsl:when>
			<xsl:otherwise># CRYPTO_MCRYPTD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AUTHENC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AUTHENC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AUTHENC=m</xsl:when>
			<xsl:otherwise># CRYPTO_AUTHENC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TEST=m</xsl:when>
			<xsl:otherwise># CRYPTO_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ABLK_HELPER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ABLK_HELPER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ABLK_HELPER=m</xsl:when>
			<xsl:otherwise># CRYPTO_ABLK_HELPER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GLUE_HELPER_X86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GLUE_HELPER_X86=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GLUE_HELPER_X86=m</xsl:when>
			<xsl:otherwise># CRYPTO_GLUE_HELPER_X86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ENGINE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ENGINE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ENGINE=m</xsl:when>
			<xsl:otherwise># CRYPTO_ENGINE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CCM=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CCM=m</xsl:when>
			<xsl:otherwise># CRYPTO_CCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GCM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GCM=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GCM=m</xsl:when>
			<xsl:otherwise># CRYPTO_GCM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CHACHA20POLY1305">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CHACHA20POLY1305=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CHACHA20POLY1305=m</xsl:when>
			<xsl:otherwise># CRYPTO_CHACHA20POLY1305 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SEQIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SEQIV=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SEQIV=m</xsl:when>
			<xsl:otherwise># CRYPTO_SEQIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ECHAINIV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ECHAINIV=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ECHAINIV=m</xsl:when>
			<xsl:otherwise># CRYPTO_ECHAINIV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CBC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CBC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CBC=m</xsl:when>
			<xsl:otherwise># CRYPTO_CBC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CTR=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CTR=m</xsl:when>
			<xsl:otherwise># CRYPTO_CTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CTS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CTS=m</xsl:when>
			<xsl:otherwise># CRYPTO_CTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ECB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ECB=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ECB=m</xsl:when>
			<xsl:otherwise># CRYPTO_ECB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_LRW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_LRW=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_LRW=m</xsl:when>
			<xsl:otherwise># CRYPTO_LRW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_PCBC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_PCBC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_PCBC=m</xsl:when>
			<xsl:otherwise># CRYPTO_PCBC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_XTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_XTS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_XTS=m</xsl:when>
			<xsl:otherwise># CRYPTO_XTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_KEYWRAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_KEYWRAP=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_KEYWRAP=m</xsl:when>
			<xsl:otherwise># CRYPTO_KEYWRAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CMAC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CMAC=m</xsl:when>
			<xsl:otherwise># CRYPTO_CMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_HMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_HMAC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_HMAC=m</xsl:when>
			<xsl:otherwise># CRYPTO_HMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_XCBC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_XCBC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_XCBC=m</xsl:when>
			<xsl:otherwise># CRYPTO_XCBC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_VMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_VMAC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_VMAC=m</xsl:when>
			<xsl:otherwise># CRYPTO_VMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32C=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32C=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32C_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32C_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32C_INTEL=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32C_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPT_CRC32C_VPMSUM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPT_CRC32C_VPMSUM=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPT_CRC32C_VPMSUM=m</xsl:when>
			<xsl:otherwise># CRYPT_CRC32C_VPMSUM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32C_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32C_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32C_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32C_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32_PCLMUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32_PCLMUL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32_PCLMUL=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32_PCLMUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRCT10DIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRCT10DIF=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRCT10DIF=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRCT10DIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRCT10DIF_PCLMUL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRCT10DIF_PCLMUL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRCT10DIF_PCLMUL=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRCT10DIF_PCLMUL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GHASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GHASH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GHASH=m</xsl:when>
			<xsl:otherwise># CRYPTO_GHASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_POLY1305">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_POLY1305=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_POLY1305=m</xsl:when>
			<xsl:otherwise># CRYPTO_POLY1305 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_POLY1305_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_POLY1305_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_POLY1305_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_POLY1305_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MD4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MD4=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MD4=m</xsl:when>
			<xsl:otherwise># CRYPTO_MD4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MD5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MD5=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MD5=m</xsl:when>
			<xsl:otherwise># CRYPTO_MD5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MD5_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MD5_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MD5_OCTEON=m</xsl:when>
			<xsl:otherwise># CRYPTO_MD5_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MD5_PPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MD5_PPC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MD5_PPC=m</xsl:when>
			<xsl:otherwise># CRYPTO_MD5_PPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MD5_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MD5_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MD5_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_MD5_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_MICHAEL_MIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_MICHAEL_MIC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_MICHAEL_MIC=m</xsl:when>
			<xsl:otherwise># CRYPTO_MICHAEL_MIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RMD128">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RMD128=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RMD128=m</xsl:when>
			<xsl:otherwise># CRYPTO_RMD128 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RMD160">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RMD160=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RMD160=m</xsl:when>
			<xsl:otherwise># CRYPTO_RMD160 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RMD256">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RMD256=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RMD256=m</xsl:when>
			<xsl:otherwise># CRYPTO_RMD256 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_RMD320">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_RMD320=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_RMD320=m</xsl:when>
			<xsl:otherwise># CRYPTO_RMD320 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_SSSE3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_SSSE3=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_SSSE3=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_SSSE3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_SSSE3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_SSSE3=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_SSSE3=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_SSSE3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512_SSSE3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512_SSSE3=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512_SSSE3=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512_SSSE3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_OCTEON=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_PPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_PPC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_PPC=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_PPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_PPC_SPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_PPC_SPE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_PPC_SPE=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_PPC_SPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_MB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_MB=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_MB=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_MB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_MB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_MB=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_MB=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_MB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512_MB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512_MB=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512_MB=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512_MB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_PPC_SPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_PPC_SPE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_PPC_SPE=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_PPC_SPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_OCTEON=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512_OCTEON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512_OCTEON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512_OCTEON=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512_OCTEON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA3">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA3=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA3=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA3 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TGR192">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TGR192=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TGR192=m</xsl:when>
			<xsl:otherwise># CRYPTO_TGR192 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_WP512">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_WP512=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_WP512=m</xsl:when>
			<xsl:otherwise># CRYPTO_WP512 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GHASH_CLMUL_NI_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GHASH_CLMUL_NI_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GHASH_CLMUL_NI_INTEL=m</xsl:when>
			<xsl:otherwise># CRYPTO_GHASH_CLMUL_NI_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_586=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_586=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_NI_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_NI_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_NI_INTEL=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_NI_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_PPC_SPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_PPC_SPE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_PPC_SPE=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_PPC_SPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ANUBIS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ANUBIS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ANUBIS=m</xsl:when>
			<xsl:otherwise># CRYPTO_ANUBIS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ARC4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ARC4=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ARC4=m</xsl:when>
			<xsl:otherwise># CRYPTO_ARC4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_BLOWFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_BLOWFISH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_BLOWFISH=m</xsl:when>
			<xsl:otherwise># CRYPTO_BLOWFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_BLOWFISH_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_BLOWFISH_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_BLOWFISH_COMMON=m</xsl:when>
			<xsl:otherwise># CRYPTO_BLOWFISH_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_BLOWFISH_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_BLOWFISH_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_BLOWFISH_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_BLOWFISH_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAMELLIA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAMELLIA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAMELLIA=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAMELLIA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAMELLIA_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAMELLIA_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAMELLIA_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAMELLIA_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAMELLIA_AESNI_AVX_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAMELLIA_AESNI_AVX_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAMELLIA_AESNI_AVX_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAMELLIA_AESNI_AVX_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAMELLIA_AESNI_AVX2_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAMELLIA_AESNI_AVX2_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAMELLIA_AESNI_AVX2_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAMELLIA_AESNI_AVX2_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAMELLIA_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAMELLIA_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAMELLIA_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAMELLIA_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAST_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAST_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAST_COMMON=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAST_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAST5">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAST5=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAST5=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAST5 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAST5_AVX_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAST5_AVX_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAST5_AVX_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAST5_AVX_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAST6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAST6=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAST6=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAST6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CAST6_AVX_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CAST6_AVX_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CAST6_AVX_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CAST6_AVX_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DES_SPARC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DES_SPARC64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DES_SPARC64=m</xsl:when>
			<xsl:otherwise># CRYPTO_DES_SPARC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DES3_EDE_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DES3_EDE_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DES3_EDE_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_DES3_EDE_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_FCRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_FCRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_FCRYPT=m</xsl:when>
			<xsl:otherwise># CRYPTO_FCRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_KHAZAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_KHAZAD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_KHAZAD=m</xsl:when>
			<xsl:otherwise># CRYPTO_KHAZAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SALSA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SALSA20=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SALSA20=m</xsl:when>
			<xsl:otherwise># CRYPTO_SALSA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SALSA20_586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SALSA20_586=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SALSA20_586=m</xsl:when>
			<xsl:otherwise># CRYPTO_SALSA20_586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SALSA20_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SALSA20_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SALSA20_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SALSA20_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CHACHA20">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CHACHA20=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CHACHA20=m</xsl:when>
			<xsl:otherwise># CRYPTO_CHACHA20 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CHACHA20_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CHACHA20_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CHACHA20_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_CHACHA20_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SEED">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SEED=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SEED=m</xsl:when>
			<xsl:otherwise># CRYPTO_SEED is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SERPENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SERPENT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SERPENT=m</xsl:when>
			<xsl:otherwise># CRYPTO_SERPENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SERPENT_SSE2_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SERPENT_SSE2_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SERPENT_SSE2_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SERPENT_SSE2_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SERPENT_SSE2_586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SERPENT_SSE2_586=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SERPENT_SSE2_586=m</xsl:when>
			<xsl:otherwise># CRYPTO_SERPENT_SSE2_586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SERPENT_AVX_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SERPENT_AVX_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SERPENT_AVX_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SERPENT_AVX_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SERPENT_AVX2_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SERPENT_AVX2_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SERPENT_AVX2_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_SERPENT_AVX2_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TEA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TEA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TEA=m</xsl:when>
			<xsl:otherwise># CRYPTO_TEA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH_COMMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH_COMMON=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH_COMMON=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH_COMMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH_586">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH_586=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH_586=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH_586 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH_X86_64_3WAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH_X86_64_3WAY=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH_X86_64_3WAY=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH_X86_64_3WAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_TWOFISH_AVX_X86_64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_TWOFISH_AVX_X86_64=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_TWOFISH_AVX_X86_64=m</xsl:when>
			<xsl:otherwise># CRYPTO_TWOFISH_AVX_X86_64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEFLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEFLATE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEFLATE=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEFLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_LZO=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_LZO=m</xsl:when>
			<xsl:otherwise># CRYPTO_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_842">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_842=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_842=m</xsl:when>
			<xsl:otherwise># CRYPTO_842 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_LZ4=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_LZ4=m</xsl:when>
			<xsl:otherwise># CRYPTO_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_LZ4HC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_LZ4HC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_LZ4HC=m</xsl:when>
			<xsl:otherwise># CRYPTO_LZ4HC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_ANSI_CPRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_ANSI_CPRNG=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_ANSI_CPRNG=m</xsl:when>
			<xsl:otherwise># CRYPTO_ANSI_CPRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DRBG_MENU">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DRBG_MENU=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DRBG_MENU=m</xsl:when>
			<xsl:otherwise># CRYPTO_DRBG_MENU is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DRBG_HMAC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DRBG_HMAC=y</xsl:when>
			<xsl:otherwise># CRYPTO_DRBG_HMAC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DRBG_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DRBG_HASH=y</xsl:when>
			<xsl:otherwise># CRYPTO_DRBG_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DRBG_CTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DRBG_CTR=y</xsl:when>
			<xsl:otherwise># CRYPTO_DRBG_CTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DRBG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DRBG=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DRBG=m</xsl:when>
			<xsl:otherwise># CRYPTO_DRBG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_JITTERENTROPY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_JITTERENTROPY=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_JITTERENTROPY=m</xsl:when>
			<xsl:otherwise># CRYPTO_JITTERENTROPY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER_API=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER_API=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER_API_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER_API_HASH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER_API_HASH=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER_API_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER_API_SKCIPHER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER_API_SKCIPHER=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER_API_SKCIPHER=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER_API_SKCIPHER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER_API_RNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER_API_RNG=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER_API_RNG=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER_API_RNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_USER_API_AEAD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_USER_API_AEAD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_USER_API_AEAD=m</xsl:when>
			<xsl:otherwise># CRYPTO_USER_API_AEAD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_HASH_INFO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_HASH_INFO=y</xsl:when>
			<xsl:otherwise># CRYPTO_HASH_INFO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_HW">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_HW=y</xsl:when>
			<xsl:otherwise># CRYPTO_HW is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_PADLOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_PADLOCK=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_PADLOCK=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_PADLOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_PADLOCK_AES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_PADLOCK_AES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_PADLOCK_AES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_PADLOCK_AES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_PADLOCK_SHA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_PADLOCK_SHA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_PADLOCK_SHA=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_PADLOCK_SHA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_GEODE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_GEODE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_GEODE=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_GEODE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZCRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZCRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">ZCRYPT=m</xsl:when>
			<xsl:otherwise># ZCRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA1_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA1_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA1_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA1_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA256_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA256_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA256_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA256_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_SHA512_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_SHA512_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_SHA512_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_SHA512_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DES_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DES_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DES_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_DES_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_AES_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_AES_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_AES_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_AES_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="S390_PRNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">S390_PRNG=y</xsl:when>
			<xsl:when test=". = 'module'">S390_PRNG=m</xsl:when>
			<xsl:otherwise># S390_PRNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_GHASH_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_GHASH_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_GHASH_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_GHASH_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_CRC32_S390">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_CRC32_S390=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_CRC32_S390=m</xsl:when>
			<xsl:otherwise># CRYPTO_CRC32_S390 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_MV_CESA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_MV_CESA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_MV_CESA=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_MV_CESA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_MARVELL_CESA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_MARVELL_CESA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_MARVELL_CESA=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_MARVELL_CESA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NIAGARA2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NIAGARA2=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_NIAGARA2=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NIAGARA2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_HIFN_795X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_HIFN_795X=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_HIFN_795X=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_HIFN_795X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_HIFN_795X_RNG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_HIFN_795X_RNG=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_HIFN_795X_RNG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_JR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_JR=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM_JR=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_JR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_RINGSIZE">
		CRYPTO_DEV_FSL_CAAM_RINGSIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_INTC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_INTC=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_INTC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD">
		CRYPTO_DEV_FSL_CAAM_INTC_COUNT_THLD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD">
		CRYPTO_DEV_FSL_CAAM_INTC_TIME_THLD=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_CRYPTO_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_CRYPTO_API=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM_CRYPTO_API=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_CRYPTO_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_AHASH_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_AHASH_API=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM_AHASH_API=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_AHASH_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_PKC_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_PKC_API=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM_PKC_API=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_PKC_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_RNG_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_RNG_API=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_FSL_CAAM_RNG_API=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_RNG_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_IMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_IMX=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_IMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_FSL_CAAM_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_FSL_CAAM_DEBUG=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_FSL_CAAM_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_TALITOS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_TALITOS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_TALITOS=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_TALITOS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_TALITOS1">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_TALITOS1=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_TALITOS1 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_TALITOS2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_TALITOS2=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_TALITOS2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_IXP4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_IXP4XX=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_IXP4XX=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_IXP4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_PPC4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_PPC4XX=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_PPC4XX=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_PPC4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HW_RANDOM_PPC4XX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HW_RANDOM_PPC4XX=y</xsl:when>
			<xsl:otherwise># HW_RANDOM_PPC4XX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_OMAP_SHAM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_OMAP_SHAM=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_OMAP_SHAM=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_OMAP_SHAM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_OMAP_AES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_OMAP_AES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_OMAP_AES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_OMAP_AES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_OMAP_DES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_OMAP_DES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_OMAP_DES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_OMAP_DES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_PICOXCELL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_PICOXCELL=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_PICOXCELL=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_PICOXCELL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_SAHARA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_SAHARA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_SAHARA=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_SAHARA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_MXC_SCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_MXC_SCC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_MXC_SCC=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_MXC_SCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_S5P">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_S5P=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_S5P=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_S5P is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NX=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NX_ENCRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NX_ENCRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_NX_ENCRYPT=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NX_ENCRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NX_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NX_COMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_NX_COMPRESS=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NX_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NX_COMPRESS_PSERIES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NX_COMPRESS_PSERIES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_NX_COMPRESS_PSERIES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NX_COMPRESS_PSERIES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_NX_COMPRESS_POWERNV">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_NX_COMPRESS_POWERNV=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_NX_COMPRESS_POWERNV=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_NX_COMPRESS_POWERNV is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_UX500">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_UX500=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_UX500=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_UX500 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_UX500_CRYP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_UX500_CRYP=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_UX500_CRYP=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_UX500_CRYP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_UX500_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_UX500_HASH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_UX500_HASH=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_UX500_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_UX500_DEBUG">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_UX500_DEBUG=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_UX500_DEBUG is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_BFIN_CRC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_BFIN_CRC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_BFIN_CRC=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_BFIN_CRC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_ATMEL_AES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_ATMEL_AES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_ATMEL_AES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_ATMEL_AES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_ATMEL_TDES">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_ATMEL_TDES=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_ATMEL_TDES=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_ATMEL_TDES is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_ATMEL_SHA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_ATMEL_SHA=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_ATMEL_SHA=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_ATMEL_SHA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_CCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_CCP=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_CCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_CCP_DD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_CCP_DD=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_CCP_DD=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_CCP_DD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_CCP_CRYPTO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_CCP_CRYPTO=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_CCP_CRYPTO=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_CCP_CRYPTO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_MXS_DCP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_MXS_DCP=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_MXS_DCP=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_MXS_DCP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_DH895xCC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_DH895xCC=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_DH895xCC=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_DH895xCC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_C3XXX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_C3XXX=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_C3XXX=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_C3XXX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_C62X">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_C62X=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_C62X=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_C62X is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_DH895xCCVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_DH895xCCVF=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_DH895xCCVF=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_DH895xCCVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_C3XXXVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_C3XXXVF=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_C3XXXVF=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_C3XXXVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QAT_C62XVF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QAT_C62XVF=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QAT_C62XVF=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QAT_C62XVF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_QCE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_QCE=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_QCE=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_QCE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_VMX">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_VMX=y</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_VMX is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_VMX_ENCRYPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_VMX_ENCRYPT=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_VMX_ENCRYPT=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_VMX_ENCRYPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_IMGTEC_HASH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_IMGTEC_HASH=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_IMGTEC_HASH=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_IMGTEC_HASH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_SUN4I_SS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_SUN4I_SS=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_SUN4I_SS=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_SUN4I_SS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRYPTO_DEV_ROCKCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRYPTO_DEV_ROCKCHIP=y</xsl:when>
			<xsl:when test=". = 'module'">CRYPTO_DEV_ROCKCHIP=m</xsl:when>
			<xsl:otherwise># CRYPTO_DEV_ROCKCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYMMETRIC_KEY_TYPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYMMETRIC_KEY_TYPE=y</xsl:when>
			<xsl:otherwise># ASYMMETRIC_KEY_TYPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASYMMETRIC_PUBLIC_KEY_SUBTYPE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASYMMETRIC_PUBLIC_KEY_SUBTYPE=y</xsl:when>
			<xsl:when test=". = 'module'">ASYMMETRIC_PUBLIC_KEY_SUBTYPE=m</xsl:when>
			<xsl:otherwise># ASYMMETRIC_PUBLIC_KEY_SUBTYPE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="X509_CERTIFICATE_PARSER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">X509_CERTIFICATE_PARSER=y</xsl:when>
			<xsl:when test=". = 'module'">X509_CERTIFICATE_PARSER=m</xsl:when>
			<xsl:otherwise># X509_CERTIFICATE_PARSER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PKCS7_MESSAGE_PARSER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PKCS7_MESSAGE_PARSER=y</xsl:when>
			<xsl:when test=". = 'module'">PKCS7_MESSAGE_PARSER=m</xsl:when>
			<xsl:otherwise># PKCS7_MESSAGE_PARSER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="PKCS7_TEST_KEY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">PKCS7_TEST_KEY=y</xsl:when>
			<xsl:when test=". = 'module'">PKCS7_TEST_KEY=m</xsl:when>
			<xsl:otherwise># PKCS7_TEST_KEY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIGNED_PE_FILE_VERIFICATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIGNED_PE_FILE_VERIFICATION=y</xsl:when>
			<xsl:otherwise># SIGNED_PE_FILE_VERIFICATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="EFI_SIGNATURE_LIST_PARSER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">EFI_SIGNATURE_LIST_PARSER=y</xsl:when>
			<xsl:otherwise># EFI_SIGNATURE_LIST_PARSER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MODULE_SIG_KEY">
		MODULE_SIG_KEY=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SYSTEM_TRUSTED_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSTEM_TRUSTED_KEYRING=y</xsl:when>
			<xsl:otherwise># SYSTEM_TRUSTED_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSTEM_TRUSTED_KEYS">
		SYSTEM_TRUSTED_KEYS=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SYSTEM_EXTRA_CERTIFICATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SYSTEM_EXTRA_CERTIFICATE=y</xsl:when>
			<xsl:otherwise># SYSTEM_EXTRA_CERTIFICATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SYSTEM_EXTRA_CERTIFICATE_SIZE">
		SYSTEM_EXTRA_CERTIFICATE_SIZE=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="SECONDARY_TRUSTED_KEYRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SECONDARY_TRUSTED_KEYRING=y</xsl:when>
			<xsl:otherwise># SECONDARY_TRUSTED_KEYRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM=y</xsl:when>
			<xsl:otherwise># HAVE_KVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_IRQCHIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_IRQCHIP=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_IRQCHIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_IRQFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_IRQFD=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_IRQFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_IRQ_ROUTING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_IRQ_ROUTING=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_IRQ_ROUTING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_EVENTFD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_EVENTFD=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_EVENTFD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_MMIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_MMIO=y</xsl:when>
			<xsl:otherwise># KVM_MMIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_ASYNC_PF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_ASYNC_PF=y</xsl:when>
			<xsl:otherwise># KVM_ASYNC_PF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_ASYNC_PF_SYNC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_ASYNC_PF_SYNC=y</xsl:when>
			<xsl:otherwise># KVM_ASYNC_PF_SYNC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_MSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_MSI=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_MSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_CPU_RELAX_INTERCEPT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_CPU_RELAX_INTERCEPT=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_CPU_RELAX_INTERCEPT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_VFIO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_VFIO=y</xsl:when>
			<xsl:otherwise># KVM_VFIO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_ARCH_TLB_FLUSH_ALL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_ARCH_TLB_FLUSH_ALL=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_ARCH_TLB_FLUSH_ALL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_INVALID_WAKEUPS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_INVALID_WAKEUPS=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_INVALID_WAKEUPS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_GENERIC_DIRTYLOG_READ_PROTECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_GENERIC_DIRTYLOG_READ_PROTECT=y</xsl:when>
			<xsl:otherwise># KVM_GENERIC_DIRTYLOG_READ_PROTECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_COMPAT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_COMPAT=y</xsl:when>
			<xsl:otherwise># KVM_COMPAT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_KVM_IRQ_BYPASS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_KVM_IRQ_BYPASS=y</xsl:when>
			<xsl:otherwise># HAVE_KVM_IRQ_BYPASS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VIRTUALIZATION">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VIRTUALIZATION=y</xsl:when>
			<xsl:otherwise># VIRTUALIZATION is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM=y</xsl:when>
			<xsl:when test=". = 'module'">KVM=m</xsl:when>
			<xsl:otherwise># KVM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_INTEL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_INTEL=y</xsl:when>
			<xsl:when test=". = 'module'">KVM_INTEL=m</xsl:when>
			<xsl:otherwise># KVM_INTEL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_AMD">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_AMD=y</xsl:when>
			<xsl:when test=". = 'module'">KVM_AMD=m</xsl:when>
			<xsl:otherwise># KVM_AMD is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_MMU_AUDIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_MMU_AUDIT=y</xsl:when>
			<xsl:otherwise># KVM_MMU_AUDIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="KVM_DEVICE_ASSIGNMENT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">KVM_DEVICE_ASSIGNMENT=y</xsl:when>
			<xsl:otherwise># KVM_DEVICE_ASSIGNMENT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_NET">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_NET=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST_NET=m</xsl:when>
			<xsl:otherwise># VHOST_NET is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_SCSI">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_SCSI=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST_SCSI=m</xsl:when>
			<xsl:otherwise># VHOST_SCSI is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_VSOCK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_VSOCK=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST_VSOCK=m</xsl:when>
			<xsl:otherwise># VHOST_VSOCK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST=y</xsl:when>
			<xsl:when test=". = 'module'">VHOST=m</xsl:when>
			<xsl:otherwise># VHOST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="VHOST_CROSS_ENDIAN_LEGACY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">VHOST_CROSS_ENDIAN_LEGACY=y</xsl:when>
			<xsl:otherwise># VHOST_CROSS_ENDIAN_LEGACY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LGUEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LGUEST=y</xsl:when>
			<xsl:when test=". = 'module'">LGUEST=m</xsl:when>
			<xsl:otherwise># LGUEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BINARY_PRINTF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BINARY_PRINTF=y</xsl:when>
			<xsl:otherwise># BINARY_PRINTF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RAID6_PQ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RAID6_PQ=y</xsl:when>
			<xsl:when test=". = 'module'">RAID6_PQ=m</xsl:when>
			<xsl:otherwise># RAID6_PQ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BITREVERSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BITREVERSE=y</xsl:when>
			<xsl:when test=". = 'module'">BITREVERSE=m</xsl:when>
			<xsl:otherwise># BITREVERSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAVE_ARCH_BITREVERSE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAVE_ARCH_BITREVERSE=y</xsl:when>
			<xsl:otherwise># HAVE_ARCH_BITREVERSE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RATIONAL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RATIONAL=y</xsl:when>
			<xsl:otherwise># RATIONAL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_STRNCPY_FROM_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_STRNCPY_FROM_USER=y</xsl:when>
			<xsl:otherwise># GENERIC_STRNCPY_FROM_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_STRNLEN_USER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_STRNLEN_USER=y</xsl:when>
			<xsl:otherwise># GENERIC_STRNLEN_USER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_NET_UTILS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_NET_UTILS=y</xsl:when>
			<xsl:otherwise># GENERIC_NET_UTILS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_FIND_FIRST_BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_FIND_FIRST_BIT=y</xsl:when>
			<xsl:otherwise># GENERIC_FIND_FIRST_BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NO_GENERIC_PCI_IOPORT_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NO_GENERIC_PCI_IOPORT_MAP=y</xsl:when>
			<xsl:otherwise># NO_GENERIC_PCI_IOPORT_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_PCI_IOMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_PCI_IOMAP=y</xsl:when>
			<xsl:otherwise># GENERIC_PCI_IOMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IOMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IOMAP=y</xsl:when>
			<xsl:otherwise># GENERIC_IOMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_IO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_IO=y</xsl:when>
			<xsl:otherwise># GENERIC_IO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STMP_DEVICE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STMP_DEVICE=y</xsl:when>
			<xsl:otherwise># STMP_DEVICE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_USE_CMPXCHG_LOCKREF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_USE_CMPXCHG_LOCKREF=y</xsl:when>
			<xsl:otherwise># ARCH_USE_CMPXCHG_LOCKREF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_FAST_MULTIPLIER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_FAST_MULTIPLIER=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_FAST_MULTIPLIER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC_CCITT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC_CCITT=y</xsl:when>
			<xsl:when test=". = 'module'">CRC_CCITT=m</xsl:when>
			<xsl:otherwise># CRC_CCITT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC16=y</xsl:when>
			<xsl:when test=". = 'module'">CRC16=m</xsl:when>
			<xsl:otherwise># CRC16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC_T10DIF">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC_T10DIF=y</xsl:when>
			<xsl:when test=". = 'module'">CRC_T10DIF=m</xsl:when>
			<xsl:otherwise># CRC_T10DIF is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC_ITU_T">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC_ITU_T=y</xsl:when>
			<xsl:when test=". = 'module'">CRC_ITU_T=m</xsl:when>
			<xsl:otherwise># CRC_ITU_T is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32=y</xsl:when>
			<xsl:when test=". = 'module'">CRC32=m</xsl:when>
			<xsl:otherwise># CRC32 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32_SELFTEST=y</xsl:when>
			<xsl:otherwise># CRC32_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32_SLICEBY8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32_SLICEBY8=y</xsl:when>
			<xsl:otherwise># CRC32_SLICEBY8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32_SLICEBY4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32_SLICEBY4=y</xsl:when>
			<xsl:otherwise># CRC32_SLICEBY4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32_SARWATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32_SARWATE=y</xsl:when>
			<xsl:otherwise># CRC32_SARWATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC32_BIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC32_BIT=y</xsl:when>
			<xsl:otherwise># CRC32_BIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC7">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC7=y</xsl:when>
			<xsl:when test=". = 'module'">CRC7=m</xsl:when>
			<xsl:otherwise># CRC7 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBCRC32C">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBCRC32C=y</xsl:when>
			<xsl:when test=". = 'module'">LIBCRC32C=m</xsl:when>
			<xsl:otherwise># LIBCRC32C is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CRC8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CRC8=y</xsl:when>
			<xsl:when test=". = 'module'">CRC8=m</xsl:when>
			<xsl:otherwise># CRC8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_GENERIC=y</xsl:when>
			<xsl:otherwise># AUDIT_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_ARCH_COMPAT_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_ARCH_COMPAT_GENERIC=y</xsl:when>
			<xsl:otherwise># AUDIT_ARCH_COMPAT_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="AUDIT_COMPAT_GENERIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">AUDIT_COMPAT_GENERIC=y</xsl:when>
			<xsl:otherwise># AUDIT_COMPAT_GENERIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RANDOM32_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RANDOM32_SELFTEST=y</xsl:when>
			<xsl:otherwise># RANDOM32_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_842_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">842_COMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">842_COMPRESS=m</xsl:when>
			<xsl:otherwise># 842_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="_842_DECOMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">842_DECOMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">842_DECOMPRESS=m</xsl:when>
			<xsl:otherwise># 842_DECOMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZLIB_INFLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZLIB_INFLATE=y</xsl:when>
			<xsl:when test=". = 'module'">ZLIB_INFLATE=m</xsl:when>
			<xsl:otherwise># ZLIB_INFLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ZLIB_DEFLATE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ZLIB_DEFLATE=y</xsl:when>
			<xsl:when test=". = 'module'">ZLIB_DEFLATE=m</xsl:when>
			<xsl:otherwise># ZLIB_DEFLATE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LZO_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LZO_COMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">LZO_COMPRESS=m</xsl:when>
			<xsl:otherwise># LZO_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LZO_DECOMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LZO_DECOMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">LZO_DECOMPRESS=m</xsl:when>
			<xsl:otherwise># LZO_DECOMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LZ4_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LZ4_COMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">LZ4_COMPRESS=m</xsl:when>
			<xsl:otherwise># LZ4_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LZ4HC_COMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LZ4HC_COMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">LZ4HC_COMPRESS=m</xsl:when>
			<xsl:otherwise># LZ4HC_COMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LZ4_DECOMPRESS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LZ4_DECOMPRESS=y</xsl:when>
			<xsl:when test=". = 'module'">LZ4_DECOMPRESS=m</xsl:when>
			<xsl:otherwise># LZ4_DECOMPRESS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC=y</xsl:when>
			<xsl:when test=". = 'module'">XZ_DEC=m</xsl:when>
			<xsl:otherwise># XZ_DEC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_X86">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_X86=y</xsl:when>
			<xsl:otherwise># XZ_DEC_X86 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_POWERPC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_POWERPC=y</xsl:when>
			<xsl:otherwise># XZ_DEC_POWERPC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_IA64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_IA64=y</xsl:when>
			<xsl:otherwise># XZ_DEC_IA64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_ARM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_ARM=y</xsl:when>
			<xsl:otherwise># XZ_DEC_ARM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_ARMTHUMB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_ARMTHUMB=y</xsl:when>
			<xsl:otherwise># XZ_DEC_ARMTHUMB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_SPARC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_SPARC=y</xsl:when>
			<xsl:otherwise># XZ_DEC_SPARC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_BCJ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_BCJ=y</xsl:when>
			<xsl:otherwise># XZ_DEC_BCJ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="XZ_DEC_TEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">XZ_DEC_TEST=y</xsl:when>
			<xsl:when test=". = 'module'">XZ_DEC_TEST=m</xsl:when>
			<xsl:otherwise># XZ_DEC_TEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_GZIP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_GZIP=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_GZIP=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_GZIP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_BZIP2">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_BZIP2=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_BZIP2=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_BZIP2 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_LZMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_LZMA=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_LZMA=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_LZMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_XZ">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_XZ=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_XZ=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_XZ is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_LZO">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_LZO=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_LZO=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_LZO is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DECOMPRESS_LZ4">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DECOMPRESS_LZ4=y</xsl:when>
			<xsl:when test=". = 'module'">DECOMPRESS_LZ4=m</xsl:when>
			<xsl:otherwise># DECOMPRESS_LZ4 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_ALLOCATOR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_ALLOCATOR=y</xsl:when>
			<xsl:otherwise># GENERIC_ALLOCATOR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REED_SOLOMON">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REED_SOLOMON=y</xsl:when>
			<xsl:when test=". = 'module'">REED_SOLOMON=m</xsl:when>
			<xsl:otherwise># REED_SOLOMON is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REED_SOLOMON_ENC8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REED_SOLOMON_ENC8=y</xsl:when>
			<xsl:otherwise># REED_SOLOMON_ENC8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REED_SOLOMON_DEC8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REED_SOLOMON_DEC8=y</xsl:when>
			<xsl:otherwise># REED_SOLOMON_DEC8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REED_SOLOMON_ENC16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REED_SOLOMON_ENC16=y</xsl:when>
			<xsl:otherwise># REED_SOLOMON_ENC16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="REED_SOLOMON_DEC16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">REED_SOLOMON_DEC16=y</xsl:when>
			<xsl:otherwise># REED_SOLOMON_DEC16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCH=y</xsl:when>
			<xsl:when test=". = 'module'">BCH=m</xsl:when>
			<xsl:otherwise># BCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCH_CONST_PARAMS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BCH_CONST_PARAMS=y</xsl:when>
			<xsl:otherwise># BCH_CONST_PARAMS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BCH_CONST_M">
		BCH_CONST_M=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="BCH_CONST_T">
		BCH_CONST_T=
		<xsl:value-of select="."/>
	</xsl:template>
	<xsl:template match="TEXTSEARCH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEXTSEARCH=y</xsl:when>
			<xsl:otherwise># TEXTSEARCH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEXTSEARCH_KMP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEXTSEARCH_KMP=y</xsl:when>
			<xsl:when test=". = 'module'">TEXTSEARCH_KMP=m</xsl:when>
			<xsl:otherwise># TEXTSEARCH_KMP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEXTSEARCH_BM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEXTSEARCH_BM=y</xsl:when>
			<xsl:when test=". = 'module'">TEXTSEARCH_BM=m</xsl:when>
			<xsl:otherwise># TEXTSEARCH_BM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="TEXTSEARCH_FSM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">TEXTSEARCH_FSM=y</xsl:when>
			<xsl:when test=". = 'module'">TEXTSEARCH_FSM=m</xsl:when>
			<xsl:otherwise># TEXTSEARCH_FSM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="BTREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">BTREE=y</xsl:when>
			<xsl:otherwise># BTREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="INTERVAL_TREE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">INTERVAL_TREE=y</xsl:when>
			<xsl:otherwise># INTERVAL_TREE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="RADIX_TREE_MULTIORDER">
		<xsl:choose>
			<xsl:when test=". = 'yes'">RADIX_TREE_MULTIORDER=y</xsl:when>
			<xsl:otherwise># RADIX_TREE_MULTIORDER is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ASSOCIATIVE_ARRAY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ASSOCIATIVE_ARRAY=y</xsl:when>
			<xsl:otherwise># ASSOCIATIVE_ARRAY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAS_IOMEM">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAS_IOMEM=y</xsl:when>
			<xsl:otherwise># HAS_IOMEM is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAS_IOPORT_MAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAS_IOPORT_MAP=y</xsl:when>
			<xsl:otherwise># HAS_IOPORT_MAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="HAS_DMA">
		<xsl:choose>
			<xsl:when test=". = 'yes'">HAS_DMA=y</xsl:when>
			<xsl:otherwise># HAS_DMA is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CHECK_SIGNATURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CHECK_SIGNATURE=y</xsl:when>
			<xsl:otherwise># CHECK_SIGNATURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPUMASK_OFFSTACK">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPUMASK_OFFSTACK=y</xsl:when>
			<xsl:otherwise># CPUMASK_OFFSTACK is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CPU_RMAP">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CPU_RMAP=y</xsl:when>
			<xsl:otherwise># CPU_RMAP is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DQL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DQL=y</xsl:when>
			<xsl:otherwise># DQL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GLOB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GLOB=y</xsl:when>
			<xsl:otherwise># GLOB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GLOB_SELFTEST">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GLOB_SELFTEST=y</xsl:when>
			<xsl:otherwise># GLOB_SELFTEST is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="NLATTR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">NLATTR=y</xsl:when>
			<xsl:otherwise># NLATTR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="GENERIC_ATOMIC64">
		<xsl:choose>
			<xsl:when test=". = 'yes'">GENERIC_ATOMIC64=y</xsl:when>
			<xsl:otherwise># GENERIC_ATOMIC64 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_ATOMIC64_DEC_IF_POSITIVE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LRU_CACHE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LRU_CACHE=y</xsl:when>
			<xsl:when test=". = 'module'">LRU_CACHE=m</xsl:when>
			<xsl:otherwise># LRU_CACHE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CLZ_TAB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CLZ_TAB=y</xsl:when>
			<xsl:otherwise># CLZ_TAB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="CORDIC">
		<xsl:choose>
			<xsl:when test=". = 'yes'">CORDIC=y</xsl:when>
			<xsl:when test=". = 'module'">CORDIC=m</xsl:when>
			<xsl:otherwise># CORDIC is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="DDR">
		<xsl:choose>
			<xsl:when test=". = 'yes'">DDR=y</xsl:when>
			<xsl:otherwise># DDR is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="IRQ_POLL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">IRQ_POLL=y</xsl:when>
			<xsl:otherwise># IRQ_POLL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="MPILIB">
		<xsl:choose>
			<xsl:when test=". = 'yes'">MPILIB=y</xsl:when>
			<xsl:when test=". = 'module'">MPILIB=m</xsl:when>
			<xsl:otherwise># MPILIB is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SIGNATURE">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SIGNATURE=y</xsl:when>
			<xsl:when test=". = 'module'">SIGNATURE=m</xsl:when>
			<xsl:otherwise># SIGNATURE is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="LIBFDT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">LIBFDT=y</xsl:when>
			<xsl:otherwise># LIBFDT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="OID_REGISTRY">
		<xsl:choose>
			<xsl:when test=". = 'yes'">OID_REGISTRY=y</xsl:when>
			<xsl:when test=". = 'module'">OID_REGISTRY=m</xsl:when>
			<xsl:otherwise># OID_REGISTRY is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="UCS2_STRING">
		<xsl:choose>
			<xsl:when test=". = 'yes'">UCS2_STRING=y</xsl:when>
			<xsl:when test=". = 'module'">UCS2_STRING=m</xsl:when>
			<xsl:otherwise># UCS2_STRING is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_SUPPORT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_SUPPORT=y</xsl:when>
			<xsl:when test=". = 'module'">FONT_SUPPORT=m</xsl:when>
			<xsl:otherwise># FONT_SUPPORT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONTS">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONTS=y</xsl:when>
			<xsl:otherwise># FONTS is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_8x8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_8x8=y</xsl:when>
			<xsl:otherwise># FONT_8x8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_8x16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_8x16=y</xsl:when>
			<xsl:otherwise># FONT_8x16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_6x11">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_6x11=y</xsl:when>
			<xsl:otherwise># FONT_6x11 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_7x14">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_7x14=y</xsl:when>
			<xsl:otherwise># FONT_7x14 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_PEARL_8x8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_PEARL_8x8=y</xsl:when>
			<xsl:otherwise># FONT_PEARL_8x8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_ACORN_8x8">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_ACORN_8x8=y</xsl:when>
			<xsl:otherwise># FONT_ACORN_8x8 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_MINI_4x6">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_MINI_4x6=y</xsl:when>
			<xsl:otherwise># FONT_MINI_4x6 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_6x10">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_6x10=y</xsl:when>
			<xsl:otherwise># FONT_6x10 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_SUN8x16">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_SUN8x16=y</xsl:when>
			<xsl:otherwise># FONT_SUN8x16 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_SUN12x22">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_SUN12x22=y</xsl:when>
			<xsl:otherwise># FONT_SUN12x22 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_10x18">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_10x18=y</xsl:when>
			<xsl:otherwise># FONT_10x18 is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="FONT_AUTOSELECT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">FONT_AUTOSELECT=y</xsl:when>
			<xsl:otherwise># FONT_AUTOSELECT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SG_SPLIT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SG_SPLIT=y</xsl:when>
			<xsl:otherwise># SG_SPLIT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="SG_POOL">
		<xsl:choose>
			<xsl:when test=". = 'yes'">SG_POOL=y</xsl:when>
			<xsl:otherwise># SG_POOL is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_SG_CHAIN">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_SG_CHAIN=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_SG_CHAIN is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_PMEM_API">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_PMEM_API=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_PMEM_API is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="ARCH_HAS_MMIO_FLUSH">
		<xsl:choose>
			<xsl:when test=". = 'yes'">ARCH_HAS_MMIO_FLUSH=y</xsl:when>
			<xsl:otherwise># ARCH_HAS_MMIO_FLUSH is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:template match="STACKDEPOT">
		<xsl:choose>
			<xsl:when test=". = 'yes'">STACKDEPOT=y</xsl:when>
			<xsl:otherwise># STACKDEPOT is not set</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
</xsl:stylesheet>
